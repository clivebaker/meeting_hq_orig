(() => {
  // app/javascript/appxxx.js
  !function() {
    var t = { 5927: function(t2, e2, n2) {
      "use strict";
      var i;
      function a(t3) {
        return (a = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(t4) {
          return typeof t4;
        } : function(t4) {
          return t4 && typeof Symbol == "function" && t4.constructor === Symbol && t4 !== Symbol.prototype ? "symbol" : typeof t4;
        })(t3);
      }
      function r(t3, e3) {
        if (!(t3 instanceof e3))
          throw new TypeError("Cannot call a class as a function");
      }
      function o(t3, e3) {
        for (var n3 = 0; n3 < e3.length; n3++) {
          var i2 = e3[n3];
          i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t3, i2.key, i2);
        }
      }
      function s(t3, e3, n3) {
        return e3 && o(t3.prototype, e3), n3 && o(t3, n3), t3;
      }
      function l(t3, e3, n3) {
        return e3 in t3 ? Object.defineProperty(t3, e3, { value: n3, enumerable: true, configurable: true, writable: true }) : t3[e3] = n3, t3;
      }
      function c(t3, e3) {
        var n3 = Object.keys(t3);
        if (Object.getOwnPropertySymbols) {
          var i2 = Object.getOwnPropertySymbols(t3);
          e3 && (i2 = i2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
          })), n3.push.apply(n3, i2);
        }
        return n3;
      }
      function d(t3) {
        for (var e3 = 1; e3 < arguments.length; e3++) {
          var n3 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? c(Object(n3), true).forEach(function(e4) {
            l(t3, e4, n3[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n3)) : c(Object(n3)).forEach(function(e4) {
            Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n3, e4));
          });
        }
        return t3;
      }
      function u(t3, e3) {
        if (typeof e3 != "function" && e3 !== null)
          throw new TypeError("Super expression must either be null or a function");
        t3.prototype = Object.create(e3 && e3.prototype, { constructor: { value: t3, writable: true, configurable: true } }), e3 && p(t3, e3);
      }
      function h(t3) {
        return (h = Object.setPrototypeOf ? Object.getPrototypeOf : function(t4) {
          return t4.__proto__ || Object.getPrototypeOf(t4);
        })(t3);
      }
      function p(t3, e3) {
        return (p = Object.setPrototypeOf || function(t4, e4) {
          return t4.__proto__ = e4, t4;
        })(t3, e3);
      }
      function f(t3, e3) {
        return !e3 || typeof e3 != "object" && typeof e3 != "function" ? function(t4) {
          if (t4 === void 0)
            throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
          return t4;
        }(t3) : e3;
      }
      function g(t3) {
        var e3 = function() {
          if (typeof Reflect == "undefined" || !Reflect.construct)
            return false;
          if (Reflect.construct.sham)
            return false;
          if (typeof Proxy == "function")
            return true;
          try {
            return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
            })), true;
          } catch (t4) {
            return false;
          }
        }();
        return function() {
          var n3, i2 = h(t3);
          if (e3) {
            var a2 = h(this).constructor;
            n3 = Reflect.construct(i2, arguments, a2);
          } else
            n3 = i2.apply(this, arguments);
          return f(this, n3);
        };
      }
      function m(t3) {
        return function(t4) {
          if (Array.isArray(t4))
            return v(t4);
        }(t3) || function(t4) {
          if (typeof Symbol != "undefined" && Symbol.iterator in Object(t4))
            return Array.from(t4);
        }(t3) || function(t4, e3) {
          if (t4) {
            if (typeof t4 == "string")
              return v(t4, e3);
            var n3 = Object.prototype.toString.call(t4).slice(8, -1);
            return n3 === "Object" && t4.constructor && (n3 = t4.constructor.name), n3 === "Map" || n3 === "Set" ? Array.from(t4) : n3 === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n3) ? v(t4, e3) : void 0;
          }
        }(t3) || function() {
          throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }();
      }
      function v(t3, e3) {
        (e3 == null || e3 > t3.length) && (e3 = t3.length);
        for (var n3 = 0, i2 = new Array(e3); n3 < e3; n3++)
          i2[n3] = t3[n3];
        return i2;
      }
      var b = function() {
        function t3() {
          r(this, t3);
        }
        return s(t3, [{ key: "shadeRGBColor", value: function(t4, e3) {
          var n3 = e3.split(","), i2 = t4 < 0 ? 0 : 255, a2 = t4 < 0 ? -1 * t4 : t4, r2 = parseInt(n3[0].slice(4), 10), o2 = parseInt(n3[1], 10), s2 = parseInt(n3[2], 10);
          return "rgb(" + (Math.round((i2 - r2) * a2) + r2) + "," + (Math.round((i2 - o2) * a2) + o2) + "," + (Math.round((i2 - s2) * a2) + s2) + ")";
        } }, { key: "shadeHexColor", value: function(t4, e3) {
          var n3 = parseInt(e3.slice(1), 16), i2 = t4 < 0 ? 0 : 255, a2 = t4 < 0 ? -1 * t4 : t4, r2 = n3 >> 16, o2 = n3 >> 8 & 255, s2 = 255 & n3;
          return "#" + (16777216 + 65536 * (Math.round((i2 - r2) * a2) + r2) + 256 * (Math.round((i2 - o2) * a2) + o2) + (Math.round((i2 - s2) * a2) + s2)).toString(16).slice(1);
        } }, { key: "shadeColor", value: function(e3, n3) {
          return t3.isColorHex(n3) ? this.shadeHexColor(e3, n3) : this.shadeRGBColor(e3, n3);
        } }], [{ key: "bind", value: function(t4, e3) {
          return function() {
            return t4.apply(e3, arguments);
          };
        } }, { key: "isObject", value: function(t4) {
          return t4 && a(t4) === "object" && !Array.isArray(t4) && t4 != null;
        } }, { key: "listToArray", value: function(t4) {
          var e3, n3 = [];
          for (e3 = 0; e3 < t4.length; e3++)
            n3[e3] = t4[e3];
          return n3;
        } }, { key: "extend", value: function(t4, e3) {
          var n3 = this;
          typeof Object.assign != "function" && (Object.assign = function(t5) {
            if (t5 == null)
              throw new TypeError("Cannot convert undefined or null to object");
            for (var e4 = Object(t5), n4 = 1; n4 < arguments.length; n4++) {
              var i3 = arguments[n4];
              if (i3 != null)
                for (var a2 in i3)
                  i3.hasOwnProperty(a2) && (e4[a2] = i3[a2]);
            }
            return e4;
          });
          var i2 = Object.assign({}, t4);
          return this.isObject(t4) && this.isObject(e3) && Object.keys(e3).forEach(function(a2) {
            n3.isObject(e3[a2]) && a2 in t4 ? i2[a2] = n3.extend(t4[a2], e3[a2]) : Object.assign(i2, l({}, a2, e3[a2]));
          }), i2;
        } }, { key: "extendArray", value: function(e3, n3) {
          var i2 = [];
          return e3.map(function(e4) {
            i2.push(t3.extend(n3, e4));
          }), i2;
        } }, { key: "monthMod", value: function(t4) {
          return t4 % 12;
        } }, { key: "clone", value: function(t4) {
          if (Object.prototype.toString.call(t4) === "[object Array]") {
            for (var e3 = [], n3 = 0; n3 < t4.length; n3++)
              e3[n3] = this.clone(t4[n3]);
            return e3;
          }
          if (Object.prototype.toString.call(t4) === "[object Null]")
            return null;
          if (Object.prototype.toString.call(t4) === "[object Date]")
            return t4;
          if (a(t4) === "object") {
            var i2 = {};
            for (var r2 in t4)
              t4.hasOwnProperty(r2) && (i2[r2] = this.clone(t4[r2]));
            return i2;
          }
          return t4;
        } }, { key: "log10", value: function(t4) {
          return Math.log(t4) / Math.LN10;
        } }, { key: "roundToBase10", value: function(t4) {
          return Math.pow(10, Math.floor(Math.log10(t4)));
        } }, { key: "roundToBase", value: function(t4, e3) {
          return Math.pow(e3, Math.floor(Math.log(t4) / Math.log(e3)));
        } }, { key: "parseNumber", value: function(t4) {
          return t4 === null ? t4 : parseFloat(t4);
        } }, { key: "randomId", value: function() {
          return (Math.random() + 1).toString(36).substring(4);
        } }, { key: "noExponents", value: function(t4) {
          var e3 = String(t4).split(/[eE]/);
          if (e3.length === 1)
            return e3[0];
          var n3 = "", i2 = t4 < 0 ? "-" : "", a2 = e3[0].replace(".", ""), r2 = Number(e3[1]) + 1;
          if (r2 < 0) {
            for (n3 = i2 + "0."; r2++; )
              n3 += "0";
            return n3 + a2.replace(/^-/, "");
          }
          for (r2 -= a2.length; r2--; )
            n3 += "0";
          return a2 + n3;
        } }, { key: "getDimensions", value: function(t4) {
          var e3 = getComputedStyle(t4, null), n3 = t4.clientHeight, i2 = t4.clientWidth;
          return n3 -= parseFloat(e3.paddingTop) + parseFloat(e3.paddingBottom), [i2 -= parseFloat(e3.paddingLeft) + parseFloat(e3.paddingRight), n3];
        } }, { key: "getBoundingClientRect", value: function(t4) {
          var e3 = t4.getBoundingClientRect();
          return { top: e3.top, right: e3.right, bottom: e3.bottom, left: e3.left, width: t4.clientWidth, height: t4.clientHeight, x: e3.left, y: e3.top };
        } }, { key: "getLargestStringFromArr", value: function(t4) {
          return t4.reduce(function(t5, e3) {
            return Array.isArray(e3) && (e3 = e3.reduce(function(t6, e4) {
              return t6.length > e4.length ? t6 : e4;
            })), t5.length > e3.length ? t5 : e3;
          }, 0);
        } }, { key: "hexToRgba", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "#999999", e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0.6;
          t4.substring(0, 1) !== "#" && (t4 = "#999999");
          var n3 = t4.replace("#", "");
          n3 = n3.match(new RegExp("(.{" + n3.length / 3 + "})", "g"));
          for (var i2 = 0; i2 < n3.length; i2++)
            n3[i2] = parseInt(n3[i2].length === 1 ? n3[i2] + n3[i2] : n3[i2], 16);
          return e3 !== void 0 && n3.push(e3), "rgba(" + n3.join(",") + ")";
        } }, { key: "getOpacityFromRGBA", value: function(t4) {
          return parseFloat(t4.replace(/^.*,(.+)\)/, "$1"));
        } }, { key: "rgb2hex", value: function(t4) {
          return (t4 = t4.match(/^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i)) && t4.length === 4 ? "#" + ("0" + parseInt(t4[1], 10).toString(16)).slice(-2) + ("0" + parseInt(t4[2], 10).toString(16)).slice(-2) + ("0" + parseInt(t4[3], 10).toString(16)).slice(-2) : "";
        } }, { key: "isColorHex", value: function(t4) {
          return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(t4);
        } }, { key: "getPolygonPos", value: function(t4, e3) {
          for (var n3 = [], i2 = 2 * Math.PI / e3, a2 = 0; a2 < e3; a2++) {
            var r2 = {};
            r2.x = t4 * Math.sin(a2 * i2), r2.y = -t4 * Math.cos(a2 * i2), n3.push(r2);
          }
          return n3;
        } }, { key: "polarToCartesian", value: function(t4, e3, n3, i2) {
          var a2 = (i2 - 90) * Math.PI / 180;
          return { x: t4 + n3 * Math.cos(a2), y: e3 + n3 * Math.sin(a2) };
        } }, { key: "escapeString", value: function(t4) {
          var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "x", n3 = t4.toString().slice();
          return n3.replace(/[` ~!@#$%^&*()_|+\-=?;:'",.<>{}[\]\\/]/gi, e3);
        } }, { key: "negToZero", value: function(t4) {
          return t4 < 0 ? 0 : t4;
        } }, { key: "moveIndexInArray", value: function(t4, e3, n3) {
          if (n3 >= t4.length)
            for (var i2 = n3 - t4.length + 1; i2--; )
              t4.push(void 0);
          return t4.splice(n3, 0, t4.splice(e3, 1)[0]), t4;
        } }, { key: "extractNumber", value: function(t4) {
          return parseFloat(t4.replace(/[^\d.]*/g, ""));
        } }, { key: "findAncestor", value: function(t4, e3) {
          for (; (t4 = t4.parentElement) && !t4.classList.contains(e3); )
            ;
          return t4;
        } }, { key: "setELstyles", value: function(t4, e3) {
          for (var n3 in e3)
            e3.hasOwnProperty(n3) && (t4.style.key = e3[n3]);
        } }, { key: "isNumber", value: function(t4) {
          return !isNaN(t4) && parseFloat(Number(t4)) === t4 && !isNaN(parseInt(t4, 10));
        } }, { key: "isFloat", value: function(t4) {
          return Number(t4) === t4 && t4 % 1 != 0;
        } }, { key: "isSafari", value: function() {
          return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
        } }, { key: "isFirefox", value: function() {
          return navigator.userAgent.toLowerCase().indexOf("firefox") > -1;
        } }, { key: "isIE11", value: function() {
          if (window.navigator.userAgent.indexOf("MSIE") !== -1 || window.navigator.appVersion.indexOf("Trident/") > -1)
            return true;
        } }, { key: "isIE", value: function() {
          var t4 = window.navigator.userAgent, e3 = t4.indexOf("MSIE ");
          if (e3 > 0)
            return parseInt(t4.substring(e3 + 5, t4.indexOf(".", e3)), 10);
          if (t4.indexOf("Trident/") > 0) {
            var n3 = t4.indexOf("rv:");
            return parseInt(t4.substring(n3 + 3, t4.indexOf(".", n3)), 10);
          }
          var i2 = t4.indexOf("Edge/");
          return i2 > 0 && parseInt(t4.substring(i2 + 5, t4.indexOf(".", i2)), 10);
        } }]), t3;
      }(), y = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.setEasingFunctions();
        }
        return s(t3, [{ key: "setEasingFunctions", value: function() {
          var t4;
          if (!this.w.globals.easing) {
            switch (this.w.config.chart.animations.easing) {
              case "linear":
                t4 = "-";
                break;
              case "easein":
                t4 = "<";
                break;
              case "easeout":
                t4 = ">";
                break;
              default:
                t4 = "<>";
                break;
              case "swing":
                t4 = function(t5) {
                  var e3 = 1.70158;
                  return (t5 -= 1) * t5 * ((e3 + 1) * t5 + e3) + 1;
                };
                break;
              case "bounce":
                t4 = function(t5) {
                  return t5 < 1 / 2.75 ? 7.5625 * t5 * t5 : t5 < 2 / 2.75 ? 7.5625 * (t5 -= 1.5 / 2.75) * t5 + 0.75 : t5 < 2.5 / 2.75 ? 7.5625 * (t5 -= 2.25 / 2.75) * t5 + 0.9375 : 7.5625 * (t5 -= 2.625 / 2.75) * t5 + 0.984375;
                };
                break;
              case "elastic":
                t4 = function(t5) {
                  return t5 === !!t5 ? t5 : Math.pow(2, -10 * t5) * Math.sin((t5 - 0.075) * (2 * Math.PI) / 0.3) + 1;
                };
            }
            this.w.globals.easing = t4;
          }
        } }, { key: "animateLine", value: function(t4, e3, n3, i2) {
          t4.attr(e3).animate(i2).attr(n3);
        } }, { key: "animateMarker", value: function(t4, e3, n3, i2, a2, r2) {
          e3 || (e3 = 0), t4.attr({ r: e3, width: e3, height: e3 }).animate(i2, a2).attr({ r: n3, width: n3.width, height: n3.height }).afterAll(function() {
            r2();
          });
        } }, { key: "animateCircle", value: function(t4, e3, n3, i2, a2) {
          t4.attr({ r: e3.r, cx: e3.cx, cy: e3.cy }).animate(i2, a2).attr({ r: n3.r, cx: n3.cx, cy: n3.cy });
        } }, { key: "animateRect", value: function(t4, e3, n3, i2, a2) {
          t4.attr(e3).animate(i2).attr(n3).afterAll(function() {
            return a2();
          });
        } }, { key: "animatePathsGradually", value: function(t4) {
          var e3 = t4.el, n3 = t4.realIndex, i2 = t4.j, a2 = t4.fill, r2 = t4.pathFrom, o2 = t4.pathTo, s2 = t4.speed, l2 = t4.delay, c2 = this.w, d2 = 0;
          c2.config.chart.animations.animateGradually.enabled && (d2 = c2.config.chart.animations.animateGradually.delay), c2.config.chart.animations.dynamicAnimation.enabled && c2.globals.dataChanged && c2.config.chart.type !== "bar" && (d2 = 0), this.morphSVG(e3, n3, i2, c2.config.chart.type !== "line" || c2.globals.comboCharts ? a2 : "stroke", r2, o2, s2, l2 * d2);
        } }, { key: "showDelayedElements", value: function() {
          this.w.globals.delayedElements.forEach(function(t4) {
            t4.el.classList.remove("apexcharts-element-hidden");
          });
        } }, { key: "animationCompleted", value: function(t4) {
          var e3 = this.w;
          e3.globals.animationEnded || (e3.globals.animationEnded = true, this.showDelayedElements(), typeof e3.config.chart.events.animationEnd == "function" && e3.config.chart.events.animationEnd(this.ctx, { el: t4, w: e3 }));
        } }, { key: "morphSVG", value: function(t4, e3, n3, i2, a2, r2, o2, s2) {
          var l2 = this, c2 = this.w;
          a2 || (a2 = t4.attr("pathFrom")), r2 || (r2 = t4.attr("pathTo"));
          var d2 = function(t5) {
            return c2.config.chart.type === "radar" && (o2 = 1), "M 0 ".concat(c2.globals.gridHeight);
          };
          (!a2 || a2.indexOf("undefined") > -1 || a2.indexOf("NaN") > -1) && (a2 = d2()), (!r2 || r2.indexOf("undefined") > -1 || r2.indexOf("NaN") > -1) && (r2 = d2()), c2.globals.shouldAnimate || (o2 = 1), t4.plot(a2).animate(1, c2.globals.easing, s2).plot(a2).animate(o2, c2.globals.easing, s2).plot(r2).afterAll(function() {
            b.isNumber(n3) ? n3 === c2.globals.series[c2.globals.maxValsInArrayIndex].length - 2 && c2.globals.shouldAnimate && l2.animationCompleted(t4) : i2 !== "none" && c2.globals.shouldAnimate && (!c2.globals.comboCharts && e3 === c2.globals.series.length - 1 || c2.globals.comboCharts) && l2.animationCompleted(t4), l2.showDelayedElements();
          });
        } }]), t3;
      }(), x = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "getDefaultFilter", value: function(t4, e3) {
          var n3 = this.w;
          t4.unfilter(true), new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"), n3.config.states.normal.filter !== "none" ? this.applyFilter(t4, e3, n3.config.states.normal.filter.type, n3.config.states.normal.filter.value) : n3.config.chart.dropShadow.enabled && this.dropShadow(t4, n3.config.chart.dropShadow, e3);
        } }, { key: "addNormalFilter", value: function(t4, e3) {
          var n3 = this.w;
          n3.config.chart.dropShadow.enabled && !t4.node.classList.contains("apexcharts-marker") && this.dropShadow(t4, n3.config.chart.dropShadow, e3);
        } }, { key: "addLightenFilter", value: function(t4, e3, n3) {
          var i2 = this, a2 = this.w, r2 = n3.intensity;
          t4.unfilter(true), new window.SVG.Filter(), t4.filter(function(t5) {
            var n4 = a2.config.chart.dropShadow;
            (n4.enabled ? i2.addShadow(t5, e3, n4) : t5).componentTransfer({ rgb: { type: "linear", slope: 1.5, intercept: r2 } });
          }), t4.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t4.filterer.node);
        } }, { key: "addDarkenFilter", value: function(t4, e3, n3) {
          var i2 = this, a2 = this.w, r2 = n3.intensity;
          t4.unfilter(true), new window.SVG.Filter(), t4.filter(function(t5) {
            var n4 = a2.config.chart.dropShadow;
            (n4.enabled ? i2.addShadow(t5, e3, n4) : t5).componentTransfer({ rgb: { type: "linear", slope: r2 } });
          }), t4.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t4.filterer.node);
        } }, { key: "applyFilter", value: function(t4, e3, n3) {
          var i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0.5;
          switch (n3) {
            case "none":
              this.addNormalFilter(t4, e3);
              break;
            case "lighten":
              this.addLightenFilter(t4, e3, { intensity: i2 });
              break;
            case "darken":
              this.addDarkenFilter(t4, e3, { intensity: i2 });
          }
        } }, { key: "addShadow", value: function(t4, e3, n3) {
          var i2 = n3.blur, a2 = n3.top, r2 = n3.left, o2 = n3.color, s2 = n3.opacity, l2 = t4.flood(Array.isArray(o2) ? o2[e3] : o2, s2).composite(t4.sourceAlpha, "in").offset(r2, a2).gaussianBlur(i2).merge(t4.source);
          return t4.blend(t4.source, l2);
        } }, { key: "dropShadow", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, i2 = e3.top, a2 = e3.left, r2 = e3.blur, o2 = e3.color, s2 = e3.opacity, l2 = e3.noUserSpaceOnUse, c2 = this.w;
          return t4.unfilter(true), b.isIE() && c2.config.chart.type === "radialBar" || (o2 = Array.isArray(o2) ? o2[n3] : o2, t4.filter(function(t5) {
            var e4;
            e4 = b.isSafari() || b.isFirefox() || b.isIE() ? t5.flood(o2, s2).composite(t5.sourceAlpha, "in").offset(a2, i2).gaussianBlur(r2) : t5.flood(o2, s2).composite(t5.sourceAlpha, "in").offset(a2, i2).gaussianBlur(r2).merge(t5.source), t5.blend(t5.source, e4);
          }), l2 || t4.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"), this._scaleFilterSize(t4.filterer.node)), t4;
        } }, { key: "setSelectionFilter", value: function(t4, e3, n3) {
          var i2 = this.w;
          if (i2.globals.selectedDataPoints[e3] !== void 0 && i2.globals.selectedDataPoints[e3].indexOf(n3) > -1) {
            t4.node.setAttribute("selected", true);
            var a2 = i2.config.states.active.filter;
            a2 !== "none" && this.applyFilter(t4, e3, a2.type, a2.value);
          }
        } }, { key: "_scaleFilterSize", value: function(t4) {
          !function(e3) {
            for (var n3 in e3)
              e3.hasOwnProperty(n3) && t4.setAttribute(n3, e3[n3]);
          }({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
        } }]), t3;
      }(), _ = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "drawLine", value: function(t4, e3, n3, i2) {
          var a2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : "#a8a8a8", r2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : 0, o2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : null, s2 = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : "butt", l2 = this.w, c2 = l2.globals.dom.Paper.line().attr({ x1: t4, y1: e3, x2: n3, y2: i2, stroke: a2, "stroke-dasharray": r2, "stroke-width": o2, "stroke-linecap": s2 });
          return c2;
        } }, { key: "drawRect", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0, n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 0, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, a2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0, r2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : "#fefefe", o2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : 1, s2 = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : null, l2 = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : null, c2 = arguments.length > 9 && arguments[9] !== void 0 ? arguments[9] : 0, d2 = this.w, u2 = d2.globals.dom.Paper.rect();
          return u2.attr({ x: t4, y: e3, width: n3 > 0 ? n3 : 0, height: i2 > 0 ? i2 : 0, rx: a2, ry: a2, opacity: o2, "stroke-width": s2 !== null ? s2 : 0, stroke: l2 !== null ? l2 : "none", "stroke-dasharray": c2 }), u2.node.setAttribute("fill", r2), u2;
        } }, { key: "drawPolygon", value: function(t4) {
          var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "#e1e1e1", n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "none", a2 = this.w, r2 = a2.globals.dom.Paper.polygon(t4).attr({ fill: i2, stroke: e3, "stroke-width": n3 });
          return r2;
        } }, { key: "drawCircle", value: function(t4) {
          var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n3 = this.w;
          t4 < 0 && (t4 = 0);
          var i2 = n3.globals.dom.Paper.circle(2 * t4);
          return e3 !== null && i2.attr(e3), i2;
        } }, { key: "drawPath", value: function(t4) {
          var e3 = t4.d, n3 = e3 === void 0 ? "" : e3, i2 = t4.stroke, a2 = i2 === void 0 ? "#a8a8a8" : i2, r2 = t4.strokeWidth, o2 = r2 === void 0 ? 1 : r2, s2 = t4.fill, l2 = t4.fillOpacity, c2 = l2 === void 0 ? 1 : l2, d2 = t4.strokeOpacity, u2 = d2 === void 0 ? 1 : d2, h2 = t4.classes, p2 = t4.strokeLinecap, f2 = p2 === void 0 ? null : p2, g2 = t4.strokeDashArray, m2 = g2 === void 0 ? 0 : g2, v2 = this.w;
          return f2 === null && (f2 = v2.config.stroke.lineCap), (n3.indexOf("undefined") > -1 || n3.indexOf("NaN") > -1) && (n3 = "M 0 ".concat(v2.globals.gridHeight)), v2.globals.dom.Paper.path(n3).attr({ fill: s2, "fill-opacity": c2, stroke: a2, "stroke-opacity": u2, "stroke-linecap": f2, "stroke-width": o2, "stroke-dasharray": m2, class: h2 });
        } }, { key: "group", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, e3 = this.w, n3 = e3.globals.dom.Paper.group();
          return t4 !== null && n3.attr(t4), n3;
        } }, { key: "move", value: function(t4, e3) {
          return ["M", t4, e3].join(" ");
        } }, { key: "line", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, i2 = null;
          return n3 === null ? i2 = ["L", t4, e3].join(" ") : n3 === "H" ? i2 = ["H", t4].join(" ") : n3 === "V" && (i2 = ["V", e3].join(" ")), i2;
        } }, { key: "curve", value: function(t4, e3, n3, i2, a2, r2) {
          return ["C", t4, e3, n3, i2, a2, r2].join(" ");
        } }, { key: "quadraticCurve", value: function(t4, e3, n3, i2) {
          return ["Q", t4, e3, n3, i2].join(" ");
        } }, { key: "arc", value: function(t4, e3, n3, i2, a2, r2, o2) {
          var s2 = arguments.length > 7 && arguments[7] !== void 0 && arguments[7], l2 = "A";
          s2 && (l2 = "a");
          var c2 = [l2, t4, e3, n3, i2, a2, r2, o2].join(" ");
          return c2;
        } }, { key: "renderPaths", value: function(t4) {
          var e3, n3 = t4.j, i2 = t4.realIndex, a2 = t4.pathFrom, r2 = t4.pathTo, o2 = t4.stroke, s2 = t4.strokeWidth, l2 = t4.strokeLinecap, c2 = t4.fill, u2 = t4.animationDelay, h2 = t4.initialSpeed, p2 = t4.dataChangeSpeed, f2 = t4.className, g2 = t4.shouldClipToGrid, m2 = g2 === void 0 || g2, v2 = t4.bindEventsOnPaths, b2 = v2 === void 0 || v2, _2 = t4.drawShadow, w2 = _2 === void 0 || _2, S2 = this.w, C2 = new x(this.ctx), k2 = new y(this.ctx), D2 = this.w.config.chart.animations.enabled, T2 = D2 && this.w.config.chart.animations.dynamicAnimation.enabled, E2 = !!(D2 && !S2.globals.resized || T2 && S2.globals.dataChanged && S2.globals.shouldAnimate);
          E2 ? e3 = a2 : (e3 = r2, S2.globals.animationEnded = true);
          var A2, I2 = S2.config.stroke.dashArray;
          A2 = Array.isArray(I2) ? I2[i2] : S2.config.stroke.dashArray;
          var M2 = this.drawPath({ d: e3, stroke: o2, strokeWidth: s2, fill: c2, fillOpacity: 1, classes: f2, strokeLinecap: l2, strokeDashArray: A2 });
          if (M2.attr("index", i2), m2 && M2.attr({ "clip-path": "url(#gridRectMask".concat(S2.globals.cuid, ")") }), S2.config.states.normal.filter.type !== "none")
            C2.getDefaultFilter(M2, i2);
          else if (S2.config.chart.dropShadow.enabled && w2 && (!S2.config.chart.dropShadow.enabledOnSeries || S2.config.chart.dropShadow.enabledOnSeries && S2.config.chart.dropShadow.enabledOnSeries.indexOf(i2) !== -1)) {
            var R2 = S2.config.chart.dropShadow;
            C2.dropShadow(M2, R2, i2);
          }
          b2 && (M2.node.addEventListener("mouseenter", this.pathMouseEnter.bind(this, M2)), M2.node.addEventListener("mouseleave", this.pathMouseLeave.bind(this, M2)), M2.node.addEventListener("mousedown", this.pathMouseDown.bind(this, M2))), M2.attr({ pathTo: r2, pathFrom: a2 });
          var P2 = { el: M2, j: n3, realIndex: i2, pathFrom: a2, pathTo: r2, fill: c2, strokeWidth: s2, delay: u2 };
          return !D2 || S2.globals.resized || S2.globals.dataChanged ? !S2.globals.resized && S2.globals.dataChanged || k2.showDelayedElements() : k2.animatePathsGradually(d(d({}, P2), {}, { speed: h2 })), S2.globals.dataChanged && T2 && E2 && k2.animatePathsGradually(d(d({}, P2), {}, { speed: p2 })), M2;
        } }, { key: "drawPattern", value: function(t4, e3, n3) {
          var i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "#a8a8a8", a2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 0, r2 = this.w, o2 = r2.globals.dom.Paper.pattern(e3, n3, function(r3) {
            t4 === "horizontalLines" ? r3.line(0, 0, n3, 0).stroke({ color: i2, width: a2 + 1 }) : t4 === "verticalLines" ? r3.line(0, 0, 0, e3).stroke({ color: i2, width: a2 + 1 }) : t4 === "slantedLines" ? r3.line(0, 0, e3, n3).stroke({ color: i2, width: a2 }) : t4 === "squares" ? r3.rect(e3, n3).fill("none").stroke({ color: i2, width: a2 }) : t4 === "circles" && r3.circle(e3).fill("none").stroke({ color: i2, width: a2 });
          });
          return o2;
        } }, { key: "drawGradient", value: function(t4, e3, n3, i2, a2) {
          var r2, o2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : null, s2 = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : null, l2 = arguments.length > 7 && arguments[7] !== void 0 ? arguments[7] : null, c2 = arguments.length > 8 && arguments[8] !== void 0 ? arguments[8] : 0, d2 = this.w;
          e3.length < 9 && e3.indexOf("#") === 0 && (e3 = b.hexToRgba(e3, i2)), n3.length < 9 && n3.indexOf("#") === 0 && (n3 = b.hexToRgba(n3, a2));
          var u2 = 0, h2 = 1, p2 = 1, f2 = null;
          s2 !== null && (u2 = s2[0] !== void 0 ? s2[0] / 100 : 0, h2 = s2[1] !== void 0 ? s2[1] / 100 : 1, p2 = s2[2] !== void 0 ? s2[2] / 100 : 1, f2 = s2[3] !== void 0 ? s2[3] / 100 : null);
          var g2 = !(d2.config.chart.type !== "donut" && d2.config.chart.type !== "pie" && d2.config.chart.type !== "polarArea" && d2.config.chart.type !== "bubble");
          if (r2 = l2 === null || l2.length === 0 ? d2.globals.dom.Paper.gradient(g2 ? "radial" : "linear", function(t5) {
            t5.at(u2, e3, i2), t5.at(h2, n3, a2), t5.at(p2, n3, a2), f2 !== null && t5.at(f2, e3, i2);
          }) : d2.globals.dom.Paper.gradient(g2 ? "radial" : "linear", function(t5) {
            (Array.isArray(l2[c2]) ? l2[c2] : l2).forEach(function(e4) {
              t5.at(e4.offset / 100, e4.color, e4.opacity);
            });
          }), g2) {
            var m2 = d2.globals.gridWidth / 2, v2 = d2.globals.gridHeight / 2;
            d2.config.chart.type !== "bubble" ? r2.attr({ gradientUnits: "userSpaceOnUse", cx: m2, cy: v2, r: o2 }) : r2.attr({ cx: 0.5, cy: 0.5, r: 0.8, fx: 0.2, fy: 0.2 });
          } else
            t4 === "vertical" ? r2.from(0, 0).to(0, 1) : t4 === "diagonal" ? r2.from(0, 0).to(1, 1) : t4 === "horizontal" ? r2.from(0, 1).to(1, 1) : t4 === "diagonal2" && r2.from(1, 0).to(0, 1);
          return r2;
        } }, { key: "drawText", value: function(t4) {
          var e3, n3 = t4.x, i2 = t4.y, a2 = t4.text, r2 = t4.textAnchor, o2 = t4.fontSize, s2 = t4.fontFamily, l2 = t4.fontWeight, c2 = t4.foreColor, d2 = t4.opacity, u2 = t4.cssClass, h2 = u2 === void 0 ? "" : u2, p2 = t4.isPlainText, f2 = p2 === void 0 || p2, g2 = this.w;
          return a2 === void 0 && (a2 = ""), r2 || (r2 = "start"), c2 && c2.length || (c2 = g2.config.chart.foreColor), s2 = s2 || g2.config.chart.fontFamily, l2 = l2 || "regular", (e3 = Array.isArray(a2) ? g2.globals.dom.Paper.text(function(t5) {
            for (var e4 = 0; e4 < a2.length; e4++)
              e4 === 0 ? t5.tspan(a2[e4]) : t5.tspan(a2[e4]).newLine();
          }) : f2 ? g2.globals.dom.Paper.plain(a2) : g2.globals.dom.Paper.text(function(t5) {
            return t5.tspan(a2);
          })).attr({ x: n3, y: i2, "text-anchor": r2, "dominant-baseline": "auto", "font-size": o2, "font-family": s2, "font-weight": l2, fill: c2, class: "apexcharts-text " + h2 }), e3.node.style.fontFamily = s2, e3.node.style.opacity = d2, e3;
        } }, { key: "drawMarker", value: function(t4, e3, n3) {
          t4 = t4 || 0;
          var i2 = n3.pSize || 0, a2 = null;
          if (n3.shape === "square" || n3.shape === "rect") {
            var r2 = n3.pRadius === void 0 ? i2 / 2 : n3.pRadius;
            e3 !== null && i2 || (i2 = 0, r2 = 0);
            var o2 = 1.2 * i2 + r2, s2 = this.drawRect(o2, o2, o2, o2, r2);
            s2.attr({ x: t4 - o2 / 2, y: e3 - o2 / 2, cx: t4, cy: e3, class: n3.class ? n3.class : "", fill: n3.pointFillColor, "fill-opacity": n3.pointFillOpacity ? n3.pointFillOpacity : 1, stroke: n3.pointStrokeColor, "stroke-width": n3.pointStrokeWidth ? n3.pointStrokeWidth : 0, "stroke-opacity": n3.pointStrokeOpacity ? n3.pointStrokeOpacity : 1 }), a2 = s2;
          } else
            n3.shape !== "circle" && n3.shape || (b.isNumber(e3) || (i2 = 0, e3 = 0), a2 = this.drawCircle(i2, { cx: t4, cy: e3, class: n3.class ? n3.class : "", stroke: n3.pointStrokeColor, fill: n3.pointFillColor, "fill-opacity": n3.pointFillOpacity ? n3.pointFillOpacity : 1, "stroke-width": n3.pointStrokeWidth ? n3.pointStrokeWidth : 0, "stroke-opacity": n3.pointStrokeOpacity ? n3.pointStrokeOpacity : 1 }));
          return a2;
        } }, { key: "pathMouseEnter", value: function(t4, e3) {
          var n3 = this.w, i2 = new x(this.ctx), a2 = parseInt(t4.node.getAttribute("index"), 10), r2 = parseInt(t4.node.getAttribute("j"), 10);
          if (typeof n3.config.chart.events.dataPointMouseEnter == "function" && n3.config.chart.events.dataPointMouseEnter(e3, this.ctx, { seriesIndex: a2, dataPointIndex: r2, w: n3 }), this.ctx.events.fireEvent("dataPointMouseEnter", [e3, this.ctx, { seriesIndex: a2, dataPointIndex: r2, w: n3 }]), (n3.config.states.active.filter.type === "none" || t4.node.getAttribute("selected") !== "true") && n3.config.states.hover.filter.type !== "none" && n3.config.states.active.filter.type !== "none" && !n3.globals.isTouchDevice) {
            var o2 = n3.config.states.hover.filter;
            i2.applyFilter(t4, a2, o2.type, o2.value);
          }
        } }, { key: "pathMouseLeave", value: function(t4, e3) {
          var n3 = this.w, i2 = new x(this.ctx), a2 = parseInt(t4.node.getAttribute("index"), 10), r2 = parseInt(t4.node.getAttribute("j"), 10);
          typeof n3.config.chart.events.dataPointMouseLeave == "function" && n3.config.chart.events.dataPointMouseLeave(e3, this.ctx, { seriesIndex: a2, dataPointIndex: r2, w: n3 }), this.ctx.events.fireEvent("dataPointMouseLeave", [e3, this.ctx, { seriesIndex: a2, dataPointIndex: r2, w: n3 }]), n3.config.states.active.filter.type !== "none" && t4.node.getAttribute("selected") === "true" || n3.config.states.hover.filter.type !== "none" && i2.getDefaultFilter(t4, a2);
        } }, { key: "pathMouseDown", value: function(t4, e3) {
          var n3 = this.w, i2 = new x(this.ctx), a2 = parseInt(t4.node.getAttribute("index"), 10), r2 = parseInt(t4.node.getAttribute("j"), 10), o2 = "false";
          if (t4.node.getAttribute("selected") === "true") {
            if (t4.node.setAttribute("selected", "false"), n3.globals.selectedDataPoints[a2].indexOf(r2) > -1) {
              var s2 = n3.globals.selectedDataPoints[a2].indexOf(r2);
              n3.globals.selectedDataPoints[a2].splice(s2, 1);
            }
          } else {
            if (!n3.config.states.active.allowMultipleDataPointsSelection && n3.globals.selectedDataPoints.length > 0) {
              n3.globals.selectedDataPoints = [];
              var l2 = n3.globals.dom.Paper.select(".apexcharts-series path").members, c2 = n3.globals.dom.Paper.select(".apexcharts-series circle, .apexcharts-series rect").members, d2 = function(t5) {
                Array.prototype.forEach.call(t5, function(t6) {
                  t6.node.setAttribute("selected", "false"), i2.getDefaultFilter(t6, a2);
                });
              };
              d2(l2), d2(c2);
            }
            t4.node.setAttribute("selected", "true"), o2 = "true", n3.globals.selectedDataPoints[a2] === void 0 && (n3.globals.selectedDataPoints[a2] = []), n3.globals.selectedDataPoints[a2].push(r2);
          }
          if (o2 === "true") {
            var u2 = n3.config.states.active.filter;
            u2 !== "none" && i2.applyFilter(t4, a2, u2.type, u2.value);
          } else
            n3.config.states.active.filter.type !== "none" && i2.getDefaultFilter(t4, a2);
          typeof n3.config.chart.events.dataPointSelection == "function" && n3.config.chart.events.dataPointSelection(e3, this.ctx, { selectedDataPoints: n3.globals.selectedDataPoints, seriesIndex: a2, dataPointIndex: r2, w: n3 }), e3 && this.ctx.events.fireEvent("dataPointSelection", [e3, this.ctx, { selectedDataPoints: n3.globals.selectedDataPoints, seriesIndex: a2, dataPointIndex: r2, w: n3 }]);
        } }, { key: "rotateAroundCenter", value: function(t4) {
          var e3 = t4.getBBox();
          return { x: e3.x + e3.width / 2, y: e3.y + e3.height / 2 };
        } }, { key: "getTextRects", value: function(t4, e3, n3, i2) {
          var a2 = !(arguments.length > 4 && arguments[4] !== void 0) || arguments[4], r2 = this.w, o2 = this.drawText({ x: -200, y: -200, text: t4, textAnchor: "start", fontSize: e3, fontFamily: n3, foreColor: "#fff", opacity: 0 });
          i2 && o2.attr("transform", i2), r2.globals.dom.Paper.add(o2);
          var s2 = o2.bbox();
          return a2 || (s2 = o2.node.getBoundingClientRect()), o2.remove(), { width: s2.width, height: s2.height };
        } }, { key: "placeTextWithEllipsis", value: function(t4, e3, n3) {
          if (typeof t4.getComputedTextLength == "function" && (t4.textContent = e3, e3.length > 0 && t4.getComputedTextLength() >= n3 / 1.1)) {
            for (var i2 = e3.length - 3; i2 > 0; i2 -= 3)
              if (t4.getSubStringLength(0, i2) <= n3 / 1.1)
                return void (t4.textContent = e3.substring(0, i2) + "...");
            t4.textContent = ".";
          }
        } }], [{ key: "setAttrs", value: function(t4, e3) {
          for (var n3 in e3)
            e3.hasOwnProperty(n3) && t4.setAttribute(n3, e3[n3]);
        } }]), t3;
      }(), w = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.annoCtx = e3;
        }
        return s(t3, [{ key: "setOrientations", value: function(t4) {
          var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n3 = this.w;
          if (t4.label.orientation === "vertical") {
            var i2 = e3 !== null ? e3 : 0, a2 = n3.globals.dom.baseEl.querySelector(".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(i2, "']"));
            if (a2 !== null) {
              var r2 = a2.getBoundingClientRect();
              a2.setAttribute("x", parseFloat(a2.getAttribute("x")) - r2.height + 4), t4.label.position === "top" ? a2.setAttribute("y", parseFloat(a2.getAttribute("y")) + r2.width) : a2.setAttribute("y", parseFloat(a2.getAttribute("y")) - r2.width);
              var o2 = this.annoCtx.graphics.rotateAroundCenter(a2), s2 = o2.x, l2 = o2.y;
              a2.setAttribute("transform", "rotate(-90 ".concat(s2, " ").concat(l2, ")"));
            }
          }
        } }, { key: "addBackgroundToAnno", value: function(t4, e3) {
          var n3 = this.w;
          if (!t4 || !e3.label.text || e3.label.text && !e3.label.text.trim())
            return null;
          var i2 = n3.globals.dom.baseEl.querySelector(".apexcharts-grid").getBoundingClientRect(), a2 = t4.getBoundingClientRect(), r2 = e3.label.style.padding.left, o2 = e3.label.style.padding.right, s2 = e3.label.style.padding.top, l2 = e3.label.style.padding.bottom;
          e3.label.orientation === "vertical" && (s2 = e3.label.style.padding.left, l2 = e3.label.style.padding.right, r2 = e3.label.style.padding.top, o2 = e3.label.style.padding.bottom);
          var c2 = a2.left - i2.left - r2, d2 = a2.top - i2.top - s2, u2 = this.annoCtx.graphics.drawRect(c2 - n3.globals.barPadForNumericAxis, d2, a2.width + r2 + o2, a2.height + s2 + l2, e3.label.borderRadius, e3.label.style.background, 1, e3.label.borderWidth, e3.label.borderColor, 0);
          return e3.id && u2.node.classList.add(e3.id), u2;
        } }, { key: "annotationsBackground", value: function() {
          var t4 = this, e3 = this.w, n3 = function(n4, i2, a2) {
            var r2 = e3.globals.dom.baseEl.querySelector(".apexcharts-".concat(a2, "-annotations .apexcharts-").concat(a2, "-annotation-label[rel='").concat(i2, "']"));
            if (r2) {
              var o2 = r2.parentNode, s2 = t4.addBackgroundToAnno(r2, n4);
              s2 && o2.insertBefore(s2.node, r2);
            }
          };
          e3.config.annotations.xaxis.map(function(t5, e4) {
            n3(t5, e4, "xaxis");
          }), e3.config.annotations.yaxis.map(function(t5, e4) {
            n3(t5, e4, "yaxis");
          }), e3.config.annotations.points.map(function(t5, e4) {
            n3(t5, e4, "point");
          });
        } }, { key: "getStringX", value: function(t4) {
          var e3 = this.w, n3 = t4;
          e3.config.xaxis.convertedCatToNumeric && e3.globals.categoryLabels.length && (t4 = e3.globals.categoryLabels.indexOf(t4) + 1);
          var i2 = e3.globals.labels.indexOf(t4), a2 = e3.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g text:nth-child(" + (i2 + 1) + ")");
          return a2 && (n3 = parseFloat(a2.getAttribute("x"))), n3;
        } }]), t3;
      }(), S = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.annoCtx = e3, this.invertAxis = this.annoCtx.invertAxis;
        }
        return s(t3, [{ key: "addXaxisAnnotation", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = this.invertAxis ? i2.globals.minY : i2.globals.minX, r2 = this.invertAxis ? i2.globals.maxY : i2.globals.maxX, o2 = this.invertAxis ? i2.globals.yRange[0] : i2.globals.xRange, s2 = (t4.x - a2) / (o2 / i2.globals.gridWidth);
          this.annoCtx.inversedReversedAxis && (s2 = (r2 - t4.x) / (o2 / i2.globals.gridWidth));
          var l2 = t4.label.text;
          i2.config.xaxis.type !== "category" && !i2.config.xaxis.convertedCatToNumeric || this.invertAxis || i2.globals.dataFormatXNumeric || (s2 = this.annoCtx.helpers.getStringX(t4.x));
          var c2 = t4.strokeDashArray;
          if (b.isNumber(s2)) {
            if (t4.x2 === null || t4.x2 === void 0) {
              var d2 = this.annoCtx.graphics.drawLine(s2 + t4.offsetX, 0 + t4.offsetY, s2 + t4.offsetX, i2.globals.gridHeight + t4.offsetY, t4.borderColor, c2, t4.borderWidth);
              e3.appendChild(d2.node), t4.id && d2.node.classList.add(t4.id);
            } else {
              var u2 = (t4.x2 - a2) / (o2 / i2.globals.gridWidth);
              if (this.annoCtx.inversedReversedAxis && (u2 = (r2 - t4.x2) / (o2 / i2.globals.gridWidth)), i2.config.xaxis.type !== "category" && !i2.config.xaxis.convertedCatToNumeric || this.invertAxis || i2.globals.dataFormatXNumeric || (u2 = this.annoCtx.helpers.getStringX(t4.x2)), u2 < s2) {
                var h2 = s2;
                s2 = u2, u2 = h2;
              }
              var p2 = this.annoCtx.graphics.drawRect(s2 + t4.offsetX, 0 + t4.offsetY, u2 - s2, i2.globals.gridHeight + t4.offsetY, 0, t4.fillColor, t4.opacity, 1, t4.borderColor, c2);
              p2.node.classList.add("apexcharts-annotation-rect"), p2.attr("clip-path", "url(#gridRectMask".concat(i2.globals.cuid, ")")), e3.appendChild(p2.node), t4.id && p2.node.classList.add(t4.id);
            }
            var f2 = t4.label.position === "top" ? 4 : i2.globals.gridHeight, g2 = this.annoCtx.graphics.getTextRects(l2, parseFloat(t4.label.style.fontSize)), m2 = this.annoCtx.graphics.drawText({ x: s2 + t4.label.offsetX, y: f2 + t4.label.offsetY - (t4.label.orientation === "vertical" ? t4.label.position === "top" ? g2.width / 2 - 12 : -g2.width / 2 : 0), text: l2, textAnchor: t4.label.textAnchor, fontSize: t4.label.style.fontSize, fontFamily: t4.label.style.fontFamily, fontWeight: t4.label.style.fontWeight, foreColor: t4.label.style.color, cssClass: "apexcharts-xaxis-annotation-label ".concat(t4.label.style.cssClass, " ").concat(t4.id ? t4.id : "") });
            m2.attr({ rel: n3 }), e3.appendChild(m2.node), this.annoCtx.helpers.setOrientations(t4, n3);
          }
        } }, { key: "drawXAxisAnnotations", value: function() {
          var t4 = this, e3 = this.w, n3 = this.annoCtx.graphics.group({ class: "apexcharts-xaxis-annotations" });
          return e3.config.annotations.xaxis.map(function(e4, i2) {
            t4.addXaxisAnnotation(e4, n3.node, i2);
          }), n3;
        } }]), t3;
      }(), C = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "getStackedSeriesTotals", value: function() {
          var t4 = this.w, e3 = [];
          if (t4.globals.series.length === 0)
            return e3;
          for (var n3 = 0; n3 < t4.globals.series[t4.globals.maxValsInArrayIndex].length; n3++) {
            for (var i2 = 0, a2 = 0; a2 < t4.globals.series.length; a2++)
              t4.globals.series[a2][n3] !== void 0 && (i2 += t4.globals.series[a2][n3]);
            e3.push(i2);
          }
          return t4.globals.stackedSeriesTotals = e3, e3;
        } }, { key: "getSeriesTotalByIndex", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
          return t4 === null ? this.w.config.series.reduce(function(t5, e3) {
            return t5 + e3;
          }, 0) : this.w.globals.series[t4].reduce(function(t5, e3) {
            return t5 + e3;
          }, 0);
        } }, { key: "isSeriesNull", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;
          return (t4 === null ? this.w.config.series.filter(function(t5) {
            return t5 !== null;
          }) : this.w.config.series[t4].data.filter(function(t5) {
            return t5 !== null;
          })).length === 0;
        } }, { key: "seriesHaveSameValues", value: function(t4) {
          return this.w.globals.series[t4].every(function(t5, e3, n3) {
            return t5 === n3[0];
          });
        } }, { key: "getCategoryLabels", value: function(t4) {
          var e3 = this.w, n3 = t4.slice();
          return e3.config.xaxis.convertedCatToNumeric && (n3 = t4.map(function(t5, n4) {
            return e3.config.xaxis.labels.formatter(t5 - e3.globals.minX + 1);
          })), n3;
        } }, { key: "getLargestSeries", value: function() {
          var t4 = this.w;
          t4.globals.maxValsInArrayIndex = t4.globals.series.map(function(t5) {
            return t5.length;
          }).indexOf(Math.max.apply(Math, t4.globals.series.map(function(t5) {
            return t5.length;
          })));
        } }, { key: "getLargestMarkerSize", value: function() {
          var t4 = this.w, e3 = 0;
          return t4.globals.markers.size.forEach(function(t5) {
            e3 = Math.max(e3, t5);
          }), t4.globals.markers.largestSize = e3, e3;
        } }, { key: "getSeriesTotals", value: function() {
          var t4 = this.w;
          t4.globals.seriesTotals = t4.globals.series.map(function(t5, e3) {
            var n3 = 0;
            if (Array.isArray(t5))
              for (var i2 = 0; i2 < t5.length; i2++)
                n3 += t5[i2];
            else
              n3 += t5;
            return n3;
          });
        } }, { key: "getSeriesTotalsXRange", value: function(t4, e3) {
          var n3 = this.w;
          return n3.globals.series.map(function(i2, a2) {
            for (var r2 = 0, o2 = 0; o2 < i2.length; o2++)
              n3.globals.seriesX[a2][o2] > t4 && n3.globals.seriesX[a2][o2] < e3 && (r2 += i2[o2]);
            return r2;
          });
        } }, { key: "getPercentSeries", value: function() {
          var t4 = this.w;
          t4.globals.seriesPercent = t4.globals.series.map(function(e3, n3) {
            var i2 = [];
            if (Array.isArray(e3))
              for (var a2 = 0; a2 < e3.length; a2++) {
                var r2 = t4.globals.stackedSeriesTotals[a2], o2 = 0;
                r2 && (o2 = 100 * e3[a2] / r2), i2.push(o2);
              }
            else {
              var s2 = 100 * e3 / t4.globals.seriesTotals.reduce(function(t5, e4) {
                return t5 + e4;
              }, 0);
              i2.push(s2);
            }
            return i2;
          });
        } }, { key: "getCalculatedRatios", value: function() {
          var t4, e3, n3, i2, a2 = this.w.globals, r2 = [], o2 = 0, s2 = [], l2 = 0.1, c2 = 0;
          if (a2.yRange = [], a2.isMultipleYAxis)
            for (var d2 = 0; d2 < a2.minYArr.length; d2++)
              a2.yRange.push(Math.abs(a2.minYArr[d2] - a2.maxYArr[d2])), s2.push(0);
          else
            a2.yRange.push(Math.abs(a2.minY - a2.maxY));
          a2.xRange = Math.abs(a2.maxX - a2.minX), a2.zRange = Math.abs(a2.maxZ - a2.minZ);
          for (var u2 = 0; u2 < a2.yRange.length; u2++)
            r2.push(a2.yRange[u2] / a2.gridHeight);
          if (e3 = a2.xRange / a2.gridWidth, n3 = Math.abs(a2.initialMaxX - a2.initialMinX) / a2.gridWidth, t4 = a2.yRange / a2.gridWidth, i2 = a2.xRange / a2.gridHeight, (o2 = a2.zRange / a2.gridHeight * 16) || (o2 = 1), a2.minY !== Number.MIN_VALUE && Math.abs(a2.minY) !== 0 && (a2.hasNegs = true), a2.isMultipleYAxis) {
            s2 = [];
            for (var h2 = 0; h2 < r2.length; h2++)
              s2.push(-a2.minYArr[h2] / r2[h2]);
          } else
            s2.push(-a2.minY / r2[0]), a2.minY !== Number.MIN_VALUE && Math.abs(a2.minY) !== 0 && (l2 = -a2.minY / t4, c2 = a2.minX / e3);
          return { yRatio: r2, invertedYRatio: t4, zRatio: o2, xRatio: e3, initialXRatio: n3, invertedXRatio: i2, baseLineInvertedY: l2, baseLineY: s2, baseLineX: c2 };
        } }, { key: "getLogSeries", value: function(t4) {
          var e3 = this, n3 = this.w;
          return n3.globals.seriesLog = t4.map(function(t5, i2) {
            return n3.config.yaxis[i2] && n3.config.yaxis[i2].logarithmic ? t5.map(function(t6) {
              return t6 === null ? null : e3.getLogVal(t6, i2);
            }) : t5;
          }), n3.globals.invalidLogScale ? t4 : n3.globals.seriesLog;
        } }, { key: "getLogVal", value: function(t4, e3) {
          var n3 = this.w;
          return (Math.log(t4) - Math.log(n3.globals.minYArr[e3])) / (Math.log(n3.globals.maxYArr[e3]) - Math.log(n3.globals.minYArr[e3]));
        } }, { key: "getLogYRatios", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = this.w.globals;
          return i2.yLogRatio = t4.slice(), i2.logYRange = i2.yRange.map(function(t5, a2) {
            if (n3.config.yaxis[a2] && e3.w.config.yaxis[a2].logarithmic) {
              var r2, o2 = -Number.MAX_VALUE, s2 = Number.MIN_VALUE;
              return i2.seriesLog.forEach(function(t6, e4) {
                t6.forEach(function(t7) {
                  n3.config.yaxis[e4] && n3.config.yaxis[e4].logarithmic && (o2 = Math.max(t7, o2), s2 = Math.min(t7, s2));
                });
              }), r2 = Math.pow(i2.yRange[a2], Math.abs(s2 - o2) / i2.yRange[a2]), i2.yLogRatio[a2] = r2 / i2.gridHeight, r2;
            }
          }), i2.invalidLogScale ? t4.slice() : i2.yLogRatio;
        } }], [{ key: "checkComboSeries", value: function(t4) {
          var e3 = false, n3 = 0, i2 = 0;
          return t4.length && t4[0].type !== void 0 && t4.forEach(function(t5) {
            t5.type !== "bar" && t5.type !== "column" && t5.type !== "candlestick" && t5.type !== "boxPlot" || n3++, t5.type !== void 0 && i2++;
          }), i2 > 1 && (e3 = true), { comboBarCount: n3, comboCharts: e3 };
        } }, { key: "extendArrayProps", value: function(t4, e3, n3) {
          return e3.yaxis && (e3 = t4.extendYAxis(e3, n3)), e3.annotations && (e3.annotations.yaxis && (e3 = t4.extendYAxisAnnotations(e3)), e3.annotations.xaxis && (e3 = t4.extendXAxisAnnotations(e3)), e3.annotations.points && (e3 = t4.extendPointAnnotations(e3))), e3;
        } }]), t3;
      }(), k = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.annoCtx = e3;
        }
        return s(t3, [{ key: "addYaxisAnnotation", value: function(t4, e3, n3) {
          var i2, a2 = this.w, r2 = t4.strokeDashArray, o2 = this._getY1Y2("y1", t4), s2 = t4.label.text;
          if (t4.y2 === null || t4.y2 === void 0) {
            var l2 = this.annoCtx.graphics.drawLine(0 + t4.offsetX, o2 + t4.offsetY, this._getYAxisAnnotationWidth(t4), o2 + t4.offsetY, t4.borderColor, r2, t4.borderWidth);
            e3.appendChild(l2.node), t4.id && l2.node.classList.add(t4.id);
          } else {
            if ((i2 = this._getY1Y2("y2", t4)) > o2) {
              var c2 = o2;
              o2 = i2, i2 = c2;
            }
            var d2 = this.annoCtx.graphics.drawRect(0 + t4.offsetX, i2 + t4.offsetY, this._getYAxisAnnotationWidth(t4), o2 - i2, 0, t4.fillColor, t4.opacity, 1, t4.borderColor, r2);
            d2.node.classList.add("apexcharts-annotation-rect"), d2.attr("clip-path", "url(#gridRectMask".concat(a2.globals.cuid, ")")), e3.appendChild(d2.node), t4.id && d2.node.classList.add(t4.id);
          }
          var u2 = t4.label.position === "right" ? a2.globals.gridWidth : 0, h2 = this.annoCtx.graphics.drawText({ x: u2 + t4.label.offsetX, y: (i2 || o2) + t4.label.offsetY - 3, text: s2, textAnchor: t4.label.textAnchor, fontSize: t4.label.style.fontSize, fontFamily: t4.label.style.fontFamily, fontWeight: t4.label.style.fontWeight, foreColor: t4.label.style.color, cssClass: "apexcharts-yaxis-annotation-label ".concat(t4.label.style.cssClass, " ").concat(t4.id ? t4.id : "") });
          h2.attr({ rel: n3 }), e3.appendChild(h2.node);
        } }, { key: "_getY1Y2", value: function(t4, e3) {
          var n3, i2 = t4 === "y1" ? e3.y : e3.y2, a2 = this.w;
          if (this.annoCtx.invertAxis) {
            var r2 = a2.globals.labels.indexOf(i2);
            a2.config.xaxis.convertedCatToNumeric && (r2 = a2.globals.categoryLabels.indexOf(i2));
            var o2 = a2.globals.dom.baseEl.querySelector(".apexcharts-yaxis-texts-g text:nth-child(" + (r2 + 1) + ")");
            o2 && (n3 = parseFloat(o2.getAttribute("y")));
          } else {
            var s2;
            s2 = a2.config.yaxis[e3.yAxisIndex].logarithmic ? (i2 = new C(this.annoCtx.ctx).getLogVal(i2, e3.yAxisIndex)) / a2.globals.yLogRatio[e3.yAxisIndex] : (i2 - a2.globals.minYArr[e3.yAxisIndex]) / (a2.globals.yRange[e3.yAxisIndex] / a2.globals.gridHeight), n3 = a2.globals.gridHeight - s2, a2.config.yaxis[e3.yAxisIndex] && a2.config.yaxis[e3.yAxisIndex].reversed && (n3 = s2);
          }
          return n3;
        } }, { key: "_getYAxisAnnotationWidth", value: function(t4) {
          var e3 = this.w;
          return e3.globals.gridWidth, (t4.width.indexOf("%") > -1 ? e3.globals.gridWidth * parseInt(t4.width, 10) / 100 : parseInt(t4.width, 10)) + t4.offsetX;
        } }, { key: "drawYAxisAnnotations", value: function() {
          var t4 = this, e3 = this.w, n3 = this.annoCtx.graphics.group({ class: "apexcharts-yaxis-annotations" });
          return e3.config.annotations.yaxis.map(function(e4, i2) {
            t4.addYaxisAnnotation(e4, n3.node, i2);
          }), n3;
        } }]), t3;
      }(), D = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.annoCtx = e3;
        }
        return s(t3, [{ key: "addPointAnnotation", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = 0, r2 = 0, o2 = 0;
          this.annoCtx.invertAxis && console.warn("Point annotation is not supported in horizontal bar charts.");
          var s2 = parseFloat(t4.y);
          if (typeof t4.x == "string") {
            var l2 = i2.globals.labels.indexOf(t4.x);
            i2.config.xaxis.convertedCatToNumeric && (l2 = i2.globals.categoryLabels.indexOf(t4.x)), a2 = this.annoCtx.helpers.getStringX(t4.x), t4.y === null && (s2 = i2.globals.series[t4.seriesIndex][l2]);
          } else
            a2 = (t4.x - i2.globals.minX) / (i2.globals.xRange / i2.globals.gridWidth);
          for (var c2, d2 = [], u2 = 0, h2 = 0; h2 <= t4.seriesIndex; h2++) {
            var p2 = i2.config.yaxis[h2].seriesName;
            if (p2)
              for (var f2 = h2 + 1; f2 <= t4.seriesIndex; f2++)
                i2.config.yaxis[f2].seriesName === p2 && d2.indexOf(p2) === -1 && (u2++, d2.push(p2));
          }
          if (i2.config.yaxis[t4.yAxisIndex].logarithmic)
            c2 = (s2 = new C(this.annoCtx.ctx).getLogVal(s2, t4.yAxisIndex)) / i2.globals.yLogRatio[t4.yAxisIndex];
          else {
            var g2 = t4.yAxisIndex + u2;
            c2 = (s2 - i2.globals.minYArr[g2]) / (i2.globals.yRange[g2] / i2.globals.gridHeight);
          }
          if (r2 = i2.globals.gridHeight - c2 - parseFloat(t4.label.style.fontSize) - t4.marker.size, o2 = i2.globals.gridHeight - c2, i2.config.yaxis[t4.yAxisIndex] && i2.config.yaxis[t4.yAxisIndex].reversed && (r2 = c2 + parseFloat(t4.label.style.fontSize) + t4.marker.size, o2 = c2), b.isNumber(a2)) {
            var m2 = { pSize: t4.marker.size, pointStrokeWidth: t4.marker.strokeWidth, pointFillColor: t4.marker.fillColor, pointStrokeColor: t4.marker.strokeColor, shape: t4.marker.shape, pRadius: t4.marker.radius, class: "apexcharts-point-annotation-marker ".concat(t4.marker.cssClass, " ").concat(t4.id ? t4.id : "") }, v2 = this.annoCtx.graphics.drawMarker(a2 + t4.marker.offsetX, o2 + t4.marker.offsetY, m2);
            e3.appendChild(v2.node);
            var y2 = t4.label.text ? t4.label.text : "", x2 = this.annoCtx.graphics.drawText({ x: a2 + t4.label.offsetX, y: r2 + t4.label.offsetY, text: y2, textAnchor: t4.label.textAnchor, fontSize: t4.label.style.fontSize, fontFamily: t4.label.style.fontFamily, fontWeight: t4.label.style.fontWeight, foreColor: t4.label.style.color, cssClass: "apexcharts-point-annotation-label ".concat(t4.label.style.cssClass, " ").concat(t4.id ? t4.id : "") });
            if (x2.attr({ rel: n3 }), e3.appendChild(x2.node), t4.customSVG.SVG) {
              var _2 = this.annoCtx.graphics.group({ class: "apexcharts-point-annotations-custom-svg " + t4.customSVG.cssClass });
              _2.attr({ transform: "translate(".concat(a2 + t4.customSVG.offsetX, ", ").concat(r2 + t4.customSVG.offsetY, ")") }), _2.node.innerHTML = t4.customSVG.SVG, e3.appendChild(_2.node);
            }
            if (t4.image.path) {
              var w2 = t4.image.width ? t4.image.width : 20, S2 = t4.image.height ? t4.image.height : 20;
              this.annoCtx.addImage({ x: a2 + t4.image.offsetX - w2 / 2, y: r2 + t4.image.offsetY - S2 / 2, width: w2, height: S2, path: t4.image.path, appendTo: ".apexcharts-point-annotations" });
            }
          }
        } }, { key: "drawPointAnnotations", value: function() {
          var t4 = this, e3 = this.w, n3 = this.annoCtx.graphics.group({ class: "apexcharts-point-annotations" });
          return e3.config.annotations.points.map(function(e4, i2) {
            t4.addPointAnnotation(e4, n3.node, i2);
          }), n3;
        } }]), t3;
      }(), T = { name: "en", options: { months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"], toolbar: { exportToSVG: "Download SVG", exportToPNG: "Download PNG", exportToCSV: "Download CSV", menu: "Menu", selection: "Selection", selectionZoom: "Selection Zoom", zoomIn: "Zoom In", zoomOut: "Zoom Out", pan: "Panning", reset: "Reset Zoom" } } }, E = function() {
        function t3() {
          r(this, t3), this.yAxis = { show: true, showAlways: false, showForNullSeries: true, seriesName: void 0, opposite: false, reversed: false, logarithmic: false, tickAmount: void 0, forceNiceScale: false, max: void 0, min: void 0, floating: false, decimalsInFloat: void 0, labels: { show: true, minWidth: 0, maxWidth: 160, offsetX: 0, offsetY: 0, align: void 0, rotate: 0, padding: 20, style: { colors: [], fontSize: "11px", fontWeight: 400, fontFamily: void 0, cssClass: "" }, formatter: void 0 }, axisBorder: { show: false, color: "#e0e0e0", width: 1, offsetX: 0, offsetY: 0 }, axisTicks: { show: false, color: "#e0e0e0", width: 6, offsetX: 0, offsetY: 0 }, title: { text: void 0, rotate: -90, offsetY: 0, offsetX: 0, style: { color: void 0, fontSize: "11px", fontWeight: 900, fontFamily: void 0, cssClass: "" } }, tooltip: { enabled: false, offsetX: 0 }, crosshairs: { show: true, position: "front", stroke: { color: "#b6b6b6", width: 1, dashArray: 0 } } }, this.pointAnnotation = { x: 0, y: null, yAxisIndex: 0, seriesIndex: 0, marker: { size: 4, fillColor: "#fff", strokeWidth: 2, strokeColor: "#333", shape: "circle", offsetX: 0, offsetY: 0, radius: 2, cssClass: "" }, label: { borderColor: "#c2c2c2", borderWidth: 1, borderRadius: 2, text: void 0, textAnchor: "middle", offsetX: 0, offsetY: 0, style: { background: "#fff", color: void 0, fontSize: "11px", fontFamily: void 0, fontWeight: 400, cssClass: "", padding: { left: 5, right: 5, top: 2, bottom: 2 } } }, customSVG: { SVG: void 0, cssClass: void 0, offsetX: 0, offsetY: 0 }, image: { path: void 0, width: 20, height: 20, offsetX: 0, offsetY: 0 } }, this.yAxisAnnotation = { y: 0, y2: null, strokeDashArray: 1, fillColor: "#c2c2c2", borderColor: "#c2c2c2", borderWidth: 1, opacity: 0.3, offsetX: 0, offsetY: 0, width: "100%", yAxisIndex: 0, label: { borderColor: "#c2c2c2", borderWidth: 1, borderRadius: 2, text: void 0, textAnchor: "end", position: "right", offsetX: 0, offsetY: -3, style: { background: "#fff", color: void 0, fontSize: "11px", fontFamily: void 0, fontWeight: 400, cssClass: "", padding: { left: 5, right: 5, top: 2, bottom: 2 } } } }, this.xAxisAnnotation = { x: 0, x2: null, strokeDashArray: 1, fillColor: "#c2c2c2", borderColor: "#c2c2c2", borderWidth: 1, opacity: 0.3, offsetX: 0, offsetY: 0, label: { borderColor: "#c2c2c2", borderWidth: 1, borderRadius: 2, text: void 0, textAnchor: "middle", orientation: "vertical", position: "top", offsetX: 0, offsetY: 0, style: { background: "#fff", color: void 0, fontSize: "11px", fontFamily: void 0, fontWeight: 400, cssClass: "", padding: { left: 5, right: 5, top: 2, bottom: 2 } } } }, this.text = { x: 0, y: 0, text: "", textAnchor: "start", foreColor: void 0, fontSize: "13px", fontFamily: void 0, fontWeight: 400, appendTo: ".apexcharts-annotations", backgroundColor: "transparent", borderColor: "#c2c2c2", borderRadius: 0, borderWidth: 0, paddingLeft: 4, paddingRight: 4, paddingTop: 2, paddingBottom: 2 };
        }
        return s(t3, [{ key: "init", value: function() {
          return { annotations: { position: "front", yaxis: [this.yAxisAnnotation], xaxis: [this.xAxisAnnotation], points: [this.pointAnnotation], texts: [], images: [], shapes: [] }, chart: { animations: { enabled: true, easing: "easeinout", speed: 800, animateGradually: { delay: 150, enabled: true }, dynamicAnimation: { enabled: true, speed: 350 } }, background: "transparent", locales: [T], defaultLocale: "en", dropShadow: { enabled: false, enabledOnSeries: void 0, top: 2, left: 2, blur: 4, color: "#000", opacity: 0.35 }, events: { animationEnd: void 0, beforeMount: void 0, mounted: void 0, updated: void 0, click: void 0, mouseMove: void 0, mouseLeave: void 0, legendClick: void 0, markerClick: void 0, selection: void 0, dataPointSelection: void 0, dataPointMouseEnter: void 0, dataPointMouseLeave: void 0, beforeZoom: void 0, beforeResetZoom: void 0, zoomed: void 0, scrolled: void 0, brushScrolled: void 0 }, foreColor: "#373d3f", fontFamily: "Helvetica, Arial, sans-serif", height: "auto", parentHeightOffset: 15, redrawOnParentResize: true, redrawOnWindowResize: true, id: void 0, group: void 0, offsetX: 0, offsetY: 0, selection: { enabled: false, type: "x", fill: { color: "#24292e", opacity: 0.1 }, stroke: { width: 1, color: "#24292e", opacity: 0.4, dashArray: 3 }, xaxis: { min: void 0, max: void 0 }, yaxis: { min: void 0, max: void 0 } }, sparkline: { enabled: false }, brush: { enabled: false, autoScaleYaxis: true, target: void 0 }, stacked: false, stackType: "normal", toolbar: { show: true, offsetX: 0, offsetY: 0, tools: { download: true, selection: true, zoom: true, zoomin: true, zoomout: true, pan: true, reset: true, customIcons: [] }, export: { csv: { filename: void 0, columnDelimiter: ",", headerCategory: "category", headerValue: "value", dateFormatter: function(t4) {
            return new Date(t4).toDateString();
          } }, png: { filename: void 0 }, svg: { filename: void 0 } }, autoSelected: "zoom" }, type: "line", width: "100%", zoom: { enabled: true, type: "x", autoScaleYaxis: false, zoomedArea: { fill: { color: "#90CAF9", opacity: 0.4 }, stroke: { color: "#0D47A1", opacity: 0.4, width: 1 } } } }, plotOptions: { area: { fillTo: "origin" }, bar: { horizontal: false, columnWidth: "70%", barHeight: "70%", distributed: false, borderRadius: 0, rangeBarOverlap: true, rangeBarGroupRows: false, colors: { ranges: [], backgroundBarColors: [], backgroundBarOpacity: 1, backgroundBarRadius: 0 }, dataLabels: { position: "top", maxItems: 100, hideOverflowingLabels: true, orientation: "horizontal" } }, bubble: { minBubbleRadius: void 0, maxBubbleRadius: void 0 }, candlestick: { colors: { upward: "#00B746", downward: "#EF403C" }, wick: { useFillColor: true } }, boxPlot: { colors: { upper: "#00E396", lower: "#008FFB" } }, heatmap: { radius: 2, enableShades: true, shadeIntensity: 0.5, reverseNegativeShade: false, distributed: false, useFillColorAsStroke: false, colorScale: { inverse: false, ranges: [], min: void 0, max: void 0 } }, treemap: { enableShades: true, shadeIntensity: 0.5, distributed: false, reverseNegativeShade: false, useFillColorAsStroke: false, colorScale: { inverse: false, ranges: [], min: void 0, max: void 0 } }, radialBar: { inverseOrder: false, startAngle: 0, endAngle: 360, offsetX: 0, offsetY: 0, hollow: { margin: 5, size: "50%", background: "transparent", image: void 0, imageWidth: 150, imageHeight: 150, imageOffsetX: 0, imageOffsetY: 0, imageClipped: true, position: "front", dropShadow: { enabled: false, top: 0, left: 0, blur: 3, color: "#000", opacity: 0.5 } }, track: { show: true, startAngle: void 0, endAngle: void 0, background: "#f2f2f2", strokeWidth: "97%", opacity: 1, margin: 5, dropShadow: { enabled: false, top: 0, left: 0, blur: 3, color: "#000", opacity: 0.5 } }, dataLabels: { show: true, name: { show: true, fontSize: "16px", fontFamily: void 0, fontWeight: 600, color: void 0, offsetY: 0, formatter: function(t4) {
            return t4;
          } }, value: { show: true, fontSize: "14px", fontFamily: void 0, fontWeight: 400, color: void 0, offsetY: 16, formatter: function(t4) {
            return t4 + "%";
          } }, total: { show: false, label: "Total", fontSize: "16px", fontWeight: 600, fontFamily: void 0, color: void 0, formatter: function(t4) {
            return t4.globals.seriesTotals.reduce(function(t5, e3) {
              return t5 + e3;
            }, 0) / t4.globals.series.length + "%";
          } } } }, pie: { customScale: 1, offsetX: 0, offsetY: 0, startAngle: 0, endAngle: 360, expandOnClick: true, dataLabels: { offset: 0, minAngleToShowLabel: 10 }, donut: { size: "65%", background: "transparent", labels: { show: false, name: { show: true, fontSize: "16px", fontFamily: void 0, fontWeight: 600, color: void 0, offsetY: -10, formatter: function(t4) {
            return t4;
          } }, value: { show: true, fontSize: "20px", fontFamily: void 0, fontWeight: 400, color: void 0, offsetY: 10, formatter: function(t4) {
            return t4;
          } }, total: { show: false, showAlways: false, label: "Total", fontSize: "16px", fontWeight: 400, fontFamily: void 0, color: void 0, formatter: function(t4) {
            return t4.globals.seriesTotals.reduce(function(t5, e3) {
              return t5 + e3;
            }, 0);
          } } } } }, polarArea: { rings: { strokeWidth: 1, strokeColor: "#e8e8e8" }, spokes: { strokeWidth: 1, connectorColors: "#e8e8e8" } }, radar: { size: void 0, offsetX: 0, offsetY: 0, polygons: { strokeWidth: 1, strokeColors: "#e8e8e8", connectorColors: "#e8e8e8", fill: { colors: void 0 } } } }, colors: void 0, dataLabels: { enabled: true, enabledOnSeries: void 0, formatter: function(t4) {
            return t4 !== null ? t4 : "";
          }, textAnchor: "middle", distributed: false, offsetX: 0, offsetY: 0, style: { fontSize: "12px", fontFamily: void 0, fontWeight: 600, colors: void 0 }, background: { enabled: true, foreColor: "#fff", borderRadius: 2, padding: 4, opacity: 0.9, borderWidth: 1, borderColor: "#fff", dropShadow: { enabled: false, top: 1, left: 1, blur: 1, color: "#000", opacity: 0.45 } }, dropShadow: { enabled: false, top: 1, left: 1, blur: 1, color: "#000", opacity: 0.45 } }, fill: { type: "solid", colors: void 0, opacity: 0.85, gradient: { shade: "dark", type: "horizontal", shadeIntensity: 0.5, gradientToColors: void 0, inverseColors: true, opacityFrom: 1, opacityTo: 1, stops: [0, 50, 100], colorStops: [] }, image: { src: [], width: void 0, height: void 0 }, pattern: { style: "squares", width: 6, height: 6, strokeWidth: 2 } }, forecastDataPoints: { count: 0, fillOpacity: 0.5, strokeWidth: void 0, dashArray: 4 }, grid: { show: true, borderColor: "#e0e0e0", strokeDashArray: 0, position: "back", xaxis: { lines: { show: false } }, yaxis: { lines: { show: true } }, row: { colors: void 0, opacity: 0.5 }, column: { colors: void 0, opacity: 0.5 }, padding: { top: 0, right: 10, bottom: 0, left: 12 } }, labels: [], legend: { show: true, showForSingleSeries: false, showForNullSeries: true, showForZeroSeries: true, floating: false, position: "bottom", horizontalAlign: "center", inverseOrder: false, fontSize: "12px", fontFamily: void 0, fontWeight: 400, width: void 0, height: void 0, formatter: void 0, tooltipHoverFormatter: void 0, offsetX: -20, offsetY: 4, customLegendItems: [], labels: { colors: void 0, useSeriesColors: false }, markers: { width: 12, height: 12, strokeWidth: 0, fillColors: void 0, strokeColor: "#fff", radius: 12, customHTML: void 0, offsetX: 0, offsetY: 0, onClick: void 0 }, itemMargin: { horizontal: 5, vertical: 2 }, onItemClick: { toggleDataSeries: true }, onItemHover: { highlightDataSeries: true } }, markers: { discrete: [], size: 0, colors: void 0, strokeColors: "#fff", strokeWidth: 2, strokeOpacity: 0.9, strokeDashArray: 0, fillOpacity: 1, shape: "circle", width: 8, height: 8, radius: 2, offsetX: 0, offsetY: 0, onClick: void 0, onDblClick: void 0, showNullDataPoints: true, hover: { size: void 0, sizeOffset: 3 } }, noData: { text: void 0, align: "center", verticalAlign: "middle", offsetX: 0, offsetY: 0, style: { color: void 0, fontSize: "14px", fontFamily: void 0 } }, responsive: [], series: void 0, states: { normal: { filter: { type: "none", value: 0 } }, hover: { filter: { type: "lighten", value: 0.1 } }, active: { allowMultipleDataPointsSelection: false, filter: { type: "darken", value: 0.5 } } }, title: { text: void 0, align: "left", margin: 5, offsetX: 0, offsetY: 0, floating: false, style: { fontSize: "14px", fontWeight: 900, fontFamily: void 0, color: void 0 } }, subtitle: { text: void 0, align: "left", margin: 5, offsetX: 0, offsetY: 30, floating: false, style: { fontSize: "12px", fontWeight: 400, fontFamily: void 0, color: void 0 } }, stroke: { show: true, curve: "smooth", lineCap: "butt", width: 2, colors: void 0, dashArray: 0 }, tooltip: { enabled: true, enabledOnSeries: void 0, shared: true, followCursor: false, intersect: false, inverseOrder: false, custom: void 0, fillSeriesColor: false, theme: "light", style: { fontSize: "12px", fontFamily: void 0 }, onDatasetHover: { highlightDataSeries: false }, x: { show: true, format: "dd MMM", formatter: void 0 }, y: { formatter: void 0, title: { formatter: function(t4) {
            return t4 ? t4 + ": " : "";
          } } }, z: { formatter: void 0, title: "Size: " }, marker: { show: true, fillColors: void 0 }, items: { display: "flex" }, fixed: { enabled: false, position: "topRight", offsetX: 0, offsetY: 0 } }, xaxis: { type: "category", categories: [], convertedCatToNumeric: false, offsetX: 0, offsetY: 0, overwriteCategories: void 0, labels: { show: true, rotate: -45, rotateAlways: false, hideOverlappingLabels: true, trim: false, minHeight: void 0, maxHeight: 120, showDuplicates: true, style: { colors: [], fontSize: "12px", fontWeight: 400, fontFamily: void 0, cssClass: "" }, offsetX: 0, offsetY: 0, format: void 0, formatter: void 0, datetimeUTC: true, datetimeFormatter: { year: "yyyy", month: "MMM 'yy", day: "dd MMM", hour: "HH:mm", minute: "HH:mm:ss", second: "HH:mm:ss" } }, axisBorder: { show: true, color: "#e0e0e0", width: "100%", height: 1, offsetX: 0, offsetY: 0 }, axisTicks: { show: true, color: "#e0e0e0", height: 6, offsetX: 0, offsetY: 0 }, tickAmount: void 0, tickPlacement: "on", min: void 0, max: void 0, range: void 0, floating: false, decimalsInFloat: void 0, position: "bottom", title: { text: void 0, offsetX: 0, offsetY: 0, style: { color: void 0, fontSize: "12px", fontWeight: 900, fontFamily: void 0, cssClass: "" } }, crosshairs: { show: true, width: 1, position: "back", opacity: 0.9, stroke: { color: "#b6b6b6", width: 1, dashArray: 3 }, fill: { type: "solid", color: "#B1B9C4", gradient: { colorFrom: "#D8E3F0", colorTo: "#BED1E6", stops: [0, 100], opacityFrom: 0.4, opacityTo: 0.5 } }, dropShadow: { enabled: false, left: 0, top: 0, blur: 1, opacity: 0.4 } }, tooltip: { enabled: true, offsetY: 0, formatter: void 0, style: { fontSize: "12px", fontFamily: void 0 } } }, yaxis: this.yAxis, theme: { mode: "light", palette: "palette1", monochrome: { enabled: false, color: "#008FFB", shadeTo: "light", shadeIntensity: 0.65 } } };
        } }]), t3;
      }(), A = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.graphics = new _(this.ctx), this.w.globals.isBarHorizontal && (this.invertAxis = true), this.helpers = new w(this), this.xAxisAnnotations = new S(this), this.yAxisAnnotations = new k(this), this.pointsAnnotations = new D(this), this.w.globals.isBarHorizontal && this.w.config.yaxis[0].reversed && (this.inversedReversedAxis = true), this.xDivision = this.w.globals.gridWidth / this.w.globals.dataPoints;
        }
        return s(t3, [{ key: "drawAxesAnnotations", value: function() {
          var t4 = this.w;
          if (t4.globals.axisCharts) {
            for (var e3 = this.yAxisAnnotations.drawYAxisAnnotations(), n3 = this.xAxisAnnotations.drawXAxisAnnotations(), i2 = this.pointsAnnotations.drawPointAnnotations(), a2 = t4.config.chart.animations.enabled, r2 = [e3, n3, i2], o2 = [n3.node, e3.node, i2.node], s2 = 0; s2 < 3; s2++)
              t4.globals.dom.elGraphical.add(r2[s2]), !a2 || t4.globals.resized || t4.globals.dataChanged || t4.config.chart.type !== "scatter" && t4.config.chart.type !== "bubble" && t4.globals.dataPoints > 1 && o2[s2].classList.add("apexcharts-element-hidden"), t4.globals.delayedElements.push({ el: o2[s2], index: 0 });
            this.helpers.annotationsBackground();
          }
        } }, { key: "drawImageAnnos", value: function() {
          var t4 = this;
          this.w.config.annotations.images.map(function(e3, n3) {
            t4.addImage(e3, n3);
          });
        } }, { key: "drawTextAnnos", value: function() {
          var t4 = this;
          this.w.config.annotations.texts.map(function(e3, n3) {
            t4.addText(e3, n3);
          });
        } }, { key: "addXaxisAnnotation", value: function(t4, e3, n3) {
          this.xAxisAnnotations.addXaxisAnnotation(t4, e3, n3);
        } }, { key: "addYaxisAnnotation", value: function(t4, e3, n3) {
          this.yAxisAnnotations.addYaxisAnnotation(t4, e3, n3);
        } }, { key: "addPointAnnotation", value: function(t4, e3, n3) {
          this.pointsAnnotations.addPointAnnotation(t4, e3, n3);
        } }, { key: "addText", value: function(t4, e3) {
          var n3 = t4.x, i2 = t4.y, a2 = t4.text, r2 = t4.textAnchor, o2 = t4.foreColor, s2 = t4.fontSize, l2 = t4.fontFamily, c2 = t4.fontWeight, d2 = t4.cssClass, u2 = t4.backgroundColor, h2 = t4.borderWidth, p2 = t4.strokeDashArray, f2 = t4.borderRadius, g2 = t4.borderColor, m2 = t4.appendTo, v2 = m2 === void 0 ? ".apexcharts-annotations" : m2, b2 = t4.paddingLeft, y2 = b2 === void 0 ? 4 : b2, x2 = t4.paddingRight, _2 = x2 === void 0 ? 4 : x2, w2 = t4.paddingBottom, S2 = w2 === void 0 ? 2 : w2, C2 = t4.paddingTop, k2 = C2 === void 0 ? 2 : C2, D2 = this.w, T2 = this.graphics.drawText({ x: n3, y: i2, text: a2, textAnchor: r2 || "start", fontSize: s2 || "12px", fontWeight: c2 || "regular", fontFamily: l2 || D2.config.chart.fontFamily, foreColor: o2 || D2.config.chart.foreColor, cssClass: d2 }), E2 = D2.globals.dom.baseEl.querySelector(v2);
          E2 && E2.appendChild(T2.node);
          var A2 = T2.bbox();
          if (a2) {
            var I2 = this.graphics.drawRect(A2.x - y2, A2.y - k2, A2.width + y2 + _2, A2.height + S2 + k2, f2, u2 || "transparent", 1, h2, g2, p2);
            E2.insertBefore(I2.node, T2.node);
          }
        } }, { key: "addImage", value: function(t4, e3) {
          var n3 = this.w, i2 = t4.path, a2 = t4.x, r2 = a2 === void 0 ? 0 : a2, o2 = t4.y, s2 = o2 === void 0 ? 0 : o2, l2 = t4.width, c2 = l2 === void 0 ? 20 : l2, d2 = t4.height, u2 = d2 === void 0 ? 20 : d2, h2 = t4.appendTo, p2 = h2 === void 0 ? ".apexcharts-annotations" : h2, f2 = n3.globals.dom.Paper.image(i2);
          f2.size(c2, u2).move(r2, s2);
          var g2 = n3.globals.dom.baseEl.querySelector(p2);
          g2 && g2.appendChild(f2.node);
        } }, { key: "addXaxisAnnotationExternal", value: function(t4, e3, n3) {
          return this.addAnnotationExternal({ params: t4, pushToMemory: e3, context: n3, type: "xaxis", contextMethod: n3.addXaxisAnnotation }), n3;
        } }, { key: "addYaxisAnnotationExternal", value: function(t4, e3, n3) {
          return this.addAnnotationExternal({ params: t4, pushToMemory: e3, context: n3, type: "yaxis", contextMethod: n3.addYaxisAnnotation }), n3;
        } }, { key: "addPointAnnotationExternal", value: function(t4, e3, n3) {
          return this.invertAxis === void 0 && (this.invertAxis = n3.w.globals.isBarHorizontal), this.addAnnotationExternal({ params: t4, pushToMemory: e3, context: n3, type: "point", contextMethod: n3.addPointAnnotation }), n3;
        } }, { key: "addAnnotationExternal", value: function(t4) {
          var e3 = t4.params, n3 = t4.pushToMemory, i2 = t4.context, a2 = t4.type, r2 = t4.contextMethod, o2 = i2, s2 = o2.w, l2 = s2.globals.dom.baseEl.querySelector(".apexcharts-".concat(a2, "-annotations")), c2 = l2.childNodes.length + 1, d2 = new E(), u2 = Object.assign({}, a2 === "xaxis" ? d2.xAxisAnnotation : a2 === "yaxis" ? d2.yAxisAnnotation : d2.pointAnnotation), h2 = b.extend(u2, e3);
          switch (a2) {
            case "xaxis":
              this.addXaxisAnnotation(h2, l2, c2);
              break;
            case "yaxis":
              this.addYaxisAnnotation(h2, l2, c2);
              break;
            case "point":
              this.addPointAnnotation(h2, l2, c2);
          }
          var p2 = s2.globals.dom.baseEl.querySelector(".apexcharts-".concat(a2, "-annotations .apexcharts-").concat(a2, "-annotation-label[rel='").concat(c2, "']")), f2 = this.helpers.addBackgroundToAnno(p2, h2);
          return f2 && l2.insertBefore(f2.node, p2), n3 && s2.globals.memory.methodsToExec.push({ context: o2, id: h2.id ? h2.id : b.randomId(), method: r2, label: "addAnnotation", params: e3 }), i2;
        } }, { key: "clearAnnotations", value: function(t4) {
          var e3 = t4.w, n3 = e3.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations");
          e3.globals.memory.methodsToExec.map(function(t5, n4) {
            t5.label !== "addText" && t5.label !== "addAnnotation" || e3.globals.memory.methodsToExec.splice(n4, 1);
          }), n3 = b.listToArray(n3), Array.prototype.forEach.call(n3, function(t5) {
            for (; t5.firstChild; )
              t5.removeChild(t5.firstChild);
          });
        } }, { key: "removeAnnotation", value: function(t4, e3) {
          var n3 = t4.w, i2 = n3.globals.dom.baseEl.querySelectorAll(".".concat(e3));
          i2 && (n3.globals.memory.methodsToExec.map(function(t5, i3) {
            t5.id === e3 && n3.globals.memory.methodsToExec.splice(i3, 1);
          }), Array.prototype.forEach.call(i2, function(t5) {
            t5.parentElement.removeChild(t5);
          }));
        } }]), t3;
      }(), I = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.opts = null, this.seriesIndex = 0;
        }
        return s(t3, [{ key: "clippedImgArea", value: function(t4) {
          var e3 = this.w, n3 = e3.config, i2 = parseInt(e3.globals.gridWidth, 10), a2 = parseInt(e3.globals.gridHeight, 10), r2 = i2 > a2 ? i2 : a2, o2 = t4.image, s2 = 0, l2 = 0;
          t4.width === void 0 && t4.height === void 0 ? n3.fill.image.width !== void 0 && n3.fill.image.height !== void 0 ? (s2 = n3.fill.image.width + 1, l2 = n3.fill.image.height) : (s2 = r2 + 1, l2 = r2) : (s2 = t4.width, l2 = t4.height);
          var c2 = document.createElementNS(e3.globals.SVGNS, "pattern");
          _.setAttrs(c2, { id: t4.patternID, patternUnits: t4.patternUnits ? t4.patternUnits : "userSpaceOnUse", width: s2 + "px", height: l2 + "px" });
          var d2 = document.createElementNS(e3.globals.SVGNS, "image");
          c2.appendChild(d2), d2.setAttributeNS(window.SVG.xlink, "href", o2), _.setAttrs(d2, { x: 0, y: 0, preserveAspectRatio: "none", width: s2 + "px", height: l2 + "px" }), d2.style.opacity = t4.opacity, e3.globals.dom.elDefs.node.appendChild(c2);
        } }, { key: "getSeriesIndex", value: function(t4) {
          var e3 = this.w;
          return (e3.config.chart.type === "bar" || e3.config.chart.type === "rangeBar") && e3.config.plotOptions.bar.distributed || e3.config.chart.type === "heatmap" || e3.config.chart.type === "treemap" ? this.seriesIndex = t4.seriesNumber : this.seriesIndex = t4.seriesNumber % e3.globals.series.length, this.seriesIndex;
        } }, { key: "fillPath", value: function(t4) {
          var e3 = this.w;
          this.opts = t4;
          var n3, i2, a2, r2 = this.w.config;
          this.seriesIndex = this.getSeriesIndex(t4);
          var o2 = this.getFillColors()[this.seriesIndex];
          e3.globals.seriesColors[this.seriesIndex] !== void 0 && (o2 = e3.globals.seriesColors[this.seriesIndex]), typeof o2 == "function" && (o2 = o2({ seriesIndex: this.seriesIndex, dataPointIndex: t4.dataPointIndex, value: t4.value, w: e3 }));
          var s2 = this.getFillType(this.seriesIndex), l2 = Array.isArray(r2.fill.opacity) ? r2.fill.opacity[this.seriesIndex] : r2.fill.opacity;
          t4.color && (o2 = t4.color);
          var c2 = o2;
          if (o2.indexOf("rgb") === -1 ? o2.length < 9 && (c2 = b.hexToRgba(o2, l2)) : o2.indexOf("rgba") > -1 && (l2 = b.getOpacityFromRGBA(o2)), t4.opacity && (l2 = t4.opacity), s2 === "pattern" && (i2 = this.handlePatternFill(i2, o2, l2, c2)), s2 === "gradient" && (a2 = this.handleGradientFill(o2, l2, this.seriesIndex)), s2 === "image") {
            var d2 = r2.fill.image.src, u2 = t4.patternID ? t4.patternID : "";
            this.clippedImgArea({ opacity: l2, image: Array.isArray(d2) ? t4.seriesNumber < d2.length ? d2[t4.seriesNumber] : d2[0] : d2, width: t4.width ? t4.width : void 0, height: t4.height ? t4.height : void 0, patternUnits: t4.patternUnits, patternID: "pattern".concat(e3.globals.cuid).concat(t4.seriesNumber + 1).concat(u2) }), n3 = "url(#pattern".concat(e3.globals.cuid).concat(t4.seriesNumber + 1).concat(u2, ")");
          } else
            n3 = s2 === "gradient" ? a2 : s2 === "pattern" ? i2 : c2;
          return t4.solid && (n3 = c2), n3;
        } }, { key: "getFillType", value: function(t4) {
          var e3 = this.w;
          return Array.isArray(e3.config.fill.type) ? e3.config.fill.type[t4] : e3.config.fill.type;
        } }, { key: "getFillColors", value: function() {
          var t4 = this.w, e3 = t4.config, n3 = this.opts, i2 = [];
          return t4.globals.comboCharts ? t4.config.series[this.seriesIndex].type === "line" ? Array.isArray(t4.globals.stroke.colors) ? i2 = t4.globals.stroke.colors : i2.push(t4.globals.stroke.colors) : Array.isArray(t4.globals.fill.colors) ? i2 = t4.globals.fill.colors : i2.push(t4.globals.fill.colors) : e3.chart.type === "line" ? Array.isArray(t4.globals.stroke.colors) ? i2 = t4.globals.stroke.colors : i2.push(t4.globals.stroke.colors) : Array.isArray(t4.globals.fill.colors) ? i2 = t4.globals.fill.colors : i2.push(t4.globals.fill.colors), n3.fillColors !== void 0 && (i2 = [], Array.isArray(n3.fillColors) ? i2 = n3.fillColors.slice() : i2.push(n3.fillColors)), i2;
        } }, { key: "handlePatternFill", value: function(t4, e3, n3, i2) {
          var a2 = this.w.config, r2 = this.opts, o2 = new _(this.ctx), s2 = a2.fill.pattern.strokeWidth === void 0 ? Array.isArray(a2.stroke.width) ? a2.stroke.width[this.seriesIndex] : a2.stroke.width : Array.isArray(a2.fill.pattern.strokeWidth) ? a2.fill.pattern.strokeWidth[this.seriesIndex] : a2.fill.pattern.strokeWidth, l2 = e3;
          return Array.isArray(a2.fill.pattern.style) ? a2.fill.pattern.style[r2.seriesNumber] !== void 0 ? o2.drawPattern(a2.fill.pattern.style[r2.seriesNumber], a2.fill.pattern.width, a2.fill.pattern.height, l2, s2, n3) : i2 : o2.drawPattern(a2.fill.pattern.style, a2.fill.pattern.width, a2.fill.pattern.height, l2, s2, n3);
        } }, { key: "handleGradientFill", value: function(t4, e3, n3) {
          var i2, a2 = this.w.config, r2 = this.opts, o2 = new _(this.ctx), s2 = new b(), l2 = a2.fill.gradient.type, c2 = t4, d2 = a2.fill.gradient.opacityFrom === void 0 ? e3 : Array.isArray(a2.fill.gradient.opacityFrom) ? a2.fill.gradient.opacityFrom[n3] : a2.fill.gradient.opacityFrom;
          c2.indexOf("rgba") > -1 && (d2 = b.getOpacityFromRGBA(c2));
          var u2 = a2.fill.gradient.opacityTo === void 0 ? e3 : Array.isArray(a2.fill.gradient.opacityTo) ? a2.fill.gradient.opacityTo[n3] : a2.fill.gradient.opacityTo;
          if (a2.fill.gradient.gradientToColors === void 0 || a2.fill.gradient.gradientToColors.length === 0)
            i2 = a2.fill.gradient.shade === "dark" ? s2.shadeColor(-1 * parseFloat(a2.fill.gradient.shadeIntensity), t4.indexOf("rgb") > -1 ? b.rgb2hex(t4) : t4) : s2.shadeColor(parseFloat(a2.fill.gradient.shadeIntensity), t4.indexOf("rgb") > -1 ? b.rgb2hex(t4) : t4);
          else if (a2.fill.gradient.gradientToColors[r2.seriesNumber]) {
            var h2 = a2.fill.gradient.gradientToColors[r2.seriesNumber];
            i2 = h2, h2.indexOf("rgba") > -1 && (u2 = b.getOpacityFromRGBA(h2));
          } else
            i2 = t4;
          if (a2.fill.gradient.inverseColors) {
            var p2 = c2;
            c2 = i2, i2 = p2;
          }
          return c2.indexOf("rgb") > -1 && (c2 = b.rgb2hex(c2)), i2.indexOf("rgb") > -1 && (i2 = b.rgb2hex(i2)), o2.drawGradient(l2, c2, i2, d2, u2, r2.size, a2.fill.gradient.stops, a2.fill.gradient.colorStops, n3);
        } }]), t3;
      }(), M = function() {
        function t3(e3, n3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "setGlobalMarkerSize", value: function() {
          var t4 = this.w;
          if (t4.globals.markers.size = Array.isArray(t4.config.markers.size) ? t4.config.markers.size : [t4.config.markers.size], t4.globals.markers.size.length > 0) {
            if (t4.globals.markers.size.length < t4.globals.series.length + 1)
              for (var e3 = 0; e3 <= t4.globals.series.length; e3++)
                t4.globals.markers.size[e3] === void 0 && t4.globals.markers.size.push(t4.globals.markers.size[0]);
          } else
            t4.globals.markers.size = t4.config.series.map(function(e4) {
              return t4.config.markers.size;
            });
        } }, { key: "plotChartMarkers", value: function(t4, e3, n3, i2) {
          var a2, r2 = arguments.length > 4 && arguments[4] !== void 0 && arguments[4], o2 = this.w, s2 = e3, l2 = t4, c2 = null, d2 = new _(this.ctx);
          if ((o2.globals.markers.size[e3] > 0 || r2) && (c2 = d2.group({ class: r2 ? "" : "apexcharts-series-markers" })).attr("clip-path", "url(#gridRectMarkerMask".concat(o2.globals.cuid, ")")), Array.isArray(l2.x))
            for (var u2 = 0; u2 < l2.x.length; u2++) {
              var h2 = n3;
              n3 === 1 && u2 === 0 && (h2 = 0), n3 === 1 && u2 === 1 && (h2 = 1);
              var p2 = "apexcharts-marker";
              o2.config.chart.type !== "line" && o2.config.chart.type !== "area" || o2.globals.comboCharts || o2.config.tooltip.intersect || (p2 += " no-pointer-events");
              var f2 = Array.isArray(o2.config.markers.size) ? o2.globals.markers.size[e3] > 0 : o2.config.markers.size > 0;
              if (f2 || r2) {
                b.isNumber(l2.y[u2]) ? p2 += " w".concat(b.randomId()) : p2 = "apexcharts-nullpoint";
                var g2 = this.getMarkerConfig(p2, e3, h2);
                o2.config.series[s2].data[h2] && (o2.config.series[s2].data[h2].fillColor && (g2.pointFillColor = o2.config.series[s2].data[h2].fillColor), o2.config.series[s2].data[h2].strokeColor && (g2.pointStrokeColor = o2.config.series[s2].data[h2].strokeColor)), i2 && (g2.pSize = i2), (a2 = d2.drawMarker(l2.x[u2], l2.y[u2], g2)).attr("rel", h2), a2.attr("j", h2), a2.attr("index", e3), a2.node.setAttribute("default-marker-size", g2.pSize);
                var m2 = new x(this.ctx);
                m2.setSelectionFilter(a2, e3, h2), this.addEvents(a2), c2 && c2.add(a2);
              } else
                o2.globals.pointsArray[e3] === void 0 && (o2.globals.pointsArray[e3] = []), o2.globals.pointsArray[e3].push([l2.x[u2], l2.y[u2]]);
            }
          return c2;
        } }, { key: "getMarkerConfig", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, i2 = this.w, a2 = this.getMarkerStyle(e3), r2 = i2.globals.markers.size[e3], o2 = i2.config.markers;
          return n3 !== null && o2.discrete.length && o2.discrete.map(function(t5) {
            t5.seriesIndex === e3 && t5.dataPointIndex === n3 && (a2.pointStrokeColor = t5.strokeColor, a2.pointFillColor = t5.fillColor, r2 = t5.size, a2.pointShape = t5.shape);
          }), { pSize: r2, pRadius: o2.radius, width: Array.isArray(o2.width) ? o2.width[e3] : o2.width, height: Array.isArray(o2.height) ? o2.height[e3] : o2.height, pointStrokeWidth: Array.isArray(o2.strokeWidth) ? o2.strokeWidth[e3] : o2.strokeWidth, pointStrokeColor: a2.pointStrokeColor, pointFillColor: a2.pointFillColor, shape: a2.pointShape || (Array.isArray(o2.shape) ? o2.shape[e3] : o2.shape), class: t4, pointStrokeOpacity: Array.isArray(o2.strokeOpacity) ? o2.strokeOpacity[e3] : o2.strokeOpacity, pointStrokeDashArray: Array.isArray(o2.strokeDashArray) ? o2.strokeDashArray[e3] : o2.strokeDashArray, pointFillOpacity: Array.isArray(o2.fillOpacity) ? o2.fillOpacity[e3] : o2.fillOpacity, seriesIndex: e3 };
        } }, { key: "addEvents", value: function(t4) {
          var e3 = this.w, n3 = new _(this.ctx);
          t4.node.addEventListener("mouseenter", n3.pathMouseEnter.bind(this.ctx, t4)), t4.node.addEventListener("mouseleave", n3.pathMouseLeave.bind(this.ctx, t4)), t4.node.addEventListener("mousedown", n3.pathMouseDown.bind(this.ctx, t4)), t4.node.addEventListener("click", e3.config.markers.onClick), t4.node.addEventListener("dblclick", e3.config.markers.onDblClick), t4.node.addEventListener("touchstart", n3.pathMouseDown.bind(this.ctx, t4), { passive: true });
        } }, { key: "getMarkerStyle", value: function(t4) {
          var e3 = this.w, n3 = e3.globals.markers.colors, i2 = e3.config.markers.strokeColor || e3.config.markers.strokeColors;
          return { pointStrokeColor: Array.isArray(i2) ? i2[t4] : i2, pointFillColor: Array.isArray(n3) ? n3[t4] : n3 };
        } }]), t3;
      }(), R = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled;
        }
        return s(t3, [{ key: "draw", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = new _(this.ctx), r2 = n3.realIndex, o2 = n3.pointsPos, s2 = n3.zRatio, l2 = n3.elParent, c2 = a2.group({ class: "apexcharts-series-markers apexcharts-series-".concat(i2.config.chart.type) });
          if (c2.attr("clip-path", "url(#gridRectMarkerMask".concat(i2.globals.cuid, ")")), Array.isArray(o2.x))
            for (var d2 = 0; d2 < o2.x.length; d2++) {
              var u2 = e3 + 1, h2 = true;
              e3 === 0 && d2 === 0 && (u2 = 0), e3 === 0 && d2 === 1 && (u2 = 1);
              var p2 = 0, f2 = i2.globals.markers.size[r2];
              if (s2 !== 1 / 0) {
                f2 = i2.globals.seriesZ[r2][u2] / s2;
                var g2 = i2.config.plotOptions.bubble;
                g2.minBubbleRadius && f2 < g2.minBubbleRadius && (f2 = g2.minBubbleRadius), g2.maxBubbleRadius && f2 > g2.maxBubbleRadius && (f2 = g2.maxBubbleRadius);
              }
              i2.config.chart.animations.enabled || (p2 = f2);
              var m2 = o2.x[d2], v2 = o2.y[d2];
              if (p2 = p2 || 0, v2 !== null && i2.globals.series[r2][u2] !== void 0 || (h2 = false), h2) {
                var b2 = this.drawPoint(m2, v2, p2, f2, r2, u2, e3);
                c2.add(b2);
              }
              l2.add(c2);
            }
        } }, { key: "drawPoint", value: function(t4, e3, n3, i2, a2, r2, o2) {
          var s2, l2 = this.w, c2 = a2, d2 = new y(this.ctx), u2 = new x(this.ctx), h2 = new I(this.ctx), p2 = new M(this.ctx), f2 = new _(this.ctx), g2 = p2.getMarkerConfig("apexcharts-marker", c2), m2 = h2.fillPath({ seriesNumber: a2, dataPointIndex: r2, patternUnits: "objectBoundingBox", value: l2.globals.series[a2][o2] });
          if (g2.shape === "circle" ? s2 = f2.drawCircle(n3) : g2.shape !== "square" && g2.shape !== "rect" || (s2 = f2.drawRect(0, 0, g2.width - g2.pointStrokeWidth / 2, g2.height - g2.pointStrokeWidth / 2, g2.pRadius)), l2.config.series[c2].data[r2] && l2.config.series[c2].data[r2].fillColor && (m2 = l2.config.series[c2].data[r2].fillColor), s2.attr({ x: t4 - g2.width / 2 - g2.pointStrokeWidth / 2, y: e3 - g2.height / 2 - g2.pointStrokeWidth / 2, cx: t4, cy: e3, fill: m2, "fill-opacity": g2.pointFillOpacity, stroke: g2.pointStrokeColor, r: i2, "stroke-width": g2.pointStrokeWidth, "stroke-dasharray": g2.pointStrokeDashArray, "stroke-opacity": g2.pointStrokeOpacity }), l2.config.chart.dropShadow.enabled) {
            var v2 = l2.config.chart.dropShadow;
            u2.dropShadow(s2, v2, a2);
          }
          if (!this.initialAnim || l2.globals.dataChanged || l2.globals.resized)
            l2.globals.animationEnded = true;
          else {
            var b2 = l2.config.chart.animations.speed;
            d2.animateMarker(s2, 0, g2.shape === "circle" ? i2 : { width: g2.width, height: g2.height }, b2, l2.globals.easing, function() {
              window.setTimeout(function() {
                d2.animationCompleted(s2);
              }, 100);
            });
          }
          if (l2.globals.dataChanged && g2.shape === "circle")
            if (this.dynamicAnim) {
              var w2, S2, C2, k2, D2 = l2.config.chart.animations.dynamicAnimation.speed;
              (k2 = l2.globals.previousPaths[a2] && l2.globals.previousPaths[a2][o2]) != null && (w2 = k2.x, S2 = k2.y, C2 = k2.r !== void 0 ? k2.r : i2);
              for (var T2 = 0; T2 < l2.globals.collapsedSeries.length; T2++)
                l2.globals.collapsedSeries[T2].index === a2 && (D2 = 1, i2 = 0);
              t4 === 0 && e3 === 0 && (i2 = 0), d2.animateCircle(s2, { cx: w2, cy: S2, r: C2 }, { cx: t4, cy: e3, r: i2 }, D2, l2.globals.easing);
            } else
              s2.attr({ r: i2 });
          return s2.attr({ rel: r2, j: r2, index: a2, "default-marker-size": i2 }), u2.setSelectionFilter(s2, a2, r2), p2.addEvents(s2), s2.node.classList.add("apexcharts-marker"), s2;
        } }, { key: "centerTextInBubble", value: function(t4) {
          var e3 = this.w;
          return { y: t4 += parseInt(e3.config.dataLabels.style.fontSize, 10) / 4 };
        } }]), t3;
      }(), P = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "dataLabelsCorrection", value: function(t4, e3, n3, i2, a2, r2, o2) {
          var s2 = this.w, l2 = false, c2 = new _(this.ctx).getTextRects(n3, o2), d2 = c2.width, u2 = c2.height;
          e3 < 0 && (e3 = 0), e3 > s2.globals.gridHeight + u2 && (e3 = s2.globals.gridHeight + u2 / 2), s2.globals.dataLabelsRects[i2] === void 0 && (s2.globals.dataLabelsRects[i2] = []), s2.globals.dataLabelsRects[i2].push({ x: t4, y: e3, width: d2, height: u2 });
          var h2 = s2.globals.dataLabelsRects[i2].length - 2, p2 = s2.globals.lastDrawnDataLabelsIndexes[i2] !== void 0 ? s2.globals.lastDrawnDataLabelsIndexes[i2][s2.globals.lastDrawnDataLabelsIndexes[i2].length - 1] : 0;
          if (s2.globals.dataLabelsRects[i2][h2] !== void 0) {
            var f2 = s2.globals.dataLabelsRects[i2][p2];
            (t4 > f2.x + f2.width + 2 || e3 > f2.y + f2.height + 2 || t4 + d2 < f2.x) && (l2 = true);
          }
          return (a2 === 0 || r2) && (l2 = true), { x: t4, y: e3, textRects: c2, drawnextLabel: l2 };
        } }, { key: "drawDataLabel", value: function(t4, e3, n3) {
          var i2 = this, a2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : 2, r2 = this.w, o2 = new _(this.ctx), s2 = r2.config.dataLabels, l2 = 0, c2 = 0, d2 = n3, u2 = null;
          if (!s2.enabled || !Array.isArray(t4.x))
            return u2;
          u2 = o2.group({ class: "apexcharts-data-labels" });
          for (var h2 = 0; h2 < t4.x.length; h2++)
            if (l2 = t4.x[h2] + s2.offsetX, c2 = t4.y[h2] + s2.offsetY + a2, !isNaN(l2)) {
              n3 === 1 && h2 === 0 && (d2 = 0), n3 === 1 && h2 === 1 && (d2 = 1);
              var p2 = r2.globals.series[e3][d2], f2 = "", g2 = function(t5) {
                return r2.config.dataLabels.formatter(t5, { ctx: i2.ctx, seriesIndex: e3, dataPointIndex: d2, w: r2 });
              };
              if (r2.config.chart.type === "bubble") {
                f2 = g2(p2 = r2.globals.seriesZ[e3][d2]), c2 = t4.y[h2];
                var m2 = new R(this.ctx), v2 = m2.centerTextInBubble(c2, e3, d2);
                c2 = v2.y;
              } else
                p2 !== void 0 && (f2 = g2(p2));
              this.plotDataLabelsText({ x: l2, y: c2, text: f2, i: e3, j: d2, parent: u2, offsetCorrection: true, dataLabelsConfig: r2.config.dataLabels });
            }
          return u2;
        } }, { key: "plotDataLabelsText", value: function(t4) {
          var e3 = this.w, n3 = new _(this.ctx), i2 = t4.x, a2 = t4.y, r2 = t4.i, o2 = t4.j, s2 = t4.text, l2 = t4.textAnchor, c2 = t4.fontSize, d2 = t4.parent, u2 = t4.dataLabelsConfig, h2 = t4.color, p2 = t4.alwaysDrawDataLabel, f2 = t4.offsetCorrection;
          if (!(Array.isArray(e3.config.dataLabels.enabledOnSeries) && e3.config.dataLabels.enabledOnSeries.indexOf(r2) < 0)) {
            var g2 = { x: i2, y: a2, drawnextLabel: true };
            f2 && (g2 = this.dataLabelsCorrection(i2, a2, s2, r2, o2, p2, parseInt(u2.style.fontSize, 10))), e3.globals.zoomed || (i2 = g2.x, a2 = g2.y), g2.textRects && (i2 < -10 - g2.textRects.width || i2 > e3.globals.gridWidth + g2.textRects.width + 10) && (s2 = "");
            var m2 = e3.globals.dataLabels.style.colors[r2];
            ((e3.config.chart.type === "bar" || e3.config.chart.type === "rangeBar") && e3.config.plotOptions.bar.distributed || e3.config.dataLabels.distributed) && (m2 = e3.globals.dataLabels.style.colors[o2]), typeof m2 == "function" && (m2 = m2({ series: e3.globals.series, seriesIndex: r2, dataPointIndex: o2, w: e3 })), h2 && (m2 = h2);
            var v2 = u2.offsetX, b2 = u2.offsetY;
            if (e3.config.chart.type !== "bar" && e3.config.chart.type !== "rangeBar" || (v2 = 0, b2 = 0), g2.drawnextLabel) {
              var y2 = n3.drawText({ width: 100, height: parseInt(u2.style.fontSize, 10), x: i2 + v2, y: a2 + b2, foreColor: m2, textAnchor: l2 || u2.textAnchor, text: s2, fontSize: c2 || u2.style.fontSize, fontFamily: u2.style.fontFamily, fontWeight: u2.style.fontWeight || "normal" });
              if (y2.attr({ class: "apexcharts-datalabel", cx: i2, cy: a2 }), u2.dropShadow.enabled) {
                var w2 = u2.dropShadow;
                new x(this.ctx).dropShadow(y2, w2);
              }
              d2.add(y2), e3.globals.lastDrawnDataLabelsIndexes[r2] === void 0 && (e3.globals.lastDrawnDataLabelsIndexes[r2] = []), e3.globals.lastDrawnDataLabelsIndexes[r2].push(o2);
            }
          }
        } }, { key: "addBackgroundToDataLabel", value: function(t4, e3) {
          var n3 = this.w, i2 = n3.config.dataLabels.background, a2 = i2.padding, r2 = i2.padding / 2, o2 = e3.width, s2 = e3.height, l2 = new _(this.ctx).drawRect(e3.x - a2, e3.y - r2 / 2, o2 + 2 * a2, s2 + r2, i2.borderRadius, n3.config.chart.background === "transparent" ? "#fff" : n3.config.chart.background, i2.opacity, i2.borderWidth, i2.borderColor);
          return i2.dropShadow.enabled && new x(this.ctx).dropShadow(l2, i2.dropShadow), l2;
        } }, { key: "dataLabelsBackground", value: function() {
          var t4 = this.w;
          if (t4.config.chart.type !== "bubble")
            for (var e3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels text"), n3 = 0; n3 < e3.length; n3++) {
              var i2 = e3[n3], a2 = i2.getBBox(), r2 = null;
              if (a2.width && a2.height && (r2 = this.addBackgroundToDataLabel(i2, a2)), r2) {
                i2.parentNode.insertBefore(r2.node, i2);
                var o2 = i2.getAttribute("fill");
                !t4.config.chart.animations.enabled || t4.globals.resized || t4.globals.dataChanged ? r2.attr({ fill: o2 }) : r2.animate().attr({ fill: o2 }), i2.setAttribute("fill", t4.config.dataLabels.background.foreColor);
              }
            }
        } }, { key: "bringForward", value: function() {
          for (var t4 = this.w, e3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-datalabels"), n3 = t4.globals.dom.baseEl.querySelector(".apexcharts-plot-series:last-child"), i2 = 0; i2 < e3.length; i2++)
            n3 && n3.insertBefore(e3[i2], n3.nextSibling);
        } }]), t3;
      }(), O = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.barCtx = e3;
        }
        return s(t3, [{ key: "handleBarDataLabels", value: function(t4) {
          var e3 = t4.x, n3 = t4.y, i2 = t4.y1, a2 = t4.y2, r2 = t4.i, o2 = t4.j, s2 = t4.realIndex, l2 = t4.series, c2 = t4.barHeight, d2 = t4.barWidth, u2 = t4.barYPosition, h2 = t4.visibleSeries, p2 = t4.renderedPath, f2 = this.w, g2 = new _(this.barCtx.ctx), m2 = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[s2] : this.barCtx.strokeWidth, v2 = e3 + parseFloat(d2 * h2), b2 = n3 + parseFloat(c2 * h2);
          f2.globals.isXNumeric && !f2.globals.isBarHorizontal && (v2 = e3 + parseFloat(d2 * (h2 + 1)), b2 = n3 + parseFloat(c2 * (h2 + 1)) - m2);
          var y2, x2 = e3, w2 = n3, S2 = f2.config.dataLabels, C2 = this.barCtx.barOptions.dataLabels;
          u2 !== void 0 && this.barCtx.isTimelineBar && (b2 = u2, w2 = u2);
          var k2 = S2.offsetX, D2 = S2.offsetY, T2 = { width: 0, height: 0 };
          if (f2.config.dataLabels.enabled) {
            var E2 = this.barCtx.series[r2][o2];
            T2 = g2.getTextRects(f2.globals.yLabelFormatters[0](E2), parseFloat(S2.style.fontSize));
          }
          var A2 = { x: e3, y: n3, i: r2, j: o2, renderedPath: p2, bcx: v2, bcy: b2, barHeight: c2, barWidth: d2, textRects: T2, strokeWidth: m2, dataLabelsX: x2, dataLabelsY: w2, barDataLabelsConfig: C2, offX: k2, offY: D2 };
          return y2 = this.barCtx.isHorizontal ? this.calculateBarsDataLabelsPosition(A2) : this.calculateColumnsDataLabelsPosition(A2), p2.attr({ cy: y2.bcy, cx: y2.bcx, j: o2, val: l2[r2][o2], barHeight: c2, barWidth: d2 }), this.drawCalculatedDataLabels({ x: y2.dataLabelsX, y: y2.dataLabelsY, val: this.barCtx.isTimelineBar ? [i2, a2] : l2[r2][o2], i: s2, j: o2, barWidth: d2, barHeight: c2, textRects: T2, dataLabelsConfig: S2 });
        } }, { key: "calculateColumnsDataLabelsPosition", value: function(t4) {
          var e3, n3 = this.w, i2 = t4.i, a2 = t4.j, r2 = t4.y, o2 = t4.bcx, s2 = t4.barWidth, l2 = t4.barHeight, c2 = t4.textRects, d2 = t4.dataLabelsY, u2 = t4.barDataLabelsConfig, h2 = t4.strokeWidth, p2 = t4.offX, f2 = t4.offY;
          l2 = Math.abs(l2);
          var g2 = n3.config.plotOptions.bar.dataLabels.orientation === "vertical";
          o2 -= h2 / 2;
          var m2 = n3.globals.gridWidth / n3.globals.dataPoints;
          e3 = n3.globals.isXNumeric ? o2 - s2 / 2 + p2 : o2 - m2 + s2 / 2 + p2, g2 && (e3 = e3 + c2.height / 2 - h2 / 2 - 2);
          var v2 = this.barCtx.series[i2][a2] < 0, b2 = r2;
          switch (this.barCtx.isReversed && (b2 = r2 - l2 + (v2 ? 2 * l2 : 0), r2 -= l2), u2.position) {
            case "center":
              d2 = g2 ? v2 ? b2 + l2 / 2 + f2 : b2 + l2 / 2 - f2 : v2 ? b2 - l2 / 2 + c2.height / 2 + f2 : b2 + l2 / 2 + c2.height / 2 - f2;
              break;
            case "bottom":
              d2 = g2 ? v2 ? b2 + l2 + f2 : b2 + l2 - f2 : v2 ? b2 - l2 + c2.height + h2 + f2 : b2 + l2 - c2.height / 2 + h2 - f2;
              break;
            case "top":
              d2 = g2 ? v2 ? b2 + f2 : b2 - f2 : v2 ? b2 - c2.height / 2 - f2 : b2 + c2.height + f2;
          }
          return n3.config.chart.stacked || (d2 < 0 ? d2 = 0 + h2 : d2 + c2.height / 3 > n3.globals.gridHeight && (d2 = n3.globals.gridHeight - h2)), { bcx: o2, bcy: r2, dataLabelsX: e3, dataLabelsY: d2 };
        } }, { key: "calculateBarsDataLabelsPosition", value: function(t4) {
          var e3 = this.w, n3 = t4.x, i2 = t4.i, a2 = t4.j, r2 = t4.bcy, o2 = t4.barHeight, s2 = t4.barWidth, l2 = t4.textRects, c2 = t4.dataLabelsX, d2 = t4.strokeWidth, u2 = t4.barDataLabelsConfig, h2 = t4.offX, p2 = t4.offY, f2 = e3.globals.gridHeight / e3.globals.dataPoints;
          s2 = Math.abs(s2);
          var g2 = r2 - (this.barCtx.isTimelineBar ? 0 : f2) + o2 / 2 + l2.height / 2 + p2 - 3, m2 = this.barCtx.series[i2][a2] < 0, v2 = n3;
          switch (this.barCtx.isReversed && (v2 = n3 + s2 - (m2 ? 2 * s2 : 0), n3 = e3.globals.gridWidth - s2), u2.position) {
            case "center":
              c2 = m2 ? v2 + s2 / 2 - h2 : Math.max(l2.width / 2, v2 - s2 / 2) + h2;
              break;
            case "bottom":
              c2 = m2 ? v2 + s2 - d2 - Math.round(l2.width / 2) - h2 : v2 - s2 + d2 + Math.round(l2.width / 2) + h2;
              break;
            case "top":
              c2 = m2 ? v2 - d2 + Math.round(l2.width / 2) - h2 : v2 - d2 - Math.round(l2.width / 2) + h2;
          }
          return e3.config.chart.stacked || (c2 < 0 ? c2 = c2 + l2.width + d2 : c2 + l2.width / 2 > e3.globals.gridWidth && (c2 = e3.globals.gridWidth - l2.width - d2)), { bcx: n3, bcy: r2, dataLabelsX: c2, dataLabelsY: g2 };
        } }, { key: "drawCalculatedDataLabels", value: function(t4) {
          var e3 = t4.x, n3 = t4.y, i2 = t4.val, a2 = t4.i, r2 = t4.j, o2 = t4.textRects, s2 = t4.barHeight, l2 = t4.barWidth, c2 = t4.dataLabelsConfig, u2 = this.w, h2 = "rotate(0)";
          u2.config.plotOptions.bar.dataLabels.orientation === "vertical" && (h2 = "rotate(-90, ".concat(e3, ", ").concat(n3, ")"));
          var p2 = new P(this.barCtx.ctx), f2 = new _(this.barCtx.ctx), g2 = c2.formatter, m2 = null, v2 = u2.globals.collapsedSeriesIndices.indexOf(a2) > -1;
          if (c2.enabled && !v2) {
            m2 = f2.group({ class: "apexcharts-data-labels", transform: h2 });
            var b2 = "";
            i2 !== void 0 && (b2 = g2(i2, { seriesIndex: a2, dataPointIndex: r2, w: u2 }));
            var y2 = u2.globals.series[a2][r2] < 0, x2 = u2.config.plotOptions.bar.dataLabels.position;
            u2.config.plotOptions.bar.dataLabels.orientation === "vertical" && (x2 === "top" && (c2.textAnchor = y2 ? "end" : "start"), x2 === "center" && (c2.textAnchor = "middle"), x2 === "bottom" && (c2.textAnchor = y2 ? "end" : "start")), this.barCtx.isTimelineBar && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && l2 < f2.getTextRects(b2, parseFloat(c2.style.fontSize)).width && (b2 = ""), u2.config.chart.stacked && this.barCtx.barOptions.dataLabels.hideOverflowingLabels && (this.barCtx.isHorizontal ? (l2 > 0 && o2.width / 1.6 > l2 || l2 < 0 && o2.width / 1.6 < l2) && (b2 = "") : o2.height / 1.6 > s2 && (b2 = ""));
            var w2 = d({}, c2);
            this.barCtx.isHorizontal && i2 < 0 && (c2.textAnchor === "start" ? w2.textAnchor = "end" : c2.textAnchor === "end" && (w2.textAnchor = "start")), p2.plotDataLabelsText({ x: e3, y: n3, text: b2, i: a2, j: r2, parent: m2, dataLabelsConfig: w2, alwaysDrawDataLabel: true, offsetCorrection: true });
          }
          return m2;
        } }]), t3;
      }(), j = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.legendInactiveClass = "legend-mouseover-inactive";
        }
        return s(t3, [{ key: "getAllSeriesEls", value: function() {
          return this.w.globals.dom.baseEl.getElementsByClassName("apexcharts-series");
        } }, { key: "getSeriesByName", value: function(t4) {
          return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner .apexcharts-series[seriesName='".concat(b.escapeString(t4), "']"));
        } }, { key: "isSeriesHidden", value: function(t4) {
          var e3 = this.getSeriesByName(t4), n3 = parseInt(e3.getAttribute("data:realIndex"), 10);
          return { isHidden: e3.classList.contains("apexcharts-series-collapsed"), realIndex: n3 };
        } }, { key: "addCollapsedClassToSeries", value: function(t4, e3) {
          var n3 = this.w;
          function i2(n4) {
            for (var i3 = 0; i3 < n4.length; i3++)
              n4[i3].index === e3 && t4.node.classList.add("apexcharts-series-collapsed");
          }
          i2(n3.globals.collapsedSeries), i2(n3.globals.ancillaryCollapsedSeries);
        } }, { key: "toggleSeries", value: function(t4) {
          var e3 = this.isSeriesHidden(t4);
          return this.ctx.legend.legendHelpers.toggleDataSeries(e3.realIndex, e3.isHidden), e3.isHidden;
        } }, { key: "showSeries", value: function(t4) {
          var e3 = this.isSeriesHidden(t4);
          e3.isHidden && this.ctx.legend.legendHelpers.toggleDataSeries(e3.realIndex, true);
        } }, { key: "hideSeries", value: function(t4) {
          var e3 = this.isSeriesHidden(t4);
          e3.isHidden || this.ctx.legend.legendHelpers.toggleDataSeries(e3.realIndex, false);
        } }, { key: "resetSeries", value: function() {
          var t4 = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0], e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], i2 = this.w, a2 = b.clone(i2.globals.initialSeries);
          i2.globals.previousPaths = [], n3 ? (i2.globals.collapsedSeries = [], i2.globals.ancillaryCollapsedSeries = [], i2.globals.collapsedSeriesIndices = [], i2.globals.ancillaryCollapsedSeriesIndices = []) : a2 = this.emptyCollapsedSeries(a2), i2.config.series = a2, t4 && (e3 && (i2.globals.zoomed = false, this.ctx.updateHelpers.revertDefaultAxisMinMax()), this.ctx.updateHelpers._updateSeries(a2, i2.config.chart.animations.dynamicAnimation.enabled));
        } }, { key: "emptyCollapsedSeries", value: function(t4) {
          for (var e3 = this.w, n3 = 0; n3 < t4.length; n3++)
            e3.globals.collapsedSeriesIndices.indexOf(n3) > -1 && (t4[n3].data = []);
          return t4;
        } }, { key: "toggleSeriesOnHover", value: function(t4, e3) {
          var n3 = this.w, i2 = n3.globals.dom.baseEl.querySelectorAll(".apexcharts-series, .apexcharts-datalabels");
          if (t4.type === "mousemove") {
            var a2 = parseInt(e3.getAttribute("rel"), 10) - 1, r2 = null, o2 = null;
            n3.globals.axisCharts || n3.config.chart.type === "radialBar" ? n3.globals.axisCharts ? (r2 = n3.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(a2, "']")), o2 = n3.globals.dom.baseEl.querySelector(".apexcharts-datalabels[data\\:realIndex='".concat(a2, "']"))) : r2 = n3.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a2 + 1, "']")) : r2 = n3.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(a2 + 1, "'] path"));
            for (var s2 = 0; s2 < i2.length; s2++)
              i2[s2].classList.add(this.legendInactiveClass);
            r2 !== null && (n3.globals.axisCharts || r2.parentNode.classList.remove(this.legendInactiveClass), r2.classList.remove(this.legendInactiveClass), o2 !== null && o2.classList.remove(this.legendInactiveClass));
          } else if (t4.type === "mouseout")
            for (var l2 = 0; l2 < i2.length; l2++)
              i2[l2].classList.remove(this.legendInactiveClass);
        } }, { key: "highlightRangeInSeries", value: function(t4, e3) {
          var n3 = this, i2 = this.w, a2 = i2.globals.dom.baseEl.getElementsByClassName("apexcharts-heatmap-rect"), r2 = function(t5) {
            for (var e4 = 0; e4 < a2.length; e4++)
              a2[e4].classList[t5](n3.legendInactiveClass);
          };
          if (t4.type === "mousemove") {
            var o2 = parseInt(e3.getAttribute("rel"), 10) - 1;
            r2("add"), function(t5) {
              for (var e4 = 0; e4 < a2.length; e4++) {
                var i3 = parseInt(a2[e4].getAttribute("val"), 10);
                i3 >= t5.from && i3 <= t5.to && a2[e4].classList.remove(n3.legendInactiveClass);
              }
            }(i2.config.plotOptions.heatmap.colorScale.ranges[o2]);
          } else
            t4.type === "mouseout" && r2("remove");
        } }, { key: "getActiveConfigSeriesIndex", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 && arguments[0], e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "asc", n3 = this.w, i2 = 0;
          if (n3.config.series.length > 1) {
            for (var a2 = n3.config.series.map(function(e4, i3) {
              var a3 = false;
              return t4 && (a3 = n3.config.series[i3].type === "bar" || n3.config.series[i3].type === "column"), e4.data && e4.data.length > 0 && !a3 ? i3 : -1;
            }), r2 = e3 === "asc" ? 0 : a2.length - 1; e3 === "asc" ? r2 < a2.length : r2 >= 0; e3 === "asc" ? r2++ : r2--)
              if (a2[r2] !== -1) {
                i2 = a2[r2];
                break;
              }
          }
          return i2;
        } }, { key: "getPreviousPaths", value: function() {
          var t4 = this.w;
          function e3(e4, n4, i3) {
            for (var a3 = e4[n4].childNodes, r2 = { type: i3, paths: [], realIndex: e4[n4].getAttribute("data:realIndex") }, o2 = 0; o2 < a3.length; o2++)
              if (a3[o2].hasAttribute("pathTo")) {
                var s2 = a3[o2].getAttribute("pathTo");
                r2.paths.push({ d: s2 });
              }
            t4.globals.previousPaths.push(r2);
          }
          t4.globals.previousPaths = [], ["line", "area", "bar", "rangebar", "candlestick", "radar"].forEach(function(n4) {
            for (var i3, a3 = (i3 = n4, t4.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(i3, "-series .apexcharts-series"))), r2 = 0; r2 < a3.length; r2++)
              e3(a3, r2, n4);
          }), this.handlePrevBubbleScatterPaths("bubble"), this.handlePrevBubbleScatterPaths("scatter");
          var n3 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t4.config.chart.type, " .apexcharts-series"));
          if (n3.length > 0)
            for (var i2 = function(e4) {
              for (var n4 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t4.config.chart.type, " .apexcharts-series[data\\:realIndex='").concat(e4, "'] rect")), i3 = [], a3 = function(t5) {
                var e5 = function(e6) {
                  return n4[t5].getAttribute(e6);
                }, a4 = { x: parseFloat(e5("x")), y: parseFloat(e5("y")), width: parseFloat(e5("width")), height: parseFloat(e5("height")) };
                i3.push({ rect: a4, color: n4[t5].getAttribute("color") });
              }, r2 = 0; r2 < n4.length; r2++)
                a3(r2);
              t4.globals.previousPaths.push(i3);
            }, a2 = 0; a2 < n3.length; a2++)
              i2(a2);
          t4.globals.axisCharts || (t4.globals.previousPaths = t4.globals.series);
        } }, { key: "handlePrevBubbleScatterPaths", value: function(t4) {
          var e3 = this.w, n3 = e3.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t4, "-series .apexcharts-series"));
          if (n3.length > 0)
            for (var i2 = 0; i2 < n3.length; i2++) {
              for (var a2 = e3.globals.dom.baseEl.querySelectorAll(".apexcharts-".concat(t4, "-series .apexcharts-series[data\\:realIndex='").concat(i2, "'] circle")), r2 = [], o2 = 0; o2 < a2.length; o2++)
                r2.push({ x: a2[o2].getAttribute("cx"), y: a2[o2].getAttribute("cy"), r: a2[o2].getAttribute("r") });
              e3.globals.previousPaths.push(r2);
            }
        } }, { key: "clearPreviousPaths", value: function() {
          var t4 = this.w;
          t4.globals.previousPaths = [], t4.globals.allSeriesCollapsed = false;
        } }, { key: "handleNoData", value: function() {
          var t4 = this.w, e3 = t4.config.noData, n3 = new _(this.ctx), i2 = t4.globals.svgWidth / 2, a2 = t4.globals.svgHeight / 2, r2 = "middle";
          if (t4.globals.noData = true, t4.globals.animationEnded = true, e3.align === "left" ? (i2 = 10, r2 = "start") : e3.align === "right" && (i2 = t4.globals.svgWidth - 10, r2 = "end"), e3.verticalAlign === "top" ? a2 = 50 : e3.verticalAlign === "bottom" && (a2 = t4.globals.svgHeight - 50), i2 += e3.offsetX, a2 = a2 + parseInt(e3.style.fontSize, 10) + 2 + e3.offsetY, e3.text !== void 0 && e3.text !== "") {
            var o2 = n3.drawText({ x: i2, y: a2, text: e3.text, textAnchor: r2, fontSize: e3.style.fontSize, fontFamily: e3.style.fontFamily, foreColor: e3.style.color, opacity: 1, class: "apexcharts-text-nodata" });
            t4.globals.dom.Paper.add(o2);
          }
        } }, { key: "setNullSeriesToZeroValues", value: function(t4) {
          for (var e3 = this.w, n3 = 0; n3 < t4.length; n3++)
            if (t4[n3].length === 0)
              for (var i2 = 0; i2 < t4[e3.globals.maxValsInArrayIndex].length; i2++)
                t4[n3].push(0);
          return t4;
        } }, { key: "hasAllSeriesEqualX", value: function() {
          for (var t4 = true, e3 = this.w, n3 = this.filteredSeriesX(), i2 = 0; i2 < n3.length - 1; i2++)
            if (n3[i2][0] !== n3[i2 + 1][0]) {
              t4 = false;
              break;
            }
          return e3.globals.allSeriesHasEqualX = t4, t4;
        } }, { key: "filteredSeriesX", value: function() {
          return this.w.globals.seriesX.map(function(t4) {
            return t4.length > 0 ? t4 : [];
          });
        } }]), t3;
      }(), N = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.barCtx = e3;
        }
        return s(t3, [{ key: "initVariables", value: function(t4) {
          var e3 = this.w;
          this.barCtx.series = t4, this.barCtx.totalItems = 0, this.barCtx.seriesLen = 0, this.barCtx.visibleI = -1, this.barCtx.visibleItems = 1;
          for (var n3 = 0; n3 < t4.length; n3++)
            if (t4[n3].length > 0 && (this.barCtx.seriesLen = this.barCtx.seriesLen + 1, this.barCtx.totalItems += t4[n3].length), e3.globals.isXNumeric)
              for (var i2 = 0; i2 < t4[n3].length; i2++)
                e3.globals.seriesX[n3][i2] > e3.globals.minX && e3.globals.seriesX[n3][i2] < e3.globals.maxX && this.barCtx.visibleItems++;
            else
              this.barCtx.visibleItems = e3.globals.dataPoints;
          this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1), this.barCtx.zeroSerieses = [], this.barCtx.radiusOnSeriesNumber = t4.length - 1, e3.globals.comboCharts || this.checkZeroSeries({ series: t4 });
        } }, { key: "initialPositions", value: function() {
          var t4, e3, n3, i2, a2, r2, o2, s2, l2 = this.w, c2 = l2.globals.dataPoints;
          this.barCtx.isTimelineBar && (c2 = l2.globals.labels.length);
          var d2 = this.barCtx.seriesLen;
          if (l2.config.plotOptions.bar.rangeBarGroupRows && (d2 = 1), this.barCtx.isHorizontal)
            a2 = (n3 = l2.globals.gridHeight / c2) / d2, l2.globals.isXNumeric && (a2 = (n3 = l2.globals.gridHeight / this.barCtx.totalItems) / this.barCtx.seriesLen), a2 = a2 * parseInt(this.barCtx.barOptions.barHeight, 10) / 100, s2 = this.barCtx.baseLineInvertedY + l2.globals.padHorizontal + (this.barCtx.isReversed ? l2.globals.gridWidth : 0) - (this.barCtx.isReversed ? 2 * this.barCtx.baseLineInvertedY : 0), e3 = (n3 - a2 * this.barCtx.seriesLen) / 2;
          else {
            if (i2 = l2.globals.gridWidth / this.barCtx.visibleItems, l2.config.xaxis.convertedCatToNumeric && (i2 = l2.globals.gridWidth / l2.globals.dataPoints), r2 = i2 / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100, l2.globals.isXNumeric) {
              var u2 = this.barCtx.xRatio;
              l2.config.xaxis.convertedCatToNumeric && (u2 = this.barCtx.initialXRatio), l2.globals.minXDiff && l2.globals.minXDiff !== 0.5 && l2.globals.minXDiff / u2 > 0 && (i2 = l2.globals.minXDiff / u2), (r2 = i2 / this.barCtx.seriesLen * parseInt(this.barCtx.barOptions.columnWidth, 10) / 100) < 1 && (r2 = 1);
            }
            o2 = l2.globals.gridHeight - this.barCtx.baseLineY[this.barCtx.yaxisIndex] - (this.barCtx.isReversed ? l2.globals.gridHeight : 0) + (this.barCtx.isReversed ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex] : 0), t4 = l2.globals.padHorizontal + (i2 - r2 * this.barCtx.seriesLen) / 2;
          }
          return { x: t4, y: e3, yDivision: n3, xDivision: i2, barHeight: a2, barWidth: r2, zeroH: o2, zeroW: s2 };
        } }, { key: "getPathFillColor", value: function(t4, e3, n3, i2) {
          var a2 = this.w, r2 = new I(this.barCtx.ctx), o2 = null, s2 = this.barCtx.barOptions.distributed ? n3 : e3;
          return this.barCtx.barOptions.colors.ranges.length > 0 && this.barCtx.barOptions.colors.ranges.map(function(i3) {
            t4[e3][n3] >= i3.from && t4[e3][n3] <= i3.to && (o2 = i3.color);
          }), a2.config.series[e3].data[n3] && a2.config.series[e3].data[n3].fillColor && (o2 = a2.config.series[e3].data[n3].fillColor), r2.fillPath({ seriesNumber: this.barCtx.barOptions.distributed ? s2 : i2, dataPointIndex: n3, color: o2, value: t4[e3][n3] });
        } }, { key: "getStrokeWidth", value: function(t4, e3, n3) {
          var i2 = 0, a2 = this.w;
          return this.barCtx.series[t4][e3] === void 0 || this.barCtx.series[t4][e3] === null ? this.barCtx.isNullValue = true : this.barCtx.isNullValue = false, a2.config.stroke.show && (this.barCtx.isNullValue || (i2 = Array.isArray(this.barCtx.strokeWidth) ? this.barCtx.strokeWidth[n3] : this.barCtx.strokeWidth)), i2;
        } }, { key: "barBackground", value: function(t4) {
          var e3 = t4.j, n3 = t4.i, i2 = t4.x1, a2 = t4.x2, r2 = t4.y1, o2 = t4.y2, s2 = t4.elSeries, l2 = this.w, c2 = new _(this.barCtx.ctx), d2 = new j(this.barCtx.ctx).getActiveConfigSeriesIndex();
          if (this.barCtx.barOptions.colors.backgroundBarColors.length > 0 && d2 === n3) {
            e3 >= this.barCtx.barOptions.colors.backgroundBarColors.length && (e3 -= this.barCtx.barOptions.colors.backgroundBarColors.length);
            var u2 = this.barCtx.barOptions.colors.backgroundBarColors[e3], h2 = c2.drawRect(i2 !== void 0 ? i2 : 0, r2 !== void 0 ? r2 : 0, a2 !== void 0 ? a2 : l2.globals.gridWidth, o2 !== void 0 ? o2 : l2.globals.gridHeight, this.barCtx.barOptions.colors.backgroundBarRadius, u2, this.barCtx.barOptions.colors.backgroundBarOpacity);
            s2.add(h2), h2.node.classList.add("apexcharts-backgroundBar");
          }
        } }, { key: "getColumnPaths", value: function(t4) {
          var e3 = t4.barWidth, n3 = t4.barXPosition, i2 = t4.yRatio, a2 = t4.y1, r2 = t4.y2, o2 = t4.strokeWidth, s2 = t4.series, l2 = t4.realIndex, c2 = t4.i, d2 = t4.j, u2 = t4.w, h2 = new _(this.barCtx.ctx);
          (o2 = Array.isArray(o2) ? o2[l2] : o2) || (o2 = 0);
          var p2 = { barWidth: e3, strokeWidth: o2, yRatio: i2, barXPosition: n3, y1: a2, y2: r2 }, f2 = this.getRoundedBars(u2, p2, s2, c2, d2), g2 = n3, m2 = n3 + e3, v2 = h2.move(g2, a2), b2 = h2.move(g2, a2), y2 = h2.line(m2 - o2, a2);
          return u2.globals.previousPaths.length > 0 && (b2 = this.barCtx.getPreviousPath(l2, d2, false)), v2 = v2 + h2.line(g2, f2.y2) + f2.pathWithRadius + h2.line(m2 - o2, f2.y2) + y2 + y2 + "z", b2 = b2 + h2.line(g2, a2) + y2 + y2 + y2 + y2 + y2 + h2.line(g2, a2), u2.config.chart.stacked && (this.barCtx.yArrj.push(f2.y2), this.barCtx.yArrjF.push(Math.abs(a2 - f2.y2)), this.barCtx.yArrjVal.push(this.barCtx.series[c2][d2])), { pathTo: v2, pathFrom: b2 };
        } }, { key: "getBarpaths", value: function(t4) {
          var e3 = t4.barYPosition, n3 = t4.barHeight, i2 = t4.x1, a2 = t4.x2, r2 = t4.strokeWidth, o2 = t4.series, s2 = t4.realIndex, l2 = t4.i, c2 = t4.j, d2 = t4.w, u2 = new _(this.barCtx.ctx);
          (r2 = Array.isArray(r2) ? r2[s2] : r2) || (r2 = 0);
          var h2 = { barHeight: n3, strokeWidth: r2, barYPosition: e3, x2: a2, x1: i2 }, p2 = this.getRoundedBars(d2, h2, o2, l2, c2), f2 = u2.move(i2, e3), g2 = u2.move(i2, e3);
          d2.globals.previousPaths.length > 0 && (g2 = this.barCtx.getPreviousPath(s2, c2, false));
          var m2 = e3, v2 = e3 + n3, b2 = u2.line(i2, v2 - r2);
          return f2 = f2 + u2.line(p2.x2, m2) + p2.pathWithRadius + u2.line(p2.x2, v2 - r2) + b2 + b2 + "z", g2 = g2 + u2.line(i2, m2) + b2 + b2 + b2 + b2 + b2 + u2.line(i2, m2), d2.config.chart.stacked && (this.barCtx.xArrj.push(p2.x2), this.barCtx.xArrjF.push(Math.abs(i2 - p2.x2)), this.barCtx.xArrjVal.push(this.barCtx.series[l2][c2])), { pathTo: f2, pathFrom: g2 };
        } }, { key: "getRoundedBars", value: function(t4, e3, n3, i2, a2) {
          var r2 = new _(this.barCtx.ctx), o2 = 0, s2 = t4.config.plotOptions.bar.borderRadius, l2 = Array.isArray(s2);
          if (o2 = l2 ? s2[i2 > s2.length - 1 ? s2.length - 1 : i2] : s2, t4.config.chart.stacked && n3.length > 1 && i2 !== this.barCtx.radiusOnSeriesNumber && !l2 && (o2 = 0), this.barCtx.isHorizontal) {
            var c2 = "", d2 = e3.x2;
            if (Math.abs(e3.x1 - e3.x2) < o2 && (o2 = Math.abs(e3.x1 - e3.x2)), n3[i2][a2] !== void 0 || n3[i2][a2] !== null) {
              var u2 = this.barCtx.isReversed ? n3[i2][a2] > 0 : n3[i2][a2] < 0;
              u2 && (o2 *= -1), d2 -= o2, c2 = r2.quadraticCurve(d2 + o2, e3.barYPosition, d2 + o2, e3.barYPosition + (u2 ? -1 * o2 : o2)) + r2.line(d2 + o2, e3.barYPosition + e3.barHeight - e3.strokeWidth - (u2 ? -1 * o2 : o2)) + r2.quadraticCurve(d2 + o2, e3.barYPosition + e3.barHeight - e3.strokeWidth, d2, e3.barYPosition + e3.barHeight - e3.strokeWidth);
            }
            return { pathWithRadius: c2, x2: d2 };
          }
          var h2 = "", p2 = e3.y2;
          if (Math.abs(e3.y1 - e3.y2) < o2 && (o2 = Math.abs(e3.y1 - e3.y2)), n3[i2][a2] !== void 0 || n3[i2][a2] !== null) {
            var f2 = n3[i2][a2] < 0;
            f2 && (o2 *= -1), p2 += o2, h2 = r2.quadraticCurve(e3.barXPosition, p2 - o2, e3.barXPosition + (f2 ? -1 * o2 : o2), p2 - o2) + r2.line(e3.barXPosition + e3.barWidth - e3.strokeWidth - (f2 ? -1 * o2 : o2), p2 - o2) + r2.quadraticCurve(e3.barXPosition + e3.barWidth - e3.strokeWidth, p2 - o2, e3.barXPosition + e3.barWidth - e3.strokeWidth, p2);
          }
          return { pathWithRadius: h2, y2: p2 };
        } }, { key: "checkZeroSeries", value: function(t4) {
          for (var e3 = t4.series, n3 = this.w, i2 = 0; i2 < e3.length; i2++) {
            for (var a2 = 0, r2 = 0; r2 < e3[n3.globals.maxValsInArrayIndex].length; r2++)
              a2 += e3[i2][r2];
            a2 === 0 && this.barCtx.zeroSerieses.push(i2);
          }
          for (var o2 = e3.length - 1; o2 >= 0; o2--)
            this.barCtx.zeroSerieses.indexOf(o2) > -1 && o2 === this.radiusOnSeriesNumber && (this.barCtx.radiusOnSeriesNumber -= 1);
          for (var s2 = e3.length - 1; s2 >= 0; s2--)
            n3.globals.collapsedSeriesIndices.indexOf(this.barCtx.radiusOnSeriesNumber) > -1 && (this.barCtx.radiusOnSeriesNumber -= 1);
        } }, { key: "getXForValue", value: function(t4, e3) {
          var n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], i2 = n3 ? e3 : null;
          return t4 != null && (i2 = e3 + t4 / this.barCtx.invertedYRatio - 2 * (this.barCtx.isReversed ? t4 / this.barCtx.invertedYRatio : 0)), i2;
        } }, { key: "getYForValue", value: function(t4, e3) {
          var n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], i2 = n3 ? e3 : null;
          return t4 != null && (i2 = e3 - t4 / this.barCtx.yRatio[this.barCtx.yaxisIndex] + 2 * (this.barCtx.isReversed ? t4 / this.barCtx.yRatio[this.barCtx.yaxisIndex] : 0)), i2;
        } }, { key: "getGoalValues", value: function(t4, e3, n3, i2, a2) {
          var r2 = this, o2 = this.w, s2 = [];
          return o2.globals.seriesGoals[i2] && o2.globals.seriesGoals[i2][a2] && Array.isArray(o2.globals.seriesGoals[i2][a2]) && o2.globals.seriesGoals[i2][a2].forEach(function(i3) {
            var a3;
            s2.push((l(a3 = {}, t4, t4 === "x" ? r2.getXForValue(i3.value, e3, false) : r2.getYForValue(i3.value, n3, false)), l(a3, "attrs", i3), a3));
          }), s2;
        } }, { key: "drawGoalLine", value: function(t4) {
          var e3 = t4.barXPosition, n3 = t4.barYPosition, i2 = t4.goalX, a2 = t4.goalY, r2 = t4.barWidth, o2 = t4.barHeight, s2 = new _(this.barCtx.ctx), l2 = s2.group({ className: "apexcharts-bar-goals-groups" }), c2 = null;
          return this.barCtx.isHorizontal ? Array.isArray(i2) && i2.forEach(function(t5) {
            var e4 = t5.attrs.strokeHeight !== void 0 ? t5.attrs.strokeHeight : o2 / 2, i3 = n3 + e4 + o2 / 2;
            c2 = s2.drawLine(t5.x, i3 - 2 * e4, t5.x, i3, t5.attrs.strokeColor ? t5.attrs.strokeColor : void 0, t5.attrs.strokeDashArray, t5.attrs.strokeWidth ? t5.attrs.strokeWidth : 2, t5.attrs.strokeLineCap), l2.add(c2);
          }) : Array.isArray(a2) && a2.forEach(function(t5) {
            var n4 = t5.attrs.strokeWidth !== void 0 ? t5.attrs.strokeWidth : r2 / 2, i3 = e3 + n4 + r2 / 2;
            c2 = s2.drawLine(i3 - 2 * n4, t5.y, i3, t5.y, t5.attrs.strokeColor ? t5.attrs.strokeColor : void 0, t5.attrs.strokeDashArray, t5.attrs.strokeHeight ? t5.attrs.strokeHeight : 2, t5.attrs.strokeLineCap), l2.add(c2);
          }), l2;
        } }]), t3;
      }(), L = function() {
        function t3(e3, n3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
          var i2 = this.w;
          this.barOptions = i2.config.plotOptions.bar, this.isHorizontal = this.barOptions.horizontal, this.strokeWidth = i2.config.stroke.width, this.isNullValue = false, this.isTimelineBar = i2.config.xaxis.type === "datetime" && i2.globals.seriesRangeBarTimeline.length, this.xyRatios = n3, this.xyRatios !== null && (this.xRatio = n3.xRatio, this.initialXRatio = n3.initialXRatio, this.yRatio = n3.yRatio, this.invertedXRatio = n3.invertedXRatio, this.invertedYRatio = n3.invertedYRatio, this.baseLineY = n3.baseLineY, this.baseLineInvertedY = n3.baseLineInvertedY), this.yaxisIndex = 0, this.seriesLen = 0, this.barHelpers = new N(this);
        }
        return s(t3, [{ key: "draw", value: function(t4, e3) {
          var n3 = this.w, i2 = new _(this.ctx), a2 = new C(this.ctx, n3);
          t4 = a2.getLogSeries(t4), this.series = t4, this.yRatio = a2.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t4);
          var r2 = i2.group({ class: "apexcharts-bar-series apexcharts-plot-series" });
          n3.config.dataLabels.enabled && this.totalItems > this.barOptions.dataLabels.maxItems && console.warn("WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering.");
          for (var o2 = 0, s2 = 0; o2 < t4.length; o2++, s2++) {
            var l2, c2, u2, h2, p2 = void 0, f2 = void 0, g2 = [], m2 = [], v2 = n3.globals.comboCharts ? e3[o2] : o2, y2 = i2.group({ class: "apexcharts-series", rel: o2 + 1, seriesName: b.escapeString(n3.globals.seriesNames[v2]), "data:realIndex": v2 });
            this.ctx.series.addCollapsedClassToSeries(y2, v2), t4[o2].length > 0 && (this.visibleI = this.visibleI + 1);
            var x2 = 0, w2 = 0;
            this.yRatio.length > 1 && (this.yaxisIndex = v2), this.isReversed = n3.config.yaxis[this.yaxisIndex] && n3.config.yaxis[this.yaxisIndex].reversed;
            var S2 = this.barHelpers.initialPositions();
            f2 = S2.y, x2 = S2.barHeight, c2 = S2.yDivision, h2 = S2.zeroW, p2 = S2.x, w2 = S2.barWidth, l2 = S2.xDivision, u2 = S2.zeroH, this.horizontal || m2.push(p2 + w2 / 2);
            for (var k2 = i2.group({ class: "apexcharts-datalabels", "data:realIndex": v2 }), D2 = i2.group({ class: "apexcharts-bar-goals-markers", style: "pointer-events: none" }), T2 = 0; T2 < n3.globals.dataPoints; T2++) {
              var E2 = this.barHelpers.getStrokeWidth(o2, T2, v2), A2 = null, I2 = { indexes: { i: o2, j: T2, realIndex: v2, bc: s2 }, x: p2, y: f2, strokeWidth: E2, elSeries: y2 };
              this.isHorizontal ? (A2 = this.drawBarPaths(d(d({}, I2), {}, { barHeight: x2, zeroW: h2, yDivision: c2 })), w2 = this.series[o2][T2] / this.invertedYRatio) : (A2 = this.drawColumnPaths(d(d({}, I2), {}, { xDivision: l2, barWidth: w2, zeroH: u2 })), x2 = this.series[o2][T2] / this.yRatio[this.yaxisIndex]);
              var M2 = this.barHelpers.drawGoalLine({ barXPosition: A2.barXPosition, barYPosition: A2.barYPosition, goalX: A2.goalX, goalY: A2.goalY, barHeight: x2, barWidth: w2 });
              M2 && D2.add(M2), f2 = A2.y, p2 = A2.x, T2 > 0 && m2.push(p2 + w2 / 2), g2.push(f2);
              var R2 = this.barHelpers.getPathFillColor(t4, o2, T2, v2);
              this.renderSeries({ realIndex: v2, pathFill: R2, j: T2, i: o2, pathFrom: A2.pathFrom, pathTo: A2.pathTo, strokeWidth: E2, elSeries: y2, x: p2, y: f2, series: t4, barHeight: x2, barWidth: w2, elDataLabelsWrap: k2, elGoalsMarkers: D2, visibleSeries: this.visibleI, type: "bar" });
            }
            n3.globals.seriesXvalues[v2] = m2, n3.globals.seriesYvalues[v2] = g2, r2.add(y2);
          }
          return r2;
        } }, { key: "renderSeries", value: function(t4) {
          var e3 = t4.realIndex, n3 = t4.pathFill, i2 = t4.lineFill, a2 = t4.j, r2 = t4.i, o2 = t4.pathFrom, s2 = t4.pathTo, l2 = t4.strokeWidth, c2 = t4.elSeries, d2 = t4.x, u2 = t4.y, h2 = t4.y1, p2 = t4.y2, f2 = t4.series, g2 = t4.barHeight, m2 = t4.barWidth, v2 = t4.barYPosition, b2 = t4.elDataLabelsWrap, y2 = t4.elGoalsMarkers, w2 = t4.visibleSeries, S2 = t4.type, C2 = this.w, k2 = new _(this.ctx);
          i2 || (i2 = this.barOptions.distributed ? C2.globals.stroke.colors[a2] : C2.globals.stroke.colors[e3]), C2.config.series[r2].data[a2] && C2.config.series[r2].data[a2].strokeColor && (i2 = C2.config.series[r2].data[a2].strokeColor), this.isNullValue && (n3 = "none");
          var D2 = a2 / C2.config.chart.animations.animateGradually.delay * (C2.config.chart.animations.speed / C2.globals.dataPoints) / 2.4, T2 = k2.renderPaths({ i: r2, j: a2, realIndex: e3, pathFrom: o2, pathTo: s2, stroke: i2, strokeWidth: l2, strokeLineCap: C2.config.stroke.lineCap, fill: n3, animationDelay: D2, initialSpeed: C2.config.chart.animations.speed, dataChangeSpeed: C2.config.chart.animations.dynamicAnimation.speed, className: "apexcharts-".concat(S2, "-area") });
          T2.attr("clip-path", "url(#gridRectMask".concat(C2.globals.cuid, ")"));
          var E2 = C2.config.forecastDataPoints;
          E2.count > 0 && a2 >= C2.globals.dataPoints - E2.count && (T2.node.setAttribute("stroke-dasharray", E2.dashArray), T2.node.setAttribute("stroke-width", E2.strokeWidth), T2.node.setAttribute("fill-opacity", E2.fillOpacity)), h2 !== void 0 && p2 !== void 0 && (T2.attr("data-range-y1", h2), T2.attr("data-range-y2", p2)), new x(this.ctx).setSelectionFilter(T2, e3, a2), c2.add(T2);
          var A2 = new O(this).handleBarDataLabels({ x: d2, y: u2, y1: h2, y2: p2, i: r2, j: a2, series: f2, realIndex: e3, barHeight: g2, barWidth: m2, barYPosition: v2, renderedPath: T2, visibleSeries: w2 });
          return A2 !== null && b2.add(A2), c2.add(b2), y2 && c2.add(y2), c2;
        } }, { key: "drawBarPaths", value: function(t4) {
          var e3 = t4.indexes, n3 = t4.barHeight, i2 = t4.strokeWidth, a2 = t4.zeroW, r2 = t4.x, o2 = t4.y, s2 = t4.yDivision, l2 = t4.elSeries, c2 = this.w, d2 = e3.i, u2 = e3.j;
          c2.globals.isXNumeric && (o2 = (c2.globals.seriesX[d2][u2] - c2.globals.minX) / this.invertedXRatio - n3);
          var h2 = o2 + n3 * this.visibleI;
          r2 = this.barHelpers.getXForValue(this.series[d2][u2], a2);
          var p2 = this.barHelpers.getBarpaths({ barYPosition: h2, barHeight: n3, x1: a2, x2: r2, strokeWidth: i2, series: this.series, realIndex: e3.realIndex, i: d2, j: u2, w: c2 });
          return c2.globals.isXNumeric || (o2 += s2), this.barHelpers.barBackground({ j: u2, i: d2, y1: h2 - n3 * this.visibleI, y2: n3 * this.seriesLen, elSeries: l2 }), { pathTo: p2.pathTo, pathFrom: p2.pathFrom, x: r2, y: o2, goalX: this.barHelpers.getGoalValues("x", a2, null, d2, u2), barYPosition: h2 };
        } }, { key: "drawColumnPaths", value: function(t4) {
          var e3 = t4.indexes, n3 = t4.x, i2 = t4.y, a2 = t4.xDivision, r2 = t4.barWidth, o2 = t4.zeroH, s2 = t4.strokeWidth, l2 = t4.elSeries, c2 = this.w, d2 = e3.realIndex, u2 = e3.i, h2 = e3.j, p2 = e3.bc;
          if (c2.globals.isXNumeric) {
            var f2 = d2;
            c2.globals.seriesX[d2].length || (f2 = c2.globals.maxValsInArrayIndex), n3 = (c2.globals.seriesX[f2][h2] - c2.globals.minX) / this.xRatio - r2 * this.seriesLen / 2;
          }
          var g2 = n3 + r2 * this.visibleI;
          i2 = this.barHelpers.getYForValue(this.series[u2][h2], o2);
          var m2 = this.barHelpers.getColumnPaths({ barXPosition: g2, barWidth: r2, y1: o2, y2: i2, strokeWidth: s2, series: this.series, realIndex: e3.realIndex, i: u2, j: h2, w: c2 });
          return c2.globals.isXNumeric || (n3 += a2), this.barHelpers.barBackground({ bc: p2, j: h2, i: u2, x1: g2 - s2 / 2 - r2 * this.visibleI, x2: r2 * this.seriesLen + s2 / 2, elSeries: l2 }), { pathTo: m2.pathTo, pathFrom: m2.pathFrom, x: n3, y: i2, goalY: this.barHelpers.getGoalValues("y", null, o2, u2, h2), barXPosition: g2 };
        } }, { key: "getPreviousPath", value: function(t4, e3) {
          for (var n3, i2 = this.w, a2 = 0; a2 < i2.globals.previousPaths.length; a2++) {
            var r2 = i2.globals.previousPaths[a2];
            r2.paths && r2.paths.length > 0 && parseInt(r2.realIndex, 10) === parseInt(t4, 10) && i2.globals.previousPaths[a2].paths[e3] !== void 0 && (n3 = i2.globals.previousPaths[a2].paths[e3].d);
          }
          return n3;
        } }]), t3;
      }(), F = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.months31 = [1, 3, 5, 7, 8, 10, 12], this.months30 = [2, 4, 6, 9, 11], this.daysCntOfYear = [0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334];
        }
        return s(t3, [{ key: "isValidDate", value: function(t4) {
          return !isNaN(this.parseDate(t4));
        } }, { key: "getTimeStamp", value: function(t4) {
          return Date.parse(t4) ? this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t4).toISOString().substr(0, 25)).getTime() : new Date(t4).getTime() : t4;
        } }, { key: "getDate", value: function(t4) {
          return this.w.config.xaxis.labels.datetimeUTC ? new Date(new Date(t4).toUTCString()) : new Date(t4);
        } }, { key: "parseDate", value: function(t4) {
          var e3 = Date.parse(t4);
          if (!isNaN(e3))
            return this.getTimeStamp(t4);
          var n3 = Date.parse(t4.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
          return this.getTimeStamp(n3);
        } }, { key: "parseDateWithTimezone", value: function(t4) {
          return Date.parse(t4.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
        } }, { key: "formatDate", value: function(t4, e3) {
          var n3 = this.w.globals.locale, i2 = this.w.config.xaxis.labels.datetimeUTC, a2 = ["\0"].concat(m(n3.months)), r2 = [""].concat(m(n3.shortMonths)), o2 = [""].concat(m(n3.days)), s2 = [""].concat(m(n3.shortDays));
          function l2(t5, e4) {
            var n4 = t5 + "";
            for (e4 = e4 || 2; n4.length < e4; )
              n4 = "0" + n4;
            return n4;
          }
          var c2 = i2 ? t4.getUTCFullYear() : t4.getFullYear();
          e3 = (e3 = (e3 = e3.replace(/(^|[^\\])yyyy+/g, "$1" + c2)).replace(/(^|[^\\])yy/g, "$1" + c2.toString().substr(2, 2))).replace(/(^|[^\\])y/g, "$1" + c2);
          var d2 = (i2 ? t4.getUTCMonth() : t4.getMonth()) + 1;
          e3 = (e3 = (e3 = (e3 = e3.replace(/(^|[^\\])MMMM+/g, "$1" + a2[0])).replace(/(^|[^\\])MMM/g, "$1" + r2[0])).replace(/(^|[^\\])MM/g, "$1" + l2(d2))).replace(/(^|[^\\])M/g, "$1" + d2);
          var u2 = i2 ? t4.getUTCDate() : t4.getDate();
          e3 = (e3 = (e3 = (e3 = e3.replace(/(^|[^\\])dddd+/g, "$1" + o2[0])).replace(/(^|[^\\])ddd/g, "$1" + s2[0])).replace(/(^|[^\\])dd/g, "$1" + l2(u2))).replace(/(^|[^\\])d/g, "$1" + u2);
          var h2 = i2 ? t4.getUTCHours() : t4.getHours(), p2 = h2 > 12 ? h2 - 12 : h2 === 0 ? 12 : h2;
          e3 = (e3 = (e3 = (e3 = e3.replace(/(^|[^\\])HH+/g, "$1" + l2(h2))).replace(/(^|[^\\])H/g, "$1" + h2)).replace(/(^|[^\\])hh+/g, "$1" + l2(p2))).replace(/(^|[^\\])h/g, "$1" + p2);
          var f2 = i2 ? t4.getUTCMinutes() : t4.getMinutes();
          e3 = (e3 = e3.replace(/(^|[^\\])mm+/g, "$1" + l2(f2))).replace(/(^|[^\\])m/g, "$1" + f2);
          var g2 = i2 ? t4.getUTCSeconds() : t4.getSeconds();
          e3 = (e3 = e3.replace(/(^|[^\\])ss+/g, "$1" + l2(g2))).replace(/(^|[^\\])s/g, "$1" + g2);
          var v2 = i2 ? t4.getUTCMilliseconds() : t4.getMilliseconds();
          e3 = e3.replace(/(^|[^\\])fff+/g, "$1" + l2(v2, 3)), v2 = Math.round(v2 / 10), e3 = e3.replace(/(^|[^\\])ff/g, "$1" + l2(v2)), v2 = Math.round(v2 / 10);
          var b2 = h2 < 12 ? "AM" : "PM";
          e3 = (e3 = (e3 = e3.replace(/(^|[^\\])f/g, "$1" + v2)).replace(/(^|[^\\])TT+/g, "$1" + b2)).replace(/(^|[^\\])T/g, "$1" + b2.charAt(0));
          var y2 = b2.toLowerCase();
          e3 = (e3 = e3.replace(/(^|[^\\])tt+/g, "$1" + y2)).replace(/(^|[^\\])t/g, "$1" + y2.charAt(0));
          var x2 = -t4.getTimezoneOffset(), _2 = i2 || !x2 ? "Z" : x2 > 0 ? "+" : "-";
          if (!i2) {
            var w2 = (x2 = Math.abs(x2)) % 60;
            _2 += l2(Math.floor(x2 / 60)) + ":" + l2(w2);
          }
          e3 = e3.replace(/(^|[^\\])K/g, "$1" + _2);
          var S2 = (i2 ? t4.getUTCDay() : t4.getDay()) + 1;
          return (e3 = (e3 = (e3 = (e3 = e3.replace(new RegExp(o2[0], "g"), o2[S2])).replace(new RegExp(s2[0], "g"), s2[S2])).replace(new RegExp(a2[0], "g"), a2[d2])).replace(new RegExp(r2[0], "g"), r2[d2])).replace(/\\(.)/g, "$1");
        } }, { key: "getTimeUnitsfromTimestamp", value: function(t4, e3, n3) {
          var i2 = this.w;
          i2.config.xaxis.min !== void 0 && (t4 = i2.config.xaxis.min), i2.config.xaxis.max !== void 0 && (e3 = i2.config.xaxis.max);
          var a2 = this.getDate(t4), r2 = this.getDate(e3), o2 = this.formatDate(a2, "yyyy MM dd HH mm ss fff").split(" "), s2 = this.formatDate(r2, "yyyy MM dd HH mm ss fff").split(" ");
          return { minMillisecond: parseInt(o2[6], 10), maxMillisecond: parseInt(s2[6], 10), minSecond: parseInt(o2[5], 10), maxSecond: parseInt(s2[5], 10), minMinute: parseInt(o2[4], 10), maxMinute: parseInt(s2[4], 10), minHour: parseInt(o2[3], 10), maxHour: parseInt(s2[3], 10), minDate: parseInt(o2[2], 10), maxDate: parseInt(s2[2], 10), minMonth: parseInt(o2[1], 10) - 1, maxMonth: parseInt(s2[1], 10) - 1, minYear: parseInt(o2[0], 10), maxYear: parseInt(s2[0], 10) };
        } }, { key: "isLeapYear", value: function(t4) {
          return t4 % 4 == 0 && t4 % 100 != 0 || t4 % 400 == 0;
        } }, { key: "calculcateLastDaysOfMonth", value: function(t4, e3, n3) {
          return this.determineDaysOfMonths(t4, e3) - n3;
        } }, { key: "determineDaysOfYear", value: function(t4) {
          var e3 = 365;
          return this.isLeapYear(t4) && (e3 = 366), e3;
        } }, { key: "determineRemainingDaysOfYear", value: function(t4, e3, n3) {
          var i2 = this.daysCntOfYear[e3] + n3;
          return e3 > 1 && this.isLeapYear() && i2++, i2;
        } }, { key: "determineDaysOfMonths", value: function(t4, e3) {
          var n3 = 30;
          switch (t4 = b.monthMod(t4), true) {
            case this.months30.indexOf(t4) > -1:
              t4 === 2 && (n3 = this.isLeapYear(e3) ? 29 : 28);
              break;
            case this.months31.indexOf(t4) > -1:
            default:
              n3 = 31;
          }
          return n3;
        } }]), t3;
      }(), H = function(t3) {
        u(n3, L);
        var e3 = g(n3);
        function n3() {
          return r(this, n3), e3.apply(this, arguments);
        }
        return s(n3, [{ key: "draw", value: function(t4, e4) {
          var n4 = this.w, i2 = new _(this.ctx);
          this.rangeBarOptions = this.w.config.plotOptions.rangeBar, this.series = t4, this.seriesRangeStart = n4.globals.seriesRangeStart, this.seriesRangeEnd = n4.globals.seriesRangeEnd, this.barHelpers.initVariables(t4);
          for (var a2 = i2.group({ class: "apexcharts-rangebar-series apexcharts-plot-series" }), r2 = 0; r2 < t4.length; r2++) {
            var o2, s2, l2, c2 = void 0, u2 = void 0, h2 = void 0, p2 = n4.globals.comboCharts ? e4[r2] : r2, f2 = i2.group({ class: "apexcharts-series", seriesName: b.escapeString(n4.globals.seriesNames[p2]), rel: r2 + 1, "data:realIndex": p2 });
            t4[r2].length > 0 && (this.visibleI = this.visibleI + 1);
            var g2 = 0, m2 = 0;
            this.yRatio.length > 1 && (this.yaxisIndex = p2);
            var v2 = this.barHelpers.initialPositions();
            u2 = v2.y, l2 = v2.zeroW, c2 = v2.x, m2 = v2.barWidth, o2 = v2.xDivision, s2 = v2.zeroH;
            for (var y2 = i2.group({ class: "apexcharts-datalabels", "data:realIndex": p2 }), x2 = i2.group({ class: "apexcharts-rangebar-goals-markers", style: "pointer-events: none" }), w2 = 0; w2 < n4.globals.dataPoints; w2++) {
              var S2 = this.barHelpers.getStrokeWidth(r2, w2, p2), C2 = this.seriesRangeStart[r2][w2], k2 = this.seriesRangeEnd[r2][w2], D2 = null, T2 = null, E2 = { x: c2, y: u2, strokeWidth: S2, elSeries: f2 };
              if (h2 = v2.yDivision, g2 = v2.barHeight, this.isHorizontal) {
                T2 = u2 + g2 * this.visibleI;
                var A2 = this.seriesLen;
                n4.config.plotOptions.bar.rangeBarGroupRows && (A2 = 1);
                var I2 = (h2 - g2 * A2) / 2;
                if (n4.config.series[r2].data[w2] === void 0)
                  break;
                if (this.isTimelineBar && n4.config.series[r2].data[w2].x) {
                  var M2 = this.detectOverlappingBars({ i: r2, j: w2, barYPosition: T2, srty: I2, barHeight: g2, yDivision: h2, initPositions: v2 });
                  g2 = M2.barHeight, T2 = M2.barYPosition;
                }
                m2 = (D2 = this.drawRangeBarPaths(d({ indexes: { i: r2, j: w2, realIndex: p2 }, barHeight: g2, barYPosition: T2, zeroW: l2, yDivision: h2, y1: C2, y2: k2 }, E2))).barWidth;
              } else
                g2 = (D2 = this.drawRangeColumnPaths(d({ indexes: { i: r2, j: w2, realIndex: p2 }, zeroH: s2, barWidth: m2, xDivision: o2 }, E2))).barHeight;
              var R2 = this.barHelpers.drawGoalLine({ barXPosition: D2.barXPosition, barYPosition: T2, goalX: D2.goalX, goalY: D2.goalY, barHeight: g2, barWidth: m2 });
              R2 && x2.add(R2), u2 = D2.y, c2 = D2.x;
              var P2 = this.barHelpers.getPathFillColor(t4, r2, w2, p2), O2 = n4.globals.stroke.colors[p2];
              this.renderSeries({ realIndex: p2, pathFill: P2, lineFill: O2, j: w2, i: r2, x: c2, y: u2, y1: C2, y2: k2, pathFrom: D2.pathFrom, pathTo: D2.pathTo, strokeWidth: S2, elSeries: f2, series: t4, barHeight: g2, barYPosition: T2, barWidth: m2, elDataLabelsWrap: y2, elGoalsMarkers: x2, visibleSeries: this.visibleI, type: "rangebar" });
            }
            a2.add(f2);
          }
          return a2;
        } }, { key: "detectOverlappingBars", value: function(t4) {
          var e4 = t4.i, n4 = t4.j, i2 = t4.barYPosition, a2 = t4.srty, r2 = t4.barHeight, o2 = t4.yDivision, s2 = t4.initPositions, l2 = this.w, c2 = [], d2 = l2.config.series[e4].data[n4].rangeName, u2 = l2.config.series[e4].data[n4].x, h2 = l2.globals.labels.indexOf(u2), p2 = l2.globals.seriesRangeBarTimeline[e4].findIndex(function(t5) {
            return t5.x === u2 && t5.overlaps.length > 0;
          });
          return i2 = l2.config.plotOptions.bar.rangeBarGroupRows ? a2 + o2 * h2 : a2 + r2 * this.visibleI + o2 * h2, p2 > -1 && !l2.config.plotOptions.bar.rangeBarOverlap && (c2 = l2.globals.seriesRangeBarTimeline[e4][p2].overlaps).indexOf(d2) > -1 && (i2 = (r2 = s2.barHeight / c2.length) * this.visibleI + o2 * (100 - parseInt(this.barOptions.barHeight, 10)) / 100 / 2 + r2 * (this.visibleI + c2.indexOf(d2)) + o2 * h2), { barYPosition: i2, barHeight: r2 };
        } }, { key: "drawRangeColumnPaths", value: function(t4) {
          var e4 = t4.indexes, n4 = t4.x;
          t4.strokeWidth;
          var i2 = t4.xDivision, a2 = t4.barWidth, r2 = t4.zeroH, o2 = this.w, s2 = e4.i, l2 = e4.j, c2 = this.yRatio[this.yaxisIndex], d2 = e4.realIndex, u2 = this.getRangeValue(d2, l2), h2 = Math.min(u2.start, u2.end), p2 = Math.max(u2.start, u2.end);
          o2.globals.isXNumeric && (n4 = (o2.globals.seriesX[s2][l2] - o2.globals.minX) / this.xRatio - a2 / 2);
          var f2 = n4 + a2 * this.visibleI;
          this.series[s2][l2] === void 0 || this.series[s2][l2] === null ? h2 = r2 : (h2 = r2 - h2 / c2, p2 = r2 - p2 / c2);
          var g2 = Math.abs(p2 - h2), m2 = this.barHelpers.getColumnPaths({ barXPosition: f2, barWidth: a2, y1: h2, y2: p2, strokeWidth: this.strokeWidth, series: this.seriesRangeEnd, realIndex: e4.realIndex, i: d2, j: l2, w: o2 });
          return o2.globals.isXNumeric || (n4 += i2), { pathTo: m2.pathTo, pathFrom: m2.pathFrom, barHeight: g2, x: n4, y: p2, goalY: this.barHelpers.getGoalValues("y", null, r2, s2, l2), barXPosition: f2 };
        } }, { key: "drawRangeBarPaths", value: function(t4) {
          var e4 = t4.indexes, n4 = t4.y, i2 = t4.y1, a2 = t4.y2, r2 = t4.yDivision, o2 = t4.barHeight, s2 = t4.barYPosition, l2 = t4.zeroW, c2 = this.w, d2 = l2 + i2 / this.invertedYRatio, u2 = l2 + a2 / this.invertedYRatio, h2 = Math.abs(u2 - d2), p2 = this.barHelpers.getBarpaths({ barYPosition: s2, barHeight: o2, x1: d2, x2: u2, strokeWidth: this.strokeWidth, series: this.seriesRangeEnd, i: e4.realIndex, realIndex: e4.realIndex, j: e4.j, w: c2 });
          return c2.globals.isXNumeric || (n4 += r2), { pathTo: p2.pathTo, pathFrom: p2.pathFrom, barWidth: h2, x: u2, goalX: this.barHelpers.getGoalValues("x", l2, null, e4.realIndex, e4.j), y: n4 };
        } }, { key: "getRangeValue", value: function(t4, e4) {
          var n4 = this.w;
          return { start: n4.globals.seriesRangeStart[t4][e4], end: n4.globals.seriesRangeEnd[t4][e4] };
        } }, { key: "getTooltipValues", value: function(t4) {
          var e4 = t4.ctx, n4 = t4.seriesIndex, i2 = t4.dataPointIndex, a2 = t4.y1, r2 = t4.y2, o2 = t4.w, s2 = o2.globals.seriesRangeStart[n4][i2], l2 = o2.globals.seriesRangeEnd[n4][i2], c2 = o2.globals.labels[i2], d2 = o2.config.series[n4].name ? o2.config.series[n4].name : "", u2 = o2.config.tooltip.y.formatter, h2 = o2.config.tooltip.y.title.formatter, p2 = { w: o2, seriesIndex: n4, dataPointIndex: i2, start: s2, end: l2 };
          typeof h2 == "function" && (d2 = h2(d2, p2)), Number.isFinite(a2) && Number.isFinite(r2) && (s2 = a2, l2 = r2, o2.config.series[n4].data[i2].x && (c2 = o2.config.series[n4].data[i2].x + ":"), typeof u2 == "function" && (c2 = u2(c2, p2)));
          var f2 = "", g2 = "", m2 = o2.globals.colors[n4];
          if (o2.config.tooltip.x.formatter === void 0)
            if (o2.config.xaxis.type === "datetime") {
              var v2 = new F(e4);
              f2 = v2.formatDate(v2.getDate(s2), o2.config.tooltip.x.format), g2 = v2.formatDate(v2.getDate(l2), o2.config.tooltip.x.format);
            } else
              f2 = s2, g2 = l2;
          else
            f2 = o2.config.tooltip.x.formatter(s2), g2 = o2.config.tooltip.x.formatter(l2);
          return { start: s2, end: l2, startVal: f2, endVal: g2, ylabel: c2, color: m2, seriesName: d2 };
        } }, { key: "buildCustomTooltipHTML", value: function(t4) {
          return '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' + t4.color + '">' + (t4.seriesName || "") + '</span></div><div> <span class="category">' + t4.ylabel + ' </span> <span class="value start-value">' + t4.start + '</span> <span class="separator">-</span> <span class="value end-value">' + t4.end + "</span></div></div>";
        } }]), n3;
      }(), B = function() {
        function t3(e3) {
          r(this, t3), this.opts = e3;
        }
        return s(t3, [{ key: "line", value: function() {
          return { chart: { animations: { easing: "swing" } }, dataLabels: { enabled: false }, stroke: { width: 5, curve: "straight" }, markers: { size: 0, hover: { sizeOffset: 6 } }, xaxis: { crosshairs: { width: 1 } } };
        } }, { key: "sparkline", value: function(t4) {
          return this.opts.yaxis[0].show = false, this.opts.yaxis[0].title.text = "", this.opts.yaxis[0].axisBorder.show = false, this.opts.yaxis[0].axisTicks.show = false, this.opts.yaxis[0].floating = true, b.extend(t4, { grid: { show: false, padding: { left: 0, right: 0, top: 0, bottom: 0 } }, legend: { show: false }, xaxis: { labels: { show: false }, tooltip: { enabled: false }, axisBorder: { show: false }, axisTicks: { show: false } }, chart: { toolbar: { show: false }, zoom: { enabled: false } }, dataLabels: { enabled: false } });
        } }, { key: "bar", value: function() {
          return { chart: { stacked: false, animations: { easing: "swing" } }, plotOptions: { bar: { dataLabels: { position: "center" } } }, dataLabels: { style: { colors: ["#fff"] }, background: { enabled: false } }, stroke: { width: 0, lineCap: "round" }, fill: { opacity: 0.85 }, legend: { markers: { shape: "square", radius: 2, size: 8 } }, tooltip: { shared: false, intersect: true }, xaxis: { tooltip: { enabled: false }, tickPlacement: "between", crosshairs: { width: "barWidth", position: "back", fill: { type: "gradient" }, dropShadow: { enabled: false }, stroke: { width: 0 } } } };
        } }, { key: "candlestick", value: function() {
          var t4 = this;
          return { stroke: { width: 1, colors: ["#333"] }, fill: { opacity: 1 }, dataLabels: { enabled: false }, tooltip: { shared: true, custom: function(e3) {
            var n3 = e3.seriesIndex, i2 = e3.dataPointIndex, a2 = e3.w;
            return t4._getBoxTooltip(a2, n3, i2, ["Open", "High", "", "Low", "Close"], "candlestick");
          } }, states: { active: { filter: { type: "none" } } }, xaxis: { crosshairs: { width: 1 } } };
        } }, { key: "boxPlot", value: function() {
          var t4 = this;
          return { chart: { animations: { dynamicAnimation: { enabled: false } } }, stroke: { width: 1, colors: ["#24292e"] }, dataLabels: { enabled: false }, tooltip: { shared: true, custom: function(e3) {
            var n3 = e3.seriesIndex, i2 = e3.dataPointIndex, a2 = e3.w;
            return t4._getBoxTooltip(a2, n3, i2, ["Minimum", "Q1", "Median", "Q3", "Maximum"], "boxPlot");
          } }, markers: { size: 5, strokeWidth: 1, strokeColors: "#111" }, xaxis: { crosshairs: { width: 1 } } };
        } }, { key: "rangeBar", value: function() {
          return { stroke: { width: 0, lineCap: "square" }, plotOptions: { bar: { borderRadius: 0, dataLabels: { position: "center" } } }, dataLabels: { enabled: false, formatter: function(t4, e3) {
            e3.ctx;
            var n3 = e3.seriesIndex, i2 = e3.dataPointIndex, a2 = e3.w, r2 = a2.globals.seriesRangeStart[n3][i2];
            return a2.globals.seriesRangeEnd[n3][i2] - r2;
          }, background: { enabled: false }, style: { colors: ["#fff"] } }, tooltip: { shared: false, followCursor: true, custom: function(t4) {
            return t4.w.config.plotOptions && t4.w.config.plotOptions.bar && t4.w.config.plotOptions.bar.horizontal ? function(t5) {
              var e3 = new H(t5.ctx, null), n3 = e3.getTooltipValues(t5), i2 = n3.color, a2 = n3.seriesName, r2 = n3.ylabel, o2 = n3.startVal, s2 = n3.endVal;
              return e3.buildCustomTooltipHTML({ color: i2, seriesName: a2, ylabel: r2, start: o2, end: s2 });
            }(t4) : function(t5) {
              var e3 = new H(t5.ctx, null), n3 = e3.getTooltipValues(t5), i2 = n3.color, a2 = n3.seriesName, r2 = n3.ylabel, o2 = n3.start, s2 = n3.end;
              return e3.buildCustomTooltipHTML({ color: i2, seriesName: a2, ylabel: r2, start: o2, end: s2 });
            }(t4);
          } }, xaxis: { tickPlacement: "between", tooltip: { enabled: false }, crosshairs: { stroke: { width: 0 } } } };
        } }, { key: "area", value: function() {
          return { stroke: { width: 4 }, fill: { type: "gradient", gradient: { inverseColors: false, shade: "light", type: "vertical", opacityFrom: 0.65, opacityTo: 0.5, stops: [0, 100, 100] } }, markers: { size: 0, hover: { sizeOffset: 6 } }, tooltip: { followCursor: false } };
        } }, { key: "brush", value: function(t4) {
          return b.extend(t4, { chart: { toolbar: { autoSelected: "selection", show: false }, zoom: { enabled: false } }, dataLabels: { enabled: false }, stroke: { width: 1 }, tooltip: { enabled: false }, xaxis: { tooltip: { enabled: false } } });
        } }, { key: "stacked100", value: function(t4) {
          t4.dataLabels = t4.dataLabels || {}, t4.dataLabels.formatter = t4.dataLabels.formatter || void 0;
          var e3 = t4.dataLabels.formatter;
          return t4.yaxis.forEach(function(e4, n3) {
            t4.yaxis[n3].min = 0, t4.yaxis[n3].max = 100;
          }), t4.chart.type === "bar" && (t4.dataLabels.formatter = e3 || function(t5) {
            return typeof t5 == "number" && t5 ? t5.toFixed(0) + "%" : t5;
          }), t4;
        } }, { key: "convertCatToNumeric", value: function(t4) {
          return t4.xaxis.convertedCatToNumeric = true, t4;
        } }, { key: "convertCatToNumericXaxis", value: function(t4, e3, n3) {
          t4.xaxis.type = "numeric", t4.xaxis.labels = t4.xaxis.labels || {}, t4.xaxis.labels.formatter = t4.xaxis.labels.formatter || function(t5) {
            return b.isNumber(t5) ? Math.floor(t5) : t5;
          };
          var i2 = t4.xaxis.labels.formatter, a2 = t4.xaxis.categories && t4.xaxis.categories.length ? t4.xaxis.categories : t4.labels;
          return n3 && n3.length && (a2 = n3.map(function(t5) {
            return Array.isArray(t5) ? t5 : String(t5);
          })), a2 && a2.length && (t4.xaxis.labels.formatter = function(t5) {
            return b.isNumber(t5) ? i2(a2[Math.floor(t5) - 1]) : i2(t5);
          }), t4.xaxis.categories = [], t4.labels = [], t4.xaxis.tickAmount = t4.xaxis.tickAmount || "dataPoints", t4;
        } }, { key: "bubble", value: function() {
          return { dataLabels: { style: { colors: ["#fff"] } }, tooltip: { shared: false, intersect: true }, xaxis: { crosshairs: { width: 0 } }, fill: { type: "solid", gradient: { shade: "light", inverse: true, shadeIntensity: 0.55, opacityFrom: 0.4, opacityTo: 0.8 } } };
        } }, { key: "scatter", value: function() {
          return { dataLabels: { enabled: false }, tooltip: { shared: false, intersect: true }, markers: { size: 6, strokeWidth: 1, hover: { sizeOffset: 2 } } };
        } }, { key: "heatmap", value: function() {
          return { chart: { stacked: false }, fill: { opacity: 1 }, dataLabels: { style: { colors: ["#fff"] } }, stroke: { colors: ["#fff"] }, tooltip: { followCursor: true, marker: { show: false }, x: { show: false } }, legend: { position: "top", markers: { shape: "square", size: 10, offsetY: 2 } }, grid: { padding: { right: 20 } } };
        } }, { key: "treemap", value: function() {
          return { chart: { zoom: { enabled: false } }, dataLabels: { style: { fontSize: 14, fontWeight: 600, colors: ["#fff"] } }, stroke: { show: true, width: 2, colors: ["#fff"] }, legend: { show: false }, fill: { gradient: { stops: [0, 100] } }, tooltip: { followCursor: true, x: { show: false } }, grid: { padding: { left: 0, right: 0 } }, xaxis: { crosshairs: { show: false }, tooltip: { enabled: false } } };
        } }, { key: "pie", value: function() {
          return { chart: { toolbar: { show: false } }, plotOptions: { pie: { donut: { labels: { show: false } } } }, dataLabels: { formatter: function(t4) {
            return t4.toFixed(1) + "%";
          }, style: { colors: ["#fff"] }, background: { enabled: false }, dropShadow: { enabled: true } }, stroke: { colors: ["#fff"] }, fill: { opacity: 1, gradient: { shade: "light", stops: [0, 100] } }, tooltip: { theme: "dark", fillSeriesColor: true }, legend: { position: "right" } };
        } }, { key: "donut", value: function() {
          return { chart: { toolbar: { show: false } }, dataLabels: { formatter: function(t4) {
            return t4.toFixed(1) + "%";
          }, style: { colors: ["#fff"] }, background: { enabled: false }, dropShadow: { enabled: true } }, stroke: { colors: ["#fff"] }, fill: { opacity: 1, gradient: { shade: "light", shadeIntensity: 0.35, stops: [80, 100], opacityFrom: 1, opacityTo: 1 } }, tooltip: { theme: "dark", fillSeriesColor: true }, legend: { position: "right" } };
        } }, { key: "polarArea", value: function() {
          return this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount ? this.opts.yaxis[0].tickAmount : 6, { chart: { toolbar: { show: false } }, dataLabels: { formatter: function(t4) {
            return t4.toFixed(1) + "%";
          }, enabled: false }, stroke: { show: true, width: 2 }, fill: { opacity: 0.7 }, tooltip: { theme: "dark", fillSeriesColor: true }, legend: { position: "right" } };
        } }, { key: "radar", value: function() {
          return this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels.offsetY ? this.opts.yaxis[0].labels.offsetY : 6, { dataLabels: { enabled: false, style: { fontSize: "11px" } }, stroke: { width: 2 }, markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 }, fill: { opacity: 0.2 }, tooltip: { shared: false, intersect: true, followCursor: true }, grid: { show: false }, xaxis: { labels: { formatter: function(t4) {
            return t4;
          }, style: { colors: ["#a8a8a8"], fontSize: "11px" } }, tooltip: { enabled: false }, crosshairs: { show: false } } };
        } }, { key: "radialBar", value: function() {
          return { chart: { animations: { dynamicAnimation: { enabled: true, speed: 800 } }, toolbar: { show: false } }, fill: { gradient: { shade: "dark", shadeIntensity: 0.4, inverseColors: false, type: "diagonal2", opacityFrom: 1, opacityTo: 1, stops: [70, 98, 100] } }, legend: { show: false, position: "right" }, tooltip: { enabled: false, fillSeriesColor: true } };
        } }, { key: "_getBoxTooltip", value: function(t4, e3, n3, i2, a2) {
          var r2 = t4.globals.seriesCandleO[e3][n3], o2 = t4.globals.seriesCandleH[e3][n3], s2 = t4.globals.seriesCandleM[e3][n3], l2 = t4.globals.seriesCandleL[e3][n3], c2 = t4.globals.seriesCandleC[e3][n3];
          return t4.config.series[e3].type && t4.config.series[e3].type !== a2 ? '<div class="apexcharts-custom-tooltip">\n          '.concat(t4.config.series[e3].name ? t4.config.series[e3].name : "series-" + (e3 + 1), ": <strong>").concat(t4.globals.series[e3][n3], "</strong>\n        </div>") : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(t4.config.chart.type, '">') + "<div>".concat(i2[0], ': <span class="value">') + r2 + "</span></div>" + "<div>".concat(i2[1], ': <span class="value">') + o2 + "</span></div>" + (s2 ? "<div>".concat(i2[2], ': <span class="value">') + s2 + "</span></div>" : "") + "<div>".concat(i2[3], ': <span class="value">') + l2 + "</span></div>" + "<div>".concat(i2[4], ': <span class="value">') + c2 + "</span></div></div>";
        } }]), t3;
      }(), q = function() {
        function t3(e3) {
          r(this, t3), this.opts = e3;
        }
        return s(t3, [{ key: "init", value: function(t4) {
          var e3 = t4.responsiveOverride, n3 = this.opts, i2 = new E(), r2 = new B(n3);
          this.chartType = n3.chart.type, this.chartType === "histogram" && (n3.chart.type = "bar", n3 = b.extend({ plotOptions: { bar: { columnWidth: "99.99%" } } }, n3)), n3 = this.extendYAxis(n3), n3 = this.extendAnnotations(n3);
          var o2 = i2.init(), s2 = {};
          if (n3 && a(n3) === "object") {
            var l2 = {};
            l2 = ["line", "area", "bar", "candlestick", "boxPlot", "rangeBar", "histogram", "bubble", "scatter", "heatmap", "treemap", "pie", "polarArea", "donut", "radar", "radialBar"].indexOf(n3.chart.type) !== -1 ? r2[n3.chart.type]() : r2.line(), n3.chart.brush && n3.chart.brush.enabled && (l2 = r2.brush(l2)), n3.chart.stacked && n3.chart.stackType === "100%" && (n3 = r2.stacked100(n3)), this.checkForDarkTheme(window.Apex), this.checkForDarkTheme(n3), n3.xaxis = n3.xaxis || window.Apex.xaxis || {}, e3 || (n3.xaxis.convertedCatToNumeric = false), ((n3 = this.checkForCatToNumericXAxis(this.chartType, l2, n3)).chart.sparkline && n3.chart.sparkline.enabled || window.Apex.chart && window.Apex.chart.sparkline && window.Apex.chart.sparkline.enabled) && (l2 = r2.sparkline(l2)), s2 = b.extend(o2, l2);
          }
          var c2 = b.extend(s2, window.Apex);
          return o2 = b.extend(c2, n3), this.handleUserInputErrors(o2);
        } }, { key: "checkForCatToNumericXAxis", value: function(t4, e3, n3) {
          var i2 = new B(n3), a2 = t4 === "bar" && n3.plotOptions && n3.plotOptions.bar && n3.plotOptions.bar.horizontal, r2 = t4 === "pie" || t4 === "polarArea" || t4 === "donut" || t4 === "radar" || t4 === "radialBar" || t4 === "heatmap", o2 = n3.xaxis.type !== "datetime" && n3.xaxis.type !== "numeric", s2 = n3.xaxis.tickPlacement ? n3.xaxis.tickPlacement : e3.xaxis && e3.xaxis.tickPlacement;
          return a2 || r2 || !o2 || s2 === "between" || (n3 = i2.convertCatToNumeric(n3)), n3;
        } }, { key: "extendYAxis", value: function(t4, e3) {
          var n3 = new E();
          (t4.yaxis === void 0 || !t4.yaxis || Array.isArray(t4.yaxis) && t4.yaxis.length === 0) && (t4.yaxis = {}), t4.yaxis.constructor !== Array && window.Apex.yaxis && window.Apex.yaxis.constructor !== Array && (t4.yaxis = b.extend(t4.yaxis, window.Apex.yaxis)), t4.yaxis.constructor !== Array ? t4.yaxis = [b.extend(n3.yAxis, t4.yaxis)] : t4.yaxis = b.extendArray(t4.yaxis, n3.yAxis);
          var i2 = false;
          t4.yaxis.forEach(function(t5) {
            t5.logarithmic && (i2 = true);
          });
          var a2 = t4.series;
          return e3 && !a2 && (a2 = e3.config.series), i2 && a2.length !== t4.yaxis.length && a2.length && (t4.yaxis = a2.map(function(e4, i3) {
            if (e4.name || (a2[i3].name = "series-".concat(i3 + 1)), t4.yaxis[i3])
              return t4.yaxis[i3].seriesName = a2[i3].name, t4.yaxis[i3];
            var r2 = b.extend(n3.yAxis, t4.yaxis[0]);
            return r2.show = false, r2;
          })), i2 && a2.length > 1 && a2.length !== t4.yaxis.length && console.warn("A multi-series logarithmic chart should have equal number of series and y-axes. Please make sure to equalize both."), t4;
        } }, { key: "extendAnnotations", value: function(t4) {
          return t4.annotations === void 0 && (t4.annotations = {}, t4.annotations.yaxis = [], t4.annotations.xaxis = [], t4.annotations.points = []), t4 = this.extendYAxisAnnotations(t4), t4 = this.extendXAxisAnnotations(t4), this.extendPointAnnotations(t4);
        } }, { key: "extendYAxisAnnotations", value: function(t4) {
          var e3 = new E();
          return t4.annotations.yaxis = b.extendArray(t4.annotations.yaxis !== void 0 ? t4.annotations.yaxis : [], e3.yAxisAnnotation), t4;
        } }, { key: "extendXAxisAnnotations", value: function(t4) {
          var e3 = new E();
          return t4.annotations.xaxis = b.extendArray(t4.annotations.xaxis !== void 0 ? t4.annotations.xaxis : [], e3.xAxisAnnotation), t4;
        } }, { key: "extendPointAnnotations", value: function(t4) {
          var e3 = new E();
          return t4.annotations.points = b.extendArray(t4.annotations.points !== void 0 ? t4.annotations.points : [], e3.pointAnnotation), t4;
        } }, { key: "checkForDarkTheme", value: function(t4) {
          t4.theme && t4.theme.mode === "dark" && (t4.tooltip || (t4.tooltip = {}), t4.tooltip.theme !== "light" && (t4.tooltip.theme = "dark"), t4.chart.foreColor || (t4.chart.foreColor = "#f6f7f8"), t4.chart.background || (t4.chart.background = "#424242"), t4.theme.palette || (t4.theme.palette = "palette4"));
        } }, { key: "handleUserInputErrors", value: function(t4) {
          var e3 = t4;
          if (e3.tooltip.shared && e3.tooltip.intersect)
            throw new Error("tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.");
          if (e3.chart.type === "bar" && e3.plotOptions.bar.horizontal) {
            if (e3.yaxis.length > 1)
              throw new Error("Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false");
            e3.yaxis[0].reversed && (e3.yaxis[0].opposite = true), e3.xaxis.tooltip.enabled = false, e3.yaxis[0].tooltip.enabled = false, e3.chart.zoom.enabled = false;
          }
          return e3.chart.type !== "bar" && e3.chart.type !== "rangeBar" || e3.tooltip.shared && e3.xaxis.crosshairs.width === "barWidth" && e3.series.length > 1 && (e3.xaxis.crosshairs.width = "tickWidth"), e3.chart.type !== "candlestick" && e3.chart.type !== "boxPlot" || e3.yaxis[0].reversed && (console.warn("Reversed y-axis in ".concat(e3.chart.type, " chart is not supported.")), e3.yaxis[0].reversed = false), e3.chart.group && e3.yaxis[0].labels.minWidth === 0 && console.warn("It looks like you have multiple charts in synchronization. You must provide yaxis.labels.minWidth which must be EQUAL for all grouped charts to prevent incorrect behaviour."), Array.isArray(e3.stroke.width) && e3.chart.type !== "line" && e3.chart.type !== "area" && (console.warn("stroke.width option accepts array only for line and area charts. Reverted back to Number"), e3.stroke.width = e3.stroke.width[0]), e3;
        } }]), t3;
      }(), z = function() {
        function t3() {
          r(this, t3);
        }
        return s(t3, [{ key: "initGlobalVars", value: function(t4) {
          t4.series = [], t4.seriesCandleO = [], t4.seriesCandleH = [], t4.seriesCandleM = [], t4.seriesCandleL = [], t4.seriesCandleC = [], t4.seriesRangeStart = [], t4.seriesRangeEnd = [], t4.seriesRangeBarTimeline = [], t4.seriesPercent = [], t4.seriesGoals = [], t4.seriesX = [], t4.seriesZ = [], t4.seriesNames = [], t4.seriesTotals = [], t4.seriesLog = [], t4.seriesColors = [], t4.stackedSeriesTotals = [], t4.seriesXvalues = [], t4.seriesYvalues = [], t4.labels = [], t4.categoryLabels = [], t4.timescaleLabels = [], t4.noLabelsProvided = false, t4.resizeTimer = null, t4.selectionResizeTimer = null, t4.delayedElements = [], t4.pointsArray = [], t4.dataLabelsRects = [], t4.isXNumeric = false, t4.xaxisLabelsCount = 0, t4.skipLastTimelinelabel = false, t4.skipFirstTimelinelabel = false, t4.isDataXYZ = false, t4.isMultiLineX = false, t4.isMultipleYAxis = false, t4.maxY = -Number.MAX_VALUE, t4.minY = Number.MIN_VALUE, t4.minYArr = [], t4.maxYArr = [], t4.maxX = -Number.MAX_VALUE, t4.minX = Number.MAX_VALUE, t4.initialMaxX = -Number.MAX_VALUE, t4.initialMinX = Number.MAX_VALUE, t4.maxDate = 0, t4.minDate = Number.MAX_VALUE, t4.minZ = Number.MAX_VALUE, t4.maxZ = -Number.MAX_VALUE, t4.minXDiff = Number.MAX_VALUE, t4.yAxisScale = [], t4.xAxisScale = null, t4.xAxisTicksPositions = [], t4.yLabelsCoords = [], t4.yTitleCoords = [], t4.barPadForNumericAxis = 0, t4.padHorizontal = 0, t4.xRange = 0, t4.yRange = [], t4.zRange = 0, t4.dataPoints = 0, t4.xTickAmount = 0;
        } }, { key: "globalVars", value: function(t4) {
          return { chartID: null, cuid: null, events: { beforeMount: [], mounted: [], updated: [], clicked: [], selection: [], dataPointSelection: [], zoomed: [], scrolled: [] }, colors: [], clientX: null, clientY: null, fill: { colors: [] }, stroke: { colors: [] }, dataLabels: { style: { colors: [] } }, radarPolygons: { fill: { colors: [] } }, markers: { colors: [], size: t4.markers.size, largestSize: 0 }, animationEnded: false, isTouchDevice: "ontouchstart" in window || navigator.msMaxTouchPoints, isDirty: false, isExecCalled: false, initialConfig: null, initialSeries: [], lastXAxis: [], lastYAxis: [], columnSeries: null, labels: [], timescaleLabels: [], noLabelsProvided: false, allSeriesCollapsed: false, collapsedSeries: [], collapsedSeriesIndices: [], ancillaryCollapsedSeries: [], ancillaryCollapsedSeriesIndices: [], risingSeries: [], dataFormatXNumeric: false, capturedSeriesIndex: -1, capturedDataPointIndex: -1, selectedDataPoints: [], goldenPadding: 35, invalidLogScale: false, ignoreYAxisIndexes: [], yAxisSameScaleIndices: [], maxValsInArrayIndex: 0, radialSize: 0, selection: void 0, zoomEnabled: t4.chart.toolbar.autoSelected === "zoom" && t4.chart.toolbar.tools.zoom && t4.chart.zoom.enabled, panEnabled: t4.chart.toolbar.autoSelected === "pan" && t4.chart.toolbar.tools.pan, selectionEnabled: t4.chart.toolbar.autoSelected === "selection" && t4.chart.toolbar.tools.selection, yaxis: null, mousedown: false, lastClientPosition: {}, visibleXRange: void 0, yValueDecimal: 0, total: 0, SVGNS: "http://www.w3.org/2000/svg", svgWidth: 0, svgHeight: 0, noData: false, locale: {}, dom: {}, memory: { methodsToExec: [] }, shouldAnimate: true, skipLastTimelinelabel: false, skipFirstTimelinelabel: false, delayedElements: [], axisCharts: true, isDataXYZ: false, resized: false, resizeTimer: null, comboCharts: false, dataChanged: false, previousPaths: [], allSeriesHasEqualX: true, pointsArray: [], dataLabelsRects: [], lastDrawnDataLabelsIndexes: [], hasNullValues: false, easing: null, zoomed: false, gridWidth: 0, gridHeight: 0, rotateXLabels: false, defaultLabels: false, xLabelFormatter: void 0, yLabelFormatters: [], xaxisTooltipFormatter: void 0, ttKeyFormatter: void 0, ttVal: void 0, ttZFormatter: void 0, LINE_HEIGHT_RATIO: 1.618, xAxisLabelsHeight: 0, xAxisLabelsWidth: 0, yAxisLabelsWidth: 0, scaleX: 1, scaleY: 1, translateX: 0, translateY: 0, translateYAxisX: [], yAxisWidths: [], translateXAxisY: 0, translateXAxisX: 0, tooltip: null };
        } }, { key: "init", value: function(t4) {
          var e3 = this.globalVars(t4);
          return this.initGlobalVars(e3), e3.initialConfig = b.extend({}, t4), e3.initialSeries = b.clone(t4.series), e3.lastXAxis = b.clone(e3.initialConfig.xaxis), e3.lastYAxis = b.clone(e3.initialConfig.yaxis), e3;
        } }]), t3;
      }(), W = function() {
        function t3(e3) {
          r(this, t3), this.opts = e3;
        }
        return s(t3, [{ key: "init", value: function() {
          var t4 = new q(this.opts).init({ responsiveOverride: false });
          return { config: t4, globals: new z().init(t4) };
        } }]), t3;
      }(), $ = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.twoDSeries = [], this.threeDSeries = [], this.twoDSeriesX = [], this.seriesGoals = [], this.coreUtils = new C(this.ctx);
        }
        return s(t3, [{ key: "isMultiFormat", value: function() {
          return this.isFormatXY() || this.isFormat2DArray();
        } }, { key: "isFormatXY", value: function() {
          var t4 = this.w.config.series.slice(), e3 = new j(this.ctx);
          if (this.activeSeriesIndex = e3.getActiveConfigSeriesIndex(), t4[this.activeSeriesIndex].data !== void 0 && t4[this.activeSeriesIndex].data.length > 0 && t4[this.activeSeriesIndex].data[0] !== null && t4[this.activeSeriesIndex].data[0].x !== void 0 && t4[this.activeSeriesIndex].data[0] !== null)
            return true;
        } }, { key: "isFormat2DArray", value: function() {
          var t4 = this.w.config.series.slice(), e3 = new j(this.ctx);
          if (this.activeSeriesIndex = e3.getActiveConfigSeriesIndex(), t4[this.activeSeriesIndex].data !== void 0 && t4[this.activeSeriesIndex].data.length > 0 && t4[this.activeSeriesIndex].data[0] !== void 0 && t4[this.activeSeriesIndex].data[0] !== null && t4[this.activeSeriesIndex].data[0].constructor === Array)
            return true;
        } }, { key: "handleFormat2DArray", value: function(t4, e3) {
          for (var n3 = this.w.config, i2 = this.w.globals, a2 = n3.chart.type === "boxPlot" || n3.series[e3].type === "boxPlot", r2 = 0; r2 < t4[e3].data.length; r2++)
            if (t4[e3].data[r2][1] !== void 0 && (Array.isArray(t4[e3].data[r2][1]) && t4[e3].data[r2][1].length === 4 && !a2 ? this.twoDSeries.push(b.parseNumber(t4[e3].data[r2][1][3])) : t4[e3].data[r2].length >= 5 ? this.twoDSeries.push(b.parseNumber(t4[e3].data[r2][4])) : this.twoDSeries.push(b.parseNumber(t4[e3].data[r2][1])), i2.dataFormatXNumeric = true), n3.xaxis.type === "datetime") {
              var o2 = new Date(t4[e3].data[r2][0]);
              o2 = new Date(o2).getTime(), this.twoDSeriesX.push(o2);
            } else
              this.twoDSeriesX.push(t4[e3].data[r2][0]);
          for (var s2 = 0; s2 < t4[e3].data.length; s2++)
            t4[e3].data[s2][2] !== void 0 && (this.threeDSeries.push(t4[e3].data[s2][2]), i2.isDataXYZ = true);
        } }, { key: "handleFormatXY", value: function(t4, e3) {
          var n3 = this.w.config, i2 = this.w.globals, a2 = new F(this.ctx), r2 = e3;
          i2.collapsedSeriesIndices.indexOf(e3) > -1 && (r2 = this.activeSeriesIndex);
          for (var o2 = 0; o2 < t4[e3].data.length; o2++)
            t4[e3].data[o2].y !== void 0 && (Array.isArray(t4[e3].data[o2].y) ? this.twoDSeries.push(b.parseNumber(t4[e3].data[o2].y[t4[e3].data[o2].y.length - 1])) : this.twoDSeries.push(b.parseNumber(t4[e3].data[o2].y))), t4[e3].data[o2].goals !== void 0 && Array.isArray(t4[e3].data[o2].goals) ? (this.seriesGoals[e3] === void 0 && (this.seriesGoals[e3] = []), this.seriesGoals[e3].push(t4[e3].data[o2].goals)) : (this.seriesGoals[e3] === void 0 && (this.seriesGoals[e3] = []), this.seriesGoals[e3].push(null));
          for (var s2 = 0; s2 < t4[r2].data.length; s2++) {
            var l2 = typeof t4[r2].data[s2].x == "string", c2 = Array.isArray(t4[r2].data[s2].x), d2 = !c2 && !!a2.isValidDate(t4[r2].data[s2].x.toString());
            if (l2 || d2)
              if (l2 || n3.xaxis.convertedCatToNumeric) {
                var u2 = i2.isBarHorizontal && i2.isRangeData;
                n3.xaxis.type !== "datetime" || u2 ? (this.fallbackToCategory = true, this.twoDSeriesX.push(t4[r2].data[s2].x)) : this.twoDSeriesX.push(a2.parseDate(t4[r2].data[s2].x));
              } else
                n3.xaxis.type === "datetime" ? this.twoDSeriesX.push(a2.parseDate(t4[r2].data[s2].x.toString())) : (i2.dataFormatXNumeric = true, i2.isXNumeric = true, this.twoDSeriesX.push(parseFloat(t4[r2].data[s2].x)));
            else
              c2 ? (this.fallbackToCategory = true, this.twoDSeriesX.push(t4[r2].data[s2].x)) : (i2.isXNumeric = true, i2.dataFormatXNumeric = true, this.twoDSeriesX.push(t4[r2].data[s2].x));
          }
          if (t4[e3].data[0] && t4[e3].data[0].z !== void 0) {
            for (var h2 = 0; h2 < t4[e3].data.length; h2++)
              this.threeDSeries.push(t4[e3].data[h2].z);
            i2.isDataXYZ = true;
          }
        } }, { key: "handleRangeData", value: function(t4, e3) {
          var n3 = this.w.config, i2 = this.w.globals, a2 = {};
          return this.isFormat2DArray() ? a2 = this.handleRangeDataFormat("array", t4, e3) : this.isFormatXY() && (a2 = this.handleRangeDataFormat("xy", t4, e3)), i2.seriesRangeStart.push(a2.start), i2.seriesRangeEnd.push(a2.end), n3.xaxis.type === "datetime" && i2.seriesRangeBarTimeline.push(a2.rangeUniques), i2.seriesRangeBarTimeline.forEach(function(t5, e4) {
            t5 && t5.forEach(function(t6, e5) {
              t6.y.forEach(function(e6, n4) {
                for (var i3 = 0; i3 < t6.y.length; i3++)
                  if (n4 !== i3) {
                    var a3 = e6.y1, r2 = e6.y2, o2 = t6.y[i3].y1;
                    a3 <= t6.y[i3].y2 && o2 <= r2 && (t6.overlaps.indexOf(e6.rangeName) < 0 && t6.overlaps.push(e6.rangeName), t6.overlaps.indexOf(t6.y[i3].rangeName) < 0 && t6.overlaps.push(t6.y[i3].rangeName));
                  }
              });
            });
          }), a2;
        } }, { key: "handleCandleStickBoxData", value: function(t4, e3) {
          var n3 = this.w.globals, i2 = {};
          return this.isFormat2DArray() ? i2 = this.handleCandleStickBoxDataFormat("array", t4, e3) : this.isFormatXY() && (i2 = this.handleCandleStickBoxDataFormat("xy", t4, e3)), n3.seriesCandleO[e3] = i2.o, n3.seriesCandleH[e3] = i2.h, n3.seriesCandleM[e3] = i2.m, n3.seriesCandleL[e3] = i2.l, n3.seriesCandleC[e3] = i2.c, i2;
        } }, { key: "handleRangeDataFormat", value: function(t4, e3, n3) {
          var i2 = [], a2 = [], r2 = e3[n3].data.filter(function(t5, e4, n4) {
            return e4 === n4.findIndex(function(e5) {
              return e5.x === t5.x;
            });
          }).map(function(t5, e4) {
            return { x: t5.x, overlaps: [], y: [] };
          }), o2 = "Please provide [Start, End] values in valid format. Read more https://apexcharts.com/docs/series/#rangecharts", s2 = new j(this.ctx).getActiveConfigSeriesIndex();
          if (t4 === "array") {
            if (e3[s2].data[0][1].length !== 2)
              throw new Error(o2);
            for (var l2 = 0; l2 < e3[n3].data.length; l2++)
              i2.push(e3[n3].data[l2][1][0]), a2.push(e3[n3].data[l2][1][1]);
          } else if (t4 === "xy") {
            if (e3[s2].data[0].y.length !== 2)
              throw new Error(o2);
            for (var c2 = function(t5) {
              var o3 = b.randomId(), s3 = e3[n3].data[t5].x, l3 = { y1: e3[n3].data[t5].y[0], y2: e3[n3].data[t5].y[1], rangeName: o3 };
              e3[n3].data[t5].rangeName = o3;
              var c3 = r2.findIndex(function(t6) {
                return t6.x === s3;
              });
              r2[c3].y.push(l3), i2.push(l3.y1), a2.push(l3.y2);
            }, d2 = 0; d2 < e3[n3].data.length; d2++)
              c2(d2);
          }
          return { start: i2, end: a2, rangeUniques: r2 };
        } }, { key: "handleCandleStickBoxDataFormat", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = i2.config.chart.type === "boxPlot" || i2.config.series[n3].type === "boxPlot", r2 = [], o2 = [], s2 = [], l2 = [], c2 = [];
          if (t4 === "array")
            if (a2 && e3[n3].data[0].length === 6 || !a2 && e3[n3].data[0].length === 5)
              for (var d2 = 0; d2 < e3[n3].data.length; d2++)
                r2.push(e3[n3].data[d2][1]), o2.push(e3[n3].data[d2][2]), a2 ? (s2.push(e3[n3].data[d2][3]), l2.push(e3[n3].data[d2][4]), c2.push(e3[n3].data[d2][5])) : (l2.push(e3[n3].data[d2][3]), c2.push(e3[n3].data[d2][4]));
            else
              for (var u2 = 0; u2 < e3[n3].data.length; u2++)
                Array.isArray(e3[n3].data[u2][1]) && (r2.push(e3[n3].data[u2][1][0]), o2.push(e3[n3].data[u2][1][1]), a2 ? (s2.push(e3[n3].data[u2][1][2]), l2.push(e3[n3].data[u2][1][3]), c2.push(e3[n3].data[u2][1][4])) : (l2.push(e3[n3].data[u2][1][2]), c2.push(e3[n3].data[u2][1][3])));
          else if (t4 === "xy")
            for (var h2 = 0; h2 < e3[n3].data.length; h2++)
              Array.isArray(e3[n3].data[h2].y) && (r2.push(e3[n3].data[h2].y[0]), o2.push(e3[n3].data[h2].y[1]), a2 ? (s2.push(e3[n3].data[h2].y[2]), l2.push(e3[n3].data[h2].y[3]), c2.push(e3[n3].data[h2].y[4])) : (l2.push(e3[n3].data[h2].y[2]), c2.push(e3[n3].data[h2].y[3])));
          return { o: r2, h: o2, m: s2, l: l2, c: c2 };
        } }, { key: "parseDataAxisCharts", value: function(t4) {
          var e3 = this, n3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : this.ctx, i2 = this.w.config, a2 = this.w.globals, r2 = new F(n3), o2 = i2.labels.length > 0 ? i2.labels.slice() : i2.xaxis.categories.slice();
          a2.isTimelineBar = i2.chart.type === "rangeBar" && i2.xaxis.type === "datetime";
          for (var s2 = function() {
            for (var t5 = 0; t5 < o2.length; t5++)
              if (typeof o2[t5] == "string") {
                if (!r2.isValidDate(o2[t5]))
                  throw new Error("You have provided invalid Date format. Please provide a valid JavaScript Date");
                e3.twoDSeriesX.push(r2.parseDate(o2[t5]));
              } else
                e3.twoDSeriesX.push(o2[t5]);
          }, l2 = 0; l2 < t4.length; l2++) {
            if (this.twoDSeries = [], this.twoDSeriesX = [], this.threeDSeries = [], t4[l2].data === void 0)
              return void console.error("It is a possibility that you may have not included 'data' property in series.");
            if (i2.chart.type !== "rangeBar" && i2.chart.type !== "rangeArea" && t4[l2].type !== "rangeBar" && t4[l2].type !== "rangeArea" || (a2.isRangeData = true, this.handleRangeData(t4, l2)), this.isMultiFormat())
              this.isFormat2DArray() ? this.handleFormat2DArray(t4, l2) : this.isFormatXY() && this.handleFormatXY(t4, l2), i2.chart.type !== "candlestick" && t4[l2].type !== "candlestick" && i2.chart.type !== "boxPlot" && t4[l2].type !== "boxPlot" || this.handleCandleStickBoxData(t4, l2), a2.series.push(this.twoDSeries), a2.labels.push(this.twoDSeriesX), a2.seriesX.push(this.twoDSeriesX), a2.seriesGoals = this.seriesGoals, l2 !== this.activeSeriesIndex || this.fallbackToCategory || (a2.isXNumeric = true);
            else {
              i2.xaxis.type === "datetime" ? (a2.isXNumeric = true, s2(), a2.seriesX.push(this.twoDSeriesX)) : i2.xaxis.type === "numeric" && (a2.isXNumeric = true, o2.length > 0 && (this.twoDSeriesX = o2, a2.seriesX.push(this.twoDSeriesX))), a2.labels.push(this.twoDSeriesX);
              var c2 = t4[l2].data.map(function(t5) {
                return b.parseNumber(t5);
              });
              a2.series.push(c2);
            }
            a2.seriesZ.push(this.threeDSeries), t4[l2].name !== void 0 ? a2.seriesNames.push(t4[l2].name) : a2.seriesNames.push("series-" + parseInt(l2 + 1, 10)), t4[l2].color !== void 0 ? a2.seriesColors.push(t4[l2].color) : a2.seriesColors.push(void 0);
          }
          return this.w;
        } }, { key: "parseDataNonAxisCharts", value: function(t4) {
          var e3 = this.w.globals, n3 = this.w.config;
          e3.series = t4.slice(), e3.seriesNames = n3.labels.slice();
          for (var i2 = 0; i2 < e3.series.length; i2++)
            e3.seriesNames[i2] === void 0 && e3.seriesNames.push("series-" + (i2 + 1));
          return this.w;
        } }, { key: "handleExternalLabelsData", value: function(t4) {
          var e3 = this.w.config, n3 = this.w.globals;
          e3.xaxis.categories.length > 0 ? n3.labels = e3.xaxis.categories : e3.labels.length > 0 ? n3.labels = e3.labels.slice() : this.fallbackToCategory ? (n3.labels = n3.labels[0], n3.seriesRangeBarTimeline.length && (n3.seriesRangeBarTimeline.map(function(t5) {
            t5.forEach(function(t6) {
              n3.labels.indexOf(t6.x) < 0 && t6.x && n3.labels.push(t6.x);
            });
          }), n3.labels = n3.labels.filter(function(t5, e4, n4) {
            return n4.indexOf(t5) === e4;
          })), e3.xaxis.convertedCatToNumeric && (new B(e3).convertCatToNumericXaxis(e3, this.ctx, n3.seriesX[0]), this._generateExternalLabels(t4))) : this._generateExternalLabels(t4);
        } }, { key: "_generateExternalLabels", value: function(t4) {
          var e3 = this.w.globals, n3 = this.w.config, i2 = [];
          if (e3.axisCharts) {
            if (e3.series.length > 0)
              for (var a2 = 0; a2 < e3.series[e3.maxValsInArrayIndex].length; a2++)
                i2.push(a2 + 1);
            e3.seriesX = [];
            for (var r2 = 0; r2 < t4.length; r2++)
              e3.seriesX.push(i2);
            e3.isXNumeric = true;
          }
          if (i2.length === 0) {
            i2 = e3.axisCharts ? [] : e3.series.map(function(t5, e4) {
              return e4 + 1;
            });
            for (var o2 = 0; o2 < t4.length; o2++)
              e3.seriesX.push(i2);
          }
          e3.labels = i2, n3.xaxis.convertedCatToNumeric && (e3.categoryLabels = i2.map(function(t5) {
            return n3.xaxis.labels.formatter(t5);
          })), e3.noLabelsProvided = true;
        } }, { key: "parseData", value: function(t4) {
          var e3 = this.w, n3 = e3.config, i2 = e3.globals;
          if (this.excludeCollapsedSeriesInYAxis(), this.fallbackToCategory = false, this.ctx.core.resetGlobals(), this.ctx.core.isMultipleY(), i2.axisCharts ? this.parseDataAxisCharts(t4) : this.parseDataNonAxisCharts(t4), this.coreUtils.getLargestSeries(), n3.chart.type === "bar" && n3.chart.stacked) {
            var a2 = new j(this.ctx);
            i2.series = a2.setNullSeriesToZeroValues(i2.series);
          }
          this.coreUtils.getSeriesTotals(), i2.axisCharts && this.coreUtils.getStackedSeriesTotals(), this.coreUtils.getPercentSeries(), i2.dataFormatXNumeric || i2.isXNumeric && (n3.xaxis.type !== "numeric" || n3.labels.length !== 0 || n3.xaxis.categories.length !== 0) || this.handleExternalLabelsData(t4);
          for (var r2 = this.coreUtils.getCategoryLabels(i2.labels), o2 = 0; o2 < r2.length; o2++)
            if (Array.isArray(r2[o2])) {
              i2.isMultiLineX = true;
              break;
            }
        } }, { key: "excludeCollapsedSeriesInYAxis", value: function() {
          var t4 = this, e3 = this.w;
          e3.globals.ignoreYAxisIndexes = e3.globals.collapsedSeries.map(function(n3, i2) {
            if (t4.w.globals.isMultipleYAxis && !e3.config.chart.stacked)
              return n3.index;
          });
        } }]), t3;
      }(), V = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.tooltipKeyFormat = "dd MMM";
        }
        return s(t3, [{ key: "xLabelFormat", value: function(t4, e3, n3, i2) {
          var a2 = this.w;
          if (a2.config.xaxis.type === "datetime" && a2.config.xaxis.labels.formatter === void 0 && a2.config.tooltip.x.formatter === void 0) {
            var r2 = new F(this.ctx);
            return r2.formatDate(r2.getDate(e3), a2.config.tooltip.x.format);
          }
          return t4(e3, n3, i2);
        } }, { key: "defaultGeneralFormatter", value: function(t4) {
          return Array.isArray(t4) ? t4.map(function(t5) {
            return t5;
          }) : t4;
        } }, { key: "defaultYFormatter", value: function(t4, e3, n3) {
          var i2 = this.w;
          return b.isNumber(t4) && (t4 = i2.globals.yValueDecimal !== 0 ? t4.toFixed(e3.decimalsInFloat !== void 0 ? e3.decimalsInFloat : i2.globals.yValueDecimal) : i2.globals.maxYArr[n3] - i2.globals.minYArr[n3] < 5 ? t4.toFixed(1) : t4.toFixed(0)), t4;
        } }, { key: "setLabelFormatters", value: function() {
          var t4 = this, e3 = this.w;
          return e3.globals.xaxisTooltipFormatter = function(e4) {
            return t4.defaultGeneralFormatter(e4);
          }, e3.globals.ttKeyFormatter = function(e4) {
            return t4.defaultGeneralFormatter(e4);
          }, e3.globals.ttZFormatter = function(t5) {
            return t5;
          }, e3.globals.legendFormatter = function(e4) {
            return t4.defaultGeneralFormatter(e4);
          }, e3.config.xaxis.labels.formatter !== void 0 ? e3.globals.xLabelFormatter = e3.config.xaxis.labels.formatter : e3.globals.xLabelFormatter = function(t5) {
            if (b.isNumber(t5)) {
              if (!e3.config.xaxis.convertedCatToNumeric && e3.config.xaxis.type === "numeric") {
                if (b.isNumber(e3.config.xaxis.decimalsInFloat))
                  return t5.toFixed(e3.config.xaxis.decimalsInFloat);
                var n3 = e3.globals.maxX - e3.globals.minX;
                return n3 > 0 && n3 < 100 ? t5.toFixed(1) : t5.toFixed(0);
              }
              return e3.globals.isBarHorizontal && e3.globals.maxY - e3.globals.minYArr < 4 ? t5.toFixed(1) : t5.toFixed(0);
            }
            return t5;
          }, typeof e3.config.tooltip.x.formatter == "function" ? e3.globals.ttKeyFormatter = e3.config.tooltip.x.formatter : e3.globals.ttKeyFormatter = e3.globals.xLabelFormatter, typeof e3.config.xaxis.tooltip.formatter == "function" && (e3.globals.xaxisTooltipFormatter = e3.config.xaxis.tooltip.formatter), (Array.isArray(e3.config.tooltip.y) || e3.config.tooltip.y.formatter !== void 0) && (e3.globals.ttVal = e3.config.tooltip.y), e3.config.tooltip.z.formatter !== void 0 && (e3.globals.ttZFormatter = e3.config.tooltip.z.formatter), e3.config.legend.formatter !== void 0 && (e3.globals.legendFormatter = e3.config.legend.formatter), e3.config.yaxis.forEach(function(n3, i2) {
            n3.labels.formatter !== void 0 ? e3.globals.yLabelFormatters[i2] = n3.labels.formatter : e3.globals.yLabelFormatters[i2] = function(a2) {
              return e3.globals.xyCharts ? Array.isArray(a2) ? a2.map(function(e4) {
                return t4.defaultYFormatter(e4, n3, i2);
              }) : t4.defaultYFormatter(a2, n3, i2) : a2;
            };
          }), e3.globals;
        } }, { key: "heatmapLabelFormatters", value: function() {
          var t4 = this.w;
          if (t4.config.chart.type === "heatmap") {
            t4.globals.yAxisScale[0].result = t4.globals.seriesNames.slice();
            var e3 = t4.globals.seriesNames.reduce(function(t5, e4) {
              return t5.length > e4.length ? t5 : e4;
            }, 0);
            t4.globals.yAxisScale[0].niceMax = e3, t4.globals.yAxisScale[0].niceMin = e3;
          }
        } }]), t3;
      }(), Y = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "getLabel", value: function(t4, e3, n3, i2) {
          var a2 = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : [], r2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : "12px", o2 = this.w, s2 = t4[i2] === void 0 ? "" : t4[i2], l2 = s2, c2 = o2.globals.xLabelFormatter, d2 = o2.config.xaxis.labels.formatter, u2 = false, h2 = new V(this.ctx), p2 = s2;
          l2 = h2.xLabelFormat(c2, s2, p2, { i: i2, dateFormatter: new F(this.ctx).formatDate, w: o2 }), d2 !== void 0 && (l2 = d2(s2, t4[i2], { i: i2, dateFormatter: new F(this.ctx).formatDate, w: o2 }));
          var f2 = function(t5) {
            var n4 = null;
            return e3.forEach(function(t6) {
              t6.unit === "month" ? n4 = "year" : t6.unit === "day" ? n4 = "month" : t6.unit === "hour" ? n4 = "day" : t6.unit === "minute" && (n4 = "hour");
            }), n4 === t5;
          };
          e3.length > 0 ? (u2 = f2(e3[i2].unit), n3 = e3[i2].position, l2 = e3[i2].value) : o2.config.xaxis.type === "datetime" && d2 === void 0 && (l2 = ""), l2 === void 0 && (l2 = ""), l2 = Array.isArray(l2) ? l2 : l2.toString();
          var g2 = new _(this.ctx), m2 = {};
          m2 = o2.globals.rotateXLabels ? g2.getTextRects(l2, parseInt(r2, 10), null, "rotate(".concat(o2.config.xaxis.labels.rotate, " 0 0)"), false) : g2.getTextRects(l2, parseInt(r2, 10));
          var v2 = !o2.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
          return !Array.isArray(l2) && (l2.indexOf("NaN") === 0 || l2.toLowerCase().indexOf("invalid") === 0 || l2.toLowerCase().indexOf("infinity") >= 0 || a2.indexOf(l2) >= 0 && v2) && (l2 = ""), { x: n3, text: l2, textRect: m2, isBold: u2 };
        } }, { key: "checkLabelBasedOnTickamount", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = i2.config.xaxis.tickAmount;
          return a2 === "dataPoints" && (a2 = Math.round(i2.globals.gridWidth / 120)), a2 > n3 || t4 % Math.round(n3 / (a2 + 1)) == 0 || (e3.text = ""), e3;
        } }, { key: "checkForOverflowingLabels", value: function(t4, e3, n3, i2, a2) {
          var r2 = this.w;
          if (t4 === 0 && r2.globals.skipFirstTimelinelabel && (e3.text = ""), t4 === n3 - 1 && r2.globals.skipLastTimelinelabel && (e3.text = ""), r2.config.xaxis.labels.hideOverlappingLabels && i2.length > 0) {
            var o2 = a2[a2.length - 1];
            e3.x < o2.textRect.width / (r2.globals.rotateXLabels ? Math.abs(r2.config.xaxis.labels.rotate) / 12 : 1.01) + o2.x && (e3.text = "");
          }
          return e3;
        } }, { key: "checkForReversedLabels", value: function(t4, e3) {
          var n3 = this.w;
          return n3.config.yaxis[t4] && n3.config.yaxis[t4].reversed && e3.reverse(), e3;
        } }, { key: "isYAxisHidden", value: function(t4) {
          var e3 = this.w, n3 = new C(this.ctx);
          return !e3.config.yaxis[t4].show || !e3.config.yaxis[t4].showForNullSeries && n3.isSeriesNull(t4) && e3.globals.collapsedSeriesIndices.indexOf(t4) === -1;
        } }, { key: "getYAxisForeColor", value: function(t4, e3) {
          var n3 = this.w;
          return Array.isArray(t4) && n3.globals.yAxisScale[e3] && this.ctx.theme.pushExtraColors(t4, n3.globals.yAxisScale[e3].result.length, false), t4;
        } }, { key: "drawYAxisTicks", value: function(t4, e3, n3, i2, a2, r2, o2) {
          var s2 = this.w, l2 = new _(this.ctx), c2 = s2.globals.translateY;
          if (i2.show && e3 > 0) {
            s2.config.yaxis[a2].opposite === true && (t4 += i2.width);
            for (var d2 = e3; d2 >= 0; d2--) {
              var u2 = c2 + e3 / 10 + s2.config.yaxis[a2].labels.offsetY - 1;
              s2.globals.isBarHorizontal && (u2 = r2 * d2), s2.config.chart.type === "heatmap" && (u2 += r2 / 2);
              var h2 = l2.drawLine(t4 + n3.offsetX - i2.width + i2.offsetX, u2 + i2.offsetY, t4 + n3.offsetX + i2.offsetX, u2 + i2.offsetY, i2.color);
              o2.add(h2), c2 += r2;
            }
          }
        } }]), t3;
      }(), U = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "scaleSvgNode", value: function(t4, e3) {
          var n3 = parseFloat(t4.getAttributeNS(null, "width")), i2 = parseFloat(t4.getAttributeNS(null, "height"));
          t4.setAttributeNS(null, "width", n3 * e3), t4.setAttributeNS(null, "height", i2 * e3), t4.setAttributeNS(null, "viewBox", "0 0 " + n3 + " " + i2);
        } }, { key: "fixSvgStringForIe11", value: function(t4) {
          if (!b.isIE11())
            return t4;
          var e3 = 0, n3 = t4.replace(/xmlns="http:\/\/www.w3.org\/2000\/svg"/g, function(t5) {
            return ++e3 == 2 ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"' : t5;
          });
          return (n3 = n3.replace(/xmlns:NS\d+=""/g, "")).replace(/NS\d+:(\w+:\w+=")/g, "$1");
        } }, { key: "getSvgString", value: function(t4) {
          var e3 = this.w.globals.dom.Paper.svg();
          if (t4 !== 1) {
            var n3 = this.w.globals.dom.Paper.node.cloneNode(true);
            this.scaleSvgNode(n3, t4), e3 = new XMLSerializer().serializeToString(n3);
          }
          return this.fixSvgStringForIe11(e3);
        } }, { key: "cleanup", value: function() {
          var t4 = this.w, e3 = t4.globals.dom.baseEl.getElementsByClassName("apexcharts-xcrosshairs"), n3 = t4.globals.dom.baseEl.getElementsByClassName("apexcharts-ycrosshairs"), i2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-zoom-rect, .apexcharts-selection-rect");
          Array.prototype.forEach.call(i2, function(t5) {
            t5.setAttribute("width", 0);
          }), e3 && e3[0] && (e3[0].setAttribute("x", -500), e3[0].setAttribute("x1", -500), e3[0].setAttribute("x2", -500)), n3 && n3[0] && (n3[0].setAttribute("y", -100), n3[0].setAttribute("y1", -100), n3[0].setAttribute("y2", -100));
        } }, { key: "svgUrl", value: function() {
          this.cleanup();
          var t4 = this.getSvgString(), e3 = new Blob([t4], { type: "image/svg+xml;charset=utf-8" });
          return URL.createObjectURL(e3);
        } }, { key: "dataURI", value: function(t4) {
          var e3 = this;
          return new Promise(function(n3) {
            var i2 = e3.w, a2 = t4 ? t4.scale || t4.width / i2.globals.svgWidth : 1;
            e3.cleanup();
            var r2 = document.createElement("canvas");
            r2.width = i2.globals.svgWidth * a2, r2.height = parseInt(i2.globals.dom.elWrap.style.height, 10) * a2;
            var o2 = i2.config.chart.background === "transparent" ? "#fff" : i2.config.chart.background, s2 = r2.getContext("2d");
            s2.fillStyle = o2, s2.fillRect(0, 0, r2.width * a2, r2.height * a2);
            var l2 = e3.getSvgString(a2);
            if (window.canvg && b.isIE11()) {
              var c2 = window.canvg.Canvg.fromString(s2, l2, { ignoreClear: true, ignoreDimensions: true });
              c2.start();
              var d2 = r2.msToBlob();
              c2.stop(), n3({ blob: d2 });
            } else {
              var u2 = "data:image/svg+xml," + encodeURIComponent(l2), h2 = new Image();
              h2.crossOrigin = "anonymous", h2.onload = function() {
                if (s2.drawImage(h2, 0, 0), r2.msToBlob) {
                  var t5 = r2.msToBlob();
                  n3({ blob: t5 });
                } else {
                  var e4 = r2.toDataURL("image/png");
                  n3({ imgURI: e4 });
                }
              }, h2.src = u2;
            }
          });
        } }, { key: "exportToSVG", value: function() {
          this.triggerDownload(this.svgUrl(), this.w.config.chart.toolbar.export.svg.filename, ".svg");
        } }, { key: "exportToPng", value: function() {
          var t4 = this;
          this.dataURI().then(function(e3) {
            var n3 = e3.imgURI, i2 = e3.blob;
            i2 ? navigator.msSaveOrOpenBlob(i2, t4.w.globals.chartID + ".png") : t4.triggerDownload(n3, t4.w.config.chart.toolbar.export.png.filename, ".png");
          });
        } }, { key: "exportToCSV", value: function(t4) {
          var e3 = this, n3 = t4.series, i2 = t4.columnDelimiter, a2 = t4.lineDelimiter, r2 = a2 === void 0 ? "\n" : a2, o2 = this.w, s2 = [], l2 = [], c2 = "data:text/csv;charset=utf-8,\uFEFF", d2 = new $(this.ctx), u2 = new Y(this.ctx), h2 = function(t5) {
            var n4 = "";
            if (o2.globals.axisCharts) {
              if (o2.config.xaxis.type === "category" || o2.config.xaxis.convertedCatToNumeric)
                if (o2.globals.isBarHorizontal) {
                  var a3 = o2.globals.yLabelFormatters[0], r3 = new j(e3.ctx).getActiveConfigSeriesIndex();
                  n4 = a3(o2.globals.labels[t5], { seriesIndex: r3, dataPointIndex: t5, w: o2 });
                } else
                  n4 = u2.getLabel(o2.globals.labels, o2.globals.timescaleLabels, 0, t5).text;
              o2.config.xaxis.type === "datetime" && (o2.config.xaxis.categories.length ? n4 = o2.config.xaxis.categories[t5] : o2.config.labels.length && (n4 = o2.config.labels[t5]));
            } else
              n4 = o2.config.labels[t5];
            return Array.isArray(n4) && (n4 = n4.join(" ")), b.isNumber(n4) ? n4 : n4.split(i2).join("");
          };
          s2.push(o2.config.chart.toolbar.export.csv.headerCategory), n3.map(function(t5, e4) {
            var n4 = t5.name ? t5.name : "series-".concat(e4);
            o2.globals.axisCharts && s2.push(n4.split(i2).join("") ? n4.split(i2).join("") : "series-".concat(e4));
          }), o2.globals.axisCharts || (s2.push(o2.config.chart.toolbar.export.csv.headerValue), l2.push(s2.join(i2))), n3.map(function(t5, e4) {
            o2.globals.axisCharts ? function(t6, e5) {
              if (s2.length && e5 === 0 && l2.push(s2.join(i2)), t6.data && t6.data.length)
                for (var a3 = 0; a3 < t6.data.length; a3++) {
                  s2 = [];
                  var r3 = h2(a3);
                  if (r3 || (d2.isFormatXY() ? r3 = n3[e5].data[a3].x : d2.isFormat2DArray() && (r3 = n3[e5].data[a3] ? n3[e5].data[a3][0] : "")), e5 === 0) {
                    s2.push((u3 = r3, o2.config.xaxis.type === "datetime" && String(u3).length >= 10 ? o2.config.chart.toolbar.export.csv.dateFormatter(r3) : b.isNumber(r3) ? r3 : r3.split(i2).join("")));
                    for (var c3 = 0; c3 < o2.globals.series.length; c3++)
                      s2.push(o2.globals.series[c3][a3]);
                  }
                  (o2.config.chart.type === "candlestick" || t6.type && t6.type === "candlestick") && (s2.pop(), s2.push(o2.globals.seriesCandleO[e5][a3]), s2.push(o2.globals.seriesCandleH[e5][a3]), s2.push(o2.globals.seriesCandleL[e5][a3]), s2.push(o2.globals.seriesCandleC[e5][a3])), (o2.config.chart.type === "boxPlot" || t6.type && t6.type === "boxPlot") && (s2.pop(), s2.push(o2.globals.seriesCandleO[e5][a3]), s2.push(o2.globals.seriesCandleH[e5][a3]), s2.push(o2.globals.seriesCandleM[e5][a3]), s2.push(o2.globals.seriesCandleL[e5][a3]), s2.push(o2.globals.seriesCandleC[e5][a3])), o2.config.chart.type === "rangeBar" && (s2.pop(), s2.push(o2.globals.seriesRangeStart[e5][a3]), s2.push(o2.globals.seriesRangeEnd[e5][a3])), s2.length && l2.push(s2.join(i2));
                }
              var u3;
            }(t5, e4) : ((s2 = []).push(o2.globals.labels[e4].split(i2).join("")), s2.push(o2.globals.series[e4]), l2.push(s2.join(i2)));
          }), c2 += l2.join(r2), this.triggerDownload(encodeURI(c2), o2.config.chart.toolbar.export.csv.filename, ".csv");
        } }, { key: "triggerDownload", value: function(t4, e3, n3) {
          var i2 = document.createElement("a");
          i2.href = t4, i2.download = (e3 || this.w.globals.chartID) + n3, document.body.appendChild(i2), i2.click(), document.body.removeChild(i2);
        } }]), t3;
      }(), G = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
          var n3 = this.w;
          this.axesUtils = new Y(e3), this.xaxisLabels = n3.globals.labels.slice(), n3.globals.timescaleLabels.length > 0 && !n3.globals.isBarHorizontal && (this.xaxisLabels = n3.globals.timescaleLabels.slice()), n3.config.xaxis.overwriteCategories && (this.xaxisLabels = n3.config.xaxis.overwriteCategories), this.drawnLabels = [], this.drawnLabelsRects = [], n3.config.xaxis.position === "top" ? this.offY = 0 : this.offY = n3.globals.gridHeight + 1, this.offY = this.offY + n3.config.xaxis.axisBorder.offsetY, this.isCategoryBarHorizontal = n3.config.chart.type === "bar" && n3.config.plotOptions.bar.horizontal, this.xaxisFontSize = n3.config.xaxis.labels.style.fontSize, this.xaxisFontFamily = n3.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = n3.config.xaxis.labels.style.colors, this.xaxisBorderWidth = n3.config.xaxis.axisBorder.width, this.isCategoryBarHorizontal && (this.xaxisBorderWidth = n3.config.yaxis[0].axisBorder.width.toString()), this.xaxisBorderWidth.indexOf("%") > -1 ? this.xaxisBorderWidth = n3.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10) / 100 : this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10), this.xaxisBorderHeight = n3.config.xaxis.axisBorder.height, this.yaxis = n3.config.yaxis[0];
        }
        return s(t3, [{ key: "drawXaxis", value: function() {
          var t4, e3 = this, n3 = this.w, i2 = new _(this.ctx), a2 = i2.group({ class: "apexcharts-xaxis", transform: "translate(".concat(n3.config.xaxis.offsetX, ", ").concat(n3.config.xaxis.offsetY, ")") }), r2 = i2.group({ class: "apexcharts-xaxis-texts-g", transform: "translate(".concat(n3.globals.translateXAxisX, ", ").concat(n3.globals.translateXAxisY, ")") });
          a2.add(r2);
          for (var o2 = n3.globals.padHorizontal, s2 = [], l2 = 0; l2 < this.xaxisLabels.length; l2++)
            s2.push(this.xaxisLabels[l2]);
          var c2 = s2.length;
          if (n3.globals.isXNumeric) {
            var d2 = c2 > 1 ? c2 - 1 : c2;
            t4 = n3.globals.gridWidth / d2, o2 = o2 + t4 / 2 + n3.config.xaxis.labels.offsetX;
          } else
            t4 = n3.globals.gridWidth / s2.length, o2 = o2 + t4 + n3.config.xaxis.labels.offsetX;
          for (var u2 = function(a3) {
            var l3 = o2 - t4 / 2 + n3.config.xaxis.labels.offsetX;
            a3 === 0 && c2 === 1 && t4 / 2 === o2 && n3.globals.dataPoints === 1 && (l3 = n3.globals.gridWidth / 2);
            var d3 = e3.axesUtils.getLabel(s2, n3.globals.timescaleLabels, l3, a3, e3.drawnLabels, e3.xaxisFontSize), u3 = 28;
            if (n3.globals.rotateXLabels && (u3 = 22), (d3 = n3.config.xaxis.tickAmount !== void 0 && n3.config.xaxis.tickAmount !== "dataPoints" && n3.config.xaxis.type !== "datetime" ? e3.axesUtils.checkLabelBasedOnTickamount(a3, d3, c2) : e3.axesUtils.checkForOverflowingLabels(a3, d3, c2, e3.drawnLabels, e3.drawnLabelsRects)).text && n3.globals.xaxisLabelsCount++, n3.config.xaxis.labels.show) {
              var h3 = i2.drawText({ x: d3.x, y: e3.offY + n3.config.xaxis.labels.offsetY + u3 - (n3.config.xaxis.position === "top" ? n3.globals.xAxisHeight + n3.config.xaxis.axisTicks.height - 2 : 0), text: d3.text, textAnchor: "middle", fontWeight: d3.isBold ? 600 : n3.config.xaxis.labels.style.fontWeight, fontSize: e3.xaxisFontSize, fontFamily: e3.xaxisFontFamily, foreColor: Array.isArray(e3.xaxisForeColors) ? n3.config.xaxis.convertedCatToNumeric ? e3.xaxisForeColors[n3.globals.minX + a3 - 1] : e3.xaxisForeColors[a3] : e3.xaxisForeColors, isPlainText: false, cssClass: "apexcharts-xaxis-label " + n3.config.xaxis.labels.style.cssClass });
              r2.add(h3);
              var p3 = document.createElementNS(n3.globals.SVGNS, "title");
              p3.textContent = Array.isArray(d3.text) ? d3.text.join(" ") : d3.text, h3.node.appendChild(p3), d3.text !== "" && (e3.drawnLabels.push(d3.text), e3.drawnLabelsRects.push(d3));
            }
            o2 += t4;
          }, h2 = 0; h2 <= c2 - 1; h2++)
            u2(h2);
          if (n3.config.xaxis.title.text !== void 0) {
            var p2 = i2.group({ class: "apexcharts-xaxis-title" }), f2 = i2.drawText({ x: n3.globals.gridWidth / 2 + n3.config.xaxis.title.offsetX, y: this.offY + parseFloat(this.xaxisFontSize) + n3.globals.xAxisLabelsHeight + n3.config.xaxis.title.offsetY, text: n3.config.xaxis.title.text, textAnchor: "middle", fontSize: n3.config.xaxis.title.style.fontSize, fontFamily: n3.config.xaxis.title.style.fontFamily, fontWeight: n3.config.xaxis.title.style.fontWeight, foreColor: n3.config.xaxis.title.style.color, cssClass: "apexcharts-xaxis-title-text " + n3.config.xaxis.title.style.cssClass });
            p2.add(f2), a2.add(p2);
          }
          if (n3.config.xaxis.axisBorder.show) {
            var g2 = n3.globals.barPadForNumericAxis, m2 = i2.drawLine(n3.globals.padHorizontal + n3.config.xaxis.axisBorder.offsetX - g2, this.offY, this.xaxisBorderWidth + g2, this.offY, n3.config.xaxis.axisBorder.color, 0, this.xaxisBorderHeight);
            a2.add(m2);
          }
          return a2;
        } }, { key: "drawXaxisInversed", value: function(t4) {
          var e3, n3, i2 = this, a2 = this.w, r2 = new _(this.ctx), o2 = a2.config.yaxis[0].opposite ? a2.globals.translateYAxisX[t4] : 0, s2 = r2.group({ class: "apexcharts-yaxis apexcharts-xaxis-inversed", rel: t4 }), l2 = r2.group({ class: "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g", transform: "translate(" + o2 + ", 0)" });
          s2.add(l2);
          var c2 = [];
          if (a2.config.yaxis[t4].show)
            for (var d2 = 0; d2 < this.xaxisLabels.length; d2++)
              c2.push(this.xaxisLabels[d2]);
          e3 = a2.globals.gridHeight / c2.length, n3 = -e3 / 2.2;
          var u2 = a2.globals.yLabelFormatters[0], h2 = a2.config.yaxis[0].labels;
          if (h2.show)
            for (var p2 = function(o3) {
              var s3 = c2[o3] === void 0 ? "" : c2[o3];
              s3 = u2(s3, { seriesIndex: t4, dataPointIndex: o3, w: a2 });
              var d3 = i2.axesUtils.getYAxisForeColor(h2.style.colors, t4), p3 = 0;
              Array.isArray(s3) && (p3 = s3.length / 2 * parseInt(h2.style.fontSize, 10));
              var f3 = r2.drawText({ x: h2.offsetX - 15, y: n3 + e3 + h2.offsetY - p3, text: s3, textAnchor: i2.yaxis.opposite ? "start" : "end", foreColor: Array.isArray(d3) ? d3[o3] : d3, fontSize: h2.style.fontSize, fontFamily: h2.style.fontFamily, fontWeight: h2.style.fontWeight, isPlainText: false, cssClass: "apexcharts-yaxis-label " + h2.style.cssClass });
              l2.add(f3);
              var g3 = document.createElementNS(a2.globals.SVGNS, "title");
              if (g3.textContent = Array.isArray(s3) ? s3.join(" ") : s3, f3.node.appendChild(g3), a2.config.yaxis[t4].labels.rotate !== 0) {
                var m3 = r2.rotateAroundCenter(f3.node);
                f3.node.setAttribute("transform", "rotate(".concat(a2.config.yaxis[t4].labels.rotate, " 0 ").concat(m3.y, ")"));
              }
              n3 += e3;
            }, f2 = 0; f2 <= c2.length - 1; f2++)
              p2(f2);
          if (a2.config.yaxis[0].title.text !== void 0) {
            var g2 = r2.group({ class: "apexcharts-yaxis-title apexcharts-xaxis-title-inversed", transform: "translate(" + o2 + ", 0)" }), m2 = r2.drawText({ x: 0, y: a2.globals.gridHeight / 2, text: a2.config.yaxis[0].title.text, textAnchor: "middle", foreColor: a2.config.yaxis[0].title.style.color, fontSize: a2.config.yaxis[0].title.style.fontSize, fontWeight: a2.config.yaxis[0].title.style.fontWeight, fontFamily: a2.config.yaxis[0].title.style.fontFamily, cssClass: "apexcharts-yaxis-title-text " + a2.config.yaxis[0].title.style.cssClass });
            g2.add(m2), s2.add(g2);
          }
          var v2 = 0;
          this.isCategoryBarHorizontal && a2.config.yaxis[0].opposite && (v2 = a2.globals.gridWidth);
          var b2 = a2.config.xaxis.axisBorder;
          if (b2.show) {
            var y2 = r2.drawLine(a2.globals.padHorizontal + b2.offsetX + v2, 1 + b2.offsetY, a2.globals.padHorizontal + b2.offsetX + v2, a2.globals.gridHeight + b2.offsetY, b2.color, 0);
            s2.add(y2);
          }
          return a2.config.yaxis[0].axisTicks.show && this.axesUtils.drawYAxisTicks(v2, c2.length, a2.config.yaxis[0].axisBorder, a2.config.yaxis[0].axisTicks, 0, e3, s2), s2;
        } }, { key: "drawXaxisTicks", value: function(t4, e3) {
          var n3 = this.w, i2 = t4;
          if (!(t4 < 0 || t4 - 2 > n3.globals.gridWidth)) {
            var a2 = this.offY + n3.config.xaxis.axisTicks.offsetY, r2 = a2 + n3.config.xaxis.axisTicks.height;
            if (n3.config.xaxis.position === "top" && (r2 = a2 - n3.config.xaxis.axisTicks.height), n3.config.xaxis.axisTicks.show) {
              var o2 = new _(this.ctx).drawLine(t4 + n3.config.xaxis.axisTicks.offsetX, a2 + n3.config.xaxis.offsetY, i2 + n3.config.xaxis.axisTicks.offsetX, r2 + n3.config.xaxis.offsetY, n3.config.xaxis.axisTicks.color);
              e3.add(o2), o2.node.classList.add("apexcharts-xaxis-tick");
            }
          }
        } }, { key: "getXAxisTicksPositions", value: function() {
          var t4 = this.w, e3 = [], n3 = this.xaxisLabels.length, i2 = t4.globals.padHorizontal;
          if (t4.globals.timescaleLabels.length > 0)
            for (var a2 = 0; a2 < n3; a2++)
              i2 = this.xaxisLabels[a2].position, e3.push(i2);
          else
            for (var r2 = n3, o2 = 0; o2 < r2; o2++) {
              var s2 = r2;
              t4.globals.isXNumeric && t4.config.chart.type !== "bar" && (s2 -= 1), i2 += t4.globals.gridWidth / s2, e3.push(i2);
            }
          return e3;
        } }, { key: "xAxisLabelCorrections", value: function() {
          var t4 = this.w, e3 = new _(this.ctx), n3 = t4.globals.dom.baseEl.querySelector(".apexcharts-xaxis-texts-g"), i2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-texts-g text"), a2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis-inversed text"), r2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-xaxis-inversed-texts-g text tspan");
          if (t4.globals.rotateXLabels || t4.config.xaxis.labels.rotateAlways)
            for (var o2 = 0; o2 < i2.length; o2++) {
              var s2 = e3.rotateAroundCenter(i2[o2]);
              s2.y = s2.y - 1, s2.x = s2.x + 1, i2[o2].setAttribute("transform", "rotate(".concat(t4.config.xaxis.labels.rotate, " ").concat(s2.x, " ").concat(s2.y, ")")), i2[o2].setAttribute("text-anchor", "end"), n3.setAttribute("transform", "translate(0, ".concat(-10, ")"));
              var l2 = i2[o2].childNodes;
              t4.config.xaxis.labels.trim && Array.prototype.forEach.call(l2, function(n4) {
                e3.placeTextWithEllipsis(n4, n4.textContent, t4.globals.xAxisLabelsHeight - (t4.config.legend.position === "bottom" ? 20 : 10));
              });
            }
          else
            !function() {
              for (var n4 = t4.globals.gridWidth / (t4.globals.labels.length + 1), a3 = 0; a3 < i2.length; a3++) {
                var r3 = i2[a3].childNodes;
                t4.config.xaxis.labels.trim && t4.config.xaxis.type !== "datetime" && Array.prototype.forEach.call(r3, function(t5) {
                  e3.placeTextWithEllipsis(t5, t5.textContent, n4);
                });
              }
            }();
          if (a2.length > 0) {
            var c2 = a2[a2.length - 1].getBBox(), d2 = a2[0].getBBox();
            c2.x < -20 && a2[a2.length - 1].parentNode.removeChild(a2[a2.length - 1]), d2.x + d2.width > t4.globals.gridWidth && !t4.globals.isBarHorizontal && a2[0].parentNode.removeChild(a2[0]);
            for (var u2 = 0; u2 < r2.length; u2++)
              e3.placeTextWithEllipsis(r2[u2], r2[u2].textContent, t4.config.yaxis[0].labels.maxWidth - 2 * parseFloat(t4.config.yaxis[0].title.style.fontSize) - 20);
          }
        } }]), t3;
      }(), X = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
          var n3 = this.w;
          this.xaxisLabels = n3.globals.labels.slice(), this.axesUtils = new Y(e3), this.isTimelineBar = n3.config.xaxis.type === "datetime" && n3.globals.seriesRangeBarTimeline.length, n3.globals.timescaleLabels.length > 0 && (this.xaxisLabels = n3.globals.timescaleLabels.slice());
        }
        return s(t3, [{ key: "drawGridArea", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, e3 = this.w, n3 = new _(this.ctx);
          t4 === null && (t4 = n3.group({ class: "apexcharts-grid" }));
          var i2 = n3.drawLine(e3.globals.padHorizontal, 1, e3.globals.padHorizontal, e3.globals.gridHeight, "transparent"), a2 = n3.drawLine(e3.globals.padHorizontal, e3.globals.gridHeight, e3.globals.gridWidth, e3.globals.gridHeight, "transparent");
          return t4.add(a2), t4.add(i2), t4;
        } }, { key: "drawGrid", value: function() {
          var t4 = null;
          return this.w.globals.axisCharts && (t4 = this.renderGrid(), this.drawGridArea(t4.el)), t4;
        } }, { key: "createGridMask", value: function() {
          var t4 = this.w, e3 = t4.globals, n3 = new _(this.ctx), i2 = Array.isArray(t4.config.stroke.width) ? 0 : t4.config.stroke.width;
          if (Array.isArray(t4.config.stroke.width)) {
            var a2 = 0;
            t4.config.stroke.width.forEach(function(t5) {
              a2 = Math.max(a2, t5);
            }), i2 = a2;
          }
          e3.dom.elGridRectMask = document.createElementNS(e3.SVGNS, "clipPath"), e3.dom.elGridRectMask.setAttribute("id", "gridRectMask".concat(e3.cuid)), e3.dom.elGridRectMarkerMask = document.createElementNS(e3.SVGNS, "clipPath"), e3.dom.elGridRectMarkerMask.setAttribute("id", "gridRectMarkerMask".concat(e3.cuid)), e3.dom.elForecastMask = document.createElementNS(e3.SVGNS, "clipPath"), e3.dom.elForecastMask.setAttribute("id", "forecastMask".concat(e3.cuid)), e3.dom.elNonForecastMask = document.createElementNS(e3.SVGNS, "clipPath"), e3.dom.elNonForecastMask.setAttribute("id", "nonForecastMask".concat(e3.cuid));
          var r2 = t4.config.chart.type, o2 = 0, s2 = 0;
          (r2 === "bar" || r2 === "rangeBar" || r2 === "candlestick" || r2 === "boxPlot" || t4.globals.comboBarCount > 0) && t4.globals.isXNumeric && !t4.globals.isBarHorizontal && (o2 = t4.config.grid.padding.left, s2 = t4.config.grid.padding.right, e3.barPadForNumericAxis > o2 && (o2 = e3.barPadForNumericAxis, s2 = e3.barPadForNumericAxis)), e3.dom.elGridRect = n3.drawRect(-i2 / 2 - o2 - 2, -i2 / 2, e3.gridWidth + i2 + s2 + o2 + 4, e3.gridHeight + i2, 0, "#fff"), new C(this).getLargestMarkerSize();
          var l2 = t4.globals.markers.largestSize + 1;
          e3.dom.elGridRectMarker = n3.drawRect(2 * -l2, 2 * -l2, e3.gridWidth + 4 * l2, e3.gridHeight + 4 * l2, 0, "#fff"), e3.dom.elGridRectMask.appendChild(e3.dom.elGridRect.node), e3.dom.elGridRectMarkerMask.appendChild(e3.dom.elGridRectMarker.node);
          var c2 = e3.dom.baseEl.querySelector("defs");
          c2.appendChild(e3.dom.elGridRectMask), c2.appendChild(e3.dom.elForecastMask), c2.appendChild(e3.dom.elNonForecastMask), c2.appendChild(e3.dom.elGridRectMarkerMask);
        } }, { key: "_drawGridLines", value: function(t4) {
          var e3 = t4.i, n3 = t4.x1, i2 = t4.y1, a2 = t4.x2, r2 = t4.y2, o2 = t4.xCount, s2 = t4.parent, l2 = this.w;
          e3 === 0 && l2.globals.skipFirstTimelinelabel || e3 === o2 - 1 && l2.globals.skipLastTimelinelabel && !l2.config.xaxis.labels.formatter || l2.config.chart.type === "radar" || (l2.config.grid.xaxis.lines.show && this._drawGridLine({ x1: n3, y1: i2, x2: a2, y2: r2, parent: s2 }), new G(this.ctx).drawXaxisTicks(n3, this.elg));
        } }, { key: "_drawGridLine", value: function(t4) {
          var e3 = t4.x1, n3 = t4.y1, i2 = t4.x2, a2 = t4.y2, r2 = t4.parent, o2 = this.w, s2 = r2.node.classList.contains("apexcharts-gridlines-horizontal"), l2 = o2.config.grid.strokeDashArray, c2 = o2.globals.barPadForNumericAxis, d2 = new _(this).drawLine(e3 - (s2 ? c2 : 0), n3, i2 + (s2 ? c2 : 0), a2, o2.config.grid.borderColor, l2);
          d2.node.classList.add("apexcharts-gridline"), r2.add(d2);
        } }, { key: "_drawGridBandRect", value: function(t4) {
          var e3 = t4.c, n3 = t4.x1, i2 = t4.y1, a2 = t4.x2, r2 = t4.y2, o2 = t4.type, s2 = this.w, l2 = new _(this.ctx), c2 = s2.globals.barPadForNumericAxis;
          if (o2 !== "column" || s2.config.xaxis.type !== "datetime") {
            var d2 = s2.config.grid[o2].colors[e3], u2 = l2.drawRect(n3 - (o2 === "row" ? c2 : 0), i2, a2 + (o2 === "row" ? 2 * c2 : 0), r2, 0, d2, s2.config.grid[o2].opacity);
            this.elg.add(u2), u2.attr("clip-path", "url(#gridRectMask".concat(s2.globals.cuid, ")")), u2.node.classList.add("apexcharts-grid-".concat(o2));
          }
        } }, { key: "_drawXYLines", value: function(t4) {
          var e3 = this, n3 = t4.xCount, i2 = t4.tickAmount, a2 = this.w;
          if (a2.config.grid.xaxis.lines.show || a2.config.xaxis.axisTicks.show) {
            var r2, o2 = a2.globals.padHorizontal, s2 = a2.globals.gridHeight;
            a2.globals.timescaleLabels.length ? function(t5) {
              for (var i3 = t5.xC, a3 = t5.x1, r3 = t5.y1, o3 = t5.x2, s3 = t5.y2, l3 = 0; l3 < i3; l3++)
                a3 = e3.xaxisLabels[l3].position, o3 = e3.xaxisLabels[l3].position, e3._drawGridLines({ i: l3, x1: a3, y1: r3, x2: o3, y2: s3, xCount: n3, parent: e3.elgridLinesV });
            }({ xC: n3, x1: o2, y1: 0, x2: r2, y2: s2 }) : (a2.globals.isXNumeric && (n3 = a2.globals.xAxisScale.result.length), a2.config.xaxis.convertedCatToNumeric && (n3 = a2.globals.xaxisLabelsCount), function(t5) {
              var i3 = t5.xC, r3 = t5.x1, o3 = t5.y1, s3 = t5.x2, l3 = t5.y2;
              if (a2.config.xaxis.tickAmount !== void 0 && a2.config.xaxis.tickAmount !== "dataPoints")
                a2.globals.dom.baseEl.querySelectorAll(".apexcharts-text.apexcharts-xaxis-label tspan:not(:empty)").forEach(function(t6, i4) {
                  var a3 = t6.getBBox();
                  e3._drawGridLines({ i: i4, x1: a3.x + a3.width / 2, y1: o3, x2: a3.x + a3.width / 2, y2: l3, xCount: n3, parent: e3.elgridLinesV });
                });
              else
                for (var c3 = 0; c3 < i3 + (a2.globals.isXNumeric ? 0 : 1); c3++)
                  c3 === 0 && i3 === 1 && a2.globals.dataPoints === 1 && (s3 = r3 = a2.globals.gridWidth / 2), e3._drawGridLines({ i: c3, x1: r3, y1: o3, x2: s3, y2: l3, xCount: n3, parent: e3.elgridLinesV }), s3 = r3 += a2.globals.gridWidth / (a2.globals.isXNumeric ? i3 - 1 : i3);
            }({ xC: n3, x1: o2, y1: 0, x2: r2, y2: s2 }));
          }
          if (a2.config.grid.yaxis.lines.show) {
            var l2 = 0, c2 = 0, d2 = a2.globals.gridWidth, u2 = i2 + 1;
            this.isTimelineBar && (u2 = a2.globals.labels.length);
            for (var h2 = 0; h2 < u2 + (this.isTimelineBar ? 1 : 0); h2++)
              this._drawGridLine({ x1: 0, y1: l2, x2: d2, y2: c2, parent: this.elgridLinesH }), c2 = l2 += a2.globals.gridHeight / (this.isTimelineBar ? u2 : i2);
          }
        } }, { key: "_drawInvertedXYLines", value: function(t4) {
          var e3 = t4.xCount, n3 = this.w;
          if (n3.config.grid.xaxis.lines.show || n3.config.xaxis.axisTicks.show)
            for (var i2, a2 = n3.globals.padHorizontal, r2 = n3.globals.gridHeight, o2 = 0; o2 < e3 + 1; o2++)
              n3.config.grid.xaxis.lines.show && this._drawGridLine({ x1: a2, y1: 0, x2: i2, y2: r2, parent: this.elgridLinesV }), new G(this.ctx).drawXaxisTicks(a2, this.elg), i2 = a2 = a2 + n3.globals.gridWidth / e3 + 0.3;
          if (n3.config.grid.yaxis.lines.show)
            for (var s2 = 0, l2 = 0, c2 = n3.globals.gridWidth, d2 = 0; d2 < n3.globals.dataPoints + 1; d2++)
              this._drawGridLine({ x1: 0, y1: s2, x2: c2, y2: l2, parent: this.elgridLinesH }), l2 = s2 += n3.globals.gridHeight / n3.globals.dataPoints;
        } }, { key: "renderGrid", value: function() {
          var t4 = this.w, e3 = new _(this.ctx);
          this.elg = e3.group({ class: "apexcharts-grid" }), this.elgridLinesH = e3.group({ class: "apexcharts-gridlines-horizontal" }), this.elgridLinesV = e3.group({ class: "apexcharts-gridlines-vertical" }), this.elg.add(this.elgridLinesH), this.elg.add(this.elgridLinesV), t4.config.grid.show || (this.elgridLinesV.hide(), this.elgridLinesH.hide());
          for (var n3, i2 = t4.globals.yAxisScale.length ? t4.globals.yAxisScale[0].result.length - 1 : 5, a2 = 0; a2 < t4.globals.series.length && (t4.globals.yAxisScale[a2] !== void 0 && (i2 = t4.globals.yAxisScale[a2].result.length - 1), !(i2 > 2)); a2++)
            ;
          return !t4.globals.isBarHorizontal || this.isTimelineBar ? (n3 = this.xaxisLabels.length, this.isTimelineBar && (i2 = t4.globals.labels.length, t4.config.xaxis.tickAmount && t4.config.xaxis.labels.formatter && (n3 = t4.config.xaxis.tickAmount)), this._drawXYLines({ xCount: n3, tickAmount: i2 })) : (n3 = i2, i2 = t4.globals.xTickAmount, this._drawInvertedXYLines({ xCount: n3, tickAmount: i2 })), this.drawGridBands(n3, i2), { el: this.elg, xAxisTickWidth: t4.globals.gridWidth / n3 };
        } }, { key: "drawGridBands", value: function(t4, e3) {
          var n3 = this.w;
          if (n3.config.grid.row.colors !== void 0 && n3.config.grid.row.colors.length > 0)
            for (var i2 = 0, a2 = n3.globals.gridHeight / e3, r2 = n3.globals.gridWidth, o2 = 0, s2 = 0; o2 < e3; o2++, s2++)
              s2 >= n3.config.grid.row.colors.length && (s2 = 0), this._drawGridBandRect({ c: s2, x1: 0, y1: i2, x2: r2, y2: a2, type: "row" }), i2 += n3.globals.gridHeight / e3;
          if (n3.config.grid.column.colors !== void 0 && n3.config.grid.column.colors.length > 0)
            for (var l2 = n3.globals.isBarHorizontal || n3.config.xaxis.type !== "category" && !n3.config.xaxis.convertedCatToNumeric ? t4 : t4 - 1, c2 = n3.globals.padHorizontal, d2 = n3.globals.padHorizontal + n3.globals.gridWidth / l2, u2 = n3.globals.gridHeight, h2 = 0, p2 = 0; h2 < t4; h2++, p2++)
              p2 >= n3.config.grid.column.colors.length && (p2 = 0), this._drawGridBandRect({ c: p2, x1: c2, y1: 0, x2: d2, y2: u2, type: "column" }), c2 += n3.globals.gridWidth / l2;
        } }]), t3;
      }(), Z = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "niceScale", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 10, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0, a2 = arguments.length > 4 ? arguments[4] : void 0, r2 = this.w, o2 = Math.abs(e3 - t4);
          if ((n3 = this._adjustTicksForSmallRange(n3, i2, o2)) === "dataPoints" && (n3 = r2.globals.dataPoints - 1), t4 === Number.MIN_VALUE && e3 === 0 || !b.isNumber(t4) && !b.isNumber(e3) || t4 === Number.MIN_VALUE && e3 === -Number.MAX_VALUE) {
            t4 = 0, e3 = n3;
            var s2 = this.linearScale(t4, e3, n3);
            return s2;
          }
          t4 > e3 ? (console.warn("axis.min cannot be greater than axis.max"), e3 = t4 + 0.1) : t4 === e3 && (t4 = t4 === 0 ? 0 : t4 - 0.5, e3 = e3 === 0 ? 2 : e3 + 0.5);
          var l2 = [];
          o2 < 1 && a2 && (r2.config.chart.type === "candlestick" || r2.config.series[i2].type === "candlestick" || r2.config.chart.type === "boxPlot" || r2.config.series[i2].type === "boxPlot" || r2.globals.isRangeData) && (e3 *= 1.01);
          var c2 = n3 + 1;
          c2 < 2 ? c2 = 2 : c2 > 2 && (c2 -= 2);
          var d2 = o2 / c2, u2 = Math.floor(b.log10(d2)), h2 = Math.pow(10, u2), p2 = Math.round(d2 / h2);
          p2 < 1 && (p2 = 1);
          var f2 = p2 * h2, g2 = f2 * Math.floor(t4 / f2), m2 = f2 * Math.ceil(e3 / f2), v2 = g2;
          if (a2 && o2 > 2) {
            for (; l2.push(v2), !((v2 += f2) > m2); )
              ;
            return { result: l2, niceMin: l2[0], niceMax: l2[l2.length - 1] };
          }
          var y2 = t4;
          (l2 = []).push(y2);
          for (var x2 = Math.abs(e3 - t4) / n3, _2 = 0; _2 <= n3; _2++)
            y2 += x2, l2.push(y2);
          return l2[l2.length - 2] >= e3 && l2.pop(), { result: l2, niceMin: l2[0], niceMax: l2[l2.length - 1] };
        } }, { key: "linearScale", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 10, i2 = arguments.length > 3 ? arguments[3] : void 0, a2 = Math.abs(e3 - t4);
          (n3 = this._adjustTicksForSmallRange(n3, i2, a2)) === "dataPoints" && (n3 = this.w.globals.dataPoints - 1);
          var r2 = a2 / n3;
          n3 === Number.MAX_VALUE && (n3 = 10, r2 = 1);
          for (var o2 = [], s2 = t4; n3 >= 0; )
            o2.push(s2), s2 += r2, n3 -= 1;
          return { result: o2, niceMin: o2[0], niceMax: o2[o2.length - 1] };
        } }, { key: "logarithmicScale", value: function(t4) {
          for (var e3 = [], n3 = Math.ceil(Math.log10(t4)) + 1, i2 = 0; i2 < n3; i2++)
            e3.push(Math.pow(10, i2));
          return { result: e3, niceMin: e3[0], niceMax: e3[e3.length - 1] };
        } }, { key: "_adjustTicksForSmallRange", value: function(t4, e3, n3) {
          var i2 = t4;
          if (e3 !== void 0 && this.w.config.yaxis[e3].labels.formatter && this.w.config.yaxis[e3].tickAmount === void 0) {
            var a2 = this.w.config.yaxis[e3].labels.formatter(1);
            b.isNumber(Number(a2)) && !b.isFloat(a2) && (i2 = Math.ceil(n3));
          }
          return i2 < t4 ? i2 : t4;
        } }, { key: "setYScaleForIndex", value: function(t4, e3, n3) {
          var i2 = this.w.globals, a2 = this.w.config, r2 = i2.isBarHorizontal ? a2.xaxis : a2.yaxis[t4];
          i2.yAxisScale[t4] === void 0 && (i2.yAxisScale[t4] = []);
          var o2 = Math.abs(n3 - e3);
          if (r2.logarithmic && o2 <= 5 && (i2.invalidLogScale = true), r2.logarithmic && o2 > 5)
            i2.allSeriesCollapsed = false, i2.yAxisScale[t4] = this.logarithmicScale(n3);
          else if (n3 !== -Number.MAX_VALUE && b.isNumber(n3))
            if (i2.allSeriesCollapsed = false, r2.min === void 0 && r2.max === void 0 || r2.forceNiceScale) {
              var s2 = a2.yaxis[t4].max === void 0 && a2.yaxis[t4].min === void 0 || a2.yaxis[t4].forceNiceScale;
              i2.yAxisScale[t4] = this.niceScale(e3, n3, r2.tickAmount ? r2.tickAmount : o2 < 5 && o2 > 1 ? o2 + 1 : 5, t4, s2);
            } else
              i2.yAxisScale[t4] = this.linearScale(e3, n3, r2.tickAmount, t4);
          else
            i2.yAxisScale[t4] = this.linearScale(0, 5, 5);
        } }, { key: "setXScale", value: function(t4, e3) {
          var n3 = this.w, i2 = n3.globals, a2 = n3.config.xaxis, r2 = Math.abs(e3 - t4);
          return e3 !== -Number.MAX_VALUE && b.isNumber(e3) ? i2.xAxisScale = this.linearScale(t4, e3, a2.tickAmount ? a2.tickAmount : r2 < 5 && r2 > 1 ? r2 + 1 : 5, 0) : i2.xAxisScale = this.linearScale(0, 5, 5), i2.xAxisScale;
        } }, { key: "setMultipleYScales", value: function() {
          var t4 = this, e3 = this.w.globals, n3 = this.w.config, i2 = e3.minYArr.concat([]), a2 = e3.maxYArr.concat([]), r2 = [];
          n3.yaxis.forEach(function(e4, o2) {
            var s2 = o2;
            n3.series.forEach(function(t5, n4) {
              t5.name === e4.seriesName && (s2 = n4, o2 !== n4 ? r2.push({ index: n4, similarIndex: o2, alreadyExists: true }) : r2.push({ index: n4 }));
            });
            var l2 = i2[s2], c2 = a2[s2];
            t4.setYScaleForIndex(o2, l2, c2);
          }), this.sameScaleInMultipleAxes(i2, a2, r2);
        } }, { key: "sameScaleInMultipleAxes", value: function(t4, e3, n3) {
          var i2 = this, a2 = this.w.config, r2 = this.w.globals, o2 = [];
          n3.forEach(function(t5) {
            t5.alreadyExists && (o2[t5.index] === void 0 && (o2[t5.index] = []), o2[t5.index].push(t5.index), o2[t5.index].push(t5.similarIndex));
          }), r2.yAxisSameScaleIndices = o2, o2.forEach(function(t5, e4) {
            o2.forEach(function(n4, i3) {
              var a3, r3;
              e4 !== i3 && (a3 = t5, r3 = n4, a3.filter(function(t6) {
                return r3.indexOf(t6) !== -1;
              })).length > 0 && (o2[e4] = o2[e4].concat(o2[i3]));
            });
          });
          var s2 = o2.map(function(t5) {
            return t5.filter(function(e4, n4) {
              return t5.indexOf(e4) === n4;
            });
          }).map(function(t5) {
            return t5.sort();
          });
          o2 = o2.filter(function(t5) {
            return !!t5;
          });
          var l2 = s2.slice(), c2 = l2.map(function(t5) {
            return JSON.stringify(t5);
          });
          l2 = l2.filter(function(t5, e4) {
            return c2.indexOf(JSON.stringify(t5)) === e4;
          });
          var d2 = [], u2 = [];
          t4.forEach(function(t5, n4) {
            l2.forEach(function(i3, a3) {
              i3.indexOf(n4) > -1 && (d2[a3] === void 0 && (d2[a3] = [], u2[a3] = []), d2[a3].push({ key: n4, value: t5 }), u2[a3].push({ key: n4, value: e3[n4] }));
            });
          });
          var h2 = Array.apply(null, Array(l2.length)).map(Number.prototype.valueOf, Number.MIN_VALUE), p2 = Array.apply(null, Array(l2.length)).map(Number.prototype.valueOf, -Number.MAX_VALUE);
          d2.forEach(function(t5, e4) {
            t5.forEach(function(t6, n4) {
              h2[e4] = Math.min(t6.value, h2[e4]);
            });
          }), u2.forEach(function(t5, e4) {
            t5.forEach(function(t6, n4) {
              p2[e4] = Math.max(t6.value, p2[e4]);
            });
          }), t4.forEach(function(t5, e4) {
            u2.forEach(function(t6, n4) {
              var o3 = h2[n4], s3 = p2[n4];
              a2.chart.stacked && (s3 = 0, t6.forEach(function(t7, e5) {
                t7.value !== -Number.MAX_VALUE && (s3 += t7.value), o3 !== Number.MIN_VALUE && (o3 += d2[n4][e5].value);
              })), t6.forEach(function(n5, l3) {
                t6[l3].key === e4 && (a2.yaxis[e4].min !== void 0 && (o3 = typeof a2.yaxis[e4].min == "function" ? a2.yaxis[e4].min(r2.minY) : a2.yaxis[e4].min), a2.yaxis[e4].max !== void 0 && (s3 = typeof a2.yaxis[e4].max == "function" ? a2.yaxis[e4].max(r2.maxY) : a2.yaxis[e4].max), i2.setYScaleForIndex(e4, o3, s3));
              });
            });
          });
        } }, { key: "autoScaleY", value: function(t4, e3, n3) {
          t4 || (t4 = this);
          var i2 = t4.w;
          if (i2.globals.isMultipleYAxis || i2.globals.collapsedSeries.length)
            return console.warn("autoScaleYaxis is not supported in a multi-yaxis chart."), e3;
          var a2 = i2.globals.seriesX[0], r2 = i2.config.chart.stacked;
          return e3.forEach(function(t5, o2) {
            for (var s2 = 0, l2 = 0; l2 < a2.length; l2++)
              if (a2[l2] >= n3.xaxis.min) {
                s2 = l2;
                break;
              }
            var c2, d2, u2 = i2.globals.minYArr[o2], h2 = i2.globals.maxYArr[o2], p2 = i2.globals.stackedSeriesTotals;
            i2.globals.series.forEach(function(o3, l3) {
              var f2 = o3[s2];
              r2 ? (f2 = p2[s2], c2 = d2 = f2, p2.forEach(function(t6, e4) {
                a2[e4] <= n3.xaxis.max && a2[e4] >= n3.xaxis.min && (t6 > d2 && t6 !== null && (d2 = t6), o3[e4] < c2 && o3[e4] !== null && (c2 = o3[e4]));
              })) : (c2 = d2 = f2, o3.forEach(function(t6, e4) {
                if (a2[e4] <= n3.xaxis.max && a2[e4] >= n3.xaxis.min) {
                  var r3 = t6, o4 = t6;
                  i2.globals.series.forEach(function(n4, i3) {
                    t6 !== null && (r3 = Math.min(n4[e4], r3), o4 = Math.max(n4[e4], o4));
                  }), o4 > d2 && o4 !== null && (d2 = o4), r3 < c2 && r3 !== null && (c2 = r3);
                }
              })), c2 === void 0 && d2 === void 0 && (c2 = u2, d2 = h2), (d2 *= d2 < 0 ? 0.9 : 1.1) < 0 && d2 < h2 && (d2 = h2), (c2 *= c2 < 0 ? 1.1 : 0.9) < 0 && c2 > u2 && (c2 = u2), e3.length > 1 ? (e3[l3].min = t5.min === void 0 ? c2 : t5.min, e3[l3].max = t5.max === void 0 ? d2 : t5.max) : (e3[0].min = t5.min === void 0 ? c2 : t5.min, e3[0].max = t5.max === void 0 ? d2 : t5.max);
            });
          }), e3;
        } }]), t3;
      }(), K = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.scales = new Z(e3);
        }
        return s(t3, [{ key: "init", value: function() {
          this.setYRange(), this.setXRange(), this.setZRange();
        } }, { key: "getMinYMaxY", value: function(t4) {
          var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : Number.MAX_VALUE, n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : -Number.MAX_VALUE, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null, a2 = this.w.config, r2 = this.w.globals, o2 = -Number.MAX_VALUE, s2 = Number.MIN_VALUE;
          i2 === null && (i2 = t4 + 1);
          var l2 = r2.series, c2 = l2, d2 = l2;
          a2.chart.type === "candlestick" ? (c2 = r2.seriesCandleL, d2 = r2.seriesCandleH) : a2.chart.type === "boxPlot" ? (c2 = r2.seriesCandleO, d2 = r2.seriesCandleC) : r2.isRangeData && (c2 = r2.seriesRangeStart, d2 = r2.seriesRangeEnd);
          for (var u2 = t4; u2 < i2; u2++) {
            r2.dataPoints = Math.max(r2.dataPoints, l2[u2].length);
            for (var h2 = 0; h2 < r2.series[u2].length; h2++) {
              var p2 = l2[u2][h2];
              p2 !== null && b.isNumber(p2) ? (d2[u2][h2] !== void 0 && (o2 = Math.max(o2, d2[u2][h2])), c2[u2][h2] !== void 0 && (e3 = Math.min(e3, c2[u2][h2]), n3 = Math.max(n3, c2[u2][h2])), this.w.config.chart.type !== "candlestick" && this.w.config.chart.type !== "boxPlot" || (r2.seriesCandleC[u2][h2] !== void 0 && (o2 = Math.max(o2, r2.seriesCandleO[u2][h2]), o2 = Math.max(o2, r2.seriesCandleH[u2][h2]), o2 = Math.max(o2, r2.seriesCandleL[u2][h2]), o2 = Math.max(o2, r2.seriesCandleC[u2][h2]), this.w.config.chart.type === "boxPlot" && (o2 = Math.max(o2, r2.seriesCandleM[u2][h2]))), !a2.series[u2].type || a2.series[u2].type === "candlestick" && a2.series[u2].type === "boxPlot" || (o2 = Math.max(o2, r2.series[u2][h2]), e3 = Math.min(e3, r2.series[u2][h2])), n3 = o2), r2.seriesGoals[u2] && r2.seriesGoals[u2][h2] && Array.isArray(r2.seriesGoals[u2][h2]) && r2.seriesGoals[u2][h2].forEach(function(t5) {
                s2 !== Number.MIN_VALUE && (s2 = Math.min(s2, t5.value), e3 = s2), o2 = Math.max(o2, t5.value), n3 = o2;
              }), b.isFloat(p2) && (p2 = b.noExponents(p2), r2.yValueDecimal = Math.max(r2.yValueDecimal, p2.toString().split(".")[1].length)), s2 > c2[u2][h2] && c2[u2][h2] < 0 && (s2 = c2[u2][h2])) : r2.hasNullValues = true;
            }
          }
          return a2.chart.type === "rangeBar" && r2.seriesRangeStart.length && r2.isBarHorizontal && a2.xaxis.type === "datetime" && (s2 = e3), a2.chart.type === "bar" && (s2 < 0 && o2 < 0 && (o2 = 0), s2 === Number.MIN_VALUE && (s2 = 0)), { minY: s2, maxY: o2, lowestY: e3, highestY: n3 };
        } }, { key: "setYRange", value: function() {
          var t4 = this.w.globals, e3 = this.w.config;
          t4.maxY = -Number.MAX_VALUE, t4.minY = Number.MIN_VALUE;
          var n3 = Number.MAX_VALUE;
          if (t4.isMultipleYAxis)
            for (var i2 = 0; i2 < t4.series.length; i2++) {
              var a2 = this.getMinYMaxY(i2, n3, null, i2 + 1);
              t4.minYArr.push(a2.minY), t4.maxYArr.push(a2.maxY), n3 = a2.lowestY;
            }
          var r2 = this.getMinYMaxY(0, n3, null, t4.series.length);
          if (t4.minY = r2.minY, t4.maxY = r2.maxY, n3 = r2.lowestY, e3.chart.stacked && this._setStackedMinMax(), (e3.chart.type === "line" || e3.chart.type === "area" || e3.chart.type === "candlestick" || e3.chart.type === "boxPlot" || e3.chart.type === "rangeBar" && !t4.isBarHorizontal) && t4.minY === Number.MIN_VALUE && n3 !== -Number.MAX_VALUE && n3 !== t4.maxY) {
            var o2 = t4.maxY - n3;
            (n3 >= 0 && n3 <= 10 || e3.yaxis[0].min !== void 0 || e3.yaxis[0].max !== void 0) && (o2 = 0), t4.minY = n3 - 5 * o2 / 100, n3 > 0 && t4.minY < 0 && (t4.minY = 0), t4.maxY = t4.maxY + 5 * o2 / 100;
          }
          return e3.yaxis.forEach(function(e4, n4) {
            e4.max !== void 0 && (typeof e4.max == "number" ? t4.maxYArr[n4] = e4.max : typeof e4.max == "function" && (t4.maxYArr[n4] = e4.max(t4.isMultipleYAxis ? t4.maxYArr[n4] : t4.maxY)), t4.maxY = t4.maxYArr[n4]), e4.min !== void 0 && (typeof e4.min == "number" ? t4.minYArr[n4] = e4.min : typeof e4.min == "function" && (t4.minYArr[n4] = e4.min(t4.isMultipleYAxis ? t4.minYArr[n4] === Number.MIN_VALUE ? 0 : t4.minYArr[n4] : t4.minY)), t4.minY = t4.minYArr[n4]);
          }), t4.isBarHorizontal && ["min", "max"].forEach(function(n4) {
            e3.xaxis[n4] !== void 0 && typeof e3.xaxis[n4] == "number" && (n4 === "min" ? t4.minY = e3.xaxis[n4] : t4.maxY = e3.xaxis[n4]);
          }), t4.isMultipleYAxis ? (this.scales.setMultipleYScales(), t4.minY = n3, t4.yAxisScale.forEach(function(e4, n4) {
            t4.minYArr[n4] = e4.niceMin, t4.maxYArr[n4] = e4.niceMax;
          })) : (this.scales.setYScaleForIndex(0, t4.minY, t4.maxY), t4.minY = t4.yAxisScale[0].niceMin, t4.maxY = t4.yAxisScale[0].niceMax, t4.minYArr[0] = t4.yAxisScale[0].niceMin, t4.maxYArr[0] = t4.yAxisScale[0].niceMax), { minY: t4.minY, maxY: t4.maxY, minYArr: t4.minYArr, maxYArr: t4.maxYArr, yAxisScale: t4.yAxisScale };
        } }, { key: "setXRange", value: function() {
          var t4 = this.w.globals, e3 = this.w.config, n3 = e3.xaxis.type === "numeric" || e3.xaxis.type === "datetime" || e3.xaxis.type === "category" && !t4.noLabelsProvided || t4.noLabelsProvided || t4.isXNumeric;
          if (t4.isXNumeric && function() {
            for (var e4 = 0; e4 < t4.series.length; e4++)
              if (t4.labels[e4])
                for (var n4 = 0; n4 < t4.labels[e4].length; n4++)
                  t4.labels[e4][n4] !== null && b.isNumber(t4.labels[e4][n4]) && (t4.maxX = Math.max(t4.maxX, t4.labels[e4][n4]), t4.initialMaxX = Math.max(t4.maxX, t4.labels[e4][n4]), t4.minX = Math.min(t4.minX, t4.labels[e4][n4]), t4.initialMinX = Math.min(t4.minX, t4.labels[e4][n4]));
          }(), t4.noLabelsProvided && e3.xaxis.categories.length === 0 && (t4.maxX = t4.labels[t4.labels.length - 1], t4.initialMaxX = t4.labels[t4.labels.length - 1], t4.minX = 1, t4.initialMinX = 1), t4.isXNumeric || t4.noLabelsProvided || t4.dataFormatXNumeric) {
            var i2;
            if (e3.xaxis.tickAmount === void 0 ? (i2 = Math.round(t4.svgWidth / 150), e3.xaxis.type === "numeric" && t4.dataPoints < 30 && (i2 = t4.dataPoints - 1), i2 > t4.dataPoints && t4.dataPoints !== 0 && (i2 = t4.dataPoints - 1)) : e3.xaxis.tickAmount === "dataPoints" ? (t4.series.length > 1 && (i2 = t4.series[t4.maxValsInArrayIndex].length - 1), t4.isXNumeric && (i2 = t4.maxX - t4.minX - 1)) : i2 = e3.xaxis.tickAmount, t4.xTickAmount = i2, e3.xaxis.max !== void 0 && typeof e3.xaxis.max == "number" && (t4.maxX = e3.xaxis.max), e3.xaxis.min !== void 0 && typeof e3.xaxis.min == "number" && (t4.minX = e3.xaxis.min), e3.xaxis.range !== void 0 && (t4.minX = t4.maxX - e3.xaxis.range), t4.minX !== Number.MAX_VALUE && t4.maxX !== -Number.MAX_VALUE)
              if (e3.xaxis.convertedCatToNumeric && !t4.dataFormatXNumeric) {
                for (var a2 = [], r2 = t4.minX - 1; r2 < t4.maxX; r2++)
                  a2.push(r2 + 1);
                t4.xAxisScale = { result: a2, niceMin: a2[0], niceMax: a2[a2.length - 1] };
              } else
                t4.xAxisScale = this.scales.setXScale(t4.minX, t4.maxX);
            else
              t4.xAxisScale = this.scales.linearScale(1, i2, i2), t4.noLabelsProvided && t4.labels.length > 0 && (t4.xAxisScale = this.scales.linearScale(1, t4.labels.length, i2 - 1), t4.seriesX = t4.labels.slice());
            n3 && (t4.labels = t4.xAxisScale.result.slice());
          }
          return t4.isBarHorizontal && t4.labels.length && (t4.xTickAmount = t4.labels.length), this._handleSingleDataPoint(), this._getMinXDiff(), { minX: t4.minX, maxX: t4.maxX };
        } }, { key: "setZRange", value: function() {
          var t4 = this.w.globals;
          if (t4.isDataXYZ) {
            for (var e3 = 0; e3 < t4.series.length; e3++)
              if (t4.seriesZ[e3] !== void 0)
                for (var n3 = 0; n3 < t4.seriesZ[e3].length; n3++)
                  t4.seriesZ[e3][n3] !== null && b.isNumber(t4.seriesZ[e3][n3]) && (t4.maxZ = Math.max(t4.maxZ, t4.seriesZ[e3][n3]), t4.minZ = Math.min(t4.minZ, t4.seriesZ[e3][n3]));
          }
        } }, { key: "_handleSingleDataPoint", value: function() {
          var t4 = this.w.globals, e3 = this.w.config;
          if (t4.minX === t4.maxX) {
            var n3 = new F(this.ctx);
            if (e3.xaxis.type === "datetime") {
              var i2 = n3.getDate(t4.minX);
              i2.setUTCDate(i2.getDate() - 2), t4.minX = new Date(i2).getTime();
              var a2 = n3.getDate(t4.maxX);
              a2.setUTCDate(a2.getDate() + 2), t4.maxX = new Date(a2).getTime();
            } else
              (e3.xaxis.type === "numeric" || e3.xaxis.type === "category" && !t4.noLabelsProvided) && (t4.minX = t4.minX - 2, t4.initialMinX = t4.minX, t4.maxX = t4.maxX + 2, t4.initialMaxX = t4.maxX);
          }
        } }, { key: "_getMinXDiff", value: function() {
          var t4 = this.w.globals;
          t4.isXNumeric && t4.seriesX.forEach(function(e3, n3) {
            e3.length === 1 && e3.push(t4.seriesX[t4.maxValsInArrayIndex][t4.seriesX[t4.maxValsInArrayIndex].length - 1]);
            var i2 = e3.slice();
            i2.sort(function(t5, e4) {
              return t5 - e4;
            }), i2.forEach(function(e4, n4) {
              if (n4 > 0) {
                var a2 = e4 - i2[n4 - 1];
                a2 > 0 && (t4.minXDiff = Math.min(a2, t4.minXDiff));
              }
            }), t4.dataPoints === 1 && t4.minXDiff === Number.MAX_VALUE && (t4.minXDiff = 0.5);
          });
        } }, { key: "_setStackedMinMax", value: function() {
          var t4 = this.w.globals, e3 = [], n3 = [];
          if (t4.series.length)
            for (var i2 = 0; i2 < t4.series[t4.maxValsInArrayIndex].length; i2++)
              for (var a2 = 0, r2 = 0, o2 = 0; o2 < t4.series.length; o2++)
                t4.series[o2][i2] !== null && b.isNumber(t4.series[o2][i2]) && (t4.series[o2][i2] > 0 ? a2 = a2 + parseFloat(t4.series[o2][i2]) + 1e-4 : r2 += parseFloat(t4.series[o2][i2])), o2 === t4.series.length - 1 && (e3.push(a2), n3.push(r2));
          for (var s2 = 0; s2 < e3.length; s2++)
            t4.maxY = Math.max(t4.maxY, e3[s2]), t4.minY = Math.min(t4.minY, n3[s2]);
        } }]), t3;
      }(), Q = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
          var n3 = this.w;
          this.xaxisFontSize = n3.config.xaxis.labels.style.fontSize, this.axisFontFamily = n3.config.xaxis.labels.style.fontFamily, this.xaxisForeColors = n3.config.xaxis.labels.style.colors, this.isCategoryBarHorizontal = n3.config.chart.type === "bar" && n3.config.plotOptions.bar.horizontal, this.xAxisoffX = 0, n3.config.xaxis.position === "bottom" && (this.xAxisoffX = n3.globals.gridHeight), this.drawnLabels = [], this.axesUtils = new Y(e3);
        }
        return s(t3, [{ key: "drawYaxis", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = new _(this.ctx), a2 = n3.config.yaxis[t4].labels.style, r2 = a2.fontSize, o2 = a2.fontFamily, s2 = a2.fontWeight, l2 = i2.group({ class: "apexcharts-yaxis", rel: t4, transform: "translate(" + n3.globals.translateYAxisX[t4] + ", 0)" });
          if (this.axesUtils.isYAxisHidden(t4))
            return l2;
          var c2 = i2.group({ class: "apexcharts-yaxis-texts-g" });
          l2.add(c2);
          var d2 = n3.globals.yAxisScale[t4].result.length - 1, u2 = n3.globals.gridHeight / d2, h2 = n3.globals.translateY, p2 = n3.globals.yLabelFormatters[t4], f2 = n3.globals.yAxisScale[t4].result.slice();
          f2 = this.axesUtils.checkForReversedLabels(t4, f2);
          var g2 = "";
          if (n3.config.yaxis[t4].labels.show)
            for (var m2 = function(l3) {
              var m3 = f2[l3];
              m3 = p2(m3, l3, n3);
              var v3 = n3.config.yaxis[t4].labels.padding;
              n3.config.yaxis[t4].opposite && n3.config.yaxis.length !== 0 && (v3 *= -1);
              var b3 = e3.axesUtils.getYAxisForeColor(a2.colors, t4), y3 = i2.drawText({ x: v3, y: h2 + d2 / 10 + n3.config.yaxis[t4].labels.offsetY + 1, text: m3, textAnchor: n3.config.yaxis[t4].opposite ? "start" : "end", fontSize: r2, fontFamily: o2, fontWeight: s2, foreColor: Array.isArray(b3) ? b3[l3] : b3, isPlainText: false, cssClass: "apexcharts-yaxis-label " + a2.cssClass });
              l3 === d2 && (g2 = y3), c2.add(y3);
              var x3 = document.createElementNS(n3.globals.SVGNS, "title");
              if (x3.textContent = Array.isArray(m3) ? m3.join(" ") : m3, y3.node.appendChild(x3), n3.config.yaxis[t4].labels.rotate !== 0) {
                var _2 = i2.rotateAroundCenter(g2.node), w3 = i2.rotateAroundCenter(y3.node);
                y3.node.setAttribute("transform", "rotate(".concat(n3.config.yaxis[t4].labels.rotate, " ").concat(_2.x, " ").concat(w3.y, ")"));
              }
              h2 += u2;
            }, v2 = d2; v2 >= 0; v2--)
              m2(v2);
          if (n3.config.yaxis[t4].title.text !== void 0) {
            var b2 = i2.group({ class: "apexcharts-yaxis-title" }), y2 = 0;
            n3.config.yaxis[t4].opposite && (y2 = n3.globals.translateYAxisX[t4]);
            var x2 = i2.drawText({ x: y2, y: n3.globals.gridHeight / 2 + n3.globals.translateY + n3.config.yaxis[t4].title.offsetY, text: n3.config.yaxis[t4].title.text, textAnchor: "end", foreColor: n3.config.yaxis[t4].title.style.color, fontSize: n3.config.yaxis[t4].title.style.fontSize, fontWeight: n3.config.yaxis[t4].title.style.fontWeight, fontFamily: n3.config.yaxis[t4].title.style.fontFamily, cssClass: "apexcharts-yaxis-title-text " + n3.config.yaxis[t4].title.style.cssClass });
            b2.add(x2), l2.add(b2);
          }
          var w2 = n3.config.yaxis[t4].axisBorder, S2 = 31 + w2.offsetX;
          if (n3.config.yaxis[t4].opposite && (S2 = -31 - w2.offsetX), w2.show) {
            var C2 = i2.drawLine(S2, n3.globals.translateY + w2.offsetY - 2, S2, n3.globals.gridHeight + n3.globals.translateY + w2.offsetY + 2, w2.color, 0, w2.width);
            l2.add(C2);
          }
          return n3.config.yaxis[t4].axisTicks.show && this.axesUtils.drawYAxisTicks(S2, d2, w2, n3.config.yaxis[t4].axisTicks, t4, u2, l2), l2;
        } }, { key: "drawYaxisInversed", value: function(t4) {
          var e3 = this.w, n3 = new _(this.ctx), i2 = n3.group({ class: "apexcharts-xaxis apexcharts-yaxis-inversed" }), a2 = n3.group({ class: "apexcharts-xaxis-texts-g", transform: "translate(".concat(e3.globals.translateXAxisX, ", ").concat(e3.globals.translateXAxisY, ")") });
          i2.add(a2);
          var r2 = e3.globals.yAxisScale[t4].result.length - 1, o2 = e3.globals.gridWidth / r2 + 0.1, s2 = o2 + e3.config.xaxis.labels.offsetX, l2 = e3.globals.xLabelFormatter, c2 = e3.globals.yAxisScale[t4].result.slice(), d2 = e3.globals.timescaleLabels;
          d2.length > 0 && (this.xaxisLabels = d2.slice(), r2 = (c2 = d2.slice()).length), c2 = this.axesUtils.checkForReversedLabels(t4, c2);
          var u2 = d2.length;
          if (e3.config.xaxis.labels.show)
            for (var h2 = u2 ? 0 : r2; u2 ? h2 < u2 : h2 >= 0; u2 ? h2++ : h2--) {
              var p2 = c2[h2];
              p2 = l2(p2, h2, e3);
              var f2 = e3.globals.gridWidth + e3.globals.padHorizontal - (s2 - o2 + e3.config.xaxis.labels.offsetX);
              if (d2.length) {
                var g2 = this.axesUtils.getLabel(c2, d2, f2, h2, this.drawnLabels, this.xaxisFontSize);
                f2 = g2.x, p2 = g2.text, this.drawnLabels.push(g2.text), h2 === 0 && e3.globals.skipFirstTimelinelabel && (p2 = ""), h2 === c2.length - 1 && e3.globals.skipLastTimelinelabel && (p2 = "");
              }
              var m2 = n3.drawText({ x: f2, y: this.xAxisoffX + e3.config.xaxis.labels.offsetY + 30 - (e3.config.xaxis.position === "top" ? e3.globals.xAxisHeight + e3.config.xaxis.axisTicks.height - 2 : 0), text: p2, textAnchor: "middle", foreColor: Array.isArray(this.xaxisForeColors) ? this.xaxisForeColors[t4] : this.xaxisForeColors, fontSize: this.xaxisFontSize, fontFamily: this.xaxisFontFamily, fontWeight: e3.config.xaxis.labels.style.fontWeight, isPlainText: false, cssClass: "apexcharts-xaxis-label " + e3.config.xaxis.labels.style.cssClass });
              a2.add(m2), m2.tspan(p2);
              var v2 = document.createElementNS(e3.globals.SVGNS, "title");
              v2.textContent = p2, m2.node.appendChild(v2), s2 += o2;
            }
          return this.inversedYAxisTitleText(i2), this.inversedYAxisBorder(i2), i2;
        } }, { key: "inversedYAxisBorder", value: function(t4) {
          var e3 = this.w, n3 = new _(this.ctx), i2 = e3.config.xaxis.axisBorder;
          if (i2.show) {
            var a2 = 0;
            e3.config.chart.type === "bar" && e3.globals.isXNumeric && (a2 -= 15);
            var r2 = n3.drawLine(e3.globals.padHorizontal + a2 + i2.offsetX, this.xAxisoffX, e3.globals.gridWidth, this.xAxisoffX, i2.color, 0, i2.height);
            t4.add(r2);
          }
        } }, { key: "inversedYAxisTitleText", value: function(t4) {
          var e3 = this.w, n3 = new _(this.ctx);
          if (e3.config.xaxis.title.text !== void 0) {
            var i2 = n3.group({ class: "apexcharts-xaxis-title apexcharts-yaxis-title-inversed" }), a2 = n3.drawText({ x: e3.globals.gridWidth / 2 + e3.config.xaxis.title.offsetX, y: this.xAxisoffX + parseFloat(this.xaxisFontSize) + parseFloat(e3.config.xaxis.title.style.fontSize) + e3.config.xaxis.title.offsetY + 20, text: e3.config.xaxis.title.text, textAnchor: "middle", fontSize: e3.config.xaxis.title.style.fontSize, fontFamily: e3.config.xaxis.title.style.fontFamily, fontWeight: e3.config.xaxis.title.style.fontWeight, foreColor: e3.config.xaxis.title.style.color, cssClass: "apexcharts-xaxis-title-text " + e3.config.xaxis.title.style.cssClass });
            i2.add(a2), t4.add(i2);
          }
        } }, { key: "yAxisTitleRotate", value: function(t4, e3) {
          var n3 = this.w, i2 = new _(this.ctx), a2 = { width: 0, height: 0 }, r2 = { width: 0, height: 0 }, o2 = n3.globals.dom.baseEl.querySelector(" .apexcharts-yaxis[rel='".concat(t4, "'] .apexcharts-yaxis-texts-g"));
          o2 !== null && (a2 = o2.getBoundingClientRect());
          var s2 = n3.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(t4, "'] .apexcharts-yaxis-title text"));
          if (s2 !== null && (r2 = s2.getBoundingClientRect()), s2 !== null) {
            var l2 = this.xPaddingForYAxisTitle(t4, a2, r2, e3);
            s2.setAttribute("x", l2.xPos - (e3 ? 10 : 0));
          }
          if (s2 !== null) {
            var c2 = i2.rotateAroundCenter(s2);
            s2.setAttribute("transform", "rotate(".concat(e3 ? -1 * n3.config.yaxis[t4].title.rotate : n3.config.yaxis[t4].title.rotate, " ").concat(c2.x, " ").concat(c2.y, ")"));
          }
        } }, { key: "xPaddingForYAxisTitle", value: function(t4, e3, n3, i2) {
          var a2 = this.w, r2 = 0, o2 = 0, s2 = 10;
          return a2.config.yaxis[t4].title.text === void 0 || t4 < 0 ? { xPos: o2, padd: 0 } : (i2 ? (o2 = e3.width + a2.config.yaxis[t4].title.offsetX + n3.width / 2 + s2 / 2, (r2 += 1) === 0 && (o2 -= s2 / 2)) : (o2 = -1 * e3.width + a2.config.yaxis[t4].title.offsetX + s2 / 2 + n3.width / 2, a2.globals.isBarHorizontal && (s2 = 25, o2 = -1 * e3.width - a2.config.yaxis[t4].title.offsetX - s2)), { xPos: o2, padd: s2 });
        } }, { key: "setYAxisXPosition", value: function(t4, e3) {
          var n3 = this.w, i2 = 0, a2 = 0, r2 = 18, o2 = 1;
          n3.config.yaxis.length > 1 && (this.multipleYs = true), n3.config.yaxis.map(function(s2, l2) {
            var c2 = n3.globals.ignoreYAxisIndexes.indexOf(l2) > -1 || !s2.show || s2.floating || t4[l2].width === 0, d2 = t4[l2].width + e3[l2].width;
            s2.opposite ? n3.globals.isBarHorizontal ? (a2 = n3.globals.gridWidth + n3.globals.translateX - 1, n3.globals.translateYAxisX[l2] = a2 - s2.labels.offsetX) : (a2 = n3.globals.gridWidth + n3.globals.translateX + o2, c2 || (o2 = o2 + d2 + 20), n3.globals.translateYAxisX[l2] = a2 - s2.labels.offsetX + 20) : (i2 = n3.globals.translateX - r2, c2 || (r2 = r2 + d2 + 20), n3.globals.translateYAxisX[l2] = i2 + s2.labels.offsetX);
          });
        } }, { key: "setYAxisTextAlignments", value: function() {
          var t4 = this.w, e3 = t4.globals.dom.baseEl.getElementsByClassName("apexcharts-yaxis");
          (e3 = b.listToArray(e3)).forEach(function(e4, n3) {
            var i2 = t4.config.yaxis[n3];
            if (i2 && i2.labels.align !== void 0) {
              var a2 = t4.globals.dom.baseEl.querySelector(".apexcharts-yaxis[rel='".concat(n3, "'] .apexcharts-yaxis-texts-g")), r2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxis[rel='".concat(n3, "'] .apexcharts-yaxis-label"));
              r2 = b.listToArray(r2);
              var o2 = a2.getBoundingClientRect();
              i2.labels.align === "left" ? (r2.forEach(function(t5, e5) {
                t5.setAttribute("text-anchor", "start");
              }), i2.opposite || a2.setAttribute("transform", "translate(-".concat(o2.width, ", 0)"))) : i2.labels.align === "center" ? (r2.forEach(function(t5, e5) {
                t5.setAttribute("text-anchor", "middle");
              }), a2.setAttribute("transform", "translate(".concat(o2.width / 2 * (i2.opposite ? 1 : -1), ", 0)"))) : i2.labels.align === "right" && (r2.forEach(function(t5, e5) {
                t5.setAttribute("text-anchor", "end");
              }), i2.opposite && a2.setAttribute("transform", "translate(".concat(o2.width, ", 0)")));
            }
          });
        } }]), t3;
      }(), J = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.documentEvent = b.bind(this.documentEvent, this);
        }
        return s(t3, [{ key: "addEventListener", value: function(t4, e3) {
          var n3 = this.w;
          n3.globals.events.hasOwnProperty(t4) ? n3.globals.events[t4].push(e3) : n3.globals.events[t4] = [e3];
        } }, { key: "removeEventListener", value: function(t4, e3) {
          var n3 = this.w;
          if (n3.globals.events.hasOwnProperty(t4)) {
            var i2 = n3.globals.events[t4].indexOf(e3);
            i2 !== -1 && n3.globals.events[t4].splice(i2, 1);
          }
        } }, { key: "fireEvent", value: function(t4, e3) {
          var n3 = this.w;
          if (n3.globals.events.hasOwnProperty(t4)) {
            e3 && e3.length || (e3 = []);
            for (var i2 = n3.globals.events[t4], a2 = i2.length, r2 = 0; r2 < a2; r2++)
              i2[r2].apply(null, e3);
          }
        } }, { key: "setupEventHandlers", value: function() {
          var t4 = this, e3 = this.w, n3 = this.ctx, i2 = e3.globals.dom.baseEl.querySelector(e3.globals.chartClass);
          this.ctx.eventList.forEach(function(t5) {
            i2.addEventListener(t5, function(t6) {
              var i3 = Object.assign({}, e3, { seriesIndex: e3.globals.capturedSeriesIndex, dataPointIndex: e3.globals.capturedDataPointIndex });
              t6.type === "mousemove" || t6.type === "touchmove" ? typeof e3.config.chart.events.mouseMove == "function" && e3.config.chart.events.mouseMove(t6, n3, i3) : t6.type === "mouseleave" || t6.type === "touchleave" ? typeof e3.config.chart.events.mouseLeave == "function" && e3.config.chart.events.mouseLeave(t6, n3, i3) : (t6.type === "mouseup" && t6.which === 1 || t6.type === "touchend") && (typeof e3.config.chart.events.click == "function" && e3.config.chart.events.click(t6, n3, i3), n3.ctx.events.fireEvent("click", [t6, n3, i3]));
            }, { capture: false, passive: true });
          }), this.ctx.eventList.forEach(function(n4) {
            e3.globals.dom.baseEl.addEventListener(n4, t4.documentEvent, { passive: true });
          }), this.ctx.core.setupBrushHandler();
        } }, { key: "documentEvent", value: function(t4) {
          var e3 = this.w, n3 = t4.target.className;
          if (t4.type === "click") {
            var i2 = e3.globals.dom.baseEl.querySelector(".apexcharts-menu");
            i2 && i2.classList.contains("apexcharts-menu-open") && n3 !== "apexcharts-menu-icon" && i2.classList.remove("apexcharts-menu-open");
          }
          e3.globals.clientX = t4.type === "touchmove" ? t4.touches[0].clientX : t4.clientX, e3.globals.clientY = t4.type === "touchmove" ? t4.touches[0].clientY : t4.clientY;
        } }]), t3;
      }(), tt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "setCurrentLocaleValues", value: function(t4) {
          var e3 = this.w.config.chart.locales;
          window.Apex.chart && window.Apex.chart.locales && window.Apex.chart.locales.length > 0 && (e3 = this.w.config.chart.locales.concat(window.Apex.chart.locales));
          var n3 = e3.filter(function(e4) {
            return e4.name === t4;
          })[0];
          if (!n3)
            throw new Error("Wrong locale name provided. Please make sure you set the correct locale name in options");
          var i2 = b.extend(T, n3);
          this.w.globals.locale = i2.options;
        } }]), t3;
      }(), et = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "drawAxis", value: function(t4, e3) {
          var n3, i2, a2 = this.w.globals, r2 = this.w.config, o2 = new G(this.ctx), s2 = new Q(this.ctx);
          a2.axisCharts && t4 !== "radar" && (a2.isBarHorizontal ? (i2 = s2.drawYaxisInversed(0), n3 = o2.drawXaxisInversed(0), a2.dom.elGraphical.add(n3), a2.dom.elGraphical.add(i2)) : (n3 = o2.drawXaxis(), a2.dom.elGraphical.add(n3), r2.yaxis.map(function(t5, e4) {
            a2.ignoreYAxisIndexes.indexOf(e4) === -1 && (i2 = s2.drawYaxis(e4), a2.dom.Paper.add(i2));
          })));
        } }]), t3;
      }(), nt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "drawXCrosshairs", value: function() {
          var t4 = this.w, e3 = new _(this.ctx), n3 = new x(this.ctx), i2 = t4.config.xaxis.crosshairs.fill.gradient, a2 = t4.config.xaxis.crosshairs.dropShadow, r2 = t4.config.xaxis.crosshairs.fill.type, o2 = i2.colorFrom, s2 = i2.colorTo, l2 = i2.opacityFrom, c2 = i2.opacityTo, d2 = i2.stops, u2 = a2.enabled, h2 = a2.left, p2 = a2.top, f2 = a2.blur, g2 = a2.color, m2 = a2.opacity, v2 = t4.config.xaxis.crosshairs.fill.color;
          if (t4.config.xaxis.crosshairs.show) {
            r2 === "gradient" && (v2 = e3.drawGradient("vertical", o2, s2, l2, c2, null, d2, null));
            var y2 = e3.drawRect();
            t4.config.xaxis.crosshairs.width === 1 && (y2 = e3.drawLine());
            var w2 = t4.globals.gridHeight;
            (!b.isNumber(w2) || w2 < 0) && (w2 = 0);
            var S2 = t4.config.xaxis.crosshairs.width;
            (!b.isNumber(S2) || S2 < 0) && (S2 = 0), y2.attr({ class: "apexcharts-xcrosshairs", x: 0, y: 0, y2: w2, width: S2, height: w2, fill: v2, filter: "none", "fill-opacity": t4.config.xaxis.crosshairs.opacity, stroke: t4.config.xaxis.crosshairs.stroke.color, "stroke-width": t4.config.xaxis.crosshairs.stroke.width, "stroke-dasharray": t4.config.xaxis.crosshairs.stroke.dashArray }), u2 && (y2 = n3.dropShadow(y2, { left: h2, top: p2, blur: f2, color: g2, opacity: m2 })), t4.globals.dom.elGraphical.add(y2);
          }
        } }, { key: "drawYCrosshairs", value: function() {
          var t4 = this.w, e3 = new _(this.ctx), n3 = t4.config.yaxis[0].crosshairs, i2 = t4.globals.barPadForNumericAxis;
          if (t4.config.yaxis[0].crosshairs.show) {
            var a2 = e3.drawLine(-i2, 0, t4.globals.gridWidth + i2, 0, n3.stroke.color, n3.stroke.dashArray, n3.stroke.width);
            a2.attr({ class: "apexcharts-ycrosshairs" }), t4.globals.dom.elGraphical.add(a2);
          }
          var r2 = e3.drawLine(-i2, 0, t4.globals.gridWidth + i2, 0, n3.stroke.color, 0, 0);
          r2.attr({ class: "apexcharts-ycrosshairs-hidden" }), t4.globals.dom.elGraphical.add(r2);
        } }]), t3;
      }(), it = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "checkResponsiveConfig", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = n3.config;
          if (i2.responsive.length !== 0) {
            var a2 = i2.responsive.slice();
            a2.sort(function(t5, e4) {
              return t5.breakpoint > e4.breakpoint ? 1 : e4.breakpoint > t5.breakpoint ? -1 : 0;
            }).reverse();
            var r2 = new q({}), o2 = function() {
              var t5 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, i3 = a2[0].breakpoint, o3 = window.innerWidth > 0 ? window.innerWidth : screen.width;
              if (o3 > i3) {
                var s3 = C.extendArrayProps(r2, n3.globals.initialConfig, n3);
                t5 = b.extend(s3, t5), t5 = b.extend(n3.config, t5), e3.overrideResponsiveOptions(t5);
              } else
                for (var l2 = 0; l2 < a2.length; l2++)
                  o3 < a2[l2].breakpoint && (t5 = C.extendArrayProps(r2, a2[l2].options, n3), t5 = b.extend(n3.config, t5), e3.overrideResponsiveOptions(t5));
            };
            if (t4) {
              var s2 = C.extendArrayProps(r2, t4, n3);
              s2 = b.extend(n3.config, s2), o2(s2 = b.extend(s2, t4));
            } else
              o2({});
          }
        } }, { key: "overrideResponsiveOptions", value: function(t4) {
          var e3 = new q(t4).init({ responsiveOverride: true });
          this.w.config = e3;
        } }]), t3;
      }(), at = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.colors = [], this.w = e3.w;
          var n3 = this.w;
          this.isColorFn = false, this.isHeatmapDistributed = n3.config.chart.type === "treemap" && n3.config.plotOptions.treemap.distributed || n3.config.chart.type === "heatmap" && n3.config.plotOptions.heatmap.distributed, this.isBarDistributed = n3.config.plotOptions.bar.distributed && (n3.config.chart.type === "bar" || n3.config.chart.type === "rangeBar");
        }
        return s(t3, [{ key: "init", value: function() {
          this.setDefaultColors();
        } }, { key: "setDefaultColors", value: function() {
          var t4 = this, e3 = this.w, n3 = new b();
          if (e3.globals.dom.elWrap.classList.add("apexcharts-theme-".concat(e3.config.theme.mode)), e3.config.colors === void 0 ? e3.globals.colors = this.predefined() : (e3.globals.colors = e3.config.colors, Array.isArray(e3.config.colors) && e3.config.colors.length > 0 && typeof e3.config.colors[0] == "function" && (e3.globals.colors = e3.config.series.map(function(n4, i3) {
            var a3 = e3.config.colors[i3];
            return a3 || (a3 = e3.config.colors[0]), typeof a3 == "function" ? (t4.isColorFn = true, a3({ value: e3.globals.axisCharts ? e3.globals.series[i3][0] ? e3.globals.series[i3][0] : 0 : e3.globals.series[i3], seriesIndex: i3, dataPointIndex: i3, w: e3 })) : a3;
          }))), e3.globals.seriesColors.map(function(t5, n4) {
            t5 && (e3.globals.colors[n4] = t5);
          }), e3.config.theme.monochrome.enabled) {
            var i2 = [], a2 = e3.globals.series.length;
            (this.isBarDistributed || this.isHeatmapDistributed) && (a2 = e3.globals.series[0].length * e3.globals.series.length);
            for (var r2 = e3.config.theme.monochrome.color, o2 = 1 / (a2 / e3.config.theme.monochrome.shadeIntensity), s2 = e3.config.theme.monochrome.shadeTo, l2 = 0, c2 = 0; c2 < a2; c2++) {
              var d2 = void 0;
              s2 === "dark" ? (d2 = n3.shadeColor(-1 * l2, r2), l2 += o2) : (d2 = n3.shadeColor(l2, r2), l2 += o2), i2.push(d2);
            }
            e3.globals.colors = i2.slice();
          }
          var u2 = e3.globals.colors.slice();
          this.pushExtraColors(e3.globals.colors), ["fill", "stroke"].forEach(function(n4) {
            e3.config[n4].colors === void 0 ? e3.globals[n4].colors = t4.isColorFn ? e3.config.colors : u2 : e3.globals[n4].colors = e3.config[n4].colors.slice(), t4.pushExtraColors(e3.globals[n4].colors);
          }), e3.config.dataLabels.style.colors === void 0 ? e3.globals.dataLabels.style.colors = u2 : e3.globals.dataLabels.style.colors = e3.config.dataLabels.style.colors.slice(), this.pushExtraColors(e3.globals.dataLabels.style.colors, 50), e3.config.plotOptions.radar.polygons.fill.colors === void 0 ? e3.globals.radarPolygons.fill.colors = [e3.config.theme.mode === "dark" ? "#424242" : "none"] : e3.globals.radarPolygons.fill.colors = e3.config.plotOptions.radar.polygons.fill.colors.slice(), this.pushExtraColors(e3.globals.radarPolygons.fill.colors, 20), e3.config.markers.colors === void 0 ? e3.globals.markers.colors = u2 : e3.globals.markers.colors = e3.config.markers.colors.slice(), this.pushExtraColors(e3.globals.markers.colors);
        } }, { key: "pushExtraColors", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, i2 = this.w, a2 = e3 || i2.globals.series.length;
          if (n3 === null && (n3 = this.isBarDistributed || this.isHeatmapDistributed || i2.config.chart.type === "heatmap" && i2.config.plotOptions.heatmap.colorScale.inverse), n3 && i2.globals.series.length && (a2 = i2.globals.series[i2.globals.maxValsInArrayIndex].length * i2.globals.series.length), t4.length < a2)
            for (var r2 = a2 - t4.length, o2 = 0; o2 < r2; o2++)
              t4.push(t4[o2]);
        } }, { key: "updateThemeOptions", value: function(t4) {
          t4.chart = t4.chart || {}, t4.tooltip = t4.tooltip || {};
          var e3 = t4.theme.mode || "light", n3 = t4.theme.palette ? t4.theme.palette : e3 === "dark" ? "palette4" : "palette1", i2 = t4.chart.foreColor ? t4.chart.foreColor : e3 === "dark" ? "#f6f7f8" : "#373d3f";
          return t4.tooltip.theme = e3, t4.chart.foreColor = i2, t4.theme.palette = n3, t4;
        } }, { key: "predefined", value: function() {
          switch (this.w.config.theme.palette) {
            default:
              this.colors = ["#008FFB", "#00E396", "#FEB019", "#FF4560", "#775DD0"];
              break;
            case "palette2":
              this.colors = ["#3f51b5", "#03a9f4", "#4caf50", "#f9ce1d", "#FF9800"];
              break;
            case "palette3":
              this.colors = ["#33b2df", "#546E7A", "#d4526e", "#13d8aa", "#A5978B"];
              break;
            case "palette4":
              this.colors = ["#4ecdc4", "#c7f464", "#81D4FA", "#fd6a6a", "#546E7A"];
              break;
            case "palette5":
              this.colors = ["#2b908f", "#f9a3a4", "#90ee7e", "#fa4443", "#69d2e7"];
              break;
            case "palette6":
              this.colors = ["#449DD1", "#F86624", "#EA3546", "#662E9B", "#C5D86D"];
              break;
            case "palette7":
              this.colors = ["#D7263D", "#1B998B", "#2E294E", "#F46036", "#E2C044"];
              break;
            case "palette8":
              this.colors = ["#662E9B", "#F86624", "#F9C80E", "#EA3546", "#43BCCD"];
              break;
            case "palette9":
              this.colors = ["#5C4742", "#A5978B", "#8D5B4C", "#5A2A27", "#C4BBAF"];
              break;
            case "palette10":
              this.colors = ["#A300D6", "#7D02EB", "#5653FE", "#2983FF", "#00B1F2"];
          }
          return this.colors;
        } }]), t3;
      }(), rt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "draw", value: function() {
          this.drawTitleSubtitle("title"), this.drawTitleSubtitle("subtitle");
        } }, { key: "drawTitleSubtitle", value: function(t4) {
          var e3 = this.w, n3 = t4 === "title" ? e3.config.title : e3.config.subtitle, i2 = e3.globals.svgWidth / 2, a2 = n3.offsetY, r2 = "middle";
          if (n3.align === "left" ? (i2 = 10, r2 = "start") : n3.align === "right" && (i2 = e3.globals.svgWidth - 10, r2 = "end"), i2 += n3.offsetX, a2 = a2 + parseInt(n3.style.fontSize, 10) + n3.margin / 2, n3.text !== void 0) {
            var o2 = new _(this.ctx).drawText({ x: i2, y: a2, text: n3.text, textAnchor: r2, fontSize: n3.style.fontSize, fontFamily: n3.style.fontFamily, fontWeight: n3.style.fontWeight, foreColor: n3.style.color, opacity: 1 });
            o2.node.setAttribute("class", "apexcharts-".concat(t4, "-text")), e3.globals.dom.Paper.add(o2);
          }
        } }]), t3;
      }(), ot = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.dCtx = e3;
        }
        return s(t3, [{ key: "getTitleSubtitleCoords", value: function(t4) {
          var e3 = this.w, n3 = 0, i2 = 0, a2 = t4 === "title" ? e3.config.title.floating : e3.config.subtitle.floating, r2 = e3.globals.dom.baseEl.querySelector(".apexcharts-".concat(t4, "-text"));
          if (r2 !== null && !a2) {
            var o2 = r2.getBoundingClientRect();
            n3 = o2.width, i2 = e3.globals.axisCharts ? o2.height + 5 : o2.height;
          }
          return { width: n3, height: i2 };
        } }, { key: "getLegendsRect", value: function() {
          var t4 = this.w, e3 = t4.globals.dom.baseEl.querySelector(".apexcharts-legend");
          t4.config.legend.height || t4.config.legend.position !== "top" && t4.config.legend.position !== "bottom" || (e3.style.maxHeight = t4.globals.svgHeight / 2 + "px");
          var n3 = Object.assign({}, b.getBoundingClientRect(e3));
          return e3 !== null && !t4.config.legend.floating && t4.config.legend.show ? this.dCtx.lgRect = { x: n3.x, y: n3.y, height: n3.height, width: n3.height === 0 ? 0 : n3.width } : this.dCtx.lgRect = { x: 0, y: 0, height: 0, width: 0 }, t4.config.legend.position !== "left" && t4.config.legend.position !== "right" || 1.5 * this.dCtx.lgRect.width > t4.globals.svgWidth && (this.dCtx.lgRect.width = t4.globals.svgWidth / 1.5), this.dCtx.lgRect;
        } }, { key: "getLargestStringFromMultiArr", value: function(t4, e3) {
          var n3 = t4;
          if (this.w.globals.isMultiLineX) {
            var i2 = e3.map(function(t5, e4) {
              return Array.isArray(t5) ? t5.length : 1;
            }), a2 = Math.max.apply(Math, m(i2));
            n3 = e3[i2.indexOf(a2)];
          }
          return n3;
        } }]), t3;
      }(), st = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.dCtx = e3;
        }
        return s(t3, [{ key: "getxAxisLabelsCoords", value: function() {
          var t4, e3 = this.w, n3 = e3.globals.labels.slice();
          if (e3.config.xaxis.convertedCatToNumeric && n3.length === 0 && (n3 = e3.globals.categoryLabels), e3.globals.timescaleLabels.length > 0) {
            var i2 = this.getxAxisTimeScaleLabelsCoords();
            t4 = { width: i2.width, height: i2.height }, e3.globals.rotateXLabels = false;
          } else {
            this.dCtx.lgWidthForSideLegends = e3.config.legend.position !== "left" && e3.config.legend.position !== "right" || e3.config.legend.floating ? 0 : this.dCtx.lgRect.width;
            var a2 = e3.globals.xLabelFormatter, r2 = b.getLargestStringFromArr(n3), o2 = this.dCtx.dimHelpers.getLargestStringFromMultiArr(r2, n3);
            e3.globals.isBarHorizontal && (o2 = r2 = e3.globals.yAxisScale[0].result.reduce(function(t5, e4) {
              return t5.length > e4.length ? t5 : e4;
            }, 0));
            var s2 = new V(this.dCtx.ctx), l2 = r2;
            r2 = s2.xLabelFormat(a2, r2, l2, { i: void 0, dateFormatter: new F(this.dCtx.ctx).formatDate, w: e3 }), o2 = s2.xLabelFormat(a2, o2, l2, { i: void 0, dateFormatter: new F(this.dCtx.ctx).formatDate, w: e3 }), (e3.config.xaxis.convertedCatToNumeric && r2 === void 0 || String(r2).trim() === "") && (o2 = r2 = "1");
            var c2 = new _(this.dCtx.ctx), d2 = c2.getTextRects(r2, e3.config.xaxis.labels.style.fontSize), u2 = d2;
            if (r2 !== o2 && (u2 = c2.getTextRects(o2, e3.config.xaxis.labels.style.fontSize)), (t4 = { width: d2.width >= u2.width ? d2.width : u2.width, height: d2.height >= u2.height ? d2.height : u2.height }).width * n3.length > e3.globals.svgWidth - this.dCtx.lgWidthForSideLegends - this.dCtx.yAxisWidth - this.dCtx.gridPad.left - this.dCtx.gridPad.right && e3.config.xaxis.labels.rotate !== 0 || e3.config.xaxis.labels.rotateAlways) {
              if (!e3.globals.isBarHorizontal) {
                e3.globals.rotateXLabels = true;
                var h2 = function(t5) {
                  return c2.getTextRects(t5, e3.config.xaxis.labels.style.fontSize, e3.config.xaxis.labels.style.fontFamily, "rotate(".concat(e3.config.xaxis.labels.rotate, " 0 0)"), false);
                };
                d2 = h2(r2), r2 !== o2 && (u2 = h2(o2)), t4.height = (d2.height > u2.height ? d2.height : u2.height) / 1.5, t4.width = d2.width > u2.width ? d2.width : u2.width;
              }
            } else
              e3.globals.rotateXLabels = false;
          }
          return e3.config.xaxis.labels.show || (t4 = { width: 0, height: 0 }), { width: t4.width, height: t4.height };
        } }, { key: "getxAxisTitleCoords", value: function() {
          var t4 = this.w, e3 = 0, n3 = 0;
          if (t4.config.xaxis.title.text !== void 0) {
            var i2 = new _(this.dCtx.ctx).getTextRects(t4.config.xaxis.title.text, t4.config.xaxis.title.style.fontSize);
            e3 = i2.width, n3 = i2.height;
          }
          return { width: e3, height: n3 };
        } }, { key: "getxAxisTimeScaleLabelsCoords", value: function() {
          var t4, e3 = this.w;
          this.dCtx.timescaleLabels = e3.globals.timescaleLabels.slice();
          var n3 = this.dCtx.timescaleLabels.map(function(t5) {
            return t5.value;
          }), i2 = n3.reduce(function(t5, e4) {
            return t5 === void 0 ? (console.error("You have possibly supplied invalid Date format. Please supply a valid JavaScript Date"), 0) : t5.length > e4.length ? t5 : e4;
          }, 0);
          return 1.05 * (t4 = new _(this.dCtx.ctx).getTextRects(i2, e3.config.xaxis.labels.style.fontSize)).width * n3.length > e3.globals.gridWidth && e3.config.xaxis.labels.rotate !== 0 && (e3.globals.overlappingXLabels = true), t4;
        } }, { key: "additionalPaddingXLabels", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = n3.globals, a2 = n3.config, r2 = a2.xaxis.type, o2 = t4.width;
          i2.skipLastTimelinelabel = false, i2.skipFirstTimelinelabel = false;
          var s2 = n3.config.yaxis[0].opposite && n3.globals.isBarHorizontal, l2 = function(t5, s3) {
            (function(t6) {
              return i2.collapsedSeriesIndices.indexOf(t6) !== -1;
            })(s3) || function(t6) {
              if (e3.dCtx.timescaleLabels && e3.dCtx.timescaleLabels.length) {
                var s4 = e3.dCtx.timescaleLabels[0], l3 = e3.dCtx.timescaleLabels[e3.dCtx.timescaleLabels.length - 1].position + o2 / 1.75 - e3.dCtx.yAxisWidthRight, c2 = s4.position - o2 / 1.75 + e3.dCtx.yAxisWidthLeft, d2 = n3.config.legend.position === "right" && e3.dCtx.lgRect.width > 0 ? e3.dCtx.lgRect.width : 0;
                l3 > i2.svgWidth - i2.translateX - d2 && (i2.skipLastTimelinelabel = true), c2 < -(t6.show && !t6.floating || a2.chart.type !== "bar" && a2.chart.type !== "candlestick" && a2.chart.type !== "rangeBar" && a2.chart.type !== "boxPlot" ? 10 : o2 / 1.75) && (i2.skipFirstTimelinelabel = true);
              } else
                r2 === "datetime" ? e3.dCtx.gridPad.right < o2 && !i2.rotateXLabels && (i2.skipLastTimelinelabel = true) : r2 !== "datetime" && e3.dCtx.gridPad.right < o2 / 2 - e3.dCtx.yAxisWidthRight && !i2.rotateXLabels && !n3.config.xaxis.labels.trim && (n3.config.xaxis.tickPlacement !== "between" || n3.globals.isBarHorizontal) && (e3.dCtx.xPadRight = o2 / 2 + 1);
            }(t5);
          };
          a2.yaxis.forEach(function(t5, n4) {
            s2 ? (e3.dCtx.gridPad.left < o2 && (e3.dCtx.xPadLeft = o2 / 2 + 1), e3.dCtx.xPadRight = o2 / 2 + 1) : l2(t5, n4);
          });
        } }]), t3;
      }(), lt = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.dCtx = e3;
        }
        return s(t3, [{ key: "getyAxisLabelsCoords", value: function() {
          var t4 = this, e3 = this.w, n3 = [], i2 = 10, a2 = new Y(this.dCtx.ctx);
          return e3.config.yaxis.map(function(r2, o2) {
            var s2 = e3.globals.yAxisScale[o2], l2 = 0;
            if (!a2.isYAxisHidden(o2) && r2.labels.show && r2.labels.minWidth !== void 0 && (l2 = r2.labels.minWidth), !a2.isYAxisHidden(o2) && r2.labels.show && s2.result.length) {
              var c2 = e3.globals.yLabelFormatters[o2], d2 = s2.niceMin === Number.MIN_VALUE ? 0 : s2.niceMin, u2 = String(d2).length > String(s2.niceMax).length ? d2 : s2.niceMax, h2 = c2(u2, { seriesIndex: o2, dataPointIndex: -1, w: e3 }), p2 = h2;
              if (h2 !== void 0 && h2.length !== 0 || (h2 = u2), e3.globals.isBarHorizontal) {
                i2 = 0;
                var f2 = e3.globals.labels.slice();
                h2 = c2(h2 = b.getLargestStringFromArr(f2), { seriesIndex: o2, dataPointIndex: -1, w: e3 }), p2 = t4.dCtx.dimHelpers.getLargestStringFromMultiArr(h2, f2);
              }
              var g2 = new _(t4.dCtx.ctx), m2 = "rotate(".concat(r2.labels.rotate, " 0 0)"), v2 = g2.getTextRects(h2, r2.labels.style.fontSize, r2.labels.style.fontFamily, m2, false), y2 = v2;
              h2 !== p2 && (y2 = g2.getTextRects(p2, r2.labels.style.fontSize, r2.labels.style.fontFamily, m2, false)), n3.push({ width: (l2 > y2.width || l2 > v2.width ? l2 : y2.width > v2.width ? y2.width : v2.width) + i2, height: y2.height > v2.height ? y2.height : v2.height });
            } else
              n3.push({ width: 0, height: 0 });
          }), n3;
        } }, { key: "getyAxisTitleCoords", value: function() {
          var t4 = this, e3 = this.w, n3 = [];
          return e3.config.yaxis.map(function(e4, i2) {
            if (e4.show && e4.title.text !== void 0) {
              var a2 = new _(t4.dCtx.ctx), r2 = "rotate(".concat(e4.title.rotate, " 0 0)"), o2 = a2.getTextRects(e4.title.text, e4.title.style.fontSize, e4.title.style.fontFamily, r2, false);
              n3.push({ width: o2.width, height: o2.height });
            } else
              n3.push({ width: 0, height: 0 });
          }), n3;
        } }, { key: "getTotalYAxisWidth", value: function() {
          var t4 = this.w, e3 = 0, n3 = 0, i2 = 0, a2 = t4.globals.yAxisScale.length > 1 ? 10 : 0, r2 = new Y(this.dCtx.ctx), o2 = function(o3, s2) {
            var l2 = t4.config.yaxis[s2].floating, c2 = 0;
            o3.width > 0 && !l2 ? (c2 = o3.width + a2, function(e4) {
              return t4.globals.ignoreYAxisIndexes.indexOf(e4) > -1;
            }(s2) && (c2 = c2 - o3.width - a2)) : c2 = l2 || r2.isYAxisHidden(s2) ? 0 : 5, t4.config.yaxis[s2].opposite ? i2 += c2 : n3 += c2, e3 += c2;
          };
          return t4.globals.yLabelsCoords.map(function(t5, e4) {
            o2(t5, e4);
          }), t4.globals.yTitleCoords.map(function(t5, e4) {
            o2(t5, e4);
          }), t4.globals.isBarHorizontal && !t4.config.yaxis[0].floating && (e3 = t4.globals.yLabelsCoords[0].width + t4.globals.yTitleCoords[0].width + 15), this.dCtx.yAxisWidthLeft = n3, this.dCtx.yAxisWidthRight = i2, e3;
        } }]), t3;
      }(), ct = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.dCtx = e3;
        }
        return s(t3, [{ key: "gridPadForColumnsInNumericAxis", value: function(t4) {
          var e3 = this.w;
          if (e3.globals.noData || e3.globals.allSeriesCollapsed)
            return 0;
          var n3 = function(t5) {
            return t5 === "bar" || t5 === "rangeBar" || t5 === "candlestick" || t5 === "boxPlot";
          }, i2 = e3.config.chart.type, a2 = 0, r2 = n3(i2) ? e3.config.series.length : 1;
          if (e3.globals.comboBarCount > 0 && (r2 = e3.globals.comboBarCount), e3.globals.collapsedSeries.forEach(function(t5) {
            n3(t5.type) && (r2 -= 1);
          }), e3.config.chart.stacked && (r2 = 1), (n3(i2) || e3.globals.comboBarCount > 0) && e3.globals.isXNumeric && !e3.globals.isBarHorizontal && r2 > 0) {
            var o2, s2, l2 = Math.abs(e3.globals.initialMaxX - e3.globals.initialMinX);
            l2 <= 3 && (l2 = e3.globals.dataPoints), o2 = l2 / t4, e3.globals.minXDiff && e3.globals.minXDiff / o2 > 0 && (s2 = e3.globals.minXDiff / o2), s2 > t4 / 2 && (s2 /= 2), (a2 = s2 / r2 * parseInt(e3.config.plotOptions.bar.columnWidth, 10) / 100) < 1 && (a2 = 1), a2 = a2 / (r2 > 1 ? 1 : 1.5) + 5, e3.globals.barPadForNumericAxis = a2;
          }
          return a2;
        } }, { key: "gridPadFortitleSubtitle", value: function() {
          var t4 = this, e3 = this.w, n3 = e3.globals, i2 = this.dCtx.isSparkline || !e3.globals.axisCharts ? 0 : 10;
          ["title", "subtitle"].forEach(function(n4) {
            e3.config[n4].text !== void 0 ? i2 += e3.config[n4].margin : i2 += t4.dCtx.isSparkline || !e3.globals.axisCharts ? 0 : 5;
          }), !e3.config.legend.show || e3.config.legend.position !== "bottom" || e3.config.legend.floating || e3.globals.axisCharts || (i2 += 10);
          var a2 = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"), r2 = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
          n3.gridHeight = n3.gridHeight - a2.height - r2.height - i2, n3.translateY = n3.translateY + a2.height + r2.height + i2;
        } }, { key: "setGridXPosForDualYAxis", value: function(t4, e3) {
          var n3 = this.w, i2 = new Y(this.dCtx.ctx);
          n3.config.yaxis.map(function(a2, r2) {
            n3.globals.ignoreYAxisIndexes.indexOf(r2) !== -1 || a2.floating || i2.isYAxisHidden(r2) || (a2.opposite && (n3.globals.translateX = n3.globals.translateX - (e3[r2].width + t4[r2].width) - parseInt(n3.config.yaxis[r2].labels.style.fontSize, 10) / 1.2 - 12), n3.globals.translateX < 2 && (n3.globals.translateX = 2));
          });
        } }]), t3;
      }(), dt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.lgRect = {}, this.yAxisWidth = 0, this.yAxisWidthLeft = 0, this.yAxisWidthRight = 0, this.xAxisHeight = 0, this.isSparkline = this.w.config.chart.sparkline.enabled, this.dimHelpers = new ot(this), this.dimYAxis = new lt(this), this.dimXAxis = new st(this), this.dimGrid = new ct(this), this.lgWidthForSideLegends = 0, this.gridPad = this.w.config.grid.padding, this.xPadRight = 0, this.xPadLeft = 0;
        }
        return s(t3, [{ key: "plotCoords", value: function() {
          var t4 = this.w.globals;
          this.lgRect = this.dimHelpers.getLegendsRect(), t4.axisCharts ? this.setDimensionsForAxisCharts() : this.setDimensionsForNonAxisCharts(), this.dimGrid.gridPadFortitleSubtitle(), t4.gridHeight = t4.gridHeight - this.gridPad.top - this.gridPad.bottom, t4.gridWidth = t4.gridWidth - this.gridPad.left - this.gridPad.right - this.xPadRight - this.xPadLeft;
          var e3 = this.dimGrid.gridPadForColumnsInNumericAxis(t4.gridWidth);
          t4.gridWidth = t4.gridWidth - 2 * e3, t4.translateX = t4.translateX + this.gridPad.left + this.xPadLeft + (e3 > 0 ? e3 + 4 : 0), t4.translateY = t4.translateY + this.gridPad.top;
        } }, { key: "setDimensionsForAxisCharts", value: function() {
          var t4 = this, e3 = this.w, n3 = e3.globals, i2 = this.dimYAxis.getyAxisLabelsCoords(), a2 = this.dimYAxis.getyAxisTitleCoords();
          e3.globals.yLabelsCoords = [], e3.globals.yTitleCoords = [], e3.config.yaxis.map(function(t5, n4) {
            e3.globals.yLabelsCoords.push({ width: i2[n4].width, index: n4 }), e3.globals.yTitleCoords.push({ width: a2[n4].width, index: n4 });
          }), this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth();
          var r2 = this.dimXAxis.getxAxisLabelsCoords(), o2 = this.dimXAxis.getxAxisTitleCoords();
          this.conditionalChecksForAxisCoords(r2, o2), n3.translateXAxisY = e3.globals.rotateXLabels ? this.xAxisHeight / 8 : -4, n3.translateXAxisX = e3.globals.rotateXLabels && e3.globals.isXNumeric && e3.config.xaxis.labels.rotate <= -45 ? -this.xAxisWidth / 4 : 0, e3.globals.isBarHorizontal && (n3.rotateXLabels = false, n3.translateXAxisY = parseInt(e3.config.xaxis.labels.style.fontSize, 10) / 1.5 * -1), n3.translateXAxisY = n3.translateXAxisY + e3.config.xaxis.labels.offsetY, n3.translateXAxisX = n3.translateXAxisX + e3.config.xaxis.labels.offsetX;
          var s2 = this.yAxisWidth, l2 = this.xAxisHeight;
          n3.xAxisLabelsHeight = this.xAxisHeight - o2.height, n3.xAxisLabelsWidth = this.xAxisWidth, n3.xAxisHeight = this.xAxisHeight;
          var c2 = 10;
          (e3.config.chart.type === "radar" || this.isSparkline) && (s2 = 0, l2 = n3.goldenPadding), this.isSparkline && (this.lgRect = { height: 0, width: 0 }), (this.isSparkline || e3.config.chart.type === "treemap") && (s2 = 0, l2 = 0, c2 = 0), this.isSparkline || this.dimXAxis.additionalPaddingXLabels(r2);
          var d2 = function() {
            n3.translateX = s2, n3.gridHeight = n3.svgHeight - t4.lgRect.height - l2 - (t4.isSparkline || e3.config.chart.type === "treemap" ? 0 : e3.globals.rotateXLabels ? 10 : 15), n3.gridWidth = n3.svgWidth - s2;
          };
          switch (e3.config.xaxis.position === "top" && (c2 = n3.xAxisHeight - e3.config.xaxis.axisTicks.height - 5), e3.config.legend.position) {
            case "bottom":
              n3.translateY = c2, d2();
              break;
            case "top":
              n3.translateY = this.lgRect.height + c2, d2();
              break;
            case "left":
              n3.translateY = c2, n3.translateX = this.lgRect.width + s2, n3.gridHeight = n3.svgHeight - l2 - 12, n3.gridWidth = n3.svgWidth - this.lgRect.width - s2;
              break;
            case "right":
              n3.translateY = c2, n3.translateX = s2, n3.gridHeight = n3.svgHeight - l2 - 12, n3.gridWidth = n3.svgWidth - this.lgRect.width - s2 - 5;
              break;
            default:
              throw new Error("Legend position not supported");
          }
          this.dimGrid.setGridXPosForDualYAxis(a2, i2), new Q(this.ctx).setYAxisXPosition(i2, a2);
        } }, { key: "setDimensionsForNonAxisCharts", value: function() {
          var t4 = this.w, e3 = t4.globals, n3 = t4.config, i2 = 0;
          t4.config.legend.show && !t4.config.legend.floating && (i2 = 20);
          var a2 = n3.chart.type === "pie" || n3.chart.type === "polarArea" || n3.chart.type === "donut" ? "pie" : "radialBar", r2 = n3.plotOptions[a2].offsetY, o2 = n3.plotOptions[a2].offsetX;
          if (!n3.legend.show || n3.legend.floating)
            return e3.gridHeight = e3.svgHeight - n3.grid.padding.left + n3.grid.padding.right, e3.gridWidth = e3.gridHeight, e3.translateY = r2, void (e3.translateX = o2 + (e3.svgWidth - e3.gridWidth) / 2);
          switch (n3.legend.position) {
            case "bottom":
              e3.gridHeight = e3.svgHeight - this.lgRect.height - e3.goldenPadding, e3.gridWidth = e3.svgWidth, e3.translateY = r2 - 10, e3.translateX = o2 + (e3.svgWidth - e3.gridWidth) / 2;
              break;
            case "top":
              e3.gridHeight = e3.svgHeight - this.lgRect.height - e3.goldenPadding, e3.gridWidth = e3.svgWidth, e3.translateY = this.lgRect.height + r2 + 10, e3.translateX = o2 + (e3.svgWidth - e3.gridWidth) / 2;
              break;
            case "left":
              e3.gridWidth = e3.svgWidth - this.lgRect.width - i2, e3.gridHeight = n3.chart.height !== "auto" ? e3.svgHeight : e3.gridWidth, e3.translateY = r2, e3.translateX = o2 + this.lgRect.width + i2;
              break;
            case "right":
              e3.gridWidth = e3.svgWidth - this.lgRect.width - i2 - 5, e3.gridHeight = n3.chart.height !== "auto" ? e3.svgHeight : e3.gridWidth, e3.translateY = r2, e3.translateX = o2 + 10;
              break;
            default:
              throw new Error("Legend position not supported");
          }
        } }, { key: "conditionalChecksForAxisCoords", value: function(t4, e3) {
          var n3 = this.w;
          this.xAxisHeight = (t4.height + e3.height) * (n3.globals.isMultiLineX ? 1.2 : n3.globals.LINE_HEIGHT_RATIO) + (n3.globals.rotateXLabels ? 22 : 10), this.xAxisWidth = t4.width, this.xAxisHeight - e3.height > n3.config.xaxis.labels.maxHeight && (this.xAxisHeight = n3.config.xaxis.labels.maxHeight), n3.config.xaxis.labels.minHeight && this.xAxisHeight < n3.config.xaxis.labels.minHeight && (this.xAxisHeight = n3.config.xaxis.labels.minHeight), n3.config.xaxis.floating && (this.xAxisHeight = 0);
          var i2 = 0, a2 = 0;
          n3.config.yaxis.forEach(function(t5) {
            i2 += t5.labels.minWidth, a2 += t5.labels.maxWidth;
          }), this.yAxisWidth < i2 && (this.yAxisWidth = i2), this.yAxisWidth > a2 && (this.yAxisWidth = a2);
        } }]), t3;
      }(), ut = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.lgCtx = e3;
        }
        return s(t3, [{ key: "getLegendStyles", value: function() {
          var t4 = document.createElement("style");
          t4.setAttribute("type", "text/css");
          var e3 = document.createTextNode("	\n    	\n      .apexcharts-legend {	\n        display: flex;	\n        overflow: auto;	\n        padding: 0 10px;	\n      }	\n      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {	\n        flex-wrap: wrap	\n      }	\n      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	\n        flex-direction: column;	\n        bottom: 0;	\n      }	\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	\n        justify-content: flex-start;	\n      }	\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {	\n        justify-content: center;  	\n      }	\n      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {	\n        justify-content: flex-end;	\n      }	\n      .apexcharts-legend-series {	\n        cursor: pointer;	\n        line-height: normal;	\n      }	\n      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{	\n        display: flex;	\n        align-items: center;	\n      }	\n      .apexcharts-legend-text {	\n        position: relative;	\n        font-size: 14px;	\n      }	\n      .apexcharts-legend-text *, .apexcharts-legend-marker * {	\n        pointer-events: none;	\n      }	\n      .apexcharts-legend-marker {	\n        position: relative;	\n        display: inline-block;	\n        cursor: pointer;	\n        margin-right: 3px;	\n        border-style: solid;\n      }	\n      	\n      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{	\n        display: inline-block;	\n      }	\n      .apexcharts-legend-series.apexcharts-no-click {	\n        cursor: auto;	\n      }	\n      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {	\n        display: none !important;	\n      }	\n      .apexcharts-inactive-legend {	\n        opacity: 0.45;	\n      }");
          return t4.appendChild(e3), t4;
        } }, { key: "getLegendBBox", value: function() {
          var t4 = this.w.globals.dom.baseEl.querySelector(".apexcharts-legend").getBoundingClientRect(), e3 = t4.width;
          return { clwh: t4.height, clww: e3 };
        } }, { key: "appendToForeignObject", value: function() {
          var t4 = this.w.globals;
          t4.dom.elLegendForeign = document.createElementNS(t4.SVGNS, "foreignObject");
          var e3 = t4.dom.elLegendForeign;
          e3.setAttribute("x", 0), e3.setAttribute("y", 0), e3.setAttribute("width", t4.svgWidth), e3.setAttribute("height", t4.svgHeight), t4.dom.elLegendWrap.setAttribute("xmlns", "http://www.w3.org/1999/xhtml"), e3.appendChild(t4.dom.elLegendWrap), e3.appendChild(this.getLegendStyles()), t4.dom.Paper.node.insertBefore(e3, t4.dom.elGraphical.node);
        } }, { key: "toggleDataSeries", value: function(t4, e3) {
          var n3 = this, i2 = this.w;
          if (i2.globals.axisCharts || i2.config.chart.type === "radialBar") {
            i2.globals.resized = true;
            var a2 = null, r2 = null;
            i2.globals.risingSeries = [], i2.globals.axisCharts ? (a2 = i2.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(t4, "']")), r2 = parseInt(a2.getAttribute("data:realIndex"), 10)) : (a2 = i2.globals.dom.baseEl.querySelector(".apexcharts-series[rel='".concat(t4 + 1, "']")), r2 = parseInt(a2.getAttribute("rel"), 10) - 1), e3 ? [{ cs: i2.globals.collapsedSeries, csi: i2.globals.collapsedSeriesIndices }, { cs: i2.globals.ancillaryCollapsedSeries, csi: i2.globals.ancillaryCollapsedSeriesIndices }].forEach(function(t5) {
              n3.riseCollapsedSeries(t5.cs, t5.csi, r2);
            }) : this.hideSeries({ seriesEl: a2, realIndex: r2 });
          } else {
            var o2 = i2.globals.dom.Paper.select(" .apexcharts-series[rel='".concat(t4 + 1, "'] path")), s2 = i2.config.chart.type;
            if (s2 === "pie" || s2 === "polarArea" || s2 === "donut") {
              var l2 = i2.config.plotOptions.pie.donut.labels;
              new _(this.lgCtx.ctx).pathMouseDown(o2.members[0], null), this.lgCtx.ctx.pie.printDataLabelsInner(o2.members[0].node, l2);
            }
            o2.fire("click");
          }
        } }, { key: "hideSeries", value: function(t4) {
          var e3 = t4.seriesEl, n3 = t4.realIndex, i2 = this.w, a2 = b.clone(i2.config.series);
          if (i2.globals.axisCharts) {
            var r2 = false;
            if (i2.config.yaxis[n3] && i2.config.yaxis[n3].show && i2.config.yaxis[n3].showAlways && (r2 = true, i2.globals.ancillaryCollapsedSeriesIndices.indexOf(n3) < 0 && (i2.globals.ancillaryCollapsedSeries.push({ index: n3, data: a2[n3].data.slice(), type: e3.parentNode.className.baseVal.split("-")[1] }), i2.globals.ancillaryCollapsedSeriesIndices.push(n3))), !r2) {
              i2.globals.collapsedSeries.push({ index: n3, data: a2[n3].data.slice(), type: e3.parentNode.className.baseVal.split("-")[1] }), i2.globals.collapsedSeriesIndices.push(n3);
              var o2 = i2.globals.risingSeries.indexOf(n3);
              i2.globals.risingSeries.splice(o2, 1);
            }
          } else
            i2.globals.collapsedSeries.push({ index: n3, data: a2[n3] }), i2.globals.collapsedSeriesIndices.push(n3);
          for (var s2 = e3.childNodes, l2 = 0; l2 < s2.length; l2++)
            s2[l2].classList.contains("apexcharts-series-markers-wrap") && (s2[l2].classList.contains("apexcharts-hide") ? s2[l2].classList.remove("apexcharts-hide") : s2[l2].classList.add("apexcharts-hide"));
          i2.globals.allSeriesCollapsed = i2.globals.collapsedSeries.length === i2.config.series.length, a2 = this._getSeriesBasedOnCollapsedState(a2), this.lgCtx.ctx.updateHelpers._updateSeries(a2, i2.config.chart.animations.dynamicAnimation.enabled);
        } }, { key: "riseCollapsedSeries", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = b.clone(i2.config.series);
          if (t4.length > 0) {
            for (var r2 = 0; r2 < t4.length; r2++)
              t4[r2].index === n3 && (i2.globals.axisCharts ? (a2[n3].data = t4[r2].data.slice(), t4.splice(r2, 1), e3.splice(r2, 1), i2.globals.risingSeries.push(n3)) : (a2[n3] = t4[r2].data, t4.splice(r2, 1), e3.splice(r2, 1), i2.globals.risingSeries.push(n3)));
            a2 = this._getSeriesBasedOnCollapsedState(a2), this.lgCtx.ctx.updateHelpers._updateSeries(a2, i2.config.chart.animations.dynamicAnimation.enabled);
          }
        } }, { key: "_getSeriesBasedOnCollapsedState", value: function(t4) {
          var e3 = this.w;
          return e3.globals.axisCharts ? t4.forEach(function(n3, i2) {
            e3.globals.collapsedSeriesIndices.indexOf(i2) > -1 && (t4[i2].data = []);
          }) : t4.forEach(function(n3, i2) {
            e3.globals.collapsedSeriesIndices.indexOf(i2) > -1 && (t4[i2] = 0);
          }), t4;
        } }]), t3;
      }(), ht = function() {
        function t3(e3, n3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.onLegendClick = this.onLegendClick.bind(this), this.onLegendHovered = this.onLegendHovered.bind(this), this.isBarsDistributed = this.w.config.chart.type === "bar" && this.w.config.plotOptions.bar.distributed && this.w.config.series.length === 1, this.legendHelpers = new ut(this);
        }
        return s(t3, [{ key: "init", value: function() {
          var t4 = this.w, e3 = t4.globals, n3 = t4.config;
          if ((n3.legend.showForSingleSeries && e3.series.length === 1 || this.isBarsDistributed || e3.series.length > 1 || !e3.axisCharts) && n3.legend.show) {
            for (; e3.dom.elLegendWrap.firstChild; )
              e3.dom.elLegendWrap.removeChild(e3.dom.elLegendWrap.firstChild);
            this.drawLegends(), b.isIE11() ? document.getElementsByTagName("head")[0].appendChild(this.legendHelpers.getLegendStyles()) : this.legendHelpers.appendToForeignObject(), n3.legend.position === "bottom" || n3.legend.position === "top" ? this.legendAlignHorizontal() : n3.legend.position !== "right" && n3.legend.position !== "left" || this.legendAlignVertical();
          }
        } }, { key: "drawLegends", value: function() {
          var t4 = this, e3 = this.w, n3 = e3.config.legend.fontFamily, i2 = e3.globals.seriesNames, a2 = e3.globals.colors.slice();
          if (e3.config.chart.type === "heatmap") {
            var r2 = e3.config.plotOptions.heatmap.colorScale.ranges;
            i2 = r2.map(function(t5) {
              return t5.name ? t5.name : t5.from + " - " + t5.to;
            }), a2 = r2.map(function(t5) {
              return t5.color;
            });
          } else
            this.isBarsDistributed && (i2 = e3.globals.labels.slice());
          e3.config.legend.customLegendItems.length && (i2 = e3.config.legend.customLegendItems);
          for (var o2 = e3.globals.legendFormatter, s2 = e3.config.legend.inverseOrder, l2 = s2 ? i2.length - 1 : 0; s2 ? l2 >= 0 : l2 <= i2.length - 1; s2 ? l2-- : l2++) {
            var c2 = o2(i2[l2], { seriesIndex: l2, w: e3 }), d2 = false, u2 = false;
            if (e3.globals.collapsedSeries.length > 0)
              for (var h2 = 0; h2 < e3.globals.collapsedSeries.length; h2++)
                e3.globals.collapsedSeries[h2].index === l2 && (d2 = true);
            if (e3.globals.ancillaryCollapsedSeriesIndices.length > 0)
              for (var p2 = 0; p2 < e3.globals.ancillaryCollapsedSeriesIndices.length; p2++)
                e3.globals.ancillaryCollapsedSeriesIndices[p2] === l2 && (u2 = true);
            var f2 = document.createElement("span");
            f2.classList.add("apexcharts-legend-marker");
            var g2 = e3.config.legend.markers.offsetX, m2 = e3.config.legend.markers.offsetY, v2 = e3.config.legend.markers.height, y2 = e3.config.legend.markers.width, x2 = e3.config.legend.markers.strokeWidth, w2 = e3.config.legend.markers.strokeColor, S2 = e3.config.legend.markers.radius, k2 = f2.style;
            k2.background = a2[l2], k2.color = a2[l2], k2.setProperty("background", a2[l2], "important"), e3.config.legend.markers.fillColors && e3.config.legend.markers.fillColors[l2] && (k2.background = e3.config.legend.markers.fillColors[l2]), e3.globals.seriesColors[l2] !== void 0 && (k2.background = e3.globals.seriesColors[l2], k2.color = e3.globals.seriesColors[l2]), k2.height = Array.isArray(v2) ? parseFloat(v2[l2]) + "px" : parseFloat(v2) + "px", k2.width = Array.isArray(y2) ? parseFloat(y2[l2]) + "px" : parseFloat(y2) + "px", k2.left = (Array.isArray(g2) ? parseFloat(g2[l2]) : parseFloat(g2)) + "px", k2.top = (Array.isArray(m2) ? parseFloat(m2[l2]) : parseFloat(m2)) + "px", k2.borderWidth = Array.isArray(x2) ? x2[l2] : x2, k2.borderColor = Array.isArray(w2) ? w2[l2] : w2, k2.borderRadius = Array.isArray(S2) ? parseFloat(S2[l2]) + "px" : parseFloat(S2) + "px", e3.config.legend.markers.customHTML && (Array.isArray(e3.config.legend.markers.customHTML) ? e3.config.legend.markers.customHTML[l2] && (f2.innerHTML = e3.config.legend.markers.customHTML[l2]()) : f2.innerHTML = e3.config.legend.markers.customHTML()), _.setAttrs(f2, { rel: l2 + 1, "data:collapsed": d2 || u2 }), (d2 || u2) && f2.classList.add("apexcharts-inactive-legend");
            var D2 = document.createElement("div"), T2 = document.createElement("span");
            T2.classList.add("apexcharts-legend-text"), T2.innerHTML = Array.isArray(c2) ? c2.join(" ") : c2;
            var E2 = e3.config.legend.labels.useSeriesColors ? e3.globals.colors[l2] : e3.config.legend.labels.colors;
            E2 || (E2 = e3.config.chart.foreColor), T2.style.color = E2, T2.style.fontSize = parseFloat(e3.config.legend.fontSize) + "px", T2.style.fontWeight = e3.config.legend.fontWeight, T2.style.fontFamily = n3 || e3.config.chart.fontFamily, _.setAttrs(T2, { rel: l2 + 1, i: l2, "data:default-text": encodeURIComponent(c2), "data:collapsed": d2 || u2 }), D2.appendChild(f2), D2.appendChild(T2);
            var A2 = new C(this.ctx);
            e3.config.legend.showForZeroSeries || A2.getSeriesTotalByIndex(l2) === 0 && A2.seriesHaveSameValues(l2) && !A2.isSeriesNull(l2) && e3.globals.collapsedSeriesIndices.indexOf(l2) === -1 && e3.globals.ancillaryCollapsedSeriesIndices.indexOf(l2) === -1 && D2.classList.add("apexcharts-hidden-zero-series"), e3.config.legend.showForNullSeries || A2.isSeriesNull(l2) && e3.globals.collapsedSeriesIndices.indexOf(l2) === -1 && e3.globals.ancillaryCollapsedSeriesIndices.indexOf(l2) === -1 && D2.classList.add("apexcharts-hidden-null-series"), e3.globals.dom.elLegendWrap.appendChild(D2), e3.globals.dom.elLegendWrap.classList.add("apexcharts-align-".concat(e3.config.legend.horizontalAlign)), e3.globals.dom.elLegendWrap.classList.add("apx-legend-position-" + e3.config.legend.position), D2.classList.add("apexcharts-legend-series"), D2.style.margin = "".concat(e3.config.legend.itemMargin.vertical, "px ").concat(e3.config.legend.itemMargin.horizontal, "px"), e3.globals.dom.elLegendWrap.style.width = e3.config.legend.width ? e3.config.legend.width + "px" : "", e3.globals.dom.elLegendWrap.style.height = e3.config.legend.height ? e3.config.legend.height + "px" : "", _.setAttrs(D2, { rel: l2 + 1, seriesName: b.escapeString(i2[l2]), "data:collapsed": d2 || u2 }), (d2 || u2) && D2.classList.add("apexcharts-inactive-legend"), e3.config.legend.onItemClick.toggleDataSeries || D2.classList.add("apexcharts-no-click");
          }
          e3.globals.dom.elWrap.addEventListener("click", t4.onLegendClick, true), e3.config.legend.onItemHover.highlightDataSeries && e3.config.legend.customLegendItems.length === 0 && (e3.globals.dom.elWrap.addEventListener("mousemove", t4.onLegendHovered, true), e3.globals.dom.elWrap.addEventListener("mouseout", t4.onLegendHovered, true));
        } }, { key: "setLegendWrapXY", value: function(t4, e3) {
          var n3 = this.w, i2 = n3.globals.dom.baseEl.querySelector(".apexcharts-legend"), a2 = i2.getBoundingClientRect(), r2 = 0, o2 = 0;
          if (n3.config.legend.position === "bottom")
            o2 += n3.globals.svgHeight - a2.height / 2;
          else if (n3.config.legend.position === "top") {
            var s2 = new dt(this.ctx), l2 = s2.dimHelpers.getTitleSubtitleCoords("title").height, c2 = s2.dimHelpers.getTitleSubtitleCoords("subtitle").height;
            o2 = o2 + (l2 > 0 ? l2 - 10 : 0) + (c2 > 0 ? c2 - 10 : 0);
          }
          i2.style.position = "absolute", r2 = r2 + t4 + n3.config.legend.offsetX, o2 = o2 + e3 + n3.config.legend.offsetY, i2.style.left = r2 + "px", i2.style.top = o2 + "px", n3.config.legend.position === "bottom" ? (i2.style.top = "auto", i2.style.bottom = 5 - n3.config.legend.offsetY + "px") : n3.config.legend.position === "right" && (i2.style.left = "auto", i2.style.right = 25 + n3.config.legend.offsetX + "px"), ["width", "height"].forEach(function(t5) {
            i2.style[t5] && (i2.style[t5] = parseInt(n3.config.legend[t5], 10) + "px");
          });
        } }, { key: "legendAlignHorizontal", value: function() {
          var t4 = this.w;
          t4.globals.dom.baseEl.querySelector(".apexcharts-legend").style.right = 0;
          var e3 = this.legendHelpers.getLegendBBox(), n3 = new dt(this.ctx), i2 = n3.dimHelpers.getTitleSubtitleCoords("title"), a2 = n3.dimHelpers.getTitleSubtitleCoords("subtitle"), r2 = 0;
          t4.config.legend.position === "bottom" ? r2 = -e3.clwh / 1.8 : t4.config.legend.position === "top" && (r2 = i2.height + a2.height + t4.config.title.margin + t4.config.subtitle.margin - 10), this.setLegendWrapXY(20, r2);
        } }, { key: "legendAlignVertical", value: function() {
          var t4 = this.w, e3 = this.legendHelpers.getLegendBBox(), n3 = 0;
          t4.config.legend.position === "left" && (n3 = 20), t4.config.legend.position === "right" && (n3 = t4.globals.svgWidth - e3.clww - 10), this.setLegendWrapXY(n3, 20);
        } }, { key: "onLegendHovered", value: function(t4) {
          var e3 = this.w, n3 = t4.target.classList.contains("apexcharts-legend-text") || t4.target.classList.contains("apexcharts-legend-marker");
          if (e3.config.chart.type === "heatmap" || this.isBarsDistributed) {
            if (n3) {
              var i2 = parseInt(t4.target.getAttribute("rel"), 10) - 1;
              this.ctx.events.fireEvent("legendHover", [this.ctx, i2, this.w]), new j(this.ctx).highlightRangeInSeries(t4, t4.target);
            }
          } else
            !t4.target.classList.contains("apexcharts-inactive-legend") && n3 && new j(this.ctx).toggleSeriesOnHover(t4, t4.target);
        } }, { key: "onLegendClick", value: function(t4) {
          var e3 = this.w;
          if (!e3.config.legend.customLegendItems.length && (t4.target.classList.contains("apexcharts-legend-text") || t4.target.classList.contains("apexcharts-legend-marker"))) {
            var n3 = parseInt(t4.target.getAttribute("rel"), 10) - 1, i2 = t4.target.getAttribute("data:collapsed") === "true", a2 = this.w.config.chart.events.legendClick;
            typeof a2 == "function" && a2(this.ctx, n3, this.w), this.ctx.events.fireEvent("legendClick", [this.ctx, n3, this.w]);
            var r2 = this.w.config.legend.markers.onClick;
            typeof r2 == "function" && t4.target.classList.contains("apexcharts-legend-marker") && (r2(this.ctx, n3, this.w), this.ctx.events.fireEvent("legendMarkerClick", [this.ctx, n3, this.w])), e3.config.chart.type !== "treemap" && e3.config.chart.type !== "heatmap" && !this.isBarsDistributed && e3.config.legend.onItemClick.toggleDataSeries && this.legendHelpers.toggleDataSeries(n3, i2);
          }
        } }]), t3;
      }(), pt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
          var n3 = this.w;
          this.ev = this.w.config.chart.events, this.selectedClass = "apexcharts-selected", this.localeValues = this.w.globals.locale.toolbar, this.minX = n3.globals.minX, this.maxX = n3.globals.maxX;
        }
        return s(t3, [{ key: "createToolbar", value: function() {
          var t4 = this, e3 = this.w, n3 = function() {
            return document.createElement("div");
          }, i2 = n3();
          if (i2.setAttribute("class", "apexcharts-toolbar"), i2.style.top = e3.config.chart.toolbar.offsetY + "px", i2.style.right = 3 - e3.config.chart.toolbar.offsetX + "px", e3.globals.dom.elWrap.appendChild(i2), this.elZoom = n3(), this.elZoomIn = n3(), this.elZoomOut = n3(), this.elPan = n3(), this.elSelection = n3(), this.elZoomReset = n3(), this.elMenuIcon = n3(), this.elMenu = n3(), this.elCustomIcons = [], this.t = e3.config.chart.toolbar.tools, Array.isArray(this.t.customIcons))
            for (var a2 = 0; a2 < this.t.customIcons.length; a2++)
              this.elCustomIcons.push(n3());
          var r2 = [], o2 = function(n4, i3, a3) {
            var o3 = n4.toLowerCase();
            t4.t[o3] && e3.config.chart.zoom.enabled && r2.push({ el: i3, icon: typeof t4.t[o3] == "string" ? t4.t[o3] : a3, title: t4.localeValues[n4], class: "apexcharts-".concat(o3, "-icon") });
          };
          o2("zoomIn", this.elZoomIn, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n'), o2("zoomOut", this.elZoomOut, '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>\n</svg>\n');
          var s2 = function(n4) {
            t4.t[n4] && e3.config.chart[n4].enabled && r2.push({ el: n4 === "zoom" ? t4.elZoom : t4.elSelection, icon: typeof t4.t[n4] == "string" ? t4.t[n4] : n4 === "zoom" ? '<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>\n    <path d="M0 0h24v24H0V0z" fill="none"/>\n    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>\n</svg>' : '<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M0 0h24v24H0z" fill="none"/>\n    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>\n</svg>', title: t4.localeValues[n4 === "zoom" ? "selectionZoom" : "selection"], class: e3.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-".concat(n4, "-icon") });
          };
          s2("zoom"), s2("selection"), this.t.pan && e3.config.chart.zoom.enabled && r2.push({ el: this.elPan, icon: typeof this.t.pan == "string" ? this.t.pan : '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">\n    <defs>\n        <path d="M0 0h24v24H0z" id="a"/>\n    </defs>\n    <clipPath id="b">\n        <use overflow="visible" xlink:href="#a"/>\n    </clipPath>\n    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>\n</svg>', title: this.localeValues.pan, class: e3.globals.isTouchDevice ? "apexcharts-element-hidden" : "apexcharts-pan-icon" }), o2("reset", this.elZoomReset, '<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">\n    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>\n    <path d="M0 0h24v24H0z" fill="none"/>\n</svg>'), this.t.download && r2.push({ el: this.elMenuIcon, icon: typeof this.t.download == "string" ? this.t.download : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>', title: this.localeValues.menu, class: "apexcharts-menu-icon" });
          for (var l2 = 0; l2 < this.elCustomIcons.length; l2++)
            r2.push({ el: this.elCustomIcons[l2], icon: this.t.customIcons[l2].icon, title: this.t.customIcons[l2].title, index: this.t.customIcons[l2].index, class: "apexcharts-toolbar-custom-icon " + this.t.customIcons[l2].class });
          r2.forEach(function(t5, e4) {
            t5.index && b.moveIndexInArray(r2, e4, t5.index);
          });
          for (var c2 = 0; c2 < r2.length; c2++)
            _.setAttrs(r2[c2].el, { class: r2[c2].class, title: r2[c2].title }), r2[c2].el.innerHTML = r2[c2].icon, i2.appendChild(r2[c2].el);
          this._createHamburgerMenu(i2), e3.globals.zoomEnabled ? this.elZoom.classList.add(this.selectedClass) : e3.globals.panEnabled ? this.elPan.classList.add(this.selectedClass) : e3.globals.selectionEnabled && this.elSelection.classList.add(this.selectedClass), this.addToolbarEventListeners();
        } }, { key: "_createHamburgerMenu", value: function(t4) {
          this.elMenuItems = [], t4.appendChild(this.elMenu), _.setAttrs(this.elMenu, { class: "apexcharts-menu" });
          var e3 = [{ name: "exportSVG", title: this.localeValues.exportToSVG }, { name: "exportPNG", title: this.localeValues.exportToPNG }, { name: "exportCSV", title: this.localeValues.exportToCSV }];
          this.w.globals.allSeriesHasEqualX || e3.splice(2, 1);
          for (var n3 = 0; n3 < e3.length; n3++)
            this.elMenuItems.push(document.createElement("div")), this.elMenuItems[n3].innerHTML = e3[n3].title, _.setAttrs(this.elMenuItems[n3], { class: "apexcharts-menu-item ".concat(e3[n3].name), title: e3[n3].title }), this.elMenu.appendChild(this.elMenuItems[n3]);
        } }, { key: "addToolbarEventListeners", value: function() {
          var t4 = this;
          this.elZoomReset.addEventListener("click", this.handleZoomReset.bind(this)), this.elSelection.addEventListener("click", this.toggleZoomSelection.bind(this, "selection")), this.elZoom.addEventListener("click", this.toggleZoomSelection.bind(this, "zoom")), this.elZoomIn.addEventListener("click", this.handleZoomIn.bind(this)), this.elZoomOut.addEventListener("click", this.handleZoomOut.bind(this)), this.elPan.addEventListener("click", this.togglePanning.bind(this)), this.elMenuIcon.addEventListener("click", this.toggleMenu.bind(this)), this.elMenuItems.forEach(function(e4) {
            e4.classList.contains("exportSVG") ? e4.addEventListener("click", t4.handleDownload.bind(t4, "svg")) : e4.classList.contains("exportPNG") ? e4.addEventListener("click", t4.handleDownload.bind(t4, "png")) : e4.classList.contains("exportCSV") && e4.addEventListener("click", t4.handleDownload.bind(t4, "csv"));
          });
          for (var e3 = 0; e3 < this.t.customIcons.length; e3++)
            this.elCustomIcons[e3].addEventListener("click", this.t.customIcons[e3].click.bind(this, this.ctx, this.ctx.w));
        } }, { key: "toggleZoomSelection", value: function(t4) {
          this.ctx.getSyncedCharts().forEach(function(e3) {
            e3.ctx.toolbar.toggleOtherControls();
            var n3 = t4 === "selection" ? e3.ctx.toolbar.elSelection : e3.ctx.toolbar.elZoom, i2 = t4 === "selection" ? "selectionEnabled" : "zoomEnabled";
            e3.w.globals[i2] = !e3.w.globals[i2], n3.classList.contains(e3.ctx.toolbar.selectedClass) ? n3.classList.remove(e3.ctx.toolbar.selectedClass) : n3.classList.add(e3.ctx.toolbar.selectedClass);
          });
        } }, { key: "getToolbarIconsReference", value: function() {
          var t4 = this.w;
          this.elZoom || (this.elZoom = t4.globals.dom.baseEl.querySelector(".apexcharts-zoom-icon")), this.elPan || (this.elPan = t4.globals.dom.baseEl.querySelector(".apexcharts-pan-icon")), this.elSelection || (this.elSelection = t4.globals.dom.baseEl.querySelector(".apexcharts-selection-icon"));
        } }, { key: "enableZoomPanFromToolbar", value: function(t4) {
          this.toggleOtherControls(), t4 === "pan" ? this.w.globals.panEnabled = true : this.w.globals.zoomEnabled = true;
          var e3 = t4 === "pan" ? this.elPan : this.elZoom, n3 = t4 === "pan" ? this.elZoom : this.elPan;
          e3 && e3.classList.add(this.selectedClass), n3 && n3.classList.remove(this.selectedClass);
        } }, { key: "togglePanning", value: function() {
          this.ctx.getSyncedCharts().forEach(function(t4) {
            t4.ctx.toolbar.toggleOtherControls(), t4.w.globals.panEnabled = !t4.w.globals.panEnabled, t4.ctx.toolbar.elPan.classList.contains(t4.ctx.toolbar.selectedClass) ? t4.ctx.toolbar.elPan.classList.remove(t4.ctx.toolbar.selectedClass) : t4.ctx.toolbar.elPan.classList.add(t4.ctx.toolbar.selectedClass);
          });
        } }, { key: "toggleOtherControls", value: function() {
          var t4 = this, e3 = this.w;
          e3.globals.panEnabled = false, e3.globals.zoomEnabled = false, e3.globals.selectionEnabled = false, this.getToolbarIconsReference(), [this.elPan, this.elSelection, this.elZoom].forEach(function(e4) {
            e4 && e4.classList.remove(t4.selectedClass);
          });
        } }, { key: "handleZoomIn", value: function() {
          var t4 = this.w;
          t4.globals.isTimelineBar && (this.minX = t4.globals.minY, this.maxX = t4.globals.maxY);
          var e3 = (this.minX + this.maxX) / 2, n3 = (this.minX + e3) / 2, i2 = (this.maxX + e3) / 2, a2 = this._getNewMinXMaxX(n3, i2);
          t4.globals.disableZoomIn || this.zoomUpdateOptions(a2.minX, a2.maxX);
        } }, { key: "handleZoomOut", value: function() {
          var t4 = this.w;
          if (t4.globals.isTimelineBar && (this.minX = t4.globals.minY, this.maxX = t4.globals.maxY), !(t4.config.xaxis.type === "datetime" && new Date(this.minX).getUTCFullYear() < 1e3)) {
            var e3 = (this.minX + this.maxX) / 2, n3 = this.minX - (e3 - this.minX), i2 = this.maxX - (e3 - this.maxX), a2 = this._getNewMinXMaxX(n3, i2);
            t4.globals.disableZoomOut || this.zoomUpdateOptions(a2.minX, a2.maxX);
          }
        } }, { key: "_getNewMinXMaxX", value: function(t4, e3) {
          var n3 = this.w.config.xaxis.convertedCatToNumeric;
          return { minX: n3 ? Math.floor(t4) : t4, maxX: n3 ? Math.floor(e3) : e3 };
        } }, { key: "zoomUpdateOptions", value: function(t4, e3) {
          var n3 = this.w;
          if (t4 !== void 0 || e3 !== void 0) {
            if (!(n3.config.xaxis.convertedCatToNumeric && (t4 < 1 && (t4 = 1, e3 = n3.globals.dataPoints), e3 - t4 < 2))) {
              var i2 = { min: t4, max: e3 }, a2 = this.getBeforeZoomRange(i2);
              a2 && (i2 = a2.xaxis);
              var r2 = { xaxis: i2 }, o2 = b.clone(n3.globals.initialConfig.yaxis);
              n3.config.chart.zoom.autoScaleYaxis && (o2 = new Z(this.ctx).autoScaleY(this.ctx, o2, { xaxis: i2 })), n3.config.chart.group || (r2.yaxis = o2), this.w.globals.zoomed = true, this.ctx.updateHelpers._updateOptions(r2, false, this.w.config.chart.animations.dynamicAnimation.enabled), this.zoomCallback(i2, o2);
            }
          } else
            this.handleZoomReset();
        } }, { key: "zoomCallback", value: function(t4, e3) {
          typeof this.ev.zoomed == "function" && this.ev.zoomed(this.ctx, { xaxis: t4, yaxis: e3 });
        } }, { key: "getBeforeZoomRange", value: function(t4, e3) {
          var n3 = null;
          return typeof this.ev.beforeZoom == "function" && (n3 = this.ev.beforeZoom(this, { xaxis: t4, yaxis: e3 })), n3;
        } }, { key: "toggleMenu", value: function() {
          var t4 = this;
          window.setTimeout(function() {
            t4.elMenu.classList.contains("apexcharts-menu-open") ? t4.elMenu.classList.remove("apexcharts-menu-open") : t4.elMenu.classList.add("apexcharts-menu-open");
          }, 0);
        } }, { key: "handleDownload", value: function(t4) {
          var e3 = this.w, n3 = new U(this.ctx);
          switch (t4) {
            case "svg":
              n3.exportToSVG(this.ctx);
              break;
            case "png":
              n3.exportToPng(this.ctx);
              break;
            case "csv":
              n3.exportToCSV({ series: e3.config.series, columnDelimiter: e3.config.chart.toolbar.export.csv.columnDelimiter });
          }
        } }, { key: "handleZoomReset", value: function(t4) {
          this.ctx.getSyncedCharts().forEach(function(t5) {
            var e3 = t5.w;
            if (e3.globals.lastXAxis.min = void 0, e3.globals.lastXAxis.max = void 0, t5.updateHelpers.revertDefaultAxisMinMax(), typeof e3.config.chart.events.beforeResetZoom == "function") {
              var n3 = e3.config.chart.events.beforeResetZoom(t5, e3);
              n3 && t5.updateHelpers.revertDefaultAxisMinMax(n3);
            }
            typeof e3.config.chart.events.zoomed == "function" && t5.ctx.toolbar.zoomCallback({ min: e3.config.xaxis.min, max: e3.config.xaxis.max }), e3.globals.zoomed = false;
            var i2 = t5.ctx.series.emptyCollapsedSeries(b.clone(e3.globals.initialSeries));
            t5.updateHelpers._updateSeries(i2, e3.config.chart.animations.dynamicAnimation.enabled);
          });
        } }, { key: "destroy", value: function() {
          this.elZoom = null, this.elZoomIn = null, this.elZoomOut = null, this.elPan = null, this.elSelection = null, this.elZoomReset = null, this.elMenuIcon = null;
        } }]), t3;
      }(), ft = function(t3) {
        u(n3, pt);
        var e3 = g(n3);
        function n3(t4) {
          var i2;
          return r(this, n3), (i2 = e3.call(this, t4)).ctx = t4, i2.w = t4.w, i2.dragged = false, i2.graphics = new _(i2.ctx), i2.eventList = ["mousedown", "mouseleave", "mousemove", "touchstart", "touchmove", "mouseup", "touchend"], i2.clientX = 0, i2.clientY = 0, i2.startX = 0, i2.endX = 0, i2.dragX = 0, i2.startY = 0, i2.endY = 0, i2.dragY = 0, i2.moveDirection = "none", i2;
        }
        return s(n3, [{ key: "init", value: function(t4) {
          var e4 = this, n4 = t4.xyRatios, i2 = this.w, a2 = this;
          this.xyRatios = n4, this.zoomRect = this.graphics.drawRect(0, 0, 0, 0), this.selectionRect = this.graphics.drawRect(0, 0, 0, 0), this.gridRect = i2.globals.dom.baseEl.querySelector(".apexcharts-grid"), this.zoomRect.node.classList.add("apexcharts-zoom-rect"), this.selectionRect.node.classList.add("apexcharts-selection-rect"), i2.globals.dom.elGraphical.add(this.zoomRect), i2.globals.dom.elGraphical.add(this.selectionRect), i2.config.chart.selection.type === "x" ? this.slDraggableRect = this.selectionRect.draggable({ minX: 0, minY: 0, maxX: i2.globals.gridWidth, maxY: i2.globals.gridHeight }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : i2.config.chart.selection.type === "y" ? this.slDraggableRect = this.selectionRect.draggable({ minX: 0, maxX: i2.globals.gridWidth }).on("dragmove", this.selectionDragging.bind(this, "dragging")) : this.slDraggableRect = this.selectionRect.draggable().on("dragmove", this.selectionDragging.bind(this, "dragging")), this.preselectedSelection(), this.hoverArea = i2.globals.dom.baseEl.querySelector("".concat(i2.globals.chartClass, " .apexcharts-svg")), this.hoverArea.classList.add("apexcharts-zoomable"), this.eventList.forEach(function(t5) {
            e4.hoverArea.addEventListener(t5, a2.svgMouseEvents.bind(a2, n4), { capture: false, passive: true });
          });
        } }, { key: "destroy", value: function() {
          this.slDraggableRect && (this.slDraggableRect.draggable(false), this.slDraggableRect.off(), this.selectionRect.off()), this.selectionRect = null, this.zoomRect = null, this.gridRect = null;
        } }, { key: "svgMouseEvents", value: function(t4, e4) {
          var n4 = this.w, i2 = this, a2 = this.ctx.toolbar, r2 = n4.globals.zoomEnabled ? n4.config.chart.zoom.type : n4.config.chart.selection.type, o2 = n4.config.chart.toolbar.autoSelected;
          e4.shiftKey ? (this.shiftWasPressed = true, a2.enableZoomPanFromToolbar(o2 === "pan" ? "zoom" : "pan")) : this.shiftWasPressed && (a2.enableZoomPanFromToolbar(o2), this.shiftWasPressed = false);
          var s2 = e4.target.classList;
          if (!(s2.contains("apexcharts-selection-rect") || s2.contains("apexcharts-legend-marker") || s2.contains("apexcharts-legend-text") || e4.target.parentNode.classList.contains("apexcharts-toolbar"))) {
            if (i2.clientX = e4.type === "touchmove" || e4.type === "touchstart" ? e4.touches[0].clientX : e4.type === "touchend" ? e4.changedTouches[0].clientX : e4.clientX, i2.clientY = e4.type === "touchmove" || e4.type === "touchstart" ? e4.touches[0].clientY : e4.type === "touchend" ? e4.changedTouches[0].clientY : e4.clientY, e4.type === "mousedown" && e4.which === 1) {
              var l2 = i2.gridRect.getBoundingClientRect();
              i2.startX = i2.clientX - l2.left, i2.startY = i2.clientY - l2.top, i2.dragged = false, i2.w.globals.mousedown = true;
            }
            if ((e4.type === "mousemove" && e4.which === 1 || e4.type === "touchmove") && (i2.dragged = true, n4.globals.panEnabled ? (n4.globals.selection = null, i2.w.globals.mousedown && i2.panDragging({ context: i2, zoomtype: r2, xyRatios: t4 })) : (i2.w.globals.mousedown && n4.globals.zoomEnabled || i2.w.globals.mousedown && n4.globals.selectionEnabled) && (i2.selection = i2.selectionDrawing({ context: i2, zoomtype: r2 }))), e4.type === "mouseup" || e4.type === "touchend" || e4.type === "mouseleave") {
              var c2 = i2.gridRect.getBoundingClientRect();
              i2.w.globals.mousedown && (i2.endX = i2.clientX - c2.left, i2.endY = i2.clientY - c2.top, i2.dragX = Math.abs(i2.endX - i2.startX), i2.dragY = Math.abs(i2.endY - i2.startY), (n4.globals.zoomEnabled || n4.globals.selectionEnabled) && i2.selectionDrawn({ context: i2, zoomtype: r2 }), n4.globals.panEnabled && n4.config.xaxis.convertedCatToNumeric && i2.delayedPanScrolled()), n4.globals.zoomEnabled && i2.hideSelectionRect(this.selectionRect), i2.dragged = false, i2.w.globals.mousedown = false;
            }
            this.makeSelectionRectDraggable();
          }
        } }, { key: "makeSelectionRectDraggable", value: function() {
          var t4 = this.w;
          if (this.selectionRect) {
            var e4 = this.selectionRect.node.getBoundingClientRect();
            e4.width > 0 && e4.height > 0 && this.slDraggableRect.selectize({ points: "l, r", pointSize: 8, pointType: "rect" }).resize({ constraint: { minX: 0, minY: 0, maxX: t4.globals.gridWidth, maxY: t4.globals.gridHeight } }).on("resizing", this.selectionDragging.bind(this, "resizing"));
          }
        } }, { key: "preselectedSelection", value: function() {
          var t4 = this.w, e4 = this.xyRatios;
          if (!t4.globals.zoomEnabled) {
            if (t4.globals.selection !== void 0 && t4.globals.selection !== null)
              this.drawSelectionRect(t4.globals.selection);
            else if (t4.config.chart.selection.xaxis.min !== void 0 && t4.config.chart.selection.xaxis.max !== void 0) {
              var n4 = (t4.config.chart.selection.xaxis.min - t4.globals.minX) / e4.xRatio, i2 = { x: n4, y: 0, width: t4.globals.gridWidth - (t4.globals.maxX - t4.config.chart.selection.xaxis.max) / e4.xRatio - n4, height: t4.globals.gridHeight, translateX: 0, translateY: 0, selectionEnabled: true };
              this.drawSelectionRect(i2), this.makeSelectionRectDraggable(), typeof t4.config.chart.events.selection == "function" && t4.config.chart.events.selection(this.ctx, { xaxis: { min: t4.config.chart.selection.xaxis.min, max: t4.config.chart.selection.xaxis.max }, yaxis: {} });
            }
          }
        } }, { key: "drawSelectionRect", value: function(t4) {
          var e4 = t4.x, n4 = t4.y, i2 = t4.width, a2 = t4.height, r2 = t4.translateX, o2 = r2 === void 0 ? 0 : r2, s2 = t4.translateY, l2 = s2 === void 0 ? 0 : s2, c2 = this.w, d2 = this.zoomRect, u2 = this.selectionRect;
          if (this.dragged || c2.globals.selection !== null) {
            var h2 = { transform: "translate(" + o2 + ", " + l2 + ")" };
            c2.globals.zoomEnabled && this.dragged && (i2 < 0 && (i2 = 1), d2.attr({ x: e4, y: n4, width: i2, height: a2, fill: c2.config.chart.zoom.zoomedArea.fill.color, "fill-opacity": c2.config.chart.zoom.zoomedArea.fill.opacity, stroke: c2.config.chart.zoom.zoomedArea.stroke.color, "stroke-width": c2.config.chart.zoom.zoomedArea.stroke.width, "stroke-opacity": c2.config.chart.zoom.zoomedArea.stroke.opacity }), _.setAttrs(d2.node, h2)), c2.globals.selectionEnabled && (u2.attr({ x: e4, y: n4, width: i2 > 0 ? i2 : 0, height: a2 > 0 ? a2 : 0, fill: c2.config.chart.selection.fill.color, "fill-opacity": c2.config.chart.selection.fill.opacity, stroke: c2.config.chart.selection.stroke.color, "stroke-width": c2.config.chart.selection.stroke.width, "stroke-dasharray": c2.config.chart.selection.stroke.dashArray, "stroke-opacity": c2.config.chart.selection.stroke.opacity }), _.setAttrs(u2.node, h2));
          }
        } }, { key: "hideSelectionRect", value: function(t4) {
          t4 && t4.attr({ x: 0, y: 0, width: 0, height: 0 });
        } }, { key: "selectionDrawing", value: function(t4) {
          var e4, n4 = t4.context, i2 = t4.zoomtype, a2 = this.w, r2 = n4, o2 = this.gridRect.getBoundingClientRect(), s2 = r2.startX - 1, l2 = r2.startY, c2 = false, d2 = false, u2 = r2.clientX - o2.left - s2, h2 = r2.clientY - o2.top - l2;
          return Math.abs(u2 + s2) > a2.globals.gridWidth ? u2 = a2.globals.gridWidth - s2 : r2.clientX - o2.left < 0 && (u2 = s2), s2 > r2.clientX - o2.left && (c2 = true, u2 = Math.abs(u2)), l2 > r2.clientY - o2.top && (d2 = true, h2 = Math.abs(h2)), e4 = i2 === "x" ? { x: c2 ? s2 - u2 : s2, y: 0, width: u2, height: a2.globals.gridHeight } : i2 === "y" ? { x: 0, y: d2 ? l2 - h2 : l2, width: a2.globals.gridWidth, height: h2 } : { x: c2 ? s2 - u2 : s2, y: d2 ? l2 - h2 : l2, width: u2, height: h2 }, r2.drawSelectionRect(e4), r2.selectionDragging("resizing"), e4;
        } }, { key: "selectionDragging", value: function(t4, e4) {
          var n4 = this, i2 = this.w, a2 = this.xyRatios, r2 = this.selectionRect, o2 = 0;
          t4 === "resizing" && (o2 = 30);
          var s2 = function(t5) {
            return parseFloat(r2.node.getAttribute(t5));
          }, l2 = { x: s2("x"), y: s2("y"), width: s2("width"), height: s2("height") };
          i2.globals.selection = l2, typeof i2.config.chart.events.selection == "function" && i2.globals.selectionEnabled && (clearTimeout(this.w.globals.selectionResizeTimer), this.w.globals.selectionResizeTimer = window.setTimeout(function() {
            var t5 = n4.gridRect.getBoundingClientRect(), e5 = r2.node.getBoundingClientRect(), o3 = { xaxis: { min: i2.globals.xAxisScale.niceMin + (e5.left - t5.left) * a2.xRatio, max: i2.globals.xAxisScale.niceMin + (e5.right - t5.left) * a2.xRatio }, yaxis: { min: i2.globals.yAxisScale[0].niceMin + (t5.bottom - e5.bottom) * a2.yRatio[0], max: i2.globals.yAxisScale[0].niceMax - (e5.top - t5.top) * a2.yRatio[0] } };
            i2.config.chart.events.selection(n4.ctx, o3), i2.config.chart.brush.enabled && i2.config.chart.events.brushScrolled !== void 0 && i2.config.chart.events.brushScrolled(n4.ctx, o3);
          }, o2));
        } }, { key: "selectionDrawn", value: function(t4) {
          var e4 = t4.context, n4 = t4.zoomtype, i2 = this.w, a2 = e4, r2 = this.xyRatios, o2 = this.ctx.toolbar;
          if (a2.startX > a2.endX) {
            var s2 = a2.startX;
            a2.startX = a2.endX, a2.endX = s2;
          }
          if (a2.startY > a2.endY) {
            var l2 = a2.startY;
            a2.startY = a2.endY, a2.endY = l2;
          }
          var c2 = void 0, d2 = void 0;
          i2.globals.isTimelineBar ? (c2 = i2.globals.yAxisScale[0].niceMin + a2.startX * r2.invertedYRatio, d2 = i2.globals.yAxisScale[0].niceMin + a2.endX * r2.invertedYRatio) : (c2 = i2.globals.xAxisScale.niceMin + a2.startX * r2.xRatio, d2 = i2.globals.xAxisScale.niceMin + a2.endX * r2.xRatio);
          var u2 = [], h2 = [];
          if (i2.config.yaxis.forEach(function(t5, e5) {
            u2.push(i2.globals.yAxisScale[e5].niceMax - r2.yRatio[e5] * a2.startY), h2.push(i2.globals.yAxisScale[e5].niceMax - r2.yRatio[e5] * a2.endY);
          }), a2.dragged && (a2.dragX > 10 || a2.dragY > 10) && c2 !== d2) {
            if (i2.globals.zoomEnabled) {
              var p2 = b.clone(i2.globals.initialConfig.yaxis), f2 = b.clone(i2.globals.initialConfig.xaxis);
              if (i2.globals.zoomed = true, i2.config.xaxis.convertedCatToNumeric && (c2 = Math.floor(c2), d2 = Math.floor(d2), c2 < 1 && (c2 = 1, d2 = i2.globals.dataPoints), d2 - c2 < 2 && (d2 = c2 + 1)), n4 !== "xy" && n4 !== "x" || (f2 = { min: c2, max: d2 }), n4 !== "xy" && n4 !== "y" || p2.forEach(function(t5, e5) {
                p2[e5].min = h2[e5], p2[e5].max = u2[e5];
              }), i2.config.chart.zoom.autoScaleYaxis) {
                var g2 = new Z(a2.ctx);
                p2 = g2.autoScaleY(a2.ctx, p2, { xaxis: f2 });
              }
              if (o2) {
                var m2 = o2.getBeforeZoomRange(f2, p2);
                m2 && (f2 = m2.xaxis ? m2.xaxis : f2, p2 = m2.yaxis ? m2.yaxis : p2);
              }
              var v2 = { xaxis: f2 };
              i2.config.chart.group || (v2.yaxis = p2), a2.ctx.updateHelpers._updateOptions(v2, false, a2.w.config.chart.animations.dynamicAnimation.enabled), typeof i2.config.chart.events.zoomed == "function" && o2.zoomCallback(f2, p2);
            } else if (i2.globals.selectionEnabled) {
              var y2, x2 = null;
              y2 = { min: c2, max: d2 }, n4 !== "xy" && n4 !== "y" || (x2 = b.clone(i2.config.yaxis)).forEach(function(t5, e5) {
                x2[e5].min = h2[e5], x2[e5].max = u2[e5];
              }), i2.globals.selection = a2.selection, typeof i2.config.chart.events.selection == "function" && i2.config.chart.events.selection(a2.ctx, { xaxis: y2, yaxis: x2 });
            }
          }
        } }, { key: "panDragging", value: function(t4) {
          var e4 = t4.context, n4 = this.w, i2 = e4;
          if (n4.globals.lastClientPosition.x !== void 0) {
            var a2 = n4.globals.lastClientPosition.x - i2.clientX, r2 = n4.globals.lastClientPosition.y - i2.clientY;
            Math.abs(a2) > Math.abs(r2) && a2 > 0 ? this.moveDirection = "left" : Math.abs(a2) > Math.abs(r2) && a2 < 0 ? this.moveDirection = "right" : Math.abs(r2) > Math.abs(a2) && r2 > 0 ? this.moveDirection = "up" : Math.abs(r2) > Math.abs(a2) && r2 < 0 && (this.moveDirection = "down");
          }
          n4.globals.lastClientPosition = { x: i2.clientX, y: i2.clientY };
          var o2 = n4.globals.isTimelineBar ? n4.globals.minY : n4.globals.minX, s2 = n4.globals.isTimelineBar ? n4.globals.maxY : n4.globals.maxX;
          n4.config.xaxis.convertedCatToNumeric || i2.panScrolled(o2, s2);
        } }, { key: "delayedPanScrolled", value: function() {
          var t4 = this.w, e4 = t4.globals.minX, n4 = t4.globals.maxX, i2 = (t4.globals.maxX - t4.globals.minX) / 2;
          this.moveDirection === "left" ? (e4 = t4.globals.minX + i2, n4 = t4.globals.maxX + i2) : this.moveDirection === "right" && (e4 = t4.globals.minX - i2, n4 = t4.globals.maxX - i2), e4 = Math.floor(e4), n4 = Math.floor(n4), this.updateScrolledChart({ xaxis: { min: e4, max: n4 } }, e4, n4);
        } }, { key: "panScrolled", value: function(t4, e4) {
          var n4 = this.w, i2 = this.xyRatios, a2 = b.clone(n4.globals.initialConfig.yaxis), r2 = i2.xRatio, o2 = n4.globals.minX, s2 = n4.globals.maxX;
          n4.globals.isTimelineBar && (r2 = i2.invertedYRatio, o2 = n4.globals.minY, s2 = n4.globals.maxY), this.moveDirection === "left" ? (t4 = o2 + n4.globals.gridWidth / 15 * r2, e4 = s2 + n4.globals.gridWidth / 15 * r2) : this.moveDirection === "right" && (t4 = o2 - n4.globals.gridWidth / 15 * r2, e4 = s2 - n4.globals.gridWidth / 15 * r2), n4.globals.isTimelineBar || (t4 < n4.globals.initialMinX || e4 > n4.globals.initialMaxX) && (t4 = o2, e4 = s2);
          var l2 = { min: t4, max: e4 };
          n4.config.chart.zoom.autoScaleYaxis && (a2 = new Z(this.ctx).autoScaleY(this.ctx, a2, { xaxis: l2 }));
          var c2 = { xaxis: { min: t4, max: e4 } };
          n4.config.chart.group || (c2.yaxis = a2), this.updateScrolledChart(c2, t4, e4);
        } }, { key: "updateScrolledChart", value: function(t4, e4, n4) {
          var i2 = this.w;
          this.ctx.updateHelpers._updateOptions(t4, false, false), typeof i2.config.chart.events.scrolled == "function" && i2.config.chart.events.scrolled(this.ctx, { xaxis: { min: e4, max: n4 } });
        } }]), n3;
      }(), gt = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.ttCtx = e3, this.ctx = e3.ctx;
        }
        return s(t3, [{ key: "getNearestValues", value: function(t4) {
          var e3 = t4.hoverArea, n3 = t4.elGrid, i2 = t4.clientX, a2 = t4.clientY, r2 = this.w, o2 = r2.globals.gridWidth, s2 = r2.globals.gridHeight, l2 = o2 / (r2.globals.dataPoints - 1), c2 = s2 / r2.globals.dataPoints, d2 = n3.getBoundingClientRect(), u2 = this.hasBars();
          !r2.globals.comboCharts && !u2 || r2.config.xaxis.convertedCatToNumeric || (l2 = o2 / r2.globals.dataPoints);
          var h2 = i2 - d2.left - r2.globals.barPadForNumericAxis, p2 = a2 - d2.top;
          h2 < 0 || p2 < 0 || h2 > r2.globals.gridWidth || p2 > r2.globals.gridHeight ? (e3.classList.remove("hovering-zoom"), e3.classList.remove("hovering-pan")) : r2.globals.zoomEnabled ? (e3.classList.remove("hovering-pan"), e3.classList.add("hovering-zoom")) : r2.globals.panEnabled && (e3.classList.remove("hovering-zoom"), e3.classList.add("hovering-pan"));
          var f2 = Math.round(h2 / l2), g2 = Math.floor(p2 / c2);
          u2 && !r2.config.xaxis.convertedCatToNumeric && (f2 = Math.ceil(h2 / l2), f2 -= 1);
          for (var m2, v2 = null, y2 = null, x2 = [], _2 = 0; _2 < r2.globals.seriesXvalues.length; _2++)
            x2.push([r2.globals.seriesXvalues[_2][0] - 1e-6].concat(r2.globals.seriesXvalues[_2]));
          return x2 = x2.map(function(t5) {
            return t5.filter(function(t6) {
              return t6;
            });
          }), m2 = r2.globals.seriesYvalues.map(function(t5) {
            return t5.filter(function(t6) {
              return b.isNumber(t6);
            });
          }), r2.globals.isXNumeric && (v2 = (y2 = this.closestInMultiArray(h2, p2, x2, m2)).index, f2 = y2.j, v2 !== null && (x2 = r2.globals.seriesXvalues[v2], f2 = (y2 = this.closestInArray(h2, x2)).index)), r2.globals.capturedSeriesIndex = v2 === null ? -1 : v2, (!f2 || f2 < 1) && (f2 = 0), r2.globals.isBarHorizontal ? r2.globals.capturedDataPointIndex = g2 : r2.globals.capturedDataPointIndex = f2, { capturedSeries: v2, j: r2.globals.isBarHorizontal ? g2 : f2, hoverX: h2, hoverY: p2 };
        } }, { key: "closestInMultiArray", value: function(t4, e3, n3, i2) {
          var a2 = this.w, r2 = 0, o2 = null, s2 = -1;
          a2.globals.series.length > 1 ? r2 = this.getFirstActiveXArray(n3) : o2 = 0;
          var l2 = i2[r2][0], c2 = n3[r2][0], d2 = Math.abs(t4 - c2), u2 = Math.abs(e3 - l2), h2 = u2 + d2;
          return i2.map(function(a3, r3) {
            a3.map(function(a4, l3) {
              var c3 = Math.abs(e3 - i2[r3][l3]), p2 = Math.abs(t4 - n3[r3][l3]), f2 = p2 + c3;
              f2 < h2 && (h2 = f2, d2 = p2, u2 = c3, o2 = r3, s2 = l3);
            });
          }), { index: o2, j: s2 };
        } }, { key: "getFirstActiveXArray", value: function(t4) {
          for (var e3 = 0, n3 = t4.map(function(t5, e4) {
            return t5.length > 0 ? e4 : -1;
          }), i2 = 0; i2 < n3.length; i2++)
            if (n3[i2] !== -1) {
              e3 = n3[i2];
              break;
            }
          return e3;
        } }, { key: "closestInArray", value: function(t4, e3) {
          for (var n3 = e3[0], i2 = null, a2 = Math.abs(t4 - n3), r2 = 0; r2 < e3.length; r2++) {
            var o2 = Math.abs(t4 - e3[r2]);
            o2 < a2 && (a2 = o2, i2 = r2);
          }
          return { index: i2 };
        } }, { key: "isXoverlap", value: function(t4) {
          var e3 = [], n3 = this.w.globals.seriesX.filter(function(t5) {
            return t5[0] !== void 0;
          });
          if (n3.length > 0)
            for (var i2 = 0; i2 < n3.length - 1; i2++)
              n3[i2][t4] !== void 0 && n3[i2 + 1][t4] !== void 0 && n3[i2][t4] !== n3[i2 + 1][t4] && e3.push("unEqual");
          return e3.length === 0;
        } }, { key: "isInitialSeriesSameLen", value: function() {
          for (var t4 = true, e3 = this.w.globals.initialSeries, n3 = 0; n3 < e3.length - 1; n3++)
            if (e3[n3].data.length !== e3[n3 + 1].data.length) {
              t4 = false;
              break;
            }
          return t4;
        } }, { key: "getBarsHeight", value: function(t4) {
          return m(t4).reduce(function(t5, e3) {
            return t5 + e3.getBBox().height;
          }, 0);
        } }, { key: "getElMarkers", value: function() {
          return this.w.globals.dom.baseEl.querySelectorAll(" .apexcharts-series-markers");
        } }, { key: "getAllMarkers", value: function() {
          var t4 = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers-wrap");
          (t4 = m(t4)).sort(function(t5, e4) {
            return Number(e4.getAttribute("data:realIndex")) < Number(t5.getAttribute("data:realIndex")) ? 0 : -1;
          });
          var e3 = [];
          return t4.forEach(function(t5) {
            e3.push(t5.querySelector(".apexcharts-marker"));
          }), e3;
        } }, { key: "hasMarkers", value: function() {
          return this.getElMarkers().length > 0;
        } }, { key: "getElBars", value: function() {
          return this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series");
        } }, { key: "hasBars", value: function() {
          return this.getElBars().length > 0;
        } }, { key: "getHoverMarkerSize", value: function(t4) {
          var e3 = this.w, n3 = e3.config.markers.hover.size;
          return n3 === void 0 && (n3 = e3.globals.markers.size[t4] + e3.config.markers.hover.sizeOffset), n3;
        } }, { key: "toggleAllTooltipSeriesGroups", value: function(t4) {
          var e3 = this.w, n3 = this.ttCtx;
          n3.allTooltipSeriesGroups.length === 0 && (n3.allTooltipSeriesGroups = e3.globals.dom.baseEl.querySelectorAll(".apexcharts-tooltip-series-group"));
          for (var i2 = n3.allTooltipSeriesGroups, a2 = 0; a2 < i2.length; a2++)
            t4 === "enable" ? (i2[a2].classList.add("apexcharts-active"), i2[a2].style.display = e3.config.tooltip.items.display) : (i2[a2].classList.remove("apexcharts-active"), i2[a2].style.display = "none");
        } }]), t3;
      }(), mt = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.ctx = e3.ctx, this.ttCtx = e3, this.tooltipUtil = new gt(e3);
        }
        return s(t3, [{ key: "drawSeriesTexts", value: function(t4) {
          var e3 = t4.shared, n3 = e3 === void 0 || e3, i2 = t4.ttItems, a2 = t4.i, r2 = a2 === void 0 ? 0 : a2, o2 = t4.j, s2 = o2 === void 0 ? null : o2, l2 = t4.y1, c2 = t4.y2, d2 = t4.e, u2 = this.w;
          u2.config.tooltip.custom !== void 0 ? this.handleCustomTooltip({ i: r2, j: s2, y1: l2, y2: c2, w: u2 }) : this.toggleActiveInactiveSeries(n3);
          var h2 = this.getValuesToPrint({ i: r2, j: s2 });
          this.printLabels({ i: r2, j: s2, values: h2, ttItems: i2, shared: n3, e: d2 });
          var p2 = this.ttCtx.getElTooltip();
          this.ttCtx.tooltipRect.ttWidth = p2.getBoundingClientRect().width, this.ttCtx.tooltipRect.ttHeight = p2.getBoundingClientRect().height;
        } }, { key: "printLabels", value: function(t4) {
          var e3, n3 = this, i2 = t4.i, a2 = t4.j, r2 = t4.values, o2 = t4.ttItems, s2 = t4.shared, l2 = t4.e, c2 = this.w, u2 = [], h2 = function(t5) {
            return c2.globals.seriesGoals[t5] && c2.globals.seriesGoals[t5][a2] && Array.isArray(c2.globals.seriesGoals[t5][a2]);
          }, p2 = r2.xVal, f2 = r2.zVal, g2 = r2.xAxisTTVal, m2 = "", v2 = c2.globals.colors[i2];
          a2 !== null && c2.config.plotOptions.bar.distributed && (v2 = c2.globals.colors[a2]);
          for (var b2 = function(t5, r3) {
            var b3 = n3.getFormatters(i2);
            m2 = n3.getSeriesName({ fn: b3.yLbTitleFormatter, index: i2, seriesIndex: i2, j: a2 }), c2.config.chart.type === "treemap" && (m2 = b3.yLbTitleFormatter(String(c2.config.series[i2].data[a2].x), { series: c2.globals.series, seriesIndex: i2, dataPointIndex: a2, w: c2 }));
            var y3 = c2.config.tooltip.inverseOrder ? r3 : t5;
            if (c2.globals.axisCharts) {
              var x3 = function(t6) {
                return b3.yLbFormatter(c2.globals.series[t6][a2], { series: c2.globals.series, seriesIndex: t6, dataPointIndex: a2, w: c2 });
              };
              s2 ? (b3 = n3.getFormatters(y3), m2 = n3.getSeriesName({ fn: b3.yLbTitleFormatter, index: y3, seriesIndex: i2, j: a2 }), v2 = c2.globals.colors[y3], e3 = x3(y3), h2(y3) && (u2 = c2.globals.seriesGoals[y3][a2].map(function(t6) {
                return { attrs: t6, val: b3.yLbFormatter(t6.value, { seriesIndex: y3, dataPointIndex: a2, w: c2 }) };
              }))) : (l2 && l2.target && l2.target.getAttribute("fill") && (v2 = l2.target.getAttribute("fill")), e3 = x3(i2), h2(i2) && Array.isArray(c2.globals.seriesGoals[i2][a2]) && (u2 = c2.globals.seriesGoals[i2][a2].map(function(t6) {
                return { attrs: t6, val: b3.yLbFormatter(t6.value, { seriesIndex: i2, dataPointIndex: a2, w: c2 }) };
              })));
            }
            a2 === null && (e3 = b3.yLbFormatter(c2.globals.series[i2], d(d({}, c2), {}, { seriesIndex: i2, dataPointIndex: i2 }))), n3.DOMHandling({ i: i2, t: y3, j: a2, ttItems: o2, values: { val: e3, goalVals: u2, xVal: p2, xAxisTTVal: g2, zVal: f2 }, seriesName: m2, shared: s2, pColor: v2 });
          }, y2 = 0, x2 = c2.globals.series.length - 1; y2 < c2.globals.series.length; y2++, x2--)
            b2(y2, x2);
        } }, { key: "getFormatters", value: function(t4) {
          var e3, n3 = this.w, i2 = n3.globals.yLabelFormatters[t4];
          return n3.globals.ttVal !== void 0 ? Array.isArray(n3.globals.ttVal) ? (i2 = n3.globals.ttVal[t4] && n3.globals.ttVal[t4].formatter, e3 = n3.globals.ttVal[t4] && n3.globals.ttVal[t4].title && n3.globals.ttVal[t4].title.formatter) : (i2 = n3.globals.ttVal.formatter, typeof n3.globals.ttVal.title.formatter == "function" && (e3 = n3.globals.ttVal.title.formatter)) : e3 = n3.config.tooltip.y.title.formatter, typeof i2 != "function" && (i2 = n3.globals.yLabelFormatters[0] ? n3.globals.yLabelFormatters[0] : function(t5) {
            return t5;
          }), typeof e3 != "function" && (e3 = function(t5) {
            return t5;
          }), { yLbFormatter: i2, yLbTitleFormatter: e3 };
        } }, { key: "getSeriesName", value: function(t4) {
          var e3 = t4.fn, n3 = t4.index, i2 = t4.seriesIndex, a2 = t4.j, r2 = this.w;
          return e3(String(r2.globals.seriesNames[n3]), { series: r2.globals.series, seriesIndex: i2, dataPointIndex: a2, w: r2 });
        } }, { key: "DOMHandling", value: function(t4) {
          t4.i;
          var e3 = t4.t, n3 = t4.j, i2 = t4.ttItems, a2 = t4.values, r2 = t4.seriesName, o2 = t4.shared, s2 = t4.pColor, l2 = this.w, c2 = this.ttCtx, d2 = a2.val, u2 = a2.goalVals, h2 = a2.xVal, p2 = a2.xAxisTTVal, f2 = a2.zVal, g2 = null;
          g2 = i2[e3].children, l2.config.tooltip.fillSeriesColor && (i2[e3].style.backgroundColor = s2, g2[0].style.display = "none"), c2.showTooltipTitle && (c2.tooltipTitle === null && (c2.tooltipTitle = l2.globals.dom.baseEl.querySelector(".apexcharts-tooltip-title")), c2.tooltipTitle.innerHTML = h2), c2.blxaxisTooltip && (c2.xaxisTooltipText.innerHTML = p2 !== "" ? p2 : h2);
          var m2 = i2[e3].querySelector(".apexcharts-tooltip-text-y-label");
          m2 && (m2.innerHTML = r2 || "");
          var v2 = i2[e3].querySelector(".apexcharts-tooltip-text-y-value");
          v2 && (v2.innerHTML = d2 !== void 0 ? d2 : ""), g2[0] && g2[0].classList.contains("apexcharts-tooltip-marker") && (l2.config.tooltip.marker.fillColors && Array.isArray(l2.config.tooltip.marker.fillColors) && (s2 = l2.config.tooltip.marker.fillColors[e3]), g2[0].style.backgroundColor = s2), l2.config.tooltip.marker.show || (g2[0].style.display = "none");
          var b2 = i2[e3].querySelector(".apexcharts-tooltip-text-goals-label"), y2 = i2[e3].querySelector(".apexcharts-tooltip-text-goals-value");
          if (u2.length && l2.globals.seriesGoals[e3]) {
            var x2 = function() {
              var t5 = "<div >", e4 = "<div>";
              u2.forEach(function(n4, i3) {
                t5 += ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '.concat(n4.attrs.strokeColor, '; height: 3px; border-radius: 0; top: 5px;"></span> ').concat(n4.attrs.name, "</div>"), e4 += "<div>".concat(n4.val, "</div>");
              }), b2.innerHTML = t5 + "</div>", y2.innerHTML = e4 + "</div>";
            };
            o2 ? l2.globals.seriesGoals[e3][n3] && Array.isArray(l2.globals.seriesGoals[e3][n3]) ? x2() : (b2.innerHTML = "", y2.innerHTML = "") : x2();
          } else
            b2.innerHTML = "", y2.innerHTML = "";
          f2 !== null && (i2[e3].querySelector(".apexcharts-tooltip-text-z-label").innerHTML = l2.config.tooltip.z.title, i2[e3].querySelector(".apexcharts-tooltip-text-z-value").innerHTML = f2 !== void 0 ? f2 : ""), o2 && g2[0] && (d2 == null || l2.globals.collapsedSeriesIndices.indexOf(e3) > -1 ? g2[0].parentNode.style.display = "none" : g2[0].parentNode.style.display = l2.config.tooltip.items.display);
        } }, { key: "toggleActiveInactiveSeries", value: function(t4) {
          var e3 = this.w;
          if (t4)
            this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
          else {
            this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
            var n3 = e3.globals.dom.baseEl.querySelector(".apexcharts-tooltip-series-group");
            n3 && (n3.classList.add("apexcharts-active"), n3.style.display = e3.config.tooltip.items.display);
          }
        } }, { key: "getValuesToPrint", value: function(t4) {
          var e3 = t4.i, n3 = t4.j, i2 = this.w, a2 = this.ctx.series.filteredSeriesX(), r2 = "", o2 = "", s2 = null, l2 = null, c2 = { series: i2.globals.series, seriesIndex: e3, dataPointIndex: n3, w: i2 }, d2 = i2.globals.ttZFormatter;
          n3 === null ? l2 = i2.globals.series[e3] : i2.globals.isXNumeric && i2.config.chart.type !== "treemap" ? (r2 = a2[e3][n3], a2[e3].length === 0 && (r2 = a2[this.tooltipUtil.getFirstActiveXArray(a2)][n3])) : r2 = i2.globals.labels[n3] !== void 0 ? i2.globals.labels[n3] : "";
          var u2 = r2;
          return r2 = i2.globals.isXNumeric && i2.config.xaxis.type === "datetime" ? new V(this.ctx).xLabelFormat(i2.globals.ttKeyFormatter, u2, u2, { i: void 0, dateFormatter: new F(this.ctx).formatDate, w: this.w }) : i2.globals.isBarHorizontal ? i2.globals.yLabelFormatters[0](u2, c2) : i2.globals.xLabelFormatter(u2, c2), i2.config.tooltip.x.formatter !== void 0 && (r2 = i2.globals.ttKeyFormatter(u2, c2)), i2.globals.seriesZ.length > 0 && i2.globals.seriesZ[e3].length > 0 && (s2 = d2(i2.globals.seriesZ[e3][n3], i2)), o2 = typeof i2.config.xaxis.tooltip.formatter == "function" ? i2.globals.xaxisTooltipFormatter(u2, c2) : r2, { val: Array.isArray(l2) ? l2.join(" ") : l2, xVal: Array.isArray(r2) ? r2.join(" ") : r2, xAxisTTVal: Array.isArray(o2) ? o2.join(" ") : o2, zVal: s2 };
        } }, { key: "handleCustomTooltip", value: function(t4) {
          var e3 = t4.i, n3 = t4.j, i2 = t4.y1, a2 = t4.y2, r2 = t4.w, o2 = this.ttCtx.getElTooltip(), s2 = r2.config.tooltip.custom;
          Array.isArray(s2) && s2[e3] && (s2 = s2[e3]), o2.innerHTML = s2({ ctx: this.ctx, series: r2.globals.series, seriesIndex: e3, dataPointIndex: n3, y1: i2, y2: a2, w: r2 });
        } }]), t3;
      }(), vt = function() {
        function t3(e3) {
          r(this, t3), this.ttCtx = e3, this.ctx = e3.ctx, this.w = e3.w;
        }
        return s(t3, [{ key: "moveXCrosshairs", value: function(t4) {
          var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null, n3 = this.ttCtx, i2 = this.w, a2 = n3.getElXCrosshairs(), r2 = t4 - n3.xcrosshairsWidth / 2, o2 = i2.globals.labels.slice().length;
          if (e3 !== null && (r2 = i2.globals.gridWidth / o2 * e3), a2 !== null && (a2.setAttribute("x", r2), a2.setAttribute("x1", r2), a2.setAttribute("x2", r2), a2.setAttribute("y2", i2.globals.gridHeight), a2.classList.add("apexcharts-active")), r2 < 0 && (r2 = 0), r2 > i2.globals.gridWidth && (r2 = i2.globals.gridWidth), n3.blxaxisTooltip) {
            var s2 = r2;
            i2.config.xaxis.crosshairs.width !== "tickWidth" && i2.config.xaxis.crosshairs.width !== "barWidth" || (s2 = r2 + n3.xcrosshairsWidth / 2), this.moveXAxisTooltip(s2);
          }
        } }, { key: "moveYCrosshairs", value: function(t4) {
          var e3 = this.ttCtx;
          e3.ycrosshairs !== null && _.setAttrs(e3.ycrosshairs, { y1: t4, y2: t4 }), e3.ycrosshairsHidden !== null && _.setAttrs(e3.ycrosshairsHidden, { y1: t4, y2: t4 });
        } }, { key: "moveXAxisTooltip", value: function(t4) {
          var e3 = this.w, n3 = this.ttCtx;
          if (n3.xaxisTooltip !== null) {
            n3.xaxisTooltip.classList.add("apexcharts-active");
            var i2, a2 = n3.xaxisOffY + e3.config.xaxis.tooltip.offsetY + e3.globals.translateY + 1 + e3.config.xaxis.offsetY;
            if (t4 -= n3.xaxisTooltip.getBoundingClientRect().width / 2, !isNaN(t4))
              t4 += e3.globals.translateX, i2 = new _(this.ctx).getTextRects(n3.xaxisTooltipText.innerHTML), n3.xaxisTooltipText.style.minWidth = i2.width + "px", n3.xaxisTooltip.style.left = t4 + "px", n3.xaxisTooltip.style.top = a2 + "px";
          }
        } }, { key: "moveYAxisTooltip", value: function(t4) {
          var e3 = this.w, n3 = this.ttCtx;
          n3.yaxisTTEls === null && (n3.yaxisTTEls = e3.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
          var i2 = parseInt(n3.ycrosshairsHidden.getAttribute("y1"), 10), a2 = e3.globals.translateY + i2, r2 = n3.yaxisTTEls[t4].getBoundingClientRect().height, o2 = e3.globals.translateYAxisX[t4] - 2;
          e3.config.yaxis[t4].opposite && (o2 -= 26), a2 -= r2 / 2, e3.globals.ignoreYAxisIndexes.indexOf(t4) === -1 ? (n3.yaxisTTEls[t4].classList.add("apexcharts-active"), n3.yaxisTTEls[t4].style.top = a2 + "px", n3.yaxisTTEls[t4].style.left = o2 + e3.config.yaxis[t4].tooltip.offsetX + "px") : n3.yaxisTTEls[t4].classList.remove("apexcharts-active");
        } }, { key: "moveTooltip", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, i2 = this.w, a2 = this.ttCtx, r2 = a2.getElTooltip(), o2 = a2.tooltipRect, s2 = n3 !== null ? parseFloat(n3) : 1, l2 = parseFloat(t4) + s2 + 5, c2 = parseFloat(e3) + s2 / 2;
          if (l2 > i2.globals.gridWidth / 2 && (l2 = l2 - o2.ttWidth - s2 - 15), l2 > i2.globals.gridWidth - o2.ttWidth - 10 && (l2 = i2.globals.gridWidth - o2.ttWidth), l2 < -20 && (l2 = -20), i2.config.tooltip.followCursor) {
            var d2 = a2.getElGrid(), u2 = d2.getBoundingClientRect();
            c2 = a2.e.clientY + i2.globals.translateY - u2.top - o2.ttHeight / 2;
          } else
            i2.globals.isBarHorizontal ? c2 -= o2.ttHeight : (o2.ttHeight / 2 + c2 > i2.globals.gridHeight && (c2 = i2.globals.gridHeight - o2.ttHeight + i2.globals.translateY), c2 < 0 && (c2 = 0));
          isNaN(l2) || (l2 += i2.globals.translateX, r2.style.left = l2 + "px", r2.style.top = c2 + "px");
        } }, { key: "moveMarkers", value: function(t4, e3) {
          var n3 = this.w, i2 = this.ttCtx;
          if (n3.globals.markers.size[t4] > 0)
            for (var a2 = n3.globals.dom.baseEl.querySelectorAll(" .apexcharts-series[data\\:realIndex='".concat(t4, "'] .apexcharts-marker")), r2 = 0; r2 < a2.length; r2++)
              parseInt(a2[r2].getAttribute("rel"), 10) === e3 && (i2.marker.resetPointsSize(), i2.marker.enlargeCurrentPoint(e3, a2[r2]));
          else
            i2.marker.resetPointsSize(), this.moveDynamicPointOnHover(e3, t4);
        } }, { key: "moveDynamicPointOnHover", value: function(t4, e3) {
          var n3, i2, a2 = this.w, r2 = this.ttCtx, o2 = a2.globals.pointsArray, s2 = r2.tooltipUtil.getHoverMarkerSize(e3), l2 = a2.config.series[e3].type;
          if (!l2 || l2 !== "column" && l2 !== "candlestick" && l2 !== "boxPlot") {
            n3 = o2[e3][t4][0], i2 = o2[e3][t4][1] ? o2[e3][t4][1] : 0;
            var c2 = a2.globals.dom.baseEl.querySelector(".apexcharts-series[data\\:realIndex='".concat(e3, "'] .apexcharts-series-markers circle"));
            c2 && i2 < a2.globals.gridHeight && i2 > 0 && (c2.setAttribute("r", s2), c2.setAttribute("cx", n3), c2.setAttribute("cy", i2)), this.moveXCrosshairs(n3), r2.fixedTooltip || this.moveTooltip(n3, i2, s2);
          }
        } }, { key: "moveDynamicPointsOnHover", value: function(t4) {
          var e3, n3 = this.ttCtx, i2 = n3.w, a2 = 0, r2 = 0, o2 = i2.globals.pointsArray;
          e3 = new j(this.ctx).getActiveConfigSeriesIndex(true);
          var s2 = n3.tooltipUtil.getHoverMarkerSize(e3);
          o2[e3] && (a2 = o2[e3][t4][0], r2 = o2[e3][t4][1]);
          var l2 = n3.tooltipUtil.getAllMarkers();
          if (l2 !== null)
            for (var c2 = 0; c2 < i2.globals.series.length; c2++) {
              var d2 = o2[c2];
              if (i2.globals.comboCharts && d2 === void 0 && l2.splice(c2, 0, null), d2 && d2.length) {
                var u2 = o2[c2][t4][1];
                l2[c2].setAttribute("cx", a2), u2 !== null && !isNaN(u2) && u2 < i2.globals.gridHeight && u2 > 0 ? (l2[c2] && l2[c2].setAttribute("r", s2), l2[c2] && l2[c2].setAttribute("cy", u2)) : l2[c2] && l2[c2].setAttribute("r", 0);
              }
            }
          if (this.moveXCrosshairs(a2), !n3.fixedTooltip) {
            var h2 = r2 || i2.globals.gridHeight;
            this.moveTooltip(a2, h2, s2);
          }
        } }, { key: "moveStickyTooltipOverBars", value: function(t4) {
          var e3 = this.w, n3 = this.ttCtx, i2 = e3.globals.columnSeries ? e3.globals.columnSeries.length : e3.globals.series.length, a2 = i2 >= 2 && i2 % 2 == 0 ? Math.floor(i2 / 2) : Math.floor(i2 / 2) + 1;
          e3.globals.isBarHorizontal && (a2 = new j(this.ctx).getActiveConfigSeriesIndex(false, "desc") + 1);
          var r2 = e3.globals.dom.baseEl.querySelector(".apexcharts-bar-series .apexcharts-series[rel='".concat(a2, "'] path[j='").concat(t4, "'], .apexcharts-candlestick-series .apexcharts-series[rel='").concat(a2, "'] path[j='").concat(t4, "'], .apexcharts-boxPlot-series .apexcharts-series[rel='").concat(a2, "'] path[j='").concat(t4, "'], .apexcharts-rangebar-series .apexcharts-series[rel='").concat(a2, "'] path[j='").concat(t4, "']")), o2 = r2 ? parseFloat(r2.getAttribute("cx")) : 0, s2 = r2 ? parseFloat(r2.getAttribute("cy")) : 0, l2 = r2 ? parseFloat(r2.getAttribute("barWidth")) : 0, c2 = r2 ? parseFloat(r2.getAttribute("barHeight")) : 0, d2 = n3.getElGrid().getBoundingClientRect();
          if (e3.globals.isXNumeric ? (o2 -= i2 % 2 != 0 ? l2 / 2 : 0, r2 && (r2.classList.contains("apexcharts-candlestick-area") || r2.classList.contains("apexcharts-boxPlot-area")) && e3.globals.comboCharts && (o2 -= l2 / 2)) : e3.globals.isBarHorizontal || (o2 = n3.xAxisTicksPositions[t4 - 1] + n3.dataPointsDividedWidth / 2, isNaN(o2) && (o2 = n3.xAxisTicksPositions[t4] - n3.dataPointsDividedWidth / 2)), e3.globals.isBarHorizontal ? s2 += c2 / 3 : s2 = n3.e.clientY - d2.top - n3.tooltipRect.ttHeight / 2, e3.globals.isBarHorizontal || this.moveXCrosshairs(o2), !n3.fixedTooltip) {
            var u2 = s2 || e3.globals.gridHeight;
            this.moveTooltip(o2, u2);
          }
        } }]), t3;
      }(), bt = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.ttCtx = e3, this.ctx = e3.ctx, this.tooltipPosition = new vt(e3);
        }
        return s(t3, [{ key: "drawDynamicPoints", value: function() {
          var t4 = this.w, e3 = new _(this.ctx), n3 = new M(this.ctx), i2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
          i2 = m(i2), t4.config.chart.stacked && i2.sort(function(t5, e4) {
            return parseFloat(t5.getAttribute("data:realIndex")) - parseFloat(e4.getAttribute("data:realIndex"));
          });
          for (var a2 = 0; a2 < i2.length; a2++) {
            var r2 = i2[a2].querySelector(".apexcharts-series-markers-wrap");
            if (r2 !== null) {
              var o2 = void 0, s2 = "apexcharts-marker w".concat((Math.random() + 1).toString(36).substring(4));
              t4.config.chart.type !== "line" && t4.config.chart.type !== "area" || t4.globals.comboCharts || t4.config.tooltip.intersect || (s2 += " no-pointer-events");
              var l2 = n3.getMarkerConfig(s2, a2);
              (o2 = e3.drawMarker(0, 0, l2)).node.setAttribute("default-marker-size", 0);
              var c2 = document.createElementNS(t4.globals.SVGNS, "g");
              c2.classList.add("apexcharts-series-markers"), c2.appendChild(o2.node), r2.appendChild(c2);
            }
          }
        } }, { key: "enlargeCurrentPoint", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null, i2 = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null, a2 = this.w;
          a2.config.chart.type !== "bubble" && this.newPointSize(t4, e3);
          var r2 = e3.getAttribute("cx"), o2 = e3.getAttribute("cy");
          if (n3 !== null && i2 !== null && (r2 = n3, o2 = i2), this.tooltipPosition.moveXCrosshairs(r2), !this.fixedTooltip) {
            if (a2.config.chart.type === "radar") {
              var s2 = this.ttCtx.getElGrid(), l2 = s2.getBoundingClientRect();
              r2 = this.ttCtx.e.clientX - l2.left;
            }
            this.tooltipPosition.moveTooltip(r2, o2, a2.config.markers.hover.size);
          }
        } }, { key: "enlargePoints", value: function(t4) {
          for (var e3 = this.w, n3 = this, i2 = this.ttCtx, a2 = t4, r2 = e3.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), o2 = e3.config.markers.hover.size, s2 = 0; s2 < r2.length; s2++) {
            var l2 = r2[s2].getAttribute("rel"), c2 = r2[s2].getAttribute("index");
            if (o2 === void 0 && (o2 = e3.globals.markers.size[c2] + e3.config.markers.hover.sizeOffset), a2 === parseInt(l2, 10)) {
              n3.newPointSize(a2, r2[s2]);
              var d2 = r2[s2].getAttribute("cx"), u2 = r2[s2].getAttribute("cy");
              n3.tooltipPosition.moveXCrosshairs(d2), i2.fixedTooltip || n3.tooltipPosition.moveTooltip(d2, u2, o2);
            } else
              n3.oldPointSize(r2[s2]);
          }
        } }, { key: "newPointSize", value: function(t4, e3) {
          var n3 = this.w, i2 = n3.config.markers.hover.size, a2 = t4 === 0 ? e3.parentNode.firstChild : e3.parentNode.lastChild;
          if (a2.getAttribute("default-marker-size") !== "0") {
            var r2 = parseInt(a2.getAttribute("index"), 10);
            i2 === void 0 && (i2 = n3.globals.markers.size[r2] + n3.config.markers.hover.sizeOffset), i2 < 0 && (i2 = 0), a2.setAttribute("r", i2);
          }
        } }, { key: "oldPointSize", value: function(t4) {
          var e3 = parseFloat(t4.getAttribute("default-marker-size"));
          t4.setAttribute("r", e3);
        } }, { key: "resetPointsSize", value: function() {
          for (var t4 = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker"), e3 = 0; e3 < t4.length; e3++) {
            var n3 = parseFloat(t4[e3].getAttribute("default-marker-size"));
            b.isNumber(n3) && n3 >= 0 ? t4[e3].setAttribute("r", n3) : t4[e3].setAttribute("r", 0);
          }
        } }]), t3;
      }(), yt = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.ttCtx = e3;
        }
        return s(t3, [{ key: "getAttr", value: function(t4, e3) {
          return parseFloat(t4.target.getAttribute(e3));
        } }, { key: "handleHeatTreeTooltip", value: function(t4) {
          var e3 = t4.e, n3 = t4.opt, i2 = t4.x, a2 = t4.y, r2 = t4.type, o2 = this.ttCtx, s2 = this.w;
          if (e3.target.classList.contains("apexcharts-".concat(r2, "-rect"))) {
            var l2 = this.getAttr(e3, "i"), c2 = this.getAttr(e3, "j"), d2 = this.getAttr(e3, "cx"), u2 = this.getAttr(e3, "cy"), h2 = this.getAttr(e3, "width"), p2 = this.getAttr(e3, "height");
            if (o2.tooltipLabels.drawSeriesTexts({ ttItems: n3.ttItems, i: l2, j: c2, shared: false, e: e3 }), s2.globals.capturedSeriesIndex = l2, s2.globals.capturedDataPointIndex = c2, i2 = d2 + o2.tooltipRect.ttWidth / 2 + h2, a2 = u2 + o2.tooltipRect.ttHeight / 2 - p2 / 2, o2.tooltipPosition.moveXCrosshairs(d2 + h2 / 2), i2 > s2.globals.gridWidth / 2 && (i2 = d2 - o2.tooltipRect.ttWidth / 2 + h2), o2.w.config.tooltip.followCursor) {
              var f2 = s2.globals.dom.elWrap.getBoundingClientRect();
              i2 = s2.globals.clientX - f2.left - o2.tooltipRect.ttWidth / 2, a2 = s2.globals.clientY - f2.top - o2.tooltipRect.ttHeight - 5;
            }
          }
          return { x: i2, y: a2 };
        } }, { key: "handleMarkerTooltip", value: function(t4) {
          var e3, n3, i2 = t4.e, a2 = t4.opt, r2 = t4.x, o2 = t4.y, s2 = this.w, l2 = this.ttCtx;
          if (i2.target.classList.contains("apexcharts-marker")) {
            var c2 = parseInt(a2.paths.getAttribute("cx"), 10), d2 = parseInt(a2.paths.getAttribute("cy"), 10), u2 = parseFloat(a2.paths.getAttribute("val"));
            if (n3 = parseInt(a2.paths.getAttribute("rel"), 10), e3 = parseInt(a2.paths.parentNode.parentNode.parentNode.getAttribute("rel"), 10) - 1, l2.intersect) {
              var h2 = b.findAncestor(a2.paths, "apexcharts-series");
              h2 && (e3 = parseInt(h2.getAttribute("data:realIndex"), 10));
            }
            if (l2.tooltipLabels.drawSeriesTexts({ ttItems: a2.ttItems, i: e3, j: n3, shared: !l2.showOnIntersect && s2.config.tooltip.shared, e: i2 }), i2.type === "mouseup" && l2.markerClick(i2, e3, n3), s2.globals.capturedSeriesIndex = e3, s2.globals.capturedDataPointIndex = n3, r2 = c2, o2 = d2 + s2.globals.translateY - 1.4 * l2.tooltipRect.ttHeight, l2.w.config.tooltip.followCursor) {
              var p2 = l2.getElGrid().getBoundingClientRect();
              o2 = l2.e.clientY + s2.globals.translateY - p2.top;
            }
            u2 < 0 && (o2 = d2), l2.marker.enlargeCurrentPoint(n3, a2.paths, r2, o2);
          }
          return { x: r2, y: o2 };
        } }, { key: "handleBarTooltip", value: function(t4) {
          var e3, n3, i2 = t4.e, a2 = t4.opt, r2 = this.w, o2 = this.ttCtx, s2 = o2.getElTooltip(), l2 = 0, c2 = 0, d2 = 0, u2 = this.getBarTooltipXY({ e: i2, opt: a2 });
          e3 = u2.i;
          var h2 = u2.barHeight, p2 = u2.j;
          r2.globals.capturedSeriesIndex = e3, r2.globals.capturedDataPointIndex = p2, r2.globals.isBarHorizontal && o2.tooltipUtil.hasBars() || !r2.config.tooltip.shared ? (c2 = u2.x, d2 = u2.y, n3 = Array.isArray(r2.config.stroke.width) ? r2.config.stroke.width[e3] : r2.config.stroke.width, l2 = c2) : r2.globals.comboCharts || r2.config.tooltip.shared || (l2 /= 2), isNaN(d2) ? d2 = r2.globals.svgHeight - o2.tooltipRect.ttHeight : d2 < 0 && (d2 = 0);
          var f2 = parseInt(a2.paths.parentNode.getAttribute("data:realIndex"), 10), g2 = r2.globals.isMultipleYAxis ? r2.config.yaxis[f2] && r2.config.yaxis[f2].reversed : r2.config.yaxis[0].reversed;
          if (c2 + o2.tooltipRect.ttWidth > r2.globals.gridWidth && !g2 ? c2 -= o2.tooltipRect.ttWidth : c2 < 0 && (c2 = 0), o2.w.config.tooltip.followCursor) {
            var m2 = o2.getElGrid().getBoundingClientRect();
            d2 = o2.e.clientY - m2.top;
          }
          o2.tooltip === null && (o2.tooltip = r2.globals.dom.baseEl.querySelector(".apexcharts-tooltip")), r2.config.tooltip.shared || (r2.globals.comboBarCount > 0 ? o2.tooltipPosition.moveXCrosshairs(l2 + n3 / 2) : o2.tooltipPosition.moveXCrosshairs(l2)), !o2.fixedTooltip && (!r2.config.tooltip.shared || r2.globals.isBarHorizontal && o2.tooltipUtil.hasBars()) && (g2 && (c2 -= o2.tooltipRect.ttWidth) < 0 && (c2 = 0), s2.style.left = c2 + r2.globals.translateX + "px", !g2 || r2.globals.isBarHorizontal && o2.tooltipUtil.hasBars() || (d2 = d2 + h2 - 2 * (r2.globals.series[e3][p2] < 0 ? h2 : 0)), o2.tooltipRect.ttHeight + d2 > r2.globals.gridHeight ? (d2 = r2.globals.gridHeight - o2.tooltipRect.ttHeight + r2.globals.translateY, s2.style.top = d2 + "px") : s2.style.top = d2 + r2.globals.translateY - o2.tooltipRect.ttHeight / 2 + "px");
        } }, { key: "getBarTooltipXY", value: function(t4) {
          var e3 = t4.e, n3 = t4.opt, i2 = this.w, a2 = null, r2 = this.ttCtx, o2 = 0, s2 = 0, l2 = 0, c2 = 0, d2 = 0, u2 = e3.target.classList;
          if (u2.contains("apexcharts-bar-area") || u2.contains("apexcharts-candlestick-area") || u2.contains("apexcharts-boxPlot-area") || u2.contains("apexcharts-rangebar-area")) {
            var h2 = e3.target, p2 = h2.getBoundingClientRect(), f2 = n3.elGrid.getBoundingClientRect(), g2 = p2.height;
            d2 = p2.height;
            var m2 = p2.width, v2 = parseInt(h2.getAttribute("cx"), 10), b2 = parseInt(h2.getAttribute("cy"), 10);
            c2 = parseFloat(h2.getAttribute("barWidth"));
            var y2 = e3.type === "touchmove" ? e3.touches[0].clientX : e3.clientX;
            a2 = parseInt(h2.getAttribute("j"), 10), o2 = parseInt(h2.parentNode.getAttribute("rel"), 10) - 1;
            var x2 = h2.getAttribute("data-range-y1"), _2 = h2.getAttribute("data-range-y2");
            i2.globals.comboCharts && (o2 = parseInt(h2.parentNode.getAttribute("data:realIndex"), 10)), r2.tooltipLabels.drawSeriesTexts({ ttItems: n3.ttItems, i: o2, j: a2, y1: x2 ? parseInt(x2, 10) : null, y2: _2 ? parseInt(_2, 10) : null, shared: !r2.showOnIntersect && i2.config.tooltip.shared, e: e3 }), i2.config.tooltip.followCursor ? i2.globals.isBarHorizontal ? (s2 = y2 - f2.left + 15, l2 = b2 - r2.dataPointsDividedHeight + g2 / 2 - r2.tooltipRect.ttHeight / 2) : (s2 = i2.globals.isXNumeric ? v2 - m2 / 2 : v2 - r2.dataPointsDividedWidth + m2 / 2, l2 = e3.clientY - f2.top - r2.tooltipRect.ttHeight / 2 - 15) : i2.globals.isBarHorizontal ? ((s2 = v2) < r2.xyRatios.baseLineInvertedY && (s2 = v2 - r2.tooltipRect.ttWidth), l2 = b2 - r2.dataPointsDividedHeight + g2 / 2 - r2.tooltipRect.ttHeight / 2) : (s2 = i2.globals.isXNumeric ? v2 - m2 / 2 : v2 - r2.dataPointsDividedWidth + m2 / 2, l2 = b2);
          }
          return { x: s2, y: l2, barHeight: d2, barWidth: c2, i: o2, j: a2 };
        } }]), t3;
      }(), xt = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.ttCtx = e3;
        }
        return s(t3, [{ key: "drawXaxisTooltip", value: function() {
          var t4 = this.w, e3 = this.ttCtx, n3 = t4.config.xaxis.position === "bottom";
          e3.xaxisOffY = n3 ? t4.globals.gridHeight + 1 : -t4.globals.xAxisHeight - t4.config.xaxis.axisTicks.height + 3;
          var i2 = n3 ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom" : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top", a2 = t4.globals.dom.elWrap;
          e3.blxaxisTooltip && t4.globals.dom.baseEl.querySelector(".apexcharts-xaxistooltip") === null && (e3.xaxisTooltip = document.createElement("div"), e3.xaxisTooltip.setAttribute("class", i2 + " apexcharts-theme-" + t4.config.tooltip.theme), a2.appendChild(e3.xaxisTooltip), e3.xaxisTooltipText = document.createElement("div"), e3.xaxisTooltipText.classList.add("apexcharts-xaxistooltip-text"), e3.xaxisTooltipText.style.fontFamily = t4.config.xaxis.tooltip.style.fontFamily || t4.config.chart.fontFamily, e3.xaxisTooltipText.style.fontSize = t4.config.xaxis.tooltip.style.fontSize, e3.xaxisTooltip.appendChild(e3.xaxisTooltipText));
        } }, { key: "drawYaxisTooltip", value: function() {
          for (var t4 = this.w, e3 = this.ttCtx, n3 = function(n4) {
            var i3 = t4.config.yaxis[n4].opposite || t4.config.yaxis[n4].crosshairs.opposite;
            e3.yaxisOffX = i3 ? t4.globals.gridWidth + 1 : 1;
            var a2 = "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(n4, i3 ? " apexcharts-yaxistooltip-right" : " apexcharts-yaxistooltip-left");
            t4.globals.yAxisSameScaleIndices.map(function(e4, i4) {
              e4.map(function(e5, i5) {
                i5 === n4 && (a2 += t4.config.yaxis[i5].show ? " " : " apexcharts-yaxistooltip-hidden");
              });
            });
            var r2 = t4.globals.dom.elWrap;
            t4.globals.dom.baseEl.querySelector(".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(n4)) === null && (e3.yaxisTooltip = document.createElement("div"), e3.yaxisTooltip.setAttribute("class", a2 + " apexcharts-theme-" + t4.config.tooltip.theme), r2.appendChild(e3.yaxisTooltip), n4 === 0 && (e3.yaxisTooltipText = []), e3.yaxisTooltipText[n4] = document.createElement("div"), e3.yaxisTooltipText[n4].classList.add("apexcharts-yaxistooltip-text"), e3.yaxisTooltip.appendChild(e3.yaxisTooltipText[n4]));
          }, i2 = 0; i2 < t4.config.yaxis.length; i2++)
            n3(i2);
        } }, { key: "setXCrosshairWidth", value: function() {
          var t4 = this.w, e3 = this.ttCtx, n3 = e3.getElXCrosshairs();
          if (e3.xcrosshairsWidth = parseInt(t4.config.xaxis.crosshairs.width, 10), t4.globals.comboCharts) {
            var i2 = t4.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
            if (i2 !== null && t4.config.xaxis.crosshairs.width === "barWidth") {
              var a2 = parseFloat(i2.getAttribute("barWidth"));
              e3.xcrosshairsWidth = a2;
            } else if (t4.config.xaxis.crosshairs.width === "tickWidth") {
              var r2 = t4.globals.labels.length;
              e3.xcrosshairsWidth = t4.globals.gridWidth / r2;
            }
          } else if (t4.config.xaxis.crosshairs.width === "tickWidth") {
            var o2 = t4.globals.labels.length;
            e3.xcrosshairsWidth = t4.globals.gridWidth / o2;
          } else if (t4.config.xaxis.crosshairs.width === "barWidth") {
            var s2 = t4.globals.dom.baseEl.querySelector(".apexcharts-bar-area");
            if (s2 !== null) {
              var l2 = parseFloat(s2.getAttribute("barWidth"));
              e3.xcrosshairsWidth = l2;
            } else
              e3.xcrosshairsWidth = 1;
          }
          t4.globals.isBarHorizontal && (e3.xcrosshairsWidth = 0), n3 !== null && e3.xcrosshairsWidth > 0 && n3.setAttribute("width", e3.xcrosshairsWidth);
        } }, { key: "handleYCrosshair", value: function() {
          var t4 = this.w, e3 = this.ttCtx;
          e3.ycrosshairs = t4.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs"), e3.ycrosshairsHidden = t4.globals.dom.baseEl.querySelector(".apexcharts-ycrosshairs-hidden");
        } }, { key: "drawYaxisTooltipText", value: function(t4, e3, n3) {
          var i2 = this.ttCtx, a2 = this.w, r2 = a2.globals.yLabelFormatters[t4];
          if (i2.yaxisTooltips[t4]) {
            var o2 = i2.getElGrid().getBoundingClientRect(), s2 = (e3 - o2.top) * n3.yRatio[t4], l2 = a2.globals.maxYArr[t4] - a2.globals.minYArr[t4], c2 = a2.globals.minYArr[t4] + (l2 - s2);
            i2.tooltipPosition.moveYCrosshairs(e3 - o2.top), i2.yaxisTooltipText[t4].innerHTML = r2(c2), i2.tooltipPosition.moveYAxisTooltip(t4);
          }
        } }]), t3;
      }(), _t = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
          var n3 = this.w;
          this.tConfig = n3.config.tooltip, this.tooltipUtil = new gt(this), this.tooltipLabels = new mt(this), this.tooltipPosition = new vt(this), this.marker = new bt(this), this.intersect = new yt(this), this.axesTooltip = new xt(this), this.showOnIntersect = this.tConfig.intersect, this.showTooltipTitle = this.tConfig.x.show, this.fixedTooltip = this.tConfig.fixed.enabled, this.xaxisTooltip = null, this.yaxisTTEls = null, this.isBarShared = !n3.globals.isBarHorizontal && this.tConfig.shared;
        }
        return s(t3, [{ key: "getElTooltip", value: function(t4) {
          return t4 || (t4 = this), t4.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip");
        } }, { key: "getElXCrosshairs", value: function() {
          return this.w.globals.dom.baseEl.querySelector(".apexcharts-xcrosshairs");
        } }, { key: "getElGrid", value: function() {
          return this.w.globals.dom.baseEl.querySelector(".apexcharts-grid");
        } }, { key: "drawTooltip", value: function(t4) {
          var e3 = this.w;
          this.xyRatios = t4, this.blxaxisTooltip = e3.config.xaxis.tooltip.enabled && e3.globals.axisCharts, this.yaxisTooltips = e3.config.yaxis.map(function(t5, n4) {
            return !!(t5.show && t5.tooltip.enabled && e3.globals.axisCharts);
          }), this.allTooltipSeriesGroups = [], e3.globals.axisCharts || (this.showTooltipTitle = false);
          var n3 = document.createElement("div");
          if (n3.classList.add("apexcharts-tooltip"), n3.classList.add("apexcharts-theme-".concat(this.tConfig.theme)), e3.globals.dom.elWrap.appendChild(n3), e3.globals.axisCharts) {
            this.axesTooltip.drawXaxisTooltip(), this.axesTooltip.drawYaxisTooltip(), this.axesTooltip.setXCrosshairWidth(), this.axesTooltip.handleYCrosshair();
            var i2 = new G(this.ctx);
            this.xAxisTicksPositions = i2.getXAxisTicksPositions();
          }
          if (!e3.globals.comboCharts && !this.tConfig.intersect && e3.config.chart.type !== "rangeBar" || this.tConfig.shared || (this.showOnIntersect = true), e3.config.markers.size !== 0 && e3.globals.markers.largestSize !== 0 || this.marker.drawDynamicPoints(this), e3.globals.collapsedSeries.length !== e3.globals.series.length) {
            this.dataPointsDividedHeight = e3.globals.gridHeight / e3.globals.dataPoints, this.dataPointsDividedWidth = e3.globals.gridWidth / e3.globals.dataPoints, this.showTooltipTitle && (this.tooltipTitle = document.createElement("div"), this.tooltipTitle.classList.add("apexcharts-tooltip-title"), this.tooltipTitle.style.fontFamily = this.tConfig.style.fontFamily || e3.config.chart.fontFamily, this.tooltipTitle.style.fontSize = this.tConfig.style.fontSize, n3.appendChild(this.tooltipTitle));
            var a2 = e3.globals.series.length;
            (e3.globals.xyCharts || e3.globals.comboCharts) && this.tConfig.shared && (a2 = this.showOnIntersect ? 1 : e3.globals.series.length), this.legendLabels = e3.globals.dom.baseEl.querySelectorAll(".apexcharts-legend-text"), this.ttItems = this.createTTElements(a2), this.addSVGEvents();
          }
        } }, { key: "createTTElements", value: function(t4) {
          for (var e3 = this, n3 = this.w, i2 = [], a2 = this.getElTooltip(), r2 = function(r3) {
            var o3 = document.createElement("div");
            o3.classList.add("apexcharts-tooltip-series-group"), o3.style.order = n3.config.tooltip.inverseOrder ? t4 - r3 : r3 + 1, e3.tConfig.shared && e3.tConfig.enabledOnSeries && Array.isArray(e3.tConfig.enabledOnSeries) && e3.tConfig.enabledOnSeries.indexOf(r3) < 0 && o3.classList.add("apexcharts-tooltip-series-group-hidden");
            var s2 = document.createElement("span");
            s2.classList.add("apexcharts-tooltip-marker"), s2.style.backgroundColor = n3.globals.colors[r3], o3.appendChild(s2);
            var l2 = document.createElement("div");
            l2.classList.add("apexcharts-tooltip-text"), l2.style.fontFamily = e3.tConfig.style.fontFamily || n3.config.chart.fontFamily, l2.style.fontSize = e3.tConfig.style.fontSize, ["y", "goals", "z"].forEach(function(t5) {
              var e4 = document.createElement("div");
              e4.classList.add("apexcharts-tooltip-".concat(t5, "-group"));
              var n4 = document.createElement("span");
              n4.classList.add("apexcharts-tooltip-text-".concat(t5, "-label")), e4.appendChild(n4);
              var i3 = document.createElement("span");
              i3.classList.add("apexcharts-tooltip-text-".concat(t5, "-value")), e4.appendChild(i3), l2.appendChild(e4);
            }), o3.appendChild(l2), a2.appendChild(o3), i2.push(o3);
          }, o2 = 0; o2 < t4; o2++)
            r2(o2);
          return i2;
        } }, { key: "addSVGEvents", value: function() {
          var t4 = this.w, e3 = t4.config.chart.type, n3 = this.getElTooltip(), i2 = !(e3 !== "bar" && e3 !== "candlestick" && e3 !== "boxPlot" && e3 !== "rangeBar"), a2 = e3 === "area" || e3 === "line" || e3 === "scatter" || e3 === "bubble" || e3 === "radar", r2 = t4.globals.dom.Paper.node, o2 = this.getElGrid();
          o2 && (this.seriesBound = o2.getBoundingClientRect());
          var s2, l2 = [], c2 = [], d2 = { hoverArea: r2, elGrid: o2, tooltipEl: n3, tooltipY: l2, tooltipX: c2, ttItems: this.ttItems };
          if (t4.globals.axisCharts && (a2 ? s2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker") : i2 ? s2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area") : e3 !== "heatmap" && e3 !== "treemap" || (s2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap")), s2 && s2.length))
            for (var u2 = 0; u2 < s2.length; u2++)
              l2.push(s2[u2].getAttribute("cy")), c2.push(s2[u2].getAttribute("cx"));
          if (t4.globals.xyCharts && !this.showOnIntersect || t4.globals.comboCharts && !this.showOnIntersect || i2 && this.tooltipUtil.hasBars() && this.tConfig.shared)
            this.addPathsEventListeners([r2], d2);
          else if (i2 && !t4.globals.comboCharts || a2 && this.showOnIntersect)
            this.addDatapointEventsListeners(d2);
          else if (!t4.globals.axisCharts || e3 === "heatmap" || e3 === "treemap") {
            var h2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
            this.addPathsEventListeners(h2, d2);
          }
          if (this.showOnIntersect) {
            var p2 = t4.globals.dom.baseEl.querySelectorAll(".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker");
            p2.length > 0 && this.addPathsEventListeners(p2, d2), this.tooltipUtil.hasBars() && !this.tConfig.shared && this.addDatapointEventsListeners(d2);
          }
        } }, { key: "drawFixedTooltipRect", value: function() {
          var t4 = this.w, e3 = this.getElTooltip(), n3 = e3.getBoundingClientRect(), i2 = n3.width + 10, a2 = n3.height + 10, r2 = this.tConfig.fixed.offsetX, o2 = this.tConfig.fixed.offsetY, s2 = this.tConfig.fixed.position.toLowerCase();
          return s2.indexOf("right") > -1 && (r2 = r2 + t4.globals.svgWidth - i2 + 10), s2.indexOf("bottom") > -1 && (o2 = o2 + t4.globals.svgHeight - a2 - 10), e3.style.left = r2 + "px", e3.style.top = o2 + "px", { x: r2, y: o2, ttWidth: i2, ttHeight: a2 };
        } }, { key: "addDatapointEventsListeners", value: function(t4) {
          var e3 = this.w.globals.dom.baseEl.querySelectorAll(".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area");
          this.addPathsEventListeners(e3, t4);
        } }, { key: "addPathsEventListeners", value: function(t4, e3) {
          for (var n3 = this, i2 = function(i3) {
            var a3 = { paths: t4[i3], tooltipEl: e3.tooltipEl, tooltipY: e3.tooltipY, tooltipX: e3.tooltipX, elGrid: e3.elGrid, hoverArea: e3.hoverArea, ttItems: e3.ttItems };
            ["mousemove", "mouseup", "touchmove", "mouseout", "touchend"].map(function(e4) {
              return t4[i3].addEventListener(e4, n3.seriesHover.bind(n3, a3), { capture: false, passive: true });
            });
          }, a2 = 0; a2 < t4.length; a2++)
            i2(a2);
        } }, { key: "seriesHover", value: function(t4, e3) {
          var n3 = this, i2 = [], a2 = this.w;
          a2.config.chart.group && (i2 = this.ctx.getGroupedCharts()), a2.globals.axisCharts && (a2.globals.minX === -1 / 0 && a2.globals.maxX === 1 / 0 || a2.globals.dataPoints === 0) || (i2.length ? i2.forEach(function(i3) {
            var a3 = n3.getElTooltip(i3), r2 = { paths: t4.paths, tooltipEl: a3, tooltipY: t4.tooltipY, tooltipX: t4.tooltipX, elGrid: t4.elGrid, hoverArea: t4.hoverArea, ttItems: i3.w.globals.tooltip.ttItems };
            i3.w.globals.minX === n3.w.globals.minX && i3.w.globals.maxX === n3.w.globals.maxX && i3.w.globals.tooltip.seriesHoverByContext({ chartCtx: i3, ttCtx: i3.w.globals.tooltip, opt: r2, e: e3 });
          }) : this.seriesHoverByContext({ chartCtx: this.ctx, ttCtx: this.w.globals.tooltip, opt: t4, e: e3 }));
        } }, { key: "seriesHoverByContext", value: function(t4) {
          var e3 = t4.chartCtx, n3 = t4.ttCtx, i2 = t4.opt, a2 = t4.e, r2 = e3.w, o2 = this.getElTooltip();
          n3.tooltipRect = { x: 0, y: 0, ttWidth: o2.getBoundingClientRect().width, ttHeight: o2.getBoundingClientRect().height }, n3.e = a2, !n3.tooltipUtil.hasBars() || r2.globals.comboCharts || n3.isBarShared || this.tConfig.onDatasetHover.highlightDataSeries && new j(e3).toggleSeriesOnHover(a2, a2.target.parentNode), n3.fixedTooltip && n3.drawFixedTooltipRect(), r2.globals.axisCharts ? n3.axisChartsTooltips({ e: a2, opt: i2, tooltipRect: n3.tooltipRect }) : n3.nonAxisChartsTooltips({ e: a2, opt: i2, tooltipRect: n3.tooltipRect });
        } }, { key: "axisChartsTooltips", value: function(t4) {
          var e3, n3, i2 = t4.e, a2 = t4.opt, r2 = this.w, o2 = a2.elGrid.getBoundingClientRect(), s2 = i2.type === "touchmove" ? i2.touches[0].clientX : i2.clientX, l2 = i2.type === "touchmove" ? i2.touches[0].clientY : i2.clientY;
          if (this.clientY = l2, this.clientX = s2, r2.globals.capturedSeriesIndex = -1, r2.globals.capturedDataPointIndex = -1, l2 < o2.top || l2 > o2.top + o2.height)
            this.handleMouseOut(a2);
          else {
            if (Array.isArray(this.tConfig.enabledOnSeries) && !r2.config.tooltip.shared) {
              var c2 = parseInt(a2.paths.getAttribute("index"), 10);
              if (this.tConfig.enabledOnSeries.indexOf(c2) < 0)
                return void this.handleMouseOut(a2);
            }
            var d2 = this.getElTooltip(), u2 = this.getElXCrosshairs(), h2 = r2.globals.xyCharts || r2.config.chart.type === "bar" && !r2.globals.isBarHorizontal && this.tooltipUtil.hasBars() && this.tConfig.shared || r2.globals.comboCharts && this.tooltipUtil.hasBars();
            if (i2.type === "mousemove" || i2.type === "touchmove" || i2.type === "mouseup") {
              u2 !== null && u2.classList.add("apexcharts-active");
              var p2 = this.yaxisTooltips.filter(function(t5) {
                return t5 === true;
              });
              if (this.ycrosshairs !== null && p2.length && this.ycrosshairs.classList.add("apexcharts-active"), h2 && !this.showOnIntersect)
                this.handleStickyTooltip(i2, s2, l2, a2);
              else if (r2.config.chart.type === "heatmap" || r2.config.chart.type === "treemap") {
                var f2 = this.intersect.handleHeatTreeTooltip({ e: i2, opt: a2, x: e3, y: n3, type: r2.config.chart.type });
                e3 = f2.x, n3 = f2.y, d2.style.left = e3 + "px", d2.style.top = n3 + "px";
              } else
                this.tooltipUtil.hasBars() && this.intersect.handleBarTooltip({ e: i2, opt: a2 }), this.tooltipUtil.hasMarkers() && this.intersect.handleMarkerTooltip({ e: i2, opt: a2, x: e3, y: n3 });
              if (this.yaxisTooltips.length)
                for (var g2 = 0; g2 < r2.config.yaxis.length; g2++)
                  this.axesTooltip.drawYaxisTooltipText(g2, l2, this.xyRatios);
              a2.tooltipEl.classList.add("apexcharts-active");
            } else
              i2.type !== "mouseout" && i2.type !== "touchend" || this.handleMouseOut(a2);
          }
        } }, { key: "nonAxisChartsTooltips", value: function(t4) {
          var e3 = t4.e, n3 = t4.opt, i2 = t4.tooltipRect, a2 = this.w, r2 = n3.paths.getAttribute("rel"), o2 = this.getElTooltip(), s2 = a2.globals.dom.elWrap.getBoundingClientRect();
          if (e3.type === "mousemove" || e3.type === "touchmove") {
            o2.classList.add("apexcharts-active"), this.tooltipLabels.drawSeriesTexts({ ttItems: n3.ttItems, i: parseInt(r2, 10) - 1, shared: false });
            var l2 = a2.globals.clientX - s2.left - i2.ttWidth / 2, c2 = a2.globals.clientY - s2.top - i2.ttHeight - 10;
            if (o2.style.left = l2 + "px", o2.style.top = c2 + "px", a2.config.legend.tooltipHoverFormatter) {
              var d2 = r2 - 1, u2 = (0, a2.config.legend.tooltipHoverFormatter)(this.legendLabels[d2].getAttribute("data:default-text"), { seriesIndex: d2, dataPointIndex: d2, w: a2 });
              this.legendLabels[d2].innerHTML = u2;
            }
          } else
            e3.type !== "mouseout" && e3.type !== "touchend" || (o2.classList.remove("apexcharts-active"), a2.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function(t5) {
              var e4 = t5.getAttribute("data:default-text");
              t5.innerHTML = decodeURIComponent(e4);
            }));
        } }, { key: "handleStickyTooltip", value: function(t4, e3, n3, i2) {
          var a2 = this.w, r2 = this.tooltipUtil.getNearestValues({ context: this, hoverArea: i2.hoverArea, elGrid: i2.elGrid, clientX: e3, clientY: n3 }), o2 = r2.j, s2 = r2.capturedSeries;
          r2.hoverX < 0 || r2.hoverX > a2.globals.gridWidth ? this.handleMouseOut(i2) : s2 !== null ? this.handleStickyCapturedSeries(t4, s2, i2, o2) : (this.tooltipUtil.isXoverlap(o2) || a2.globals.isBarHorizontal) && this.create(t4, this, 0, o2, i2.ttItems);
        } }, { key: "handleStickyCapturedSeries", value: function(t4, e3, n3, i2) {
          var a2 = this.w;
          a2.globals.series[e3][i2] === null ? this.handleMouseOut(n3) : a2.globals.series[e3][i2] !== void 0 ? this.tConfig.shared && this.tooltipUtil.isXoverlap(i2) && this.tooltipUtil.isInitialSeriesSameLen() ? this.create(t4, this, e3, i2, n3.ttItems) : this.create(t4, this, e3, i2, n3.ttItems, false) : this.tooltipUtil.isXoverlap(i2) && this.create(t4, this, 0, i2, n3.ttItems);
        } }, { key: "deactivateHoverFilter", value: function() {
          for (var t4 = this.w, e3 = new _(this.ctx), n3 = t4.globals.dom.Paper.select(".apexcharts-bar-area"), i2 = 0; i2 < n3.length; i2++)
            e3.pathMouseLeave(n3[i2]);
        } }, { key: "handleMouseOut", value: function(t4) {
          var e3 = this.w, n3 = this.getElXCrosshairs();
          if (t4.tooltipEl.classList.remove("apexcharts-active"), this.deactivateHoverFilter(), e3.config.chart.type !== "bubble" && this.marker.resetPointsSize(), n3 !== null && n3.classList.remove("apexcharts-active"), this.ycrosshairs !== null && this.ycrosshairs.classList.remove("apexcharts-active"), this.blxaxisTooltip && this.xaxisTooltip.classList.remove("apexcharts-active"), this.yaxisTooltips.length) {
            this.yaxisTTEls === null && (this.yaxisTTEls = e3.globals.dom.baseEl.querySelectorAll(".apexcharts-yaxistooltip"));
            for (var i2 = 0; i2 < this.yaxisTTEls.length; i2++)
              this.yaxisTTEls[i2].classList.remove("apexcharts-active");
          }
          e3.config.legend.tooltipHoverFormatter && this.legendLabels.forEach(function(t5) {
            var e4 = t5.getAttribute("data:default-text");
            t5.innerHTML = decodeURIComponent(e4);
          });
        } }, { key: "markerClick", value: function(t4, e3, n3) {
          var i2 = this.w;
          typeof i2.config.chart.events.markerClick == "function" && i2.config.chart.events.markerClick(t4, this.ctx, { seriesIndex: e3, dataPointIndex: n3, w: i2 }), this.ctx.events.fireEvent("markerClick", [t4, this.ctx, { seriesIndex: e3, dataPointIndex: n3, w: i2 }]);
        } }, { key: "create", value: function(t4, e3, n3, i2, a2) {
          var r2 = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : null, o2 = this.w, s2 = e3;
          t4.type === "mouseup" && this.markerClick(t4, n3, i2), r2 === null && (r2 = this.tConfig.shared);
          var l2 = this.tooltipUtil.hasMarkers(), c2 = this.tooltipUtil.getElBars();
          if (o2.config.legend.tooltipHoverFormatter) {
            var d2 = o2.config.legend.tooltipHoverFormatter, u2 = Array.from(this.legendLabels);
            u2.forEach(function(t5) {
              var e4 = t5.getAttribute("data:default-text");
              t5.innerHTML = decodeURIComponent(e4);
            });
            for (var h2 = 0; h2 < u2.length; h2++) {
              var p2 = u2[h2], f2 = parseInt(p2.getAttribute("i"), 10), g2 = decodeURIComponent(p2.getAttribute("data:default-text")), m2 = d2(g2, { seriesIndex: r2 ? f2 : n3, dataPointIndex: i2, w: o2 });
              if (r2)
                p2.innerHTML = o2.globals.collapsedSeriesIndices.indexOf(f2) < 0 ? m2 : g2;
              else if (p2.innerHTML = f2 === n3 ? m2 : g2, n3 === f2)
                break;
            }
          }
          if (r2) {
            if (s2.tooltipLabels.drawSeriesTexts({ ttItems: a2, i: n3, j: i2, shared: !this.showOnIntersect && this.tConfig.shared }), l2 && (o2.globals.markers.largestSize > 0 ? s2.marker.enlargePoints(i2) : s2.tooltipPosition.moveDynamicPointsOnHover(i2)), this.tooltipUtil.hasBars() && (this.barSeriesHeight = this.tooltipUtil.getBarsHeight(c2), this.barSeriesHeight > 0)) {
              var v2 = new _(this.ctx), b2 = o2.globals.dom.Paper.select(".apexcharts-bar-area[j='".concat(i2, "']"));
              this.deactivateHoverFilter(), this.tooltipPosition.moveStickyTooltipOverBars(i2);
              for (var y2 = 0; y2 < b2.length; y2++)
                v2.pathMouseEnter(b2[y2]);
            }
          } else
            s2.tooltipLabels.drawSeriesTexts({ shared: false, ttItems: a2, i: n3, j: i2 }), this.tooltipUtil.hasBars() && s2.tooltipPosition.moveStickyTooltipOverBars(i2), l2 && s2.tooltipPosition.moveMarkers(n3, i2);
        } }]), t3;
      }(), wt = function(t3) {
        u(n3, L);
        var e3 = g(n3);
        function n3() {
          return r(this, n3), e3.apply(this, arguments);
        }
        return s(n3, [{ key: "draw", value: function(t4, e4) {
          var n4 = this, i2 = this.w;
          this.graphics = new _(this.ctx), this.bar = new L(this.ctx, this.xyRatios);
          var a2 = new C(this.ctx, i2);
          t4 = a2.getLogSeries(t4), this.yRatio = a2.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t4), i2.config.chart.stackType === "100%" && (t4 = i2.globals.seriesPercent.slice()), this.series = t4, this.totalItems = 0, this.prevY = [], this.prevX = [], this.prevYF = [], this.prevXF = [], this.prevYVal = [], this.prevXVal = [], this.xArrj = [], this.xArrjF = [], this.xArrjVal = [], this.yArrj = [], this.yArrjF = [], this.yArrjVal = [];
          for (var r2 = 0; r2 < t4.length; r2++)
            t4[r2].length > 0 && (this.totalItems += t4[r2].length);
          for (var o2 = this.graphics.group({ class: "apexcharts-bar-series apexcharts-plot-series" }), s2 = 0, l2 = 0, c2 = function(a3, r3) {
            var c3 = void 0, u3 = void 0, h3 = void 0, p2 = void 0, f2 = [], g2 = [], m2 = i2.globals.comboCharts ? e4[a3] : a3;
            n4.yRatio.length > 1 && (n4.yaxisIndex = m2), n4.isReversed = i2.config.yaxis[n4.yaxisIndex] && i2.config.yaxis[n4.yaxisIndex].reversed;
            var v2 = n4.graphics.group({ class: "apexcharts-series", seriesName: b.escapeString(i2.globals.seriesNames[m2]), rel: a3 + 1, "data:realIndex": m2 });
            n4.ctx.series.addCollapsedClassToSeries(v2, m2);
            var y2 = n4.graphics.group({ class: "apexcharts-datalabels", "data:realIndex": m2 }), x2 = 0, _2 = 0, w2 = n4.initialPositions(s2, l2, c3, u3, h3, p2);
            l2 = w2.y, x2 = w2.barHeight, u3 = w2.yDivision, p2 = w2.zeroW, s2 = w2.x, _2 = w2.barWidth, c3 = w2.xDivision, h3 = w2.zeroH, n4.yArrj = [], n4.yArrjF = [], n4.yArrjVal = [], n4.xArrj = [], n4.xArrjF = [], n4.xArrjVal = [], n4.prevY.length === 1 && n4.prevY[0].every(function(t5) {
              return isNaN(t5);
            }) && (n4.prevY[0] = n4.prevY[0].map(function(t5) {
              return h3;
            }), n4.prevYF[0] = n4.prevYF[0].map(function(t5) {
              return 0;
            }));
            for (var S2 = 0; S2 < i2.globals.dataPoints; S2++) {
              var C2 = n4.barHelpers.getStrokeWidth(a3, S2, m2), k2 = { indexes: { i: a3, j: S2, realIndex: m2, bc: r3 }, strokeWidth: C2, x: s2, y: l2, elSeries: v2 }, D2 = null;
              n4.isHorizontal ? (D2 = n4.drawStackedBarPaths(d(d({}, k2), {}, { zeroW: p2, barHeight: x2, yDivision: u3 })), _2 = n4.series[a3][S2] / n4.invertedYRatio) : (D2 = n4.drawStackedColumnPaths(d(d({}, k2), {}, { xDivision: c3, barWidth: _2, zeroH: h3 })), x2 = n4.series[a3][S2] / n4.yRatio[n4.yaxisIndex]), l2 = D2.y, s2 = D2.x, f2.push(s2), g2.push(l2);
              var T2 = n4.barHelpers.getPathFillColor(t4, a3, S2, m2);
              v2 = n4.renderSeries({ realIndex: m2, pathFill: T2, j: S2, i: a3, pathFrom: D2.pathFrom, pathTo: D2.pathTo, strokeWidth: C2, elSeries: v2, x: s2, y: l2, series: t4, barHeight: x2, barWidth: _2, elDataLabelsWrap: y2, type: "bar", visibleSeries: 0 });
            }
            i2.globals.seriesXvalues[m2] = f2, i2.globals.seriesYvalues[m2] = g2, n4.prevY.push(n4.yArrj), n4.prevYF.push(n4.yArrjF), n4.prevYVal.push(n4.yArrjVal), n4.prevX.push(n4.xArrj), n4.prevXF.push(n4.xArrjF), n4.prevXVal.push(n4.xArrjVal), o2.add(v2);
          }, u2 = 0, h2 = 0; u2 < t4.length; u2++, h2++)
            c2(u2, h2);
          return o2;
        } }, { key: "initialPositions", value: function(t4, e4, n4, i2, a2, r2) {
          var o2, s2, l2 = this.w;
          return this.isHorizontal ? (o2 = (o2 = i2 = l2.globals.gridHeight / l2.globals.dataPoints) * parseInt(l2.config.plotOptions.bar.barHeight, 10) / 100, r2 = this.baseLineInvertedY + l2.globals.padHorizontal + (this.isReversed ? l2.globals.gridWidth : 0) - (this.isReversed ? 2 * this.baseLineInvertedY : 0), e4 = (i2 - o2) / 2) : (s2 = n4 = l2.globals.gridWidth / l2.globals.dataPoints, s2 = l2.globals.isXNumeric && l2.globals.dataPoints > 1 ? (n4 = l2.globals.minXDiff / this.xRatio) * parseInt(this.barOptions.columnWidth, 10) / 100 : s2 * parseInt(l2.config.plotOptions.bar.columnWidth, 10) / 100, a2 = this.baseLineY[this.yaxisIndex] + (this.isReversed ? l2.globals.gridHeight : 0) - (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), t4 = l2.globals.padHorizontal + (n4 - s2) / 2), { x: t4, y: e4, yDivision: i2, xDivision: n4, barHeight: o2, barWidth: s2, zeroH: a2, zeroW: r2 };
        } }, { key: "drawStackedBarPaths", value: function(t4) {
          for (var e4, n4 = t4.indexes, i2 = t4.barHeight, a2 = t4.strokeWidth, r2 = t4.zeroW, o2 = t4.x, s2 = t4.y, l2 = t4.yDivision, c2 = t4.elSeries, d2 = this.w, u2 = s2, h2 = n4.i, p2 = n4.j, f2 = 0, g2 = 0; g2 < this.prevXF.length; g2++)
            f2 += this.prevXF[g2][p2];
          if (h2 > 0) {
            var m2 = r2;
            this.prevXVal[h2 - 1][p2] < 0 ? m2 = this.series[h2][p2] >= 0 ? this.prevX[h2 - 1][p2] + f2 - 2 * (this.isReversed ? f2 : 0) : this.prevX[h2 - 1][p2] : this.prevXVal[h2 - 1][p2] >= 0 && (m2 = this.series[h2][p2] >= 0 ? this.prevX[h2 - 1][p2] : this.prevX[h2 - 1][p2] - f2 + 2 * (this.isReversed ? f2 : 0)), e4 = m2;
          } else
            e4 = r2;
          o2 = this.series[h2][p2] === null ? e4 : e4 + this.series[h2][p2] / this.invertedYRatio - 2 * (this.isReversed ? this.series[h2][p2] / this.invertedYRatio : 0);
          var v2 = this.barHelpers.getBarpaths({ barYPosition: u2, barHeight: i2, x1: e4, x2: o2, strokeWidth: a2, series: this.series, realIndex: n4.realIndex, i: h2, j: p2, w: d2 });
          return this.barHelpers.barBackground({ j: p2, i: h2, y1: u2, y2: i2, elSeries: c2 }), s2 += l2, { pathTo: v2.pathTo, pathFrom: v2.pathFrom, x: o2, y: s2 };
        } }, { key: "drawStackedColumnPaths", value: function(t4) {
          var e4 = t4.indexes, n4 = t4.x, i2 = t4.y, a2 = t4.xDivision, r2 = t4.barWidth, o2 = t4.zeroH;
          t4.strokeWidth;
          var s2 = t4.elSeries, l2 = this.w, c2 = e4.i, d2 = e4.j, u2 = e4.bc;
          if (l2.globals.isXNumeric) {
            var h2 = l2.globals.seriesX[c2][d2];
            h2 || (h2 = 0), n4 = (h2 - l2.globals.minX) / this.xRatio - r2 / 2;
          }
          for (var p2, f2 = n4, g2 = 0, m2 = 0; m2 < this.prevYF.length; m2++)
            g2 += isNaN(this.prevYF[m2][d2]) ? 0 : this.prevYF[m2][d2];
          if (c2 > 0 && !l2.globals.isXNumeric || c2 > 0 && l2.globals.isXNumeric && l2.globals.seriesX[c2 - 1][d2] === l2.globals.seriesX[c2][d2]) {
            var v2, b2, y2 = Math.min(this.yRatio.length + 1, c2 + 1);
            if (this.prevY[c2 - 1] !== void 0) {
              for (var x2 = 1; x2 < y2; x2++)
                if (!isNaN(this.prevY[c2 - x2][d2])) {
                  b2 = this.prevY[c2 - x2][d2];
                  break;
                }
            }
            for (var _2 = 1; _2 < y2; _2++) {
              if (this.prevYVal[c2 - _2][d2] < 0) {
                v2 = this.series[c2][d2] >= 0 ? b2 - g2 + 2 * (this.isReversed ? g2 : 0) : b2;
                break;
              }
              if (this.prevYVal[c2 - _2][d2] >= 0) {
                v2 = this.series[c2][d2] >= 0 ? b2 : b2 + g2 - 2 * (this.isReversed ? g2 : 0);
                break;
              }
            }
            v2 === void 0 && (v2 = l2.globals.gridHeight), p2 = this.prevYF[0].every(function(t5) {
              return t5 === 0;
            }) && this.prevYF.slice(1, c2).every(function(t5) {
              return t5.every(function(t6) {
                return isNaN(t6);
              });
            }) ? l2.globals.gridHeight - o2 : v2;
          } else
            p2 = l2.globals.gridHeight - o2;
          i2 = p2 - this.series[c2][d2] / this.yRatio[this.yaxisIndex] + 2 * (this.isReversed ? this.series[c2][d2] / this.yRatio[this.yaxisIndex] : 0);
          var w2 = this.barHelpers.getColumnPaths({ barXPosition: f2, barWidth: r2, y1: p2, y2: i2, yRatio: this.yRatio[this.yaxisIndex], strokeWidth: this.strokeWidth, series: this.series, realIndex: e4.realIndex, i: c2, j: d2, w: l2 });
          return this.barHelpers.barBackground({ bc: u2, j: d2, i: c2, x1: f2, x2: r2, elSeries: s2 }), n4 += a2, { pathTo: w2.pathTo, pathFrom: w2.pathFrom, x: l2.globals.isXNumeric ? n4 - a2 : n4, y: i2 };
        } }]), n3;
      }(), St = function(t3) {
        u(n3, L);
        var e3 = g(n3);
        function n3() {
          return r(this, n3), e3.apply(this, arguments);
        }
        return s(n3, [{ key: "draw", value: function(t4, e4) {
          var n4 = this, i2 = this.w, a2 = new _(this.ctx), r2 = new I(this.ctx);
          this.candlestickOptions = this.w.config.plotOptions.candlestick, this.boxOptions = this.w.config.plotOptions.boxPlot;
          var o2 = new C(this.ctx, i2);
          t4 = o2.getLogSeries(t4), this.series = t4, this.yRatio = o2.getLogYRatios(this.yRatio), this.barHelpers.initVariables(t4);
          for (var s2 = a2.group({ class: "apexcharts-".concat(i2.config.chart.type, "-series apexcharts-plot-series") }), l2 = function(o3) {
            n4.isBoxPlot = i2.config.chart.type === "boxPlot" || i2.config.series[o3].type === "boxPlot";
            var l3, c3, d2, u2, h2 = void 0, p2 = void 0, f2 = [], g2 = [], m2 = i2.globals.comboCharts ? e4[o3] : o3, v2 = a2.group({ class: "apexcharts-series", seriesName: b.escapeString(i2.globals.seriesNames[m2]), rel: o3 + 1, "data:realIndex": m2 });
            t4[o3].length > 0 && (n4.visibleI = n4.visibleI + 1), n4.yRatio.length > 1 && (n4.yaxisIndex = m2);
            var y2 = n4.barHelpers.initialPositions();
            p2 = y2.y, d2 = y2.barHeight, h2 = y2.x, u2 = y2.barWidth, l3 = y2.xDivision, c3 = y2.zeroH, g2.push(h2 + u2 / 2);
            for (var x2 = a2.group({ class: "apexcharts-datalabels", "data:realIndex": m2 }), _2 = function(e5) {
              var a3 = n4.barHelpers.getStrokeWidth(o3, e5, m2), s3 = n4.drawBoxPaths({ indexes: { i: o3, j: e5, realIndex: m2 }, x: h2, y: p2, xDivision: l3, barWidth: u2, zeroH: c3, strokeWidth: a3, elSeries: v2 });
              p2 = s3.y, h2 = s3.x, e5 > 0 && g2.push(h2 + u2 / 2), f2.push(p2), s3.pathTo.forEach(function(l4, c4) {
                var f3 = !n4.isBoxPlot && n4.candlestickOptions.wick.useFillColor ? s3.color[c4] : i2.globals.stroke.colors[o3], g3 = r2.fillPath({ seriesNumber: m2, dataPointIndex: e5, color: s3.color[c4], value: t4[o3][e5] });
                n4.renderSeries({ realIndex: m2, pathFill: g3, lineFill: f3, j: e5, i: o3, pathFrom: s3.pathFrom, pathTo: l4, strokeWidth: a3, elSeries: v2, x: h2, y: p2, series: t4, barHeight: d2, barWidth: u2, elDataLabelsWrap: x2, visibleSeries: n4.visibleI, type: i2.config.chart.type });
              });
            }, w2 = 0; w2 < i2.globals.dataPoints; w2++)
              _2(w2);
            i2.globals.seriesXvalues[m2] = g2, i2.globals.seriesYvalues[m2] = f2, s2.add(v2);
          }, c2 = 0; c2 < t4.length; c2++)
            l2(c2);
          return s2;
        } }, { key: "drawBoxPaths", value: function(t4) {
          var e4 = t4.indexes, n4 = t4.x;
          t4.y;
          var i2 = t4.xDivision, a2 = t4.barWidth, r2 = t4.zeroH, o2 = t4.strokeWidth, s2 = this.w, l2 = new _(this.ctx), c2 = e4.i, d2 = e4.j, u2 = true, h2 = s2.config.plotOptions.candlestick.colors.upward, p2 = s2.config.plotOptions.candlestick.colors.downward, f2 = "";
          this.isBoxPlot && (f2 = [this.boxOptions.colors.lower, this.boxOptions.colors.upper]);
          var g2 = this.yRatio[this.yaxisIndex], m2 = e4.realIndex, v2 = this.getOHLCValue(m2, d2), b2 = r2, y2 = r2;
          v2.o > v2.c && (u2 = false);
          var x2 = Math.min(v2.o, v2.c), w2 = Math.max(v2.o, v2.c), S2 = v2.m;
          s2.globals.isXNumeric && (n4 = (s2.globals.seriesX[m2][d2] - s2.globals.minX) / this.xRatio - a2 / 2);
          var C2 = n4 + a2 * this.visibleI;
          this.series[c2][d2] === void 0 || this.series[c2][d2] === null ? (x2 = r2, w2 = r2) : (x2 = r2 - x2 / g2, w2 = r2 - w2 / g2, b2 = r2 - v2.h / g2, y2 = r2 - v2.l / g2, S2 = r2 - v2.m / g2);
          var k2 = l2.move(C2, r2), D2 = l2.move(C2 + a2 / 2, x2);
          return s2.globals.previousPaths.length > 0 && (D2 = this.getPreviousPath(m2, d2, true)), k2 = this.isBoxPlot ? [l2.move(C2, x2) + l2.line(C2 + a2 / 2, x2) + l2.line(C2 + a2 / 2, b2) + l2.line(C2 + a2 / 4, b2) + l2.line(C2 + a2 - a2 / 4, b2) + l2.line(C2 + a2 / 2, b2) + l2.line(C2 + a2 / 2, x2) + l2.line(C2 + a2, x2) + l2.line(C2 + a2, S2) + l2.line(C2, S2) + l2.line(C2, x2 + o2 / 2), l2.move(C2, S2) + l2.line(C2 + a2, S2) + l2.line(C2 + a2, w2) + l2.line(C2 + a2 / 2, w2) + l2.line(C2 + a2 / 2, y2) + l2.line(C2 + a2 - a2 / 4, y2) + l2.line(C2 + a2 / 4, y2) + l2.line(C2 + a2 / 2, y2) + l2.line(C2 + a2 / 2, w2) + l2.line(C2, w2) + l2.line(C2, S2) + "z"] : [l2.move(C2, w2) + l2.line(C2 + a2 / 2, w2) + l2.line(C2 + a2 / 2, b2) + l2.line(C2 + a2 / 2, w2) + l2.line(C2 + a2, w2) + l2.line(C2 + a2, x2) + l2.line(C2 + a2 / 2, x2) + l2.line(C2 + a2 / 2, y2) + l2.line(C2 + a2 / 2, x2) + l2.line(C2, x2) + l2.line(C2, w2 - o2 / 2)], D2 += l2.move(C2, x2), s2.globals.isXNumeric || (n4 += i2), { pathTo: k2, pathFrom: D2, x: n4, y: w2, barXPosition: C2, color: this.isBoxPlot ? f2 : u2 ? [h2] : [p2] };
        } }, { key: "getOHLCValue", value: function(t4, e4) {
          var n4 = this.w;
          return { o: this.isBoxPlot ? n4.globals.seriesCandleH[t4][e4] : n4.globals.seriesCandleO[t4][e4], h: this.isBoxPlot ? n4.globals.seriesCandleO[t4][e4] : n4.globals.seriesCandleH[t4][e4], m: n4.globals.seriesCandleM[t4][e4], l: this.isBoxPlot ? n4.globals.seriesCandleC[t4][e4] : n4.globals.seriesCandleL[t4][e4], c: this.isBoxPlot ? n4.globals.seriesCandleL[t4][e4] : n4.globals.seriesCandleC[t4][e4] };
        } }]), n3;
      }(), Ct = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "checkColorRange", value: function() {
          var t4 = this.w, e3 = false, n3 = t4.config.plotOptions[t4.config.chart.type];
          return n3.colorScale.ranges.length > 0 && n3.colorScale.ranges.map(function(t5, n4) {
            t5.from <= 0 && (e3 = true);
          }), e3;
        } }, { key: "getShadeColor", value: function(t4, e3, n3, i2) {
          var a2 = this.w, r2 = 1, o2 = a2.config.plotOptions[t4].shadeIntensity, s2 = this.determineColor(t4, e3, n3);
          a2.globals.hasNegs || i2 ? r2 = a2.config.plotOptions[t4].reverseNegativeShade ? s2.percent < 0 ? s2.percent / 100 * (1.25 * o2) : (1 - s2.percent / 100) * (1.25 * o2) : s2.percent <= 0 ? 1 - (1 + s2.percent / 100) * o2 : (1 - s2.percent / 100) * o2 : (r2 = 1 - s2.percent / 100, t4 === "treemap" && (r2 = (1 - s2.percent / 100) * (1.25 * o2)));
          var l2 = s2.color, c2 = new b();
          return a2.config.plotOptions[t4].enableShades && (l2 = this.w.config.theme.mode === "dark" ? b.hexToRgba(c2.shadeColor(-1 * r2, s2.color), a2.config.fill.opacity) : b.hexToRgba(c2.shadeColor(r2, s2.color), a2.config.fill.opacity)), { color: l2, colorProps: s2 };
        } }, { key: "determineColor", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = i2.globals.series[e3][n3], r2 = i2.config.plotOptions[t4], o2 = r2.colorScale.inverse ? n3 : e3;
          i2.config.plotOptions[t4].distributed && (o2 = n3);
          var s2 = i2.globals.colors[o2], l2 = null, c2 = Math.min.apply(Math, m(i2.globals.series[e3])), d2 = Math.max.apply(Math, m(i2.globals.series[e3]));
          r2.distributed || t4 !== "heatmap" || (c2 = i2.globals.minY, d2 = i2.globals.maxY), r2.colorScale.min !== void 0 && (c2 = r2.colorScale.min < i2.globals.minY ? r2.colorScale.min : i2.globals.minY, d2 = r2.colorScale.max > i2.globals.maxY ? r2.colorScale.max : i2.globals.maxY);
          var u2 = Math.abs(d2) + Math.abs(c2), h2 = 100 * a2 / (u2 === 0 ? u2 - 1e-6 : u2);
          return r2.colorScale.ranges.length > 0 && r2.colorScale.ranges.map(function(t5, e4) {
            if (a2 >= t5.from && a2 <= t5.to) {
              s2 = t5.color, l2 = t5.foreColor ? t5.foreColor : null, c2 = t5.from, d2 = t5.to;
              var n4 = Math.abs(d2) + Math.abs(c2);
              h2 = 100 * a2 / (n4 === 0 ? n4 - 1e-6 : n4);
            }
          }), { color: s2, foreColor: l2, percent: h2 };
        } }, { key: "calculateDataLabels", value: function(t4) {
          var e3 = t4.text, n3 = t4.x, i2 = t4.y, a2 = t4.i, r2 = t4.j, o2 = t4.colorProps, s2 = t4.fontSize, l2 = this.w.config.dataLabels, c2 = new _(this.ctx), d2 = new P(this.ctx), u2 = null;
          if (l2.enabled) {
            u2 = c2.group({ class: "apexcharts-data-labels" });
            var h2 = l2.offsetX, p2 = l2.offsetY, f2 = n3 + h2, g2 = i2 + parseFloat(l2.style.fontSize) / 3 + p2;
            d2.plotDataLabelsText({ x: f2, y: g2, text: e3, i: a2, j: r2, color: o2.foreColor, parent: u2, fontSize: s2, dataLabelsConfig: l2 });
          }
          return u2;
        } }, { key: "addListeners", value: function(t4) {
          var e3 = new _(this.ctx);
          t4.node.addEventListener("mouseenter", e3.pathMouseEnter.bind(this, t4)), t4.node.addEventListener("mouseleave", e3.pathMouseLeave.bind(this, t4)), t4.node.addEventListener("mousedown", e3.pathMouseDown.bind(this, t4));
        } }]), t3;
      }(), kt = function() {
        function t3(e3, n3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.xRatio = n3.xRatio, this.yRatio = n3.yRatio, this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.helpers = new Ct(e3), this.rectRadius = this.w.config.plotOptions.heatmap.radius, this.strokeWidth = this.w.config.stroke.show ? this.w.config.stroke.width : 0;
        }
        return s(t3, [{ key: "draw", value: function(t4) {
          var e3 = this.w, n3 = new _(this.ctx), i2 = n3.group({ class: "apexcharts-heatmap" });
          i2.attr("clip-path", "url(#gridRectMask".concat(e3.globals.cuid, ")"));
          var a2 = e3.globals.gridWidth / e3.globals.dataPoints, r2 = e3.globals.gridHeight / e3.globals.series.length, o2 = 0, s2 = false;
          this.negRange = this.helpers.checkColorRange();
          var l2 = t4.slice();
          e3.config.yaxis[0].reversed && (s2 = true, l2.reverse());
          for (var c2 = s2 ? 0 : l2.length - 1; s2 ? c2 < l2.length : c2 >= 0; s2 ? c2++ : c2--) {
            var d2 = n3.group({ class: "apexcharts-series apexcharts-heatmap-series", seriesName: b.escapeString(e3.globals.seriesNames[c2]), rel: c2 + 1, "data:realIndex": c2 });
            if (this.ctx.series.addCollapsedClassToSeries(d2, c2), e3.config.chart.dropShadow.enabled) {
              var u2 = e3.config.chart.dropShadow;
              new x(this.ctx).dropShadow(d2, u2, c2);
            }
            for (var h2 = 0, p2 = e3.config.plotOptions.heatmap.shadeIntensity, f2 = 0; f2 < l2[c2].length; f2++) {
              var g2 = this.helpers.getShadeColor(e3.config.chart.type, c2, f2, this.negRange), m2 = g2.color, v2 = g2.colorProps;
              e3.config.fill.type === "image" && (m2 = new I(this.ctx).fillPath({ seriesNumber: c2, dataPointIndex: f2, opacity: e3.globals.hasNegs ? v2.percent < 0 ? 1 - (1 + v2.percent / 100) : p2 + v2.percent / 100 : v2.percent / 100, patternID: b.randomId(), width: e3.config.fill.image.width ? e3.config.fill.image.width : a2, height: e3.config.fill.image.height ? e3.config.fill.image.height : r2 }));
              var y2 = this.rectRadius, w2 = n3.drawRect(h2, o2, a2, r2, y2);
              if (w2.attr({ cx: h2, cy: o2 }), w2.node.classList.add("apexcharts-heatmap-rect"), d2.add(w2), w2.attr({ fill: m2, i: c2, index: c2, j: f2, val: l2[c2][f2], "stroke-width": this.strokeWidth, stroke: e3.config.plotOptions.heatmap.useFillColorAsStroke ? m2 : e3.globals.stroke.colors[0], color: m2 }), this.helpers.addListeners(w2), e3.config.chart.animations.enabled && !e3.globals.dataChanged) {
                var S2 = 1;
                e3.globals.resized || (S2 = e3.config.chart.animations.speed), this.animateHeatMap(w2, h2, o2, a2, r2, S2);
              }
              if (e3.globals.dataChanged) {
                var C2 = 1;
                if (this.dynamicAnim.enabled && e3.globals.shouldAnimate) {
                  C2 = this.dynamicAnim.speed;
                  var k2 = e3.globals.previousPaths[c2] && e3.globals.previousPaths[c2][f2] && e3.globals.previousPaths[c2][f2].color;
                  k2 || (k2 = "rgba(255, 255, 255, 0)"), this.animateHeatColor(w2, b.isColorHex(k2) ? k2 : b.rgb2hex(k2), b.isColorHex(m2) ? m2 : b.rgb2hex(m2), C2);
                }
              }
              var D2 = (0, e3.config.dataLabels.formatter)(e3.globals.series[c2][f2], { value: e3.globals.series[c2][f2], seriesIndex: c2, dataPointIndex: f2, w: e3 }), T2 = this.helpers.calculateDataLabels({ text: D2, x: h2 + a2 / 2, y: o2 + r2 / 2, i: c2, j: f2, colorProps: v2, series: l2 });
              T2 !== null && d2.add(T2), h2 += a2;
            }
            o2 += r2, i2.add(d2);
          }
          var E2 = e3.globals.yAxisScale[0].result.slice();
          e3.config.yaxis[0].reversed ? E2.unshift("") : E2.push(""), e3.globals.yAxisScale[0].result = E2;
          var A2 = e3.globals.gridHeight / e3.globals.series.length;
          return e3.config.yaxis[0].labels.offsetY = -A2 / 2, i2;
        } }, { key: "animateHeatMap", value: function(t4, e3, n3, i2, a2, r2) {
          var o2 = new y(this.ctx);
          o2.animateRect(t4, { x: e3 + i2 / 2, y: n3 + a2 / 2, width: 0, height: 0 }, { x: e3, y: n3, width: i2, height: a2 }, r2, function() {
            o2.animationCompleted(t4);
          });
        } }, { key: "animateHeatColor", value: function(t4, e3, n3, i2) {
          t4.attr({ fill: e3 }).animate(i2).attr({ fill: n3 });
        } }]), t3;
      }(), Dt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "drawYAxisTexts", value: function(t4, e3, n3, i2) {
          var a2 = this.w, r2 = a2.config.yaxis[0], o2 = a2.globals.yLabelFormatters[0];
          return new _(this.ctx).drawText({ x: t4 + r2.labels.offsetX, y: e3 + r2.labels.offsetY, text: o2(i2, n3), textAnchor: "middle", fontSize: r2.labels.style.fontSize, fontFamily: r2.labels.style.fontFamily, foreColor: Array.isArray(r2.labels.style.colors) ? r2.labels.style.colors[n3] : r2.labels.style.colors });
        } }]), t3;
      }(), Tt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
          var n3 = this.w;
          this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animBeginArr = [0], this.animDur = 0, this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels, this.lineColorArr = n3.globals.stroke.colors !== void 0 ? n3.globals.stroke.colors : n3.globals.colors, this.defaultSize = Math.min(n3.globals.gridWidth, n3.globals.gridHeight), this.centerY = this.defaultSize / 2, this.centerX = n3.globals.gridWidth / 2, n3.config.chart.type === "radialBar" ? this.fullAngle = 360 : this.fullAngle = Math.abs(n3.config.plotOptions.pie.endAngle - n3.config.plotOptions.pie.startAngle), this.initialAngle = n3.config.plotOptions.pie.startAngle % this.fullAngle, n3.globals.radialSize = this.defaultSize / 2.05 - n3.config.stroke.width - (n3.config.chart.sparkline.enabled ? 0 : n3.config.chart.dropShadow.blur), this.donutSize = n3.globals.radialSize * parseInt(n3.config.plotOptions.pie.donut.size, 10) / 100, this.maxY = 0, this.sliceLabels = [], this.sliceSizes = [], this.prevSectorAngleArr = [];
        }
        return s(t3, [{ key: "draw", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = new _(this.ctx);
          if (this.ret = i2.group({ class: "apexcharts-pie" }), n3.globals.noData)
            return this.ret;
          for (var a2 = 0, r2 = 0; r2 < t4.length; r2++)
            a2 += b.negToZero(t4[r2]);
          var o2 = [], s2 = i2.group();
          a2 === 0 && (a2 = 1e-5), t4.forEach(function(t5) {
            e3.maxY = Math.max(e3.maxY, t5);
          }), n3.config.yaxis[0].max && (this.maxY = n3.config.yaxis[0].max), n3.config.grid.position === "back" && this.chartType === "polarArea" && this.drawPolarElements(this.ret);
          for (var l2 = 0; l2 < t4.length; l2++) {
            var c2 = this.fullAngle * b.negToZero(t4[l2]) / a2;
            o2.push(c2), this.chartType === "polarArea" ? (o2[l2] = this.fullAngle / t4.length, this.sliceSizes.push(n3.globals.radialSize * t4[l2] / this.maxY)) : this.sliceSizes.push(n3.globals.radialSize);
          }
          if (n3.globals.dataChanged) {
            for (var d2, u2 = 0, h2 = 0; h2 < n3.globals.previousPaths.length; h2++)
              u2 += b.negToZero(n3.globals.previousPaths[h2]);
            for (var p2 = 0; p2 < n3.globals.previousPaths.length; p2++)
              d2 = this.fullAngle * b.negToZero(n3.globals.previousPaths[p2]) / u2, this.prevSectorAngleArr.push(d2);
          }
          this.donutSize < 0 && (this.donutSize = 0);
          var f2 = n3.config.plotOptions.pie.customScale, g2 = n3.globals.gridWidth / 2, m2 = n3.globals.gridHeight / 2, v2 = g2 - n3.globals.gridWidth / 2 * f2, y2 = m2 - n3.globals.gridHeight / 2 * f2;
          if (this.chartType === "donut") {
            var x2 = i2.drawCircle(this.donutSize);
            x2.attr({ cx: this.centerX, cy: this.centerY, fill: n3.config.plotOptions.pie.donut.background ? n3.config.plotOptions.pie.donut.background : "transparent" }), s2.add(x2);
          }
          var w2 = this.drawArcs(o2, t4);
          if (this.sliceLabels.forEach(function(t5) {
            w2.add(t5);
          }), s2.attr({ transform: "translate(".concat(v2, ", ").concat(y2, ") scale(").concat(f2, ")") }), s2.add(w2), this.ret.add(s2), this.donutDataLabels.show) {
            var S2 = this.renderInnerDataLabels(this.donutDataLabels, { hollowSize: this.donutSize, centerX: this.centerX, centerY: this.centerY, opacity: this.donutDataLabels.show, translateX: v2, translateY: y2 });
            this.ret.add(S2);
          }
          return n3.config.grid.position === "front" && this.chartType === "polarArea" && this.drawPolarElements(this.ret), this.ret;
        } }, { key: "drawArcs", value: function(t4, e3) {
          var n3 = this.w, i2 = new x(this.ctx), a2 = new _(this.ctx), r2 = new I(this.ctx), o2 = a2.group({ class: "apexcharts-slices" }), s2 = this.initialAngle, l2 = this.initialAngle, c2 = this.initialAngle, d2 = this.initialAngle;
          this.strokeWidth = n3.config.stroke.show ? n3.config.stroke.width : 0;
          for (var u2 = 0; u2 < t4.length; u2++) {
            var h2 = a2.group({ class: "apexcharts-series apexcharts-pie-series", seriesName: b.escapeString(n3.globals.seriesNames[u2]), rel: u2 + 1, "data:realIndex": u2 });
            o2.add(h2), l2 = d2, c2 = (s2 = c2) + t4[u2], d2 = l2 + this.prevSectorAngleArr[u2];
            var p2 = c2 < s2 ? this.fullAngle + c2 - s2 : c2 - s2, f2 = r2.fillPath({ seriesNumber: u2, size: this.sliceSizes[u2], value: e3[u2] }), g2 = this.getChangedPath(l2, d2), m2 = a2.drawPath({ d: g2, stroke: Array.isArray(this.lineColorArr) ? this.lineColorArr[u2] : this.lineColorArr, strokeWidth: 0, fill: f2, fillOpacity: n3.config.fill.opacity, classes: "apexcharts-pie-area apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(u2) });
            if (m2.attr({ index: 0, j: u2 }), i2.setSelectionFilter(m2, 0, u2), n3.config.chart.dropShadow.enabled) {
              var v2 = n3.config.chart.dropShadow;
              i2.dropShadow(m2, v2, u2);
            }
            this.addListeners(m2, this.donutDataLabels), _.setAttrs(m2.node, { "data:angle": p2, "data:startAngle": s2, "data:strokeWidth": this.strokeWidth, "data:value": e3[u2] });
            var y2 = { x: 0, y: 0 };
            this.chartType === "pie" || this.chartType === "polarArea" ? y2 = b.polarToCartesian(this.centerX, this.centerY, n3.globals.radialSize / 1.25 + n3.config.plotOptions.pie.dataLabels.offset, (s2 + p2 / 2) % this.fullAngle) : this.chartType === "donut" && (y2 = b.polarToCartesian(this.centerX, this.centerY, (n3.globals.radialSize + this.donutSize) / 2 + n3.config.plotOptions.pie.dataLabels.offset, (s2 + p2 / 2) % this.fullAngle)), h2.add(m2);
            var w2 = 0;
            if (!this.initialAnim || n3.globals.resized || n3.globals.dataChanged ? this.animBeginArr.push(0) : ((w2 = p2 / this.fullAngle * n3.config.chart.animations.speed) == 0 && (w2 = 1), this.animDur = w2 + this.animDur, this.animBeginArr.push(this.animDur)), this.dynamicAnim && n3.globals.dataChanged ? this.animatePaths(m2, { size: this.sliceSizes[u2], endAngle: c2, startAngle: s2, prevStartAngle: l2, prevEndAngle: d2, animateStartingPos: true, i: u2, animBeginArr: this.animBeginArr, shouldSetPrevPaths: true, dur: n3.config.chart.animations.dynamicAnimation.speed }) : this.animatePaths(m2, { size: this.sliceSizes[u2], endAngle: c2, startAngle: s2, i: u2, totalItems: t4.length - 1, animBeginArr: this.animBeginArr, dur: w2 }), n3.config.plotOptions.pie.expandOnClick && this.chartType !== "polarArea" && m2.click(this.pieClicked.bind(this, u2)), n3.globals.selectedDataPoints[0] !== void 0 && n3.globals.selectedDataPoints[0].indexOf(u2) > -1 && this.pieClicked(u2), n3.config.dataLabels.enabled) {
              var S2 = y2.x, C2 = y2.y, k2 = 100 * p2 / this.fullAngle + "%";
              if (p2 !== 0 && n3.config.plotOptions.pie.dataLabels.minAngleToShowLabel < t4[u2]) {
                var D2 = n3.config.dataLabels.formatter;
                D2 !== void 0 && (k2 = D2(n3.globals.seriesPercent[u2][0], { seriesIndex: u2, w: n3 }));
                var T2 = n3.globals.dataLabels.style.colors[u2], E2 = a2.group({ class: "apexcharts-datalabels" }), A2 = a2.drawText({ x: S2, y: C2, text: k2, textAnchor: "middle", fontSize: n3.config.dataLabels.style.fontSize, fontFamily: n3.config.dataLabels.style.fontFamily, fontWeight: n3.config.dataLabels.style.fontWeight, foreColor: T2 });
                if (E2.add(A2), n3.config.dataLabels.dropShadow.enabled) {
                  var M2 = n3.config.dataLabels.dropShadow;
                  i2.dropShadow(A2, M2);
                }
                A2.node.classList.add("apexcharts-pie-label"), n3.config.chart.animations.animate && n3.globals.resized === false && (A2.node.classList.add("apexcharts-pie-label-delay"), A2.node.style.animationDelay = n3.config.chart.animations.speed / 940 + "s"), this.sliceLabels.push(E2);
              }
            }
          }
          return o2;
        } }, { key: "addListeners", value: function(t4, e3) {
          var n3 = new _(this.ctx);
          t4.node.addEventListener("mouseenter", n3.pathMouseEnter.bind(this, t4)), t4.node.addEventListener("mouseleave", n3.pathMouseLeave.bind(this, t4)), t4.node.addEventListener("mouseleave", this.revertDataLabelsInner.bind(this, t4.node, e3)), t4.node.addEventListener("mousedown", n3.pathMouseDown.bind(this, t4)), this.donutDataLabels.total.showAlways || (t4.node.addEventListener("mouseenter", this.printDataLabelsInner.bind(this, t4.node, e3)), t4.node.addEventListener("mousedown", this.printDataLabelsInner.bind(this, t4.node, e3)));
        } }, { key: "animatePaths", value: function(t4, e3) {
          var n3 = this.w, i2 = e3.endAngle < e3.startAngle ? this.fullAngle + e3.endAngle - e3.startAngle : e3.endAngle - e3.startAngle, a2 = i2, r2 = e3.startAngle, o2 = e3.startAngle;
          e3.prevStartAngle !== void 0 && e3.prevEndAngle !== void 0 && (r2 = e3.prevEndAngle, a2 = e3.prevEndAngle < e3.prevStartAngle ? this.fullAngle + e3.prevEndAngle - e3.prevStartAngle : e3.prevEndAngle - e3.prevStartAngle), e3.i === n3.config.series.length - 1 && (i2 + o2 > this.fullAngle ? e3.endAngle = e3.endAngle - (i2 + o2) : i2 + o2 < this.fullAngle && (e3.endAngle = e3.endAngle + (this.fullAngle - (i2 + o2)))), i2 === this.fullAngle && (i2 = this.fullAngle - 0.01), this.animateArc(t4, r2, o2, i2, a2, e3);
        } }, { key: "animateArc", value: function(t4, e3, n3, i2, a2, r2) {
          var o2, s2 = this, l2 = this.w, c2 = new y(this.ctx), d2 = r2.size;
          (isNaN(e3) || isNaN(a2)) && (e3 = n3, a2 = i2, r2.dur = 0);
          var u2 = i2, h2 = n3, p2 = e3 < n3 ? this.fullAngle + e3 - n3 : e3 - n3;
          l2.globals.dataChanged && r2.shouldSetPrevPaths && r2.prevEndAngle && (o2 = s2.getPiePath({ me: s2, startAngle: r2.prevStartAngle, angle: r2.prevEndAngle < r2.prevStartAngle ? this.fullAngle + r2.prevEndAngle - r2.prevStartAngle : r2.prevEndAngle - r2.prevStartAngle, size: d2 }), t4.attr({ d: o2 })), r2.dur !== 0 ? t4.animate(r2.dur, l2.globals.easing, r2.animBeginArr[r2.i]).afterAll(function() {
            s2.chartType !== "pie" && s2.chartType !== "donut" && s2.chartType !== "polarArea" || this.animate(l2.config.chart.animations.dynamicAnimation.speed).attr({ "stroke-width": s2.strokeWidth }), r2.i === l2.config.series.length - 1 && c2.animationCompleted(t4);
          }).during(function(l3) {
            u2 = p2 + (i2 - p2) * l3, r2.animateStartingPos && (u2 = a2 + (i2 - a2) * l3, h2 = e3 - a2 + (n3 - (e3 - a2)) * l3), o2 = s2.getPiePath({ me: s2, startAngle: h2, angle: u2, size: d2 }), t4.node.setAttribute("data:pathOrig", o2), t4.attr({ d: o2 });
          }) : (o2 = s2.getPiePath({ me: s2, startAngle: h2, angle: i2, size: d2 }), r2.isTrack || (l2.globals.animationEnded = true), t4.node.setAttribute("data:pathOrig", o2), t4.attr({ d: o2, "stroke-width": s2.strokeWidth }));
        } }, { key: "pieClicked", value: function(t4) {
          var e3, n3 = this.w, i2 = this, a2 = i2.sliceSizes[t4] + (n3.config.plotOptions.pie.expandOnClick ? 4 : 0), r2 = n3.globals.dom.Paper.select(".apexcharts-".concat(i2.chartType.toLowerCase(), "-slice-").concat(t4)).members[0];
          if (r2.attr("data:pieClicked") !== "true") {
            var o2 = n3.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area");
            Array.prototype.forEach.call(o2, function(t5) {
              t5.setAttribute("data:pieClicked", "false");
              var e4 = t5.getAttribute("data:pathOrig");
              t5.setAttribute("d", e4);
            }), r2.attr("data:pieClicked", "true");
            var s2 = parseInt(r2.attr("data:startAngle"), 10), l2 = parseInt(r2.attr("data:angle"), 10);
            e3 = i2.getPiePath({ me: i2, startAngle: s2, angle: l2, size: a2 }), l2 !== 360 && r2.plot(e3);
          } else {
            r2.attr({ "data:pieClicked": "false" }), this.revertDataLabelsInner(r2.node, this.donutDataLabels);
            var c2 = r2.attr("data:pathOrig");
            r2.attr({ d: c2 });
          }
        } }, { key: "getChangedPath", value: function(t4, e3) {
          var n3 = "";
          return this.dynamicAnim && this.w.globals.dataChanged && (n3 = this.getPiePath({ me: this, startAngle: t4, angle: e3 - t4, size: this.size })), n3;
        } }, { key: "getPiePath", value: function(t4) {
          var e3 = t4.me, n3 = t4.startAngle, i2 = t4.angle, a2 = t4.size, r2 = n3, o2 = Math.PI * (r2 - 90) / 180, s2 = i2 + n3;
          Math.ceil(s2) >= this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle && (s2 = this.fullAngle + this.w.config.plotOptions.pie.startAngle % this.fullAngle - 0.01), Math.ceil(s2) > this.fullAngle && (s2 -= this.fullAngle);
          var l2 = Math.PI * (s2 - 90) / 180, c2 = e3.centerX + a2 * Math.cos(o2), d2 = e3.centerY + a2 * Math.sin(o2), u2 = e3.centerX + a2 * Math.cos(l2), h2 = e3.centerY + a2 * Math.sin(l2), p2 = b.polarToCartesian(e3.centerX, e3.centerY, e3.donutSize, s2), f2 = b.polarToCartesian(e3.centerX, e3.centerY, e3.donutSize, r2), g2 = i2 > 180 ? 1 : 0, m2 = ["M", c2, d2, "A", a2, a2, 0, g2, 1, u2, h2];
          return e3.chartType === "donut" ? [].concat(m2, ["L", p2.x, p2.y, "A", e3.donutSize, e3.donutSize, 0, g2, 0, f2.x, f2.y, "L", c2, d2, "z"]).join(" ") : e3.chartType === "pie" || e3.chartType === "polarArea" ? [].concat(m2, ["L", e3.centerX, e3.centerY, "L", c2, d2]).join(" ") : [].concat(m2).join(" ");
        } }, { key: "drawPolarElements", value: function(t4) {
          var e3 = this.w, n3 = new Z(this.ctx), i2 = new _(this.ctx), a2 = new Dt(this.ctx), r2 = i2.group(), o2 = i2.group(), s2 = n3.niceScale(0, Math.ceil(this.maxY), e3.config.yaxis[0].tickAmount, 0, true), l2 = s2.result.reverse(), c2 = s2.result.length;
          this.maxY = s2.niceMax;
          for (var d2 = e3.globals.radialSize, u2 = d2 / (c2 - 1), h2 = 0; h2 < c2 - 1; h2++) {
            var p2 = i2.drawCircle(d2);
            if (p2.attr({ cx: this.centerX, cy: this.centerY, fill: "none", "stroke-width": e3.config.plotOptions.polarArea.rings.strokeWidth, stroke: e3.config.plotOptions.polarArea.rings.strokeColor }), e3.config.yaxis[0].show) {
              var f2 = a2.drawYAxisTexts(this.centerX, this.centerY - d2 + parseInt(e3.config.yaxis[0].labels.style.fontSize, 10) / 2, h2, l2[h2]);
              o2.add(f2);
            }
            r2.add(p2), d2 -= u2;
          }
          this.drawSpokes(t4), t4.add(r2), t4.add(o2);
        } }, { key: "renderInnerDataLabels", value: function(t4, e3) {
          var n3 = this.w, i2 = new _(this.ctx), a2 = i2.group({ class: "apexcharts-datalabels-group", transform: "translate(".concat(e3.translateX ? e3.translateX : 0, ", ").concat(e3.translateY ? e3.translateY : 0, ") scale(").concat(n3.config.plotOptions.pie.customScale, ")") }), r2 = t4.total.show;
          a2.node.style.opacity = e3.opacity;
          var o2, s2, l2 = e3.centerX, c2 = e3.centerY;
          o2 = t4.name.color === void 0 ? n3.globals.colors[0] : t4.name.color;
          var d2 = t4.name.fontSize, u2 = t4.name.fontFamily, h2 = t4.value.fontWeight;
          s2 = t4.value.color === void 0 ? n3.config.chart.foreColor : t4.value.color;
          var p2 = t4.value.formatter, f2 = "", g2 = "";
          if (r2 ? (o2 = t4.total.color, d2 = t4.total.fontSize, u2 = t4.total.fontFamily, h2 = t4.total.fontWeight, g2 = t4.total.label, f2 = t4.total.formatter(n3)) : n3.globals.series.length === 1 && (f2 = p2(n3.globals.series[0], n3), g2 = n3.globals.seriesNames[0]), g2 && (g2 = t4.name.formatter(g2, t4.total.show, n3)), t4.name.show) {
            var m2 = i2.drawText({ x: l2, y: c2 + parseFloat(t4.name.offsetY), text: g2, textAnchor: "middle", foreColor: o2, fontSize: d2, fontWeight: h2, fontFamily: u2 });
            m2.node.classList.add("apexcharts-datalabel-label"), a2.add(m2);
          }
          if (t4.value.show) {
            var v2 = t4.name.show ? parseFloat(t4.value.offsetY) + 16 : t4.value.offsetY, b2 = i2.drawText({ x: l2, y: c2 + v2, text: f2, textAnchor: "middle", foreColor: s2, fontWeight: t4.value.fontWeight, fontSize: t4.value.fontSize, fontFamily: t4.value.fontFamily });
            b2.node.classList.add("apexcharts-datalabel-value"), a2.add(b2);
          }
          return a2;
        } }, { key: "printInnerLabels", value: function(t4, e3, n3, i2) {
          var a2, r2 = this.w;
          i2 ? a2 = t4.name.color === void 0 ? r2.globals.colors[parseInt(i2.parentNode.getAttribute("rel"), 10) - 1] : t4.name.color : r2.globals.series.length > 1 && t4.total.show && (a2 = t4.total.color);
          var o2 = r2.globals.dom.baseEl.querySelector(".apexcharts-datalabel-label"), s2 = r2.globals.dom.baseEl.querySelector(".apexcharts-datalabel-value");
          n3 = (0, t4.value.formatter)(n3, r2), i2 || typeof t4.total.formatter != "function" || (n3 = t4.total.formatter(r2));
          var l2 = e3 === t4.total.label;
          e3 = t4.name.formatter(e3, l2, r2), o2 !== null && (o2.textContent = e3), s2 !== null && (s2.textContent = n3), o2 !== null && (o2.style.fill = a2);
        } }, { key: "printDataLabelsInner", value: function(t4, e3) {
          var n3 = this.w, i2 = t4.getAttribute("data:value"), a2 = n3.globals.seriesNames[parseInt(t4.parentNode.getAttribute("rel"), 10) - 1];
          n3.globals.series.length > 1 && this.printInnerLabels(e3, a2, i2, t4);
          var r2 = n3.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group");
          r2 !== null && (r2.style.opacity = 1);
        } }, { key: "drawSpokes", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = new _(this.ctx), a2 = n3.config.plotOptions.polarArea.spokes;
          if (a2.strokeWidth !== 0) {
            for (var r2 = [], o2 = 360 / n3.globals.series.length, s2 = 0; s2 < n3.globals.series.length; s2++)
              r2.push(b.polarToCartesian(this.centerX, this.centerY, n3.globals.radialSize, n3.config.plotOptions.pie.startAngle + o2 * s2));
            r2.forEach(function(n4, r3) {
              var o3 = i2.drawLine(n4.x, n4.y, e3.centerX, e3.centerY, Array.isArray(a2.connectorColors) ? a2.connectorColors[r3] : a2.connectorColors);
              t4.add(o3);
            });
          }
        } }, { key: "revertDataLabelsInner", value: function(t4, e3, n3) {
          var i2 = this, a2 = this.w, r2 = a2.globals.dom.baseEl.querySelector(".apexcharts-datalabels-group"), o2 = false, s2 = a2.globals.dom.baseEl.getElementsByClassName("apexcharts-pie-area"), l2 = function(t5) {
            var n4 = t5.makeSliceOut, a3 = t5.printLabel;
            Array.prototype.forEach.call(s2, function(t6) {
              t6.getAttribute("data:pieClicked") === "true" && (n4 && (o2 = true), a3 && i2.printDataLabelsInner(t6, e3));
            });
          };
          if (l2({ makeSliceOut: true, printLabel: false }), e3.total.show && a2.globals.series.length > 1)
            o2 && !e3.total.showAlways ? l2({ makeSliceOut: false, printLabel: true }) : this.printInnerLabels(e3, e3.total.label, e3.total.formatter(a2));
          else if (l2({ makeSliceOut: false, printLabel: true }), !o2)
            if (a2.globals.selectedDataPoints.length && a2.globals.series.length > 1)
              if (a2.globals.selectedDataPoints[0].length > 0) {
                var c2 = a2.globals.selectedDataPoints[0], d2 = a2.globals.dom.baseEl.querySelector(".apexcharts-".concat(this.chartType.toLowerCase(), "-slice-").concat(c2));
                this.printDataLabelsInner(d2, e3);
              } else
                r2 && a2.globals.selectedDataPoints.length && a2.globals.selectedDataPoints[0].length === 0 && (r2.style.opacity = 0);
            else
              r2 && a2.globals.series.length > 1 && (r2.style.opacity = 0);
        } }]), t3;
      }(), Et = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.chartType = this.w.config.chart.type, this.initialAnim = this.w.config.chart.animations.enabled, this.dynamicAnim = this.initialAnim && this.w.config.chart.animations.dynamicAnimation.enabled, this.animDur = 0;
          var n3 = this.w;
          this.graphics = new _(this.ctx), this.lineColorArr = n3.globals.stroke.colors !== void 0 ? n3.globals.stroke.colors : n3.globals.colors, this.defaultSize = n3.globals.svgHeight < n3.globals.svgWidth ? n3.globals.gridHeight + 1.5 * n3.globals.goldenPadding : n3.globals.gridWidth, this.isLog = n3.config.yaxis[0].logarithmic, this.coreUtils = new C(this.ctx), this.maxValue = this.isLog ? this.coreUtils.getLogVal(n3.globals.maxY, 0) : n3.globals.maxY, this.minValue = this.isLog ? this.coreUtils.getLogVal(this.w.globals.minY, 0) : n3.globals.minY, this.polygons = n3.config.plotOptions.radar.polygons, this.strokeWidth = n3.config.stroke.show ? n3.config.stroke.width : 0, this.size = this.defaultSize / 2.1 - this.strokeWidth - n3.config.chart.dropShadow.blur, n3.config.xaxis.labels.show && (this.size = this.size - n3.globals.xAxisLabelsWidth / 1.75), n3.config.plotOptions.radar.size !== void 0 && (this.size = n3.config.plotOptions.radar.size), this.dataRadiusOfPercent = [], this.dataRadius = [], this.angleArr = [], this.yaxisLabelsTextsPos = [];
        }
        return s(t3, [{ key: "draw", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = new I(this.ctx), a2 = [], r2 = new P(this.ctx);
          t4.length && (this.dataPointsLen = t4[n3.globals.maxValsInArrayIndex].length), this.disAngle = 2 * Math.PI / this.dataPointsLen;
          var o2 = n3.globals.gridWidth / 2, s2 = n3.globals.gridHeight / 2, l2 = o2 + n3.config.plotOptions.radar.offsetX, c2 = s2 + n3.config.plotOptions.radar.offsetY, u2 = this.graphics.group({ class: "apexcharts-radar-series apexcharts-plot-series", transform: "translate(".concat(l2 || 0, ", ").concat(c2 || 0, ")") }), h2 = [], p2 = null, f2 = null;
          if (this.yaxisLabels = this.graphics.group({ class: "apexcharts-yaxis" }), t4.forEach(function(t5, o3) {
            var s3 = t5.length === n3.globals.dataPoints, l3 = e3.graphics.group().attr({ class: "apexcharts-series", "data:longestSeries": s3, seriesName: b.escapeString(n3.globals.seriesNames[o3]), rel: o3 + 1, "data:realIndex": o3 });
            e3.dataRadiusOfPercent[o3] = [], e3.dataRadius[o3] = [], e3.angleArr[o3] = [], t5.forEach(function(t6, n4) {
              var i3 = Math.abs(e3.maxValue - e3.minValue);
              t6 += Math.abs(e3.minValue), e3.isLog && (t6 = e3.coreUtils.getLogVal(t6, 0)), e3.dataRadiusOfPercent[o3][n4] = t6 / i3, e3.dataRadius[o3][n4] = e3.dataRadiusOfPercent[o3][n4] * e3.size, e3.angleArr[o3][n4] = n4 * e3.disAngle;
            }), h2 = e3.getDataPointsPos(e3.dataRadius[o3], e3.angleArr[o3]);
            var c3 = e3.createPaths(h2, { x: 0, y: 0 });
            p2 = e3.graphics.group({ class: "apexcharts-series-markers-wrap apexcharts-element-hidden" }), f2 = e3.graphics.group({ class: "apexcharts-datalabels", "data:realIndex": o3 }), n3.globals.delayedElements.push({ el: p2.node, index: o3 });
            var u3 = { i: o3, realIndex: o3, animationDelay: o3, initialSpeed: n3.config.chart.animations.speed, dataChangeSpeed: n3.config.chart.animations.dynamicAnimation.speed, className: "apexcharts-radar", shouldClipToGrid: false, bindEventsOnPaths: false, stroke: n3.globals.stroke.colors[o3], strokeLineCap: n3.config.stroke.lineCap }, g3 = null;
            n3.globals.previousPaths.length > 0 && (g3 = e3.getPreviousPath(o3));
            for (var m2 = 0; m2 < c3.linePathsTo.length; m2++) {
              var v2 = e3.graphics.renderPaths(d(d({}, u3), {}, { pathFrom: g3 === null ? c3.linePathsFrom[m2] : g3, pathTo: c3.linePathsTo[m2], strokeWidth: Array.isArray(e3.strokeWidth) ? e3.strokeWidth[o3] : e3.strokeWidth, fill: "none", drawShadow: false }));
              l3.add(v2);
              var y2 = i2.fillPath({ seriesNumber: o3 }), _2 = e3.graphics.renderPaths(d(d({}, u3), {}, { pathFrom: g3 === null ? c3.areaPathsFrom[m2] : g3, pathTo: c3.areaPathsTo[m2], strokeWidth: 0, fill: y2, drawShadow: false }));
              if (n3.config.chart.dropShadow.enabled) {
                var w2 = new x(e3.ctx), S2 = n3.config.chart.dropShadow;
                w2.dropShadow(_2, Object.assign({}, S2, { noUserSpaceOnUse: true }), o3);
              }
              l3.add(_2);
            }
            t5.forEach(function(t6, i3) {
              var a3 = new M(e3.ctx).getMarkerConfig("apexcharts-marker", o3, i3), s4 = e3.graphics.drawMarker(h2[i3].x, h2[i3].y, a3);
              s4.attr("rel", i3), s4.attr("j", i3), s4.attr("index", o3), s4.node.setAttribute("default-marker-size", a3.pSize);
              var c4 = e3.graphics.group({ class: "apexcharts-series-markers" });
              c4 && c4.add(s4), p2.add(c4), l3.add(p2);
              var u4 = n3.config.dataLabels;
              if (u4.enabled) {
                var g4 = u4.formatter(n3.globals.series[o3][i3], { seriesIndex: o3, dataPointIndex: i3, w: n3 });
                r2.plotDataLabelsText({ x: h2[i3].x, y: h2[i3].y, text: g4, textAnchor: "middle", i: o3, j: o3, parent: f2, offsetCorrection: false, dataLabelsConfig: d({}, u4) });
              }
              l3.add(f2);
            }), a2.push(l3);
          }), this.drawPolygons({ parent: u2 }), n3.config.xaxis.labels.show) {
            var g2 = this.drawXAxisTexts();
            u2.add(g2);
          }
          return a2.forEach(function(t5) {
            u2.add(t5);
          }), u2.add(this.yaxisLabels), u2;
        } }, { key: "drawPolygons", value: function(t4) {
          for (var e3 = this, n3 = this.w, i2 = t4.parent, a2 = new Dt(this.ctx), r2 = n3.globals.yAxisScale[0].result.reverse(), o2 = r2.length, s2 = [], l2 = this.size / (o2 - 1), c2 = 0; c2 < o2; c2++)
            s2[c2] = l2 * c2;
          s2.reverse();
          var d2 = [], u2 = [];
          s2.forEach(function(t5, n4) {
            var i3 = b.getPolygonPos(t5, e3.dataPointsLen), a3 = "";
            i3.forEach(function(t6, i4) {
              if (n4 === 0) {
                var r3 = e3.graphics.drawLine(t6.x, t6.y, 0, 0, Array.isArray(e3.polygons.connectorColors) ? e3.polygons.connectorColors[i4] : e3.polygons.connectorColors);
                u2.push(r3);
              }
              i4 === 0 && e3.yaxisLabelsTextsPos.push({ x: t6.x, y: t6.y }), a3 += t6.x + "," + t6.y + " ";
            }), d2.push(a3);
          }), d2.forEach(function(t5, a3) {
            var r3 = e3.polygons.strokeColors, o3 = e3.polygons.strokeWidth, s3 = e3.graphics.drawPolygon(t5, Array.isArray(r3) ? r3[a3] : r3, Array.isArray(o3) ? o3[a3] : o3, n3.globals.radarPolygons.fill.colors[a3]);
            i2.add(s3);
          }), u2.forEach(function(t5) {
            i2.add(t5);
          }), n3.config.yaxis[0].show && this.yaxisLabelsTextsPos.forEach(function(t5, n4) {
            var i3 = a2.drawYAxisTexts(t5.x, t5.y, n4, r2[n4]);
            e3.yaxisLabels.add(i3);
          });
        } }, { key: "drawXAxisTexts", value: function() {
          var t4 = this, e3 = this.w, n3 = e3.config.xaxis.labels, i2 = this.graphics.group({ class: "apexcharts-xaxis" }), a2 = b.getPolygonPos(this.size, this.dataPointsLen);
          return e3.globals.labels.forEach(function(r2, o2) {
            var s2 = e3.config.xaxis.labels.formatter, l2 = new P(t4.ctx);
            if (a2[o2]) {
              var c2 = t4.getTextPos(a2[o2], t4.size), u2 = s2(r2, { seriesIndex: -1, dataPointIndex: o2, w: e3 });
              l2.plotDataLabelsText({ x: c2.newX, y: c2.newY, text: u2, textAnchor: c2.textAnchor, i: o2, j: o2, parent: i2, color: Array.isArray(n3.style.colors) && n3.style.colors[o2] ? n3.style.colors[o2] : "#a8a8a8", dataLabelsConfig: d({ textAnchor: c2.textAnchor, dropShadow: { enabled: false } }, n3), offsetCorrection: false });
            }
          }), i2;
        } }, { key: "createPaths", value: function(t4, e3) {
          var n3 = this, i2 = [], a2 = [], r2 = [], o2 = [];
          if (t4.length) {
            a2 = [this.graphics.move(e3.x, e3.y)], o2 = [this.graphics.move(e3.x, e3.y)];
            var s2 = this.graphics.move(t4[0].x, t4[0].y), l2 = this.graphics.move(t4[0].x, t4[0].y);
            t4.forEach(function(e4, i3) {
              s2 += n3.graphics.line(e4.x, e4.y), l2 += n3.graphics.line(e4.x, e4.y), i3 === t4.length - 1 && (s2 += "Z", l2 += "Z");
            }), i2.push(s2), r2.push(l2);
          }
          return { linePathsFrom: a2, linePathsTo: i2, areaPathsFrom: o2, areaPathsTo: r2 };
        } }, { key: "getTextPos", value: function(t4, e3) {
          var n3 = "middle", i2 = t4.x, a2 = t4.y;
          return Math.abs(t4.x) >= 10 ? t4.x > 0 ? (n3 = "start", i2 += 10) : t4.x < 0 && (n3 = "end", i2 -= 10) : n3 = "middle", Math.abs(t4.y) >= e3 - 10 && (t4.y < 0 ? a2 -= 10 : t4.y > 0 && (a2 += 10)), { textAnchor: n3, newX: i2, newY: a2 };
        } }, { key: "getPreviousPath", value: function(t4) {
          for (var e3 = this.w, n3 = null, i2 = 0; i2 < e3.globals.previousPaths.length; i2++) {
            var a2 = e3.globals.previousPaths[i2];
            a2.paths.length > 0 && parseInt(a2.realIndex, 10) === parseInt(t4, 10) && e3.globals.previousPaths[i2].paths[0] !== void 0 && (n3 = e3.globals.previousPaths[i2].paths[0].d);
          }
          return n3;
        } }, { key: "getDataPointsPos", value: function(t4, e3) {
          var n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : this.dataPointsLen;
          t4 = t4 || [], e3 = e3 || [];
          for (var i2 = [], a2 = 0; a2 < n3; a2++) {
            var r2 = {};
            r2.x = t4[a2] * Math.sin(e3[a2]), r2.y = -t4[a2] * Math.cos(e3[a2]), i2.push(r2);
          }
          return i2;
        } }]), t3;
      }(), At = function(t3) {
        u(n3, Tt);
        var e3 = g(n3);
        function n3(t4) {
          var i2;
          r(this, n3), (i2 = e3.call(this, t4)).ctx = t4, i2.w = t4.w, i2.animBeginArr = [0], i2.animDur = 0;
          var a2 = i2.w;
          return i2.startAngle = a2.config.plotOptions.radialBar.startAngle, i2.endAngle = a2.config.plotOptions.radialBar.endAngle, i2.totalAngle = Math.abs(a2.config.plotOptions.radialBar.endAngle - a2.config.plotOptions.radialBar.startAngle), i2.trackStartAngle = a2.config.plotOptions.radialBar.track.startAngle, i2.trackEndAngle = a2.config.plotOptions.radialBar.track.endAngle, i2.radialDataLabels = a2.config.plotOptions.radialBar.dataLabels, i2.trackStartAngle || (i2.trackStartAngle = i2.startAngle), i2.trackEndAngle || (i2.trackEndAngle = i2.endAngle), i2.endAngle === 360 && (i2.endAngle = 359.99), i2.margin = parseInt(a2.config.plotOptions.radialBar.track.margin, 10), i2;
        }
        return s(n3, [{ key: "draw", value: function(t4) {
          var e4 = this.w, n4 = new _(this.ctx), i2 = n4.group({ class: "apexcharts-radialbar" });
          if (e4.globals.noData)
            return i2;
          var a2 = n4.group(), r2 = this.defaultSize / 2, o2 = e4.globals.gridWidth / 2, s2 = this.defaultSize / 2.05;
          e4.config.chart.sparkline.enabled || (s2 = s2 - e4.config.stroke.width - e4.config.chart.dropShadow.blur);
          var l2 = e4.globals.fill.colors;
          if (e4.config.plotOptions.radialBar.track.show) {
            var c2 = this.drawTracks({ size: s2, centerX: o2, centerY: r2, colorArr: l2, series: t4 });
            a2.add(c2);
          }
          var d2 = this.drawArcs({ size: s2, centerX: o2, centerY: r2, colorArr: l2, series: t4 }), u2 = 360;
          e4.config.plotOptions.radialBar.startAngle < 0 && (u2 = this.totalAngle);
          var h2 = (360 - u2) / 360;
          if (e4.globals.radialSize = s2 - s2 * h2, this.radialDataLabels.value.show) {
            var p2 = Math.max(this.radialDataLabels.value.offsetY, this.radialDataLabels.name.offsetY);
            e4.globals.radialSize += p2 * h2;
          }
          return a2.add(d2.g), e4.config.plotOptions.radialBar.hollow.position === "front" && (d2.g.add(d2.elHollow), d2.dataLabels && d2.g.add(d2.dataLabels)), i2.add(a2), i2;
        } }, { key: "drawTracks", value: function(t4) {
          var e4 = this.w, n4 = new _(this.ctx), i2 = n4.group({ class: "apexcharts-tracks" }), a2 = new x(this.ctx), r2 = new I(this.ctx), o2 = this.getStrokeWidth(t4);
          t4.size = t4.size - o2 / 2;
          for (var s2 = 0; s2 < t4.series.length; s2++) {
            var l2 = n4.group({ class: "apexcharts-radialbar-track apexcharts-track" });
            i2.add(l2), l2.attr({ rel: s2 + 1 }), t4.size = t4.size - o2 - this.margin;
            var c2 = e4.config.plotOptions.radialBar.track, d2 = r2.fillPath({ seriesNumber: 0, size: t4.size, fillColors: Array.isArray(c2.background) ? c2.background[s2] : c2.background, solid: true }), u2 = this.trackStartAngle, h2 = this.trackEndAngle;
            Math.abs(h2) + Math.abs(u2) >= 360 && (h2 = 360 - Math.abs(this.startAngle) - 0.1);
            var p2 = n4.drawPath({ d: "", stroke: d2, strokeWidth: o2 * parseInt(c2.strokeWidth, 10) / 100, fill: "none", strokeOpacity: c2.opacity, classes: "apexcharts-radialbar-area" });
            if (c2.dropShadow.enabled) {
              var f2 = c2.dropShadow;
              a2.dropShadow(p2, f2);
            }
            l2.add(p2), p2.attr("id", "apexcharts-radialbarTrack-" + s2), this.animatePaths(p2, { centerX: t4.centerX, centerY: t4.centerY, endAngle: h2, startAngle: u2, size: t4.size, i: s2, totalItems: 2, animBeginArr: 0, dur: 0, isTrack: true, easing: e4.globals.easing });
          }
          return i2;
        } }, { key: "drawArcs", value: function(t4) {
          var e4 = this.w, n4 = new _(this.ctx), i2 = new I(this.ctx), a2 = new x(this.ctx), r2 = n4.group(), o2 = this.getStrokeWidth(t4);
          t4.size = t4.size - o2 / 2;
          var s2 = e4.config.plotOptions.radialBar.hollow.background, l2 = t4.size - o2 * t4.series.length - this.margin * t4.series.length - o2 * parseInt(e4.config.plotOptions.radialBar.track.strokeWidth, 10) / 100 / 2, c2 = l2 - e4.config.plotOptions.radialBar.hollow.margin;
          e4.config.plotOptions.radialBar.hollow.image !== void 0 && (s2 = this.drawHollowImage(t4, r2, l2, s2));
          var d2 = this.drawHollow({ size: c2, centerX: t4.centerX, centerY: t4.centerY, fill: s2 || "transparent" });
          if (e4.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
            var u2 = e4.config.plotOptions.radialBar.hollow.dropShadow;
            a2.dropShadow(d2, u2);
          }
          var h2 = 1;
          !this.radialDataLabels.total.show && e4.globals.series.length > 1 && (h2 = 0);
          var p2 = null;
          this.radialDataLabels.show && (p2 = this.renderInnerDataLabels(this.radialDataLabels, { hollowSize: l2, centerX: t4.centerX, centerY: t4.centerY, opacity: h2 })), e4.config.plotOptions.radialBar.hollow.position === "back" && (r2.add(d2), p2 && r2.add(p2));
          var f2 = false;
          e4.config.plotOptions.radialBar.inverseOrder && (f2 = true);
          for (var g2 = f2 ? t4.series.length - 1 : 0; f2 ? g2 >= 0 : g2 < t4.series.length; f2 ? g2-- : g2++) {
            var m2 = n4.group({ class: "apexcharts-series apexcharts-radial-series", seriesName: b.escapeString(e4.globals.seriesNames[g2]) });
            r2.add(m2), m2.attr({ rel: g2 + 1, "data:realIndex": g2 }), this.ctx.series.addCollapsedClassToSeries(m2, g2), t4.size = t4.size - o2 - this.margin;
            var v2 = i2.fillPath({ seriesNumber: g2, size: t4.size, value: t4.series[g2] }), y2 = this.startAngle, w2 = void 0, S2 = b.negToZero(t4.series[g2] > 100 ? 100 : t4.series[g2]) / 100, C2 = Math.round(this.totalAngle * S2) + this.startAngle, k2 = void 0;
            e4.globals.dataChanged && (w2 = this.startAngle, k2 = Math.round(this.totalAngle * b.negToZero(e4.globals.previousPaths[g2]) / 100) + w2), Math.abs(C2) + Math.abs(y2) >= 360 && (C2 -= 0.01), Math.abs(k2) + Math.abs(w2) >= 360 && (k2 -= 0.01);
            var D2 = C2 - y2, T2 = Array.isArray(e4.config.stroke.dashArray) ? e4.config.stroke.dashArray[g2] : e4.config.stroke.dashArray, E2 = n4.drawPath({ d: "", stroke: v2, strokeWidth: o2, fill: "none", fillOpacity: e4.config.fill.opacity, classes: "apexcharts-radialbar-area apexcharts-radialbar-slice-" + g2, strokeDashArray: T2 });
            if (_.setAttrs(E2.node, { "data:angle": D2, "data:value": t4.series[g2] }), e4.config.chart.dropShadow.enabled) {
              var A2 = e4.config.chart.dropShadow;
              a2.dropShadow(E2, A2, g2);
            }
            a2.setSelectionFilter(E2, 0, g2), this.addListeners(E2, this.radialDataLabels), m2.add(E2), E2.attr({ index: 0, j: g2 });
            var M2 = 0;
            !this.initialAnim || e4.globals.resized || e4.globals.dataChanged || (M2 = (C2 - y2) / 360 * e4.config.chart.animations.speed, this.animDur = M2 / (1.2 * t4.series.length) + this.animDur, this.animBeginArr.push(this.animDur)), e4.globals.dataChanged && (M2 = (C2 - y2) / 360 * e4.config.chart.animations.dynamicAnimation.speed, this.animDur = M2 / (1.2 * t4.series.length) + this.animDur, this.animBeginArr.push(this.animDur)), this.animatePaths(E2, { centerX: t4.centerX, centerY: t4.centerY, endAngle: C2, startAngle: y2, prevEndAngle: k2, prevStartAngle: w2, size: t4.size, i: g2, totalItems: 2, animBeginArr: this.animBeginArr, dur: M2, shouldSetPrevPaths: true, easing: e4.globals.easing });
          }
          return { g: r2, elHollow: d2, dataLabels: p2 };
        } }, { key: "drawHollow", value: function(t4) {
          var e4 = new _(this.ctx).drawCircle(2 * t4.size);
          return e4.attr({ class: "apexcharts-radialbar-hollow", cx: t4.centerX, cy: t4.centerY, r: t4.size, fill: t4.fill }), e4;
        } }, { key: "drawHollowImage", value: function(t4, e4, n4, i2) {
          var a2 = this.w, r2 = new I(this.ctx), o2 = b.randomId(), s2 = a2.config.plotOptions.radialBar.hollow.image;
          if (a2.config.plotOptions.radialBar.hollow.imageClipped)
            r2.clippedImgArea({ width: n4, height: n4, image: s2, patternID: "pattern".concat(a2.globals.cuid).concat(o2) }), i2 = "url(#pattern".concat(a2.globals.cuid).concat(o2, ")");
          else {
            var l2 = a2.config.plotOptions.radialBar.hollow.imageWidth, c2 = a2.config.plotOptions.radialBar.hollow.imageHeight;
            if (l2 === void 0 && c2 === void 0) {
              var d2 = a2.globals.dom.Paper.image(s2).loaded(function(e5) {
                this.move(t4.centerX - e5.width / 2 + a2.config.plotOptions.radialBar.hollow.imageOffsetX, t4.centerY - e5.height / 2 + a2.config.plotOptions.radialBar.hollow.imageOffsetY);
              });
              e4.add(d2);
            } else {
              var u2 = a2.globals.dom.Paper.image(s2).loaded(function(e5) {
                this.move(t4.centerX - l2 / 2 + a2.config.plotOptions.radialBar.hollow.imageOffsetX, t4.centerY - c2 / 2 + a2.config.plotOptions.radialBar.hollow.imageOffsetY), this.size(l2, c2);
              });
              e4.add(u2);
            }
          }
          return i2;
        } }, { key: "getStrokeWidth", value: function(t4) {
          var e4 = this.w;
          return t4.size * (100 - parseInt(e4.config.plotOptions.radialBar.hollow.size, 10)) / 100 / (t4.series.length + 1) - this.margin;
        } }]), n3;
      }(), It = function() {
        function t3(e3) {
          r(this, t3), this.w = e3.w, this.lineCtx = e3;
        }
        return s(t3, [{ key: "sameValueSeriesFix", value: function(t4, e3) {
          var n3 = this.w;
          if (n3.config.chart.type === "line" && (n3.config.fill.type === "gradient" || n3.config.fill.type[t4] === "gradient") && new C(this.lineCtx.ctx, n3).seriesHaveSameValues(t4)) {
            var i2 = e3[t4].slice();
            i2[i2.length - 1] = i2[i2.length - 1] + 1e-6, e3[t4] = i2;
          }
          return e3;
        } }, { key: "calculatePoints", value: function(t4) {
          var e3 = t4.series, n3 = t4.realIndex, i2 = t4.x, a2 = t4.y, r2 = t4.i, o2 = t4.j, s2 = t4.prevY, l2 = this.w, c2 = [], d2 = [];
          if (o2 === 0) {
            var u2 = this.lineCtx.categoryAxisCorrection + l2.config.markers.offsetX;
            l2.globals.isXNumeric && (u2 = (l2.globals.seriesX[n3][0] - l2.globals.minX) / this.lineCtx.xRatio + l2.config.markers.offsetX), c2.push(u2), d2.push(b.isNumber(e3[r2][0]) ? s2 + l2.config.markers.offsetY : null), c2.push(i2 + l2.config.markers.offsetX), d2.push(b.isNumber(e3[r2][o2 + 1]) ? a2 + l2.config.markers.offsetY : null);
          } else
            c2.push(i2 + l2.config.markers.offsetX), d2.push(b.isNumber(e3[r2][o2 + 1]) ? a2 + l2.config.markers.offsetY : null);
          return { x: c2, y: d2 };
        } }, { key: "checkPreviousPaths", value: function(t4) {
          for (var e3 = t4.pathFromLine, n3 = t4.pathFromArea, i2 = t4.realIndex, a2 = this.w, r2 = 0; r2 < a2.globals.previousPaths.length; r2++) {
            var o2 = a2.globals.previousPaths[r2];
            (o2.type === "line" || o2.type === "area") && o2.paths.length > 0 && parseInt(o2.realIndex, 10) === parseInt(i2, 10) && (o2.type === "line" ? (this.lineCtx.appendPathFrom = false, e3 = a2.globals.previousPaths[r2].paths[0].d) : o2.type === "area" && (this.lineCtx.appendPathFrom = false, n3 = a2.globals.previousPaths[r2].paths[0].d, a2.config.stroke.show && a2.globals.previousPaths[r2].paths[1] && (e3 = a2.globals.previousPaths[r2].paths[1].d)));
          }
          return { pathFromLine: e3, pathFromArea: n3 };
        } }, { key: "determineFirstPrevY", value: function(t4) {
          var e3 = t4.i, n3 = t4.series, i2 = t4.prevY, a2 = t4.lineYPosition, r2 = this.w;
          if (n3[e3][0] !== void 0)
            i2 = (a2 = r2.config.chart.stacked && e3 > 0 ? this.lineCtx.prevSeriesY[e3 - 1][0] : this.lineCtx.zeroY) - n3[e3][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] + 2 * (this.lineCtx.isReversed ? n3[e3][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] : 0);
          else if (r2.config.chart.stacked && e3 > 0 && n3[e3][0] === void 0) {
            for (var o2 = e3 - 1; o2 >= 0; o2--)
              if (n3[o2][0] !== null && n3[o2][0] !== void 0) {
                i2 = a2 = this.lineCtx.prevSeriesY[o2][0];
                break;
              }
          }
          return { prevY: i2, lineYPosition: a2 };
        } }]), t3;
      }(), Mt = function() {
        function t3(e3, n3, i2) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.xyRatios = n3, this.pointsChart = !(this.w.config.chart.type !== "bubble" && this.w.config.chart.type !== "scatter") || i2, this.scatter = new R(this.ctx), this.noNegatives = this.w.globals.minX === Number.MAX_VALUE, this.lineHelpers = new It(this), this.markers = new M(this.ctx), this.prevSeriesY = [], this.categoryAxisCorrection = 0, this.yaxisIndex = 0;
        }
        return s(t3, [{ key: "draw", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = new _(this.ctx), r2 = i2.globals.comboCharts ? e3 : i2.config.chart.type, o2 = a2.group({ class: "apexcharts-".concat(r2, "-series apexcharts-plot-series") }), s2 = new C(this.ctx, i2);
          this.yRatio = this.xyRatios.yRatio, this.zRatio = this.xyRatios.zRatio, this.xRatio = this.xyRatios.xRatio, this.baseLineY = this.xyRatios.baseLineY, t4 = s2.getLogSeries(t4), this.yRatio = s2.getLogYRatios(this.yRatio);
          for (var l2 = [], c2 = 0; c2 < t4.length; c2++) {
            t4 = this.lineHelpers.sameValueSeriesFix(c2, t4);
            var d2 = i2.globals.comboCharts ? n3[c2] : c2;
            this._initSerieVariables(t4, c2, d2);
            var u2 = [], h2 = [], p2 = i2.globals.padHorizontal + this.categoryAxisCorrection;
            this.ctx.series.addCollapsedClassToSeries(this.elSeries, d2), i2.globals.isXNumeric && i2.globals.seriesX.length > 0 && (p2 = (i2.globals.seriesX[d2][0] - i2.globals.minX) / this.xRatio), h2.push(p2);
            var f2, g2 = p2, m2 = g2, v2 = this.zeroY;
            v2 = this.lineHelpers.determineFirstPrevY({ i: c2, series: t4, prevY: v2, lineYPosition: 0 }).prevY, u2.push(v2), f2 = v2;
            var b2 = this._calculatePathsFrom({ series: t4, i: c2, realIndex: d2, prevX: m2, prevY: v2 }), y2 = this._iterateOverDataPoints({ series: t4, realIndex: d2, i: c2, x: p2, y: 1, pX: g2, pY: f2, pathsFrom: b2, linePaths: [], areaPaths: [], seriesIndex: n3, lineYPosition: 0, xArrj: h2, yArrj: u2 });
            this._handlePaths({ type: r2, realIndex: d2, i: c2, paths: y2 }), this.elSeries.add(this.elPointsMain), this.elSeries.add(this.elDataLabelsWrap), l2.push(this.elSeries);
          }
          if (i2.config.chart.stacked)
            for (var x2 = l2.length; x2 > 0; x2--)
              o2.add(l2[x2 - 1]);
          else
            for (var w2 = 0; w2 < l2.length; w2++)
              o2.add(l2[w2]);
          return o2;
        } }, { key: "_initSerieVariables", value: function(t4, e3, n3) {
          var i2 = this.w, a2 = new _(this.ctx);
          this.xDivision = i2.globals.gridWidth / (i2.globals.dataPoints - (i2.config.xaxis.tickPlacement === "on" ? 1 : 0)), this.strokeWidth = Array.isArray(i2.config.stroke.width) ? i2.config.stroke.width[n3] : i2.config.stroke.width, this.yRatio.length > 1 && (this.yaxisIndex = n3), this.isReversed = i2.config.yaxis[this.yaxisIndex] && i2.config.yaxis[this.yaxisIndex].reversed, this.zeroY = i2.globals.gridHeight - this.baseLineY[this.yaxisIndex] - (this.isReversed ? i2.globals.gridHeight : 0) + (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0), this.areaBottomY = this.zeroY, (this.zeroY > i2.globals.gridHeight || i2.config.plotOptions.area.fillTo === "end") && (this.areaBottomY = i2.globals.gridHeight), this.categoryAxisCorrection = this.xDivision / 2, this.elSeries = a2.group({ class: "apexcharts-series", seriesName: b.escapeString(i2.globals.seriesNames[n3]) }), this.elPointsMain = a2.group({ class: "apexcharts-series-markers-wrap", "data:realIndex": n3 }), this.elDataLabelsWrap = a2.group({ class: "apexcharts-datalabels", "data:realIndex": n3 });
          var r2 = t4[e3].length === i2.globals.dataPoints;
          this.elSeries.attr({ "data:longestSeries": r2, rel: e3 + 1, "data:realIndex": n3 }), this.appendPathFrom = true;
        } }, { key: "_calculatePathsFrom", value: function(t4) {
          var e3, n3, i2, a2, r2 = t4.series, o2 = t4.i, s2 = t4.realIndex, l2 = t4.prevX, c2 = t4.prevY, d2 = this.w, u2 = new _(this.ctx);
          if (r2[o2][0] === null) {
            for (var h2 = 0; h2 < r2[o2].length; h2++)
              if (r2[o2][h2] !== null) {
                l2 = this.xDivision * h2, c2 = this.zeroY - r2[o2][h2] / this.yRatio[this.yaxisIndex], e3 = u2.move(l2, c2), n3 = u2.move(l2, this.areaBottomY);
                break;
              }
          } else
            e3 = u2.move(l2, c2), n3 = u2.move(l2, this.areaBottomY) + u2.line(l2, c2);
          if (i2 = u2.move(-1, this.zeroY) + u2.line(-1, this.zeroY), a2 = u2.move(-1, this.zeroY) + u2.line(-1, this.zeroY), d2.globals.previousPaths.length > 0) {
            var p2 = this.lineHelpers.checkPreviousPaths({ pathFromLine: i2, pathFromArea: a2, realIndex: s2 });
            i2 = p2.pathFromLine, a2 = p2.pathFromArea;
          }
          return { prevX: l2, prevY: c2, linePath: e3, areaPath: n3, pathFromLine: i2, pathFromArea: a2 };
        } }, { key: "_handlePaths", value: function(t4) {
          var e3 = t4.type, n3 = t4.realIndex, i2 = t4.i, a2 = t4.paths, r2 = this.w, o2 = new _(this.ctx), s2 = new I(this.ctx);
          this.prevSeriesY.push(a2.yArrj), r2.globals.seriesXvalues[n3] = a2.xArrj, r2.globals.seriesYvalues[n3] = a2.yArrj;
          var l2 = r2.config.forecastDataPoints;
          if (l2.count > 0) {
            var c2 = r2.globals.seriesXvalues[n3][r2.globals.seriesXvalues[n3].length - l2.count - 1], u2 = o2.drawRect(c2, 0, r2.globals.gridWidth, r2.globals.gridHeight, 0);
            r2.globals.dom.elForecastMask.appendChild(u2.node);
            var h2 = o2.drawRect(0, 0, c2, r2.globals.gridHeight, 0);
            r2.globals.dom.elNonForecastMask.appendChild(h2.node);
          }
          this.pointsChart || r2.globals.delayedElements.push({ el: this.elPointsMain.node, index: n3 });
          var p2 = { i: i2, realIndex: n3, animationDelay: i2, initialSpeed: r2.config.chart.animations.speed, dataChangeSpeed: r2.config.chart.animations.dynamicAnimation.speed, className: "apexcharts-".concat(e3) };
          if (e3 === "area")
            for (var f2 = s2.fillPath({ seriesNumber: n3 }), g2 = 0; g2 < a2.areaPaths.length; g2++) {
              var m2 = o2.renderPaths(d(d({}, p2), {}, { pathFrom: a2.pathFromArea, pathTo: a2.areaPaths[g2], stroke: "none", strokeWidth: 0, strokeLineCap: null, fill: f2 }));
              this.elSeries.add(m2);
            }
          if (r2.config.stroke.show && !this.pointsChart) {
            var v2;
            v2 = e3 === "line" ? s2.fillPath({ seriesNumber: n3, i: i2 }) : r2.globals.stroke.colors[n3];
            for (var b2 = 0; b2 < a2.linePaths.length; b2++) {
              var y2 = d(d({}, p2), {}, { pathFrom: a2.pathFromLine, pathTo: a2.linePaths[b2], stroke: v2, strokeWidth: this.strokeWidth, strokeLineCap: r2.config.stroke.lineCap, fill: "none" }), x2 = o2.renderPaths(y2);
              if (this.elSeries.add(x2), l2.count > 0) {
                var w2 = o2.renderPaths(y2);
                w2.node.setAttribute("stroke-dasharray", l2.dashArray), l2.strokeWidth && w2.node.setAttribute("stroke-width", l2.strokeWidth), this.elSeries.add(w2), w2.attr("clip-path", "url(#forecastMask".concat(r2.globals.cuid, ")")), x2.attr("clip-path", "url(#nonForecastMask".concat(r2.globals.cuid, ")"));
              }
            }
          }
        } }, { key: "_iterateOverDataPoints", value: function(t4) {
          for (var e3 = t4.series, n3 = t4.realIndex, i2 = t4.i, a2 = t4.x, r2 = t4.y, o2 = t4.pX, s2 = t4.pY, l2 = t4.pathsFrom, c2 = t4.linePaths, d2 = t4.areaPaths, u2 = t4.seriesIndex, h2 = t4.lineYPosition, p2 = t4.xArrj, f2 = t4.yArrj, g2 = this.w, m2 = new _(this.ctx), v2 = this.yRatio, y2 = l2.prevY, x2 = l2.linePath, w2 = l2.areaPath, S2 = l2.pathFromLine, C2 = l2.pathFromArea, k2 = b.isNumber(g2.globals.minYArr[n3]) ? g2.globals.minYArr[n3] : g2.globals.minY, D2 = g2.globals.dataPoints > 1 ? g2.globals.dataPoints - 1 : g2.globals.dataPoints, T2 = 0; T2 < D2; T2++) {
            var E2 = e3[i2][T2 + 1] === void 0 || e3[i2][T2 + 1] === null;
            if (g2.globals.isXNumeric) {
              var A2 = g2.globals.seriesX[n3][T2 + 1];
              g2.globals.seriesX[n3][T2 + 1] === void 0 && (A2 = g2.globals.seriesX[n3][D2 - 1]), a2 = (A2 - g2.globals.minX) / this.xRatio;
            } else
              a2 += this.xDivision;
            h2 = g2.config.chart.stacked && i2 > 0 && g2.globals.collapsedSeries.length < g2.config.series.length - 1 ? this.prevSeriesY[function(t5) {
              for (var e4 = t5, n4 = 0; n4 < g2.globals.series.length; n4++)
                if (g2.globals.collapsedSeriesIndices.indexOf(t5) > -1) {
                  e4--;
                  break;
                }
              return e4 >= 0 ? e4 : 0;
            }(i2 - 1)][T2 + 1] : this.zeroY, r2 = E2 ? h2 - k2 / v2[this.yaxisIndex] + 2 * (this.isReversed ? k2 / v2[this.yaxisIndex] : 0) : h2 - e3[i2][T2 + 1] / v2[this.yaxisIndex] + 2 * (this.isReversed ? e3[i2][T2 + 1] / v2[this.yaxisIndex] : 0), p2.push(a2), f2.push(r2);
            var I2 = this.lineHelpers.calculatePoints({ series: e3, x: a2, y: r2, realIndex: n3, i: i2, j: T2, prevY: y2 }), M2 = this._createPaths({ series: e3, i: i2, realIndex: n3, j: T2, x: a2, y: r2, pX: o2, pY: s2, linePath: x2, areaPath: w2, linePaths: c2, areaPaths: d2, seriesIndex: u2 });
            d2 = M2.areaPaths, c2 = M2.linePaths, o2 = M2.pX, s2 = M2.pY, w2 = M2.areaPath, x2 = M2.linePath, this.appendPathFrom && (S2 += m2.line(a2, this.zeroY), C2 += m2.line(a2, this.zeroY)), this.handleNullDataPoints(e3, I2, i2, T2, n3), this._handleMarkersAndLabels({ pointsPos: I2, series: e3, x: a2, y: r2, prevY: y2, i: i2, j: T2, realIndex: n3 });
          }
          return { yArrj: f2, xArrj: p2, pathFromArea: C2, areaPaths: d2, pathFromLine: S2, linePaths: c2 };
        } }, { key: "_handleMarkersAndLabels", value: function(t4) {
          var e3 = t4.pointsPos;
          t4.series, t4.x, t4.y, t4.prevY;
          var n3 = t4.i, i2 = t4.j, a2 = t4.realIndex, r2 = this.w, o2 = new P(this.ctx);
          if (this.pointsChart)
            this.scatter.draw(this.elSeries, i2, { realIndex: a2, pointsPos: e3, zRatio: this.zRatio, elParent: this.elPointsMain });
          else {
            r2.globals.series[n3].length > 1 && this.elPointsMain.node.classList.add("apexcharts-element-hidden");
            var s2 = this.markers.plotChartMarkers(e3, a2, i2 + 1);
            s2 !== null && this.elPointsMain.add(s2);
          }
          var l2 = o2.drawDataLabel(e3, a2, i2 + 1, null);
          l2 !== null && this.elDataLabelsWrap.add(l2);
        } }, { key: "_createPaths", value: function(t4) {
          var e3 = t4.series, n3 = t4.i, i2 = t4.realIndex, a2 = t4.j, r2 = t4.x, o2 = t4.y, s2 = t4.pX, l2 = t4.pY, c2 = t4.linePath, d2 = t4.areaPath, u2 = t4.linePaths, h2 = t4.areaPaths, p2 = t4.seriesIndex, f2 = this.w, g2 = new _(this.ctx), m2 = f2.config.stroke.curve, v2 = this.areaBottomY;
          if (Array.isArray(f2.config.stroke.curve) && (m2 = Array.isArray(p2) ? f2.config.stroke.curve[p2[n3]] : f2.config.stroke.curve[n3]), m2 === "smooth") {
            var b2 = 0.35 * (r2 - s2);
            f2.globals.hasNullValues ? (e3[n3][a2] !== null && (e3[n3][a2 + 1] !== null ? (c2 = g2.move(s2, l2) + g2.curve(s2 + b2, l2, r2 - b2, o2, r2 + 1, o2), d2 = g2.move(s2 + 1, l2) + g2.curve(s2 + b2, l2, r2 - b2, o2, r2 + 1, o2) + g2.line(r2, v2) + g2.line(s2, v2) + "z") : (c2 = g2.move(s2, l2), d2 = g2.move(s2, l2) + "z")), u2.push(c2), h2.push(d2)) : (c2 += g2.curve(s2 + b2, l2, r2 - b2, o2, r2, o2), d2 += g2.curve(s2 + b2, l2, r2 - b2, o2, r2, o2)), s2 = r2, l2 = o2, a2 === e3[n3].length - 2 && (d2 = d2 + g2.curve(s2, l2, r2, o2, r2, v2) + g2.move(r2, o2) + "z", f2.globals.hasNullValues || (u2.push(c2), h2.push(d2)));
          } else {
            if (e3[n3][a2 + 1] === null) {
              c2 += g2.move(r2, o2);
              var y2 = f2.globals.isXNumeric ? (f2.globals.seriesX[i2][a2] - f2.globals.minX) / this.xRatio : r2 - this.xDivision;
              d2 = d2 + g2.line(y2, v2) + g2.move(r2, o2) + "z";
            }
            e3[n3][a2] === null && (c2 += g2.move(r2, o2), d2 += g2.move(r2, v2)), m2 === "stepline" ? (c2 = c2 + g2.line(r2, null, "H") + g2.line(null, o2, "V"), d2 = d2 + g2.line(r2, null, "H") + g2.line(null, o2, "V")) : m2 === "straight" && (c2 += g2.line(r2, o2), d2 += g2.line(r2, o2)), a2 === e3[n3].length - 2 && (d2 = d2 + g2.line(r2, v2) + g2.move(r2, o2) + "z", u2.push(c2), h2.push(d2));
          }
          return { linePaths: u2, areaPaths: h2, pX: s2, pY: l2, linePath: c2, areaPath: d2 };
        } }, { key: "handleNullDataPoints", value: function(t4, e3, n3, i2, a2) {
          var r2 = this.w;
          if (t4[n3][i2] === null && r2.config.markers.showNullDataPoints || t4[n3].length === 1) {
            var o2 = this.markers.plotChartMarkers(e3, a2, i2 + 1, this.strokeWidth - r2.config.markers.strokeWidth / 2, true);
            o2 !== null && this.elPointsMain.add(o2);
          }
        } }]), t3;
      }();
      window.TreemapSquared = {}, window.TreemapSquared.generate = function() {
        function t3(e4, n4, i3, a3) {
          this.xoffset = e4, this.yoffset = n4, this.height = a3, this.width = i3, this.shortestEdge = function() {
            return Math.min(this.height, this.width);
          }, this.getCoordinates = function(t4) {
            var e5, n5 = [], i4 = this.xoffset, a4 = this.yoffset, o3 = r2(t4) / this.height, s2 = r2(t4) / this.width;
            if (this.width >= this.height)
              for (e5 = 0; e5 < t4.length; e5++)
                n5.push([i4, a4, i4 + o3, a4 + t4[e5] / o3]), a4 += t4[e5] / o3;
            else
              for (e5 = 0; e5 < t4.length; e5++)
                n5.push([i4, a4, i4 + t4[e5] / s2, a4 + s2]), i4 += t4[e5] / s2;
            return n5;
          }, this.cutArea = function(e5) {
            var n5;
            if (this.width >= this.height) {
              var i4 = e5 / this.height, a4 = this.width - i4;
              n5 = new t3(this.xoffset + i4, this.yoffset, a4, this.height);
            } else {
              var r3 = e5 / this.width, o3 = this.height - r3;
              n5 = new t3(this.xoffset, this.yoffset + r3, this.width, o3);
            }
            return n5;
          };
        }
        function e3(e4, i3, a3, o3, s2) {
          return o3 = o3 === void 0 ? 0 : o3, s2 = s2 === void 0 ? 0 : s2, function(t4) {
            var e5, n4, i4 = [];
            for (e5 = 0; e5 < t4.length; e5++)
              for (n4 = 0; n4 < t4[e5].length; n4++)
                i4.push(t4[e5][n4]);
            return i4;
          }(n3(function(t4, e5) {
            var n4, i4 = [], a4 = e5 / r2(t4);
            for (n4 = 0; n4 < t4.length; n4++)
              i4[n4] = t4[n4] * a4;
            return i4;
          }(e4, i3 * a3), [], new t3(o3, s2, i3, a3), []));
        }
        function n3(t4, e4, a3, o3) {
          var s2, l2, c2;
          if (t4.length !== 0)
            return s2 = a3.shortestEdge(), function(t5, e5, n4) {
              var a4;
              return t5.length === 0 || ((a4 = t5.slice()).push(e5), i2(t5, n4) >= i2(a4, n4));
            }(e4, l2 = t4[0], s2) ? (e4.push(l2), n3(t4.slice(1), e4, a3, o3)) : (c2 = a3.cutArea(r2(e4), o3), o3.push(a3.getCoordinates(e4)), n3(t4, [], c2, o3)), o3;
          o3.push(a3.getCoordinates(e4));
        }
        function i2(t4, e4) {
          var n4 = Math.min.apply(Math, t4), i3 = Math.max.apply(Math, t4), a3 = r2(t4);
          return Math.max(Math.pow(e4, 2) * i3 / Math.pow(a3, 2), Math.pow(a3, 2) / (Math.pow(e4, 2) * n4));
        }
        function a2(t4) {
          return t4 && t4.constructor === Array;
        }
        function r2(t4) {
          var e4, n4 = 0;
          for (e4 = 0; e4 < t4.length; e4++)
            n4 += t4[e4];
          return n4;
        }
        function o2(t4) {
          var e4, n4 = 0;
          if (a2(t4[0]))
            for (e4 = 0; e4 < t4.length; e4++)
              n4 += o2(t4[e4]);
          else
            n4 = r2(t4);
          return n4;
        }
        return function t4(n4, i3, r3, s2, l2) {
          s2 = s2 === void 0 ? 0 : s2, l2 = l2 === void 0 ? 0 : l2;
          var c2, d2, u2 = [], h2 = [];
          if (a2(n4[0])) {
            for (d2 = 0; d2 < n4.length; d2++)
              u2[d2] = o2(n4[d2]);
            for (c2 = e3(u2, i3, r3, s2, l2), d2 = 0; d2 < n4.length; d2++)
              h2.push(t4(n4[d2], c2[d2][2] - c2[d2][0], c2[d2][3] - c2[d2][1], c2[d2][0], c2[d2][1]));
          } else
            h2 = e3(n4, i3, r3, s2, l2);
          return h2;
        };
      }();
      var Rt, Pt, Ot = function() {
        function t3(e3, n3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.strokeWidth = this.w.config.stroke.width, this.helpers = new Ct(e3), this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation, this.labels = [];
        }
        return s(t3, [{ key: "draw", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = new _(this.ctx), a2 = new I(this.ctx), r2 = i2.group({ class: "apexcharts-treemap" });
          if (n3.globals.noData)
            return r2;
          var o2 = [];
          return t4.forEach(function(t5) {
            var e4 = t5.map(function(t6) {
              return Math.abs(t6);
            });
            o2.push(e4);
          }), this.negRange = this.helpers.checkColorRange(), n3.config.series.forEach(function(t5, n4) {
            t5.data.forEach(function(t6) {
              Array.isArray(e3.labels[n4]) || (e3.labels[n4] = []), e3.labels[n4].push(t6.x);
            });
          }), window.TreemapSquared.generate(o2, n3.globals.gridWidth, n3.globals.gridHeight).forEach(function(o3, s2) {
            var l2 = i2.group({ class: "apexcharts-series apexcharts-treemap-series", seriesName: b.escapeString(n3.globals.seriesNames[s2]), rel: s2 + 1, "data:realIndex": s2 });
            if (n3.config.chart.dropShadow.enabled) {
              var c2 = n3.config.chart.dropShadow;
              new x(e3.ctx).dropShadow(r2, c2, s2);
            }
            var d2 = i2.group({ class: "apexcharts-data-labels" });
            o3.forEach(function(r3, o4) {
              var c3 = r3[0], d3 = r3[1], u2 = r3[2], h2 = r3[3], p2 = i2.drawRect(c3, d3, u2 - c3, h2 - d3, 0, "#fff", 1, e3.strokeWidth, n3.config.plotOptions.treemap.useFillColorAsStroke ? g2 : n3.globals.stroke.colors[s2]);
              p2.attr({ cx: c3, cy: d3, index: s2, i: s2, j: o4, width: u2 - c3, height: h2 - d3 });
              var f2 = e3.helpers.getShadeColor(n3.config.chart.type, s2, o4, e3.negRange), g2 = f2.color;
              n3.config.series[s2].data[o4] !== void 0 && n3.config.series[s2].data[o4].fillColor && (g2 = n3.config.series[s2].data[o4].fillColor);
              var m2 = a2.fillPath({ color: g2, seriesNumber: s2, dataPointIndex: o4 });
              p2.node.classList.add("apexcharts-treemap-rect"), p2.attr({ fill: m2 }), e3.helpers.addListeners(p2);
              var v2 = { x: c3 + (u2 - c3) / 2, y: d3 + (h2 - d3) / 2, width: 0, height: 0 }, b2 = { x: c3, y: d3, width: u2 - c3, height: h2 - d3 };
              if (n3.config.chart.animations.enabled && !n3.globals.dataChanged) {
                var y2 = 1;
                n3.globals.resized || (y2 = n3.config.chart.animations.speed), e3.animateTreemap(p2, v2, b2, y2);
              }
              if (n3.globals.dataChanged) {
                var x2 = 1;
                e3.dynamicAnim.enabled && n3.globals.shouldAnimate && (x2 = e3.dynamicAnim.speed, n3.globals.previousPaths[s2] && n3.globals.previousPaths[s2][o4] && n3.globals.previousPaths[s2][o4].rect && (v2 = n3.globals.previousPaths[s2][o4].rect), e3.animateTreemap(p2, v2, b2, x2));
              }
              var _2 = e3.getFontSize(r3), w2 = n3.config.dataLabels.formatter(e3.labels[s2][o4], { value: n3.globals.series[s2][o4], seriesIndex: s2, dataPointIndex: o4, w: n3 }), S2 = e3.helpers.calculateDataLabels({ text: w2, x: (c3 + u2) / 2, y: (d3 + h2) / 2 + e3.strokeWidth / 2 + _2 / 3, i: s2, j: o4, colorProps: f2, fontSize: _2, series: t4 });
              n3.config.dataLabels.enabled && S2 && e3.rotateToFitLabel(S2, w2, c3, d3, u2, h2), l2.add(p2), S2 !== null && l2.add(S2);
            }), l2.add(d2), r2.add(l2);
          }), r2;
        } }, { key: "getFontSize", value: function(t4) {
          var e3, n3, i2 = this.w, a2 = function t5(e4) {
            var n4, i3 = 0;
            if (Array.isArray(e4[0]))
              for (n4 = 0; n4 < e4.length; n4++)
                i3 += t5(e4[n4]);
            else
              for (n4 = 0; n4 < e4.length; n4++)
                i3 += e4[n4].length;
            return i3;
          }(this.labels) / function t5(e4) {
            var n4, i3 = 0;
            if (Array.isArray(e4[0]))
              for (n4 = 0; n4 < e4.length; n4++)
                i3 += t5(e4[n4]);
            else
              for (n4 = 0; n4 < e4.length; n4++)
                i3 += 1;
            return i3;
          }(this.labels);
          return e3 = (t4[2] - t4[0]) * (t4[3] - t4[1]), n3 = Math.pow(e3, 0.5), Math.min(n3 / a2, parseInt(i2.config.dataLabels.style.fontSize, 10));
        } }, { key: "rotateToFitLabel", value: function(t4, e3, n3, i2, a2, r2) {
          var o2 = new _(this.ctx), s2 = o2.getTextRects(e3);
          if (s2.width + 5 > a2 - n3 && s2.width <= r2 - i2) {
            var l2 = o2.rotateAroundCenter(t4.node);
            t4.node.setAttribute("transform", "rotate(-90 ".concat(l2.x, " ").concat(l2.y, ")"));
          }
        } }, { key: "animateTreemap", value: function(t4, e3, n3, i2) {
          var a2 = new y(this.ctx);
          a2.animateRect(t4, { x: e3.x, y: e3.y, width: e3.width, height: e3.height }, { x: n3.x, y: n3.y, width: n3.width, height: n3.height }, i2, function() {
            a2.animationCompleted(t4);
          });
        } }]), t3;
      }(), jt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w, this.timeScaleArray = [], this.utc = this.w.config.xaxis.labels.datetimeUTC;
        }
        return s(t3, [{ key: "calculateTimeScaleTicks", value: function(t4, e3) {
          var n3 = this, i2 = this.w;
          if (i2.globals.allSeriesCollapsed)
            return i2.globals.labels = [], i2.globals.timescaleLabels = [], [];
          var a2 = new F(this.ctx), r2 = (e3 - t4) / 864e5;
          this.determineInterval(r2), i2.globals.disableZoomIn = false, i2.globals.disableZoomOut = false, r2 < 11574074074074075e-20 ? i2.globals.disableZoomIn = true : r2 > 5e4 && (i2.globals.disableZoomOut = true);
          var o2 = a2.getTimeUnitsfromTimestamp(t4, e3, this.utc), s2 = i2.globals.gridWidth / r2, l2 = s2 / 24, c2 = l2 / 60, u2 = c2 / 60, h2 = Math.floor(24 * r2), p2 = Math.floor(1440 * r2), f2 = Math.floor(86400 * r2), g2 = Math.floor(r2), m2 = Math.floor(r2 / 30), v2 = Math.floor(r2 / 365), b2 = { minMillisecond: o2.minMillisecond, minSecond: o2.minSecond, minMinute: o2.minMinute, minHour: o2.minHour, minDate: o2.minDate, minMonth: o2.minMonth, minYear: o2.minYear }, y2 = { firstVal: b2, currentMillisecond: b2.minMillisecond, currentSecond: b2.minSecond, currentMinute: b2.minMinute, currentHour: b2.minHour, currentMonthDate: b2.minDate, currentDate: b2.minDate, currentMonth: b2.minMonth, currentYear: b2.minYear, daysWidthOnXAxis: s2, hoursWidthOnXAxis: l2, minutesWidthOnXAxis: c2, secondsWidthOnXAxis: u2, numberOfSeconds: f2, numberOfMinutes: p2, numberOfHours: h2, numberOfDays: g2, numberOfMonths: m2, numberOfYears: v2 };
          switch (this.tickInterval) {
            case "years":
              this.generateYearScale(y2);
              break;
            case "months":
            case "half_year":
              this.generateMonthScale(y2);
              break;
            case "months_days":
            case "months_fortnight":
            case "days":
            case "week_days":
              this.generateDayScale(y2);
              break;
            case "hours":
              this.generateHourScale(y2);
              break;
            case "minutes_fives":
            case "minutes":
              this.generateMinuteScale(y2);
              break;
            case "seconds_tens":
            case "seconds_fives":
            case "seconds":
              this.generateSecondScale(y2);
          }
          var x2 = this.timeScaleArray.map(function(t5) {
            var e4 = { position: t5.position, unit: t5.unit, year: t5.year, day: t5.day ? t5.day : 1, hour: t5.hour ? t5.hour : 0, month: t5.month + 1 };
            return t5.unit === "month" ? d(d({}, e4), {}, { day: 1, value: t5.value + 1 }) : t5.unit === "day" || t5.unit === "hour" ? d(d({}, e4), {}, { value: t5.value }) : t5.unit === "minute" ? d(d({}, e4), {}, { value: t5.value, minute: t5.value }) : t5.unit === "second" ? d(d({}, e4), {}, { value: t5.value, minute: t5.minute, second: t5.second }) : t5;
          });
          return x2.filter(function(t5) {
            var e4 = 1, a3 = Math.ceil(i2.globals.gridWidth / 120), r3 = t5.value;
            i2.config.xaxis.tickAmount !== void 0 && (a3 = i2.config.xaxis.tickAmount), x2.length > a3 && (e4 = Math.floor(x2.length / a3));
            var o3 = false, s3 = false;
            switch (n3.tickInterval) {
              case "years":
                t5.unit === "year" && (o3 = true);
                break;
              case "half_year":
                e4 = 7, t5.unit === "year" && (o3 = true);
                break;
              case "months":
                e4 = 1, t5.unit === "year" && (o3 = true);
                break;
              case "months_fortnight":
                e4 = 15, t5.unit !== "year" && t5.unit !== "month" || (o3 = true), r3 === 30 && (s3 = true);
                break;
              case "months_days":
                e4 = 10, t5.unit === "month" && (o3 = true), r3 === 30 && (s3 = true);
                break;
              case "week_days":
                e4 = 8, t5.unit === "month" && (o3 = true);
                break;
              case "days":
                e4 = 1, t5.unit === "month" && (o3 = true);
                break;
              case "hours":
                t5.unit === "day" && (o3 = true);
                break;
              case "minutes_fives":
              case "seconds_fives":
                r3 % 5 != 0 && (s3 = true);
                break;
              case "seconds_tens":
                r3 % 10 != 0 && (s3 = true);
            }
            if (n3.tickInterval === "hours" || n3.tickInterval === "minutes_fives" || n3.tickInterval === "seconds_tens" || n3.tickInterval === "seconds_fives") {
              if (!s3)
                return true;
            } else if ((r3 % e4 == 0 || o3) && !s3)
              return true;
          });
        } }, { key: "recalcDimensionsBasedOnFormat", value: function(t4, e3) {
          var n3 = this.w, i2 = this.formatDates(t4), a2 = this.removeOverlappingTS(i2);
          n3.globals.timescaleLabels = a2.slice(), new dt(this.ctx).plotCoords();
        } }, { key: "determineInterval", value: function(t4) {
          var e3 = 24 * t4, n3 = 60 * e3;
          switch (true) {
            case t4 / 365 > 5:
              this.tickInterval = "years";
              break;
            case t4 > 800:
              this.tickInterval = "half_year";
              break;
            case t4 > 180:
              this.tickInterval = "months";
              break;
            case t4 > 90:
              this.tickInterval = "months_fortnight";
              break;
            case t4 > 60:
              this.tickInterval = "months_days";
              break;
            case t4 > 30:
              this.tickInterval = "week_days";
              break;
            case t4 > 2:
              this.tickInterval = "days";
              break;
            case e3 > 2.4:
              this.tickInterval = "hours";
              break;
            case n3 > 15:
              this.tickInterval = "minutes_fives";
              break;
            case n3 > 5:
              this.tickInterval = "minutes";
              break;
            case n3 > 1:
              this.tickInterval = "seconds_tens";
              break;
            case 60 * n3 > 20:
              this.tickInterval = "seconds_fives";
              break;
            default:
              this.tickInterval = "seconds";
          }
        } }, { key: "generateYearScale", value: function(t4) {
          var e3 = t4.firstVal, n3 = t4.currentMonth, i2 = t4.currentYear, a2 = t4.daysWidthOnXAxis, r2 = t4.numberOfYears, o2 = e3.minYear, s2 = 0, l2 = new F(this.ctx), c2 = "year";
          if (e3.minDate > 1 || e3.minMonth > 0) {
            var d2 = l2.determineRemainingDaysOfYear(e3.minYear, e3.minMonth, e3.minDate);
            s2 = (l2.determineDaysOfYear(e3.minYear) - d2 + 1) * a2, o2 = e3.minYear + 1, this.timeScaleArray.push({ position: s2, value: o2, unit: c2, year: o2, month: b.monthMod(n3 + 1) });
          } else
            e3.minDate === 1 && e3.minMonth === 0 && this.timeScaleArray.push({ position: s2, value: o2, unit: c2, year: i2, month: b.monthMod(n3 + 1) });
          for (var u2 = o2, h2 = s2, p2 = 0; p2 < r2; p2++)
            u2++, h2 = l2.determineDaysOfYear(u2 - 1) * a2 + h2, this.timeScaleArray.push({ position: h2, value: u2, unit: c2, year: u2, month: 1 });
        } }, { key: "generateMonthScale", value: function(t4) {
          var e3 = t4.firstVal, n3 = t4.currentMonthDate, i2 = t4.currentMonth, a2 = t4.currentYear, r2 = t4.daysWidthOnXAxis, o2 = t4.numberOfMonths, s2 = i2, l2 = 0, c2 = new F(this.ctx), d2 = "month", u2 = 0;
          if (e3.minDate > 1) {
            l2 = (c2.determineDaysOfMonths(i2 + 1, e3.minYear) - n3 + 1) * r2, s2 = b.monthMod(i2 + 1);
            var h2 = a2 + u2, p2 = b.monthMod(s2), f2 = s2;
            s2 === 0 && (d2 = "year", f2 = h2, p2 = 1, h2 += u2 += 1), this.timeScaleArray.push({ position: l2, value: f2, unit: d2, year: h2, month: p2 });
          } else
            this.timeScaleArray.push({ position: l2, value: s2, unit: d2, year: a2, month: b.monthMod(i2) });
          for (var g2 = s2 + 1, m2 = l2, v2 = 0, y2 = 1; v2 < o2; v2++, y2++) {
            (g2 = b.monthMod(g2)) === 0 ? (d2 = "year", u2 += 1) : d2 = "month";
            var x2 = this._getYear(a2, g2, u2);
            m2 = c2.determineDaysOfMonths(g2, x2) * r2 + m2;
            var _2 = g2 === 0 ? x2 : g2;
            this.timeScaleArray.push({ position: m2, value: _2, unit: d2, year: x2, month: g2 === 0 ? 1 : g2 }), g2++;
          }
        } }, { key: "generateDayScale", value: function(t4) {
          var e3 = t4.firstVal, n3 = t4.currentMonth, i2 = t4.currentYear, a2 = t4.hoursWidthOnXAxis, r2 = t4.numberOfDays, o2 = new F(this.ctx), s2 = "day", l2 = e3.minDate + 1, c2 = l2, d2 = function(t5, e4, n4) {
            return t5 > o2.determineDaysOfMonths(e4 + 1, n4) ? (c2 = 1, s2 = "month", h2 = e4 += 1, e4) : e4;
          }, u2 = (24 - e3.minHour) * a2, h2 = l2, p2 = d2(c2, n3, i2);
          e3.minHour === 0 && e3.minDate === 1 ? (u2 = 0, h2 = b.monthMod(e3.minMonth), s2 = "month", c2 = e3.minDate, r2++) : e3.minDate !== 1 && e3.minHour === 0 && e3.minMinute === 0 && (u2 = 0, l2 = e3.minDate, h2 = l2, p2 = d2(c2 = l2, n3, i2)), this.timeScaleArray.push({ position: u2, value: h2, unit: s2, year: this._getYear(i2, p2, 0), month: b.monthMod(p2), day: c2 });
          for (var f2 = u2, g2 = 0; g2 < r2; g2++) {
            s2 = "day", p2 = d2(c2 += 1, p2, this._getYear(i2, p2, 0));
            var m2 = this._getYear(i2, p2, 0);
            f2 = 24 * a2 + f2;
            var v2 = c2 === 1 ? b.monthMod(p2) : c2;
            this.timeScaleArray.push({ position: f2, value: v2, unit: s2, year: m2, month: b.monthMod(p2), day: v2 });
          }
        } }, { key: "generateHourScale", value: function(t4) {
          var e3 = t4.firstVal, n3 = t4.currentDate, i2 = t4.currentMonth, a2 = t4.currentYear, r2 = t4.minutesWidthOnXAxis, o2 = t4.numberOfHours, s2 = new F(this.ctx), l2 = "hour", c2 = function(t5, e4) {
            return t5 > s2.determineDaysOfMonths(e4 + 1, a2) && (g2 = 1, e4 += 1), { month: e4, date: g2 };
          }, d2 = function(t5, e4) {
            return t5 > s2.determineDaysOfMonths(e4 + 1, a2) ? e4 += 1 : e4;
          }, u2 = 60 - (e3.minMinute + e3.minSecond / 60), h2 = u2 * r2, p2 = e3.minHour + 1, f2 = p2 + 1;
          u2 === 60 && (h2 = 0, f2 = (p2 = e3.minHour) + 1);
          var g2 = n3, m2 = d2(g2, i2);
          this.timeScaleArray.push({ position: h2, value: p2, unit: l2, day: g2, hour: f2, year: a2, month: b.monthMod(m2) });
          for (var v2 = h2, y2 = 0; y2 < o2; y2++) {
            l2 = "hour", f2 >= 24 && (f2 = 0, l2 = "day", m2 = c2(g2 += 1, m2).month, m2 = d2(g2, m2));
            var x2 = this._getYear(a2, m2, 0);
            v2 = f2 === 0 && y2 === 0 ? u2 * r2 : 60 * r2 + v2;
            var _2 = f2 === 0 ? g2 : f2;
            this.timeScaleArray.push({ position: v2, value: _2, unit: l2, hour: f2, day: g2, year: x2, month: b.monthMod(m2) }), f2++;
          }
        } }, { key: "generateMinuteScale", value: function(t4) {
          for (var e3 = t4.currentMillisecond, n3 = t4.currentSecond, i2 = t4.currentMinute, a2 = t4.currentHour, r2 = t4.currentDate, o2 = t4.currentMonth, s2 = t4.currentYear, l2 = t4.minutesWidthOnXAxis, c2 = t4.secondsWidthOnXAxis, d2 = t4.numberOfMinutes, u2 = i2 + 1, h2 = r2, p2 = o2, f2 = s2, g2 = a2, m2 = (60 - n3 - e3 / 1e3) * c2, v2 = 0; v2 < d2; v2++)
            u2 >= 60 && (u2 = 0, (g2 += 1) === 24 && (g2 = 0)), this.timeScaleArray.push({ position: m2, value: u2, unit: "minute", hour: g2, minute: u2, day: h2, year: this._getYear(f2, p2, 0), month: b.monthMod(p2) }), m2 += l2, u2++;
        } }, { key: "generateSecondScale", value: function(t4) {
          for (var e3 = t4.currentMillisecond, n3 = t4.currentSecond, i2 = t4.currentMinute, a2 = t4.currentHour, r2 = t4.currentDate, o2 = t4.currentMonth, s2 = t4.currentYear, l2 = t4.secondsWidthOnXAxis, c2 = t4.numberOfSeconds, d2 = n3 + 1, u2 = i2, h2 = r2, p2 = o2, f2 = s2, g2 = a2, m2 = (1e3 - e3) / 1e3 * l2, v2 = 0; v2 < c2; v2++)
            d2 >= 60 && (d2 = 0, ++u2 >= 60 && (u2 = 0, ++g2 == 24 && (g2 = 0))), this.timeScaleArray.push({ position: m2, value: d2, unit: "second", hour: g2, minute: u2, second: d2, day: h2, year: this._getYear(f2, p2, 0), month: b.monthMod(p2) }), m2 += l2, d2++;
        } }, { key: "createRawDateString", value: function(t4, e3) {
          var n3 = t4.year;
          return t4.month === 0 && (t4.month = 1), n3 += "-" + ("0" + t4.month.toString()).slice(-2), t4.unit === "day" ? n3 += t4.unit === "day" ? "-" + ("0" + e3).slice(-2) : "-01" : n3 += "-" + ("0" + (t4.day ? t4.day : "1")).slice(-2), t4.unit === "hour" ? n3 += t4.unit === "hour" ? "T" + ("0" + e3).slice(-2) : "T00" : n3 += "T" + ("0" + (t4.hour ? t4.hour : "0")).slice(-2), t4.unit === "minute" ? n3 += ":" + ("0" + e3).slice(-2) : n3 += ":" + (t4.minute ? ("0" + t4.minute).slice(-2) : "00"), t4.unit === "second" ? n3 += ":" + ("0" + e3).slice(-2) : n3 += ":00", this.utc && (n3 += ".000Z"), n3;
        } }, { key: "formatDates", value: function(t4) {
          var e3 = this, n3 = this.w;
          return t4.map(function(t5) {
            var i2 = t5.value.toString(), a2 = new F(e3.ctx), r2 = e3.createRawDateString(t5, i2), o2 = a2.getDate(a2.parseDate(r2));
            if (e3.utc || (o2 = a2.getDate(a2.parseDateWithTimezone(r2))), n3.config.xaxis.labels.format === void 0) {
              var s2 = "dd MMM", l2 = n3.config.xaxis.labels.datetimeFormatter;
              t5.unit === "year" && (s2 = l2.year), t5.unit === "month" && (s2 = l2.month), t5.unit === "day" && (s2 = l2.day), t5.unit === "hour" && (s2 = l2.hour), t5.unit === "minute" && (s2 = l2.minute), t5.unit === "second" && (s2 = l2.second), i2 = a2.formatDate(o2, s2);
            } else
              i2 = a2.formatDate(o2, n3.config.xaxis.labels.format);
            return { dateString: r2, position: t5.position, value: i2, unit: t5.unit, year: t5.year, month: t5.month };
          });
        } }, { key: "removeOverlappingTS", value: function(t4) {
          var e3, n3 = this, i2 = new _(this.ctx), a2 = false;
          t4.length > 0 && t4[0].value && t4.every(function(e4) {
            return e4.value.length === t4[0].value.length;
          }) && (a2 = true, e3 = i2.getTextRects(t4[0].value).width);
          var r2 = 0, o2 = t4.map(function(o3, s2) {
            if (s2 > 0 && n3.w.config.xaxis.labels.hideOverlappingLabels) {
              var l2 = a2 ? e3 : i2.getTextRects(t4[r2].value).width, c2 = t4[r2].position;
              return o3.position > c2 + l2 + 10 ? (r2 = s2, o3) : null;
            }
            return o3;
          });
          return o2.filter(function(t5) {
            return t5 !== null;
          });
        } }, { key: "_getYear", value: function(t4, e3, n3) {
          return t4 + Math.floor(e3 / 12) + n3;
        } }]), t3;
      }(), Nt = function() {
        function t3(e3, n3) {
          r(this, t3), this.ctx = n3, this.w = n3.w, this.el = e3;
        }
        return s(t3, [{ key: "setupElements", value: function() {
          var t4 = this.w.globals, e3 = this.w.config, n3 = e3.chart.type;
          t4.axisCharts = ["line", "area", "bar", "rangeBar", "candlestick", "boxPlot", "scatter", "bubble", "radar", "heatmap", "treemap"].indexOf(n3) > -1, t4.xyCharts = ["line", "area", "bar", "rangeBar", "candlestick", "boxPlot", "scatter", "bubble"].indexOf(n3) > -1, t4.isBarHorizontal = (e3.chart.type === "bar" || e3.chart.type === "rangeBar") && e3.plotOptions.bar.horizontal, t4.chartClass = ".apexcharts" + t4.chartID, t4.dom.baseEl = this.el, t4.dom.elWrap = document.createElement("div"), _.setAttrs(t4.dom.elWrap, { id: t4.chartClass.substring(1), class: "apexcharts-canvas " + t4.chartClass.substring(1) }), this.el.appendChild(t4.dom.elWrap), t4.dom.Paper = new window.SVG.Doc(t4.dom.elWrap), t4.dom.Paper.attr({ class: "apexcharts-svg", "xmlns:data": "ApexChartsNS", transform: "translate(".concat(e3.chart.offsetX, ", ").concat(e3.chart.offsetY, ")") }), t4.dom.Paper.node.style.background = e3.chart.background, this.setSVGDimensions(), t4.dom.elGraphical = t4.dom.Paper.group().attr({ class: "apexcharts-inner apexcharts-graphical" }), t4.dom.elAnnotations = t4.dom.Paper.group().attr({ class: "apexcharts-annotations" }), t4.dom.elDefs = t4.dom.Paper.defs(), t4.dom.elLegendWrap = document.createElement("div"), t4.dom.elLegendWrap.classList.add("apexcharts-legend"), t4.dom.elWrap.appendChild(t4.dom.elLegendWrap), t4.dom.Paper.add(t4.dom.elGraphical), t4.dom.elGraphical.add(t4.dom.elDefs);
        } }, { key: "plotChartType", value: function(t4, e3) {
          var n3 = this.w, i2 = n3.config, a2 = n3.globals, r2 = { series: [], i: [] }, o2 = { series: [], i: [] }, s2 = { series: [], i: [] }, l2 = { series: [], i: [] }, c2 = { series: [], i: [] }, d2 = { series: [], i: [] }, u2 = { series: [], i: [] };
          a2.series.map(function(e4, h3) {
            var p3 = 0;
            t4[h3].type !== void 0 ? (t4[h3].type === "column" || t4[h3].type === "bar" ? (a2.series.length > 1 && i2.plotOptions.bar.horizontal && console.warn("Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`"), c2.series.push(e4), c2.i.push(h3), p3++, n3.globals.columnSeries = c2.series) : t4[h3].type === "area" ? (o2.series.push(e4), o2.i.push(h3), p3++) : t4[h3].type === "line" ? (r2.series.push(e4), r2.i.push(h3), p3++) : t4[h3].type === "scatter" ? (s2.series.push(e4), s2.i.push(h3)) : t4[h3].type === "bubble" ? (l2.series.push(e4), l2.i.push(h3), p3++) : t4[h3].type === "candlestick" ? (d2.series.push(e4), d2.i.push(h3), p3++) : t4[h3].type === "boxPlot" ? (u2.series.push(e4), u2.i.push(h3), p3++) : console.warn("You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble"), p3 > 1 && (a2.comboCharts = true)) : (r2.series.push(e4), r2.i.push(h3));
          });
          var h2 = new Mt(this.ctx, e3), p2 = new St(this.ctx, e3);
          this.ctx.pie = new Tt(this.ctx);
          var f2 = new At(this.ctx);
          this.ctx.rangeBar = new H(this.ctx, e3);
          var g2 = new Et(this.ctx), m2 = [];
          if (a2.comboCharts) {
            if (o2.series.length > 0 && m2.push(h2.draw(o2.series, "area", o2.i)), c2.series.length > 0)
              if (n3.config.chart.stacked) {
                var v2 = new wt(this.ctx, e3);
                m2.push(v2.draw(c2.series, c2.i));
              } else
                this.ctx.bar = new L(this.ctx, e3), m2.push(this.ctx.bar.draw(c2.series, c2.i));
            if (r2.series.length > 0 && m2.push(h2.draw(r2.series, "line", r2.i)), d2.series.length > 0 && m2.push(p2.draw(d2.series, d2.i)), u2.series.length > 0 && m2.push(p2.draw(u2.series, u2.i)), s2.series.length > 0) {
              var b2 = new Mt(this.ctx, e3, true);
              m2.push(b2.draw(s2.series, "scatter", s2.i));
            }
            if (l2.series.length > 0) {
              var y2 = new Mt(this.ctx, e3, true);
              m2.push(y2.draw(l2.series, "bubble", l2.i));
            }
          } else
            switch (i2.chart.type) {
              case "line":
                m2 = h2.draw(a2.series, "line");
                break;
              case "area":
                m2 = h2.draw(a2.series, "area");
                break;
              case "bar":
                i2.chart.stacked ? m2 = new wt(this.ctx, e3).draw(a2.series) : (this.ctx.bar = new L(this.ctx, e3), m2 = this.ctx.bar.draw(a2.series));
                break;
              case "candlestick":
              case "boxPlot":
                m2 = new St(this.ctx, e3).draw(a2.series);
                break;
              case "rangeBar":
                m2 = this.ctx.rangeBar.draw(a2.series);
                break;
              case "heatmap":
                m2 = new kt(this.ctx, e3).draw(a2.series);
                break;
              case "treemap":
                m2 = new Ot(this.ctx, e3).draw(a2.series);
                break;
              case "pie":
              case "donut":
              case "polarArea":
                m2 = this.ctx.pie.draw(a2.series);
                break;
              case "radialBar":
                m2 = f2.draw(a2.series);
                break;
              case "radar":
                m2 = g2.draw(a2.series);
                break;
              default:
                m2 = h2.draw(a2.series);
            }
          return m2;
        } }, { key: "setSVGDimensions", value: function() {
          var t4 = this.w.globals, e3 = this.w.config;
          t4.svgWidth = e3.chart.width, t4.svgHeight = e3.chart.height;
          var n3 = b.getDimensions(this.el), i2 = e3.chart.width.toString().split(/[0-9]+/g).pop();
          i2 === "%" ? b.isNumber(n3[0]) && (n3[0].width === 0 && (n3 = b.getDimensions(this.el.parentNode)), t4.svgWidth = n3[0] * parseInt(e3.chart.width, 10) / 100) : i2 !== "px" && i2 !== "" || (t4.svgWidth = parseInt(e3.chart.width, 10));
          var a2 = e3.chart.height.toString().split(/[0-9]+/g).pop();
          if (t4.svgHeight !== "auto" && t4.svgHeight !== "")
            if (a2 === "%") {
              var r2 = b.getDimensions(this.el.parentNode);
              t4.svgHeight = r2[1] * parseInt(e3.chart.height, 10) / 100;
            } else
              t4.svgHeight = parseInt(e3.chart.height, 10);
          else
            t4.axisCharts ? t4.svgHeight = t4.svgWidth / 1.61 : t4.svgHeight = t4.svgWidth / 1.2;
          if (t4.svgWidth < 0 && (t4.svgWidth = 0), t4.svgHeight < 0 && (t4.svgHeight = 0), _.setAttrs(t4.dom.Paper.node, { width: t4.svgWidth, height: t4.svgHeight }), a2 !== "%") {
            var o2 = e3.chart.sparkline.enabled ? 0 : t4.axisCharts ? e3.chart.parentHeightOffset : 0;
            t4.dom.Paper.node.parentNode.parentNode.style.minHeight = t4.svgHeight + o2 + "px";
          }
          t4.dom.elWrap.style.width = t4.svgWidth + "px", t4.dom.elWrap.style.height = t4.svgHeight + "px";
        } }, { key: "shiftGraphPosition", value: function() {
          var t4 = this.w.globals, e3 = t4.translateY, n3 = { transform: "translate(" + t4.translateX + ", " + e3 + ")" };
          _.setAttrs(t4.dom.elGraphical.node, n3);
        } }, { key: "resizeNonAxisCharts", value: function() {
          var t4 = this.w, e3 = t4.globals, n3 = 0, i2 = t4.config.chart.sparkline.enabled ? 1 : 15;
          i2 += t4.config.grid.padding.bottom, t4.config.legend.position !== "top" && t4.config.legend.position !== "bottom" || !t4.config.legend.show || t4.config.legend.floating || (n3 = new ht(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
          var a2 = t4.globals.dom.baseEl.querySelector(".apexcharts-radialbar, .apexcharts-pie"), r2 = 2.05 * t4.globals.radialSize;
          if (a2 && !t4.config.chart.sparkline.enabled) {
            var o2 = b.getBoundingClientRect(a2);
            r2 = o2.bottom;
            var s2 = o2.bottom - o2.top;
            r2 = Math.max(2.05 * t4.globals.radialSize, s2);
          }
          var l2 = r2 + e3.translateY + n3 + i2;
          e3.dom.elLegendForeign && e3.dom.elLegendForeign.setAttribute("height", l2), e3.dom.elWrap.style.height = l2 + "px", _.setAttrs(e3.dom.Paper.node, { height: l2 }), e3.dom.Paper.node.parentNode.parentNode.style.minHeight = l2 + "px";
        } }, { key: "coreCalculations", value: function() {
          new K(this.ctx).init();
        } }, { key: "resetGlobals", value: function() {
          var t4 = this, e3 = function() {
            return t4.w.config.series.map(function(t5) {
              return [];
            });
          }, n3 = new z(), i2 = this.w.globals;
          n3.initGlobalVars(i2), i2.seriesXvalues = e3(), i2.seriesYvalues = e3();
        } }, { key: "isMultipleY", value: function() {
          if (this.w.config.yaxis.constructor === Array && this.w.config.yaxis.length > 1)
            return this.w.globals.isMultipleYAxis = true, true;
        } }, { key: "xySettings", value: function() {
          var t4 = null, e3 = this.w;
          if (e3.globals.axisCharts) {
            if (e3.config.xaxis.crosshairs.position === "back" && new nt(this.ctx).drawXCrosshairs(), e3.config.yaxis[0].crosshairs.position === "back" && new nt(this.ctx).drawYCrosshairs(), e3.config.xaxis.type === "datetime" && e3.config.xaxis.labels.formatter === void 0) {
              this.ctx.timeScale = new jt(this.ctx);
              var n3 = [];
              isFinite(e3.globals.minX) && isFinite(e3.globals.maxX) && !e3.globals.isBarHorizontal ? n3 = this.ctx.timeScale.calculateTimeScaleTicks(e3.globals.minX, e3.globals.maxX) : e3.globals.isBarHorizontal && (n3 = this.ctx.timeScale.calculateTimeScaleTicks(e3.globals.minY, e3.globals.maxY)), this.ctx.timeScale.recalcDimensionsBasedOnFormat(n3);
            }
            t4 = new C(this.ctx).getCalculatedRatios();
          }
          return t4;
        } }, { key: "updateSourceChart", value: function(t4) {
          this.ctx.w.globals.selection = void 0, this.ctx.updateHelpers._updateOptions({ chart: { selection: { xaxis: { min: t4.w.globals.minX, max: t4.w.globals.maxX } } } }, false, false);
        } }, { key: "setupBrushHandler", value: function() {
          var t4 = this, e3 = this.w;
          if (e3.config.chart.brush.enabled && typeof e3.config.chart.events.selection != "function") {
            var n3 = e3.config.chart.brush.targets || [e3.config.chart.brush.target];
            n3.forEach(function(e4) {
              var n4 = ApexCharts.getChartByID(e4);
              n4.w.globals.brushSource = t4.ctx, typeof n4.w.config.chart.events.zoomed != "function" && (n4.w.config.chart.events.zoomed = function() {
                t4.updateSourceChart(n4);
              }), typeof n4.w.config.chart.events.scrolled != "function" && (n4.w.config.chart.events.scrolled = function() {
                t4.updateSourceChart(n4);
              });
            }), e3.config.chart.events.selection = function(t5, i2) {
              n3.forEach(function(t6) {
                var n4 = ApexCharts.getChartByID(t6), a2 = b.clone(e3.config.yaxis);
                if (e3.config.chart.brush.autoScaleYaxis && n4.w.globals.series.length === 1) {
                  var r2 = new Z(n4);
                  a2 = r2.autoScaleY(n4, a2, i2);
                }
                var o2 = n4.w.config.yaxis.reduce(function(t7, e4, i3) {
                  return [].concat(m(t7), [d(d({}, n4.w.config.yaxis[i3]), {}, { min: a2[0].min, max: a2[0].max })]);
                }, []);
                n4.ctx.updateHelpers._updateOptions({ xaxis: { min: i2.xaxis.min, max: i2.xaxis.max }, yaxis: o2 }, false, false, false, false);
              });
            };
          }
        } }]), t3;
      }(), Lt = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "_updateOptions", value: function(t4) {
          var e3 = this, n3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], i2 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], r2 = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3], o2 = arguments.length > 4 && arguments[4] !== void 0 && arguments[4], s2 = [this.ctx];
          r2 && (s2 = this.ctx.getSyncedCharts()), this.ctx.w.globals.isExecCalled && (s2 = [this.ctx], this.ctx.w.globals.isExecCalled = false), s2.forEach(function(r3) {
            var s3 = r3.w;
            return s3.globals.shouldAnimate = i2, n3 || (s3.globals.resized = true, s3.globals.dataChanged = true, i2 && r3.series.getPreviousPaths()), t4 && a(t4) === "object" && (r3.config = new q(t4), t4 = C.extendArrayProps(r3.config, t4, s3), r3.w.globals.chartID !== e3.ctx.w.globals.chartID && delete t4.series, s3.config = b.extend(s3.config, t4), o2 && (s3.globals.lastXAxis = t4.xaxis ? b.clone(t4.xaxis) : [], s3.globals.lastYAxis = t4.yaxis ? b.clone(t4.yaxis) : [], s3.globals.initialConfig = b.extend({}, s3.config), s3.globals.initialSeries = b.clone(s3.config.series))), r3.update(t4);
          });
        } }, { key: "_updateSeries", value: function(t4, e3) {
          var n3, i2 = this, a2 = arguments.length > 2 && arguments[2] !== void 0 && arguments[2], r2 = this.w;
          return r2.globals.shouldAnimate = e3, r2.globals.dataChanged = true, e3 && this.ctx.series.getPreviousPaths(), r2.globals.axisCharts ? ((n3 = t4.map(function(t5, e4) {
            return i2._extendSeries(t5, e4);
          })).length === 0 && (n3 = [{ data: [] }]), r2.config.series = n3) : r2.config.series = t4.slice(), a2 && (r2.globals.initialSeries = b.clone(r2.config.series)), this.ctx.update();
        } }, { key: "_extendSeries", value: function(t4, e3) {
          var n3 = this.w, i2 = n3.config.series[e3];
          return d(d({}, n3.config.series[e3]), {}, { name: t4.name ? t4.name : i2 && i2.name, color: t4.color ? t4.color : i2 && i2.color, type: t4.type ? t4.type : i2 && i2.type, data: t4.data ? t4.data : i2 && i2.data });
        } }, { key: "toggleDataPointSelection", value: function(t4, e3) {
          var n3 = this.w, i2 = null, a2 = ".apexcharts-series[data\\:realIndex='".concat(t4, "']");
          return n3.globals.axisCharts ? i2 = n3.globals.dom.Paper.select("".concat(a2, " path[j='").concat(e3, "'], ").concat(a2, " circle[j='").concat(e3, "'], ").concat(a2, " rect[j='").concat(e3, "']")).members[0] : e3 === void 0 && (i2 = n3.globals.dom.Paper.select("".concat(a2, " path[j='").concat(t4, "']")).members[0], n3.config.chart.type !== "pie" && n3.config.chart.type !== "polarArea" && n3.config.chart.type !== "donut" || this.ctx.pie.pieClicked(t4)), i2 ? (new _(this.ctx).pathMouseDown(i2, null), i2.node ? i2.node : null) : (console.warn("toggleDataPointSelection: Element not found"), null);
        } }, { key: "forceXAxisUpdate", value: function(t4) {
          var e3 = this.w;
          if (["min", "max"].forEach(function(n4) {
            t4.xaxis[n4] !== void 0 && (e3.config.xaxis[n4] = t4.xaxis[n4], e3.globals.lastXAxis[n4] = t4.xaxis[n4]);
          }), t4.xaxis.categories && t4.xaxis.categories.length && (e3.config.xaxis.categories = t4.xaxis.categories), e3.config.xaxis.convertedCatToNumeric) {
            var n3 = new B(t4);
            t4 = n3.convertCatToNumericXaxis(t4, this.ctx);
          }
          return t4;
        } }, { key: "forceYAxisUpdate", value: function(t4) {
          var e3 = this.w;
          return e3.config.chart.stacked && e3.config.chart.stackType === "100%" && (Array.isArray(t4.yaxis) ? t4.yaxis.forEach(function(e4, n3) {
            t4.yaxis[n3].min = 0, t4.yaxis[n3].max = 100;
          }) : (t4.yaxis.min = 0, t4.yaxis.max = 100)), t4;
        } }, { key: "revertDefaultAxisMinMax", value: function(t4) {
          var e3 = this, n3 = this.w, i2 = n3.globals.lastXAxis, a2 = n3.globals.lastYAxis;
          t4 && t4.xaxis && (i2 = t4.xaxis), t4 && t4.yaxis && (a2 = t4.yaxis), n3.config.xaxis.min = i2.min, n3.config.xaxis.max = i2.max;
          n3.config.yaxis.map(function(t5, i3) {
            n3.globals.zoomed || a2[i3] !== void 0 ? function(t6) {
              a2[t6] !== void 0 && (n3.config.yaxis[t6].min = a2[t6].min, n3.config.yaxis[t6].max = a2[t6].max);
            }(i3) : e3.ctx.opts.yaxis[i3] !== void 0 && (t5.min = e3.ctx.opts.yaxis[i3].min, t5.max = e3.ctx.opts.yaxis[i3].max);
          });
        } }]), t3;
      }();
      Rt = typeof window != "undefined" ? window : void 0, Pt = function(t3, e3) {
        var n3 = (this !== void 0 ? this : t3).SVG = function(t4) {
          if (n3.supported)
            return t4 = new n3.Doc(t4), n3.parser.draw || n3.prepare(), t4;
        };
        if (n3.ns = "http://www.w3.org/2000/svg", n3.xmlns = "http://www.w3.org/2000/xmlns/", n3.xlink = "http://www.w3.org/1999/xlink", n3.svgjs = "http://svgjs.dev", n3.supported = true, !n3.supported)
          return false;
        n3.did = 1e3, n3.eid = function(t4) {
          return "Svgjs" + u2(t4) + n3.did++;
        }, n3.create = function(t4) {
          var n4 = e3.createElementNS(this.ns, t4);
          return n4.setAttribute("id", this.eid(t4)), n4;
        }, n3.extend = function() {
          var t4, e4;
          e4 = (t4 = [].slice.call(arguments)).pop();
          for (var i3 = t4.length - 1; i3 >= 0; i3--)
            if (t4[i3])
              for (var a2 in e4)
                t4[i3].prototype[a2] = e4[a2];
          n3.Set && n3.Set.inherit && n3.Set.inherit();
        }, n3.invent = function(t4) {
          var e4 = typeof t4.create == "function" ? t4.create : function() {
            this.constructor.call(this, n3.create(t4.create));
          };
          return t4.inherit && (e4.prototype = new t4.inherit()), t4.extend && n3.extend(e4, t4.extend), t4.construct && n3.extend(t4.parent || n3.Container, t4.construct), e4;
        }, n3.adopt = function(e4) {
          return e4 ? e4.instance ? e4.instance : ((i3 = e4.nodeName == "svg" ? e4.parentNode instanceof t3.SVGElement ? new n3.Nested() : new n3.Doc() : e4.nodeName == "linearGradient" ? new n3.Gradient("linear") : e4.nodeName == "radialGradient" ? new n3.Gradient("radial") : n3[u2(e4.nodeName)] ? new n3[u2(e4.nodeName)]() : new n3.Element(e4)).type = e4.nodeName, i3.node = e4, e4.instance = i3, i3 instanceof n3.Doc && i3.namespace().defs(), i3.setData(JSON.parse(e4.getAttribute("svgjs:data")) || {}), i3) : null;
          var i3;
        }, n3.prepare = function() {
          var t4 = e3.getElementsByTagName("body")[0], i3 = (t4 ? new n3.Doc(t4) : n3.adopt(e3.documentElement).nested()).size(2, 0);
          n3.parser = { body: t4 || e3.documentElement, draw: i3.style("opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden").node, poly: i3.polyline().node, path: i3.path().node, native: n3.create("svg") };
        }, n3.parser = { native: n3.create("svg") }, e3.addEventListener("DOMContentLoaded", function() {
          n3.parser.draw || n3.prepare();
        }, false), n3.regex = { numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i, hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i, rgb: /rgb\((\d+),(\d+),(\d+)\)/, reference: /#([a-z0-9\-_]+)/i, transforms: /\)\s*,?\s*/, whitespace: /\s/g, isHex: /^#[a-f0-9]{3,6}$/i, isRgb: /^rgb\(/, isCss: /[^:]+:[^;]+;?/, isBlank: /^(\s+)?$/, isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i, isPercent: /^-?[\d\.]+%$/, isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i, delimiter: /[\s,]+/, hyphen: /([^e])\-/gi, pathLetters: /[MLHVCSQTAZ]/gi, isPathLetter: /[MLHVCSQTAZ]/i, numbersWithDots: /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi, dots: /\./g }, n3.utils = { map: function(t4, e4) {
          for (var n4 = t4.length, i3 = [], a2 = 0; a2 < n4; a2++)
            i3.push(e4(t4[a2]));
          return i3;
        }, filter: function(t4, e4) {
          for (var n4 = t4.length, i3 = [], a2 = 0; a2 < n4; a2++)
            e4(t4[a2]) && i3.push(t4[a2]);
          return i3;
        }, filterSVGElements: function(e4) {
          return this.filter(e4, function(e5) {
            return e5 instanceof t3.SVGElement;
          });
        } }, n3.defaults = { attrs: { "fill-opacity": 1, "stroke-opacity": 1, "stroke-width": 0, "stroke-linejoin": "miter", "stroke-linecap": "butt", fill: "#000000", stroke: "#000000", opacity: 1, x: 0, y: 0, cx: 0, cy: 0, width: 0, height: 0, r: 0, rx: 0, ry: 0, offset: 0, "stop-opacity": 1, "stop-color": "#000000", "font-size": 16, "font-family": "Helvetica, Arial, sans-serif", "text-anchor": "start" } }, n3.Color = function(t4) {
          var e4, i3;
          this.r = 0, this.g = 0, this.b = 0, t4 && (typeof t4 == "string" ? n3.regex.isRgb.test(t4) ? (e4 = n3.regex.rgb.exec(t4.replace(n3.regex.whitespace, "")), this.r = parseInt(e4[1]), this.g = parseInt(e4[2]), this.b = parseInt(e4[3])) : n3.regex.isHex.test(t4) && (e4 = n3.regex.hex.exec((i3 = t4).length == 4 ? ["#", i3.substring(1, 2), i3.substring(1, 2), i3.substring(2, 3), i3.substring(2, 3), i3.substring(3, 4), i3.substring(3, 4)].join("") : i3), this.r = parseInt(e4[1], 16), this.g = parseInt(e4[2], 16), this.b = parseInt(e4[3], 16)) : a(t4) === "object" && (this.r = t4.r, this.g = t4.g, this.b = t4.b));
        }, n3.extend(n3.Color, { toString: function() {
          return this.toHex();
        }, toHex: function() {
          return "#" + h2(this.r) + h2(this.g) + h2(this.b);
        }, toRgb: function() {
          return "rgb(" + [this.r, this.g, this.b].join() + ")";
        }, brightness: function() {
          return this.r / 255 * 0.3 + this.g / 255 * 0.59 + this.b / 255 * 0.11;
        }, morph: function(t4) {
          return this.destination = new n3.Color(t4), this;
        }, at: function(t4) {
          return this.destination ? (t4 = t4 < 0 ? 0 : t4 > 1 ? 1 : t4, new n3.Color({ r: ~~(this.r + (this.destination.r - this.r) * t4), g: ~~(this.g + (this.destination.g - this.g) * t4), b: ~~(this.b + (this.destination.b - this.b) * t4) })) : this;
        } }), n3.Color.test = function(t4) {
          return t4 += "", n3.regex.isHex.test(t4) || n3.regex.isRgb.test(t4);
        }, n3.Color.isRgb = function(t4) {
          return t4 && typeof t4.r == "number" && typeof t4.g == "number" && typeof t4.b == "number";
        }, n3.Color.isColor = function(t4) {
          return n3.Color.isRgb(t4) || n3.Color.test(t4);
        }, n3.Array = function(t4, e4) {
          (t4 = (t4 || []).valueOf()).length == 0 && e4 && (t4 = e4.valueOf()), this.value = this.parse(t4);
        }, n3.extend(n3.Array, { toString: function() {
          return this.value.join(" ");
        }, valueOf: function() {
          return this.value;
        }, parse: function(t4) {
          return t4 = t4.valueOf(), Array.isArray(t4) ? t4 : this.split(t4);
        } }), n3.PointArray = function(t4, e4) {
          n3.Array.call(this, t4, e4 || [[0, 0]]);
        }, n3.PointArray.prototype = new n3.Array(), n3.PointArray.prototype.constructor = n3.PointArray;
        for (var i2 = { M: function(t4, e4, n4) {
          return e4.x = n4.x = t4[0], e4.y = n4.y = t4[1], ["M", e4.x, e4.y];
        }, L: function(t4, e4) {
          return e4.x = t4[0], e4.y = t4[1], ["L", t4[0], t4[1]];
        }, H: function(t4, e4) {
          return e4.x = t4[0], ["H", t4[0]];
        }, V: function(t4, e4) {
          return e4.y = t4[0], ["V", t4[0]];
        }, C: function(t4, e4) {
          return e4.x = t4[4], e4.y = t4[5], ["C", t4[0], t4[1], t4[2], t4[3], t4[4], t4[5]];
        }, Q: function(t4, e4) {
          return e4.x = t4[2], e4.y = t4[3], ["Q", t4[0], t4[1], t4[2], t4[3]];
        }, Z: function(t4, e4, n4) {
          return e4.x = n4.x, e4.y = n4.y, ["Z"];
        } }, r2 = "mlhvqtcsaz".split(""), o2 = 0, s2 = r2.length; o2 < s2; ++o2)
          i2[r2[o2]] = function(t4) {
            return function(e4, n4, a2) {
              if (t4 == "H")
                e4[0] = e4[0] + n4.x;
              else if (t4 == "V")
                e4[0] = e4[0] + n4.y;
              else if (t4 == "A")
                e4[5] = e4[5] + n4.x, e4[6] = e4[6] + n4.y;
              else
                for (var r3 = 0, o3 = e4.length; r3 < o3; ++r3)
                  e4[r3] = e4[r3] + (r3 % 2 ? n4.y : n4.x);
              return i2[t4](e4, n4, a2);
            };
          }(r2[o2].toUpperCase());
        n3.PathArray = function(t4, e4) {
          n3.Array.call(this, t4, e4 || [["M", 0, 0]]);
        }, n3.PathArray.prototype = new n3.Array(), n3.PathArray.prototype.constructor = n3.PathArray, n3.extend(n3.PathArray, { toString: function() {
          return function(t4) {
            for (var e4 = 0, n4 = t4.length, i3 = ""; e4 < n4; e4++)
              i3 += t4[e4][0], t4[e4][1] != null && (i3 += t4[e4][1], t4[e4][2] != null && (i3 += " ", i3 += t4[e4][2], t4[e4][3] != null && (i3 += " ", i3 += t4[e4][3], i3 += " ", i3 += t4[e4][4], t4[e4][5] != null && (i3 += " ", i3 += t4[e4][5], i3 += " ", i3 += t4[e4][6], t4[e4][7] != null && (i3 += " ", i3 += t4[e4][7])))));
            return i3 + " ";
          }(this.value);
        }, move: function(t4, e4) {
          var n4 = this.bbox();
          return n4.x, n4.y, this;
        }, at: function(t4) {
          if (!this.destination)
            return this;
          for (var e4 = this.value, i3 = this.destination.value, a2 = [], r3 = new n3.PathArray(), o3 = 0, s3 = e4.length; o3 < s3; o3++) {
            a2[o3] = [e4[o3][0]];
            for (var l3 = 1, c3 = e4[o3].length; l3 < c3; l3++)
              a2[o3][l3] = e4[o3][l3] + (i3[o3][l3] - e4[o3][l3]) * t4;
            a2[o3][0] === "A" && (a2[o3][4] = +(a2[o3][4] != 0), a2[o3][5] = +(a2[o3][5] != 0));
          }
          return r3.value = a2, r3;
        }, parse: function(t4) {
          if (t4 instanceof n3.PathArray)
            return t4.valueOf();
          var e4, a2 = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 };
          t4 = typeof t4 == "string" ? t4.replace(n3.regex.numbersWithDots, c2).replace(n3.regex.pathLetters, " $& ").replace(n3.regex.hyphen, "$1 -").trim().split(n3.regex.delimiter) : t4.reduce(function(t5, e5) {
            return [].concat.call(t5, e5);
          }, []);
          var r3 = [], o3 = new n3.Point(), s3 = new n3.Point(), l3 = 0, d3 = t4.length;
          do {
            n3.regex.isPathLetter.test(t4[l3]) ? (e4 = t4[l3], ++l3) : e4 == "M" ? e4 = "L" : e4 == "m" && (e4 = "l"), r3.push(i2[e4].call(null, t4.slice(l3, l3 += a2[e4.toUpperCase()]).map(parseFloat), o3, s3));
          } while (d3 > l3);
          return r3;
        }, bbox: function() {
          return n3.parser.draw || n3.prepare(), n3.parser.path.setAttribute("d", this.toString()), n3.parser.path.getBBox();
        } }), n3.Number = n3.invent({ create: function(t4, e4) {
          this.value = 0, this.unit = e4 || "", typeof t4 == "number" ? this.value = isNaN(t4) ? 0 : isFinite(t4) ? t4 : t4 < 0 ? -34e37 : 34e37 : typeof t4 == "string" ? (e4 = t4.match(n3.regex.numberAndUnit)) && (this.value = parseFloat(e4[1]), e4[5] == "%" ? this.value /= 100 : e4[5] == "s" && (this.value *= 1e3), this.unit = e4[5]) : t4 instanceof n3.Number && (this.value = t4.valueOf(), this.unit = t4.unit);
        }, extend: { toString: function() {
          return (this.unit == "%" ? ~~(1e8 * this.value) / 1e6 : this.unit == "s" ? this.value / 1e3 : this.value) + this.unit;
        }, toJSON: function() {
          return this.toString();
        }, valueOf: function() {
          return this.value;
        }, plus: function(t4) {
          return t4 = new n3.Number(t4), new n3.Number(this + t4, this.unit || t4.unit);
        }, minus: function(t4) {
          return t4 = new n3.Number(t4), new n3.Number(this - t4, this.unit || t4.unit);
        }, times: function(t4) {
          return t4 = new n3.Number(t4), new n3.Number(this * t4, this.unit || t4.unit);
        }, divide: function(t4) {
          return t4 = new n3.Number(t4), new n3.Number(this / t4, this.unit || t4.unit);
        }, to: function(t4) {
          var e4 = new n3.Number(this);
          return typeof t4 == "string" && (e4.unit = t4), e4;
        }, morph: function(t4) {
          return this.destination = new n3.Number(t4), t4.relative && (this.destination.value += this.value), this;
        }, at: function(t4) {
          return this.destination ? new n3.Number(this.destination).minus(this).times(t4).plus(this) : this;
        } } }), n3.Element = n3.invent({ create: function(t4) {
          this._stroke = n3.defaults.attrs.stroke, this._event = null, this.dom = {}, (this.node = t4) && (this.type = t4.nodeName, this.node.instance = this, this._stroke = t4.getAttribute("stroke") || this._stroke);
        }, extend: { x: function(t4) {
          return this.attr("x", t4);
        }, y: function(t4) {
          return this.attr("y", t4);
        }, cx: function(t4) {
          return t4 == null ? this.x() + this.width() / 2 : this.x(t4 - this.width() / 2);
        }, cy: function(t4) {
          return t4 == null ? this.y() + this.height() / 2 : this.y(t4 - this.height() / 2);
        }, move: function(t4, e4) {
          return this.x(t4).y(e4);
        }, center: function(t4, e4) {
          return this.cx(t4).cy(e4);
        }, width: function(t4) {
          return this.attr("width", t4);
        }, height: function(t4) {
          return this.attr("height", t4);
        }, size: function(t4, e4) {
          var i3 = p2(this, t4, e4);
          return this.width(new n3.Number(i3.width)).height(new n3.Number(i3.height));
        }, clone: function(t4) {
          this.writeDataToDom();
          var e4 = m2(this.node.cloneNode(true));
          return t4 ? t4.add(e4) : this.after(e4), e4;
        }, remove: function() {
          return this.parent() && this.parent().removeElement(this), this;
        }, replace: function(t4) {
          return this.after(t4).remove(), t4;
        }, addTo: function(t4) {
          return t4.put(this);
        }, putIn: function(t4) {
          return t4.add(this);
        }, id: function(t4) {
          return this.attr("id", t4);
        }, show: function() {
          return this.style("display", "");
        }, hide: function() {
          return this.style("display", "none");
        }, visible: function() {
          return this.style("display") != "none";
        }, toString: function() {
          return this.attr("id");
        }, classes: function() {
          var t4 = this.attr("class");
          return t4 == null ? [] : t4.trim().split(n3.regex.delimiter);
        }, hasClass: function(t4) {
          return this.classes().indexOf(t4) != -1;
        }, addClass: function(t4) {
          if (!this.hasClass(t4)) {
            var e4 = this.classes();
            e4.push(t4), this.attr("class", e4.join(" "));
          }
          return this;
        }, removeClass: function(t4) {
          return this.hasClass(t4) && this.attr("class", this.classes().filter(function(e4) {
            return e4 != t4;
          }).join(" ")), this;
        }, toggleClass: function(t4) {
          return this.hasClass(t4) ? this.removeClass(t4) : this.addClass(t4);
        }, reference: function(t4) {
          return n3.get(this.attr(t4));
        }, parent: function(e4) {
          var i3 = this;
          if (!i3.node.parentNode)
            return null;
          if (i3 = n3.adopt(i3.node.parentNode), !e4)
            return i3;
          for (; i3 && i3.node instanceof t3.SVGElement; ) {
            if (typeof e4 == "string" ? i3.matches(e4) : i3 instanceof e4)
              return i3;
            if (!i3.node.parentNode || i3.node.parentNode.nodeName == "#document")
              return null;
            i3 = n3.adopt(i3.node.parentNode);
          }
        }, doc: function() {
          return this instanceof n3.Doc ? this : this.parent(n3.Doc);
        }, parents: function(t4) {
          var e4 = [], n4 = this;
          do {
            if (!(n4 = n4.parent(t4)) || !n4.node)
              break;
            e4.push(n4);
          } while (n4.parent);
          return e4;
        }, matches: function(t4) {
          return function(t5, e4) {
            return (t5.matches || t5.matchesSelector || t5.msMatchesSelector || t5.mozMatchesSelector || t5.webkitMatchesSelector || t5.oMatchesSelector).call(t5, e4);
          }(this.node, t4);
        }, native: function() {
          return this.node;
        }, svg: function(t4) {
          var i3 = e3.createElement("svg");
          if (!(t4 && this instanceof n3.Parent))
            return i3.appendChild(t4 = e3.createElement("svg")), this.writeDataToDom(), t4.appendChild(this.node.cloneNode(true)), i3.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "");
          i3.innerHTML = "<svg>" + t4.replace(/\n/, "").replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") + "</svg>";
          for (var a2 = 0, r3 = i3.firstChild.childNodes.length; a2 < r3; a2++)
            this.node.appendChild(i3.firstChild.firstChild);
          return this;
        }, writeDataToDom: function() {
          return (this.each || this.lines) && (this.each ? this : this.lines()).each(function() {
            this.writeDataToDom();
          }), this.node.removeAttribute("svgjs:data"), Object.keys(this.dom).length && this.node.setAttribute("svgjs:data", JSON.stringify(this.dom)), this;
        }, setData: function(t4) {
          return this.dom = t4, this;
        }, is: function(t4) {
          return function(t5, e4) {
            return t5 instanceof e4;
          }(this, t4);
        } } }), n3.easing = { "-": function(t4) {
          return t4;
        }, "<>": function(t4) {
          return -Math.cos(t4 * Math.PI) / 2 + 0.5;
        }, ">": function(t4) {
          return Math.sin(t4 * Math.PI / 2);
        }, "<": function(t4) {
          return 1 - Math.cos(t4 * Math.PI / 2);
        } }, n3.morph = function(t4) {
          return function(e4, i3) {
            return new n3.MorphObj(e4, i3).at(t4);
          };
        }, n3.Situation = n3.invent({ create: function(t4) {
          this.init = false, this.reversed = false, this.reversing = false, this.duration = new n3.Number(t4.duration).valueOf(), this.delay = new n3.Number(t4.delay).valueOf(), this.start = +new Date() + this.delay, this.finish = this.start + this.duration, this.ease = t4.ease, this.loop = 0, this.loops = false, this.animations = {}, this.attrs = {}, this.styles = {}, this.transforms = [], this.once = {};
        } }), n3.FX = n3.invent({ create: function(t4) {
          this._target = t4, this.situations = [], this.active = false, this.situation = null, this.paused = false, this.lastPos = 0, this.pos = 0, this.absPos = 0, this._speed = 1;
        }, extend: { animate: function(t4, e4, i3) {
          a(t4) === "object" && (e4 = t4.ease, i3 = t4.delay, t4 = t4.duration);
          var r3 = new n3.Situation({ duration: t4 || 1e3, delay: i3 || 0, ease: n3.easing[e4 || "-"] || e4 });
          return this.queue(r3), this;
        }, target: function(t4) {
          return t4 && t4 instanceof n3.Element ? (this._target = t4, this) : this._target;
        }, timeToAbsPos: function(t4) {
          return (t4 - this.situation.start) / (this.situation.duration / this._speed);
        }, absPosToTime: function(t4) {
          return this.situation.duration / this._speed * t4 + this.situation.start;
        }, startAnimFrame: function() {
          this.stopAnimFrame(), this.animationFrame = t3.requestAnimationFrame(function() {
            this.step();
          }.bind(this));
        }, stopAnimFrame: function() {
          t3.cancelAnimationFrame(this.animationFrame);
        }, start: function() {
          return !this.active && this.situation && (this.active = true, this.startCurrent()), this;
        }, startCurrent: function() {
          return this.situation.start = +new Date() + this.situation.delay / this._speed, this.situation.finish = this.situation.start + this.situation.duration / this._speed, this.initAnimations().step();
        }, queue: function(t4) {
          return (typeof t4 == "function" || t4 instanceof n3.Situation) && this.situations.push(t4), this.situation || (this.situation = this.situations.shift()), this;
        }, dequeue: function() {
          return this.stop(), this.situation = this.situations.shift(), this.situation && (this.situation instanceof n3.Situation ? this.start() : this.situation.call(this)), this;
        }, initAnimations: function() {
          var t4, e4 = this.situation;
          if (e4.init)
            return this;
          for (var i3 in e4.animations) {
            t4 = this.target()[i3](), Array.isArray(t4) || (t4 = [t4]), Array.isArray(e4.animations[i3]) || (e4.animations[i3] = [e4.animations[i3]]);
            for (var a2 = t4.length; a2--; )
              e4.animations[i3][a2] instanceof n3.Number && (t4[a2] = new n3.Number(t4[a2])), e4.animations[i3][a2] = t4[a2].morph(e4.animations[i3][a2]);
          }
          for (var i3 in e4.attrs)
            e4.attrs[i3] = new n3.MorphObj(this.target().attr(i3), e4.attrs[i3]);
          for (var i3 in e4.styles)
            e4.styles[i3] = new n3.MorphObj(this.target().style(i3), e4.styles[i3]);
          return e4.initialTransformation = this.target().matrixify(), e4.init = true, this;
        }, clearQueue: function() {
          return this.situations = [], this;
        }, clearCurrent: function() {
          return this.situation = null, this;
        }, stop: function(t4, e4) {
          var n4 = this.active;
          return this.active = false, e4 && this.clearQueue(), t4 && this.situation && (!n4 && this.startCurrent(), this.atEnd()), this.stopAnimFrame(), this.clearCurrent();
        }, after: function(t4) {
          var e4 = this.last();
          return this.target().on("finished.fx", function n4(i3) {
            i3.detail.situation == e4 && (t4.call(this, e4), this.off("finished.fx", n4));
          }), this._callStart();
        }, during: function(t4) {
          var e4 = this.last(), i3 = function(i4) {
            i4.detail.situation == e4 && t4.call(this, i4.detail.pos, n3.morph(i4.detail.pos), i4.detail.eased, e4);
          };
          return this.target().off("during.fx", i3).on("during.fx", i3), this.after(function() {
            this.off("during.fx", i3);
          }), this._callStart();
        }, afterAll: function(t4) {
          var e4 = function e5(n4) {
            t4.call(this), this.off("allfinished.fx", e5);
          };
          return this.target().off("allfinished.fx", e4).on("allfinished.fx", e4), this._callStart();
        }, last: function() {
          return this.situations.length ? this.situations[this.situations.length - 1] : this.situation;
        }, add: function(t4, e4, n4) {
          return this.last()[n4 || "animations"][t4] = e4, this._callStart();
        }, step: function(t4) {
          var e4, n4, i3;
          t4 || (this.absPos = this.timeToAbsPos(+new Date())), this.situation.loops !== false ? (e4 = Math.max(this.absPos, 0), n4 = Math.floor(e4), this.situation.loops === true || n4 < this.situation.loops ? (this.pos = e4 - n4, i3 = this.situation.loop, this.situation.loop = n4) : (this.absPos = this.situation.loops, this.pos = 1, i3 = this.situation.loop - 1, this.situation.loop = this.situation.loops), this.situation.reversing && (this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - i3) % 2))) : (this.absPos = Math.min(this.absPos, 1), this.pos = this.absPos), this.pos < 0 && (this.pos = 0), this.situation.reversed && (this.pos = 1 - this.pos);
          var a2 = this.situation.ease(this.pos);
          for (var r3 in this.situation.once)
            r3 > this.lastPos && r3 <= a2 && (this.situation.once[r3].call(this.target(), this.pos, a2), delete this.situation.once[r3]);
          return this.active && this.target().fire("during", { pos: this.pos, eased: a2, fx: this, situation: this.situation }), this.situation ? (this.eachAt(), this.pos == 1 && !this.situation.reversed || this.situation.reversed && this.pos == 0 ? (this.stopAnimFrame(), this.target().fire("finished", { fx: this, situation: this.situation }), this.situations.length || (this.target().fire("allfinished"), this.situations.length || (this.target().off(".fx"), this.active = false)), this.active ? this.dequeue() : this.clearCurrent()) : !this.paused && this.active && this.startAnimFrame(), this.lastPos = a2, this) : this;
        }, eachAt: function() {
          var t4, e4 = this, i3 = this.target(), a2 = this.situation;
          for (var r3 in a2.animations)
            t4 = [].concat(a2.animations[r3]).map(function(t5) {
              return typeof t5 != "string" && t5.at ? t5.at(a2.ease(e4.pos), e4.pos) : t5;
            }), i3[r3].apply(i3, t4);
          for (var r3 in a2.attrs)
            t4 = [r3].concat(a2.attrs[r3]).map(function(t5) {
              return typeof t5 != "string" && t5.at ? t5.at(a2.ease(e4.pos), e4.pos) : t5;
            }), i3.attr.apply(i3, t4);
          for (var r3 in a2.styles)
            t4 = [r3].concat(a2.styles[r3]).map(function(t5) {
              return typeof t5 != "string" && t5.at ? t5.at(a2.ease(e4.pos), e4.pos) : t5;
            }), i3.style.apply(i3, t4);
          if (a2.transforms.length) {
            t4 = a2.initialTransformation, r3 = 0;
            for (var o3 = a2.transforms.length; r3 < o3; r3++) {
              var s3 = a2.transforms[r3];
              s3 instanceof n3.Matrix ? t4 = s3.relative ? t4.multiply(new n3.Matrix().morph(s3).at(a2.ease(this.pos))) : t4.morph(s3).at(a2.ease(this.pos)) : (s3.relative || s3.undo(t4.extract()), t4 = t4.multiply(s3.at(a2.ease(this.pos))));
            }
            i3.matrix(t4);
          }
          return this;
        }, once: function(t4, e4, n4) {
          var i3 = this.last();
          return n4 || (t4 = i3.ease(t4)), i3.once[t4] = e4, this;
        }, _callStart: function() {
          return setTimeout(function() {
            this.start();
          }.bind(this), 0), this;
        } }, parent: n3.Element, construct: { animate: function(t4, e4, i3) {
          return (this.fx || (this.fx = new n3.FX(this))).animate(t4, e4, i3);
        }, delay: function(t4) {
          return (this.fx || (this.fx = new n3.FX(this))).delay(t4);
        }, stop: function(t4, e4) {
          return this.fx && this.fx.stop(t4, e4), this;
        }, finish: function() {
          return this.fx && this.fx.finish(), this;
        } } }), n3.MorphObj = n3.invent({ create: function(t4, e4) {
          return n3.Color.isColor(e4) ? new n3.Color(t4).morph(e4) : n3.regex.delimiter.test(t4) ? n3.regex.pathLetters.test(t4) ? new n3.PathArray(t4).morph(e4) : new n3.Array(t4).morph(e4) : n3.regex.numberAndUnit.test(e4) ? new n3.Number(t4).morph(e4) : (this.value = t4, void (this.destination = e4));
        }, extend: { at: function(t4, e4) {
          return e4 < 1 ? this.value : this.destination;
        }, valueOf: function() {
          return this.value;
        } } }), n3.extend(n3.FX, { attr: function(t4, e4, n4) {
          if (a(t4) === "object")
            for (var i3 in t4)
              this.attr(i3, t4[i3]);
          else
            this.add(t4, e4, "attrs");
          return this;
        }, plot: function(t4, e4, n4, i3) {
          return arguments.length == 4 ? this.plot([t4, e4, n4, i3]) : this.add("plot", new (this.target()).morphArray(t4));
        } }), n3.Box = n3.invent({ create: function(t4, e4, i3, r3) {
          if (!(a(t4) !== "object" || t4 instanceof n3.Element))
            return n3.Box.call(this, t4.left != null ? t4.left : t4.x, t4.top != null ? t4.top : t4.y, t4.width, t4.height);
          arguments.length == 4 && (this.x = t4, this.y = e4, this.width = i3, this.height = r3), v2(this);
        } }), n3.BBox = n3.invent({ create: function(t4) {
          if (n3.Box.apply(this, [].slice.call(arguments)), t4 instanceof n3.Element) {
            var i3;
            try {
              if (!e3.documentElement.contains) {
                for (var a2 = t4.node; a2.parentNode; )
                  a2 = a2.parentNode;
                if (a2 != e3)
                  throw new Error("Element not in the dom");
              }
              i3 = t4.node.getBBox();
            } catch (e4) {
              if (t4 instanceof n3.Shape) {
                n3.parser.draw || n3.prepare();
                var r3 = t4.clone(n3.parser.draw.instance).show();
                i3 = r3.node.getBBox(), r3.remove();
              } else
                i3 = { x: t4.node.clientLeft, y: t4.node.clientTop, width: t4.node.clientWidth, height: t4.node.clientHeight };
            }
            n3.Box.call(this, i3);
          }
        }, inherit: n3.Box, parent: n3.Element, construct: { bbox: function() {
          return new n3.BBox(this);
        } } }), n3.BBox.prototype.constructor = n3.BBox, n3.Matrix = n3.invent({ create: function(t4) {
          var e4 = g2([1, 0, 0, 1, 0, 0]);
          t4 = t4 === null ? e4 : t4 instanceof n3.Element ? t4.matrixify() : typeof t4 == "string" ? g2(t4.split(n3.regex.delimiter).map(parseFloat)) : arguments.length == 6 ? g2([].slice.call(arguments)) : Array.isArray(t4) ? g2(t4) : t4 && a(t4) === "object" ? t4 : e4;
          for (var i3 = y2.length - 1; i3 >= 0; --i3)
            this[y2[i3]] = t4[y2[i3]] != null ? t4[y2[i3]] : e4[y2[i3]];
        }, extend: { extract: function() {
          var t4 = f2(this, 0, 1);
          f2(this, 1, 0);
          var e4 = 180 / Math.PI * Math.atan2(t4.y, t4.x) - 90;
          return { x: this.e, y: this.f, transformedX: (this.e * Math.cos(e4 * Math.PI / 180) + this.f * Math.sin(e4 * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b), transformedY: (this.f * Math.cos(e4 * Math.PI / 180) + this.e * Math.sin(-e4 * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d), rotation: e4, a: this.a, b: this.b, c: this.c, d: this.d, e: this.e, f: this.f, matrix: new n3.Matrix(this) };
        }, clone: function() {
          return new n3.Matrix(this);
        }, morph: function(t4) {
          return this.destination = new n3.Matrix(t4), this;
        }, multiply: function(t4) {
          return new n3.Matrix(this.native().multiply(function(t5) {
            return t5 instanceof n3.Matrix || (t5 = new n3.Matrix(t5)), t5;
          }(t4).native()));
        }, inverse: function() {
          return new n3.Matrix(this.native().inverse());
        }, translate: function(t4, e4) {
          return new n3.Matrix(this.native().translate(t4 || 0, e4 || 0));
        }, native: function() {
          for (var t4 = n3.parser.native.createSVGMatrix(), e4 = y2.length - 1; e4 >= 0; e4--)
            t4[y2[e4]] = this[y2[e4]];
          return t4;
        }, toString: function() {
          return "matrix(" + b2(this.a) + "," + b2(this.b) + "," + b2(this.c) + "," + b2(this.d) + "," + b2(this.e) + "," + b2(this.f) + ")";
        } }, parent: n3.Element, construct: { ctm: function() {
          return new n3.Matrix(this.node.getCTM());
        }, screenCTM: function() {
          if (this instanceof n3.Nested) {
            var t4 = this.rect(1, 1), e4 = t4.node.getScreenCTM();
            return t4.remove(), new n3.Matrix(e4);
          }
          return new n3.Matrix(this.node.getScreenCTM());
        } } }), n3.Point = n3.invent({ create: function(t4, e4) {
          var n4;
          n4 = Array.isArray(t4) ? { x: t4[0], y: t4[1] } : a(t4) === "object" ? { x: t4.x, y: t4.y } : t4 != null ? { x: t4, y: e4 != null ? e4 : t4 } : { x: 0, y: 0 }, this.x = n4.x, this.y = n4.y;
        }, extend: { clone: function() {
          return new n3.Point(this);
        }, morph: function(t4, e4) {
          return this.destination = new n3.Point(t4, e4), this;
        } } }), n3.extend(n3.Element, { point: function(t4, e4) {
          return new n3.Point(t4, e4).transform(this.screenCTM().inverse());
        } }), n3.extend(n3.Element, { attr: function(t4, e4, i3) {
          if (t4 == null) {
            for (t4 = {}, i3 = (e4 = this.node.attributes).length - 1; i3 >= 0; i3--)
              t4[e4[i3].nodeName] = n3.regex.isNumber.test(e4[i3].nodeValue) ? parseFloat(e4[i3].nodeValue) : e4[i3].nodeValue;
            return t4;
          }
          if (a(t4) === "object")
            for (var r3 in t4)
              this.attr(r3, t4[r3]);
          else if (e4 === null)
            this.node.removeAttribute(t4);
          else {
            if (e4 == null)
              return (e4 = this.node.getAttribute(t4)) == null ? n3.defaults.attrs[t4] : n3.regex.isNumber.test(e4) ? parseFloat(e4) : e4;
            t4 == "stroke-width" ? this.attr("stroke", parseFloat(e4) > 0 ? this._stroke : null) : t4 == "stroke" && (this._stroke = e4), t4 != "fill" && t4 != "stroke" || (n3.regex.isImage.test(e4) && (e4 = this.doc().defs().image(e4, 0, 0)), e4 instanceof n3.Image && (e4 = this.doc().defs().pattern(0, 0, function() {
              this.add(e4);
            }))), typeof e4 == "number" ? e4 = new n3.Number(e4) : n3.Color.isColor(e4) ? e4 = new n3.Color(e4) : Array.isArray(e4) && (e4 = new n3.Array(e4)), t4 == "leading" ? this.leading && this.leading(e4) : typeof i3 == "string" ? this.node.setAttributeNS(i3, t4, e4.toString()) : this.node.setAttribute(t4, e4.toString()), !this.rebuild || t4 != "font-size" && t4 != "x" || this.rebuild(t4, e4);
          }
          return this;
        } }), n3.extend(n3.Element, { transform: function(t4, e4) {
          var i3;
          return a(t4) !== "object" ? (i3 = new n3.Matrix(this).extract(), typeof t4 == "string" ? i3[t4] : i3) : (i3 = new n3.Matrix(this), e4 = !!e4 || !!t4.relative, t4.a != null && (i3 = e4 ? i3.multiply(new n3.Matrix(t4)) : new n3.Matrix(t4)), this.attr("transform", i3));
        } }), n3.extend(n3.Element, { untransform: function() {
          return this.attr("transform", null);
        }, matrixify: function() {
          return (this.attr("transform") || "").split(n3.regex.transforms).slice(0, -1).map(function(t4) {
            var e4 = t4.trim().split("(");
            return [e4[0], e4[1].split(n3.regex.delimiter).map(function(t5) {
              return parseFloat(t5);
            })];
          }).reduce(function(t4, e4) {
            return e4[0] == "matrix" ? t4.multiply(g2(e4[1])) : t4[e4[0]].apply(t4, e4[1]);
          }, new n3.Matrix());
        }, toParent: function(t4) {
          if (this == t4)
            return this;
          var e4 = this.screenCTM(), n4 = t4.screenCTM().inverse();
          return this.addTo(t4).untransform().transform(n4.multiply(e4)), this;
        }, toDoc: function() {
          return this.toParent(this.doc());
        } }), n3.Transformation = n3.invent({ create: function(t4, e4) {
          if (arguments.length > 1 && typeof e4 != "boolean")
            return this.constructor.call(this, [].slice.call(arguments));
          if (Array.isArray(t4))
            for (var n4 = 0, i3 = this.arguments.length; n4 < i3; ++n4)
              this[this.arguments[n4]] = t4[n4];
          else if (t4 && a(t4) === "object")
            for (n4 = 0, i3 = this.arguments.length; n4 < i3; ++n4)
              this[this.arguments[n4]] = t4[this.arguments[n4]];
          this.inversed = false, e4 === true && (this.inversed = true);
        } }), n3.Translate = n3.invent({ parent: n3.Matrix, inherit: n3.Transformation, create: function(t4, e4) {
          this.constructor.apply(this, [].slice.call(arguments));
        }, extend: { arguments: ["transformedX", "transformedY"], method: "translate" } }), n3.extend(n3.Element, { style: function(t4, e4) {
          if (arguments.length == 0)
            return this.node.style.cssText || "";
          if (arguments.length < 2)
            if (a(t4) === "object")
              for (var i3 in t4)
                this.style(i3, t4[i3]);
            else {
              if (!n3.regex.isCss.test(t4))
                return this.node.style[d2(t4)];
              for (t4 = t4.split(/\s*;\s*/).filter(function(t5) {
                return !!t5;
              }).map(function(t5) {
                return t5.split(/\s*:\s*/);
              }); e4 = t4.pop(); )
                this.style(e4[0], e4[1]);
            }
          else
            this.node.style[d2(t4)] = e4 === null || n3.regex.isBlank.test(e4) ? "" : e4;
          return this;
        } }), n3.Parent = n3.invent({ create: function(t4) {
          this.constructor.call(this, t4);
        }, inherit: n3.Element, extend: { children: function() {
          return n3.utils.map(n3.utils.filterSVGElements(this.node.childNodes), function(t4) {
            return n3.adopt(t4);
          });
        }, add: function(t4, e4) {
          return e4 == null ? this.node.appendChild(t4.node) : t4.node != this.node.childNodes[e4] && this.node.insertBefore(t4.node, this.node.childNodes[e4]), this;
        }, put: function(t4, e4) {
          return this.add(t4, e4), t4;
        }, has: function(t4) {
          return this.index(t4) >= 0;
        }, index: function(t4) {
          return [].slice.call(this.node.childNodes).indexOf(t4.node);
        }, get: function(t4) {
          return n3.adopt(this.node.childNodes[t4]);
        }, first: function() {
          return this.get(0);
        }, last: function() {
          return this.get(this.node.childNodes.length - 1);
        }, each: function(t4, e4) {
          for (var i3 = this.children(), a2 = 0, r3 = i3.length; a2 < r3; a2++)
            i3[a2] instanceof n3.Element && t4.apply(i3[a2], [a2, i3]), e4 && i3[a2] instanceof n3.Container && i3[a2].each(t4, e4);
          return this;
        }, removeElement: function(t4) {
          return this.node.removeChild(t4.node), this;
        }, clear: function() {
          for (; this.node.hasChildNodes(); )
            this.node.removeChild(this.node.lastChild);
          return delete this._defs, this;
        }, defs: function() {
          return this.doc().defs();
        } } }), n3.extend(n3.Parent, { ungroup: function(t4, e4) {
          return e4 === 0 || this instanceof n3.Defs || this.node == n3.parser.draw || (t4 = t4 || (this instanceof n3.Doc ? this : this.parent(n3.Parent)), e4 = e4 || 1 / 0, this.each(function() {
            return this instanceof n3.Defs ? this : this instanceof n3.Parent ? this.ungroup(t4, e4 - 1) : this.toParent(t4);
          }), this.node.firstChild || this.remove()), this;
        }, flatten: function(t4, e4) {
          return this.ungroup(t4, e4);
        } }), n3.Container = n3.invent({ create: function(t4) {
          this.constructor.call(this, t4);
        }, inherit: n3.Parent }), n3.ViewBox = n3.invent({ parent: n3.Container, construct: {} }), ["click", "dblclick", "mousedown", "mouseup", "mouseover", "mouseout", "mousemove", "touchstart", "touchmove", "touchleave", "touchend", "touchcancel"].forEach(function(t4) {
          n3.Element.prototype[t4] = function(e4) {
            return n3.on(this.node, t4, e4), this;
          };
        }), n3.listeners = [], n3.handlerMap = [], n3.listenerId = 0, n3.on = function(t4, e4, i3, a2, r3) {
          var o3 = i3.bind(a2 || t4.instance || t4), s3 = (n3.handlerMap.indexOf(t4) + 1 || n3.handlerMap.push(t4)) - 1, l3 = e4.split(".")[0], c3 = e4.split(".")[1] || "*";
          n3.listeners[s3] = n3.listeners[s3] || {}, n3.listeners[s3][l3] = n3.listeners[s3][l3] || {}, n3.listeners[s3][l3][c3] = n3.listeners[s3][l3][c3] || {}, i3._svgjsListenerId || (i3._svgjsListenerId = ++n3.listenerId), n3.listeners[s3][l3][c3][i3._svgjsListenerId] = o3, t4.addEventListener(l3, o3, r3 || { passive: true });
        }, n3.off = function(t4, e4, i3) {
          var a2 = n3.handlerMap.indexOf(t4), r3 = e4 && e4.split(".")[0], o3 = e4 && e4.split(".")[1], s3 = "";
          if (a2 != -1)
            if (i3) {
              if (typeof i3 == "function" && (i3 = i3._svgjsListenerId), !i3)
                return;
              n3.listeners[a2][r3] && n3.listeners[a2][r3][o3 || "*"] && (t4.removeEventListener(r3, n3.listeners[a2][r3][o3 || "*"][i3], false), delete n3.listeners[a2][r3][o3 || "*"][i3]);
            } else if (o3 && r3) {
              if (n3.listeners[a2][r3] && n3.listeners[a2][r3][o3]) {
                for (var l3 in n3.listeners[a2][r3][o3])
                  n3.off(t4, [r3, o3].join("."), l3);
                delete n3.listeners[a2][r3][o3];
              }
            } else if (o3)
              for (var c3 in n3.listeners[a2])
                for (var s3 in n3.listeners[a2][c3])
                  o3 === s3 && n3.off(t4, [c3, o3].join("."));
            else if (r3) {
              if (n3.listeners[a2][r3]) {
                for (var s3 in n3.listeners[a2][r3])
                  n3.off(t4, [r3, s3].join("."));
                delete n3.listeners[a2][r3];
              }
            } else {
              for (var c3 in n3.listeners[a2])
                n3.off(t4, c3);
              delete n3.listeners[a2], delete n3.handlerMap[a2];
            }
        }, n3.extend(n3.Element, { on: function(t4, e4, i3, a2) {
          return n3.on(this.node, t4, e4, i3, a2), this;
        }, off: function(t4, e4) {
          return n3.off(this.node, t4, e4), this;
        }, fire: function(e4, i3) {
          return e4 instanceof t3.Event ? this.node.dispatchEvent(e4) : this.node.dispatchEvent(e4 = new n3.CustomEvent(e4, { detail: i3, cancelable: true })), this._event = e4, this;
        }, event: function() {
          return this._event;
        } }), n3.Defs = n3.invent({ create: "defs", inherit: n3.Container }), n3.G = n3.invent({ create: "g", inherit: n3.Container, extend: { x: function(t4) {
          return t4 == null ? this.transform("x") : this.transform({ x: t4 - this.x() }, true);
        } }, construct: { group: function() {
          return this.put(new n3.G());
        } } }), n3.Doc = n3.invent({ create: function(t4) {
          t4 && ((t4 = typeof t4 == "string" ? e3.getElementById(t4) : t4).nodeName == "svg" ? this.constructor.call(this, t4) : (this.constructor.call(this, n3.create("svg")), t4.appendChild(this.node), this.size("100%", "100%")), this.namespace().defs());
        }, inherit: n3.Container, extend: { namespace: function() {
          return this.attr({ xmlns: n3.ns, version: "1.1" }).attr("xmlns:xlink", n3.xlink, n3.xmlns).attr("xmlns:svgjs", n3.svgjs, n3.xmlns);
        }, defs: function() {
          var t4;
          return this._defs || ((t4 = this.node.getElementsByTagName("defs")[0]) ? this._defs = n3.adopt(t4) : this._defs = new n3.Defs(), this.node.appendChild(this._defs.node)), this._defs;
        }, parent: function() {
          return this.node.parentNode && this.node.parentNode.nodeName != "#document" ? this.node.parentNode : null;
        }, remove: function() {
          return this.parent() && this.parent().removeChild(this.node), this;
        }, clear: function() {
          for (; this.node.hasChildNodes(); )
            this.node.removeChild(this.node.lastChild);
          return delete this._defs, n3.parser.draw && !n3.parser.draw.parentNode && this.node.appendChild(n3.parser.draw), this;
        }, clone: function(t4) {
          this.writeDataToDom();
          var e4 = this.node, n4 = m2(e4.cloneNode(true));
          return t4 ? (t4.node || t4).appendChild(n4.node) : e4.parentNode.insertBefore(n4.node, e4.nextSibling), n4;
        } } }), n3.extend(n3.Element, {}), n3.Gradient = n3.invent({ create: function(t4) {
          this.constructor.call(this, n3.create(t4 + "Gradient")), this.type = t4;
        }, inherit: n3.Container, extend: { at: function(t4, e4, i3) {
          return this.put(new n3.Stop()).update(t4, e4, i3);
        }, update: function(t4) {
          return this.clear(), typeof t4 == "function" && t4.call(this, this), this;
        }, fill: function() {
          return "url(#" + this.id() + ")";
        }, toString: function() {
          return this.fill();
        }, attr: function(t4, e4, i3) {
          return t4 == "transform" && (t4 = "gradientTransform"), n3.Container.prototype.attr.call(this, t4, e4, i3);
        } }, construct: { gradient: function(t4, e4) {
          return this.defs().gradient(t4, e4);
        } } }), n3.extend(n3.Gradient, n3.FX, { from: function(t4, e4) {
          return (this._target || this).type == "radial" ? this.attr({ fx: new n3.Number(t4), fy: new n3.Number(e4) }) : this.attr({ x1: new n3.Number(t4), y1: new n3.Number(e4) });
        }, to: function(t4, e4) {
          return (this._target || this).type == "radial" ? this.attr({ cx: new n3.Number(t4), cy: new n3.Number(e4) }) : this.attr({ x2: new n3.Number(t4), y2: new n3.Number(e4) });
        } }), n3.extend(n3.Defs, { gradient: function(t4, e4) {
          return this.put(new n3.Gradient(t4)).update(e4);
        } }), n3.Stop = n3.invent({ create: "stop", inherit: n3.Element, extend: { update: function(t4) {
          return (typeof t4 == "number" || t4 instanceof n3.Number) && (t4 = { offset: arguments[0], color: arguments[1], opacity: arguments[2] }), t4.opacity != null && this.attr("stop-opacity", t4.opacity), t4.color != null && this.attr("stop-color", t4.color), t4.offset != null && this.attr("offset", new n3.Number(t4.offset)), this;
        } } }), n3.Pattern = n3.invent({ create: "pattern", inherit: n3.Container, extend: { fill: function() {
          return "url(#" + this.id() + ")";
        }, update: function(t4) {
          return this.clear(), typeof t4 == "function" && t4.call(this, this), this;
        }, toString: function() {
          return this.fill();
        }, attr: function(t4, e4, i3) {
          return t4 == "transform" && (t4 = "patternTransform"), n3.Container.prototype.attr.call(this, t4, e4, i3);
        } }, construct: { pattern: function(t4, e4, n4) {
          return this.defs().pattern(t4, e4, n4);
        } } }), n3.extend(n3.Defs, { pattern: function(t4, e4, i3) {
          return this.put(new n3.Pattern()).update(i3).attr({ x: 0, y: 0, width: t4, height: e4, patternUnits: "userSpaceOnUse" });
        } }), n3.Shape = n3.invent({ create: function(t4) {
          this.constructor.call(this, t4);
        }, inherit: n3.Element }), n3.Symbol = n3.invent({ create: "symbol", inherit: n3.Container, construct: { symbol: function() {
          return this.put(new n3.Symbol());
        } } }), n3.Use = n3.invent({ create: "use", inherit: n3.Shape, extend: { element: function(t4, e4) {
          return this.attr("href", (e4 || "") + "#" + t4, n3.xlink);
        } }, construct: { use: function(t4, e4) {
          return this.put(new n3.Use()).element(t4, e4);
        } } }), n3.Rect = n3.invent({ create: "rect", inherit: n3.Shape, construct: { rect: function(t4, e4) {
          return this.put(new n3.Rect()).size(t4, e4);
        } } }), n3.Circle = n3.invent({ create: "circle", inherit: n3.Shape, construct: { circle: function(t4) {
          return this.put(new n3.Circle()).rx(new n3.Number(t4).divide(2)).move(0, 0);
        } } }), n3.extend(n3.Circle, n3.FX, { rx: function(t4) {
          return this.attr("r", t4);
        }, ry: function(t4) {
          return this.rx(t4);
        } }), n3.Ellipse = n3.invent({ create: "ellipse", inherit: n3.Shape, construct: { ellipse: function(t4, e4) {
          return this.put(new n3.Ellipse()).size(t4, e4).move(0, 0);
        } } }), n3.extend(n3.Ellipse, n3.Rect, n3.FX, { rx: function(t4) {
          return this.attr("rx", t4);
        }, ry: function(t4) {
          return this.attr("ry", t4);
        } }), n3.extend(n3.Circle, n3.Ellipse, { x: function(t4) {
          return t4 == null ? this.cx() - this.rx() : this.cx(t4 + this.rx());
        }, y: function(t4) {
          return t4 == null ? this.cy() - this.ry() : this.cy(t4 + this.ry());
        }, cx: function(t4) {
          return t4 == null ? this.attr("cx") : this.attr("cx", t4);
        }, cy: function(t4) {
          return t4 == null ? this.attr("cy") : this.attr("cy", t4);
        }, width: function(t4) {
          return t4 == null ? 2 * this.rx() : this.rx(new n3.Number(t4).divide(2));
        }, height: function(t4) {
          return t4 == null ? 2 * this.ry() : this.ry(new n3.Number(t4).divide(2));
        }, size: function(t4, e4) {
          var i3 = p2(this, t4, e4);
          return this.rx(new n3.Number(i3.width).divide(2)).ry(new n3.Number(i3.height).divide(2));
        } }), n3.Line = n3.invent({ create: "line", inherit: n3.Shape, extend: { array: function() {
          return new n3.PointArray([[this.attr("x1"), this.attr("y1")], [this.attr("x2"), this.attr("y2")]]);
        }, plot: function(t4, e4, i3, a2) {
          return t4 == null ? this.array() : (t4 = e4 !== void 0 ? { x1: t4, y1: e4, x2: i3, y2: a2 } : new n3.PointArray(t4).toLine(), this.attr(t4));
        }, move: function(t4, e4) {
          return this.attr(this.array().move(t4, e4).toLine());
        }, size: function(t4, e4) {
          var n4 = p2(this, t4, e4);
          return this.attr(this.array().size(n4.width, n4.height).toLine());
        } }, construct: { line: function(t4, e4, i3, a2) {
          return n3.Line.prototype.plot.apply(this.put(new n3.Line()), t4 != null ? [t4, e4, i3, a2] : [0, 0, 0, 0]);
        } } }), n3.Polyline = n3.invent({ create: "polyline", inherit: n3.Shape, construct: { polyline: function(t4) {
          return this.put(new n3.Polyline()).plot(t4 || new n3.PointArray());
        } } }), n3.Polygon = n3.invent({ create: "polygon", inherit: n3.Shape, construct: { polygon: function(t4) {
          return this.put(new n3.Polygon()).plot(t4 || new n3.PointArray());
        } } }), n3.extend(n3.Polyline, n3.Polygon, { array: function() {
          return this._array || (this._array = new n3.PointArray(this.attr("points")));
        }, plot: function(t4) {
          return t4 == null ? this.array() : this.clear().attr("points", typeof t4 == "string" ? t4 : this._array = new n3.PointArray(t4));
        }, clear: function() {
          return delete this._array, this;
        }, move: function(t4, e4) {
          return this.attr("points", this.array().move(t4, e4));
        }, size: function(t4, e4) {
          var n4 = p2(this, t4, e4);
          return this.attr("points", this.array().size(n4.width, n4.height));
        } }), n3.extend(n3.Line, n3.Polyline, n3.Polygon, { morphArray: n3.PointArray, x: function(t4) {
          return t4 == null ? this.bbox().x : this.move(t4, this.bbox().y);
        }, y: function(t4) {
          return t4 == null ? this.bbox().y : this.move(this.bbox().x, t4);
        }, width: function(t4) {
          var e4 = this.bbox();
          return t4 == null ? e4.width : this.size(t4, e4.height);
        }, height: function(t4) {
          var e4 = this.bbox();
          return t4 == null ? e4.height : this.size(e4.width, t4);
        } }), n3.Path = n3.invent({ create: "path", inherit: n3.Shape, extend: { morphArray: n3.PathArray, array: function() {
          return this._array || (this._array = new n3.PathArray(this.attr("d")));
        }, plot: function(t4) {
          return t4 == null ? this.array() : this.clear().attr("d", typeof t4 == "string" ? t4 : this._array = new n3.PathArray(t4));
        }, clear: function() {
          return delete this._array, this;
        } }, construct: { path: function(t4) {
          return this.put(new n3.Path()).plot(t4 || new n3.PathArray());
        } } }), n3.Image = n3.invent({ create: "image", inherit: n3.Shape, extend: { load: function(e4) {
          if (!e4)
            return this;
          var i3 = this, a2 = new t3.Image();
          return n3.on(a2, "load", function() {
            n3.off(a2);
            var t4 = i3.parent(n3.Pattern);
            t4 !== null && (i3.width() == 0 && i3.height() == 0 && i3.size(a2.width, a2.height), t4 && t4.width() == 0 && t4.height() == 0 && t4.size(i3.width(), i3.height()), typeof i3._loaded == "function" && i3._loaded.call(i3, { width: a2.width, height: a2.height, ratio: a2.width / a2.height, url: e4 }));
          }), n3.on(a2, "error", function(t4) {
            n3.off(a2), typeof i3._error == "function" && i3._error.call(i3, t4);
          }), this.attr("href", a2.src = this.src = e4, n3.xlink);
        }, loaded: function(t4) {
          return this._loaded = t4, this;
        }, error: function(t4) {
          return this._error = t4, this;
        } }, construct: { image: function(t4, e4, i3) {
          return this.put(new n3.Image()).load(t4).size(e4 || 0, i3 || e4 || 0);
        } } }), n3.Text = n3.invent({ create: function() {
          this.constructor.call(this, n3.create("text")), this.dom.leading = new n3.Number(1.3), this._rebuild = true, this._build = false, this.attr("font-family", n3.defaults.attrs["font-family"]);
        }, inherit: n3.Shape, extend: { x: function(t4) {
          return t4 == null ? this.attr("x") : this.attr("x", t4);
        }, text: function(t4) {
          if (t4 === void 0) {
            t4 = "";
            for (var e4 = this.node.childNodes, i3 = 0, a2 = e4.length; i3 < a2; ++i3)
              i3 != 0 && e4[i3].nodeType != 3 && n3.adopt(e4[i3]).dom.newLined == 1 && (t4 += "\n"), t4 += e4[i3].textContent;
            return t4;
          }
          if (this.clear().build(true), typeof t4 == "function")
            t4.call(this, this);
          else {
            i3 = 0;
            for (var r3 = (t4 = t4.split("\n")).length; i3 < r3; i3++)
              this.tspan(t4[i3]).newLine();
          }
          return this.build(false).rebuild();
        }, size: function(t4) {
          return this.attr("font-size", t4).rebuild();
        }, leading: function(t4) {
          return t4 == null ? this.dom.leading : (this.dom.leading = new n3.Number(t4), this.rebuild());
        }, lines: function() {
          var t4 = (this.textPath && this.textPath() || this).node, e4 = n3.utils.map(n3.utils.filterSVGElements(t4.childNodes), function(t5) {
            return n3.adopt(t5);
          });
          return new n3.Set(e4);
        }, rebuild: function(t4) {
          if (typeof t4 == "boolean" && (this._rebuild = t4), this._rebuild) {
            var e4 = this, i3 = 0, a2 = this.dom.leading * new n3.Number(this.attr("font-size"));
            this.lines().each(function() {
              this.dom.newLined && (e4.textPath() || this.attr("x", e4.attr("x")), this.text() == "\n" ? i3 += a2 : (this.attr("dy", a2 + i3), i3 = 0));
            }), this.fire("rebuild");
          }
          return this;
        }, build: function(t4) {
          return this._build = !!t4, this;
        }, setData: function(t4) {
          return this.dom = t4, this.dom.leading = new n3.Number(t4.leading || 1.3), this;
        } }, construct: { text: function(t4) {
          return this.put(new n3.Text()).text(t4);
        }, plain: function(t4) {
          return this.put(new n3.Text()).plain(t4);
        } } }), n3.Tspan = n3.invent({ create: "tspan", inherit: n3.Shape, extend: { text: function(t4) {
          return t4 == null ? this.node.textContent + (this.dom.newLined ? "\n" : "") : (typeof t4 == "function" ? t4.call(this, this) : this.plain(t4), this);
        }, dx: function(t4) {
          return this.attr("dx", t4);
        }, dy: function(t4) {
          return this.attr("dy", t4);
        }, newLine: function() {
          var t4 = this.parent(n3.Text);
          return this.dom.newLined = true, this.dy(t4.dom.leading * t4.attr("font-size")).attr("x", t4.x());
        } } }), n3.extend(n3.Text, n3.Tspan, { plain: function(t4) {
          return this._build === false && this.clear(), this.node.appendChild(e3.createTextNode(t4)), this;
        }, tspan: function(t4) {
          var e4 = (this.textPath && this.textPath() || this).node, i3 = new n3.Tspan();
          return this._build === false && this.clear(), e4.appendChild(i3.node), i3.text(t4);
        }, clear: function() {
          for (var t4 = (this.textPath && this.textPath() || this).node; t4.hasChildNodes(); )
            t4.removeChild(t4.lastChild);
          return this;
        }, length: function() {
          return this.node.getComputedTextLength();
        } }), n3.TextPath = n3.invent({ create: "textPath", inherit: n3.Parent, parent: n3.Text, construct: { morphArray: n3.PathArray, array: function() {
          var t4 = this.track();
          return t4 ? t4.array() : null;
        }, plot: function(t4) {
          var e4 = this.track(), n4 = null;
          return e4 && (n4 = e4.plot(t4)), t4 == null ? n4 : this;
        }, track: function() {
          var t4 = this.textPath();
          if (t4)
            return t4.reference("href");
        }, textPath: function() {
          if (this.node.firstChild && this.node.firstChild.nodeName == "textPath")
            return n3.adopt(this.node.firstChild);
        } } }), n3.Nested = n3.invent({ create: function() {
          this.constructor.call(this, n3.create("svg")), this.style("overflow", "visible");
        }, inherit: n3.Container, construct: { nested: function() {
          return this.put(new n3.Nested());
        } } });
        var l2 = { stroke: ["color", "width", "opacity", "linecap", "linejoin", "miterlimit", "dasharray", "dashoffset"], fill: ["color", "opacity", "rule"], prefix: function(t4, e4) {
          return e4 == "color" ? t4 : t4 + "-" + e4;
        } };
        function c2(t4, e4, i3, a2) {
          return i3 + a2.replace(n3.regex.dots, " .");
        }
        function d2(t4) {
          return t4.toLowerCase().replace(/-(.)/g, function(t5, e4) {
            return e4.toUpperCase();
          });
        }
        function u2(t4) {
          return t4.charAt(0).toUpperCase() + t4.slice(1);
        }
        function h2(t4) {
          var e4 = t4.toString(16);
          return e4.length == 1 ? "0" + e4 : e4;
        }
        function p2(t4, e4, n4) {
          if (e4 == null || n4 == null) {
            var i3 = t4.bbox();
            e4 == null ? e4 = i3.width / i3.height * n4 : n4 == null && (n4 = i3.height / i3.width * e4);
          }
          return { width: e4, height: n4 };
        }
        function f2(t4, e4, n4) {
          return { x: e4 * t4.a + n4 * t4.c + 0, y: e4 * t4.b + n4 * t4.d + 0 };
        }
        function g2(t4) {
          return { a: t4[0], b: t4[1], c: t4[2], d: t4[3], e: t4[4], f: t4[5] };
        }
        function m2(e4) {
          for (var i3 = e4.childNodes.length - 1; i3 >= 0; i3--)
            e4.childNodes[i3] instanceof t3.SVGElement && m2(e4.childNodes[i3]);
          return n3.adopt(e4).id(n3.eid(e4.nodeName));
        }
        function v2(t4) {
          return t4.x == null && (t4.x = 0, t4.y = 0, t4.width = 0, t4.height = 0), t4.w = t4.width, t4.h = t4.height, t4.x2 = t4.x + t4.width, t4.y2 = t4.y + t4.height, t4.cx = t4.x + t4.width / 2, t4.cy = t4.y + t4.height / 2, t4;
        }
        function b2(t4) {
          return Math.abs(t4) > 1e-37 ? t4 : 0;
        }
        ["fill", "stroke"].forEach(function(t4) {
          var e4 = {};
          e4[t4] = function(e5) {
            if (e5 === void 0)
              return this;
            if (typeof e5 == "string" || n3.Color.isRgb(e5) || e5 && typeof e5.fill == "function")
              this.attr(t4, e5);
            else
              for (var i3 = l2[t4].length - 1; i3 >= 0; i3--)
                e5[l2[t4][i3]] != null && this.attr(l2.prefix(t4, l2[t4][i3]), e5[l2[t4][i3]]);
            return this;
          }, n3.extend(n3.Element, n3.FX, e4);
        }), n3.extend(n3.Element, n3.FX, { translate: function(t4, e4) {
          return this.transform({ x: t4, y: e4 });
        }, matrix: function(t4) {
          return this.attr("transform", new n3.Matrix(arguments.length == 6 ? [].slice.call(arguments) : t4));
        }, opacity: function(t4) {
          return this.attr("opacity", t4);
        }, dx: function(t4) {
          return this.x(new n3.Number(t4).plus(this instanceof n3.FX ? 0 : this.x()), true);
        }, dy: function(t4) {
          return this.y(new n3.Number(t4).plus(this instanceof n3.FX ? 0 : this.y()), true);
        } }), n3.extend(n3.Path, { length: function() {
          return this.node.getTotalLength();
        }, pointAt: function(t4) {
          return this.node.getPointAtLength(t4);
        } }), n3.Set = n3.invent({ create: function(t4) {
          Array.isArray(t4) ? this.members = t4 : this.clear();
        }, extend: { add: function() {
          for (var t4 = [].slice.call(arguments), e4 = 0, n4 = t4.length; e4 < n4; e4++)
            this.members.push(t4[e4]);
          return this;
        }, remove: function(t4) {
          var e4 = this.index(t4);
          return e4 > -1 && this.members.splice(e4, 1), this;
        }, each: function(t4) {
          for (var e4 = 0, n4 = this.members.length; e4 < n4; e4++)
            t4.apply(this.members[e4], [e4, this.members]);
          return this;
        }, clear: function() {
          return this.members = [], this;
        }, length: function() {
          return this.members.length;
        }, has: function(t4) {
          return this.index(t4) >= 0;
        }, index: function(t4) {
          return this.members.indexOf(t4);
        }, get: function(t4) {
          return this.members[t4];
        }, first: function() {
          return this.get(0);
        }, last: function() {
          return this.get(this.members.length - 1);
        }, valueOf: function() {
          return this.members;
        } }, construct: { set: function(t4) {
          return new n3.Set(t4);
        } } }), n3.FX.Set = n3.invent({ create: function(t4) {
          this.set = t4;
        } }), n3.Set.inherit = function() {
          var t4 = [];
          for (var e4 in n3.Shape.prototype)
            typeof n3.Shape.prototype[e4] == "function" && typeof n3.Set.prototype[e4] != "function" && t4.push(e4);
          for (var e4 in t4.forEach(function(t5) {
            n3.Set.prototype[t5] = function() {
              for (var e5 = 0, i3 = this.members.length; e5 < i3; e5++)
                this.members[e5] && typeof this.members[e5][t5] == "function" && this.members[e5][t5].apply(this.members[e5], arguments);
              return t5 == "animate" ? this.fx || (this.fx = new n3.FX.Set(this)) : this;
            };
          }), t4 = [], n3.FX.prototype)
            typeof n3.FX.prototype[e4] == "function" && typeof n3.FX.Set.prototype[e4] != "function" && t4.push(e4);
          t4.forEach(function(t5) {
            n3.FX.Set.prototype[t5] = function() {
              for (var e5 = 0, n4 = this.set.members.length; e5 < n4; e5++)
                this.set.members[e5].fx[t5].apply(this.set.members[e5].fx, arguments);
              return this;
            };
          });
        }, n3.extend(n3.Element, {}), n3.extend(n3.Element, { remember: function(t4, e4) {
          if (a(arguments[0]) === "object")
            for (var n4 in t4)
              this.remember(n4, t4[n4]);
          else {
            if (arguments.length == 1)
              return this.memory()[t4];
            this.memory()[t4] = e4;
          }
          return this;
        }, forget: function() {
          if (arguments.length == 0)
            this._memory = {};
          else
            for (var t4 = arguments.length - 1; t4 >= 0; t4--)
              delete this.memory()[arguments[t4]];
          return this;
        }, memory: function() {
          return this._memory || (this._memory = {});
        } }), n3.get = function(t4) {
          var i3 = e3.getElementById(function(t5) {
            var e4 = (t5 || "").toString().match(n3.regex.reference);
            if (e4)
              return e4[1];
          }(t4) || t4);
          return n3.adopt(i3);
        }, n3.select = function(t4, i3) {
          return new n3.Set(n3.utils.map((i3 || e3).querySelectorAll(t4), function(t5) {
            return n3.adopt(t5);
          }));
        }, n3.extend(n3.Parent, { select: function(t4) {
          return n3.select(t4, this.node);
        } });
        var y2 = "abcdef".split("");
        if (typeof t3.CustomEvent != "function") {
          var x2 = function(t4, n4) {
            n4 = n4 || { bubbles: false, cancelable: false, detail: void 0 };
            var i3 = e3.createEvent("CustomEvent");
            return i3.initCustomEvent(t4, n4.bubbles, n4.cancelable, n4.detail), i3;
          };
          x2.prototype = t3.Event.prototype, n3.CustomEvent = x2;
        } else
          n3.CustomEvent = t3.CustomEvent;
        return n3;
      }, (i = function() {
        return Pt(Rt, Rt.document);
      }.call(e2, n2, e2, t2)) !== void 0 && (t2.exports = i), function() {
        SVG.Filter = SVG.invent({ create: "filter", inherit: SVG.Parent, extend: { source: "SourceGraphic", sourceAlpha: "SourceAlpha", background: "BackgroundImage", backgroundAlpha: "BackgroundAlpha", fill: "FillPaint", stroke: "StrokePaint", autoSetIn: true, put: function(t4, e4) {
          return this.add(t4, e4), !t4.attr("in") && this.autoSetIn && t4.attr("in", this.source), t4.attr("result") || t4.attr("result", t4), t4;
        }, blend: function(t4, e4, n4) {
          return this.put(new SVG.BlendEffect(t4, e4, n4));
        }, colorMatrix: function(t4, e4) {
          return this.put(new SVG.ColorMatrixEffect(t4, e4));
        }, convolveMatrix: function(t4) {
          return this.put(new SVG.ConvolveMatrixEffect(t4));
        }, componentTransfer: function(t4) {
          return this.put(new SVG.ComponentTransferEffect(t4));
        }, composite: function(t4, e4, n4) {
          return this.put(new SVG.CompositeEffect(t4, e4, n4));
        }, flood: function(t4, e4) {
          return this.put(new SVG.FloodEffect(t4, e4));
        }, offset: function(t4, e4) {
          return this.put(new SVG.OffsetEffect(t4, e4));
        }, image: function(t4) {
          return this.put(new SVG.ImageEffect(t4));
        }, merge: function() {
          var t4 = [void 0];
          for (var e4 in arguments)
            t4.push(arguments[e4]);
          return this.put(new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, t4))());
        }, gaussianBlur: function(t4, e4) {
          return this.put(new SVG.GaussianBlurEffect(t4, e4));
        }, morphology: function(t4, e4) {
          return this.put(new SVG.MorphologyEffect(t4, e4));
        }, diffuseLighting: function(t4, e4, n4) {
          return this.put(new SVG.DiffuseLightingEffect(t4, e4, n4));
        }, displacementMap: function(t4, e4, n4, i3, a3) {
          return this.put(new SVG.DisplacementMapEffect(t4, e4, n4, i3, a3));
        }, specularLighting: function(t4, e4, n4, i3) {
          return this.put(new SVG.SpecularLightingEffect(t4, e4, n4, i3));
        }, tile: function() {
          return this.put(new SVG.TileEffect());
        }, turbulence: function(t4, e4, n4, i3, a3) {
          return this.put(new SVG.TurbulenceEffect(t4, e4, n4, i3, a3));
        }, toString: function() {
          return "url(#" + this.attr("id") + ")";
        } } }), SVG.extend(SVG.Defs, { filter: function(t4) {
          var e4 = this.put(new SVG.Filter());
          return typeof t4 == "function" && t4.call(e4, e4), e4;
        } }), SVG.extend(SVG.Container, { filter: function(t4) {
          return this.defs().filter(t4);
        } }), SVG.extend(SVG.Element, SVG.G, SVG.Nested, { filter: function(t4) {
          return this.filterer = t4 instanceof SVG.Element ? t4 : this.doc().filter(t4), this.doc() && this.filterer.doc() !== this.doc() && this.doc().defs().add(this.filterer), this.attr("filter", this.filterer), this.filterer;
        }, unfilter: function(t4) {
          return this.filterer && t4 === true && this.filterer.remove(), delete this.filterer, this.attr("filter", null);
        } }), SVG.Effect = SVG.invent({ create: function() {
          this.constructor.call(this);
        }, inherit: SVG.Element, extend: { in: function(t4) {
          return t4 == null ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t4);
        }, result: function(t4) {
          return t4 == null ? this.attr("result") : this.attr("result", t4);
        }, toString: function() {
          return this.result();
        } } }), SVG.ParentEffect = SVG.invent({ create: function() {
          this.constructor.call(this);
        }, inherit: SVG.Parent, extend: { in: function(t4) {
          return t4 == null ? this.parent() && this.parent().select('[result="' + this.attr("in") + '"]').get(0) || this.attr("in") : this.attr("in", t4);
        }, result: function(t4) {
          return t4 == null ? this.attr("result") : this.attr("result", t4);
        }, toString: function() {
          return this.result();
        } } });
        var t3 = { blend: function(t4, e4) {
          return this.parent() && this.parent().blend(this, t4, e4);
        }, colorMatrix: function(t4, e4) {
          return this.parent() && this.parent().colorMatrix(t4, e4).in(this);
        }, convolveMatrix: function(t4) {
          return this.parent() && this.parent().convolveMatrix(t4).in(this);
        }, componentTransfer: function(t4) {
          return this.parent() && this.parent().componentTransfer(t4).in(this);
        }, composite: function(t4, e4) {
          return this.parent() && this.parent().composite(this, t4, e4);
        }, flood: function(t4, e4) {
          return this.parent() && this.parent().flood(t4, e4);
        }, offset: function(t4, e4) {
          return this.parent() && this.parent().offset(t4, e4).in(this);
        }, image: function(t4) {
          return this.parent() && this.parent().image(t4);
        }, merge: function() {
          return this.parent() && this.parent().merge.apply(this.parent(), [this].concat(arguments));
        }, gaussianBlur: function(t4, e4) {
          return this.parent() && this.parent().gaussianBlur(t4, e4).in(this);
        }, morphology: function(t4, e4) {
          return this.parent() && this.parent().morphology(t4, e4).in(this);
        }, diffuseLighting: function(t4, e4, n4) {
          return this.parent() && this.parent().diffuseLighting(t4, e4, n4).in(this);
        }, displacementMap: function(t4, e4, n4, i3) {
          return this.parent() && this.parent().displacementMap(this, t4, e4, n4, i3);
        }, specularLighting: function(t4, e4, n4, i3) {
          return this.parent() && this.parent().specularLighting(t4, e4, n4, i3).in(this);
        }, tile: function() {
          return this.parent() && this.parent().tile().in(this);
        }, turbulence: function(t4, e4, n4, i3, a3) {
          return this.parent() && this.parent().turbulence(t4, e4, n4, i3, a3).in(this);
        } };
        SVG.extend(SVG.Effect, t3), SVG.extend(SVG.ParentEffect, t3), SVG.ChildEffect = SVG.invent({ create: function() {
          this.constructor.call(this);
        }, inherit: SVG.Element, extend: { in: function(t4) {
          this.attr("in", t4);
        } } });
        var e3 = { blend: function(t4, e4, n4) {
          this.attr({ in: t4, in2: e4, mode: n4 || "normal" });
        }, colorMatrix: function(t4, e4) {
          t4 == "matrix" && (e4 = a2(e4)), this.attr({ type: t4, values: e4 === void 0 ? null : e4 });
        }, convolveMatrix: function(t4) {
          t4 = a2(t4), this.attr({ order: Math.sqrt(t4.split(" ").length), kernelMatrix: t4 });
        }, composite: function(t4, e4, n4) {
          this.attr({ in: t4, in2: e4, operator: n4 });
        }, flood: function(t4, e4) {
          this.attr("flood-color", t4), e4 != null && this.attr("flood-opacity", e4);
        }, offset: function(t4, e4) {
          this.attr({ dx: t4, dy: e4 });
        }, image: function(t4) {
          this.attr("href", t4, SVG.xlink);
        }, displacementMap: function(t4, e4, n4, i3, a3) {
          this.attr({ in: t4, in2: e4, scale: n4, xChannelSelector: i3, yChannelSelector: a3 });
        }, gaussianBlur: function(t4, e4) {
          t4 != null || e4 != null ? this.attr("stdDeviation", r2(Array.prototype.slice.call(arguments))) : this.attr("stdDeviation", "0 0");
        }, morphology: function(t4, e4) {
          this.attr({ operator: t4, radius: e4 });
        }, tile: function() {
        }, turbulence: function(t4, e4, n4, i3, a3) {
          this.attr({ numOctaves: e4, seed: n4, stitchTiles: i3, baseFrequency: t4, type: a3 });
        } }, n3 = { merge: function() {
          var t4;
          if (arguments[0] instanceof SVG.Set) {
            var e4 = this;
            arguments[0].each(function(t5) {
              this instanceof SVG.MergeNode ? e4.put(this) : (this instanceof SVG.Effect || this instanceof SVG.ParentEffect) && e4.put(new SVG.MergeNode(this));
            });
          } else {
            t4 = Array.isArray(arguments[0]) ? arguments[0] : arguments;
            for (var n4 = 0; n4 < t4.length; n4++)
              t4[n4] instanceof SVG.MergeNode ? this.put(t4[n4]) : this.put(new SVG.MergeNode(t4[n4]));
          }
        }, componentTransfer: function(t4) {
          if (this.rgb = new SVG.Set(), ["r", "g", "b", "a"].forEach(function(t5) {
            this[t5] = new SVG["Func" + t5.toUpperCase()]("identity"), this.rgb.add(this[t5]), this.node.appendChild(this[t5].node);
          }.bind(this)), t4)
            for (var e4 in t4.rgb && (["r", "g", "b"].forEach(function(e5) {
              this[e5].attr(t4.rgb);
            }.bind(this)), delete t4.rgb), t4)
              this[e4].attr(t4[e4]);
        }, diffuseLighting: function(t4, e4, n4) {
          this.attr({ surfaceScale: t4, diffuseConstant: e4, kernelUnitLength: n4 });
        }, specularLighting: function(t4, e4, n4, i3) {
          this.attr({ surfaceScale: t4, diffuseConstant: e4, specularExponent: n4, kernelUnitLength: i3 });
        } }, i2 = { distantLight: function(t4, e4) {
          this.attr({ azimuth: t4, elevation: e4 });
        }, pointLight: function(t4, e4, n4) {
          this.attr({ x: t4, y: e4, z: n4 });
        }, spotLight: function(t4, e4, n4, i3, a3, r3) {
          this.attr({ x: t4, y: e4, z: n4, pointsAtX: i3, pointsAtY: a3, pointsAtZ: r3 });
        }, mergeNode: function(t4) {
          this.attr("in", t4);
        } };
        function a2(t4) {
          return Array.isArray(t4) && (t4 = new SVG.Array(t4)), t4.toString().replace(/^\s+/, "").replace(/\s+$/, "").replace(/\s+/g, " ");
        }
        function r2(t4) {
          if (!Array.isArray(t4))
            return t4;
          for (var e4 = 0, n4 = t4.length, i3 = []; e4 < n4; e4++)
            i3.push(t4[e4]);
          return i3.join(" ");
        }
        function o2() {
          var t4 = function() {
          };
          for (var e4 in typeof arguments[arguments.length - 1] == "function" && (t4 = arguments[arguments.length - 1], Array.prototype.splice.call(arguments, arguments.length - 1, 1)), arguments)
            for (var n4 in arguments[e4])
              t4(arguments[e4][n4], n4, arguments[e4]);
        }
        ["r", "g", "b", "a"].forEach(function(t4) {
          i2["Func" + t4.toUpperCase()] = function(t5) {
            switch (this.attr("type", t5), t5) {
              case "table":
                this.attr("tableValues", arguments[1]);
                break;
              case "linear":
                this.attr("slope", arguments[1]), this.attr("intercept", arguments[2]);
                break;
              case "gamma":
                this.attr("amplitude", arguments[1]), this.attr("exponent", arguments[2]), this.attr("offset", arguments[2]);
            }
          };
        }), o2(e3, function(t4, e4) {
          var n4 = e4.charAt(0).toUpperCase() + e4.slice(1);
          SVG[n4 + "Effect"] = SVG.invent({ create: function() {
            this.constructor.call(this, SVG.create("fe" + n4)), t4.apply(this, arguments), this.result(this.attr("id") + "Out");
          }, inherit: SVG.Effect, extend: {} });
        }), o2(n3, function(t4, e4) {
          var n4 = e4.charAt(0).toUpperCase() + e4.slice(1);
          SVG[n4 + "Effect"] = SVG.invent({ create: function() {
            this.constructor.call(this, SVG.create("fe" + n4)), t4.apply(this, arguments), this.result(this.attr("id") + "Out");
          }, inherit: SVG.ParentEffect, extend: {} });
        }), o2(i2, function(t4, e4) {
          var n4 = e4.charAt(0).toUpperCase() + e4.slice(1);
          SVG[n4] = SVG.invent({ create: function() {
            this.constructor.call(this, SVG.create("fe" + n4)), t4.apply(this, arguments);
          }, inherit: SVG.ChildEffect, extend: {} });
        }), SVG.extend(SVG.MergeEffect, { in: function(t4) {
          return t4 instanceof SVG.MergeNode ? this.add(t4, 0) : this.add(new SVG.MergeNode(t4), 0), this;
        } }), SVG.extend(SVG.CompositeEffect, SVG.BlendEffect, SVG.DisplacementMapEffect, { in2: function(t4) {
          return t4 == null ? this.parent() && this.parent().select('[result="' + this.attr("in2") + '"]').get(0) || this.attr("in2") : this.attr("in2", t4);
        } }), SVG.filter = { sepiatone: [0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172, 0.334, 0.111, 0, 0, 0, 0, 0, 1, 0] };
      }.call(void 0), function() {
        function t3(t4, a3, r2, o2, s2, l2, c2) {
          for (var d2 = t4.slice(a3, r2 || c2), u2 = o2.slice(s2, l2 || c2), h2 = 0, p2 = { pos: [0, 0], start: [0, 0] }, f2 = { pos: [0, 0], start: [0, 0] }; d2[h2] = e3.call(p2, d2[h2]), u2[h2] = e3.call(f2, u2[h2]), d2[h2][0] != u2[h2][0] || d2[h2][0] == "M" || d2[h2][0] == "A" && (d2[h2][4] != u2[h2][4] || d2[h2][5] != u2[h2][5]) ? (Array.prototype.splice.apply(d2, [h2, 1].concat(i2.call(p2, d2[h2]))), Array.prototype.splice.apply(u2, [h2, 1].concat(i2.call(f2, u2[h2])))) : (d2[h2] = n3.call(p2, d2[h2]), u2[h2] = n3.call(f2, u2[h2])), ++h2 != d2.length || h2 != u2.length; )
            h2 == d2.length && d2.push(["C", p2.pos[0], p2.pos[1], p2.pos[0], p2.pos[1], p2.pos[0], p2.pos[1]]), h2 == u2.length && u2.push(["C", f2.pos[0], f2.pos[1], f2.pos[0], f2.pos[1], f2.pos[0], f2.pos[1]]);
          return { start: d2, dest: u2 };
        }
        function e3(t4) {
          switch (t4[0]) {
            case "z":
            case "Z":
              t4[0] = "L", t4[1] = this.start[0], t4[2] = this.start[1];
              break;
            case "H":
              t4[0] = "L", t4[2] = this.pos[1];
              break;
            case "V":
              t4[0] = "L", t4[2] = t4[1], t4[1] = this.pos[0];
              break;
            case "T":
              t4[0] = "Q", t4[3] = t4[1], t4[4] = t4[2], t4[1] = this.reflection[1], t4[2] = this.reflection[0];
              break;
            case "S":
              t4[0] = "C", t4[6] = t4[4], t4[5] = t4[3], t4[4] = t4[2], t4[3] = t4[1], t4[2] = this.reflection[1], t4[1] = this.reflection[0];
          }
          return t4;
        }
        function n3(t4) {
          var e4 = t4.length;
          return this.pos = [t4[e4 - 2], t4[e4 - 1]], "SCQT".indexOf(t4[0]) != -1 && (this.reflection = [2 * this.pos[0] - t4[e4 - 4], 2 * this.pos[1] - t4[e4 - 3]]), t4;
        }
        function i2(t4) {
          var e4 = [t4];
          switch (t4[0]) {
            case "M":
              return this.pos = this.start = [t4[1], t4[2]], e4;
            case "L":
              t4[5] = t4[3] = t4[1], t4[6] = t4[4] = t4[2], t4[1] = this.pos[0], t4[2] = this.pos[1];
              break;
            case "Q":
              t4[6] = t4[4], t4[5] = t4[3], t4[4] = 1 * t4[4] / 3 + 2 * t4[2] / 3, t4[3] = 1 * t4[3] / 3 + 2 * t4[1] / 3, t4[2] = 1 * this.pos[1] / 3 + 2 * t4[2] / 3, t4[1] = 1 * this.pos[0] / 3 + 2 * t4[1] / 3;
              break;
            case "A":
              t4 = (e4 = function(t5, e5) {
                var n4, i3, a3, r2, o2, s2, l2, c2, d2, u2, h2, p2, f2, g2, m2, v2, b2, y2, x2, _2, w2, S2, C2, k2, D2, T2, E2 = Math.abs(e5[1]), A2 = Math.abs(e5[2]), I2 = e5[3] % 360, M2 = e5[4], R2 = e5[5], P2 = e5[6], O2 = e5[7], j2 = new SVG.Point(t5), N2 = new SVG.Point(P2, O2), L2 = [];
                if (E2 === 0 || A2 === 0 || j2.x === N2.x && j2.y === N2.y)
                  return [["C", j2.x, j2.y, N2.x, N2.y, N2.x, N2.y]];
                for ((i3 = (n4 = new SVG.Point((j2.x - N2.x) / 2, (j2.y - N2.y) / 2).transform(new SVG.Matrix().rotate(I2))).x * n4.x / (E2 * E2) + n4.y * n4.y / (A2 * A2)) > 1 && (E2 *= i3 = Math.sqrt(i3), A2 *= i3), a3 = new SVG.Matrix().rotate(I2).scale(1 / E2, 1 / A2).rotate(-I2), j2 = j2.transform(a3), s2 = (r2 = [(N2 = N2.transform(a3)).x - j2.x, N2.y - j2.y])[0] * r2[0] + r2[1] * r2[1], o2 = Math.sqrt(s2), r2[0] /= o2, r2[1] /= o2, l2 = s2 < 4 ? Math.sqrt(1 - s2 / 4) : 0, M2 === R2 && (l2 *= -1), c2 = new SVG.Point((N2.x + j2.x) / 2 + l2 * -r2[1], (N2.y + j2.y) / 2 + l2 * r2[0]), d2 = new SVG.Point(j2.x - c2.x, j2.y - c2.y), u2 = new SVG.Point(N2.x - c2.x, N2.y - c2.y), h2 = Math.acos(d2.x / Math.sqrt(d2.x * d2.x + d2.y * d2.y)), d2.y < 0 && (h2 *= -1), p2 = Math.acos(u2.x / Math.sqrt(u2.x * u2.x + u2.y * u2.y)), u2.y < 0 && (p2 *= -1), R2 && h2 > p2 && (p2 += 2 * Math.PI), !R2 && h2 < p2 && (p2 -= 2 * Math.PI), v2 = [], b2 = h2, f2 = (p2 - h2) / (g2 = Math.ceil(2 * Math.abs(h2 - p2) / Math.PI)), m2 = 4 * Math.tan(f2 / 4) / 3, w2 = 0; w2 <= g2; w2++)
                  x2 = Math.cos(b2), y2 = Math.sin(b2), _2 = new SVG.Point(c2.x + x2, c2.y + y2), v2[w2] = [new SVG.Point(_2.x + m2 * y2, _2.y - m2 * x2), _2, new SVG.Point(_2.x - m2 * y2, _2.y + m2 * x2)], b2 += f2;
                for (v2[0][0] = v2[0][1].clone(), v2[v2.length - 1][2] = v2[v2.length - 1][1].clone(), a3 = new SVG.Matrix().rotate(I2).scale(E2, A2).rotate(-I2), w2 = 0, S2 = v2.length; w2 < S2; w2++)
                  v2[w2][0] = v2[w2][0].transform(a3), v2[w2][1] = v2[w2][1].transform(a3), v2[w2][2] = v2[w2][2].transform(a3);
                for (w2 = 1, S2 = v2.length; w2 < S2; w2++)
                  C2 = (_2 = v2[w2 - 1][2]).x, k2 = _2.y, D2 = (_2 = v2[w2][0]).x, T2 = _2.y, P2 = (_2 = v2[w2][1]).x, O2 = _2.y, L2.push(["C", C2, k2, D2, T2, P2, O2]);
                return L2;
              }(this.pos, t4))[0];
          }
          return t4[0] = "C", this.pos = [t4[5], t4[6]], this.reflection = [2 * t4[5] - t4[3], 2 * t4[6] - t4[4]], e4;
        }
        function a2(t4, e4) {
          if (e4 === false)
            return false;
          for (var n4 = e4, i3 = t4.length; n4 < i3; ++n4)
            if (t4[n4][0] == "M")
              return n4;
          return false;
        }
        SVG.extend(SVG.PathArray, { morph: function(e4) {
          for (var n4 = this.value, i3 = this.parse(e4), r2 = 0, o2 = 0, s2 = false, l2 = false; r2 !== false || o2 !== false; ) {
            var c2;
            s2 = a2(n4, r2 !== false && r2 + 1), l2 = a2(i3, o2 !== false && o2 + 1), r2 === false && (r2 = (c2 = new SVG.PathArray(d2.start).bbox()).height == 0 || c2.width == 0 ? n4.push(n4[0]) - 1 : n4.push(["M", c2.x + c2.width / 2, c2.y + c2.height / 2]) - 1), o2 === false && (o2 = (c2 = new SVG.PathArray(d2.dest).bbox()).height == 0 || c2.width == 0 ? i3.push(i3[0]) - 1 : i3.push(["M", c2.x + c2.width / 2, c2.y + c2.height / 2]) - 1);
            var d2 = t3(n4, r2, s2, i3, o2, l2);
            n4 = n4.slice(0, r2).concat(d2.start, s2 === false ? [] : n4.slice(s2)), i3 = i3.slice(0, o2).concat(d2.dest, l2 === false ? [] : i3.slice(l2)), r2 = s2 !== false && r2 + d2.start.length, o2 = l2 !== false && o2 + d2.dest.length;
          }
          return this.value = n4, this.destination = new SVG.PathArray(), this.destination.value = i3, this;
        } });
      }(), function() {
        function t3(t4) {
          t4.remember("_draggable", this), this.el = t4;
        }
        t3.prototype.init = function(t4, e3) {
          var n3 = this;
          this.constraint = t4, this.value = e3, this.el.on("mousedown.drag", function(t5) {
            n3.start(t5);
          }), this.el.on("touchstart.drag", function(t5) {
            n3.start(t5);
          });
        }, t3.prototype.transformPoint = function(t4, e3) {
          var n3 = (t4 = t4 || window.event).changedTouches && t4.changedTouches[0] || t4;
          return this.p.x = n3.clientX - (e3 || 0), this.p.y = n3.clientY, this.p.matrixTransform(this.m);
        }, t3.prototype.getBBox = function() {
          var t4 = this.el.bbox();
          return this.el instanceof SVG.Nested && (t4 = this.el.rbox()), (this.el instanceof SVG.G || this.el instanceof SVG.Use || this.el instanceof SVG.Nested) && (t4.x = this.el.x(), t4.y = this.el.y()), t4;
        }, t3.prototype.start = function(t4) {
          if (t4.type != "click" && t4.type != "mousedown" && t4.type != "mousemove" || (t4.which || t4.buttons) == 1) {
            var e3 = this;
            if (this.el.fire("beforedrag", { event: t4, handler: this }), !this.el.event().defaultPrevented) {
              t4.preventDefault(), t4.stopPropagation(), this.parent = this.parent || this.el.parent(SVG.Nested) || this.el.parent(SVG.Doc), this.p = this.parent.node.createSVGPoint(), this.m = this.el.node.getScreenCTM().inverse();
              var n3, i2 = this.getBBox();
              if (this.el instanceof SVG.Text)
                switch (n3 = this.el.node.getComputedTextLength(), this.el.attr("text-anchor")) {
                  case "middle":
                    n3 /= 2;
                    break;
                  case "start":
                    n3 = 0;
                }
              this.startPoints = { point: this.transformPoint(t4, n3), box: i2, transform: this.el.transform() }, SVG.on(window, "mousemove.drag", function(t5) {
                e3.drag(t5);
              }), SVG.on(window, "touchmove.drag", function(t5) {
                e3.drag(t5);
              }), SVG.on(window, "mouseup.drag", function(t5) {
                e3.end(t5);
              }), SVG.on(window, "touchend.drag", function(t5) {
                e3.end(t5);
              }), this.el.fire("dragstart", { event: t4, p: this.startPoints.point, m: this.m, handler: this });
            }
          }
        }, t3.prototype.drag = function(t4) {
          var e3 = this.getBBox(), n3 = this.transformPoint(t4), i2 = this.startPoints.box.x + n3.x - this.startPoints.point.x, a2 = this.startPoints.box.y + n3.y - this.startPoints.point.y, r2 = this.constraint, o2 = n3.x - this.startPoints.point.x, s2 = n3.y - this.startPoints.point.y;
          if (this.el.fire("dragmove", { event: t4, p: n3, m: this.m, handler: this }), this.el.event().defaultPrevented)
            return n3;
          if (typeof r2 == "function") {
            var l2 = r2.call(this.el, i2, a2, this.m);
            typeof l2 == "boolean" && (l2 = { x: l2, y: l2 }), l2.x === true ? this.el.x(i2) : l2.x !== false && this.el.x(l2.x), l2.y === true ? this.el.y(a2) : l2.y !== false && this.el.y(l2.y);
          } else
            typeof r2 == "object" && (r2.minX != null && i2 < r2.minX ? o2 = (i2 = r2.minX) - this.startPoints.box.x : r2.maxX != null && i2 > r2.maxX - e3.width && (o2 = (i2 = r2.maxX - e3.width) - this.startPoints.box.x), r2.minY != null && a2 < r2.minY ? s2 = (a2 = r2.minY) - this.startPoints.box.y : r2.maxY != null && a2 > r2.maxY - e3.height && (s2 = (a2 = r2.maxY - e3.height) - this.startPoints.box.y), r2.snapToGrid != null && (i2 -= i2 % r2.snapToGrid, a2 -= a2 % r2.snapToGrid, o2 -= o2 % r2.snapToGrid, s2 -= s2 % r2.snapToGrid), this.el instanceof SVG.G ? this.el.matrix(this.startPoints.transform).transform({ x: o2, y: s2 }, true) : this.el.move(i2, a2));
          return n3;
        }, t3.prototype.end = function(t4) {
          var e3 = this.drag(t4);
          this.el.fire("dragend", { event: t4, p: e3, m: this.m, handler: this }), SVG.off(window, "mousemove.drag"), SVG.off(window, "touchmove.drag"), SVG.off(window, "mouseup.drag"), SVG.off(window, "touchend.drag");
        }, SVG.extend(SVG.Element, { draggable: function(e3, n3) {
          typeof e3 != "function" && typeof e3 != "object" || (n3 = e3, e3 = true);
          var i2 = this.remember("_draggable") || new t3(this);
          return (e3 = e3 === void 0 || e3) ? i2.init(n3 || {}, e3) : (this.off("mousedown.drag"), this.off("touchstart.drag")), this;
        } });
      }.call(void 0), function() {
        function t3(t4) {
          this.el = t4, t4.remember("_selectHandler", this), this.pointSelection = { isSelected: false }, this.rectSelection = { isSelected: false }, this.pointsList = { lt: [0, 0], rt: ["width", 0], rb: ["width", "height"], lb: [0, "height"], t: ["width", 0], r: ["width", "height"], b: ["width", "height"], l: [0, "height"] }, this.pointCoord = function(t5, e3, n3) {
            var i2 = typeof t5 != "string" ? t5 : e3[t5];
            return n3 ? i2 / 2 : i2;
          }, this.pointCoords = function(t5, e3) {
            var n3 = this.pointsList[t5];
            return { x: this.pointCoord(n3[0], e3, t5 === "t" || t5 === "b"), y: this.pointCoord(n3[1], e3, t5 === "r" || t5 === "l") };
          };
        }
        t3.prototype.init = function(t4, e3) {
          var n3 = this.el.bbox();
          this.options = {};
          var i2 = this.el.selectize.defaults.points;
          for (var a2 in this.el.selectize.defaults)
            this.options[a2] = this.el.selectize.defaults[a2], e3[a2] !== void 0 && (this.options[a2] = e3[a2]);
          var r2 = ["points", "pointsExclude"];
          for (var a2 in r2) {
            var o2 = this.options[r2[a2]];
            typeof o2 == "string" ? o2 = o2.length > 0 ? o2.split(/\s*,\s*/i) : [] : typeof o2 == "boolean" && r2[a2] === "points" && (o2 = o2 ? i2 : []), this.options[r2[a2]] = o2;
          }
          this.options.points = [i2, this.options.points].reduce(function(t5, e4) {
            return t5.filter(function(t6) {
              return e4.indexOf(t6) > -1;
            });
          }), this.options.points = [this.options.points, this.options.pointsExclude].reduce(function(t5, e4) {
            return t5.filter(function(t6) {
              return e4.indexOf(t6) < 0;
            });
          }), this.parent = this.el.parent(), this.nested = this.nested || this.parent.group(), this.nested.matrix(new SVG.Matrix(this.el).translate(n3.x, n3.y)), this.options.deepSelect && ["line", "polyline", "polygon"].indexOf(this.el.type) !== -1 ? this.selectPoints(t4) : this.selectRect(t4), this.observe(), this.cleanup();
        }, t3.prototype.selectPoints = function(t4) {
          return this.pointSelection.isSelected = t4, this.pointSelection.set || (this.pointSelection.set = this.parent.set(), this.drawPoints()), this;
        }, t3.prototype.getPointArray = function() {
          var t4 = this.el.bbox();
          return this.el.array().valueOf().map(function(e3) {
            return [e3[0] - t4.x, e3[1] - t4.y];
          });
        }, t3.prototype.drawPoints = function() {
          for (var t4 = this, e3 = this.getPointArray(), n3 = 0, i2 = e3.length; n3 < i2; ++n3) {
            var a2 = function(e4) {
              return function(n4) {
                (n4 = n4 || window.event).preventDefault ? n4.preventDefault() : n4.returnValue = false, n4.stopPropagation();
                var i3 = n4.pageX || n4.touches[0].pageX, a3 = n4.pageY || n4.touches[0].pageY;
                t4.el.fire("point", { x: i3, y: a3, i: e4, event: n4 });
              };
            }(n3), r2 = this.drawPoint(e3[n3][0], e3[n3][1]).addClass(this.options.classPoints).addClass(this.options.classPoints + "_point").on("touchstart", a2).on("mousedown", a2);
            this.pointSelection.set.add(r2);
          }
        }, t3.prototype.drawPoint = function(t4, e3) {
          var n3 = this.options.pointType;
          switch (n3) {
            case "circle":
              return this.drawCircle(t4, e3);
            case "rect":
              return this.drawRect(t4, e3);
            default:
              if (typeof n3 == "function")
                return n3.call(this, t4, e3);
              throw new Error("Unknown " + n3 + " point type!");
          }
        }, t3.prototype.drawCircle = function(t4, e3) {
          return this.nested.circle(this.options.pointSize).center(t4, e3);
        }, t3.prototype.drawRect = function(t4, e3) {
          return this.nested.rect(this.options.pointSize, this.options.pointSize).center(t4, e3);
        }, t3.prototype.updatePointSelection = function() {
          var t4 = this.getPointArray();
          this.pointSelection.set.each(function(e3) {
            this.cx() === t4[e3][0] && this.cy() === t4[e3][1] || this.center(t4[e3][0], t4[e3][1]);
          });
        }, t3.prototype.updateRectSelection = function() {
          var t4 = this, e3 = this.el.bbox();
          if (this.rectSelection.set.get(0).attr({ width: e3.width, height: e3.height }), this.options.points.length && this.options.points.map(function(n4, i2) {
            var a2 = t4.pointCoords(n4, e3);
            t4.rectSelection.set.get(i2 + 1).center(a2.x, a2.y);
          }), this.options.rotationPoint) {
            var n3 = this.rectSelection.set.length();
            this.rectSelection.set.get(n3 - 1).center(e3.width / 2, 20);
          }
        }, t3.prototype.selectRect = function(t4) {
          var e3 = this, n3 = this.el.bbox();
          function i2(t5) {
            return function(n4) {
              (n4 = n4 || window.event).preventDefault ? n4.preventDefault() : n4.returnValue = false, n4.stopPropagation();
              var i3 = n4.pageX || n4.touches[0].pageX, a3 = n4.pageY || n4.touches[0].pageY;
              e3.el.fire(t5, { x: i3, y: a3, event: n4 });
            };
          }
          if (this.rectSelection.isSelected = t4, this.rectSelection.set = this.rectSelection.set || this.parent.set(), this.rectSelection.set.get(0) || this.rectSelection.set.add(this.nested.rect(n3.width, n3.height).addClass(this.options.classRect)), this.options.points.length && this.rectSelection.set.length() < 2 && (this.options.points.map(function(t5, a3) {
            var r3 = e3.pointCoords(t5, n3), o2 = e3.drawPoint(r3.x, r3.y).attr("class", e3.options.classPoints + "_" + t5).on("mousedown", i2(t5)).on("touchstart", i2(t5));
            e3.rectSelection.set.add(o2);
          }), this.rectSelection.set.each(function() {
            this.addClass(e3.options.classPoints);
          })), this.options.rotationPoint && (this.options.points && !this.rectSelection.set.get(9) || !this.options.points && !this.rectSelection.set.get(1))) {
            var a2 = function(t5) {
              (t5 = t5 || window.event).preventDefault ? t5.preventDefault() : t5.returnValue = false, t5.stopPropagation();
              var n4 = t5.pageX || t5.touches[0].pageX, i3 = t5.pageY || t5.touches[0].pageY;
              e3.el.fire("rot", { x: n4, y: i3, event: t5 });
            }, r2 = this.drawPoint(n3.width / 2, 20).attr("class", this.options.classPoints + "_rot").on("touchstart", a2).on("mousedown", a2);
            this.rectSelection.set.add(r2);
          }
        }, t3.prototype.handler = function() {
          var t4 = this.el.bbox();
          this.nested.matrix(new SVG.Matrix(this.el).translate(t4.x, t4.y)), this.rectSelection.isSelected && this.updateRectSelection(), this.pointSelection.isSelected && this.updatePointSelection();
        }, t3.prototype.observe = function() {
          var t4 = this;
          if (MutationObserver)
            if (this.rectSelection.isSelected || this.pointSelection.isSelected)
              this.observerInst = this.observerInst || new MutationObserver(function() {
                t4.handler();
              }), this.observerInst.observe(this.el.node, { attributes: true });
            else
              try {
                this.observerInst.disconnect(), delete this.observerInst;
              } catch (t5) {
              }
          else
            this.el.off("DOMAttrModified.select"), (this.rectSelection.isSelected || this.pointSelection.isSelected) && this.el.on("DOMAttrModified.select", function() {
              t4.handler();
            });
        }, t3.prototype.cleanup = function() {
          !this.rectSelection.isSelected && this.rectSelection.set && (this.rectSelection.set.each(function() {
            this.remove();
          }), this.rectSelection.set.clear(), delete this.rectSelection.set), !this.pointSelection.isSelected && this.pointSelection.set && (this.pointSelection.set.each(function() {
            this.remove();
          }), this.pointSelection.set.clear(), delete this.pointSelection.set), this.pointSelection.isSelected || this.rectSelection.isSelected || (this.nested.remove(), delete this.nested);
        }, SVG.extend(SVG.Element, { selectize: function(e3, n3) {
          return typeof e3 == "object" && (n3 = e3, e3 = true), (this.remember("_selectHandler") || new t3(this)).init(e3 === void 0 || e3, n3 || {}), this;
        } }), SVG.Element.prototype.selectize.defaults = { points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"], pointsExclude: [], classRect: "svg_select_boundingRect", classPoints: "svg_select_points", pointSize: 7, rotationPoint: true, deepSelect: false, pointType: "circle" };
      }(), function() {
        (function() {
          function t3(t4) {
            t4.remember("_resizeHandler", this), this.el = t4, this.parameters = {}, this.lastUpdateCall = null, this.p = t4.doc().node.createSVGPoint();
          }
          t3.prototype.transformPoint = function(t4, e3, n3) {
            return this.p.x = t4 - (this.offset.x - window.pageXOffset), this.p.y = e3 - (this.offset.y - window.pageYOffset), this.p.matrixTransform(n3 || this.m);
          }, t3.prototype._extractPosition = function(t4) {
            return { x: t4.clientX != null ? t4.clientX : t4.touches[0].clientX, y: t4.clientY != null ? t4.clientY : t4.touches[0].clientY };
          }, t3.prototype.init = function(t4) {
            var e3 = this;
            if (this.stop(), t4 !== "stop") {
              for (var n3 in this.options = {}, this.el.resize.defaults)
                this.options[n3] = this.el.resize.defaults[n3], t4[n3] !== void 0 && (this.options[n3] = t4[n3]);
              this.el.on("lt.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("rt.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("rb.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("lb.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("t.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("r.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("b.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("l.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("rot.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.el.on("point.resize", function(t5) {
                e3.resize(t5 || window.event);
              }), this.update();
            }
          }, t3.prototype.stop = function() {
            return this.el.off("lt.resize"), this.el.off("rt.resize"), this.el.off("rb.resize"), this.el.off("lb.resize"), this.el.off("t.resize"), this.el.off("r.resize"), this.el.off("b.resize"), this.el.off("l.resize"), this.el.off("rot.resize"), this.el.off("point.resize"), this;
          }, t3.prototype.resize = function(t4) {
            var e3 = this;
            this.m = this.el.node.getScreenCTM().inverse(), this.offset = { x: window.pageXOffset, y: window.pageYOffset };
            var n3 = this._extractPosition(t4.detail.event);
            if (this.parameters = { type: this.el.type, p: this.transformPoint(n3.x, n3.y), x: t4.detail.x, y: t4.detail.y, box: this.el.bbox(), rotation: this.el.transform().rotation }, this.el.type === "text" && (this.parameters.fontSize = this.el.attr()["font-size"]), t4.detail.i !== void 0) {
              var i2 = this.el.array().valueOf();
              this.parameters.i = t4.detail.i, this.parameters.pointCoords = [i2[t4.detail.i][0], i2[t4.detail.i][1]];
            }
            switch (t4.type) {
              case "lt":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4);
                  if (this.parameters.box.width - n4[0] > 0 && this.parameters.box.height - n4[1] > 0) {
                    if (this.parameters.type === "text")
                      return this.el.move(this.parameters.box.x + n4[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - n4[0]);
                    n4 = this.checkAspectRatio(n4), this.el.move(this.parameters.box.x + n4[0], this.parameters.box.y + n4[1]).size(this.parameters.box.width - n4[0], this.parameters.box.height - n4[1]);
                  }
                };
                break;
              case "rt":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4, 2);
                  if (this.parameters.box.width + n4[0] > 0 && this.parameters.box.height - n4[1] > 0) {
                    if (this.parameters.type === "text")
                      return this.el.move(this.parameters.box.x - n4[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + n4[0]);
                    n4 = this.checkAspectRatio(n4, true), this.el.move(this.parameters.box.x, this.parameters.box.y + n4[1]).size(this.parameters.box.width + n4[0], this.parameters.box.height - n4[1]);
                  }
                };
                break;
              case "rb":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4, 0);
                  if (this.parameters.box.width + n4[0] > 0 && this.parameters.box.height + n4[1] > 0) {
                    if (this.parameters.type === "text")
                      return this.el.move(this.parameters.box.x - n4[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize + n4[0]);
                    n4 = this.checkAspectRatio(n4), this.el.move(this.parameters.box.x, this.parameters.box.y).size(this.parameters.box.width + n4[0], this.parameters.box.height + n4[1]);
                  }
                };
                break;
              case "lb":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4, 1);
                  if (this.parameters.box.width - n4[0] > 0 && this.parameters.box.height + n4[1] > 0) {
                    if (this.parameters.type === "text")
                      return this.el.move(this.parameters.box.x + n4[0], this.parameters.box.y), void this.el.attr("font-size", this.parameters.fontSize - n4[0]);
                    n4 = this.checkAspectRatio(n4, true), this.el.move(this.parameters.box.x + n4[0], this.parameters.box.y).size(this.parameters.box.width - n4[0], this.parameters.box.height + n4[1]);
                  }
                };
                break;
              case "t":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4, 2);
                  if (this.parameters.box.height - n4[1] > 0) {
                    if (this.parameters.type === "text")
                      return;
                    this.el.move(this.parameters.box.x, this.parameters.box.y + n4[1]).height(this.parameters.box.height - n4[1]);
                  }
                };
                break;
              case "r":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4, 0);
                  if (this.parameters.box.width + n4[0] > 0) {
                    if (this.parameters.type === "text")
                      return;
                    this.el.move(this.parameters.box.x, this.parameters.box.y).width(this.parameters.box.width + n4[0]);
                  }
                };
                break;
              case "b":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4, 0);
                  if (this.parameters.box.height + n4[1] > 0) {
                    if (this.parameters.type === "text")
                      return;
                    this.el.move(this.parameters.box.x, this.parameters.box.y).height(this.parameters.box.height + n4[1]);
                  }
                };
                break;
              case "l":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4, 1);
                  if (this.parameters.box.width - n4[0] > 0) {
                    if (this.parameters.type === "text")
                      return;
                    this.el.move(this.parameters.box.x + n4[0], this.parameters.box.y).width(this.parameters.box.width - n4[0]);
                  }
                };
                break;
              case "rot":
                this.calc = function(t5, e4) {
                  var n4 = t5 + this.parameters.p.x, i3 = e4 + this.parameters.p.y, a2 = Math.atan2(this.parameters.p.y - this.parameters.box.y - this.parameters.box.height / 2, this.parameters.p.x - this.parameters.box.x - this.parameters.box.width / 2), r2 = Math.atan2(i3 - this.parameters.box.y - this.parameters.box.height / 2, n4 - this.parameters.box.x - this.parameters.box.width / 2), o2 = this.parameters.rotation + 180 * (r2 - a2) / Math.PI + this.options.snapToAngle / 2;
                  this.el.center(this.parameters.box.cx, this.parameters.box.cy).rotate(o2 - o2 % this.options.snapToAngle, this.parameters.box.cx, this.parameters.box.cy);
                };
                break;
              case "point":
                this.calc = function(t5, e4) {
                  var n4 = this.snapToGrid(t5, e4, this.parameters.pointCoords[0], this.parameters.pointCoords[1]), i3 = this.el.array().valueOf();
                  i3[this.parameters.i][0] = this.parameters.pointCoords[0] + n4[0], i3[this.parameters.i][1] = this.parameters.pointCoords[1] + n4[1], this.el.plot(i3);
                };
            }
            this.el.fire("resizestart", { dx: this.parameters.x, dy: this.parameters.y, event: t4 }), SVG.on(window, "touchmove.resize", function(t5) {
              e3.update(t5 || window.event);
            }), SVG.on(window, "touchend.resize", function() {
              e3.done();
            }), SVG.on(window, "mousemove.resize", function(t5) {
              e3.update(t5 || window.event);
            }), SVG.on(window, "mouseup.resize", function() {
              e3.done();
            });
          }, t3.prototype.update = function(t4) {
            if (t4) {
              var e3 = this._extractPosition(t4), n3 = this.transformPoint(e3.x, e3.y), i2 = n3.x - this.parameters.p.x, a2 = n3.y - this.parameters.p.y;
              this.lastUpdateCall = [i2, a2], this.calc(i2, a2), this.el.fire("resizing", { dx: i2, dy: a2, event: t4 });
            } else
              this.lastUpdateCall && this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
          }, t3.prototype.done = function() {
            this.lastUpdateCall = null, SVG.off(window, "mousemove.resize"), SVG.off(window, "mouseup.resize"), SVG.off(window, "touchmove.resize"), SVG.off(window, "touchend.resize"), this.el.fire("resizedone");
          }, t3.prototype.snapToGrid = function(t4, e3, n3, i2) {
            var a2;
            return i2 !== void 0 ? a2 = [(n3 + t4) % this.options.snapToGrid, (i2 + e3) % this.options.snapToGrid] : (n3 = n3 == null ? 3 : n3, a2 = [(this.parameters.box.x + t4 + (1 & n3 ? 0 : this.parameters.box.width)) % this.options.snapToGrid, (this.parameters.box.y + e3 + (2 & n3 ? 0 : this.parameters.box.height)) % this.options.snapToGrid]), t4 < 0 && (a2[0] -= this.options.snapToGrid), e3 < 0 && (a2[1] -= this.options.snapToGrid), t4 -= Math.abs(a2[0]) < this.options.snapToGrid / 2 ? a2[0] : a2[0] - (t4 < 0 ? -this.options.snapToGrid : this.options.snapToGrid), e3 -= Math.abs(a2[1]) < this.options.snapToGrid / 2 ? a2[1] : a2[1] - (e3 < 0 ? -this.options.snapToGrid : this.options.snapToGrid), this.constraintToBox(t4, e3, n3, i2);
          }, t3.prototype.constraintToBox = function(t4, e3, n3, i2) {
            var a2, r2, o2 = this.options.constraint || {};
            return i2 !== void 0 ? (a2 = n3, r2 = i2) : (a2 = this.parameters.box.x + (1 & n3 ? 0 : this.parameters.box.width), r2 = this.parameters.box.y + (2 & n3 ? 0 : this.parameters.box.height)), o2.minX !== void 0 && a2 + t4 < o2.minX && (t4 = o2.minX - a2), o2.maxX !== void 0 && a2 + t4 > o2.maxX && (t4 = o2.maxX - a2), o2.minY !== void 0 && r2 + e3 < o2.minY && (e3 = o2.minY - r2), o2.maxY !== void 0 && r2 + e3 > o2.maxY && (e3 = o2.maxY - r2), [t4, e3];
          }, t3.prototype.checkAspectRatio = function(t4, e3) {
            if (!this.options.saveAspectRatio)
              return t4;
            var n3 = t4.slice(), i2 = this.parameters.box.width / this.parameters.box.height, a2 = this.parameters.box.width + t4[0], r2 = this.parameters.box.height - t4[1], o2 = a2 / r2;
            return o2 < i2 ? (n3[1] = a2 / i2 - this.parameters.box.height, e3 && (n3[1] = -n3[1])) : o2 > i2 && (n3[0] = this.parameters.box.width - r2 * i2, e3 && (n3[0] = -n3[0])), n3;
          }, SVG.extend(SVG.Element, { resize: function(e3) {
            return (this.remember("_resizeHandler") || new t3(this)).init(e3 || {}), this;
          } }), SVG.Element.prototype.resize.defaults = { snapToAngle: 0.1, snapToGrid: 1, constraint: {}, saveAspectRatio: false };
        }).call(this);
      }(), function(t3, e3) {
        e3 === void 0 && (e3 = {});
        var n3 = e3.insertAt;
        if (typeof document != "undefined") {
          var i2 = document.head || document.getElementsByTagName("head")[0], a2 = document.createElement("style");
          a2.type = "text/css", n3 === "top" && i2.firstChild ? i2.insertBefore(a2, i2.firstChild) : i2.appendChild(a2), a2.styleSheet ? a2.styleSheet.cssText = t3 : a2.appendChild(document.createTextNode(t3));
        }
      }('.apexcharts-canvas {\n  position: relative;\n  user-select: none;\n  /* cannot give overflow: hidden as it will crop tooltips which overflow outside chart area */\n}\n\n\n/* scrollbar is not visible by default for legend, hence forcing the visibility */\n.apexcharts-canvas ::-webkit-scrollbar {\n  -webkit-appearance: none;\n  width: 6px;\n}\n\n.apexcharts-canvas ::-webkit-scrollbar-thumb {\n  border-radius: 4px;\n  background-color: rgba(0, 0, 0, .5);\n  box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n  -webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);\n}\n\n\n.apexcharts-inner {\n  position: relative;\n}\n\n.apexcharts-text tspan {\n  font-family: inherit;\n}\n\n.legend-mouseover-inactive {\n  transition: 0.15s ease all;\n  opacity: 0.20;\n}\n\n.apexcharts-series-collapsed {\n  opacity: 0;\n}\n\n.apexcharts-tooltip {\n  border-radius: 5px;\n  box-shadow: 2px 2px 6px -4px #999;\n  cursor: default;\n  font-size: 14px;\n  left: 62px;\n  opacity: 0;\n  pointer-events: none;\n  position: absolute;\n  top: 20px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  white-space: nowrap;\n  z-index: 12;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light {\n  border: 1px solid #e3e3e3;\n  background: rgba(255, 255, 255, 0.96);\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark {\n  color: #fff;\n  background: rgba(30, 30, 30, 0.8);\n}\n\n.apexcharts-tooltip * {\n  font-family: inherit;\n}\n\n\n.apexcharts-tooltip-title {\n  padding: 6px;\n  font-size: 15px;\n  margin-bottom: 4px;\n}\n\n.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {\n  background: #ECEFF1;\n  border-bottom: 1px solid #ddd;\n}\n\n.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {\n  background: rgba(0, 0, 0, 0.7);\n  border-bottom: 1px solid #333;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  display: inline-block;\n  font-weight: 600;\n  margin-left: 5px;\n}\n\n.apexcharts-tooltip-text-y-label:empty,\n.apexcharts-tooltip-text-y-value:empty,\n.apexcharts-tooltip-text-goals-label:empty,\n.apexcharts-tooltip-text-goals-value:empty,\n.apexcharts-tooltip-text-z-value:empty {\n  display: none;\n}\n\n.apexcharts-tooltip-text-y-value,\n.apexcharts-tooltip-text-goals-value,\n.apexcharts-tooltip-text-z-value {\n  font-weight: 600;\n}\n\n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-goals-group, \n.apexcharts-tooltip-text-goals-label, \n.apexcharts-tooltip-text-goals-value {\n  display: flex;\n}\n.apexcharts-tooltip-text-goals-label:not(:empty),\n.apexcharts-tooltip-text-goals-value:not(:empty) {\n  margin-top: -6px;\n}\n\n.apexcharts-tooltip-marker {\n  width: 12px;\n  height: 12px;\n  position: relative;\n  top: 0px;\n  margin-right: 10px;\n  border-radius: 50%;\n}\n\n.apexcharts-tooltip-series-group {\n  padding: 0 10px;\n  display: none;\n  text-align: left;\n  justify-content: left;\n  align-items: center;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {\n  opacity: 1;\n}\n\n.apexcharts-tooltip-series-group.apexcharts-active,\n.apexcharts-tooltip-series-group:last-child {\n  padding-bottom: 4px;\n}\n\n.apexcharts-tooltip-series-group-hidden {\n  opacity: 0;\n  height: 0;\n  line-height: 0;\n  padding: 0 !important;\n}\n\n.apexcharts-tooltip-y-group {\n  padding: 6px 0 5px;\n}\n\n.apexcharts-tooltip-box, .apexcharts-custom-tooltip {\n  padding: 4px 8px;\n}\n\n.apexcharts-tooltip-boxPlot {\n  display: flex;\n  flex-direction: column-reverse;\n}\n\n.apexcharts-tooltip-box>div {\n  margin: 4px 0;\n}\n\n.apexcharts-tooltip-box span.value {\n  font-weight: bold;\n}\n\n.apexcharts-tooltip-rangebar {\n  padding: 5px 8px;\n}\n\n.apexcharts-tooltip-rangebar .category {\n  font-weight: 600;\n  color: #777;\n}\n\n.apexcharts-tooltip-rangebar .series-name {\n  font-weight: bold;\n  display: block;\n  margin-bottom: 5px;\n}\n\n.apexcharts-xaxistooltip {\n  opacity: 0;\n  padding: 9px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-xaxistooltip:after,\n.apexcharts-xaxistooltip:before {\n  left: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-xaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-left: -6px;\n}\n\n.apexcharts-xaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-left: -7px;\n}\n\n.apexcharts-xaxistooltip-bottom:after,\n.apexcharts-xaxistooltip-bottom:before {\n  bottom: 100%;\n}\n\n.apexcharts-xaxistooltip-top:after,\n.apexcharts-xaxistooltip-top:before {\n  top: 100%;\n}\n\n.apexcharts-xaxistooltip-bottom:after {\n  border-bottom-color: #ECEFF1;\n}\n\n.apexcharts-xaxistooltip-bottom:before {\n  border-bottom-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {\n  border-bottom-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top:after {\n  border-top-color: #ECEFF1\n}\n\n.apexcharts-xaxistooltip-top:before {\n  border-top-color: #90A4AE;\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {\n  border-top-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-xaxistooltip.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-yaxistooltip {\n  opacity: 0;\n  padding: 4px 10px;\n  pointer-events: none;\n  color: #373d3f;\n  font-size: 13px;\n  text-align: center;\n  border-radius: 2px;\n  position: absolute;\n  z-index: 10;\n  background: #ECEFF1;\n  border: 1px solid #90A4AE;\n}\n\n.apexcharts-yaxistooltip.apexcharts-theme-dark {\n  background: rgba(0, 0, 0, 0.7);\n  border: 1px solid rgba(0, 0, 0, 0.5);\n  color: #fff;\n}\n\n.apexcharts-yaxistooltip:after,\n.apexcharts-yaxistooltip:before {\n  top: 50%;\n  border: solid transparent;\n  content: " ";\n  height: 0;\n  width: 0;\n  position: absolute;\n  pointer-events: none;\n}\n\n.apexcharts-yaxistooltip:after {\n  border-color: rgba(236, 239, 241, 0);\n  border-width: 6px;\n  margin-top: -6px;\n}\n\n.apexcharts-yaxistooltip:before {\n  border-color: rgba(144, 164, 174, 0);\n  border-width: 7px;\n  margin-top: -7px;\n}\n\n.apexcharts-yaxistooltip-left:after,\n.apexcharts-yaxistooltip-left:before {\n  left: 100%;\n}\n\n.apexcharts-yaxistooltip-right:after,\n.apexcharts-yaxistooltip-right:before {\n  right: 100%;\n}\n\n.apexcharts-yaxistooltip-left:after {\n  border-left-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-left:before {\n  border-left-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {\n  border-left-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right:after {\n  border-right-color: #ECEFF1;\n}\n\n.apexcharts-yaxistooltip-right:before {\n  border-right-color: #90A4AE;\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {\n  border-right-color: rgba(0, 0, 0, 0.5);\n}\n\n.apexcharts-yaxistooltip.apexcharts-active {\n  opacity: 1;\n}\n\n.apexcharts-yaxistooltip-hidden {\n  display: none;\n}\n\n.apexcharts-xcrosshairs,\n.apexcharts-ycrosshairs {\n  pointer-events: none;\n  opacity: 0;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-xcrosshairs.apexcharts-active,\n.apexcharts-ycrosshairs.apexcharts-active {\n  opacity: 1;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-ycrosshairs-hidden {\n  opacity: 0;\n}\n\n.apexcharts-selection-rect {\n  cursor: move;\n}\n\n.svg_select_boundingRect, .svg_select_points_rot {\n  pointer-events: none;\n  opacity: 0;\n  visibility: hidden;\n}\n.apexcharts-selection-rect + g .svg_select_boundingRect,\n.apexcharts-selection-rect + g .svg_select_points_rot {\n  opacity: 0;\n  visibility: hidden;\n}\n\n.apexcharts-selection-rect + g .svg_select_points_l,\n.apexcharts-selection-rect + g .svg_select_points_r {\n  cursor: ew-resize;\n  opacity: 1;\n  visibility: visible;\n}\n\n.svg_select_points {\n  fill: #efefef;\n  stroke: #333;\n  rx: 2;\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-zoom {\n  cursor: crosshair\n}\n\n.apexcharts-svg.apexcharts-zoomable.hovering-pan {\n  cursor: move\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon,\n.apexcharts-reset-icon,\n.apexcharts-pan-icon,\n.apexcharts-selection-icon,\n.apexcharts-menu-icon,\n.apexcharts-toolbar-custom-icon {\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n  line-height: 24px;\n  color: #6E8192;\n  text-align: center;\n}\n\n.apexcharts-zoom-icon svg,\n.apexcharts-zoomin-icon svg,\n.apexcharts-zoomout-icon svg,\n.apexcharts-reset-icon svg,\n.apexcharts-menu-icon svg {\n  fill: #6E8192;\n}\n\n.apexcharts-selection-icon svg {\n  fill: #444;\n  transform: scale(0.76)\n}\n\n.apexcharts-theme-dark .apexcharts-zoom-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomin-icon svg,\n.apexcharts-theme-dark .apexcharts-zoomout-icon svg,\n.apexcharts-theme-dark .apexcharts-reset-icon svg,\n.apexcharts-theme-dark .apexcharts-pan-icon svg,\n.apexcharts-theme-dark .apexcharts-selection-icon svg,\n.apexcharts-theme-dark .apexcharts-menu-icon svg,\n.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg {\n  fill: #f3f4f5;\n}\n\n.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,\n.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg {\n  fill: #008FFB;\n}\n\n.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,\n.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,\n.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg,\n.apexcharts-theme-light .apexcharts-reset-icon:hover svg,\n.apexcharts-theme-light .apexcharts-menu-icon:hover svg {\n  fill: #333;\n}\n\n.apexcharts-selection-icon,\n.apexcharts-menu-icon {\n  position: relative;\n}\n\n.apexcharts-reset-icon {\n  margin-left: 5px;\n}\n\n.apexcharts-zoom-icon,\n.apexcharts-reset-icon,\n.apexcharts-menu-icon {\n  transform: scale(0.85);\n}\n\n.apexcharts-zoomin-icon,\n.apexcharts-zoomout-icon {\n  transform: scale(0.7)\n}\n\n.apexcharts-zoomout-icon {\n  margin-right: 3px;\n}\n\n.apexcharts-pan-icon {\n  transform: scale(0.62);\n  position: relative;\n  left: 1px;\n  top: 0px;\n}\n\n.apexcharts-pan-icon svg {\n  fill: #fff;\n  stroke: #6E8192;\n  stroke-width: 2;\n}\n\n.apexcharts-pan-icon.apexcharts-selected svg {\n  stroke: #008FFB;\n}\n\n.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {\n  stroke: #333;\n}\n\n.apexcharts-toolbar {\n  position: absolute;\n  z-index: 11;\n  max-width: 176px;\n  text-align: right;\n  border-radius: 3px;\n  padding: 0px 6px 2px 6px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.apexcharts-menu {\n  background: #fff;\n  position: absolute;\n  top: 100%;\n  border: 1px solid #ddd;\n  border-radius: 3px;\n  padding: 3px;\n  right: 10px;\n  opacity: 0;\n  min-width: 110px;\n  transition: 0.15s ease all;\n  pointer-events: none;\n}\n\n.apexcharts-menu.apexcharts-menu-open {\n  opacity: 1;\n  pointer-events: all;\n  transition: 0.15s ease all;\n}\n\n.apexcharts-menu-item {\n  padding: 6px 7px;\n  font-size: 12px;\n  cursor: pointer;\n}\n\n.apexcharts-theme-light .apexcharts-menu-item:hover {\n  background: #eee;\n}\n\n.apexcharts-theme-dark .apexcharts-menu {\n  background: rgba(0, 0, 0, 0.7);\n  color: #fff;\n}\n\n@media screen and (min-width: 768px) {\n  .apexcharts-canvas:hover .apexcharts-toolbar {\n    opacity: 1;\n  }\n}\n\n.apexcharts-datalabel.apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-pie-label,\n.apexcharts-datalabels,\n.apexcharts-datalabel,\n.apexcharts-datalabel-label,\n.apexcharts-datalabel-value {\n  cursor: default;\n  pointer-events: none;\n}\n\n.apexcharts-pie-label-delay {\n  opacity: 0;\n  animation-name: opaque;\n  animation-duration: 0.3s;\n  animation-fill-mode: forwards;\n  animation-timing-function: ease;\n}\n\n.apexcharts-canvas .apexcharts-element-hidden {\n  opacity: 0;\n}\n\n.apexcharts-hide .apexcharts-series-points {\n  opacity: 0;\n}\n\n.apexcharts-gridline,\n.apexcharts-annotation-rect,\n.apexcharts-tooltip .apexcharts-marker,\n.apexcharts-area-series .apexcharts-area,\n.apexcharts-line,\n.apexcharts-zoom-rect,\n.apexcharts-toolbar svg,\n.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,\n.apexcharts-radar-series path,\n.apexcharts-radar-series polygon {\n  pointer-events: none;\n}\n\n\n/* markers */\n\n.apexcharts-marker {\n  transition: 0.15s ease all;\n}\n\n@keyframes opaque {\n  0% {\n    opacity: 0;\n  }\n  100% {\n    opacity: 1;\n  }\n}\n\n\n/* Resize generated styles */\n\n@keyframes resizeanim {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n.resize-triggers {\n  animation: 1ms resizeanim;\n  visibility: hidden;\n  opacity: 0;\n}\n\n.resize-triggers,\n.resize-triggers>div,\n.contract-trigger:before {\n  content: " ";\n  display: block;\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 100%;\n  width: 100%;\n  overflow: hidden;\n}\n\n.resize-triggers>div {\n  background: #eee;\n  overflow: auto;\n}\n\n.contract-trigger:before {\n  width: 200%;\n  height: 200%;\n}'), function() {
        function t3(t4) {
          var e4 = t4.__resizeTriggers__, n4 = e4.firstElementChild, i3 = e4.lastElementChild, a3 = n4 ? n4.firstElementChild : null;
          i3 && (i3.scrollLeft = i3.scrollWidth, i3.scrollTop = i3.scrollHeight), a3 && (a3.style.width = n4.offsetWidth + 1 + "px", a3.style.height = n4.offsetHeight + 1 + "px"), n4 && (n4.scrollLeft = n4.scrollWidth, n4.scrollTop = n4.scrollHeight);
        }
        function e3(e4) {
          var n4 = this;
          t3(this), this.__resizeRAF__ && r2(this.__resizeRAF__), this.__resizeRAF__ = a2(function() {
            (function(t4) {
              return t4.offsetWidth != t4.__resizeLast__.width || t4.offsetHeight != t4.__resizeLast__.height;
            })(n4) && (n4.__resizeLast__.width = n4.offsetWidth, n4.__resizeLast__.height = n4.offsetHeight, n4.__resizeListeners__.forEach(function(t4) {
              t4.call(e4);
            }));
          });
        }
        var n3, i2, a2 = (n3 = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(t4) {
          return window.setTimeout(t4, 20);
        }, function(t4) {
          return n3(t4);
        }), r2 = (i2 = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout, function(t4) {
          return i2(t4);
        }), o2 = false, s2 = "animationstart", l2 = "Webkit Moz O ms".split(" "), c2 = "webkitAnimationStart animationstart oAnimationStart MSAnimationStart".split(" "), d2 = document.createElement("fakeelement");
        if (d2.style.animationName !== void 0 && (o2 = true), o2 === false) {
          for (var u2 = 0; u2 < l2.length; u2++)
            if (d2.style[l2[u2] + "AnimationName"] !== void 0) {
              s2 = c2[u2];
              break;
            }
        }
        window.addResizeListener = function(n4, i3) {
          n4.__resizeTriggers__ || (getComputedStyle(n4).position == "static" && (n4.style.position = "relative"), n4.__resizeLast__ = {}, n4.__resizeListeners__ = [], (n4.__resizeTriggers__ = document.createElement("div")).className = "resize-triggers", n4.__resizeTriggers__.innerHTML = '<div class="expand-trigger"><div></div></div><div class="contract-trigger"></div>', n4.appendChild(n4.__resizeTriggers__), t3(n4), n4.addEventListener("scroll", e3, true), s2 && n4.__resizeTriggers__.addEventListener(s2, function(e4) {
            e4.animationName == "resizeanim" && t3(n4);
          })), n4.__resizeListeners__.push(i3);
        }, window.removeResizeListener = function(t4, n4) {
          t4 && (t4.__resizeListeners__.splice(t4.__resizeListeners__.indexOf(n4), 1), t4.__resizeListeners__.length || (t4.removeEventListener("scroll", e3), t4.__resizeTriggers__.parentNode && (t4.__resizeTriggers__ = !t4.removeChild(t4.__resizeTriggers__))));
        };
      }(), window.Apex === void 0 && (window.Apex = {});
      var Ft = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "initModules", value: function() {
          this.ctx.publicMethods = ["updateOptions", "updateSeries", "appendData", "appendSeries", "toggleSeries", "showSeries", "hideSeries", "setLocale", "resetSeries", "zoomX", "toggleDataPointSelection", "dataURI", "addXaxisAnnotation", "addYaxisAnnotation", "addPointAnnotation", "clearAnnotations", "removeAnnotation", "paper", "destroy"], this.ctx.eventList = ["click", "mousedown", "mousemove", "mouseleave", "touchstart", "touchmove", "touchleave", "mouseup", "touchend"], this.ctx.animations = new y(this.ctx), this.ctx.axes = new et(this.ctx), this.ctx.core = new Nt(this.ctx.el, this.ctx), this.ctx.config = new q({}), this.ctx.data = new $(this.ctx), this.ctx.grid = new X(this.ctx), this.ctx.graphics = new _(this.ctx), this.ctx.coreUtils = new C(this.ctx), this.ctx.crosshairs = new nt(this.ctx), this.ctx.events = new J(this.ctx), this.ctx.exports = new U(this.ctx), this.ctx.localization = new tt(this.ctx), this.ctx.options = new E(), this.ctx.responsive = new it(this.ctx), this.ctx.series = new j(this.ctx), this.ctx.theme = new at(this.ctx), this.ctx.formatters = new V(this.ctx), this.ctx.titleSubtitle = new rt(this.ctx), this.ctx.legend = new ht(this.ctx), this.ctx.toolbar = new pt(this.ctx), this.ctx.dimensions = new dt(this.ctx), this.ctx.updateHelpers = new Lt(this.ctx), this.ctx.zoomPanSelection = new ft(this.ctx), this.ctx.w.globals.tooltip = new _t(this.ctx);
        } }]), t3;
      }(), Ht = function() {
        function t3(e3) {
          r(this, t3), this.ctx = e3, this.w = e3.w;
        }
        return s(t3, [{ key: "clear", value: function(t4) {
          var e3 = t4.isUpdating;
          this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(), this.ctx.toolbar && this.ctx.toolbar.destroy(), this.ctx.animations = null, this.ctx.axes = null, this.ctx.annotations = null, this.ctx.core = null, this.ctx.data = null, this.ctx.grid = null, this.ctx.series = null, this.ctx.responsive = null, this.ctx.theme = null, this.ctx.formatters = null, this.ctx.titleSubtitle = null, this.ctx.legend = null, this.ctx.dimensions = null, this.ctx.options = null, this.ctx.crosshairs = null, this.ctx.zoomPanSelection = null, this.ctx.updateHelpers = null, this.ctx.toolbar = null, this.ctx.localization = null, this.ctx.w.globals.tooltip = null, this.clearDomElements({ isUpdating: e3 });
        } }, { key: "killSVG", value: function(t4) {
          t4.each(function(t5, e3) {
            this.removeClass("*"), this.off(), this.stop();
          }, true), t4.ungroup(), t4.clear();
        } }, { key: "clearDomElements", value: function(t4) {
          var e3 = this, n3 = t4.isUpdating, i2 = this.w.globals.dom.Paper.node;
          i2.parentNode && i2.parentNode.parentNode && !n3 && (i2.parentNode.parentNode.style.minHeight = "unset");
          var a2 = this.w.globals.dom.baseEl;
          a2 && this.ctx.eventList.forEach(function(t5) {
            a2.removeEventListener(t5, e3.ctx.events.documentEvent);
          });
          var r2 = this.w.globals.dom;
          if (this.ctx.el !== null)
            for (; this.ctx.el.firstChild; )
              this.ctx.el.removeChild(this.ctx.el.firstChild);
          this.killSVG(r2.Paper), r2.Paper.remove(), r2.elWrap = null, r2.elGraphical = null, r2.elAnnotations = null, r2.elLegendWrap = null, r2.baseEl = null, r2.elGridRect = null, r2.elGridRectMask = null, r2.elGridRectMarkerMask = null, r2.elForecastMask = null, r2.elNonForecastMask = null, r2.elDefs = null;
        } }]), t3;
      }(), Bt = function() {
        function t3(e3, n3) {
          r(this, t3), this.opts = n3, this.ctx = this, this.w = new W(n3).init(), this.el = e3, this.w.globals.cuid = b.randomId(), this.w.globals.chartID = this.w.config.chart.id ? b.escapeString(this.w.config.chart.id) : this.w.globals.cuid, new Ft(this).initModules(), this.create = b.bind(this.create, this), this.windowResizeHandler = this._windowResizeHandler.bind(this), this.parentResizeHandler = this._parentResizeCallback.bind(this);
        }
        return s(t3, [{ key: "render", value: function() {
          var t4 = this;
          return new Promise(function(e3, n3) {
            if (t4.el !== null) {
              Apex._chartInstances === void 0 && (Apex._chartInstances = []), t4.w.config.chart.id && Apex._chartInstances.push({ id: t4.w.globals.chartID, group: t4.w.config.chart.group, chart: t4 }), t4.setLocale(t4.w.config.chart.defaultLocale);
              var i2 = t4.w.config.chart.events.beforeMount;
              typeof i2 == "function" && i2(t4, t4.w), t4.events.fireEvent("beforeMount", [t4, t4.w]), window.addEventListener("resize", t4.windowResizeHandler), window.addResizeListener(t4.el.parentNode, t4.parentResizeHandler);
              var a2 = t4.create(t4.w.config.series, {});
              if (!a2)
                return e3(t4);
              t4.mount(a2).then(function() {
                typeof t4.w.config.chart.events.mounted == "function" && t4.w.config.chart.events.mounted(t4, t4.w), t4.events.fireEvent("mounted", [t4, t4.w]), e3(a2);
              }).catch(function(t5) {
                n3(t5);
              });
            } else
              n3(new Error("Element not found"));
          });
        } }, { key: "create", value: function(t4, e3) {
          var n3 = this.w;
          new Ft(this).initModules();
          var i2 = this.w.globals;
          if (i2.noData = false, i2.animationEnded = false, this.responsive.checkResponsiveConfig(e3), n3.config.xaxis.convertedCatToNumeric && new B(n3.config).convertCatToNumericXaxis(n3.config, this.ctx), this.el === null)
            return i2.animationEnded = true, null;
          if (this.core.setupElements(), n3.config.chart.type === "treemap" && (n3.config.grid.show = false, n3.config.yaxis[0].show = false), i2.svgWidth === 0)
            return i2.animationEnded = true, null;
          var a2 = C.checkComboSeries(t4);
          i2.comboCharts = a2.comboCharts, i2.comboBarCount = a2.comboBarCount;
          var r2 = t4.every(function(t5) {
            return t5.data && t5.data.length === 0;
          });
          (t4.length === 0 || r2) && this.series.handleNoData(), this.events.setupEventHandlers(), this.data.parseData(t4), this.theme.init(), new M(this).setGlobalMarkerSize(), this.formatters.setLabelFormatters(), this.titleSubtitle.draw(), i2.noData && i2.collapsedSeries.length !== i2.series.length && !n3.config.legend.showForSingleSeries || this.legend.init(), this.series.hasAllSeriesEqualX(), i2.axisCharts && (this.core.coreCalculations(), n3.config.xaxis.type !== "category" && this.formatters.setLabelFormatters(), this.ctx.toolbar.minX = n3.globals.minX, this.ctx.toolbar.maxX = n3.globals.maxX), this.formatters.heatmapLabelFormatters(), this.dimensions.plotCoords();
          var o2 = this.core.xySettings();
          this.grid.createGridMask();
          var s2 = this.core.plotChartType(t4, o2), l2 = new P(this);
          l2.bringForward(), n3.config.dataLabels.background.enabled && l2.dataLabelsBackground(), this.core.shiftGraphPosition();
          var c2 = { plot: { left: n3.globals.translateX, top: n3.globals.translateY, width: n3.globals.gridWidth, height: n3.globals.gridHeight } };
          return { elGraph: s2, xyRatios: o2, elInner: n3.globals.dom.elGraphical, dimensions: c2 };
        } }, { key: "mount", value: function() {
          var t4 = this, e3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null, n3 = this, i2 = n3.w;
          return new Promise(function(a2, r2) {
            if (n3.el === null)
              return r2(new Error("Not enough data to display or target element not found"));
            (e3 === null || i2.globals.allSeriesCollapsed) && n3.series.handleNoData(), i2.config.chart.type !== "treemap" && n3.axes.drawAxis(i2.config.chart.type, e3.xyRatios), n3.grid = new X(n3);
            var o2 = n3.grid.drawGrid();
            n3.annotations = new A(n3), n3.annotations.drawImageAnnos(), n3.annotations.drawTextAnnos(), i2.config.grid.position === "back" && o2 && i2.globals.dom.elGraphical.add(o2.el);
            var s2 = new G(t4.ctx), l2 = new Q(t4.ctx);
            if (o2 !== null && (s2.xAxisLabelCorrections(o2.xAxisTickWidth), l2.setYAxisTextAlignments(), i2.config.yaxis.map(function(t5, e4) {
              i2.globals.ignoreYAxisIndexes.indexOf(e4) === -1 && l2.yAxisTitleRotate(e4, t5.opposite);
            })), i2.config.annotations.position === "back" && (i2.globals.dom.Paper.add(i2.globals.dom.elAnnotations), n3.annotations.drawAxesAnnotations()), Array.isArray(e3.elGraph))
              for (var c2 = 0; c2 < e3.elGraph.length; c2++)
                i2.globals.dom.elGraphical.add(e3.elGraph[c2]);
            else
              i2.globals.dom.elGraphical.add(e3.elGraph);
            if (i2.config.grid.position === "front" && o2 && i2.globals.dom.elGraphical.add(o2.el), i2.config.xaxis.crosshairs.position === "front" && n3.crosshairs.drawXCrosshairs(), i2.config.yaxis[0].crosshairs.position === "front" && n3.crosshairs.drawYCrosshairs(), i2.config.annotations.position === "front" && (i2.globals.dom.Paper.add(i2.globals.dom.elAnnotations), n3.annotations.drawAxesAnnotations()), !i2.globals.noData) {
              if (i2.config.tooltip.enabled && !i2.globals.noData && n3.w.globals.tooltip.drawTooltip(e3.xyRatios), i2.globals.axisCharts && (i2.globals.isXNumeric || i2.config.xaxis.convertedCatToNumeric || i2.globals.isTimelineBar))
                (i2.config.chart.zoom.enabled || i2.config.chart.selection && i2.config.chart.selection.enabled || i2.config.chart.pan && i2.config.chart.pan.enabled) && n3.zoomPanSelection.init({ xyRatios: e3.xyRatios });
              else {
                var d2 = i2.config.chart.toolbar.tools;
                ["zoom", "zoomin", "zoomout", "selection", "pan", "reset"].forEach(function(t5) {
                  d2[t5] = false;
                });
              }
              i2.config.chart.toolbar.show && !i2.globals.allSeriesCollapsed && n3.toolbar.createToolbar();
            }
            i2.globals.memory.methodsToExec.length > 0 && i2.globals.memory.methodsToExec.forEach(function(t5) {
              t5.method(t5.params, false, t5.context);
            }), i2.globals.axisCharts || i2.globals.noData || n3.core.resizeNonAxisCharts(), a2(n3);
          });
        } }, { key: "destroy", value: function() {
          window.removeEventListener("resize", this.windowResizeHandler), window.removeResizeListener(this.el.parentNode, this.parentResizeHandler);
          var t4 = this.w.config.chart.id;
          t4 && Apex._chartInstances.forEach(function(e3, n3) {
            e3.id === b.escapeString(t4) && Apex._chartInstances.splice(n3, 1);
          }), new Ht(this.ctx).clear({ isUpdating: false });
        } }, { key: "updateOptions", value: function(t4) {
          var e3 = this, n3 = arguments.length > 1 && arguments[1] !== void 0 && arguments[1], i2 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], a2 = !(arguments.length > 3 && arguments[3] !== void 0) || arguments[3], r2 = !(arguments.length > 4 && arguments[4] !== void 0) || arguments[4], o2 = this.w;
          return o2.globals.selection = void 0, t4.series && (this.series.resetSeries(false, true, false), t4.series.length && t4.series[0].data && (t4.series = t4.series.map(function(t5, n4) {
            return e3.updateHelpers._extendSeries(t5, n4);
          })), this.updateHelpers.revertDefaultAxisMinMax()), t4.xaxis && (t4 = this.updateHelpers.forceXAxisUpdate(t4)), t4.yaxis && (t4 = this.updateHelpers.forceYAxisUpdate(t4)), o2.globals.collapsedSeriesIndices.length > 0 && this.series.clearPreviousPaths(), t4.theme && (t4 = this.theme.updateThemeOptions(t4)), this.updateHelpers._updateOptions(t4, n3, i2, a2, r2);
        } }, { key: "updateSeries", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [], e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2];
          return this.series.resetSeries(false), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(t4, e3, n3);
        } }, { key: "appendSeries", value: function(t4) {
          var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = !(arguments.length > 2 && arguments[2] !== void 0) || arguments[2], i2 = this.w.config.series.slice();
          return i2.push(t4), this.series.resetSeries(false), this.updateHelpers.revertDefaultAxisMinMax(), this.updateHelpers._updateSeries(i2, e3, n3);
        } }, { key: "appendData", value: function(t4) {
          var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = this;
          n3.w.globals.dataChanged = true, n3.series.getPreviousPaths();
          for (var i2 = n3.w.config.series.slice(), a2 = 0; a2 < i2.length; a2++)
            if (t4[a2] !== null && t4[a2] !== void 0)
              for (var r2 = 0; r2 < t4[a2].data.length; r2++)
                i2[a2].data.push(t4[a2].data[r2]);
          return n3.w.config.series = i2, e3 && (n3.w.globals.initialSeries = b.clone(n3.w.config.series)), this.update();
        } }, { key: "update", value: function(t4) {
          var e3 = this;
          return new Promise(function(n3, i2) {
            new Ht(e3.ctx).clear({ isUpdating: true });
            var a2 = e3.create(e3.w.config.series, t4);
            if (!a2)
              return n3(e3);
            e3.mount(a2).then(function() {
              typeof e3.w.config.chart.events.updated == "function" && e3.w.config.chart.events.updated(e3, e3.w), e3.events.fireEvent("updated", [e3, e3.w]), e3.w.globals.isDirty = true, n3(e3);
            }).catch(function(t5) {
              i2(t5);
            });
          });
        } }, { key: "getSyncedCharts", value: function() {
          var t4 = this.getGroupedCharts(), e3 = [this];
          return t4.length && (e3 = [], t4.forEach(function(t5) {
            e3.push(t5);
          })), e3;
        } }, { key: "getGroupedCharts", value: function() {
          var t4 = this;
          return Apex._chartInstances.filter(function(t5) {
            if (t5.group)
              return true;
          }).map(function(e3) {
            return t4.w.config.chart.group === e3.group ? e3.chart : t4;
          });
        } }, { key: "toggleSeries", value: function(t4) {
          return this.series.toggleSeries(t4);
        } }, { key: "showSeries", value: function(t4) {
          this.series.showSeries(t4);
        } }, { key: "hideSeries", value: function(t4) {
          this.series.hideSeries(t4);
        } }, { key: "resetSeries", value: function() {
          var t4 = !(arguments.length > 0 && arguments[0] !== void 0) || arguments[0], e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1];
          this.series.resetSeries(t4, e3);
        } }, { key: "addEventListener", value: function(t4, e3) {
          this.events.addEventListener(t4, e3);
        } }, { key: "removeEventListener", value: function(t4, e3) {
          this.events.removeEventListener(t4, e3);
        } }, { key: "addXaxisAnnotation", value: function(t4) {
          var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0, i2 = this;
          n3 && (i2 = n3), i2.annotations.addXaxisAnnotationExternal(t4, e3, i2);
        } }, { key: "addYaxisAnnotation", value: function(t4) {
          var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0, i2 = this;
          n3 && (i2 = n3), i2.annotations.addYaxisAnnotationExternal(t4, e3, i2);
        } }, { key: "addPointAnnotation", value: function(t4) {
          var e3 = !(arguments.length > 1 && arguments[1] !== void 0) || arguments[1], n3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : void 0, i2 = this;
          n3 && (i2 = n3), i2.annotations.addPointAnnotationExternal(t4, e3, i2);
        } }, { key: "clearAnnotations", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : void 0, e3 = this;
          t4 && (e3 = t4), e3.annotations.clearAnnotations(e3);
        } }, { key: "removeAnnotation", value: function(t4) {
          var e3 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : void 0, n3 = this;
          e3 && (n3 = e3), n3.annotations.removeAnnotation(n3, t4);
        } }, { key: "getChartArea", value: function() {
          return this.w.globals.dom.baseEl.querySelector(".apexcharts-inner");
        } }, { key: "getSeriesTotalXRange", value: function(t4, e3) {
          return this.coreUtils.getSeriesTotalsXRange(t4, e3);
        } }, { key: "getHighestValueInSeries", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, e3 = new K(this.ctx);
          return e3.getMinYMaxY(t4).highestY;
        } }, { key: "getLowestValueInSeries", value: function() {
          var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 0, e3 = new K(this.ctx);
          return e3.getMinYMaxY(t4).lowestY;
        } }, { key: "getSeriesTotal", value: function() {
          return this.w.globals.seriesTotals;
        } }, { key: "toggleDataPointSelection", value: function(t4, e3) {
          return this.updateHelpers.toggleDataPointSelection(t4, e3);
        } }, { key: "zoomX", value: function(t4, e3) {
          this.ctx.toolbar.zoomUpdateOptions(t4, e3);
        } }, { key: "setLocale", value: function(t4) {
          this.localization.setCurrentLocaleValues(t4);
        } }, { key: "dataURI", value: function(t4) {
          return new U(this.ctx).dataURI(t4);
        } }, { key: "paper", value: function() {
          return this.w.globals.dom.Paper;
        } }, { key: "_parentResizeCallback", value: function() {
          this.w.globals.animationEnded && this.w.config.chart.redrawOnParentResize && this._windowResize();
        } }, { key: "_windowResize", value: function() {
          var t4 = this;
          clearTimeout(this.w.globals.resizeTimer), this.w.globals.resizeTimer = window.setTimeout(function() {
            t4.w.globals.resized = true, t4.w.globals.dataChanged = false, t4.ctx.update();
          }, 150);
        } }, { key: "_windowResizeHandler", value: function() {
          var t4 = this.w.config.chart.redrawOnWindowResize;
          typeof t4 == "function" && (t4 = t4()), t4 && this._windowResize();
        } }], [{ key: "getChartByID", value: function(t4) {
          var e3 = b.escapeString(t4), n3 = Apex._chartInstances.filter(function(t5) {
            return t5.id === e3;
          })[0];
          return n3 && n3.chart;
        } }, { key: "initOnLoad", value: function() {
          for (var e3 = document.querySelectorAll("[data-apexcharts]"), n3 = 0; n3 < e3.length; n3++)
            new t3(e3[n3], JSON.parse(e3[n3].getAttribute("data-options"))).render();
        } }, { key: "exec", value: function(t4, e3) {
          var n3 = this.getChartByID(t4);
          if (n3) {
            n3.w.globals.isExecCalled = true;
            var i2 = null;
            if (n3.publicMethods.indexOf(e3) !== -1) {
              for (var a2 = arguments.length, r2 = new Array(a2 > 2 ? a2 - 2 : 0), o2 = 2; o2 < a2; o2++)
                r2[o2 - 2] = arguments[o2];
              i2 = n3[e3].apply(n3, r2);
            }
            return i2;
          }
        } }, { key: "merge", value: function(t4, e3) {
          return b.extend(t4, e3);
        } }]), t3;
      }();
      t2.exports = Bt;
    }, 2584: function(t2) {
      t2.exports = function(t3, e2) {
        return Array.prototype.slice.call(t3, e2);
      };
    }, 486: function(t2, e2, n2) {
      var i, a;
      i = [n2(381), n2(8942)], a = function(t3, e3) {
        return e3.fn || (e3.fn = {}), typeof t3 != "function" && t3.hasOwnProperty("default") && (t3 = t3.default), function(t4, e4) {
          var n3 = function(n4, i2, a2) {
            if (this.parentEl = "body", this.element = e4(n4), this.startDate = t4().startOf("day"), this.endDate = t4().endOf("day"), this.minDate = false, this.maxDate = false, this.maxSpan = false, this.autoApply = false, this.singleDatePicker = false, this.showDropdowns = false, this.minYear = t4().subtract(100, "year").format("YYYY"), this.maxYear = t4().add(100, "year").format("YYYY"), this.showWeekNumbers = false, this.showISOWeekNumbers = false, this.showCustomRangeLabel = true, this.timePicker = false, this.timePicker24Hour = false, this.timePickerIncrement = 1, this.timePickerSeconds = false, this.linkedCalendars = true, this.autoUpdateInput = true, this.alwaysShowCalendars = false, this.ranges = {}, this.opens = "right", this.element.hasClass("pull-right") && (this.opens = "left"), this.drops = "down", this.element.hasClass("dropup") && (this.drops = "up"), this.buttonClasses = "btn btn-sm", this.applyButtonClasses = "btn-primary", this.cancelButtonClasses = "btn-default", this.locale = { direction: "ltr", format: t4.localeData().longDateFormat("L"), separator: " - ", applyLabel: "Apply", cancelLabel: "Cancel", weekLabel: "W", customRangeLabel: "Custom Range", daysOfWeek: t4.weekdaysMin(), monthNames: t4.monthsShort(), firstDay: t4.localeData().firstDayOfWeek() }, this.callback = function() {
            }, this.isShowing = false, this.leftCalendar = {}, this.rightCalendar = {}, typeof i2 == "object" && i2 !== null || (i2 = {}), typeof (i2 = e4.extend(this.element.data(), i2)).template == "string" || i2.template instanceof e4 || (i2.template = '<div class="daterangepicker"><div class="ranges"></div><div class="drp-calendar left"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-calendar right"><div class="calendar-table"></div><div class="calendar-time"></div></div><div class="drp-buttons"><span class="drp-selected"></span><button class="cancelBtn" type="button"></button><button class="applyBtn" disabled="disabled" type="button"></button> </div></div>'), this.parentEl = i2.parentEl && e4(i2.parentEl).length ? e4(i2.parentEl) : e4(this.parentEl), this.container = e4(i2.template).appendTo(this.parentEl), typeof i2.locale == "object" && (typeof i2.locale.direction == "string" && (this.locale.direction = i2.locale.direction), typeof i2.locale.format == "string" && (this.locale.format = i2.locale.format), typeof i2.locale.separator == "string" && (this.locale.separator = i2.locale.separator), typeof i2.locale.daysOfWeek == "object" && (this.locale.daysOfWeek = i2.locale.daysOfWeek.slice()), typeof i2.locale.monthNames == "object" && (this.locale.monthNames = i2.locale.monthNames.slice()), typeof i2.locale.firstDay == "number" && (this.locale.firstDay = i2.locale.firstDay), typeof i2.locale.applyLabel == "string" && (this.locale.applyLabel = i2.locale.applyLabel), typeof i2.locale.cancelLabel == "string" && (this.locale.cancelLabel = i2.locale.cancelLabel), typeof i2.locale.weekLabel == "string" && (this.locale.weekLabel = i2.locale.weekLabel), typeof i2.locale.customRangeLabel == "string")) {
              (h = document.createElement("textarea")).innerHTML = i2.locale.customRangeLabel;
              var r = h.value;
              this.locale.customRangeLabel = r;
            }
            if (this.container.addClass(this.locale.direction), typeof i2.startDate == "string" && (this.startDate = t4(i2.startDate, this.locale.format)), typeof i2.endDate == "string" && (this.endDate = t4(i2.endDate, this.locale.format)), typeof i2.minDate == "string" && (this.minDate = t4(i2.minDate, this.locale.format)), typeof i2.maxDate == "string" && (this.maxDate = t4(i2.maxDate, this.locale.format)), typeof i2.startDate == "object" && (this.startDate = t4(i2.startDate)), typeof i2.endDate == "object" && (this.endDate = t4(i2.endDate)), typeof i2.minDate == "object" && (this.minDate = t4(i2.minDate)), typeof i2.maxDate == "object" && (this.maxDate = t4(i2.maxDate)), this.minDate && this.startDate.isBefore(this.minDate) && (this.startDate = this.minDate.clone()), this.maxDate && this.endDate.isAfter(this.maxDate) && (this.endDate = this.maxDate.clone()), typeof i2.applyButtonClasses == "string" && (this.applyButtonClasses = i2.applyButtonClasses), typeof i2.applyClass == "string" && (this.applyButtonClasses = i2.applyClass), typeof i2.cancelButtonClasses == "string" && (this.cancelButtonClasses = i2.cancelButtonClasses), typeof i2.cancelClass == "string" && (this.cancelButtonClasses = i2.cancelClass), typeof i2.maxSpan == "object" && (this.maxSpan = i2.maxSpan), typeof i2.dateLimit == "object" && (this.maxSpan = i2.dateLimit), typeof i2.opens == "string" && (this.opens = i2.opens), typeof i2.drops == "string" && (this.drops = i2.drops), typeof i2.showWeekNumbers == "boolean" && (this.showWeekNumbers = i2.showWeekNumbers), typeof i2.showISOWeekNumbers == "boolean" && (this.showISOWeekNumbers = i2.showISOWeekNumbers), typeof i2.buttonClasses == "string" && (this.buttonClasses = i2.buttonClasses), typeof i2.buttonClasses == "object" && (this.buttonClasses = i2.buttonClasses.join(" ")), typeof i2.showDropdowns == "boolean" && (this.showDropdowns = i2.showDropdowns), typeof i2.minYear == "number" && (this.minYear = i2.minYear), typeof i2.maxYear == "number" && (this.maxYear = i2.maxYear), typeof i2.showCustomRangeLabel == "boolean" && (this.showCustomRangeLabel = i2.showCustomRangeLabel), typeof i2.singleDatePicker == "boolean" && (this.singleDatePicker = i2.singleDatePicker, this.singleDatePicker && (this.endDate = this.startDate.clone())), typeof i2.timePicker == "boolean" && (this.timePicker = i2.timePicker), typeof i2.timePickerSeconds == "boolean" && (this.timePickerSeconds = i2.timePickerSeconds), typeof i2.timePickerIncrement == "number" && (this.timePickerIncrement = i2.timePickerIncrement), typeof i2.timePicker24Hour == "boolean" && (this.timePicker24Hour = i2.timePicker24Hour), typeof i2.autoApply == "boolean" && (this.autoApply = i2.autoApply), typeof i2.autoUpdateInput == "boolean" && (this.autoUpdateInput = i2.autoUpdateInput), typeof i2.linkedCalendars == "boolean" && (this.linkedCalendars = i2.linkedCalendars), typeof i2.isInvalidDate == "function" && (this.isInvalidDate = i2.isInvalidDate), typeof i2.isCustomDate == "function" && (this.isCustomDate = i2.isCustomDate), typeof i2.alwaysShowCalendars == "boolean" && (this.alwaysShowCalendars = i2.alwaysShowCalendars), this.locale.firstDay != 0)
              for (var o = this.locale.firstDay; o > 0; )
                this.locale.daysOfWeek.push(this.locale.daysOfWeek.shift()), o--;
            var s, l, c;
            if (i2.startDate === void 0 && i2.endDate === void 0 && e4(this.element).is(":text")) {
              var d = e4(this.element).val(), u = d.split(this.locale.separator);
              s = l = null, u.length == 2 ? (s = t4(u[0], this.locale.format), l = t4(u[1], this.locale.format)) : this.singleDatePicker && d !== "" && (s = t4(d, this.locale.format), l = t4(d, this.locale.format)), s !== null && l !== null && (this.setStartDate(s), this.setEndDate(l));
            }
            if (typeof i2.ranges == "object") {
              for (c in i2.ranges) {
                s = typeof i2.ranges[c][0] == "string" ? t4(i2.ranges[c][0], this.locale.format) : t4(i2.ranges[c][0]), l = typeof i2.ranges[c][1] == "string" ? t4(i2.ranges[c][1], this.locale.format) : t4(i2.ranges[c][1]), this.minDate && s.isBefore(this.minDate) && (s = this.minDate.clone());
                var h, p = this.maxDate;
                if (this.maxSpan && p && s.clone().add(this.maxSpan).isAfter(p) && (p = s.clone().add(this.maxSpan)), p && l.isAfter(p) && (l = p.clone()), !(this.minDate && l.isBefore(this.minDate, this.timepicker ? "minute" : "day") || p && s.isAfter(p, this.timepicker ? "minute" : "day")))
                  (h = document.createElement("textarea")).innerHTML = c, r = h.value, this.ranges[r] = [s, l];
              }
              var f = "<ul>";
              for (c in this.ranges)
                f += '<li data-range-key="' + c + '">' + c + "</li>";
              this.showCustomRangeLabel && (f += '<li data-range-key="' + this.locale.customRangeLabel + '">' + this.locale.customRangeLabel + "</li>"), f += "</ul>", this.container.find(".ranges").prepend(f);
            }
            typeof a2 == "function" && (this.callback = a2), this.timePicker || (this.startDate = this.startDate.startOf("day"), this.endDate = this.endDate.endOf("day"), this.container.find(".calendar-time").hide()), this.timePicker && this.autoApply && (this.autoApply = false), this.autoApply && this.container.addClass("auto-apply"), typeof i2.ranges == "object" && this.container.addClass("show-ranges"), this.singleDatePicker && (this.container.addClass("single"), this.container.find(".drp-calendar.left").addClass("single"), this.container.find(".drp-calendar.left").show(), this.container.find(".drp-calendar.right").hide(), !this.timePicker && this.autoApply && this.container.addClass("auto-apply")), (i2.ranges === void 0 && !this.singleDatePicker || this.alwaysShowCalendars) && this.container.addClass("show-calendar"), this.container.addClass("opens" + this.opens), this.container.find(".applyBtn, .cancelBtn").addClass(this.buttonClasses), this.applyButtonClasses.length && this.container.find(".applyBtn").addClass(this.applyButtonClasses), this.cancelButtonClasses.length && this.container.find(".cancelBtn").addClass(this.cancelButtonClasses), this.container.find(".applyBtn").html(this.locale.applyLabel), this.container.find(".cancelBtn").html(this.locale.cancelLabel), this.container.find(".drp-calendar").on("click.daterangepicker", ".prev", e4.proxy(this.clickPrev, this)).on("click.daterangepicker", ".next", e4.proxy(this.clickNext, this)).on("mousedown.daterangepicker", "td.available", e4.proxy(this.clickDate, this)).on("mouseenter.daterangepicker", "td.available", e4.proxy(this.hoverDate, this)).on("change.daterangepicker", "select.yearselect", e4.proxy(this.monthOrYearChanged, this)).on("change.daterangepicker", "select.monthselect", e4.proxy(this.monthOrYearChanged, this)).on("change.daterangepicker", "select.hourselect,select.minuteselect,select.secondselect,select.ampmselect", e4.proxy(this.timeChanged, this)), this.container.find(".ranges").on("click.daterangepicker", "li", e4.proxy(this.clickRange, this)), this.container.find(".drp-buttons").on("click.daterangepicker", "button.applyBtn", e4.proxy(this.clickApply, this)).on("click.daterangepicker", "button.cancelBtn", e4.proxy(this.clickCancel, this)), this.element.is("input") || this.element.is("button") ? this.element.on({ "click.daterangepicker": e4.proxy(this.show, this), "focus.daterangepicker": e4.proxy(this.show, this), "keyup.daterangepicker": e4.proxy(this.elementChanged, this), "keydown.daterangepicker": e4.proxy(this.keydown, this) }) : (this.element.on("click.daterangepicker", e4.proxy(this.toggle, this)), this.element.on("keydown.daterangepicker", e4.proxy(this.toggle, this))), this.updateElement();
          };
          return n3.prototype = { constructor: n3, setStartDate: function(e5) {
            typeof e5 == "string" && (this.startDate = t4(e5, this.locale.format)), typeof e5 == "object" && (this.startDate = t4(e5)), this.timePicker || (this.startDate = this.startDate.startOf("day")), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement), this.minDate && this.startDate.isBefore(this.minDate) && (this.startDate = this.minDate.clone(), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.round(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement)), this.maxDate && this.startDate.isAfter(this.maxDate) && (this.startDate = this.maxDate.clone(), this.timePicker && this.timePickerIncrement && this.startDate.minute(Math.floor(this.startDate.minute() / this.timePickerIncrement) * this.timePickerIncrement)), this.isShowing || this.updateElement(), this.updateMonthsInView();
          }, setEndDate: function(e5) {
            typeof e5 == "string" && (this.endDate = t4(e5, this.locale.format)), typeof e5 == "object" && (this.endDate = t4(e5)), this.timePicker || (this.endDate = this.endDate.endOf("day")), this.timePicker && this.timePickerIncrement && this.endDate.minute(Math.round(this.endDate.minute() / this.timePickerIncrement) * this.timePickerIncrement), this.endDate.isBefore(this.startDate) && (this.endDate = this.startDate.clone()), this.maxDate && this.endDate.isAfter(this.maxDate) && (this.endDate = this.maxDate.clone()), this.maxSpan && this.startDate.clone().add(this.maxSpan).isBefore(this.endDate) && (this.endDate = this.startDate.clone().add(this.maxSpan)), this.previousRightTime = this.endDate.clone(), this.container.find(".drp-selected").html(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format)), this.isShowing || this.updateElement(), this.updateMonthsInView();
          }, isInvalidDate: function() {
            return false;
          }, isCustomDate: function() {
            return false;
          }, updateView: function() {
            this.timePicker && (this.renderTimePicker("left"), this.renderTimePicker("right"), this.endDate ? this.container.find(".right .calendar-time select").prop("disabled", false).removeClass("disabled") : this.container.find(".right .calendar-time select").prop("disabled", true).addClass("disabled")), this.endDate && this.container.find(".drp-selected").html(this.startDate.format(this.locale.format) + this.locale.separator + this.endDate.format(this.locale.format)), this.updateMonthsInView(), this.updateCalendars(), this.updateFormInputs();
          }, updateMonthsInView: function() {
            if (this.endDate) {
              if (!this.singleDatePicker && this.leftCalendar.month && this.rightCalendar.month && (this.startDate.format("YYYY-MM") == this.leftCalendar.month.format("YYYY-MM") || this.startDate.format("YYYY-MM") == this.rightCalendar.month.format("YYYY-MM")) && (this.endDate.format("YYYY-MM") == this.leftCalendar.month.format("YYYY-MM") || this.endDate.format("YYYY-MM") == this.rightCalendar.month.format("YYYY-MM")))
                return;
              this.leftCalendar.month = this.startDate.clone().date(2), this.linkedCalendars || this.endDate.month() == this.startDate.month() && this.endDate.year() == this.startDate.year() ? this.rightCalendar.month = this.startDate.clone().date(2).add(1, "month") : this.rightCalendar.month = this.endDate.clone().date(2);
            } else
              this.leftCalendar.month.format("YYYY-MM") != this.startDate.format("YYYY-MM") && this.rightCalendar.month.format("YYYY-MM") != this.startDate.format("YYYY-MM") && (this.leftCalendar.month = this.startDate.clone().date(2), this.rightCalendar.month = this.startDate.clone().date(2).add(1, "month"));
            this.maxDate && this.linkedCalendars && !this.singleDatePicker && this.rightCalendar.month > this.maxDate && (this.rightCalendar.month = this.maxDate.clone().date(2), this.leftCalendar.month = this.maxDate.clone().date(2).subtract(1, "month"));
          }, updateCalendars: function() {
            var t5, e5, n4, i2;
            this.timePicker && (this.endDate ? (t5 = parseInt(this.container.find(".left .hourselect").val(), 10), e5 = parseInt(this.container.find(".left .minuteselect").val(), 10), isNaN(e5) && (e5 = parseInt(this.container.find(".left .minuteselect option:last").val(), 10)), n4 = this.timePickerSeconds ? parseInt(this.container.find(".left .secondselect").val(), 10) : 0, this.timePicker24Hour || ((i2 = this.container.find(".left .ampmselect").val()) === "PM" && t5 < 12 && (t5 += 12), i2 === "AM" && t5 === 12 && (t5 = 0))) : (t5 = parseInt(this.container.find(".right .hourselect").val(), 10), e5 = parseInt(this.container.find(".right .minuteselect").val(), 10), isNaN(e5) && (e5 = parseInt(this.container.find(".right .minuteselect option:last").val(), 10)), n4 = this.timePickerSeconds ? parseInt(this.container.find(".right .secondselect").val(), 10) : 0, this.timePicker24Hour || ((i2 = this.container.find(".right .ampmselect").val()) === "PM" && t5 < 12 && (t5 += 12), i2 === "AM" && t5 === 12 && (t5 = 0))), this.leftCalendar.month.hour(t5).minute(e5).second(n4), this.rightCalendar.month.hour(t5).minute(e5).second(n4));
            this.renderCalendar("left"), this.renderCalendar("right"), this.container.find(".ranges li").removeClass("active"), this.endDate != null && this.calculateChosenLabel();
          }, renderCalendar: function(n4) {
            var i2, a2 = (i2 = n4 == "left" ? this.leftCalendar : this.rightCalendar).month.month(), r = i2.month.year(), o = i2.month.hour(), s = i2.month.minute(), l = i2.month.second(), c = t4([r, a2]).daysInMonth(), d = t4([r, a2, 1]), u = t4([r, a2, c]), h = t4(d).subtract(1, "month").month(), p = t4(d).subtract(1, "month").year(), f = t4([p, h]).daysInMonth(), g = d.day();
            (i2 = []).firstDay = d, i2.lastDay = u;
            for (var m = 0; m < 6; m++)
              i2[m] = [];
            var v = f - g + this.locale.firstDay + 1;
            v > f && (v -= 7), g == this.locale.firstDay && (v = f - 6);
            for (var b = t4([p, h, v, 12, s, l]), y = (m = 0, 0), x = 0; m < 42; m++, y++, b = t4(b).add(24, "hour"))
              m > 0 && y % 7 == 0 && (y = 0, x++), i2[x][y] = b.clone().hour(o).minute(s).second(l), b.hour(12), this.minDate && i2[x][y].format("YYYY-MM-DD") == this.minDate.format("YYYY-MM-DD") && i2[x][y].isBefore(this.minDate) && n4 == "left" && (i2[x][y] = this.minDate.clone()), this.maxDate && i2[x][y].format("YYYY-MM-DD") == this.maxDate.format("YYYY-MM-DD") && i2[x][y].isAfter(this.maxDate) && n4 == "right" && (i2[x][y] = this.maxDate.clone());
            n4 == "left" ? this.leftCalendar.calendar = i2 : this.rightCalendar.calendar = i2;
            var _ = n4 == "left" ? this.minDate : this.startDate, w = this.maxDate, S = (n4 == "left" ? this.startDate : this.endDate, this.locale.direction, '<table class="table-condensed">');
            S += "<thead>", S += "<tr>", (this.showWeekNumbers || this.showISOWeekNumbers) && (S += "<th></th>"), _ && !_.isBefore(i2.firstDay) || this.linkedCalendars && n4 != "left" ? S += "<th></th>" : S += '<th class="prev available"><span></span></th>';
            var C = this.locale.monthNames[i2[1][1].month()] + i2[1][1].format(" YYYY");
            if (this.showDropdowns) {
              for (var k = i2[1][1].month(), D = i2[1][1].year(), T = w && w.year() || this.maxYear, E = _ && _.year() || this.minYear, A = D == E, I = D == T, M = '<select class="monthselect">', R = 0; R < 12; R++)
                (!A || _ && R >= _.month()) && (!I || w && R <= w.month()) ? M += "<option value='" + R + "'" + (R === k ? " selected='selected'" : "") + ">" + this.locale.monthNames[R] + "</option>" : M += "<option value='" + R + "'" + (R === k ? " selected='selected'" : "") + " disabled='disabled'>" + this.locale.monthNames[R] + "</option>";
              M += "</select>";
              for (var P = '<select class="yearselect">', O = E; O <= T; O++)
                P += '<option value="' + O + '"' + (O === D ? ' selected="selected"' : "") + ">" + O + "</option>";
              C = M + (P += "</select>");
            }
            if (S += '<th colspan="5" class="month">' + C + "</th>", w && !w.isAfter(i2.lastDay) || this.linkedCalendars && n4 != "right" && !this.singleDatePicker ? S += "<th></th>" : S += '<th class="next available"><span></span></th>', S += "</tr>", S += "<tr>", (this.showWeekNumbers || this.showISOWeekNumbers) && (S += '<th class="week">' + this.locale.weekLabel + "</th>"), e4.each(this.locale.daysOfWeek, function(t5, e5) {
              S += "<th>" + e5 + "</th>";
            }), S += "</tr>", S += "</thead>", S += "<tbody>", this.endDate == null && this.maxSpan) {
              var j = this.startDate.clone().add(this.maxSpan).endOf("day");
              w && !j.isBefore(w) || (w = j);
            }
            for (x = 0; x < 6; x++) {
              for (S += "<tr>", this.showWeekNumbers ? S += '<td class="week">' + i2[x][0].week() + "</td>" : this.showISOWeekNumbers && (S += '<td class="week">' + i2[x][0].isoWeek() + "</td>"), y = 0; y < 7; y++) {
                var N = [];
                i2[x][y].isSame(new Date(), "day") && N.push("today"), i2[x][y].isoWeekday() > 5 && N.push("weekend"), i2[x][y].month() != i2[1][1].month() && N.push("off", "ends"), this.minDate && i2[x][y].isBefore(this.minDate, "day") && N.push("off", "disabled"), w && i2[x][y].isAfter(w, "day") && N.push("off", "disabled"), this.isInvalidDate(i2[x][y]) && N.push("off", "disabled"), i2[x][y].format("YYYY-MM-DD") == this.startDate.format("YYYY-MM-DD") && N.push("active", "start-date"), this.endDate != null && i2[x][y].format("YYYY-MM-DD") == this.endDate.format("YYYY-MM-DD") && N.push("active", "end-date"), this.endDate != null && i2[x][y] > this.startDate && i2[x][y] < this.endDate && N.push("in-range");
                var L = this.isCustomDate(i2[x][y]);
                L !== false && (typeof L == "string" ? N.push(L) : Array.prototype.push.apply(N, L));
                var F = "", H = false;
                for (m = 0; m < N.length; m++)
                  F += N[m] + " ", N[m] == "disabled" && (H = true);
                H || (F += "available"), S += '<td class="' + F.replace(/^\s+|\s+$/g, "") + '" data-title="r' + x + "c" + y + '">' + i2[x][y].date() + "</td>";
              }
              S += "</tr>";
            }
            S += "</tbody>", S += "</table>", this.container.find(".drp-calendar." + n4 + " .calendar-table").html(S);
          }, renderTimePicker: function(t5) {
            if (t5 != "right" || this.endDate) {
              var e5, n4, i2, a2 = this.maxDate;
              if (!this.maxSpan || this.maxDate && !this.startDate.clone().add(this.maxSpan).isBefore(this.maxDate) || (a2 = this.startDate.clone().add(this.maxSpan)), t5 == "left")
                n4 = this.startDate.clone(), i2 = this.minDate;
              else if (t5 == "right") {
                n4 = this.endDate.clone(), i2 = this.startDate;
                var r = this.container.find(".drp-calendar.right .calendar-time");
                if (r.html() != "" && (n4.hour(isNaN(n4.hour()) ? r.find(".hourselect option:selected").val() : n4.hour()), n4.minute(isNaN(n4.minute()) ? r.find(".minuteselect option:selected").val() : n4.minute()), n4.second(isNaN(n4.second()) ? r.find(".secondselect option:selected").val() : n4.second()), !this.timePicker24Hour)) {
                  var o = r.find(".ampmselect option:selected").val();
                  o === "PM" && n4.hour() < 12 && n4.hour(n4.hour() + 12), o === "AM" && n4.hour() === 12 && n4.hour(0);
                }
                n4.isBefore(this.startDate) && (n4 = this.startDate.clone()), a2 && n4.isAfter(a2) && (n4 = a2.clone());
              }
              e5 = '<select class="hourselect">';
              for (var s = this.timePicker24Hour ? 0 : 1, l = this.timePicker24Hour ? 23 : 12, c = s; c <= l; c++) {
                var d = c;
                this.timePicker24Hour || (d = n4.hour() >= 12 ? c == 12 ? 12 : c + 12 : c == 12 ? 0 : c);
                var u = n4.clone().hour(d), h = false;
                i2 && u.minute(59).isBefore(i2) && (h = true), a2 && u.minute(0).isAfter(a2) && (h = true), d != n4.hour() || h ? e5 += h ? '<option value="' + c + '" disabled="disabled" class="disabled">' + c + "</option>" : '<option value="' + c + '">' + c + "</option>" : e5 += '<option value="' + c + '" selected="selected">' + c + "</option>";
              }
              for (e5 += "</select> ", e5 += ': <select class="minuteselect">', c = 0; c < 60; c += this.timePickerIncrement) {
                var p = c < 10 ? "0" + c : c;
                u = n4.clone().minute(c), h = false, i2 && u.second(59).isBefore(i2) && (h = true), a2 && u.second(0).isAfter(a2) && (h = true), n4.minute() != c || h ? e5 += h ? '<option value="' + c + '" disabled="disabled" class="disabled">' + p + "</option>" : '<option value="' + c + '">' + p + "</option>" : e5 += '<option value="' + c + '" selected="selected">' + p + "</option>";
              }
              if (e5 += "</select> ", this.timePickerSeconds) {
                for (e5 += ': <select class="secondselect">', c = 0; c < 60; c++)
                  p = c < 10 ? "0" + c : c, u = n4.clone().second(c), h = false, i2 && u.isBefore(i2) && (h = true), a2 && u.isAfter(a2) && (h = true), n4.second() != c || h ? e5 += h ? '<option value="' + c + '" disabled="disabled" class="disabled">' + p + "</option>" : '<option value="' + c + '">' + p + "</option>" : e5 += '<option value="' + c + '" selected="selected">' + p + "</option>";
                e5 += "</select> ";
              }
              if (!this.timePicker24Hour) {
                e5 += '<select class="ampmselect">';
                var f = "", g = "";
                i2 && n4.clone().hour(12).minute(0).second(0).isBefore(i2) && (f = ' disabled="disabled" class="disabled"'), a2 && n4.clone().hour(0).minute(0).second(0).isAfter(a2) && (g = ' disabled="disabled" class="disabled"'), n4.hour() >= 12 ? e5 += '<option value="AM"' + f + '>AM</option><option value="PM" selected="selected"' + g + ">PM</option>" : e5 += '<option value="AM" selected="selected"' + f + '>AM</option><option value="PM"' + g + ">PM</option>", e5 += "</select>";
              }
              this.container.find(".drp-calendar." + t5 + " .calendar-time").html(e5);
            }
          }, updateFormInputs: function() {
            this.singleDatePicker || this.endDate && (this.startDate.isBefore(this.endDate) || this.startDate.isSame(this.endDate)) ? this.container.find("button.applyBtn").prop("disabled", false) : this.container.find("button.applyBtn").prop("disabled", true);
          }, move: function() {
            var t5, n4 = { top: 0, left: 0 }, i2 = this.drops, a2 = e4(window).width();
            switch (this.parentEl.is("body") || (n4 = { top: this.parentEl.offset().top - this.parentEl.scrollTop(), left: this.parentEl.offset().left - this.parentEl.scrollLeft() }, a2 = this.parentEl[0].clientWidth + this.parentEl.offset().left), i2) {
              case "auto":
                (t5 = this.element.offset().top + this.element.outerHeight() - n4.top) + this.container.outerHeight() >= this.parentEl[0].scrollHeight && (t5 = this.element.offset().top - this.container.outerHeight() - n4.top, i2 = "up");
                break;
              case "up":
                t5 = this.element.offset().top - this.container.outerHeight() - n4.top;
                break;
              default:
                t5 = this.element.offset().top + this.element.outerHeight() - n4.top;
            }
            this.container.css({ top: 0, left: 0, right: "auto" });
            var r = this.container.outerWidth();
            if (this.container.toggleClass("drop-up", i2 == "up"), this.opens == "left") {
              var o = a2 - this.element.offset().left - this.element.outerWidth();
              r + o > e4(window).width() ? this.container.css({ top: t5, right: "auto", left: 9 }) : this.container.css({ top: t5, right: o, left: "auto" });
            } else if (this.opens == "center")
              (s = this.element.offset().left - n4.left + this.element.outerWidth() / 2 - r / 2) < 0 ? this.container.css({ top: t5, right: "auto", left: 9 }) : s + r > e4(window).width() ? this.container.css({ top: t5, left: "auto", right: 0 }) : this.container.css({ top: t5, left: s, right: "auto" });
            else {
              var s;
              (s = this.element.offset().left - n4.left) + r > e4(window).width() ? this.container.css({ top: t5, left: "auto", right: 0 }) : this.container.css({ top: t5, left: s, right: "auto" });
            }
          }, show: function(t5) {
            this.isShowing || (this._outsideClickProxy = e4.proxy(function(t6) {
              this.outsideClick(t6);
            }, this), e4(document).on("mousedown.daterangepicker", this._outsideClickProxy).on("touchend.daterangepicker", this._outsideClickProxy).on("click.daterangepicker", "[data-toggle=dropdown]", this._outsideClickProxy).on("focusin.daterangepicker", this._outsideClickProxy), e4(window).on("resize.daterangepicker", e4.proxy(function(t6) {
              this.move(t6);
            }, this)), this.oldStartDate = this.startDate.clone(), this.oldEndDate = this.endDate.clone(), this.previousRightTime = this.endDate.clone(), this.updateView(), this.container.show(), this.move(), this.element.trigger("show.daterangepicker", this), this.isShowing = true);
          }, hide: function(t5) {
            this.isShowing && (this.endDate || (this.startDate = this.oldStartDate.clone(), this.endDate = this.oldEndDate.clone()), this.startDate.isSame(this.oldStartDate) && this.endDate.isSame(this.oldEndDate) || this.callback(this.startDate.clone(), this.endDate.clone(), this.chosenLabel), this.updateElement(), e4(document).off(".daterangepicker"), e4(window).off(".daterangepicker"), this.container.hide(), this.element.trigger("hide.daterangepicker", this), this.isShowing = false);
          }, toggle: function(t5) {
            this.isShowing ? this.hide() : this.show();
          }, outsideClick: function(t5) {
            var n4 = e4(t5.target);
            t5.type == "focusin" || n4.closest(this.element).length || n4.closest(this.container).length || n4.closest(".calendar-table").length || (this.hide(), this.element.trigger("outsideClick.daterangepicker", this));
          }, showCalendars: function() {
            this.container.addClass("show-calendar"), this.move(), this.element.trigger("showCalendar.daterangepicker", this);
          }, hideCalendars: function() {
            this.container.removeClass("show-calendar"), this.element.trigger("hideCalendar.daterangepicker", this);
          }, clickRange: function(t5) {
            var e5 = t5.target.getAttribute("data-range-key");
            if (this.chosenLabel = e5, e5 == this.locale.customRangeLabel)
              this.showCalendars();
            else {
              var n4 = this.ranges[e5];
              this.startDate = n4[0], this.endDate = n4[1], this.timePicker || (this.startDate.startOf("day"), this.endDate.endOf("day")), this.alwaysShowCalendars || this.hideCalendars(), this.clickApply();
            }
          }, clickPrev: function(t5) {
            e4(t5.target).parents(".drp-calendar").hasClass("left") ? (this.leftCalendar.month.subtract(1, "month"), this.linkedCalendars && this.rightCalendar.month.subtract(1, "month")) : this.rightCalendar.month.subtract(1, "month"), this.updateCalendars();
          }, clickNext: function(t5) {
            e4(t5.target).parents(".drp-calendar").hasClass("left") ? this.leftCalendar.month.add(1, "month") : (this.rightCalendar.month.add(1, "month"), this.linkedCalendars && this.leftCalendar.month.add(1, "month")), this.updateCalendars();
          }, hoverDate: function(t5) {
            if (e4(t5.target).hasClass("available")) {
              var n4 = e4(t5.target).attr("data-title"), i2 = n4.substr(1, 1), a2 = n4.substr(3, 1), r = e4(t5.target).parents(".drp-calendar").hasClass("left") ? this.leftCalendar.calendar[i2][a2] : this.rightCalendar.calendar[i2][a2], o = this.leftCalendar, s = this.rightCalendar, l = this.startDate;
              this.endDate || this.container.find(".drp-calendar tbody td").each(function(t6, n5) {
                if (!e4(n5).hasClass("week")) {
                  var i3 = e4(n5).attr("data-title"), a3 = i3.substr(1, 1), c = i3.substr(3, 1), d = e4(n5).parents(".drp-calendar").hasClass("left") ? o.calendar[a3][c] : s.calendar[a3][c];
                  d.isAfter(l) && d.isBefore(r) || d.isSame(r, "day") ? e4(n5).addClass("in-range") : e4(n5).removeClass("in-range");
                }
              });
            }
          }, clickDate: function(t5) {
            if (e4(t5.target).hasClass("available")) {
              var n4 = e4(t5.target).attr("data-title"), i2 = n4.substr(1, 1), a2 = n4.substr(3, 1), r = e4(t5.target).parents(".drp-calendar").hasClass("left") ? this.leftCalendar.calendar[i2][a2] : this.rightCalendar.calendar[i2][a2];
              if (this.endDate || r.isBefore(this.startDate, "day")) {
                if (this.timePicker) {
                  var o = parseInt(this.container.find(".left .hourselect").val(), 10);
                  this.timePicker24Hour || ((c = this.container.find(".left .ampmselect").val()) === "PM" && o < 12 && (o += 12), c === "AM" && o === 12 && (o = 0));
                  var s = parseInt(this.container.find(".left .minuteselect").val(), 10);
                  isNaN(s) && (s = parseInt(this.container.find(".left .minuteselect option:last").val(), 10));
                  var l = this.timePickerSeconds ? parseInt(this.container.find(".left .secondselect").val(), 10) : 0;
                  r = r.clone().hour(o).minute(s).second(l);
                }
                this.endDate = null, this.setStartDate(r.clone());
              } else if (!this.endDate && r.isBefore(this.startDate))
                this.setEndDate(this.startDate.clone());
              else {
                var c;
                if (this.timePicker)
                  o = parseInt(this.container.find(".right .hourselect").val(), 10), this.timePicker24Hour || ((c = this.container.find(".right .ampmselect").val()) === "PM" && o < 12 && (o += 12), c === "AM" && o === 12 && (o = 0)), s = parseInt(this.container.find(".right .minuteselect").val(), 10), isNaN(s) && (s = parseInt(this.container.find(".right .minuteselect option:last").val(), 10)), l = this.timePickerSeconds ? parseInt(this.container.find(".right .secondselect").val(), 10) : 0, r = r.clone().hour(o).minute(s).second(l);
                this.setEndDate(r.clone()), this.autoApply && (this.calculateChosenLabel(), this.clickApply());
              }
              this.singleDatePicker && (this.setEndDate(this.startDate), !this.timePicker && this.autoApply && this.clickApply()), this.updateView(), t5.stopPropagation();
            }
          }, calculateChosenLabel: function() {
            var t5 = true, e5 = 0;
            for (var n4 in this.ranges) {
              if (this.timePicker) {
                var i2 = this.timePickerSeconds ? "YYYY-MM-DD HH:mm:ss" : "YYYY-MM-DD HH:mm";
                if (this.startDate.format(i2) == this.ranges[n4][0].format(i2) && this.endDate.format(i2) == this.ranges[n4][1].format(i2)) {
                  t5 = false, this.chosenLabel = this.container.find(".ranges li:eq(" + e5 + ")").addClass("active").attr("data-range-key");
                  break;
                }
              } else if (this.startDate.format("YYYY-MM-DD") == this.ranges[n4][0].format("YYYY-MM-DD") && this.endDate.format("YYYY-MM-DD") == this.ranges[n4][1].format("YYYY-MM-DD")) {
                t5 = false, this.chosenLabel = this.container.find(".ranges li:eq(" + e5 + ")").addClass("active").attr("data-range-key");
                break;
              }
              e5++;
            }
            t5 && (this.showCustomRangeLabel ? this.chosenLabel = this.container.find(".ranges li:last").addClass("active").attr("data-range-key") : this.chosenLabel = null, this.showCalendars());
          }, clickApply: function(t5) {
            this.hide(), this.element.trigger("apply.daterangepicker", this);
          }, clickCancel: function(t5) {
            this.startDate = this.oldStartDate, this.endDate = this.oldEndDate, this.hide(), this.element.trigger("cancel.daterangepicker", this);
          }, monthOrYearChanged: function(t5) {
            var n4 = e4(t5.target).closest(".drp-calendar").hasClass("left"), i2 = n4 ? "left" : "right", a2 = this.container.find(".drp-calendar." + i2), r = parseInt(a2.find(".monthselect").val(), 10), o = a2.find(".yearselect").val();
            n4 || (o < this.startDate.year() || o == this.startDate.year() && r < this.startDate.month()) && (r = this.startDate.month(), o = this.startDate.year()), this.minDate && (o < this.minDate.year() || o == this.minDate.year() && r < this.minDate.month()) && (r = this.minDate.month(), o = this.minDate.year()), this.maxDate && (o > this.maxDate.year() || o == this.maxDate.year() && r > this.maxDate.month()) && (r = this.maxDate.month(), o = this.maxDate.year()), n4 ? (this.leftCalendar.month.month(r).year(o), this.linkedCalendars && (this.rightCalendar.month = this.leftCalendar.month.clone().add(1, "month"))) : (this.rightCalendar.month.month(r).year(o), this.linkedCalendars && (this.leftCalendar.month = this.rightCalendar.month.clone().subtract(1, "month"))), this.updateCalendars();
          }, timeChanged: function(t5) {
            var n4 = e4(t5.target).closest(".drp-calendar"), i2 = n4.hasClass("left"), a2 = parseInt(n4.find(".hourselect").val(), 10), r = parseInt(n4.find(".minuteselect").val(), 10);
            isNaN(r) && (r = parseInt(n4.find(".minuteselect option:last").val(), 10));
            var o = this.timePickerSeconds ? parseInt(n4.find(".secondselect").val(), 10) : 0;
            if (!this.timePicker24Hour) {
              var s = n4.find(".ampmselect").val();
              s === "PM" && a2 < 12 && (a2 += 12), s === "AM" && a2 === 12 && (a2 = 0);
            }
            if (i2) {
              var l = this.startDate.clone();
              l.hour(a2), l.minute(r), l.second(o), this.setStartDate(l), this.singleDatePicker ? this.endDate = this.startDate.clone() : this.endDate && this.endDate.format("YYYY-MM-DD") == l.format("YYYY-MM-DD") && this.endDate.isBefore(l) && this.setEndDate(l.clone());
            } else if (this.endDate) {
              var c = this.endDate.clone();
              c.hour(a2), c.minute(r), c.second(o), this.setEndDate(c);
            }
            this.updateCalendars(), this.updateFormInputs(), this.renderTimePicker("left"), this.renderTimePicker("right");
          }, elementChanged: function() {
            if (this.element.is("input") && this.element.val().length) {
              var e5 = this.element.val().split(this.locale.separator), n4 = null, i2 = null;
              e5.length === 2 && (n4 = t4(e5[0], this.locale.format), i2 = t4(e5[1], this.locale.format)), (this.singleDatePicker || n4 === null || i2 === null) && (i2 = n4 = t4(this.element.val(), this.locale.format)), n4.isValid() && i2.isValid() && (this.setStartDate(n4), this.setEndDate(i2), this.updateView());
            }
          }, keydown: function(t5) {
            t5.keyCode !== 9 && t5.keyCode !== 13 || this.hide(), t5.keyCode === 27 && (t5.preventDefault(), t5.stopPropagation(), this.hide());
          }, updateElement: function() {
            if (this.element.is("input") && this.autoUpdateInput) {
              var t5 = this.startDate.format(this.locale.format);
              this.singleDatePicker || (t5 += this.locale.separator + this.endDate.format(this.locale.format)), t5 !== this.element.val() && this.element.val(t5).trigger("change");
            }
          }, remove: function() {
            this.container.remove(), this.element.off(".daterangepicker"), this.element.removeData();
          } }, e4.fn.daterangepicker = function(t5, i2) {
            var a2 = e4.extend(true, {}, e4.fn.daterangepicker.defaultOptions, t5);
            return this.each(function() {
              var t6 = e4(this);
              t6.data("daterangepicker") && t6.data("daterangepicker").remove(), t6.data("daterangepicker", new n3(t6, a2, i2));
            }), this;
          }, n3;
        }(t3, e3);
      }.apply(e2, i), a === void 0 || (t2.exports = a);
    }, 1807: function(t2) {
      var e2 = !(typeof window == "undefined" || !window.document || !window.document.createElement);
      t2.exports = e2;
    }, 7757: function(t2, e2, n2) {
      t2.exports = function(t3) {
        "use strict";
        function e3(t4, e4) {
          return t4(e4 = { exports: {} }, e4.exports), e4.exports;
        }
        function n3(t4) {
          return t4 && t4.default || t4;
        }
        t3 = t3 && t3.hasOwnProperty("default") ? t3.default : t3;
        var i = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] }, a = e3(function(t4) {
          var e4 = {};
          for (var n4 in i)
            i.hasOwnProperty(n4) && (e4[i[n4]] = n4);
          var a2 = t4.exports = { rgb: { channels: 3, labels: "rgb" }, hsl: { channels: 3, labels: "hsl" }, hsv: { channels: 3, labels: "hsv" }, hwb: { channels: 3, labels: "hwb" }, cmyk: { channels: 4, labels: "cmyk" }, xyz: { channels: 3, labels: "xyz" }, lab: { channels: 3, labels: "lab" }, lch: { channels: 3, labels: "lch" }, hex: { channels: 1, labels: ["hex"] }, keyword: { channels: 1, labels: ["keyword"] }, ansi16: { channels: 1, labels: ["ansi16"] }, ansi256: { channels: 1, labels: ["ansi256"] }, hcg: { channels: 3, labels: ["h", "c", "g"] }, apple: { channels: 3, labels: ["r16", "g16", "b16"] }, gray: { channels: 1, labels: ["gray"] } };
          for (var r2 in a2)
            if (a2.hasOwnProperty(r2)) {
              if (!("channels" in a2[r2]))
                throw new Error("missing channels property: " + r2);
              if (!("labels" in a2[r2]))
                throw new Error("missing channel labels property: " + r2);
              if (a2[r2].labels.length !== a2[r2].channels)
                throw new Error("channel and label counts mismatch: " + r2);
              var o2 = a2[r2].channels, s2 = a2[r2].labels;
              delete a2[r2].channels, delete a2[r2].labels, Object.defineProperty(a2[r2], "channels", { value: o2 }), Object.defineProperty(a2[r2], "labels", { value: s2 });
            }
          function l2(t5, e5) {
            return Math.pow(t5[0] - e5[0], 2) + Math.pow(t5[1] - e5[1], 2) + Math.pow(t5[2] - e5[2], 2);
          }
          a2.rgb.hsl = function(t5) {
            var e5, n5, i2 = t5[0] / 255, a3 = t5[1] / 255, r3 = t5[2] / 255, o3 = Math.min(i2, a3, r3), s3 = Math.max(i2, a3, r3), l3 = s3 - o3;
            return s3 === o3 ? e5 = 0 : i2 === s3 ? e5 = (a3 - r3) / l3 : a3 === s3 ? e5 = 2 + (r3 - i2) / l3 : r3 === s3 && (e5 = 4 + (i2 - a3) / l3), (e5 = Math.min(60 * e5, 360)) < 0 && (e5 += 360), n5 = (o3 + s3) / 2, [e5, 100 * (s3 === o3 ? 0 : n5 <= 0.5 ? l3 / (s3 + o3) : l3 / (2 - s3 - o3)), 100 * n5];
          }, a2.rgb.hsv = function(t5) {
            var e5, n5, i2, a3, r3, o3 = t5[0] / 255, s3 = t5[1] / 255, l3 = t5[2] / 255, c2 = Math.max(o3, s3, l3), d2 = c2 - Math.min(o3, s3, l3), u2 = function(t6) {
              return (c2 - t6) / 6 / d2 + 0.5;
            };
            return d2 === 0 ? a3 = r3 = 0 : (r3 = d2 / c2, e5 = u2(o3), n5 = u2(s3), i2 = u2(l3), o3 === c2 ? a3 = i2 - n5 : s3 === c2 ? a3 = 1 / 3 + e5 - i2 : l3 === c2 && (a3 = 2 / 3 + n5 - e5), a3 < 0 ? a3 += 1 : a3 > 1 && (a3 -= 1)), [360 * a3, 100 * r3, 100 * c2];
          }, a2.rgb.hwb = function(t5) {
            var e5 = t5[0], n5 = t5[1], i2 = t5[2];
            return [a2.rgb.hsl(t5)[0], 1 / 255 * Math.min(e5, Math.min(n5, i2)) * 100, 100 * (i2 = 1 - 1 / 255 * Math.max(e5, Math.max(n5, i2)))];
          }, a2.rgb.cmyk = function(t5) {
            var e5, n5 = t5[0] / 255, i2 = t5[1] / 255, a3 = t5[2] / 255;
            return [100 * ((1 - n5 - (e5 = Math.min(1 - n5, 1 - i2, 1 - a3))) / (1 - e5) || 0), 100 * ((1 - i2 - e5) / (1 - e5) || 0), 100 * ((1 - a3 - e5) / (1 - e5) || 0), 100 * e5];
          }, a2.rgb.keyword = function(t5) {
            var n5 = e4[t5];
            if (n5)
              return n5;
            var a3, r3 = 1 / 0;
            for (var o3 in i)
              if (i.hasOwnProperty(o3)) {
                var s3 = l2(t5, i[o3]);
                s3 < r3 && (r3 = s3, a3 = o3);
              }
            return a3;
          }, a2.keyword.rgb = function(t5) {
            return i[t5];
          }, a2.rgb.xyz = function(t5) {
            var e5 = t5[0] / 255, n5 = t5[1] / 255, i2 = t5[2] / 255;
            return [100 * (0.4124 * (e5 = e5 > 0.04045 ? Math.pow((e5 + 0.055) / 1.055, 2.4) : e5 / 12.92) + 0.3576 * (n5 = n5 > 0.04045 ? Math.pow((n5 + 0.055) / 1.055, 2.4) : n5 / 12.92) + 0.1805 * (i2 = i2 > 0.04045 ? Math.pow((i2 + 0.055) / 1.055, 2.4) : i2 / 12.92)), 100 * (0.2126 * e5 + 0.7152 * n5 + 0.0722 * i2), 100 * (0.0193 * e5 + 0.1192 * n5 + 0.9505 * i2)];
          }, a2.rgb.lab = function(t5) {
            var e5 = a2.rgb.xyz(t5), n5 = e5[0], i2 = e5[1], r3 = e5[2];
            return i2 /= 100, r3 /= 108.883, n5 = (n5 /= 95.047) > 8856e-6 ? Math.pow(n5, 1 / 3) : 7.787 * n5 + 16 / 116, [116 * (i2 = i2 > 8856e-6 ? Math.pow(i2, 1 / 3) : 7.787 * i2 + 16 / 116) - 16, 500 * (n5 - i2), 200 * (i2 - (r3 = r3 > 8856e-6 ? Math.pow(r3, 1 / 3) : 7.787 * r3 + 16 / 116))];
          }, a2.hsl.rgb = function(t5) {
            var e5, n5, i2, a3, r3, o3 = t5[0] / 360, s3 = t5[1] / 100, l3 = t5[2] / 100;
            if (s3 === 0)
              return [r3 = 255 * l3, r3, r3];
            e5 = 2 * l3 - (n5 = l3 < 0.5 ? l3 * (1 + s3) : l3 + s3 - l3 * s3), a3 = [0, 0, 0];
            for (var c2 = 0; c2 < 3; c2++)
              (i2 = o3 + 1 / 3 * -(c2 - 1)) < 0 && i2++, i2 > 1 && i2--, r3 = 6 * i2 < 1 ? e5 + 6 * (n5 - e5) * i2 : 2 * i2 < 1 ? n5 : 3 * i2 < 2 ? e5 + (n5 - e5) * (2 / 3 - i2) * 6 : e5, a3[c2] = 255 * r3;
            return a3;
          }, a2.hsl.hsv = function(t5) {
            var e5 = t5[0], n5 = t5[1] / 100, i2 = t5[2] / 100, a3 = n5, r3 = Math.max(i2, 0.01);
            return n5 *= (i2 *= 2) <= 1 ? i2 : 2 - i2, a3 *= r3 <= 1 ? r3 : 2 - r3, [e5, 100 * (i2 === 0 ? 2 * a3 / (r3 + a3) : 2 * n5 / (i2 + n5)), (i2 + n5) / 2 * 100];
          }, a2.hsv.rgb = function(t5) {
            var e5 = t5[0] / 60, n5 = t5[1] / 100, i2 = t5[2] / 100, a3 = Math.floor(e5) % 6, r3 = e5 - Math.floor(e5), o3 = 255 * i2 * (1 - n5), s3 = 255 * i2 * (1 - n5 * r3), l3 = 255 * i2 * (1 - n5 * (1 - r3));
            switch (i2 *= 255, a3) {
              case 0:
                return [i2, l3, o3];
              case 1:
                return [s3, i2, o3];
              case 2:
                return [o3, i2, l3];
              case 3:
                return [o3, s3, i2];
              case 4:
                return [l3, o3, i2];
              case 5:
                return [i2, o3, s3];
            }
          }, a2.hsv.hsl = function(t5) {
            var e5, n5, i2, a3 = t5[0], r3 = t5[1] / 100, o3 = t5[2] / 100, s3 = Math.max(o3, 0.01);
            return i2 = (2 - r3) * o3, n5 = r3 * s3, [a3, 100 * (n5 = (n5 /= (e5 = (2 - r3) * s3) <= 1 ? e5 : 2 - e5) || 0), 100 * (i2 /= 2)];
          }, a2.hwb.rgb = function(t5) {
            var e5, n5, i2, a3, r3, o3, s3, l3 = t5[0] / 360, c2 = t5[1] / 100, d2 = t5[2] / 100, u2 = c2 + d2;
            switch (u2 > 1 && (c2 /= u2, d2 /= u2), i2 = 6 * l3 - (e5 = Math.floor(6 * l3)), (1 & e5) != 0 && (i2 = 1 - i2), a3 = c2 + i2 * ((n5 = 1 - d2) - c2), e5) {
              default:
                r3 = n5, o3 = a3, s3 = c2;
                break;
              case 1:
                r3 = a3, o3 = n5, s3 = c2;
                break;
              case 2:
                r3 = c2, o3 = n5, s3 = a3;
                break;
              case 3:
                r3 = c2, o3 = a3, s3 = n5;
                break;
              case 4:
                r3 = a3, o3 = c2, s3 = n5;
                break;
              case 5:
                r3 = n5, o3 = c2, s3 = a3;
            }
            return [255 * r3, 255 * o3, 255 * s3];
          }, a2.cmyk.rgb = function(t5) {
            var e5 = t5[0] / 100, n5 = t5[1] / 100, i2 = t5[2] / 100, a3 = t5[3] / 100;
            return [255 * (1 - Math.min(1, e5 * (1 - a3) + a3)), 255 * (1 - Math.min(1, n5 * (1 - a3) + a3)), 255 * (1 - Math.min(1, i2 * (1 - a3) + a3))];
          }, a2.xyz.rgb = function(t5) {
            var e5, n5, i2, a3 = t5[0] / 100, r3 = t5[1] / 100, o3 = t5[2] / 100;
            return n5 = -0.9689 * a3 + 1.8758 * r3 + 0.0415 * o3, i2 = 0.0557 * a3 + -0.204 * r3 + 1.057 * o3, e5 = (e5 = 3.2406 * a3 + -1.5372 * r3 + -0.4986 * o3) > 31308e-7 ? 1.055 * Math.pow(e5, 1 / 2.4) - 0.055 : 12.92 * e5, n5 = n5 > 31308e-7 ? 1.055 * Math.pow(n5, 1 / 2.4) - 0.055 : 12.92 * n5, i2 = i2 > 31308e-7 ? 1.055 * Math.pow(i2, 1 / 2.4) - 0.055 : 12.92 * i2, [255 * (e5 = Math.min(Math.max(0, e5), 1)), 255 * (n5 = Math.min(Math.max(0, n5), 1)), 255 * (i2 = Math.min(Math.max(0, i2), 1))];
          }, a2.xyz.lab = function(t5) {
            var e5 = t5[0], n5 = t5[1], i2 = t5[2];
            return n5 /= 100, i2 /= 108.883, e5 = (e5 /= 95.047) > 8856e-6 ? Math.pow(e5, 1 / 3) : 7.787 * e5 + 16 / 116, [116 * (n5 = n5 > 8856e-6 ? Math.pow(n5, 1 / 3) : 7.787 * n5 + 16 / 116) - 16, 500 * (e5 - n5), 200 * (n5 - (i2 = i2 > 8856e-6 ? Math.pow(i2, 1 / 3) : 7.787 * i2 + 16 / 116))];
          }, a2.lab.xyz = function(t5) {
            var e5, n5, i2, a3 = t5[0];
            e5 = t5[1] / 500 + (n5 = (a3 + 16) / 116), i2 = n5 - t5[2] / 200;
            var r3 = Math.pow(n5, 3), o3 = Math.pow(e5, 3), s3 = Math.pow(i2, 3);
            return n5 = r3 > 8856e-6 ? r3 : (n5 - 16 / 116) / 7.787, e5 = o3 > 8856e-6 ? o3 : (e5 - 16 / 116) / 7.787, i2 = s3 > 8856e-6 ? s3 : (i2 - 16 / 116) / 7.787, [e5 *= 95.047, n5 *= 100, i2 *= 108.883];
          }, a2.lab.lch = function(t5) {
            var e5, n5 = t5[0], i2 = t5[1], a3 = t5[2];
            return (e5 = 360 * Math.atan2(a3, i2) / 2 / Math.PI) < 0 && (e5 += 360), [n5, Math.sqrt(i2 * i2 + a3 * a3), e5];
          }, a2.lch.lab = function(t5) {
            var e5, n5 = t5[0], i2 = t5[1];
            return e5 = t5[2] / 360 * 2 * Math.PI, [n5, i2 * Math.cos(e5), i2 * Math.sin(e5)];
          }, a2.rgb.ansi16 = function(t5) {
            var e5 = t5[0], n5 = t5[1], i2 = t5[2], r3 = 1 in arguments ? arguments[1] : a2.rgb.hsv(t5)[2];
            if ((r3 = Math.round(r3 / 50)) === 0)
              return 30;
            var o3 = 30 + (Math.round(i2 / 255) << 2 | Math.round(n5 / 255) << 1 | Math.round(e5 / 255));
            return r3 === 2 && (o3 += 60), o3;
          }, a2.hsv.ansi16 = function(t5) {
            return a2.rgb.ansi16(a2.hsv.rgb(t5), t5[2]);
          }, a2.rgb.ansi256 = function(t5) {
            var e5 = t5[0], n5 = t5[1], i2 = t5[2];
            return e5 === n5 && n5 === i2 ? e5 < 8 ? 16 : e5 > 248 ? 231 : Math.round((e5 - 8) / 247 * 24) + 232 : 16 + 36 * Math.round(e5 / 255 * 5) + 6 * Math.round(n5 / 255 * 5) + Math.round(i2 / 255 * 5);
          }, a2.ansi16.rgb = function(t5) {
            var e5 = t5 % 10;
            if (e5 === 0 || e5 === 7)
              return t5 > 50 && (e5 += 3.5), [e5 = e5 / 10.5 * 255, e5, e5];
            var n5 = 0.5 * (1 + ~~(t5 > 50));
            return [(1 & e5) * n5 * 255, (e5 >> 1 & 1) * n5 * 255, (e5 >> 2 & 1) * n5 * 255];
          }, a2.ansi256.rgb = function(t5) {
            if (t5 >= 232) {
              var e5 = 10 * (t5 - 232) + 8;
              return [e5, e5, e5];
            }
            var n5;
            return t5 -= 16, [Math.floor(t5 / 36) / 5 * 255, Math.floor((n5 = t5 % 36) / 6) / 5 * 255, n5 % 6 / 5 * 255];
          }, a2.rgb.hex = function(t5) {
            var e5 = (((255 & Math.round(t5[0])) << 16) + ((255 & Math.round(t5[1])) << 8) + (255 & Math.round(t5[2]))).toString(16).toUpperCase();
            return "000000".substring(e5.length) + e5;
          }, a2.hex.rgb = function(t5) {
            var e5 = t5.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
            if (!e5)
              return [0, 0, 0];
            var n5 = e5[0];
            e5[0].length === 3 && (n5 = n5.split("").map(function(t6) {
              return t6 + t6;
            }).join(""));
            var i2 = parseInt(n5, 16);
            return [i2 >> 16 & 255, i2 >> 8 & 255, 255 & i2];
          }, a2.rgb.hcg = function(t5) {
            var e5, n5 = t5[0] / 255, i2 = t5[1] / 255, a3 = t5[2] / 255, r3 = Math.max(Math.max(n5, i2), a3), o3 = Math.min(Math.min(n5, i2), a3), s3 = r3 - o3;
            return e5 = s3 <= 0 ? 0 : r3 === n5 ? (i2 - a3) / s3 % 6 : r3 === i2 ? 2 + (a3 - n5) / s3 : 4 + (n5 - i2) / s3 + 4, e5 /= 6, [360 * (e5 %= 1), 100 * s3, 100 * (s3 < 1 ? o3 / (1 - s3) : 0)];
          }, a2.hsl.hcg = function(t5) {
            var e5 = t5[1] / 100, n5 = t5[2] / 100, i2 = 1, a3 = 0;
            return (i2 = n5 < 0.5 ? 2 * e5 * n5 : 2 * e5 * (1 - n5)) < 1 && (a3 = (n5 - 0.5 * i2) / (1 - i2)), [t5[0], 100 * i2, 100 * a3];
          }, a2.hsv.hcg = function(t5) {
            var e5 = t5[1] / 100, n5 = t5[2] / 100, i2 = e5 * n5, a3 = 0;
            return i2 < 1 && (a3 = (n5 - i2) / (1 - i2)), [t5[0], 100 * i2, 100 * a3];
          }, a2.hcg.rgb = function(t5) {
            var e5 = t5[0] / 360, n5 = t5[1] / 100, i2 = t5[2] / 100;
            if (n5 === 0)
              return [255 * i2, 255 * i2, 255 * i2];
            var a3 = [0, 0, 0], r3 = e5 % 1 * 6, o3 = r3 % 1, s3 = 1 - o3, l3 = 0;
            switch (Math.floor(r3)) {
              case 0:
                a3[0] = 1, a3[1] = o3, a3[2] = 0;
                break;
              case 1:
                a3[0] = s3, a3[1] = 1, a3[2] = 0;
                break;
              case 2:
                a3[0] = 0, a3[1] = 1, a3[2] = o3;
                break;
              case 3:
                a3[0] = 0, a3[1] = s3, a3[2] = 1;
                break;
              case 4:
                a3[0] = o3, a3[1] = 0, a3[2] = 1;
                break;
              default:
                a3[0] = 1, a3[1] = 0, a3[2] = s3;
            }
            return l3 = (1 - n5) * i2, [255 * (n5 * a3[0] + l3), 255 * (n5 * a3[1] + l3), 255 * (n5 * a3[2] + l3)];
          }, a2.hcg.hsv = function(t5) {
            var e5 = t5[1] / 100, n5 = e5 + t5[2] / 100 * (1 - e5), i2 = 0;
            return n5 > 0 && (i2 = e5 / n5), [t5[0], 100 * i2, 100 * n5];
          }, a2.hcg.hsl = function(t5) {
            var e5 = t5[1] / 100, n5 = t5[2] / 100 * (1 - e5) + 0.5 * e5, i2 = 0;
            return n5 > 0 && n5 < 0.5 ? i2 = e5 / (2 * n5) : n5 >= 0.5 && n5 < 1 && (i2 = e5 / (2 * (1 - n5))), [t5[0], 100 * i2, 100 * n5];
          }, a2.hcg.hwb = function(t5) {
            var e5 = t5[1] / 100, n5 = e5 + t5[2] / 100 * (1 - e5);
            return [t5[0], 100 * (n5 - e5), 100 * (1 - n5)];
          }, a2.hwb.hcg = function(t5) {
            var e5 = t5[1] / 100, n5 = 1 - t5[2] / 100, i2 = n5 - e5, a3 = 0;
            return i2 < 1 && (a3 = (n5 - i2) / (1 - i2)), [t5[0], 100 * i2, 100 * a3];
          }, a2.apple.rgb = function(t5) {
            return [t5[0] / 65535 * 255, t5[1] / 65535 * 255, t5[2] / 65535 * 255];
          }, a2.rgb.apple = function(t5) {
            return [t5[0] / 255 * 65535, t5[1] / 255 * 65535, t5[2] / 255 * 65535];
          }, a2.gray.rgb = function(t5) {
            return [t5[0] / 100 * 255, t5[0] / 100 * 255, t5[0] / 100 * 255];
          }, a2.gray.hsl = a2.gray.hsv = function(t5) {
            return [0, 0, t5[0]];
          }, a2.gray.hwb = function(t5) {
            return [0, 100, t5[0]];
          }, a2.gray.cmyk = function(t5) {
            return [0, 0, 0, t5[0]];
          }, a2.gray.lab = function(t5) {
            return [t5[0], 0, 0];
          }, a2.gray.hex = function(t5) {
            var e5 = 255 & Math.round(t5[0] / 100 * 255), n5 = ((e5 << 16) + (e5 << 8) + e5).toString(16).toUpperCase();
            return "000000".substring(n5.length) + n5;
          }, a2.rgb.gray = function(t5) {
            return [(t5[0] + t5[1] + t5[2]) / 3 / 255 * 100];
          };
        });
        function r() {
          for (var t4 = {}, e4 = Object.keys(a), n4 = e4.length, i2 = 0; i2 < n4; i2++)
            t4[e4[i2]] = { distance: -1, parent: null };
          return t4;
        }
        function o(t4) {
          var e4 = r(), n4 = [t4];
          for (e4[t4].distance = 0; n4.length; )
            for (var i2 = n4.pop(), o2 = Object.keys(a[i2]), s2 = o2.length, l2 = 0; l2 < s2; l2++) {
              var c2 = o2[l2], d2 = e4[c2];
              d2.distance === -1 && (d2.distance = e4[i2].distance + 1, d2.parent = i2, n4.unshift(c2));
            }
          return e4;
        }
        function s(t4, e4) {
          return function(n4) {
            return e4(t4(n4));
          };
        }
        function l(t4, e4) {
          for (var n4 = [e4[t4].parent, t4], i2 = a[e4[t4].parent][t4], r2 = e4[t4].parent; e4[r2].parent; )
            n4.unshift(e4[r2].parent), i2 = s(a[e4[r2].parent][r2], i2), r2 = e4[r2].parent;
          return i2.conversion = n4, i2;
        }
        a.rgb, a.hsl, a.hsv, a.hwb, a.cmyk, a.xyz, a.lab, a.lch, a.hex, a.keyword, a.ansi16, a.ansi256, a.hcg, a.apple, a.gray;
        var c = function(t4) {
          for (var e4 = o(t4), n4 = {}, i2 = Object.keys(e4), a2 = i2.length, r2 = 0; r2 < a2; r2++) {
            var s2 = i2[r2];
            e4[s2].parent !== null && (n4[s2] = l(s2, e4));
          }
          return n4;
        }, d = {};
        function u(t4) {
          var e4 = function(e5) {
            return e5 == null ? e5 : (arguments.length > 1 && (e5 = Array.prototype.slice.call(arguments)), t4(e5));
          };
          return "conversion" in t4 && (e4.conversion = t4.conversion), e4;
        }
        function h(t4) {
          var e4 = function(e5) {
            if (e5 == null)
              return e5;
            arguments.length > 1 && (e5 = Array.prototype.slice.call(arguments));
            var n4 = t4(e5);
            if (typeof n4 == "object")
              for (var i2 = n4.length, a2 = 0; a2 < i2; a2++)
                n4[a2] = Math.round(n4[a2]);
            return n4;
          };
          return "conversion" in t4 && (e4.conversion = t4.conversion), e4;
        }
        Object.keys(a).forEach(function(t4) {
          d[t4] = {}, Object.defineProperty(d[t4], "channels", { value: a[t4].channels }), Object.defineProperty(d[t4], "labels", { value: a[t4].labels });
          var e4 = c(t4);
          Object.keys(e4).forEach(function(n4) {
            var i2 = e4[n4];
            d[t4][n4] = h(i2), d[t4][n4].raw = u(i2);
          });
        });
        var p = d, f = { aliceblue: [240, 248, 255], antiquewhite: [250, 235, 215], aqua: [0, 255, 255], aquamarine: [127, 255, 212], azure: [240, 255, 255], beige: [245, 245, 220], bisque: [255, 228, 196], black: [0, 0, 0], blanchedalmond: [255, 235, 205], blue: [0, 0, 255], blueviolet: [138, 43, 226], brown: [165, 42, 42], burlywood: [222, 184, 135], cadetblue: [95, 158, 160], chartreuse: [127, 255, 0], chocolate: [210, 105, 30], coral: [255, 127, 80], cornflowerblue: [100, 149, 237], cornsilk: [255, 248, 220], crimson: [220, 20, 60], cyan: [0, 255, 255], darkblue: [0, 0, 139], darkcyan: [0, 139, 139], darkgoldenrod: [184, 134, 11], darkgray: [169, 169, 169], darkgreen: [0, 100, 0], darkgrey: [169, 169, 169], darkkhaki: [189, 183, 107], darkmagenta: [139, 0, 139], darkolivegreen: [85, 107, 47], darkorange: [255, 140, 0], darkorchid: [153, 50, 204], darkred: [139, 0, 0], darksalmon: [233, 150, 122], darkseagreen: [143, 188, 143], darkslateblue: [72, 61, 139], darkslategray: [47, 79, 79], darkslategrey: [47, 79, 79], darkturquoise: [0, 206, 209], darkviolet: [148, 0, 211], deeppink: [255, 20, 147], deepskyblue: [0, 191, 255], dimgray: [105, 105, 105], dimgrey: [105, 105, 105], dodgerblue: [30, 144, 255], firebrick: [178, 34, 34], floralwhite: [255, 250, 240], forestgreen: [34, 139, 34], fuchsia: [255, 0, 255], gainsboro: [220, 220, 220], ghostwhite: [248, 248, 255], gold: [255, 215, 0], goldenrod: [218, 165, 32], gray: [128, 128, 128], green: [0, 128, 0], greenyellow: [173, 255, 47], grey: [128, 128, 128], honeydew: [240, 255, 240], hotpink: [255, 105, 180], indianred: [205, 92, 92], indigo: [75, 0, 130], ivory: [255, 255, 240], khaki: [240, 230, 140], lavender: [230, 230, 250], lavenderblush: [255, 240, 245], lawngreen: [124, 252, 0], lemonchiffon: [255, 250, 205], lightblue: [173, 216, 230], lightcoral: [240, 128, 128], lightcyan: [224, 255, 255], lightgoldenrodyellow: [250, 250, 210], lightgray: [211, 211, 211], lightgreen: [144, 238, 144], lightgrey: [211, 211, 211], lightpink: [255, 182, 193], lightsalmon: [255, 160, 122], lightseagreen: [32, 178, 170], lightskyblue: [135, 206, 250], lightslategray: [119, 136, 153], lightslategrey: [119, 136, 153], lightsteelblue: [176, 196, 222], lightyellow: [255, 255, 224], lime: [0, 255, 0], limegreen: [50, 205, 50], linen: [250, 240, 230], magenta: [255, 0, 255], maroon: [128, 0, 0], mediumaquamarine: [102, 205, 170], mediumblue: [0, 0, 205], mediumorchid: [186, 85, 211], mediumpurple: [147, 112, 219], mediumseagreen: [60, 179, 113], mediumslateblue: [123, 104, 238], mediumspringgreen: [0, 250, 154], mediumturquoise: [72, 209, 204], mediumvioletred: [199, 21, 133], midnightblue: [25, 25, 112], mintcream: [245, 255, 250], mistyrose: [255, 228, 225], moccasin: [255, 228, 181], navajowhite: [255, 222, 173], navy: [0, 0, 128], oldlace: [253, 245, 230], olive: [128, 128, 0], olivedrab: [107, 142, 35], orange: [255, 165, 0], orangered: [255, 69, 0], orchid: [218, 112, 214], palegoldenrod: [238, 232, 170], palegreen: [152, 251, 152], paleturquoise: [175, 238, 238], palevioletred: [219, 112, 147], papayawhip: [255, 239, 213], peachpuff: [255, 218, 185], peru: [205, 133, 63], pink: [255, 192, 203], plum: [221, 160, 221], powderblue: [176, 224, 230], purple: [128, 0, 128], rebeccapurple: [102, 51, 153], red: [255, 0, 0], rosybrown: [188, 143, 143], royalblue: [65, 105, 225], saddlebrown: [139, 69, 19], salmon: [250, 128, 114], sandybrown: [244, 164, 96], seagreen: [46, 139, 87], seashell: [255, 245, 238], sienna: [160, 82, 45], silver: [192, 192, 192], skyblue: [135, 206, 235], slateblue: [106, 90, 205], slategray: [112, 128, 144], slategrey: [112, 128, 144], snow: [255, 250, 250], springgreen: [0, 255, 127], steelblue: [70, 130, 180], tan: [210, 180, 140], teal: [0, 128, 128], thistle: [216, 191, 216], tomato: [255, 99, 71], turquoise: [64, 224, 208], violet: [238, 130, 238], wheat: [245, 222, 179], white: [255, 255, 255], whitesmoke: [245, 245, 245], yellow: [255, 255, 0], yellowgreen: [154, 205, 50] }, g = { getRgba: m, getHsla: v, getRgb: y, getHsl: x, getHwb: b, getAlpha: _, hexString: w, rgbString: S, rgbaString: C, percentString: k, percentaString: D, hslString: T, hslaString: E, hwbString: A, keyword: I };
        function m(t4) {
          if (t4) {
            var e4 = /^#([a-fA-F0-9]{3,4})$/i, n4 = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i, i2 = /^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i, a2 = /^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i, r2 = /(\w+)/, o2 = [0, 0, 0], s2 = 1, l2 = t4.match(e4), c2 = "";
            if (l2) {
              c2 = (l2 = l2[1])[3];
              for (var d2 = 0; d2 < o2.length; d2++)
                o2[d2] = parseInt(l2[d2] + l2[d2], 16);
              c2 && (s2 = Math.round(parseInt(c2 + c2, 16) / 255 * 100) / 100);
            } else if (l2 = t4.match(n4)) {
              for (c2 = l2[2], l2 = l2[1], d2 = 0; d2 < o2.length; d2++)
                o2[d2] = parseInt(l2.slice(2 * d2, 2 * d2 + 2), 16);
              c2 && (s2 = Math.round(parseInt(c2, 16) / 255 * 100) / 100);
            } else if (l2 = t4.match(i2)) {
              for (d2 = 0; d2 < o2.length; d2++)
                o2[d2] = parseInt(l2[d2 + 1]);
              s2 = parseFloat(l2[4]);
            } else if (l2 = t4.match(a2)) {
              for (d2 = 0; d2 < o2.length; d2++)
                o2[d2] = Math.round(2.55 * parseFloat(l2[d2 + 1]));
              s2 = parseFloat(l2[4]);
            } else if (l2 = t4.match(r2)) {
              if (l2[1] == "transparent")
                return [0, 0, 0, 0];
              if (!(o2 = f[l2[1]]))
                return;
            }
            for (d2 = 0; d2 < o2.length; d2++)
              o2[d2] = M(o2[d2], 0, 255);
            return s2 = s2 || s2 == 0 ? M(s2, 0, 1) : 1, o2[3] = s2, o2;
          }
        }
        function v(t4) {
          if (t4) {
            var e4 = /^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/, n4 = t4.match(e4);
            if (n4) {
              var i2 = parseFloat(n4[4]);
              return [M(parseInt(n4[1]), 0, 360), M(parseFloat(n4[2]), 0, 100), M(parseFloat(n4[3]), 0, 100), M(isNaN(i2) ? 1 : i2, 0, 1)];
            }
          }
        }
        function b(t4) {
          if (t4) {
            var e4 = /^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/, n4 = t4.match(e4);
            if (n4) {
              var i2 = parseFloat(n4[4]);
              return [M(parseInt(n4[1]), 0, 360), M(parseFloat(n4[2]), 0, 100), M(parseFloat(n4[3]), 0, 100), M(isNaN(i2) ? 1 : i2, 0, 1)];
            }
          }
        }
        function y(t4) {
          var e4 = m(t4);
          return e4 && e4.slice(0, 3);
        }
        function x(t4) {
          var e4 = v(t4);
          return e4 && e4.slice(0, 3);
        }
        function _(t4) {
          var e4 = m(t4);
          return e4 || (e4 = v(t4)) || (e4 = b(t4)) ? e4[3] : void 0;
        }
        function w(t4, e4) {
          return e4 = e4 !== void 0 && t4.length === 3 ? e4 : t4[3], "#" + R(t4[0]) + R(t4[1]) + R(t4[2]) + (e4 >= 0 && e4 < 1 ? R(Math.round(255 * e4)) : "");
        }
        function S(t4, e4) {
          return e4 < 1 || t4[3] && t4[3] < 1 ? C(t4, e4) : "rgb(" + t4[0] + ", " + t4[1] + ", " + t4[2] + ")";
        }
        function C(t4, e4) {
          return e4 === void 0 && (e4 = t4[3] !== void 0 ? t4[3] : 1), "rgba(" + t4[0] + ", " + t4[1] + ", " + t4[2] + ", " + e4 + ")";
        }
        function k(t4, e4) {
          return e4 < 1 || t4[3] && t4[3] < 1 ? D(t4, e4) : "rgb(" + Math.round(t4[0] / 255 * 100) + "%, " + Math.round(t4[1] / 255 * 100) + "%, " + Math.round(t4[2] / 255 * 100) + "%)";
        }
        function D(t4, e4) {
          return "rgba(" + Math.round(t4[0] / 255 * 100) + "%, " + Math.round(t4[1] / 255 * 100) + "%, " + Math.round(t4[2] / 255 * 100) + "%, " + (e4 || t4[3] || 1) + ")";
        }
        function T(t4, e4) {
          return e4 < 1 || t4[3] && t4[3] < 1 ? E(t4, e4) : "hsl(" + t4[0] + ", " + t4[1] + "%, " + t4[2] + "%)";
        }
        function E(t4, e4) {
          return e4 === void 0 && (e4 = t4[3] !== void 0 ? t4[3] : 1), "hsla(" + t4[0] + ", " + t4[1] + "%, " + t4[2] + "%, " + e4 + ")";
        }
        function A(t4, e4) {
          return e4 === void 0 && (e4 = t4[3] !== void 0 ? t4[3] : 1), "hwb(" + t4[0] + ", " + t4[1] + "%, " + t4[2] + "%" + (e4 !== void 0 && e4 !== 1 ? ", " + e4 : "") + ")";
        }
        function I(t4) {
          return P[t4.slice(0, 3)];
        }
        function M(t4, e4, n4) {
          return Math.min(Math.max(e4, t4), n4);
        }
        function R(t4) {
          var e4 = t4.toString(16).toUpperCase();
          return e4.length < 2 ? "0" + e4 : e4;
        }
        var P = {};
        for (var O in f)
          P[f[O]] = O;
        var j = function(t4) {
          return t4 instanceof j ? t4 : this instanceof j ? (this.valid = false, this.values = { rgb: [0, 0, 0], hsl: [0, 0, 0], hsv: [0, 0, 0], hwb: [0, 0, 0], cmyk: [0, 0, 0, 0], alpha: 1 }, void (typeof t4 == "string" ? (e4 = g.getRgba(t4)) ? this.setValues("rgb", e4) : (e4 = g.getHsla(t4)) ? this.setValues("hsl", e4) : (e4 = g.getHwb(t4)) && this.setValues("hwb", e4) : typeof t4 == "object" && ((e4 = t4).r !== void 0 || e4.red !== void 0 ? this.setValues("rgb", e4) : e4.l !== void 0 || e4.lightness !== void 0 ? this.setValues("hsl", e4) : e4.v !== void 0 || e4.value !== void 0 ? this.setValues("hsv", e4) : e4.w !== void 0 || e4.whiteness !== void 0 ? this.setValues("hwb", e4) : e4.c === void 0 && e4.cyan === void 0 || this.setValues("cmyk", e4)))) : new j(t4);
          var e4;
        };
        j.prototype = { isValid: function() {
          return this.valid;
        }, rgb: function() {
          return this.setSpace("rgb", arguments);
        }, hsl: function() {
          return this.setSpace("hsl", arguments);
        }, hsv: function() {
          return this.setSpace("hsv", arguments);
        }, hwb: function() {
          return this.setSpace("hwb", arguments);
        }, cmyk: function() {
          return this.setSpace("cmyk", arguments);
        }, rgbArray: function() {
          return this.values.rgb;
        }, hslArray: function() {
          return this.values.hsl;
        }, hsvArray: function() {
          return this.values.hsv;
        }, hwbArray: function() {
          var t4 = this.values;
          return t4.alpha !== 1 ? t4.hwb.concat([t4.alpha]) : t4.hwb;
        }, cmykArray: function() {
          return this.values.cmyk;
        }, rgbaArray: function() {
          var t4 = this.values;
          return t4.rgb.concat([t4.alpha]);
        }, hslaArray: function() {
          var t4 = this.values;
          return t4.hsl.concat([t4.alpha]);
        }, alpha: function(t4) {
          return t4 === void 0 ? this.values.alpha : (this.setValues("alpha", t4), this);
        }, red: function(t4) {
          return this.setChannel("rgb", 0, t4);
        }, green: function(t4) {
          return this.setChannel("rgb", 1, t4);
        }, blue: function(t4) {
          return this.setChannel("rgb", 2, t4);
        }, hue: function(t4) {
          return t4 && (t4 = (t4 %= 360) < 0 ? 360 + t4 : t4), this.setChannel("hsl", 0, t4);
        }, saturation: function(t4) {
          return this.setChannel("hsl", 1, t4);
        }, lightness: function(t4) {
          return this.setChannel("hsl", 2, t4);
        }, saturationv: function(t4) {
          return this.setChannel("hsv", 1, t4);
        }, whiteness: function(t4) {
          return this.setChannel("hwb", 1, t4);
        }, blackness: function(t4) {
          return this.setChannel("hwb", 2, t4);
        }, value: function(t4) {
          return this.setChannel("hsv", 2, t4);
        }, cyan: function(t4) {
          return this.setChannel("cmyk", 0, t4);
        }, magenta: function(t4) {
          return this.setChannel("cmyk", 1, t4);
        }, yellow: function(t4) {
          return this.setChannel("cmyk", 2, t4);
        }, black: function(t4) {
          return this.setChannel("cmyk", 3, t4);
        }, hexString: function() {
          return g.hexString(this.values.rgb);
        }, rgbString: function() {
          return g.rgbString(this.values.rgb, this.values.alpha);
        }, rgbaString: function() {
          return g.rgbaString(this.values.rgb, this.values.alpha);
        }, percentString: function() {
          return g.percentString(this.values.rgb, this.values.alpha);
        }, hslString: function() {
          return g.hslString(this.values.hsl, this.values.alpha);
        }, hslaString: function() {
          return g.hslaString(this.values.hsl, this.values.alpha);
        }, hwbString: function() {
          return g.hwbString(this.values.hwb, this.values.alpha);
        }, keyword: function() {
          return g.keyword(this.values.rgb, this.values.alpha);
        }, rgbNumber: function() {
          var t4 = this.values.rgb;
          return t4[0] << 16 | t4[1] << 8 | t4[2];
        }, luminosity: function() {
          for (var t4 = this.values.rgb, e4 = [], n4 = 0; n4 < t4.length; n4++) {
            var i2 = t4[n4] / 255;
            e4[n4] = i2 <= 0.03928 ? i2 / 12.92 : Math.pow((i2 + 0.055) / 1.055, 2.4);
          }
          return 0.2126 * e4[0] + 0.7152 * e4[1] + 0.0722 * e4[2];
        }, contrast: function(t4) {
          var e4 = this.luminosity(), n4 = t4.luminosity();
          return e4 > n4 ? (e4 + 0.05) / (n4 + 0.05) : (n4 + 0.05) / (e4 + 0.05);
        }, level: function(t4) {
          var e4 = this.contrast(t4);
          return e4 >= 7.1 ? "AAA" : e4 >= 4.5 ? "AA" : "";
        }, dark: function() {
          var t4 = this.values.rgb;
          return (299 * t4[0] + 587 * t4[1] + 114 * t4[2]) / 1e3 < 128;
        }, light: function() {
          return !this.dark();
        }, negate: function() {
          for (var t4 = [], e4 = 0; e4 < 3; e4++)
            t4[e4] = 255 - this.values.rgb[e4];
          return this.setValues("rgb", t4), this;
        }, lighten: function(t4) {
          var e4 = this.values.hsl;
          return e4[2] += e4[2] * t4, this.setValues("hsl", e4), this;
        }, darken: function(t4) {
          var e4 = this.values.hsl;
          return e4[2] -= e4[2] * t4, this.setValues("hsl", e4), this;
        }, saturate: function(t4) {
          var e4 = this.values.hsl;
          return e4[1] += e4[1] * t4, this.setValues("hsl", e4), this;
        }, desaturate: function(t4) {
          var e4 = this.values.hsl;
          return e4[1] -= e4[1] * t4, this.setValues("hsl", e4), this;
        }, whiten: function(t4) {
          var e4 = this.values.hwb;
          return e4[1] += e4[1] * t4, this.setValues("hwb", e4), this;
        }, blacken: function(t4) {
          var e4 = this.values.hwb;
          return e4[2] += e4[2] * t4, this.setValues("hwb", e4), this;
        }, greyscale: function() {
          var t4 = this.values.rgb, e4 = 0.3 * t4[0] + 0.59 * t4[1] + 0.11 * t4[2];
          return this.setValues("rgb", [e4, e4, e4]), this;
        }, clearer: function(t4) {
          var e4 = this.values.alpha;
          return this.setValues("alpha", e4 - e4 * t4), this;
        }, opaquer: function(t4) {
          var e4 = this.values.alpha;
          return this.setValues("alpha", e4 + e4 * t4), this;
        }, rotate: function(t4) {
          var e4 = this.values.hsl, n4 = (e4[0] + t4) % 360;
          return e4[0] = n4 < 0 ? 360 + n4 : n4, this.setValues("hsl", e4), this;
        }, mix: function(t4, e4) {
          var n4 = this, i2 = t4, a2 = e4 === void 0 ? 0.5 : e4, r2 = 2 * a2 - 1, o2 = n4.alpha() - i2.alpha(), s2 = ((r2 * o2 == -1 ? r2 : (r2 + o2) / (1 + r2 * o2)) + 1) / 2, l2 = 1 - s2;
          return this.rgb(s2 * n4.red() + l2 * i2.red(), s2 * n4.green() + l2 * i2.green(), s2 * n4.blue() + l2 * i2.blue()).alpha(n4.alpha() * a2 + i2.alpha() * (1 - a2));
        }, toJSON: function() {
          return this.rgb();
        }, clone: function() {
          var t4, e4, n4 = new j(), i2 = this.values, a2 = n4.values;
          for (var r2 in i2)
            i2.hasOwnProperty(r2) && (t4 = i2[r2], (e4 = {}.toString.call(t4)) === "[object Array]" ? a2[r2] = t4.slice(0) : e4 === "[object Number]" ? a2[r2] = t4 : console.error("unexpected color value:", t4));
          return n4;
        } }, j.prototype.spaces = { rgb: ["red", "green", "blue"], hsl: ["hue", "saturation", "lightness"], hsv: ["hue", "saturation", "value"], hwb: ["hue", "whiteness", "blackness"], cmyk: ["cyan", "magenta", "yellow", "black"] }, j.prototype.maxes = { rgb: [255, 255, 255], hsl: [360, 100, 100], hsv: [360, 100, 100], hwb: [360, 100, 100], cmyk: [100, 100, 100, 100] }, j.prototype.getValues = function(t4) {
          for (var e4 = this.values, n4 = {}, i2 = 0; i2 < t4.length; i2++)
            n4[t4.charAt(i2)] = e4[t4][i2];
          return e4.alpha !== 1 && (n4.a = e4.alpha), n4;
        }, j.prototype.setValues = function(t4, e4) {
          var n4, i2, a2 = this.values, r2 = this.spaces, o2 = this.maxes, s2 = 1;
          if (this.valid = true, t4 === "alpha")
            s2 = e4;
          else if (e4.length)
            a2[t4] = e4.slice(0, t4.length), s2 = e4[t4.length];
          else if (e4[t4.charAt(0)] !== void 0) {
            for (n4 = 0; n4 < t4.length; n4++)
              a2[t4][n4] = e4[t4.charAt(n4)];
            s2 = e4.a;
          } else if (e4[r2[t4][0]] !== void 0) {
            var l2 = r2[t4];
            for (n4 = 0; n4 < t4.length; n4++)
              a2[t4][n4] = e4[l2[n4]];
            s2 = e4.alpha;
          }
          if (a2.alpha = Math.max(0, Math.min(1, s2 === void 0 ? a2.alpha : s2)), t4 === "alpha")
            return false;
          for (n4 = 0; n4 < t4.length; n4++)
            i2 = Math.max(0, Math.min(o2[t4][n4], a2[t4][n4])), a2[t4][n4] = Math.round(i2);
          for (var c2 in r2)
            c2 !== t4 && (a2[c2] = p[t4][c2](a2[t4]));
          return true;
        }, j.prototype.setSpace = function(t4, e4) {
          var n4 = e4[0];
          return n4 === void 0 ? this.getValues(t4) : (typeof n4 == "number" && (n4 = Array.prototype.slice.call(e4)), this.setValues(t4, n4), this);
        }, j.prototype.setChannel = function(t4, e4, n4) {
          var i2 = this.values[t4];
          return n4 === void 0 ? i2[e4] : (n4 === i2[e4] || (i2[e4] = n4, this.setValues(t4, i2)), this);
        }, typeof window != "undefined" && (window.Color = j);
        var N = j;
        function L(t4) {
          return ["__proto__", "prototype", "constructor"].indexOf(t4) === -1;
        }
        var F, H = { noop: function() {
        }, uid: (F = 0, function() {
          return F++;
        }), isNullOrUndef: function(t4) {
          return t4 == null;
        }, isArray: function(t4) {
          if (Array.isArray && Array.isArray(t4))
            return true;
          var e4 = Object.prototype.toString.call(t4);
          return e4.substr(0, 7) === "[object" && e4.substr(-6) === "Array]";
        }, isObject: function(t4) {
          return t4 !== null && Object.prototype.toString.call(t4) === "[object Object]";
        }, isFinite: function(t4) {
          return (typeof t4 == "number" || t4 instanceof Number) && isFinite(t4);
        }, valueOrDefault: function(t4, e4) {
          return t4 === void 0 ? e4 : t4;
        }, valueAtIndexOrDefault: function(t4, e4, n4) {
          return H.valueOrDefault(H.isArray(t4) ? t4[e4] : t4, n4);
        }, callback: function(t4, e4, n4) {
          if (t4 && typeof t4.call == "function")
            return t4.apply(n4, e4);
        }, each: function(t4, e4, n4, i2) {
          var a2, r2, o2;
          if (H.isArray(t4))
            if (r2 = t4.length, i2)
              for (a2 = r2 - 1; a2 >= 0; a2--)
                e4.call(n4, t4[a2], a2);
            else
              for (a2 = 0; a2 < r2; a2++)
                e4.call(n4, t4[a2], a2);
          else if (H.isObject(t4))
            for (r2 = (o2 = Object.keys(t4)).length, a2 = 0; a2 < r2; a2++)
              e4.call(n4, t4[o2[a2]], o2[a2]);
        }, arrayEquals: function(t4, e4) {
          var n4, i2, a2, r2;
          if (!t4 || !e4 || t4.length !== e4.length)
            return false;
          for (n4 = 0, i2 = t4.length; n4 < i2; ++n4)
            if (a2 = t4[n4], r2 = e4[n4], a2 instanceof Array && r2 instanceof Array) {
              if (!H.arrayEquals(a2, r2))
                return false;
            } else if (a2 !== r2)
              return false;
          return true;
        }, clone: function(t4) {
          if (H.isArray(t4))
            return t4.map(H.clone);
          if (H.isObject(t4)) {
            for (var e4 = Object.create(t4), n4 = Object.keys(t4), i2 = n4.length, a2 = 0; a2 < i2; ++a2)
              e4[n4[a2]] = H.clone(t4[n4[a2]]);
            return e4;
          }
          return t4;
        }, _merger: function(t4, e4, n4, i2) {
          if (L(t4)) {
            var a2 = e4[t4], r2 = n4[t4];
            H.isObject(a2) && H.isObject(r2) ? H.merge(a2, r2, i2) : e4[t4] = H.clone(r2);
          }
        }, _mergerIf: function(t4, e4, n4) {
          if (L(t4)) {
            var i2 = e4[t4], a2 = n4[t4];
            H.isObject(i2) && H.isObject(a2) ? H.mergeIf(i2, a2) : e4.hasOwnProperty(t4) || (e4[t4] = H.clone(a2));
          }
        }, merge: function(t4, e4, n4) {
          var i2, a2, r2, o2, s2, l2 = H.isArray(e4) ? e4 : [e4], c2 = l2.length;
          if (!H.isObject(t4))
            return t4;
          for (i2 = (n4 = n4 || {}).merger || H._merger, a2 = 0; a2 < c2; ++a2)
            if (e4 = l2[a2], H.isObject(e4))
              for (s2 = 0, o2 = (r2 = Object.keys(e4)).length; s2 < o2; ++s2)
                i2(r2[s2], t4, e4, n4);
          return t4;
        }, mergeIf: function(t4, e4) {
          return H.merge(t4, e4, { merger: H._mergerIf });
        }, extend: Object.assign || function(t4) {
          return H.merge(t4, [].slice.call(arguments, 1), { merger: function(t5, e4, n4) {
            e4[t5] = n4[t5];
          } });
        }, inherits: function(t4) {
          var e4 = this, n4 = t4 && t4.hasOwnProperty("constructor") ? t4.constructor : function() {
            return e4.apply(this, arguments);
          }, i2 = function() {
            this.constructor = n4;
          };
          return i2.prototype = e4.prototype, n4.prototype = new i2(), n4.extend = H.inherits, t4 && H.extend(n4.prototype, t4), n4.__super__ = e4.prototype, n4;
        }, _deprecated: function(t4, e4, n4, i2) {
          e4 !== void 0 && console.warn(t4 + ': "' + n4 + '" is deprecated. Please use "' + i2 + '" instead');
        } }, B = H;
        H.callCallback = H.callback, H.indexOf = function(t4, e4, n4) {
          return Array.prototype.indexOf.call(t4, e4, n4);
        }, H.getValueOrDefault = H.valueOrDefault, H.getValueAtIndexOrDefault = H.valueAtIndexOrDefault;
        var q = { linear: function(t4) {
          return t4;
        }, easeInQuad: function(t4) {
          return t4 * t4;
        }, easeOutQuad: function(t4) {
          return -t4 * (t4 - 2);
        }, easeInOutQuad: function(t4) {
          return (t4 /= 0.5) < 1 ? 0.5 * t4 * t4 : -0.5 * (--t4 * (t4 - 2) - 1);
        }, easeInCubic: function(t4) {
          return t4 * t4 * t4;
        }, easeOutCubic: function(t4) {
          return (t4 -= 1) * t4 * t4 + 1;
        }, easeInOutCubic: function(t4) {
          return (t4 /= 0.5) < 1 ? 0.5 * t4 * t4 * t4 : 0.5 * ((t4 -= 2) * t4 * t4 + 2);
        }, easeInQuart: function(t4) {
          return t4 * t4 * t4 * t4;
        }, easeOutQuart: function(t4) {
          return -((t4 -= 1) * t4 * t4 * t4 - 1);
        }, easeInOutQuart: function(t4) {
          return (t4 /= 0.5) < 1 ? 0.5 * t4 * t4 * t4 * t4 : -0.5 * ((t4 -= 2) * t4 * t4 * t4 - 2);
        }, easeInQuint: function(t4) {
          return t4 * t4 * t4 * t4 * t4;
        }, easeOutQuint: function(t4) {
          return (t4 -= 1) * t4 * t4 * t4 * t4 + 1;
        }, easeInOutQuint: function(t4) {
          return (t4 /= 0.5) < 1 ? 0.5 * t4 * t4 * t4 * t4 * t4 : 0.5 * ((t4 -= 2) * t4 * t4 * t4 * t4 + 2);
        }, easeInSine: function(t4) {
          return 1 - Math.cos(t4 * (Math.PI / 2));
        }, easeOutSine: function(t4) {
          return Math.sin(t4 * (Math.PI / 2));
        }, easeInOutSine: function(t4) {
          return -0.5 * (Math.cos(Math.PI * t4) - 1);
        }, easeInExpo: function(t4) {
          return t4 === 0 ? 0 : Math.pow(2, 10 * (t4 - 1));
        }, easeOutExpo: function(t4) {
          return t4 === 1 ? 1 : 1 - Math.pow(2, -10 * t4);
        }, easeInOutExpo: function(t4) {
          return t4 === 0 ? 0 : t4 === 1 ? 1 : (t4 /= 0.5) < 1 ? 0.5 * Math.pow(2, 10 * (t4 - 1)) : 0.5 * (2 - Math.pow(2, -10 * --t4));
        }, easeInCirc: function(t4) {
          return t4 >= 1 ? t4 : -(Math.sqrt(1 - t4 * t4) - 1);
        }, easeOutCirc: function(t4) {
          return Math.sqrt(1 - (t4 -= 1) * t4);
        }, easeInOutCirc: function(t4) {
          return (t4 /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t4 * t4) - 1) : 0.5 * (Math.sqrt(1 - (t4 -= 2) * t4) + 1);
        }, easeInElastic: function(t4) {
          var e4 = 1.70158, n4 = 0, i2 = 1;
          return t4 === 0 ? 0 : t4 === 1 ? 1 : (n4 || (n4 = 0.3), i2 < 1 ? (i2 = 1, e4 = n4 / 4) : e4 = n4 / (2 * Math.PI) * Math.asin(1 / i2), -i2 * Math.pow(2, 10 * (t4 -= 1)) * Math.sin((t4 - e4) * (2 * Math.PI) / n4));
        }, easeOutElastic: function(t4) {
          var e4 = 1.70158, n4 = 0, i2 = 1;
          return t4 === 0 ? 0 : t4 === 1 ? 1 : (n4 || (n4 = 0.3), i2 < 1 ? (i2 = 1, e4 = n4 / 4) : e4 = n4 / (2 * Math.PI) * Math.asin(1 / i2), i2 * Math.pow(2, -10 * t4) * Math.sin((t4 - e4) * (2 * Math.PI) / n4) + 1);
        }, easeInOutElastic: function(t4) {
          var e4 = 1.70158, n4 = 0, i2 = 1;
          return t4 === 0 ? 0 : (t4 /= 0.5) == 2 ? 1 : (n4 || (n4 = 0.45), i2 < 1 ? (i2 = 1, e4 = n4 / 4) : e4 = n4 / (2 * Math.PI) * Math.asin(1 / i2), t4 < 1 ? i2 * Math.pow(2, 10 * (t4 -= 1)) * Math.sin((t4 - e4) * (2 * Math.PI) / n4) * -0.5 : i2 * Math.pow(2, -10 * (t4 -= 1)) * Math.sin((t4 - e4) * (2 * Math.PI) / n4) * 0.5 + 1);
        }, easeInBack: function(t4) {
          var e4 = 1.70158;
          return t4 * t4 * ((e4 + 1) * t4 - e4);
        }, easeOutBack: function(t4) {
          var e4 = 1.70158;
          return (t4 -= 1) * t4 * ((e4 + 1) * t4 + e4) + 1;
        }, easeInOutBack: function(t4) {
          var e4 = 1.70158;
          return (t4 /= 0.5) < 1 ? t4 * t4 * ((1 + (e4 *= 1.525)) * t4 - e4) * 0.5 : 0.5 * ((t4 -= 2) * t4 * ((1 + (e4 *= 1.525)) * t4 + e4) + 2);
        }, easeInBounce: function(t4) {
          return 1 - q.easeOutBounce(1 - t4);
        }, easeOutBounce: function(t4) {
          return t4 < 1 / 2.75 ? 7.5625 * t4 * t4 : t4 < 2 / 2.75 ? 7.5625 * (t4 -= 1.5 / 2.75) * t4 + 0.75 : t4 < 2.5 / 2.75 ? 7.5625 * (t4 -= 2.25 / 2.75) * t4 + 0.9375 : 7.5625 * (t4 -= 2.625 / 2.75) * t4 + 0.984375;
        }, easeInOutBounce: function(t4) {
          return t4 < 0.5 ? 0.5 * q.easeInBounce(2 * t4) : 0.5 * q.easeOutBounce(2 * t4 - 1) + 0.5;
        } }, z = { effects: q };
        B.easingEffects = q;
        var W = Math.PI, $ = W / 180, V = 2 * W, Y = W / 2, U = W / 4, G = 2 * W / 3, X = { clear: function(t4) {
          t4.ctx.clearRect(0, 0, t4.width, t4.height);
        }, roundedRect: function(t4, e4, n4, i2, a2, r2) {
          if (r2) {
            var o2 = Math.min(r2, a2 / 2, i2 / 2), s2 = e4 + o2, l2 = n4 + o2, c2 = e4 + i2 - o2, d2 = n4 + a2 - o2;
            t4.moveTo(e4, l2), s2 < c2 && l2 < d2 ? (t4.arc(s2, l2, o2, -W, -Y), t4.arc(c2, l2, o2, -Y, 0), t4.arc(c2, d2, o2, 0, Y), t4.arc(s2, d2, o2, Y, W)) : s2 < c2 ? (t4.moveTo(s2, n4), t4.arc(c2, l2, o2, -Y, Y), t4.arc(s2, l2, o2, Y, W + Y)) : l2 < d2 ? (t4.arc(s2, l2, o2, -W, 0), t4.arc(s2, d2, o2, 0, W)) : t4.arc(s2, l2, o2, -W, W), t4.closePath(), t4.moveTo(e4, n4);
          } else
            t4.rect(e4, n4, i2, a2);
        }, drawPoint: function(t4, e4, n4, i2, a2, r2) {
          var o2, s2, l2, c2, d2, u2 = (r2 || 0) * $;
          if (e4 && typeof e4 == "object" && ((o2 = e4.toString()) === "[object HTMLImageElement]" || o2 === "[object HTMLCanvasElement]"))
            return t4.save(), t4.translate(i2, a2), t4.rotate(u2), t4.drawImage(e4, -e4.width / 2, -e4.height / 2, e4.width, e4.height), void t4.restore();
          if (!(isNaN(n4) || n4 <= 0)) {
            switch (t4.beginPath(), e4) {
              default:
                t4.arc(i2, a2, n4, 0, V), t4.closePath();
                break;
              case "triangle":
                t4.moveTo(i2 + Math.sin(u2) * n4, a2 - Math.cos(u2) * n4), u2 += G, t4.lineTo(i2 + Math.sin(u2) * n4, a2 - Math.cos(u2) * n4), u2 += G, t4.lineTo(i2 + Math.sin(u2) * n4, a2 - Math.cos(u2) * n4), t4.closePath();
                break;
              case "rectRounded":
                c2 = n4 - (d2 = 0.516 * n4), s2 = Math.cos(u2 + U) * c2, l2 = Math.sin(u2 + U) * c2, t4.arc(i2 - s2, a2 - l2, d2, u2 - W, u2 - Y), t4.arc(i2 + l2, a2 - s2, d2, u2 - Y, u2), t4.arc(i2 + s2, a2 + l2, d2, u2, u2 + Y), t4.arc(i2 - l2, a2 + s2, d2, u2 + Y, u2 + W), t4.closePath();
                break;
              case "rect":
                if (!r2) {
                  c2 = Math.SQRT1_2 * n4, t4.rect(i2 - c2, a2 - c2, 2 * c2, 2 * c2);
                  break;
                }
                u2 += U;
              case "rectRot":
                s2 = Math.cos(u2) * n4, l2 = Math.sin(u2) * n4, t4.moveTo(i2 - s2, a2 - l2), t4.lineTo(i2 + l2, a2 - s2), t4.lineTo(i2 + s2, a2 + l2), t4.lineTo(i2 - l2, a2 + s2), t4.closePath();
                break;
              case "crossRot":
                u2 += U;
              case "cross":
                s2 = Math.cos(u2) * n4, l2 = Math.sin(u2) * n4, t4.moveTo(i2 - s2, a2 - l2), t4.lineTo(i2 + s2, a2 + l2), t4.moveTo(i2 + l2, a2 - s2), t4.lineTo(i2 - l2, a2 + s2);
                break;
              case "star":
                s2 = Math.cos(u2) * n4, l2 = Math.sin(u2) * n4, t4.moveTo(i2 - s2, a2 - l2), t4.lineTo(i2 + s2, a2 + l2), t4.moveTo(i2 + l2, a2 - s2), t4.lineTo(i2 - l2, a2 + s2), u2 += U, s2 = Math.cos(u2) * n4, l2 = Math.sin(u2) * n4, t4.moveTo(i2 - s2, a2 - l2), t4.lineTo(i2 + s2, a2 + l2), t4.moveTo(i2 + l2, a2 - s2), t4.lineTo(i2 - l2, a2 + s2);
                break;
              case "line":
                s2 = Math.cos(u2) * n4, l2 = Math.sin(u2) * n4, t4.moveTo(i2 - s2, a2 - l2), t4.lineTo(i2 + s2, a2 + l2);
                break;
              case "dash":
                t4.moveTo(i2, a2), t4.lineTo(i2 + Math.cos(u2) * n4, a2 + Math.sin(u2) * n4);
            }
            t4.fill(), t4.stroke();
          }
        }, _isPointInArea: function(t4, e4) {
          var n4 = 1e-6;
          return t4.x > e4.left - n4 && t4.x < e4.right + n4 && t4.y > e4.top - n4 && t4.y < e4.bottom + n4;
        }, clipArea: function(t4, e4) {
          t4.save(), t4.beginPath(), t4.rect(e4.left, e4.top, e4.right - e4.left, e4.bottom - e4.top), t4.clip();
        }, unclipArea: function(t4) {
          t4.restore();
        }, lineTo: function(t4, e4, n4, i2) {
          var a2 = n4.steppedLine;
          if (a2) {
            if (a2 === "middle") {
              var r2 = (e4.x + n4.x) / 2;
              t4.lineTo(r2, i2 ? n4.y : e4.y), t4.lineTo(r2, i2 ? e4.y : n4.y);
            } else
              a2 === "after" && !i2 || a2 !== "after" && i2 ? t4.lineTo(e4.x, n4.y) : t4.lineTo(n4.x, e4.y);
            t4.lineTo(n4.x, n4.y);
          } else
            n4.tension ? t4.bezierCurveTo(i2 ? e4.controlPointPreviousX : e4.controlPointNextX, i2 ? e4.controlPointPreviousY : e4.controlPointNextY, i2 ? n4.controlPointNextX : n4.controlPointPreviousX, i2 ? n4.controlPointNextY : n4.controlPointPreviousY, n4.x, n4.y) : t4.lineTo(n4.x, n4.y);
        } }, Z = X;
        B.clear = X.clear, B.drawRoundedRectangle = function(t4) {
          t4.beginPath(), X.roundedRect.apply(X, arguments);
        };
        var K = { _set: function(t4, e4) {
          return B.merge(this[t4] || (this[t4] = {}), e4);
        } };
        K._set("global", { defaultColor: "rgba(0,0,0,0.1)", defaultFontColor: "#666", defaultFontFamily: "'Helvetica Neue', 'Helvetica', 'Arial', sans-serif", defaultFontSize: 12, defaultFontStyle: "normal", defaultLineHeight: 1.2, showLines: true });
        var Q = K, J = B.valueOrDefault;
        function tt(t4) {
          return !t4 || B.isNullOrUndef(t4.size) || B.isNullOrUndef(t4.family) ? null : (t4.style ? t4.style + " " : "") + (t4.weight ? t4.weight + " " : "") + t4.size + "px " + t4.family;
        }
        var et = { toLineHeight: function(t4, e4) {
          var n4 = ("" + t4).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);
          if (!n4 || n4[1] === "normal")
            return 1.2 * e4;
          switch (t4 = +n4[2], n4[3]) {
            case "px":
              return t4;
            case "%":
              t4 /= 100;
          }
          return e4 * t4;
        }, toPadding: function(t4) {
          var e4, n4, i2, a2;
          return B.isObject(t4) ? (e4 = +t4.top || 0, n4 = +t4.right || 0, i2 = +t4.bottom || 0, a2 = +t4.left || 0) : e4 = n4 = i2 = a2 = +t4 || 0, { top: e4, right: n4, bottom: i2, left: a2, height: e4 + i2, width: a2 + n4 };
        }, _parseFont: function(t4) {
          var e4 = Q.global, n4 = J(t4.fontSize, e4.defaultFontSize), i2 = { family: J(t4.fontFamily, e4.defaultFontFamily), lineHeight: B.options.toLineHeight(J(t4.lineHeight, e4.defaultLineHeight), n4), size: n4, style: J(t4.fontStyle, e4.defaultFontStyle), weight: null, string: "" };
          return i2.string = tt(i2), i2;
        }, resolve: function(t4, e4, n4, i2) {
          var a2, r2, o2, s2 = true;
          for (a2 = 0, r2 = t4.length; a2 < r2; ++a2)
            if ((o2 = t4[a2]) !== void 0 && (e4 !== void 0 && typeof o2 == "function" && (o2 = o2(e4), s2 = false), n4 !== void 0 && B.isArray(o2) && (o2 = o2[n4], s2 = false), o2 !== void 0))
              return i2 && !s2 && (i2.cacheable = false), o2;
        } }, nt = { _factorize: function(t4) {
          var e4, n4 = [], i2 = Math.sqrt(t4);
          for (e4 = 1; e4 < i2; e4++)
            t4 % e4 == 0 && (n4.push(e4), n4.push(t4 / e4));
          return i2 === (0 | i2) && n4.push(i2), n4.sort(function(t5, e5) {
            return t5 - e5;
          }).pop(), n4;
        }, log10: Math.log10 || function(t4) {
          var e4 = Math.log(t4) * Math.LOG10E, n4 = Math.round(e4);
          return t4 === Math.pow(10, n4) ? n4 : e4;
        } }, it = nt;
        B.log10 = nt.log10;
        var at = function(t4, e4) {
          return { x: function(n4) {
            return t4 + t4 + e4 - n4;
          }, setWidth: function(t5) {
            e4 = t5;
          }, textAlign: function(t5) {
            return t5 === "center" ? t5 : t5 === "right" ? "left" : "right";
          }, xPlus: function(t5, e5) {
            return t5 - e5;
          }, leftForLtr: function(t5, e5) {
            return t5 - e5;
          } };
        }, rt = function() {
          return { x: function(t4) {
            return t4;
          }, setWidth: function(t4) {
          }, textAlign: function(t4) {
            return t4;
          }, xPlus: function(t4, e4) {
            return t4 + e4;
          }, leftForLtr: function(t4, e4) {
            return t4;
          } };
        }, ot = function(t4, e4, n4) {
          return t4 ? at(e4, n4) : rt();
        }, st = B, lt = z, ct = Z, dt = et, ut = it, ht = { getRtlAdapter: ot, overrideTextDirection: function(t4, e4) {
          var n4, i2;
          e4 !== "ltr" && e4 !== "rtl" || (i2 = [(n4 = t4.canvas.style).getPropertyValue("direction"), n4.getPropertyPriority("direction")], n4.setProperty("direction", e4, "important"), t4.prevTextDirection = i2);
        }, restoreTextDirection: function(t4) {
          var e4 = t4.prevTextDirection;
          e4 !== void 0 && (delete t4.prevTextDirection, t4.canvas.style.setProperty("direction", e4[0], e4[1]));
        } };
        function pt(t4, e4, n4, i2) {
          var a2, r2, o2, s2, l2, c2, d2, u2, h2, p2 = Object.keys(n4);
          for (a2 = 0, r2 = p2.length; a2 < r2; ++a2)
            if (c2 = n4[o2 = p2[a2]], e4.hasOwnProperty(o2) || (e4[o2] = c2), (s2 = e4[o2]) !== c2 && o2[0] !== "_") {
              if (t4.hasOwnProperty(o2) || (t4[o2] = s2), (d2 = typeof c2) == typeof (l2 = t4[o2])) {
                if (d2 === "string") {
                  if ((u2 = N(l2)).valid && (h2 = N(c2)).valid) {
                    e4[o2] = h2.mix(u2, i2).rgbString();
                    continue;
                  }
                } else if (st.isFinite(l2) && st.isFinite(c2)) {
                  e4[o2] = l2 + (c2 - l2) * i2;
                  continue;
                }
              }
              e4[o2] = c2;
            }
        }
        st.easing = lt, st.canvas = ct, st.options = dt, st.math = ut, st.rtl = ht;
        var ft = function(t4) {
          st.extend(this, t4), this.initialize.apply(this, arguments);
        };
        st.extend(ft.prototype, { _type: void 0, initialize: function() {
          this.hidden = false;
        }, pivot: function() {
          var t4 = this;
          return t4._view || (t4._view = st.extend({}, t4._model)), t4._start = {}, t4;
        }, transition: function(t4) {
          var e4 = this, n4 = e4._model, i2 = e4._start, a2 = e4._view;
          return n4 && t4 !== 1 ? (a2 || (a2 = e4._view = {}), i2 || (i2 = e4._start = {}), pt(i2, a2, n4, t4), e4) : (e4._view = st.extend({}, n4), e4._start = null, e4);
        }, tooltipPosition: function() {
          return { x: this._model.x, y: this._model.y };
        }, hasValue: function() {
          return st.isNumber(this._model.x) && st.isNumber(this._model.y);
        } }), ft.extend = st.inherits;
        var gt = ft, mt = gt.extend({ chart: null, currentStep: 0, numSteps: 60, easing: "", render: null, onAnimationProgress: null, onAnimationComplete: null }), vt = mt;
        Object.defineProperty(mt.prototype, "animationObject", { get: function() {
          return this;
        } }), Object.defineProperty(mt.prototype, "chartInstance", { get: function() {
          return this.chart;
        }, set: function(t4) {
          this.chart = t4;
        } }), Q._set("global", { animation: { duration: 1e3, easing: "easeOutQuart", onProgress: st.noop, onComplete: st.noop } });
        var bt = { animations: [], request: null, addAnimation: function(t4, e4, n4, i2) {
          var a2, r2, o2 = this.animations;
          for (e4.chart = t4, e4.startTime = Date.now(), e4.duration = n4, i2 || (t4.animating = true), a2 = 0, r2 = o2.length; a2 < r2; ++a2)
            if (o2[a2].chart === t4)
              return void (o2[a2] = e4);
          o2.push(e4), o2.length === 1 && this.requestAnimationFrame();
        }, cancelAnimation: function(t4) {
          var e4 = st.findIndex(this.animations, function(e5) {
            return e5.chart === t4;
          });
          e4 !== -1 && (this.animations.splice(e4, 1), t4.animating = false);
        }, requestAnimationFrame: function() {
          var t4 = this;
          t4.request === null && (t4.request = st.requestAnimFrame.call(window, function() {
            t4.request = null, t4.startDigest();
          }));
        }, startDigest: function() {
          var t4 = this;
          t4.advance(), t4.animations.length > 0 && t4.requestAnimationFrame();
        }, advance: function() {
          for (var t4, e4, n4, i2, a2 = this.animations, r2 = 0; r2 < a2.length; )
            e4 = (t4 = a2[r2]).chart, n4 = t4.numSteps, i2 = Math.floor((Date.now() - t4.startTime) / t4.duration * n4) + 1, t4.currentStep = Math.min(i2, n4), st.callback(t4.render, [e4, t4], e4), st.callback(t4.onAnimationProgress, [t4], e4), t4.currentStep >= n4 ? (st.callback(t4.onAnimationComplete, [t4], e4), e4.animating = false, a2.splice(r2, 1)) : ++r2;
        } }, yt = st.options.resolve, xt = ["push", "pop", "shift", "splice", "unshift"];
        function _t(t4, e4) {
          t4._chartjs ? t4._chartjs.listeners.push(e4) : (Object.defineProperty(t4, "_chartjs", { configurable: true, enumerable: false, value: { listeners: [e4] } }), xt.forEach(function(e5) {
            var n4 = "onData" + e5.charAt(0).toUpperCase() + e5.slice(1), i2 = t4[e5];
            Object.defineProperty(t4, e5, { configurable: true, enumerable: false, value: function() {
              var e6 = Array.prototype.slice.call(arguments), a2 = i2.apply(this, e6);
              return st.each(t4._chartjs.listeners, function(t5) {
                typeof t5[n4] == "function" && t5[n4].apply(t5, e6);
              }), a2;
            } });
          }));
        }
        function wt(t4, e4) {
          var n4 = t4._chartjs;
          if (n4) {
            var i2 = n4.listeners, a2 = i2.indexOf(e4);
            a2 !== -1 && i2.splice(a2, 1), i2.length > 0 || (xt.forEach(function(e5) {
              delete t4[e5];
            }), delete t4._chartjs);
          }
        }
        var St = function(t4, e4) {
          this.initialize(t4, e4);
        };
        st.extend(St.prototype, { datasetElementType: null, dataElementType: null, _datasetElementOptions: ["backgroundColor", "borderCapStyle", "borderColor", "borderDash", "borderDashOffset", "borderJoinStyle", "borderWidth"], _dataElementOptions: ["backgroundColor", "borderColor", "borderWidth", "pointStyle"], initialize: function(t4, e4) {
          var n4 = this;
          n4.chart = t4, n4.index = e4, n4.linkScales(), n4.addElements(), n4._type = n4.getMeta().type;
        }, updateIndex: function(t4) {
          this.index = t4;
        }, linkScales: function() {
          var t4 = this, e4 = t4.getMeta(), n4 = t4.chart, i2 = n4.scales, a2 = t4.getDataset(), r2 = n4.options.scales;
          e4.xAxisID !== null && e4.xAxisID in i2 && !a2.xAxisID || (e4.xAxisID = a2.xAxisID || r2.xAxes[0].id), e4.yAxisID !== null && e4.yAxisID in i2 && !a2.yAxisID || (e4.yAxisID = a2.yAxisID || r2.yAxes[0].id);
        }, getDataset: function() {
          return this.chart.data.datasets[this.index];
        }, getMeta: function() {
          return this.chart.getDatasetMeta(this.index);
        }, getScaleForId: function(t4) {
          return this.chart.scales[t4];
        }, _getValueScaleId: function() {
          return this.getMeta().yAxisID;
        }, _getIndexScaleId: function() {
          return this.getMeta().xAxisID;
        }, _getValueScale: function() {
          return this.getScaleForId(this._getValueScaleId());
        }, _getIndexScale: function() {
          return this.getScaleForId(this._getIndexScaleId());
        }, reset: function() {
          this._update(true);
        }, destroy: function() {
          this._data && wt(this._data, this);
        }, createMetaDataset: function() {
          var t4 = this, e4 = t4.datasetElementType;
          return e4 && new e4({ _chart: t4.chart, _datasetIndex: t4.index });
        }, createMetaData: function(t4) {
          var e4 = this, n4 = e4.dataElementType;
          return n4 && new n4({ _chart: e4.chart, _datasetIndex: e4.index, _index: t4 });
        }, addElements: function() {
          var t4, e4, n4 = this, i2 = n4.getMeta(), a2 = n4.getDataset().data || [], r2 = i2.data;
          for (t4 = 0, e4 = a2.length; t4 < e4; ++t4)
            r2[t4] = r2[t4] || n4.createMetaData(t4);
          i2.dataset = i2.dataset || n4.createMetaDataset();
        }, addElementAndReset: function(t4) {
          var e4 = this.createMetaData(t4);
          this.getMeta().data.splice(t4, 0, e4), this.updateElement(e4, t4, true);
        }, buildOrUpdateElements: function() {
          var t4 = this, e4 = t4.getDataset(), n4 = e4.data || (e4.data = []);
          t4._data !== n4 && (t4._data && wt(t4._data, t4), n4 && Object.isExtensible(n4) && _t(n4, t4), t4._data = n4), t4.resyncElements();
        }, _configure: function() {
          var t4 = this;
          t4._config = st.merge(/* @__PURE__ */ Object.create(null), [t4.chart.options.datasets[t4._type], t4.getDataset()], { merger: function(t5, e4, n4) {
            t5 !== "_meta" && t5 !== "data" && st._merger(t5, e4, n4);
          } });
        }, _update: function(t4) {
          var e4 = this;
          e4._configure(), e4._cachedDataOpts = null, e4.update(t4);
        }, update: st.noop, transition: function(t4) {
          for (var e4 = this.getMeta(), n4 = e4.data || [], i2 = n4.length, a2 = 0; a2 < i2; ++a2)
            n4[a2].transition(t4);
          e4.dataset && e4.dataset.transition(t4);
        }, draw: function() {
          var t4 = this.getMeta(), e4 = t4.data || [], n4 = e4.length, i2 = 0;
          for (t4.dataset && t4.dataset.draw(); i2 < n4; ++i2)
            e4[i2].draw();
        }, getStyle: function(t4) {
          var e4, n4 = this, i2 = n4.getMeta(), a2 = i2.dataset;
          return n4._configure(), a2 && t4 === void 0 ? e4 = n4._resolveDatasetElementOptions(a2 || {}) : (t4 = t4 || 0, e4 = n4._resolveDataElementOptions(i2.data[t4] || {}, t4)), e4.fill !== false && e4.fill !== null || (e4.backgroundColor = e4.borderColor), e4;
        }, _resolveDatasetElementOptions: function(t4, e4) {
          var n4, i2, a2, r2, o2 = this, s2 = o2.chart, l2 = o2._config, c2 = t4.custom || {}, d2 = s2.options.elements[o2.datasetElementType.prototype._type] || {}, u2 = o2._datasetElementOptions, h2 = {}, p2 = { chart: s2, dataset: o2.getDataset(), datasetIndex: o2.index, hover: e4 };
          for (n4 = 0, i2 = u2.length; n4 < i2; ++n4)
            a2 = u2[n4], r2 = e4 ? "hover" + a2.charAt(0).toUpperCase() + a2.slice(1) : a2, h2[a2] = yt([c2[r2], l2[r2], d2[r2]], p2);
          return h2;
        }, _resolveDataElementOptions: function(t4, e4) {
          var n4 = this, i2 = t4 && t4.custom, a2 = n4._cachedDataOpts;
          if (a2 && !i2)
            return a2;
          var r2, o2, s2, l2, c2 = n4.chart, d2 = n4._config, u2 = c2.options.elements[n4.dataElementType.prototype._type] || {}, h2 = n4._dataElementOptions, p2 = {}, f2 = { chart: c2, dataIndex: e4, dataset: n4.getDataset(), datasetIndex: n4.index }, g2 = { cacheable: !i2 };
          if (i2 = i2 || {}, st.isArray(h2))
            for (o2 = 0, s2 = h2.length; o2 < s2; ++o2)
              p2[l2 = h2[o2]] = yt([i2[l2], d2[l2], u2[l2]], f2, e4, g2);
          else
            for (o2 = 0, s2 = (r2 = Object.keys(h2)).length; o2 < s2; ++o2)
              p2[l2 = r2[o2]] = yt([i2[l2], d2[h2[l2]], d2[l2], u2[l2]], f2, e4, g2);
          return g2.cacheable && (n4._cachedDataOpts = Object.freeze(p2)), p2;
        }, removeHoverStyle: function(t4) {
          st.merge(t4._model, t4.$previousStyle || {}), delete t4.$previousStyle;
        }, setHoverStyle: function(t4) {
          var e4 = this.chart.data.datasets[t4._datasetIndex], n4 = t4._index, i2 = t4.custom || {}, a2 = t4._model, r2 = st.getHoverColor;
          t4.$previousStyle = { backgroundColor: a2.backgroundColor, borderColor: a2.borderColor, borderWidth: a2.borderWidth }, a2.backgroundColor = yt([i2.hoverBackgroundColor, e4.hoverBackgroundColor, r2(a2.backgroundColor)], void 0, n4), a2.borderColor = yt([i2.hoverBorderColor, e4.hoverBorderColor, r2(a2.borderColor)], void 0, n4), a2.borderWidth = yt([i2.hoverBorderWidth, e4.hoverBorderWidth, a2.borderWidth], void 0, n4);
        }, _removeDatasetHoverStyle: function() {
          var t4 = this.getMeta().dataset;
          t4 && this.removeHoverStyle(t4);
        }, _setDatasetHoverStyle: function() {
          var t4, e4, n4, i2, a2, r2, o2 = this.getMeta().dataset, s2 = {};
          if (o2) {
            for (r2 = o2._model, a2 = this._resolveDatasetElementOptions(o2, true), t4 = 0, e4 = (i2 = Object.keys(a2)).length; t4 < e4; ++t4)
              s2[n4 = i2[t4]] = r2[n4], r2[n4] = a2[n4];
            o2.$previousStyle = s2;
          }
        }, resyncElements: function() {
          var t4 = this, e4 = t4.getMeta(), n4 = t4.getDataset().data, i2 = e4.data.length, a2 = n4.length;
          a2 < i2 ? e4.data.splice(a2, i2 - a2) : a2 > i2 && t4.insertElements(i2, a2 - i2);
        }, insertElements: function(t4, e4) {
          for (var n4 = 0; n4 < e4; ++n4)
            this.addElementAndReset(t4 + n4);
        }, onDataPush: function() {
          var t4 = arguments.length;
          this.insertElements(this.getDataset().data.length - t4, t4);
        }, onDataPop: function() {
          this.getMeta().data.pop();
        }, onDataShift: function() {
          this.getMeta().data.shift();
        }, onDataSplice: function(t4, e4) {
          this.getMeta().data.splice(t4, e4), this.insertElements(t4, arguments.length - 2);
        }, onDataUnshift: function() {
          this.insertElements(0, arguments.length);
        } }), St.extend = st.inherits;
        var Ct = St, kt = 2 * Math.PI;
        function Dt(t4, e4) {
          var n4 = e4.startAngle, i2 = e4.endAngle, a2 = e4.pixelMargin, r2 = a2 / e4.outerRadius, o2 = e4.x, s2 = e4.y;
          t4.beginPath(), t4.arc(o2, s2, e4.outerRadius, n4 - r2, i2 + r2), e4.innerRadius > a2 ? (r2 = a2 / e4.innerRadius, t4.arc(o2, s2, e4.innerRadius - a2, i2 + r2, n4 - r2, true)) : t4.arc(o2, s2, a2, i2 + Math.PI / 2, n4 - Math.PI / 2), t4.closePath(), t4.clip();
        }
        function Tt(t4, e4, n4, i2) {
          var a2, r2 = n4.endAngle;
          for (i2 && (n4.endAngle = n4.startAngle + kt, Dt(t4, n4), n4.endAngle = r2, n4.endAngle === n4.startAngle && n4.fullCircles && (n4.endAngle += kt, n4.fullCircles--)), t4.beginPath(), t4.arc(n4.x, n4.y, n4.innerRadius, n4.startAngle + kt, n4.startAngle, true), a2 = 0; a2 < n4.fullCircles; ++a2)
            t4.stroke();
          for (t4.beginPath(), t4.arc(n4.x, n4.y, e4.outerRadius, n4.startAngle, n4.startAngle + kt), a2 = 0; a2 < n4.fullCircles; ++a2)
            t4.stroke();
        }
        function Et(t4, e4, n4) {
          var i2 = e4.borderAlign === "inner";
          i2 ? (t4.lineWidth = 2 * e4.borderWidth, t4.lineJoin = "round") : (t4.lineWidth = e4.borderWidth, t4.lineJoin = "bevel"), n4.fullCircles && Tt(t4, e4, n4, i2), i2 && Dt(t4, n4), t4.beginPath(), t4.arc(n4.x, n4.y, e4.outerRadius, n4.startAngle, n4.endAngle), t4.arc(n4.x, n4.y, n4.innerRadius, n4.endAngle, n4.startAngle, true), t4.closePath(), t4.stroke();
        }
        Q._set("global", { elements: { arc: { backgroundColor: Q.global.defaultColor, borderColor: "#fff", borderWidth: 2, borderAlign: "center" } } });
        var At = gt.extend({ _type: "arc", inLabelRange: function(t4) {
          var e4 = this._view;
          return !!e4 && Math.pow(t4 - e4.x, 2) < Math.pow(e4.radius + e4.hoverRadius, 2);
        }, inRange: function(t4, e4) {
          var n4 = this._view;
          if (n4) {
            for (var i2 = st.getAngleFromPoint(n4, { x: t4, y: e4 }), a2 = i2.angle, r2 = i2.distance, o2 = n4.startAngle, s2 = n4.endAngle; s2 < o2; )
              s2 += kt;
            for (; a2 > s2; )
              a2 -= kt;
            for (; a2 < o2; )
              a2 += kt;
            var l2 = a2 >= o2 && a2 <= s2, c2 = r2 >= n4.innerRadius && r2 <= n4.outerRadius;
            return l2 && c2;
          }
          return false;
        }, getCenterPoint: function() {
          var t4 = this._view, e4 = (t4.startAngle + t4.endAngle) / 2, n4 = (t4.innerRadius + t4.outerRadius) / 2;
          return { x: t4.x + Math.cos(e4) * n4, y: t4.y + Math.sin(e4) * n4 };
        }, getArea: function() {
          var t4 = this._view;
          return Math.PI * ((t4.endAngle - t4.startAngle) / (2 * Math.PI)) * (Math.pow(t4.outerRadius, 2) - Math.pow(t4.innerRadius, 2));
        }, tooltipPosition: function() {
          var t4 = this._view, e4 = t4.startAngle + (t4.endAngle - t4.startAngle) / 2, n4 = (t4.outerRadius - t4.innerRadius) / 2 + t4.innerRadius;
          return { x: t4.x + Math.cos(e4) * n4, y: t4.y + Math.sin(e4) * n4 };
        }, draw: function() {
          var t4, e4 = this._chart.ctx, n4 = this._view, i2 = n4.borderAlign === "inner" ? 0.33 : 0, a2 = { x: n4.x, y: n4.y, innerRadius: n4.innerRadius, outerRadius: Math.max(n4.outerRadius - i2, 0), pixelMargin: i2, startAngle: n4.startAngle, endAngle: n4.endAngle, fullCircles: Math.floor(n4.circumference / kt) };
          if (e4.save(), e4.fillStyle = n4.backgroundColor, e4.strokeStyle = n4.borderColor, a2.fullCircles) {
            for (a2.endAngle = a2.startAngle + kt, e4.beginPath(), e4.arc(a2.x, a2.y, a2.outerRadius, a2.startAngle, a2.endAngle), e4.arc(a2.x, a2.y, a2.innerRadius, a2.endAngle, a2.startAngle, true), e4.closePath(), t4 = 0; t4 < a2.fullCircles; ++t4)
              e4.fill();
            a2.endAngle = a2.startAngle + n4.circumference % kt;
          }
          e4.beginPath(), e4.arc(a2.x, a2.y, a2.outerRadius, a2.startAngle, a2.endAngle), e4.arc(a2.x, a2.y, a2.innerRadius, a2.endAngle, a2.startAngle, true), e4.closePath(), e4.fill(), n4.borderWidth && Et(e4, n4, a2), e4.restore();
        } }), It = st.valueOrDefault, Mt = Q.global.defaultColor;
        Q._set("global", { elements: { line: { tension: 0.4, backgroundColor: Mt, borderWidth: 3, borderColor: Mt, borderCapStyle: "butt", borderDash: [], borderDashOffset: 0, borderJoinStyle: "miter", capBezierPoints: true, fill: true } } });
        var Rt = gt.extend({ _type: "line", draw: function() {
          var t4, e4, n4, i2 = this, a2 = i2._view, r2 = i2._chart.ctx, o2 = a2.spanGaps, s2 = i2._children.slice(), l2 = Q.global, c2 = l2.elements.line, d2 = -1, u2 = i2._loop;
          if (s2.length) {
            if (i2._loop) {
              for (t4 = 0; t4 < s2.length; ++t4)
                if (e4 = st.previousItem(s2, t4), !s2[t4]._view.skip && e4._view.skip) {
                  s2 = s2.slice(t4).concat(s2.slice(0, t4)), u2 = o2;
                  break;
                }
              u2 && s2.push(s2[0]);
            }
            for (r2.save(), r2.lineCap = a2.borderCapStyle || c2.borderCapStyle, r2.setLineDash && r2.setLineDash(a2.borderDash || c2.borderDash), r2.lineDashOffset = It(a2.borderDashOffset, c2.borderDashOffset), r2.lineJoin = a2.borderJoinStyle || c2.borderJoinStyle, r2.lineWidth = It(a2.borderWidth, c2.borderWidth), r2.strokeStyle = a2.borderColor || l2.defaultColor, r2.beginPath(), (n4 = s2[0]._view).skip || (r2.moveTo(n4.x, n4.y), d2 = 0), t4 = 1; t4 < s2.length; ++t4)
              n4 = s2[t4]._view, e4 = d2 === -1 ? st.previousItem(s2, t4) : s2[d2], n4.skip || (d2 !== t4 - 1 && !o2 || d2 === -1 ? r2.moveTo(n4.x, n4.y) : st.canvas.lineTo(r2, e4._view, n4), d2 = t4);
            u2 && r2.closePath(), r2.stroke(), r2.restore();
          }
        } }), Pt = st.valueOrDefault, Ot = Q.global.defaultColor;
        function jt(t4) {
          var e4 = this._view;
          return !!e4 && Math.abs(t4 - e4.x) < e4.radius + e4.hitRadius;
        }
        function Nt(t4) {
          var e4 = this._view;
          return !!e4 && Math.abs(t4 - e4.y) < e4.radius + e4.hitRadius;
        }
        Q._set("global", { elements: { point: { radius: 3, pointStyle: "circle", backgroundColor: Ot, borderColor: Ot, borderWidth: 1, hitRadius: 1, hoverRadius: 4, hoverBorderWidth: 1 } } });
        var Lt = gt.extend({ _type: "point", inRange: function(t4, e4) {
          var n4 = this._view;
          return !!n4 && Math.pow(t4 - n4.x, 2) + Math.pow(e4 - n4.y, 2) < Math.pow(n4.hitRadius + n4.radius, 2);
        }, inLabelRange: jt, inXRange: jt, inYRange: Nt, getCenterPoint: function() {
          var t4 = this._view;
          return { x: t4.x, y: t4.y };
        }, getArea: function() {
          return Math.PI * Math.pow(this._view.radius, 2);
        }, tooltipPosition: function() {
          var t4 = this._view;
          return { x: t4.x, y: t4.y, padding: t4.radius + t4.borderWidth };
        }, draw: function(t4) {
          var e4 = this._view, n4 = this._chart.ctx, i2 = e4.pointStyle, a2 = e4.rotation, r2 = e4.radius, o2 = e4.x, s2 = e4.y, l2 = Q.global, c2 = l2.defaultColor;
          e4.skip || (t4 === void 0 || st.canvas._isPointInArea(e4, t4)) && (n4.strokeStyle = e4.borderColor || c2, n4.lineWidth = Pt(e4.borderWidth, l2.elements.point.borderWidth), n4.fillStyle = e4.backgroundColor || c2, st.canvas.drawPoint(n4, i2, r2, o2, s2, a2));
        } }), Ft = Q.global.defaultColor;
        function Ht(t4) {
          return t4 && t4.width !== void 0;
        }
        function Bt(t4) {
          var e4, n4, i2, a2, r2;
          return Ht(t4) ? (r2 = t4.width / 2, e4 = t4.x - r2, n4 = t4.x + r2, i2 = Math.min(t4.y, t4.base), a2 = Math.max(t4.y, t4.base)) : (r2 = t4.height / 2, e4 = Math.min(t4.x, t4.base), n4 = Math.max(t4.x, t4.base), i2 = t4.y - r2, a2 = t4.y + r2), { left: e4, top: i2, right: n4, bottom: a2 };
        }
        function qt(t4, e4, n4) {
          return t4 === e4 ? n4 : t4 === n4 ? e4 : t4;
        }
        function zt(t4) {
          var e4 = t4.borderSkipped, n4 = {};
          return e4 ? (t4.horizontal ? t4.base > t4.x && (e4 = qt(e4, "left", "right")) : t4.base < t4.y && (e4 = qt(e4, "bottom", "top")), n4[e4] = true, n4) : n4;
        }
        function Wt(t4, e4, n4) {
          var i2, a2, r2, o2, s2 = t4.borderWidth, l2 = zt(t4);
          return st.isObject(s2) ? (i2 = +s2.top || 0, a2 = +s2.right || 0, r2 = +s2.bottom || 0, o2 = +s2.left || 0) : i2 = a2 = r2 = o2 = +s2 || 0, { t: l2.top || i2 < 0 ? 0 : i2 > n4 ? n4 : i2, r: l2.right || a2 < 0 ? 0 : a2 > e4 ? e4 : a2, b: l2.bottom || r2 < 0 ? 0 : r2 > n4 ? n4 : r2, l: l2.left || o2 < 0 ? 0 : o2 > e4 ? e4 : o2 };
        }
        function $t(t4) {
          var e4 = Bt(t4), n4 = e4.right - e4.left, i2 = e4.bottom - e4.top, a2 = Wt(t4, n4 / 2, i2 / 2);
          return { outer: { x: e4.left, y: e4.top, w: n4, h: i2 }, inner: { x: e4.left + a2.l, y: e4.top + a2.t, w: n4 - a2.l - a2.r, h: i2 - a2.t - a2.b } };
        }
        function Vt(t4, e4, n4) {
          var i2 = e4 === null, a2 = n4 === null, r2 = !(!t4 || i2 && a2) && Bt(t4);
          return r2 && (i2 || e4 >= r2.left && e4 <= r2.right) && (a2 || n4 >= r2.top && n4 <= r2.bottom);
        }
        Q._set("global", { elements: { rectangle: { backgroundColor: Ft, borderColor: Ft, borderSkipped: "bottom", borderWidth: 0 } } });
        var Yt = gt.extend({ _type: "rectangle", draw: function() {
          var t4 = this._chart.ctx, e4 = this._view, n4 = $t(e4), i2 = n4.outer, a2 = n4.inner;
          t4.fillStyle = e4.backgroundColor, t4.fillRect(i2.x, i2.y, i2.w, i2.h), i2.w === a2.w && i2.h === a2.h || (t4.save(), t4.beginPath(), t4.rect(i2.x, i2.y, i2.w, i2.h), t4.clip(), t4.fillStyle = e4.borderColor, t4.rect(a2.x, a2.y, a2.w, a2.h), t4.fill("evenodd"), t4.restore());
        }, height: function() {
          var t4 = this._view;
          return t4.base - t4.y;
        }, inRange: function(t4, e4) {
          return Vt(this._view, t4, e4);
        }, inLabelRange: function(t4, e4) {
          var n4 = this._view;
          return Ht(n4) ? Vt(n4, t4, null) : Vt(n4, null, e4);
        }, inXRange: function(t4) {
          return Vt(this._view, t4, null);
        }, inYRange: function(t4) {
          return Vt(this._view, null, t4);
        }, getCenterPoint: function() {
          var t4, e4, n4 = this._view;
          return Ht(n4) ? (t4 = n4.x, e4 = (n4.y + n4.base) / 2) : (t4 = (n4.x + n4.base) / 2, e4 = n4.y), { x: t4, y: e4 };
        }, getArea: function() {
          var t4 = this._view;
          return Ht(t4) ? t4.width * Math.abs(t4.y - t4.base) : t4.height * Math.abs(t4.x - t4.base);
        }, tooltipPosition: function() {
          var t4 = this._view;
          return { x: t4.x, y: t4.y };
        } }), Ut = {}, Gt = At, Xt = Rt, Zt = Lt, Kt = Yt;
        Ut.Arc = Gt, Ut.Line = Xt, Ut.Point = Zt, Ut.Rectangle = Kt;
        var Qt = st._deprecated, Jt = st.valueOrDefault;
        function te(t4, e4) {
          var n4, i2, a2, r2, o2 = t4._length;
          for (a2 = 1, r2 = e4.length; a2 < r2; ++a2)
            o2 = Math.min(o2, Math.abs(e4[a2] - e4[a2 - 1]));
          for (a2 = 0, r2 = t4.getTicks().length; a2 < r2; ++a2)
            i2 = t4.getPixelForTick(a2), o2 = a2 > 0 ? Math.min(o2, Math.abs(i2 - n4)) : o2, n4 = i2;
          return o2;
        }
        function ee(t4, e4, n4) {
          var i2, a2, r2 = n4.barThickness, o2 = e4.stackCount, s2 = e4.pixels[t4], l2 = st.isNullOrUndef(r2) ? te(e4.scale, e4.pixels) : -1;
          return st.isNullOrUndef(r2) ? (i2 = l2 * n4.categoryPercentage, a2 = n4.barPercentage) : (i2 = r2 * o2, a2 = 1), { chunk: i2 / o2, ratio: a2, start: s2 - i2 / 2 };
        }
        function ne(t4, e4, n4) {
          var i2, a2 = e4.pixels, r2 = a2[t4], o2 = t4 > 0 ? a2[t4 - 1] : null, s2 = t4 < a2.length - 1 ? a2[t4 + 1] : null, l2 = n4.categoryPercentage;
          return o2 === null && (o2 = r2 - (s2 === null ? e4.end - e4.start : s2 - r2)), s2 === null && (s2 = r2 + r2 - o2), i2 = r2 - (r2 - Math.min(o2, s2)) / 2 * l2, { chunk: Math.abs(s2 - o2) / 2 * l2 / e4.stackCount, ratio: n4.barPercentage, start: i2 };
        }
        Q._set("bar", { hover: { mode: "label" }, scales: { xAxes: [{ type: "category", offset: true, gridLines: { offsetGridLines: true } }], yAxes: [{ type: "linear" }] } }), Q._set("global", { datasets: { bar: { categoryPercentage: 0.8, barPercentage: 0.9 } } });
        var ie = Ct.extend({ dataElementType: Ut.Rectangle, _dataElementOptions: ["backgroundColor", "borderColor", "borderSkipped", "borderWidth", "barPercentage", "barThickness", "categoryPercentage", "maxBarThickness", "minBarLength"], initialize: function() {
          var t4, e4, n4 = this;
          Ct.prototype.initialize.apply(n4, arguments), (t4 = n4.getMeta()).stack = n4.getDataset().stack, t4.bar = true, e4 = n4._getIndexScale().options, Qt("bar chart", e4.barPercentage, "scales.[x/y]Axes.barPercentage", "dataset.barPercentage"), Qt("bar chart", e4.barThickness, "scales.[x/y]Axes.barThickness", "dataset.barThickness"), Qt("bar chart", e4.categoryPercentage, "scales.[x/y]Axes.categoryPercentage", "dataset.categoryPercentage"), Qt("bar chart", n4._getValueScale().options.minBarLength, "scales.[x/y]Axes.minBarLength", "dataset.minBarLength"), Qt("bar chart", e4.maxBarThickness, "scales.[x/y]Axes.maxBarThickness", "dataset.maxBarThickness");
        }, update: function(t4) {
          var e4, n4, i2 = this, a2 = i2.getMeta().data;
          for (i2._ruler = i2.getRuler(), e4 = 0, n4 = a2.length; e4 < n4; ++e4)
            i2.updateElement(a2[e4], e4, t4);
        }, updateElement: function(t4, e4, n4) {
          var i2 = this, a2 = i2.getMeta(), r2 = i2.getDataset(), o2 = i2._resolveDataElementOptions(t4, e4);
          t4._xScale = i2.getScaleForId(a2.xAxisID), t4._yScale = i2.getScaleForId(a2.yAxisID), t4._datasetIndex = i2.index, t4._index = e4, t4._model = { backgroundColor: o2.backgroundColor, borderColor: o2.borderColor, borderSkipped: o2.borderSkipped, borderWidth: o2.borderWidth, datasetLabel: r2.label, label: i2.chart.data.labels[e4] }, st.isArray(r2.data[e4]) && (t4._model.borderSkipped = null), i2._updateElementGeometry(t4, e4, n4, o2), t4.pivot();
        }, _updateElementGeometry: function(t4, e4, n4, i2) {
          var a2 = this, r2 = t4._model, o2 = a2._getValueScale(), s2 = o2.getBasePixel(), l2 = o2.isHorizontal(), c2 = a2._ruler || a2.getRuler(), d2 = a2.calculateBarValuePixels(a2.index, e4, i2), u2 = a2.calculateBarIndexPixels(a2.index, e4, c2, i2);
          r2.horizontal = l2, r2.base = n4 ? s2 : d2.base, r2.x = l2 ? n4 ? s2 : d2.head : u2.center, r2.y = l2 ? u2.center : n4 ? s2 : d2.head, r2.height = l2 ? u2.size : void 0, r2.width = l2 ? void 0 : u2.size;
        }, _getStacks: function(t4) {
          var e4, n4, i2 = this, a2 = i2._getIndexScale(), r2 = a2._getMatchingVisibleMetas(i2._type), o2 = a2.options.stacked, s2 = r2.length, l2 = [];
          for (e4 = 0; e4 < s2 && (n4 = r2[e4], (o2 === false || l2.indexOf(n4.stack) === -1 || o2 === void 0 && n4.stack === void 0) && l2.push(n4.stack), n4.index !== t4); ++e4)
            ;
          return l2;
        }, getStackCount: function() {
          return this._getStacks().length;
        }, getStackIndex: function(t4, e4) {
          var n4 = this._getStacks(t4), i2 = e4 !== void 0 ? n4.indexOf(e4) : -1;
          return i2 === -1 ? n4.length - 1 : i2;
        }, getRuler: function() {
          var t4, e4, n4 = this, i2 = n4._getIndexScale(), a2 = [];
          for (t4 = 0, e4 = n4.getMeta().data.length; t4 < e4; ++t4)
            a2.push(i2.getPixelForValue(null, t4, n4.index));
          return { pixels: a2, start: i2._startPixel, end: i2._endPixel, stackCount: n4.getStackCount(), scale: i2 };
        }, calculateBarValuePixels: function(t4, e4, n4) {
          var i2, a2, r2, o2, s2, l2, c2, d2 = this, u2 = d2.chart, h2 = d2._getValueScale(), p2 = h2.isHorizontal(), f2 = u2.data.datasets, g2 = h2._getMatchingVisibleMetas(d2._type), m2 = h2._parseValue(f2[t4].data[e4]), v2 = n4.minBarLength, b2 = h2.options.stacked, y2 = d2.getMeta().stack, x2 = m2.start === void 0 ? 0 : m2.max >= 0 && m2.min >= 0 ? m2.min : m2.max, _2 = m2.start === void 0 ? m2.end : m2.max >= 0 && m2.min >= 0 ? m2.max - m2.min : m2.min - m2.max, w2 = g2.length;
          if (b2 || b2 === void 0 && y2 !== void 0)
            for (i2 = 0; i2 < w2 && (a2 = g2[i2]).index !== t4; ++i2)
              a2.stack === y2 && (r2 = (c2 = h2._parseValue(f2[a2.index].data[e4])).start === void 0 ? c2.end : c2.min >= 0 && c2.max >= 0 ? c2.max : c2.min, (m2.min < 0 && r2 < 0 || m2.max >= 0 && r2 > 0) && (x2 += r2));
          return o2 = h2.getPixelForValue(x2), l2 = (s2 = h2.getPixelForValue(x2 + _2)) - o2, v2 !== void 0 && Math.abs(l2) < v2 && (l2 = v2, s2 = _2 >= 0 && !p2 || _2 < 0 && p2 ? o2 - v2 : o2 + v2), { size: l2, base: o2, head: s2, center: s2 + l2 / 2 };
        }, calculateBarIndexPixels: function(t4, e4, n4, i2) {
          var a2 = this, r2 = i2.barThickness === "flex" ? ne(e4, n4, i2) : ee(e4, n4, i2), o2 = a2.getStackIndex(t4, a2.getMeta().stack), s2 = r2.start + r2.chunk * o2 + r2.chunk / 2, l2 = Math.min(Jt(i2.maxBarThickness, 1 / 0), r2.chunk * r2.ratio);
          return { base: s2 - l2 / 2, head: s2 + l2 / 2, center: s2, size: l2 };
        }, draw: function() {
          var t4 = this, e4 = t4.chart, n4 = t4._getValueScale(), i2 = t4.getMeta().data, a2 = t4.getDataset(), r2 = i2.length, o2 = 0;
          for (st.canvas.clipArea(e4.ctx, e4.chartArea); o2 < r2; ++o2) {
            var s2 = n4._parseValue(a2.data[o2]);
            isNaN(s2.min) || isNaN(s2.max) || i2[o2].draw();
          }
          st.canvas.unclipArea(e4.ctx);
        }, _resolveDataElementOptions: function() {
          var t4 = this, e4 = st.extend({}, Ct.prototype._resolveDataElementOptions.apply(t4, arguments)), n4 = t4._getIndexScale().options, i2 = t4._getValueScale().options;
          return e4.barPercentage = Jt(n4.barPercentage, e4.barPercentage), e4.barThickness = Jt(n4.barThickness, e4.barThickness), e4.categoryPercentage = Jt(n4.categoryPercentage, e4.categoryPercentage), e4.maxBarThickness = Jt(n4.maxBarThickness, e4.maxBarThickness), e4.minBarLength = Jt(i2.minBarLength, e4.minBarLength), e4;
        } }), ae = st.valueOrDefault, re = st.options.resolve;
        Q._set("bubble", { hover: { mode: "single" }, scales: { xAxes: [{ type: "linear", position: "bottom", id: "x-axis-0" }], yAxes: [{ type: "linear", position: "left", id: "y-axis-0" }] }, tooltips: { callbacks: { title: function() {
          return "";
        }, label: function(t4, e4) {
          var n4 = e4.datasets[t4.datasetIndex].label || "", i2 = e4.datasets[t4.datasetIndex].data[t4.index];
          return n4 + ": (" + t4.xLabel + ", " + t4.yLabel + ", " + i2.r + ")";
        } } } });
        var oe = Ct.extend({ dataElementType: Ut.Point, _dataElementOptions: ["backgroundColor", "borderColor", "borderWidth", "hoverBackgroundColor", "hoverBorderColor", "hoverBorderWidth", "hoverRadius", "hitRadius", "pointStyle", "rotation"], update: function(t4) {
          var e4 = this, n4 = e4.getMeta().data;
          st.each(n4, function(n5, i2) {
            e4.updateElement(n5, i2, t4);
          });
        }, updateElement: function(t4, e4, n4) {
          var i2 = this, a2 = i2.getMeta(), r2 = t4.custom || {}, o2 = i2.getScaleForId(a2.xAxisID), s2 = i2.getScaleForId(a2.yAxisID), l2 = i2._resolveDataElementOptions(t4, e4), c2 = i2.getDataset().data[e4], d2 = i2.index, u2 = n4 ? o2.getPixelForDecimal(0.5) : o2.getPixelForValue(typeof c2 == "object" ? c2 : NaN, e4, d2), h2 = n4 ? s2.getBasePixel() : s2.getPixelForValue(c2, e4, d2);
          t4._xScale = o2, t4._yScale = s2, t4._options = l2, t4._datasetIndex = d2, t4._index = e4, t4._model = { backgroundColor: l2.backgroundColor, borderColor: l2.borderColor, borderWidth: l2.borderWidth, hitRadius: l2.hitRadius, pointStyle: l2.pointStyle, rotation: l2.rotation, radius: n4 ? 0 : l2.radius, skip: r2.skip || isNaN(u2) || isNaN(h2), x: u2, y: h2 }, t4.pivot();
        }, setHoverStyle: function(t4) {
          var e4 = t4._model, n4 = t4._options, i2 = st.getHoverColor;
          t4.$previousStyle = { backgroundColor: e4.backgroundColor, borderColor: e4.borderColor, borderWidth: e4.borderWidth, radius: e4.radius }, e4.backgroundColor = ae(n4.hoverBackgroundColor, i2(n4.backgroundColor)), e4.borderColor = ae(n4.hoverBorderColor, i2(n4.borderColor)), e4.borderWidth = ae(n4.hoverBorderWidth, n4.borderWidth), e4.radius = n4.radius + n4.hoverRadius;
        }, _resolveDataElementOptions: function(t4, e4) {
          var n4 = this, i2 = n4.chart, a2 = n4.getDataset(), r2 = t4.custom || {}, o2 = a2.data[e4] || {}, s2 = Ct.prototype._resolveDataElementOptions.apply(n4, arguments), l2 = { chart: i2, dataIndex: e4, dataset: a2, datasetIndex: n4.index };
          return n4._cachedDataOpts === s2 && (s2 = st.extend({}, s2)), s2.radius = re([r2.radius, o2.r, n4._config.radius, i2.options.elements.point.radius], l2, e4), s2;
        } }), se = st.valueOrDefault, le = Math.PI, ce = 2 * le, de = le / 2;
        Q._set("doughnut", { animation: { animateRotate: true, animateScale: false }, hover: { mode: "single" }, legendCallback: function(t4) {
          var e4, n4, i2, a2 = document.createElement("ul"), r2 = t4.data, o2 = r2.datasets, s2 = r2.labels;
          if (a2.setAttribute("class", t4.id + "-legend"), o2.length)
            for (e4 = 0, n4 = o2[0].data.length; e4 < n4; ++e4)
              (i2 = a2.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor = o2[0].backgroundColor[e4], s2[e4] && i2.appendChild(document.createTextNode(s2[e4]));
          return a2.outerHTML;
        }, legend: { labels: { generateLabels: function(t4) {
          var e4 = t4.data;
          return e4.labels.length && e4.datasets.length ? e4.labels.map(function(n4, i2) {
            var a2 = t4.getDatasetMeta(0), r2 = a2.controller.getStyle(i2);
            return { text: n4, fillStyle: r2.backgroundColor, strokeStyle: r2.borderColor, lineWidth: r2.borderWidth, hidden: isNaN(e4.datasets[0].data[i2]) || a2.data[i2].hidden, index: i2 };
          }) : [];
        } }, onClick: function(t4, e4) {
          var n4, i2, a2, r2 = e4.index, o2 = this.chart;
          for (n4 = 0, i2 = (o2.data.datasets || []).length; n4 < i2; ++n4)
            (a2 = o2.getDatasetMeta(n4)).data[r2] && (a2.data[r2].hidden = !a2.data[r2].hidden);
          o2.update();
        } }, cutoutPercentage: 50, rotation: -de, circumference: ce, tooltips: { callbacks: { title: function() {
          return "";
        }, label: function(t4, e4) {
          var n4 = e4.labels[t4.index], i2 = ": " + e4.datasets[t4.datasetIndex].data[t4.index];
          return st.isArray(n4) ? (n4 = n4.slice())[0] += i2 : n4 += i2, n4;
        } } } });
        var ue = Ct.extend({ dataElementType: Ut.Arc, linkScales: st.noop, _dataElementOptions: ["backgroundColor", "borderColor", "borderWidth", "borderAlign", "hoverBackgroundColor", "hoverBorderColor", "hoverBorderWidth"], getRingIndex: function(t4) {
          for (var e4 = 0, n4 = 0; n4 < t4; ++n4)
            this.chart.isDatasetVisible(n4) && ++e4;
          return e4;
        }, update: function(t4) {
          var e4, n4, i2, a2, r2 = this, o2 = r2.chart, s2 = o2.chartArea, l2 = o2.options, c2 = 1, d2 = 1, u2 = 0, h2 = 0, p2 = r2.getMeta(), f2 = p2.data, g2 = l2.cutoutPercentage / 100 || 0, m2 = l2.circumference, v2 = r2._getRingWeight(r2.index);
          if (m2 < ce) {
            var b2 = l2.rotation % ce, y2 = (b2 += b2 >= le ? -ce : b2 < -le ? ce : 0) + m2, x2 = Math.cos(b2), _2 = Math.sin(b2), w2 = Math.cos(y2), S2 = Math.sin(y2), C2 = b2 <= 0 && y2 >= 0 || y2 >= ce, k2 = b2 <= de && y2 >= de || y2 >= ce + de, D2 = b2 <= -de && y2 >= -de || y2 >= le + de, T2 = b2 === -le || y2 >= le ? -1 : Math.min(x2, x2 * g2, w2, w2 * g2), E2 = D2 ? -1 : Math.min(_2, _2 * g2, S2, S2 * g2), A2 = C2 ? 1 : Math.max(x2, x2 * g2, w2, w2 * g2), I2 = k2 ? 1 : Math.max(_2, _2 * g2, S2, S2 * g2);
            c2 = (A2 - T2) / 2, d2 = (I2 - E2) / 2, u2 = -(A2 + T2) / 2, h2 = -(I2 + E2) / 2;
          }
          for (i2 = 0, a2 = f2.length; i2 < a2; ++i2)
            f2[i2]._options = r2._resolveDataElementOptions(f2[i2], i2);
          for (o2.borderWidth = r2.getMaxBorderWidth(), e4 = (s2.right - s2.left - o2.borderWidth) / c2, n4 = (s2.bottom - s2.top - o2.borderWidth) / d2, o2.outerRadius = Math.max(Math.min(e4, n4) / 2, 0), o2.innerRadius = Math.max(o2.outerRadius * g2, 0), o2.radiusLength = (o2.outerRadius - o2.innerRadius) / (r2._getVisibleDatasetWeightTotal() || 1), o2.offsetX = u2 * o2.outerRadius, o2.offsetY = h2 * o2.outerRadius, p2.total = r2.calculateTotal(), r2.outerRadius = o2.outerRadius - o2.radiusLength * r2._getRingWeightOffset(r2.index), r2.innerRadius = Math.max(r2.outerRadius - o2.radiusLength * v2, 0), i2 = 0, a2 = f2.length; i2 < a2; ++i2)
            r2.updateElement(f2[i2], i2, t4);
        }, updateElement: function(t4, e4, n4) {
          var i2 = this, a2 = i2.chart, r2 = a2.chartArea, o2 = a2.options, s2 = o2.animation, l2 = (r2.left + r2.right) / 2, c2 = (r2.top + r2.bottom) / 2, d2 = o2.rotation, u2 = o2.rotation, h2 = i2.getDataset(), p2 = n4 && s2.animateRotate || t4.hidden ? 0 : i2.calculateCircumference(h2.data[e4]) * (o2.circumference / ce), f2 = n4 && s2.animateScale ? 0 : i2.innerRadius, g2 = n4 && s2.animateScale ? 0 : i2.outerRadius, m2 = t4._options || {};
          st.extend(t4, { _datasetIndex: i2.index, _index: e4, _model: { backgroundColor: m2.backgroundColor, borderColor: m2.borderColor, borderWidth: m2.borderWidth, borderAlign: m2.borderAlign, x: l2 + a2.offsetX, y: c2 + a2.offsetY, startAngle: d2, endAngle: u2, circumference: p2, outerRadius: g2, innerRadius: f2, label: st.valueAtIndexOrDefault(h2.label, e4, a2.data.labels[e4]) } });
          var v2 = t4._model;
          n4 && s2.animateRotate || (v2.startAngle = e4 === 0 ? o2.rotation : i2.getMeta().data[e4 - 1]._model.endAngle, v2.endAngle = v2.startAngle + v2.circumference), t4.pivot();
        }, calculateTotal: function() {
          var t4, e4 = this.getDataset(), n4 = this.getMeta(), i2 = 0;
          return st.each(n4.data, function(n5, a2) {
            t4 = e4.data[a2], isNaN(t4) || n5.hidden || (i2 += Math.abs(t4));
          }), i2;
        }, calculateCircumference: function(t4) {
          var e4 = this.getMeta().total;
          return e4 > 0 && !isNaN(t4) ? ce * (Math.abs(t4) / e4) : 0;
        }, getMaxBorderWidth: function(t4) {
          var e4, n4, i2, a2, r2, o2, s2, l2, c2 = this, d2 = 0, u2 = c2.chart;
          if (!t4) {
            for (e4 = 0, n4 = u2.data.datasets.length; e4 < n4; ++e4)
              if (u2.isDatasetVisible(e4)) {
                t4 = (i2 = u2.getDatasetMeta(e4)).data, e4 !== c2.index && (r2 = i2.controller);
                break;
              }
          }
          if (!t4)
            return 0;
          for (e4 = 0, n4 = t4.length; e4 < n4; ++e4)
            a2 = t4[e4], r2 ? (r2._configure(), o2 = r2._resolveDataElementOptions(a2, e4)) : o2 = a2._options, o2.borderAlign !== "inner" && (s2 = o2.borderWidth, d2 = (l2 = o2.hoverBorderWidth) > (d2 = s2 > d2 ? s2 : d2) ? l2 : d2);
          return d2;
        }, setHoverStyle: function(t4) {
          var e4 = t4._model, n4 = t4._options, i2 = st.getHoverColor;
          t4.$previousStyle = { backgroundColor: e4.backgroundColor, borderColor: e4.borderColor, borderWidth: e4.borderWidth }, e4.backgroundColor = se(n4.hoverBackgroundColor, i2(n4.backgroundColor)), e4.borderColor = se(n4.hoverBorderColor, i2(n4.borderColor)), e4.borderWidth = se(n4.hoverBorderWidth, n4.borderWidth);
        }, _getRingWeightOffset: function(t4) {
          for (var e4 = 0, n4 = 0; n4 < t4; ++n4)
            this.chart.isDatasetVisible(n4) && (e4 += this._getRingWeight(n4));
          return e4;
        }, _getRingWeight: function(t4) {
          return Math.max(se(this.chart.data.datasets[t4].weight, 1), 0);
        }, _getVisibleDatasetWeightTotal: function() {
          return this._getRingWeightOffset(this.chart.data.datasets.length);
        } });
        Q._set("horizontalBar", { hover: { mode: "index", axis: "y" }, scales: { xAxes: [{ type: "linear", position: "bottom" }], yAxes: [{ type: "category", position: "left", offset: true, gridLines: { offsetGridLines: true } }] }, elements: { rectangle: { borderSkipped: "left" } }, tooltips: { mode: "index", axis: "y" } }), Q._set("global", { datasets: { horizontalBar: { categoryPercentage: 0.8, barPercentage: 0.9 } } });
        var he = ie.extend({ _getValueScaleId: function() {
          return this.getMeta().xAxisID;
        }, _getIndexScaleId: function() {
          return this.getMeta().yAxisID;
        } }), pe = st.valueOrDefault, fe = st.options.resolve, ge = st.canvas._isPointInArea;
        function me(t4, e4) {
          var n4 = t4 && t4.options.ticks || {}, i2 = n4.reverse, a2 = n4.min === void 0 ? e4 : 0, r2 = n4.max === void 0 ? e4 : 0;
          return { start: i2 ? r2 : a2, end: i2 ? a2 : r2 };
        }
        function ve(t4, e4, n4) {
          var i2 = n4 / 2, a2 = me(t4, i2), r2 = me(e4, i2);
          return { top: r2.end, right: a2.end, bottom: r2.start, left: a2.start };
        }
        function be(t4) {
          var e4, n4, i2, a2;
          return st.isObject(t4) ? (e4 = t4.top, n4 = t4.right, i2 = t4.bottom, a2 = t4.left) : e4 = n4 = i2 = a2 = t4, { top: e4, right: n4, bottom: i2, left: a2 };
        }
        Q._set("line", { showLines: true, spanGaps: false, hover: { mode: "label" }, scales: { xAxes: [{ type: "category", id: "x-axis-0" }], yAxes: [{ type: "linear", id: "y-axis-0" }] } });
        var ye = Ct.extend({ datasetElementType: Ut.Line, dataElementType: Ut.Point, _datasetElementOptions: ["backgroundColor", "borderCapStyle", "borderColor", "borderDash", "borderDashOffset", "borderJoinStyle", "borderWidth", "cubicInterpolationMode", "fill"], _dataElementOptions: { backgroundColor: "pointBackgroundColor", borderColor: "pointBorderColor", borderWidth: "pointBorderWidth", hitRadius: "pointHitRadius", hoverBackgroundColor: "pointHoverBackgroundColor", hoverBorderColor: "pointHoverBorderColor", hoverBorderWidth: "pointHoverBorderWidth", hoverRadius: "pointHoverRadius", pointStyle: "pointStyle", radius: "pointRadius", rotation: "pointRotation" }, update: function(t4) {
          var e4, n4, i2 = this, a2 = i2.getMeta(), r2 = a2.dataset, o2 = a2.data || [], s2 = i2.chart.options, l2 = i2._config, c2 = i2._showLine = pe(l2.showLine, s2.showLines);
          for (i2._xScale = i2.getScaleForId(a2.xAxisID), i2._yScale = i2.getScaleForId(a2.yAxisID), c2 && (l2.tension !== void 0 && l2.lineTension === void 0 && (l2.lineTension = l2.tension), r2._scale = i2._yScale, r2._datasetIndex = i2.index, r2._children = o2, r2._model = i2._resolveDatasetElementOptions(r2), r2.pivot()), e4 = 0, n4 = o2.length; e4 < n4; ++e4)
            i2.updateElement(o2[e4], e4, t4);
          for (c2 && r2._model.tension !== 0 && i2.updateBezierControlPoints(), e4 = 0, n4 = o2.length; e4 < n4; ++e4)
            o2[e4].pivot();
        }, updateElement: function(t4, e4, n4) {
          var i2, a2, r2 = this, o2 = r2.getMeta(), s2 = t4.custom || {}, l2 = r2.getDataset(), c2 = r2.index, d2 = l2.data[e4], u2 = r2._xScale, h2 = r2._yScale, p2 = o2.dataset._model, f2 = r2._resolveDataElementOptions(t4, e4);
          i2 = u2.getPixelForValue(typeof d2 == "object" ? d2 : NaN, e4, c2), a2 = n4 ? h2.getBasePixel() : r2.calculatePointY(d2, e4, c2), t4._xScale = u2, t4._yScale = h2, t4._options = f2, t4._datasetIndex = c2, t4._index = e4, t4._model = { x: i2, y: a2, skip: s2.skip || isNaN(i2) || isNaN(a2), radius: f2.radius, pointStyle: f2.pointStyle, rotation: f2.rotation, backgroundColor: f2.backgroundColor, borderColor: f2.borderColor, borderWidth: f2.borderWidth, tension: pe(s2.tension, p2 ? p2.tension : 0), steppedLine: !!p2 && p2.steppedLine, hitRadius: f2.hitRadius };
        }, _resolveDatasetElementOptions: function(t4) {
          var e4 = this, n4 = e4._config, i2 = t4.custom || {}, a2 = e4.chart.options, r2 = a2.elements.line, o2 = Ct.prototype._resolveDatasetElementOptions.apply(e4, arguments);
          return o2.spanGaps = pe(n4.spanGaps, a2.spanGaps), o2.tension = pe(n4.lineTension, r2.tension), o2.steppedLine = fe([i2.steppedLine, n4.steppedLine, r2.stepped]), o2.clip = be(pe(n4.clip, ve(e4._xScale, e4._yScale, o2.borderWidth))), o2;
        }, calculatePointY: function(t4, e4, n4) {
          var i2, a2, r2, o2, s2, l2, c2, d2 = this, u2 = d2.chart, h2 = d2._yScale, p2 = 0, f2 = 0;
          if (h2.options.stacked) {
            for (s2 = +h2.getRightValue(t4), c2 = (l2 = u2._getSortedVisibleDatasetMetas()).length, i2 = 0; i2 < c2 && (r2 = l2[i2]).index !== n4; ++i2)
              a2 = u2.data.datasets[r2.index], r2.type === "line" && r2.yAxisID === h2.id && ((o2 = +h2.getRightValue(a2.data[e4])) < 0 ? f2 += o2 || 0 : p2 += o2 || 0);
            return s2 < 0 ? h2.getPixelForValue(f2 + s2) : h2.getPixelForValue(p2 + s2);
          }
          return h2.getPixelForValue(t4);
        }, updateBezierControlPoints: function() {
          var t4, e4, n4, i2, a2 = this, r2 = a2.chart, o2 = a2.getMeta(), s2 = o2.dataset._model, l2 = r2.chartArea, c2 = o2.data || [];
          function d2(t5, e5, n5) {
            return Math.max(Math.min(t5, n5), e5);
          }
          if (s2.spanGaps && (c2 = c2.filter(function(t5) {
            return !t5._model.skip;
          })), s2.cubicInterpolationMode === "monotone")
            st.splineCurveMonotone(c2);
          else
            for (t4 = 0, e4 = c2.length; t4 < e4; ++t4)
              n4 = c2[t4]._model, i2 = st.splineCurve(st.previousItem(c2, t4)._model, n4, st.nextItem(c2, t4)._model, s2.tension), n4.controlPointPreviousX = i2.previous.x, n4.controlPointPreviousY = i2.previous.y, n4.controlPointNextX = i2.next.x, n4.controlPointNextY = i2.next.y;
          if (r2.options.elements.line.capBezierPoints)
            for (t4 = 0, e4 = c2.length; t4 < e4; ++t4)
              n4 = c2[t4]._model, ge(n4, l2) && (t4 > 0 && ge(c2[t4 - 1]._model, l2) && (n4.controlPointPreviousX = d2(n4.controlPointPreviousX, l2.left, l2.right), n4.controlPointPreviousY = d2(n4.controlPointPreviousY, l2.top, l2.bottom)), t4 < c2.length - 1 && ge(c2[t4 + 1]._model, l2) && (n4.controlPointNextX = d2(n4.controlPointNextX, l2.left, l2.right), n4.controlPointNextY = d2(n4.controlPointNextY, l2.top, l2.bottom)));
        }, draw: function() {
          var t4, e4 = this, n4 = e4.chart, i2 = e4.getMeta(), a2 = i2.data || [], r2 = n4.chartArea, o2 = n4.canvas, s2 = 0, l2 = a2.length;
          for (e4._showLine && (t4 = i2.dataset._model.clip, st.canvas.clipArea(n4.ctx, { left: t4.left === false ? 0 : r2.left - t4.left, right: t4.right === false ? o2.width : r2.right + t4.right, top: t4.top === false ? 0 : r2.top - t4.top, bottom: t4.bottom === false ? o2.height : r2.bottom + t4.bottom }), i2.dataset.draw(), st.canvas.unclipArea(n4.ctx)); s2 < l2; ++s2)
            a2[s2].draw(r2);
        }, setHoverStyle: function(t4) {
          var e4 = t4._model, n4 = t4._options, i2 = st.getHoverColor;
          t4.$previousStyle = { backgroundColor: e4.backgroundColor, borderColor: e4.borderColor, borderWidth: e4.borderWidth, radius: e4.radius }, e4.backgroundColor = pe(n4.hoverBackgroundColor, i2(n4.backgroundColor)), e4.borderColor = pe(n4.hoverBorderColor, i2(n4.borderColor)), e4.borderWidth = pe(n4.hoverBorderWidth, n4.borderWidth), e4.radius = pe(n4.hoverRadius, n4.radius);
        } }), xe = st.options.resolve;
        Q._set("polarArea", { scale: { type: "radialLinear", angleLines: { display: false }, gridLines: { circular: true }, pointLabels: { display: false }, ticks: { beginAtZero: true } }, animation: { animateRotate: true, animateScale: true }, startAngle: -0.5 * Math.PI, legendCallback: function(t4) {
          var e4, n4, i2, a2 = document.createElement("ul"), r2 = t4.data, o2 = r2.datasets, s2 = r2.labels;
          if (a2.setAttribute("class", t4.id + "-legend"), o2.length)
            for (e4 = 0, n4 = o2[0].data.length; e4 < n4; ++e4)
              (i2 = a2.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor = o2[0].backgroundColor[e4], s2[e4] && i2.appendChild(document.createTextNode(s2[e4]));
          return a2.outerHTML;
        }, legend: { labels: { generateLabels: function(t4) {
          var e4 = t4.data;
          return e4.labels.length && e4.datasets.length ? e4.labels.map(function(n4, i2) {
            var a2 = t4.getDatasetMeta(0), r2 = a2.controller.getStyle(i2);
            return { text: n4, fillStyle: r2.backgroundColor, strokeStyle: r2.borderColor, lineWidth: r2.borderWidth, hidden: isNaN(e4.datasets[0].data[i2]) || a2.data[i2].hidden, index: i2 };
          }) : [];
        } }, onClick: function(t4, e4) {
          var n4, i2, a2, r2 = e4.index, o2 = this.chart;
          for (n4 = 0, i2 = (o2.data.datasets || []).length; n4 < i2; ++n4)
            (a2 = o2.getDatasetMeta(n4)).data[r2].hidden = !a2.data[r2].hidden;
          o2.update();
        } }, tooltips: { callbacks: { title: function() {
          return "";
        }, label: function(t4, e4) {
          return e4.labels[t4.index] + ": " + t4.yLabel;
        } } } });
        var _e = Ct.extend({ dataElementType: Ut.Arc, linkScales: st.noop, _dataElementOptions: ["backgroundColor", "borderColor", "borderWidth", "borderAlign", "hoverBackgroundColor", "hoverBorderColor", "hoverBorderWidth"], _getIndexScaleId: function() {
          return this.chart.scale.id;
        }, _getValueScaleId: function() {
          return this.chart.scale.id;
        }, update: function(t4) {
          var e4, n4, i2, a2 = this, r2 = a2.getDataset(), o2 = a2.getMeta(), s2 = a2.chart.options.startAngle || 0, l2 = a2._starts = [], c2 = a2._angles = [], d2 = o2.data;
          for (a2._updateRadius(), o2.count = a2.countVisibleElements(), e4 = 0, n4 = r2.data.length; e4 < n4; e4++)
            l2[e4] = s2, i2 = a2._computeAngle(e4), c2[e4] = i2, s2 += i2;
          for (e4 = 0, n4 = d2.length; e4 < n4; ++e4)
            d2[e4]._options = a2._resolveDataElementOptions(d2[e4], e4), a2.updateElement(d2[e4], e4, t4);
        }, _updateRadius: function() {
          var t4 = this, e4 = t4.chart, n4 = e4.chartArea, i2 = e4.options, a2 = Math.min(n4.right - n4.left, n4.bottom - n4.top);
          e4.outerRadius = Math.max(a2 / 2, 0), e4.innerRadius = Math.max(i2.cutoutPercentage ? e4.outerRadius / 100 * i2.cutoutPercentage : 1, 0), e4.radiusLength = (e4.outerRadius - e4.innerRadius) / e4.getVisibleDatasetCount(), t4.outerRadius = e4.outerRadius - e4.radiusLength * t4.index, t4.innerRadius = t4.outerRadius - e4.radiusLength;
        }, updateElement: function(t4, e4, n4) {
          var i2 = this, a2 = i2.chart, r2 = i2.getDataset(), o2 = a2.options, s2 = o2.animation, l2 = a2.scale, c2 = a2.data.labels, d2 = l2.xCenter, u2 = l2.yCenter, h2 = o2.startAngle, p2 = t4.hidden ? 0 : l2.getDistanceFromCenterForValue(r2.data[e4]), f2 = i2._starts[e4], g2 = f2 + (t4.hidden ? 0 : i2._angles[e4]), m2 = s2.animateScale ? 0 : l2.getDistanceFromCenterForValue(r2.data[e4]), v2 = t4._options || {};
          st.extend(t4, { _datasetIndex: i2.index, _index: e4, _scale: l2, _model: { backgroundColor: v2.backgroundColor, borderColor: v2.borderColor, borderWidth: v2.borderWidth, borderAlign: v2.borderAlign, x: d2, y: u2, innerRadius: 0, outerRadius: n4 ? m2 : p2, startAngle: n4 && s2.animateRotate ? h2 : f2, endAngle: n4 && s2.animateRotate ? h2 : g2, label: st.valueAtIndexOrDefault(c2, e4, c2[e4]) } }), t4.pivot();
        }, countVisibleElements: function() {
          var t4 = this.getDataset(), e4 = this.getMeta(), n4 = 0;
          return st.each(e4.data, function(e5, i2) {
            isNaN(t4.data[i2]) || e5.hidden || n4++;
          }), n4;
        }, setHoverStyle: function(t4) {
          var e4 = t4._model, n4 = t4._options, i2 = st.getHoverColor, a2 = st.valueOrDefault;
          t4.$previousStyle = { backgroundColor: e4.backgroundColor, borderColor: e4.borderColor, borderWidth: e4.borderWidth }, e4.backgroundColor = a2(n4.hoverBackgroundColor, i2(n4.backgroundColor)), e4.borderColor = a2(n4.hoverBorderColor, i2(n4.borderColor)), e4.borderWidth = a2(n4.hoverBorderWidth, n4.borderWidth);
        }, _computeAngle: function(t4) {
          var e4 = this, n4 = this.getMeta().count, i2 = e4.getDataset(), a2 = e4.getMeta();
          if (isNaN(i2.data[t4]) || a2.data[t4].hidden)
            return 0;
          var r2 = { chart: e4.chart, dataIndex: t4, dataset: i2, datasetIndex: e4.index };
          return xe([e4.chart.options.elements.arc.angle, 2 * Math.PI / n4], r2, t4);
        } });
        Q._set("pie", st.clone(Q.doughnut)), Q._set("pie", { cutoutPercentage: 0 });
        var we = ue, Se = st.valueOrDefault;
        Q._set("radar", { spanGaps: false, scale: { type: "radialLinear" }, elements: { line: { fill: "start", tension: 0 } } });
        var Ce = Ct.extend({ datasetElementType: Ut.Line, dataElementType: Ut.Point, linkScales: st.noop, _datasetElementOptions: ["backgroundColor", "borderWidth", "borderColor", "borderCapStyle", "borderDash", "borderDashOffset", "borderJoinStyle", "fill"], _dataElementOptions: { backgroundColor: "pointBackgroundColor", borderColor: "pointBorderColor", borderWidth: "pointBorderWidth", hitRadius: "pointHitRadius", hoverBackgroundColor: "pointHoverBackgroundColor", hoverBorderColor: "pointHoverBorderColor", hoverBorderWidth: "pointHoverBorderWidth", hoverRadius: "pointHoverRadius", pointStyle: "pointStyle", radius: "pointRadius", rotation: "pointRotation" }, _getIndexScaleId: function() {
          return this.chart.scale.id;
        }, _getValueScaleId: function() {
          return this.chart.scale.id;
        }, update: function(t4) {
          var e4, n4, i2 = this, a2 = i2.getMeta(), r2 = a2.dataset, o2 = a2.data || [], s2 = i2.chart.scale, l2 = i2._config;
          for (l2.tension !== void 0 && l2.lineTension === void 0 && (l2.lineTension = l2.tension), r2._scale = s2, r2._datasetIndex = i2.index, r2._children = o2, r2._loop = true, r2._model = i2._resolveDatasetElementOptions(r2), r2.pivot(), e4 = 0, n4 = o2.length; e4 < n4; ++e4)
            i2.updateElement(o2[e4], e4, t4);
          for (i2.updateBezierControlPoints(), e4 = 0, n4 = o2.length; e4 < n4; ++e4)
            o2[e4].pivot();
        }, updateElement: function(t4, e4, n4) {
          var i2 = this, a2 = t4.custom || {}, r2 = i2.getDataset(), o2 = i2.chart.scale, s2 = o2.getPointPositionForValue(e4, r2.data[e4]), l2 = i2._resolveDataElementOptions(t4, e4), c2 = i2.getMeta().dataset._model, d2 = n4 ? o2.xCenter : s2.x, u2 = n4 ? o2.yCenter : s2.y;
          t4._scale = o2, t4._options = l2, t4._datasetIndex = i2.index, t4._index = e4, t4._model = { x: d2, y: u2, skip: a2.skip || isNaN(d2) || isNaN(u2), radius: l2.radius, pointStyle: l2.pointStyle, rotation: l2.rotation, backgroundColor: l2.backgroundColor, borderColor: l2.borderColor, borderWidth: l2.borderWidth, tension: Se(a2.tension, c2 ? c2.tension : 0), hitRadius: l2.hitRadius };
        }, _resolveDatasetElementOptions: function() {
          var t4 = this, e4 = t4._config, n4 = t4.chart.options, i2 = Ct.prototype._resolveDatasetElementOptions.apply(t4, arguments);
          return i2.spanGaps = Se(e4.spanGaps, n4.spanGaps), i2.tension = Se(e4.lineTension, n4.elements.line.tension), i2;
        }, updateBezierControlPoints: function() {
          var t4, e4, n4, i2, a2 = this, r2 = a2.getMeta(), o2 = a2.chart.chartArea, s2 = r2.data || [];
          function l2(t5, e5, n5) {
            return Math.max(Math.min(t5, n5), e5);
          }
          for (r2.dataset._model.spanGaps && (s2 = s2.filter(function(t5) {
            return !t5._model.skip;
          })), t4 = 0, e4 = s2.length; t4 < e4; ++t4)
            n4 = s2[t4]._model, i2 = st.splineCurve(st.previousItem(s2, t4, true)._model, n4, st.nextItem(s2, t4, true)._model, n4.tension), n4.controlPointPreviousX = l2(i2.previous.x, o2.left, o2.right), n4.controlPointPreviousY = l2(i2.previous.y, o2.top, o2.bottom), n4.controlPointNextX = l2(i2.next.x, o2.left, o2.right), n4.controlPointNextY = l2(i2.next.y, o2.top, o2.bottom);
        }, setHoverStyle: function(t4) {
          var e4 = t4._model, n4 = t4._options, i2 = st.getHoverColor;
          t4.$previousStyle = { backgroundColor: e4.backgroundColor, borderColor: e4.borderColor, borderWidth: e4.borderWidth, radius: e4.radius }, e4.backgroundColor = Se(n4.hoverBackgroundColor, i2(n4.backgroundColor)), e4.borderColor = Se(n4.hoverBorderColor, i2(n4.borderColor)), e4.borderWidth = Se(n4.hoverBorderWidth, n4.borderWidth), e4.radius = Se(n4.hoverRadius, n4.radius);
        } });
        Q._set("scatter", { hover: { mode: "single" }, scales: { xAxes: [{ id: "x-axis-1", type: "linear", position: "bottom" }], yAxes: [{ id: "y-axis-1", type: "linear", position: "left" }] }, tooltips: { callbacks: { title: function() {
          return "";
        }, label: function(t4) {
          return "(" + t4.xLabel + ", " + t4.yLabel + ")";
        } } } }), Q._set("global", { datasets: { scatter: { showLine: false } } });
        var ke = { bar: ie, bubble: oe, doughnut: ue, horizontalBar: he, line: ye, polarArea: _e, pie: we, radar: Ce, scatter: ye };
        function De(t4, e4) {
          return t4.native ? { x: t4.x, y: t4.y } : st.getRelativePosition(t4, e4);
        }
        function Te(t4, e4) {
          var n4, i2, a2, r2, o2, s2, l2 = t4._getSortedVisibleDatasetMetas();
          for (i2 = 0, r2 = l2.length; i2 < r2; ++i2)
            for (a2 = 0, o2 = (n4 = l2[i2].data).length; a2 < o2; ++a2)
              (s2 = n4[a2])._view.skip || e4(s2);
        }
        function Ee(t4, e4) {
          var n4 = [];
          return Te(t4, function(t5) {
            t5.inRange(e4.x, e4.y) && n4.push(t5);
          }), n4;
        }
        function Ae(t4, e4, n4, i2) {
          var a2 = Number.POSITIVE_INFINITY, r2 = [];
          return Te(t4, function(t5) {
            if (!n4 || t5.inRange(e4.x, e4.y)) {
              var o2 = t5.getCenterPoint(), s2 = i2(e4, o2);
              s2 < a2 ? (r2 = [t5], a2 = s2) : s2 === a2 && r2.push(t5);
            }
          }), r2;
        }
        function Ie(t4) {
          var e4 = t4.indexOf("x") !== -1, n4 = t4.indexOf("y") !== -1;
          return function(t5, i2) {
            var a2 = e4 ? Math.abs(t5.x - i2.x) : 0, r2 = n4 ? Math.abs(t5.y - i2.y) : 0;
            return Math.sqrt(Math.pow(a2, 2) + Math.pow(r2, 2));
          };
        }
        function Me(t4, e4, n4) {
          var i2 = De(e4, t4);
          n4.axis = n4.axis || "x";
          var a2 = Ie(n4.axis), r2 = n4.intersect ? Ee(t4, i2) : Ae(t4, i2, false, a2), o2 = [];
          return r2.length ? (t4._getSortedVisibleDatasetMetas().forEach(function(t5) {
            var e5 = t5.data[r2[0]._index];
            e5 && !e5._view.skip && o2.push(e5);
          }), o2) : [];
        }
        var Re = { modes: { single: function(t4, e4) {
          var n4 = De(e4, t4), i2 = [];
          return Te(t4, function(t5) {
            if (t5.inRange(n4.x, n4.y))
              return i2.push(t5), i2;
          }), i2.slice(0, 1);
        }, label: Me, index: Me, dataset: function(t4, e4, n4) {
          var i2 = De(e4, t4);
          n4.axis = n4.axis || "xy";
          var a2 = Ie(n4.axis), r2 = n4.intersect ? Ee(t4, i2) : Ae(t4, i2, false, a2);
          return r2.length > 0 && (r2 = t4.getDatasetMeta(r2[0]._datasetIndex).data), r2;
        }, "x-axis": function(t4, e4) {
          return Me(t4, e4, { intersect: false });
        }, point: function(t4, e4) {
          return Ee(t4, De(e4, t4));
        }, nearest: function(t4, e4, n4) {
          var i2 = De(e4, t4);
          n4.axis = n4.axis || "xy";
          var a2 = Ie(n4.axis);
          return Ae(t4, i2, n4.intersect, a2);
        }, x: function(t4, e4, n4) {
          var i2 = De(e4, t4), a2 = [], r2 = false;
          return Te(t4, function(t5) {
            t5.inXRange(i2.x) && a2.push(t5), t5.inRange(i2.x, i2.y) && (r2 = true);
          }), n4.intersect && !r2 && (a2 = []), a2;
        }, y: function(t4, e4, n4) {
          var i2 = De(e4, t4), a2 = [], r2 = false;
          return Te(t4, function(t5) {
            t5.inYRange(i2.y) && a2.push(t5), t5.inRange(i2.x, i2.y) && (r2 = true);
          }), n4.intersect && !r2 && (a2 = []), a2;
        } } }, Pe = st.extend;
        function Oe(t4, e4) {
          return st.where(t4, function(t5) {
            return t5.pos === e4;
          });
        }
        function je(t4, e4) {
          return t4.sort(function(t5, n4) {
            var i2 = e4 ? n4 : t5, a2 = e4 ? t5 : n4;
            return i2.weight === a2.weight ? i2.index - a2.index : i2.weight - a2.weight;
          });
        }
        function Ne(t4) {
          var e4, n4, i2, a2 = [];
          for (e4 = 0, n4 = (t4 || []).length; e4 < n4; ++e4)
            i2 = t4[e4], a2.push({ index: e4, box: i2, pos: i2.position, horizontal: i2.isHorizontal(), weight: i2.weight });
          return a2;
        }
        function Le(t4, e4) {
          var n4, i2, a2;
          for (n4 = 0, i2 = t4.length; n4 < i2; ++n4)
            (a2 = t4[n4]).width = a2.horizontal ? a2.box.fullWidth && e4.availableWidth : e4.vBoxMaxWidth, a2.height = a2.horizontal && e4.hBoxMaxHeight;
        }
        function Fe(t4) {
          var e4 = Ne(t4), n4 = je(Oe(e4, "left"), true), i2 = je(Oe(e4, "right")), a2 = je(Oe(e4, "top"), true), r2 = je(Oe(e4, "bottom"));
          return { leftAndTop: n4.concat(a2), rightAndBottom: i2.concat(r2), chartArea: Oe(e4, "chartArea"), vertical: n4.concat(i2), horizontal: a2.concat(r2) };
        }
        function He(t4, e4, n4, i2) {
          return Math.max(t4[n4], e4[n4]) + Math.max(t4[i2], e4[i2]);
        }
        function Be(t4, e4, n4) {
          var i2, a2, r2 = n4.box, o2 = t4.maxPadding;
          if (n4.size && (t4[n4.pos] -= n4.size), n4.size = n4.horizontal ? r2.height : r2.width, t4[n4.pos] += n4.size, r2.getPadding) {
            var s2 = r2.getPadding();
            o2.top = Math.max(o2.top, s2.top), o2.left = Math.max(o2.left, s2.left), o2.bottom = Math.max(o2.bottom, s2.bottom), o2.right = Math.max(o2.right, s2.right);
          }
          if (i2 = e4.outerWidth - He(o2, t4, "left", "right"), a2 = e4.outerHeight - He(o2, t4, "top", "bottom"), i2 !== t4.w || a2 !== t4.h) {
            t4.w = i2, t4.h = a2;
            var l2 = n4.horizontal ? [i2, t4.w] : [a2, t4.h];
            return !(l2[0] === l2[1] || isNaN(l2[0]) && isNaN(l2[1]));
          }
        }
        function qe(t4) {
          var e4 = t4.maxPadding;
          function n4(n5) {
            var i2 = Math.max(e4[n5] - t4[n5], 0);
            return t4[n5] += i2, i2;
          }
          t4.y += n4("top"), t4.x += n4("left"), n4("right"), n4("bottom");
        }
        function ze(t4, e4) {
          var n4 = e4.maxPadding;
          function i2(t5) {
            var i3 = { left: 0, top: 0, right: 0, bottom: 0 };
            return t5.forEach(function(t6) {
              i3[t6] = Math.max(e4[t6], n4[t6]);
            }), i3;
          }
          return i2(t4 ? ["left", "right"] : ["top", "bottom"]);
        }
        function We(t4, e4, n4) {
          var i2, a2, r2, o2, s2, l2, c2 = [];
          for (i2 = 0, a2 = t4.length; i2 < a2; ++i2)
            (o2 = (r2 = t4[i2]).box).update(r2.width || e4.w, r2.height || e4.h, ze(r2.horizontal, e4)), Be(e4, n4, r2) && (l2 = true, c2.length && (s2 = true)), o2.fullWidth || c2.push(r2);
          return s2 && We(c2, e4, n4) || l2;
        }
        function $e(t4, e4, n4) {
          var i2, a2, r2, o2, s2 = n4.padding, l2 = e4.x, c2 = e4.y;
          for (i2 = 0, a2 = t4.length; i2 < a2; ++i2)
            o2 = (r2 = t4[i2]).box, r2.horizontal ? (o2.left = o2.fullWidth ? s2.left : e4.left, o2.right = o2.fullWidth ? n4.outerWidth - s2.right : e4.left + e4.w, o2.top = c2, o2.bottom = c2 + o2.height, o2.width = o2.right - o2.left, c2 = o2.bottom) : (o2.left = l2, o2.right = l2 + o2.width, o2.top = e4.top, o2.bottom = e4.top + e4.h, o2.height = o2.bottom - o2.top, l2 = o2.right);
          e4.x = l2, e4.y = c2;
        }
        Q._set("global", { layout: { padding: { top: 0, right: 0, bottom: 0, left: 0 } } });
        var Ve = { defaults: {}, addBox: function(t4, e4) {
          t4.boxes || (t4.boxes = []), e4.fullWidth = e4.fullWidth || false, e4.position = e4.position || "top", e4.weight = e4.weight || 0, e4._layers = e4._layers || function() {
            return [{ z: 0, draw: function() {
              e4.draw.apply(e4, arguments);
            } }];
          }, t4.boxes.push(e4);
        }, removeBox: function(t4, e4) {
          var n4 = t4.boxes ? t4.boxes.indexOf(e4) : -1;
          n4 !== -1 && t4.boxes.splice(n4, 1);
        }, configure: function(t4, e4, n4) {
          for (var i2, a2 = ["fullWidth", "position", "weight"], r2 = a2.length, o2 = 0; o2 < r2; ++o2)
            i2 = a2[o2], n4.hasOwnProperty(i2) && (e4[i2] = n4[i2]);
        }, update: function(t4, e4, n4) {
          if (t4) {
            var i2 = t4.options.layout || {}, a2 = st.options.toPadding(i2.padding), r2 = e4 - a2.width, o2 = n4 - a2.height, s2 = Fe(t4.boxes), l2 = s2.vertical, c2 = s2.horizontal, d2 = Object.freeze({ outerWidth: e4, outerHeight: n4, padding: a2, availableWidth: r2, vBoxMaxWidth: r2 / 2 / l2.length, hBoxMaxHeight: o2 / 2 }), u2 = Pe({ maxPadding: Pe({}, a2), w: r2, h: o2, x: a2.left, y: a2.top }, a2);
            Le(l2.concat(c2), d2), We(l2, u2, d2), We(c2, u2, d2) && We(l2, u2, d2), qe(u2), $e(s2.leftAndTop, u2, d2), u2.x += u2.w, u2.y += u2.h, $e(s2.rightAndBottom, u2, d2), t4.chartArea = { left: u2.left, top: u2.top, right: u2.left + u2.w, bottom: u2.top + u2.h }, st.each(s2.chartArea, function(e5) {
              var n5 = e5.box;
              Pe(n5, t4.chartArea), n5.update(u2.w, u2.h);
            });
          }
        } }, Ye = { acquireContext: function(t4) {
          return t4 && t4.canvas && (t4 = t4.canvas), t4 && t4.getContext("2d") || null;
        } }, Ue = "/*\r\n * DOM element rendering detection\r\n * https://davidwalsh.name/detect-node-insertion\r\n */\r\n@keyframes chartjs-render-animation {\r\n	from { opacity: 0.99; }\r\n	to { opacity: 1; }\r\n}\r\n\r\n.chartjs-render-monitor {\r\n	animation: chartjs-render-animation 0.001s;\r\n}\r\n\r\n/*\r\n * DOM element resizing detection\r\n * https://github.com/marcj/css-element-queries\r\n */\r\n.chartjs-size-monitor,\r\n.chartjs-size-monitor-expand,\r\n.chartjs-size-monitor-shrink {\r\n	position: absolute;\r\n	direction: ltr;\r\n	left: 0;\r\n	top: 0;\r\n	right: 0;\r\n	bottom: 0;\r\n	overflow: hidden;\r\n	pointer-events: none;\r\n	visibility: hidden;\r\n	z-index: -1;\r\n}\r\n\r\n.chartjs-size-monitor-expand > div {\r\n	position: absolute;\r\n	width: 1000000px;\r\n	height: 1000000px;\r\n	left: 0;\r\n	top: 0;\r\n}\r\n\r\n.chartjs-size-monitor-shrink > div {\r\n	position: absolute;\r\n	width: 200%;\r\n	height: 200%;\r\n	left: 0;\r\n	top: 0;\r\n}\r\n", Ge = n3(Object.freeze({ __proto__: null, default: Ue })), Xe = "$chartjs", Ze = "chartjs-", Ke = Ze + "size-monitor", Qe = Ze + "render-monitor", Je = Ze + "render-animation", tn = ["animationstart", "webkitAnimationStart"], en = { touchstart: "mousedown", touchmove: "mousemove", touchend: "mouseup", pointerenter: "mouseenter", pointerdown: "mousedown", pointermove: "mousemove", pointerup: "mouseup", pointerleave: "mouseout", pointerout: "mouseout" };
        function nn(t4, e4) {
          var n4 = st.getStyle(t4, e4), i2 = n4 && n4.match(/^(\d+)(\.\d+)?px$/);
          return i2 ? Number(i2[1]) : void 0;
        }
        function an(t4, e4) {
          var n4 = t4.style, i2 = t4.getAttribute("height"), a2 = t4.getAttribute("width");
          if (t4[Xe] = { initial: { height: i2, width: a2, style: { display: n4.display, height: n4.height, width: n4.width } } }, n4.display = n4.display || "block", a2 === null || a2 === "") {
            var r2 = nn(t4, "width");
            r2 !== void 0 && (t4.width = r2);
          }
          if (i2 === null || i2 === "")
            if (t4.style.height === "")
              t4.height = t4.width / (e4.options.aspectRatio || 2);
            else {
              var o2 = nn(t4, "height");
              r2 !== void 0 && (t4.height = o2);
            }
          return t4;
        }
        var rn = function() {
          var t4 = false;
          try {
            var e4 = Object.defineProperty({}, "passive", { get: function() {
              t4 = true;
            } });
            window.addEventListener("e", null, e4);
          } catch (t5) {
          }
          return t4;
        }(), on = !!rn && { passive: true };
        function sn(t4, e4, n4) {
          t4.addEventListener(e4, n4, on);
        }
        function ln(t4, e4, n4) {
          t4.removeEventListener(e4, n4, on);
        }
        function cn(t4, e4, n4, i2, a2) {
          return { type: t4, chart: e4, native: a2 || null, x: n4 !== void 0 ? n4 : null, y: i2 !== void 0 ? i2 : null };
        }
        function dn(t4, e4) {
          var n4 = en[t4.type] || t4.type, i2 = st.getRelativePosition(t4, e4);
          return cn(n4, e4, i2.x, i2.y, t4);
        }
        function un(t4, e4) {
          var n4 = false, i2 = [];
          return function() {
            i2 = Array.prototype.slice.call(arguments), e4 = e4 || this, n4 || (n4 = true, st.requestAnimFrame.call(window, function() {
              n4 = false, t4.apply(e4, i2);
            }));
          };
        }
        function hn(t4) {
          var e4 = document.createElement("div");
          return e4.className = t4 || "", e4;
        }
        function pn(t4) {
          var e4 = 1e6, n4 = hn(Ke), i2 = hn(Ke + "-expand"), a2 = hn(Ke + "-shrink");
          i2.appendChild(hn()), a2.appendChild(hn()), n4.appendChild(i2), n4.appendChild(a2), n4._reset = function() {
            i2.scrollLeft = e4, i2.scrollTop = e4, a2.scrollLeft = e4, a2.scrollTop = e4;
          };
          var r2 = function() {
            n4._reset(), t4();
          };
          return sn(i2, "scroll", r2.bind(i2, "expand")), sn(a2, "scroll", r2.bind(a2, "shrink")), n4;
        }
        function fn(t4, e4) {
          var n4 = t4[Xe] || (t4[Xe] = {}), i2 = n4.renderProxy = function(t5) {
            t5.animationName === Je && e4();
          };
          st.each(tn, function(e5) {
            sn(t4, e5, i2);
          }), n4.reflow = !!t4.offsetParent, t4.classList.add(Qe);
        }
        function gn(t4) {
          var e4 = t4[Xe] || {}, n4 = e4.renderProxy;
          n4 && (st.each(tn, function(e5) {
            ln(t4, e5, n4);
          }), delete e4.renderProxy), t4.classList.remove(Qe);
        }
        function mn(t4, e4, n4) {
          var i2 = t4[Xe] || (t4[Xe] = {}), a2 = i2.resizer = pn(un(function() {
            if (i2.resizer) {
              var a3 = n4.options.maintainAspectRatio && t4.parentNode, r2 = a3 ? a3.clientWidth : 0;
              e4(cn("resize", n4)), a3 && a3.clientWidth < r2 && n4.canvas && e4(cn("resize", n4));
            }
          }));
          fn(t4, function() {
            if (i2.resizer) {
              var e5 = t4.parentNode;
              e5 && e5 !== a2.parentNode && e5.insertBefore(a2, e5.firstChild), a2._reset();
            }
          });
        }
        function vn(t4) {
          var e4 = t4[Xe] || {}, n4 = e4.resizer;
          delete e4.resizer, gn(t4), n4 && n4.parentNode && n4.parentNode.removeChild(n4);
        }
        function bn(t4, e4) {
          var n4 = t4[Xe] || (t4[Xe] = {});
          if (!n4.containsStyles) {
            n4.containsStyles = true, e4 = "/* Chart.js */\n" + e4;
            var i2 = document.createElement("style");
            i2.setAttribute("type", "text/css"), i2.appendChild(document.createTextNode(e4)), t4.appendChild(i2);
          }
        }
        var yn = { disableCSSInjection: false, _enabled: typeof window != "undefined" && typeof document != "undefined", _ensureLoaded: function(t4) {
          if (!this.disableCSSInjection) {
            var e4 = t4.getRootNode ? t4.getRootNode() : document;
            bn(e4.host ? e4 : document.head, Ge);
          }
        }, acquireContext: function(t4, e4) {
          typeof t4 == "string" ? t4 = document.getElementById(t4) : t4.length && (t4 = t4[0]), t4 && t4.canvas && (t4 = t4.canvas);
          var n4 = t4 && t4.getContext && t4.getContext("2d");
          return n4 && n4.canvas === t4 ? (this._ensureLoaded(t4), an(t4, e4), n4) : null;
        }, releaseContext: function(t4) {
          var e4 = t4.canvas;
          if (e4[Xe]) {
            var n4 = e4[Xe].initial;
            ["height", "width"].forEach(function(t5) {
              var i2 = n4[t5];
              st.isNullOrUndef(i2) ? e4.removeAttribute(t5) : e4.setAttribute(t5, i2);
            }), st.each(n4.style || {}, function(t5, n5) {
              e4.style[n5] = t5;
            }), e4.width = e4.width, delete e4[Xe];
          }
        }, addEventListener: function(t4, e4, n4) {
          var i2 = t4.canvas;
          if (e4 !== "resize") {
            var a2 = n4[Xe] || (n4[Xe] = {});
            sn(i2, e4, (a2.proxies || (a2.proxies = {}))[t4.id + "_" + e4] = function(e5) {
              n4(dn(e5, t4));
            });
          } else
            mn(i2, n4, t4);
        }, removeEventListener: function(t4, e4, n4) {
          var i2 = t4.canvas;
          if (e4 !== "resize") {
            var a2 = ((n4[Xe] || {}).proxies || {})[t4.id + "_" + e4];
            a2 && ln(i2, e4, a2);
          } else
            vn(i2);
        } };
        st.addEvent = sn, st.removeEvent = ln;
        var xn = yn._enabled ? yn : Ye, _n = st.extend({ initialize: function() {
        }, acquireContext: function() {
        }, releaseContext: function() {
        }, addEventListener: function() {
        }, removeEventListener: function() {
        } }, xn);
        Q._set("global", { plugins: {} });
        var wn = { _plugins: [], _cacheId: 0, register: function(t4) {
          var e4 = this._plugins;
          [].concat(t4).forEach(function(t5) {
            e4.indexOf(t5) === -1 && e4.push(t5);
          }), this._cacheId++;
        }, unregister: function(t4) {
          var e4 = this._plugins;
          [].concat(t4).forEach(function(t5) {
            var n4 = e4.indexOf(t5);
            n4 !== -1 && e4.splice(n4, 1);
          }), this._cacheId++;
        }, clear: function() {
          this._plugins = [], this._cacheId++;
        }, count: function() {
          return this._plugins.length;
        }, getAll: function() {
          return this._plugins;
        }, notify: function(t4, e4, n4) {
          var i2, a2, r2, o2, s2, l2 = this.descriptors(t4), c2 = l2.length;
          for (i2 = 0; i2 < c2; ++i2)
            if (typeof (s2 = (r2 = (a2 = l2[i2]).plugin)[e4]) == "function" && ((o2 = [t4].concat(n4 || [])).push(a2.options), s2.apply(r2, o2) === false))
              return false;
          return true;
        }, descriptors: function(t4) {
          var e4 = t4.$plugins || (t4.$plugins = {});
          if (e4.id === this._cacheId)
            return e4.descriptors;
          var n4 = [], i2 = [], a2 = t4 && t4.config || {}, r2 = a2.options && a2.options.plugins || {};
          return this._plugins.concat(a2.plugins || []).forEach(function(t5) {
            if (n4.indexOf(t5) === -1) {
              var e5 = t5.id, a3 = r2[e5];
              a3 !== false && (a3 === true && (a3 = st.clone(Q.global.plugins[e5])), n4.push(t5), i2.push({ plugin: t5, options: a3 || {} }));
            }
          }), e4.descriptors = i2, e4.id = this._cacheId, i2;
        }, _invalidate: function(t4) {
          delete t4.$plugins;
        } }, Sn = { constructors: {}, defaults: {}, registerScaleType: function(t4, e4, n4) {
          this.constructors[t4] = e4, this.defaults[t4] = st.clone(n4);
        }, getScaleConstructor: function(t4) {
          return this.constructors.hasOwnProperty(t4) ? this.constructors[t4] : void 0;
        }, getScaleDefaults: function(t4) {
          return this.defaults.hasOwnProperty(t4) ? st.merge(/* @__PURE__ */ Object.create(null), [Q.scale, this.defaults[t4]]) : {};
        }, updateScaleDefaults: function(t4, e4) {
          var n4 = this;
          n4.defaults.hasOwnProperty(t4) && (n4.defaults[t4] = st.extend(n4.defaults[t4], e4));
        }, addScalesToLayout: function(t4) {
          st.each(t4.scales, function(e4) {
            e4.fullWidth = e4.options.fullWidth, e4.position = e4.options.position, e4.weight = e4.options.weight, Ve.addBox(t4, e4);
          });
        } }, Cn = st.valueOrDefault, kn = st.rtl.getRtlAdapter;
        Q._set("global", { tooltips: { enabled: true, custom: null, mode: "nearest", position: "average", intersect: true, backgroundColor: "rgba(0,0,0,0.8)", titleFontStyle: "bold", titleSpacing: 2, titleMarginBottom: 6, titleFontColor: "#fff", titleAlign: "left", bodySpacing: 2, bodyFontColor: "#fff", bodyAlign: "left", footerFontStyle: "bold", footerSpacing: 2, footerMarginTop: 6, footerFontColor: "#fff", footerAlign: "left", yPadding: 6, xPadding: 6, caretPadding: 2, caretSize: 5, cornerRadius: 6, multiKeyBackground: "#fff", displayColors: true, borderColor: "rgba(0,0,0,0)", borderWidth: 0, callbacks: { beforeTitle: st.noop, title: function(t4, e4) {
          var n4 = "", i2 = e4.labels, a2 = i2 ? i2.length : 0;
          if (t4.length > 0) {
            var r2 = t4[0];
            r2.label ? n4 = r2.label : r2.xLabel ? n4 = r2.xLabel : a2 > 0 && r2.index < a2 && (n4 = i2[r2.index]);
          }
          return n4;
        }, afterTitle: st.noop, beforeBody: st.noop, beforeLabel: st.noop, label: function(t4, e4) {
          var n4 = e4.datasets[t4.datasetIndex].label || "";
          return n4 && (n4 += ": "), st.isNullOrUndef(t4.value) ? n4 += t4.yLabel : n4 += t4.value, n4;
        }, labelColor: function(t4, e4) {
          var n4 = e4.getDatasetMeta(t4.datasetIndex).data[t4.index]._view;
          return { borderColor: n4.borderColor, backgroundColor: n4.backgroundColor };
        }, labelTextColor: function() {
          return this._options.bodyFontColor;
        }, afterLabel: st.noop, afterBody: st.noop, beforeFooter: st.noop, footer: st.noop, afterFooter: st.noop } } });
        var Dn = { average: function(t4) {
          if (!t4.length)
            return false;
          var e4, n4, i2 = 0, a2 = 0, r2 = 0;
          for (e4 = 0, n4 = t4.length; e4 < n4; ++e4) {
            var o2 = t4[e4];
            if (o2 && o2.hasValue()) {
              var s2 = o2.tooltipPosition();
              i2 += s2.x, a2 += s2.y, ++r2;
            }
          }
          return { x: i2 / r2, y: a2 / r2 };
        }, nearest: function(t4, e4) {
          var n4, i2, a2, r2 = e4.x, o2 = e4.y, s2 = Number.POSITIVE_INFINITY;
          for (n4 = 0, i2 = t4.length; n4 < i2; ++n4) {
            var l2 = t4[n4];
            if (l2 && l2.hasValue()) {
              var c2 = l2.getCenterPoint(), d2 = st.distanceBetweenPoints(e4, c2);
              d2 < s2 && (s2 = d2, a2 = l2);
            }
          }
          if (a2) {
            var u2 = a2.tooltipPosition();
            r2 = u2.x, o2 = u2.y;
          }
          return { x: r2, y: o2 };
        } };
        function Tn(t4, e4) {
          return e4 && (st.isArray(e4) ? Array.prototype.push.apply(t4, e4) : t4.push(e4)), t4;
        }
        function En(t4) {
          return (typeof t4 == "string" || t4 instanceof String) && t4.indexOf("\n") > -1 ? t4.split("\n") : t4;
        }
        function An(t4) {
          var e4 = t4._xScale, n4 = t4._yScale || t4._scale, i2 = t4._index, a2 = t4._datasetIndex, r2 = t4._chart.getDatasetMeta(a2).controller, o2 = r2._getIndexScale(), s2 = r2._getValueScale();
          return { xLabel: e4 ? e4.getLabelForIndex(i2, a2) : "", yLabel: n4 ? n4.getLabelForIndex(i2, a2) : "", label: o2 ? "" + o2.getLabelForIndex(i2, a2) : "", value: s2 ? "" + s2.getLabelForIndex(i2, a2) : "", index: i2, datasetIndex: a2, x: t4._model.x, y: t4._model.y };
        }
        function In(t4) {
          var e4 = Q.global;
          return { xPadding: t4.xPadding, yPadding: t4.yPadding, xAlign: t4.xAlign, yAlign: t4.yAlign, rtl: t4.rtl, textDirection: t4.textDirection, bodyFontColor: t4.bodyFontColor, _bodyFontFamily: Cn(t4.bodyFontFamily, e4.defaultFontFamily), _bodyFontStyle: Cn(t4.bodyFontStyle, e4.defaultFontStyle), _bodyAlign: t4.bodyAlign, bodyFontSize: Cn(t4.bodyFontSize, e4.defaultFontSize), bodySpacing: t4.bodySpacing, titleFontColor: t4.titleFontColor, _titleFontFamily: Cn(t4.titleFontFamily, e4.defaultFontFamily), _titleFontStyle: Cn(t4.titleFontStyle, e4.defaultFontStyle), titleFontSize: Cn(t4.titleFontSize, e4.defaultFontSize), _titleAlign: t4.titleAlign, titleSpacing: t4.titleSpacing, titleMarginBottom: t4.titleMarginBottom, footerFontColor: t4.footerFontColor, _footerFontFamily: Cn(t4.footerFontFamily, e4.defaultFontFamily), _footerFontStyle: Cn(t4.footerFontStyle, e4.defaultFontStyle), footerFontSize: Cn(t4.footerFontSize, e4.defaultFontSize), _footerAlign: t4.footerAlign, footerSpacing: t4.footerSpacing, footerMarginTop: t4.footerMarginTop, caretSize: t4.caretSize, cornerRadius: t4.cornerRadius, backgroundColor: t4.backgroundColor, opacity: 0, legendColorBackground: t4.multiKeyBackground, displayColors: t4.displayColors, borderColor: t4.borderColor, borderWidth: t4.borderWidth };
        }
        function Mn(t4, e4) {
          var n4 = t4._chart.ctx, i2 = 2 * e4.yPadding, a2 = 0, r2 = e4.body, o2 = r2.reduce(function(t5, e5) {
            return t5 + e5.before.length + e5.lines.length + e5.after.length;
          }, 0);
          o2 += e4.beforeBody.length + e4.afterBody.length;
          var s2 = e4.title.length, l2 = e4.footer.length, c2 = e4.titleFontSize, d2 = e4.bodyFontSize, u2 = e4.footerFontSize;
          i2 += s2 * c2, i2 += s2 ? (s2 - 1) * e4.titleSpacing : 0, i2 += s2 ? e4.titleMarginBottom : 0, i2 += o2 * d2, i2 += o2 ? (o2 - 1) * e4.bodySpacing : 0, i2 += l2 ? e4.footerMarginTop : 0, i2 += l2 * u2, i2 += l2 ? (l2 - 1) * e4.footerSpacing : 0;
          var h2 = 0, p2 = function(t5) {
            a2 = Math.max(a2, n4.measureText(t5).width + h2);
          };
          return n4.font = st.fontString(c2, e4._titleFontStyle, e4._titleFontFamily), st.each(e4.title, p2), n4.font = st.fontString(d2, e4._bodyFontStyle, e4._bodyFontFamily), st.each(e4.beforeBody.concat(e4.afterBody), p2), h2 = e4.displayColors ? d2 + 2 : 0, st.each(r2, function(t5) {
            st.each(t5.before, p2), st.each(t5.lines, p2), st.each(t5.after, p2);
          }), h2 = 0, n4.font = st.fontString(u2, e4._footerFontStyle, e4._footerFontFamily), st.each(e4.footer, p2), { width: a2 += 2 * e4.xPadding, height: i2 };
        }
        function Rn(t4, e4) {
          var n4, i2, a2, r2, o2, s2 = t4._model, l2 = t4._chart, c2 = t4._chart.chartArea, d2 = "center", u2 = "center";
          s2.y < e4.height ? u2 = "top" : s2.y > l2.height - e4.height && (u2 = "bottom");
          var h2 = (c2.left + c2.right) / 2, p2 = (c2.top + c2.bottom) / 2;
          u2 === "center" ? (n4 = function(t5) {
            return t5 <= h2;
          }, i2 = function(t5) {
            return t5 > h2;
          }) : (n4 = function(t5) {
            return t5 <= e4.width / 2;
          }, i2 = function(t5) {
            return t5 >= l2.width - e4.width / 2;
          }), a2 = function(t5) {
            return t5 + e4.width + s2.caretSize + s2.caretPadding > l2.width;
          }, r2 = function(t5) {
            return t5 - e4.width - s2.caretSize - s2.caretPadding < 0;
          }, o2 = function(t5) {
            return t5 <= p2 ? "top" : "bottom";
          }, n4(s2.x) ? (d2 = "left", a2(s2.x) && (d2 = "center", u2 = o2(s2.y))) : i2(s2.x) && (d2 = "right", r2(s2.x) && (d2 = "center", u2 = o2(s2.y)));
          var f2 = t4._options;
          return { xAlign: f2.xAlign ? f2.xAlign : d2, yAlign: f2.yAlign ? f2.yAlign : u2 };
        }
        function Pn(t4, e4, n4, i2) {
          var a2 = t4.x, r2 = t4.y, o2 = t4.caretSize, s2 = t4.caretPadding, l2 = t4.cornerRadius, c2 = n4.xAlign, d2 = n4.yAlign, u2 = o2 + s2, h2 = l2 + s2;
          return c2 === "right" ? a2 -= e4.width : c2 === "center" && ((a2 -= e4.width / 2) + e4.width > i2.width && (a2 = i2.width - e4.width), a2 < 0 && (a2 = 0)), d2 === "top" ? r2 += u2 : r2 -= d2 === "bottom" ? e4.height + u2 : e4.height / 2, d2 === "center" ? c2 === "left" ? a2 += u2 : c2 === "right" && (a2 -= u2) : c2 === "left" ? a2 -= h2 : c2 === "right" && (a2 += h2), { x: a2, y: r2 };
        }
        function On(t4, e4) {
          return e4 === "center" ? t4.x + t4.width / 2 : e4 === "right" ? t4.x + t4.width - t4.xPadding : t4.x + t4.xPadding;
        }
        function jn(t4) {
          return Tn([], En(t4));
        }
        var Nn = gt.extend({ initialize: function() {
          this._model = In(this._options), this._lastActive = [];
        }, getTitle: function() {
          var t4 = this, e4 = t4._options.callbacks, n4 = e4.beforeTitle.apply(t4, arguments), i2 = e4.title.apply(t4, arguments), a2 = e4.afterTitle.apply(t4, arguments), r2 = [];
          return r2 = Tn(r2, En(n4)), r2 = Tn(r2, En(i2)), r2 = Tn(r2, En(a2));
        }, getBeforeBody: function() {
          return jn(this._options.callbacks.beforeBody.apply(this, arguments));
        }, getBody: function(t4, e4) {
          var n4 = this, i2 = n4._options.callbacks, a2 = [];
          return st.each(t4, function(t5) {
            var r2 = { before: [], lines: [], after: [] };
            Tn(r2.before, En(i2.beforeLabel.call(n4, t5, e4))), Tn(r2.lines, i2.label.call(n4, t5, e4)), Tn(r2.after, En(i2.afterLabel.call(n4, t5, e4))), a2.push(r2);
          }), a2;
        }, getAfterBody: function() {
          return jn(this._options.callbacks.afterBody.apply(this, arguments));
        }, getFooter: function() {
          var t4 = this, e4 = t4._options.callbacks, n4 = e4.beforeFooter.apply(t4, arguments), i2 = e4.footer.apply(t4, arguments), a2 = e4.afterFooter.apply(t4, arguments), r2 = [];
          return r2 = Tn(r2, En(n4)), r2 = Tn(r2, En(i2)), r2 = Tn(r2, En(a2));
        }, update: function(t4) {
          var e4, n4, i2 = this, a2 = i2._options, r2 = i2._model, o2 = i2._model = In(a2), s2 = i2._active, l2 = i2._data, c2 = { xAlign: r2.xAlign, yAlign: r2.yAlign }, d2 = { x: r2.x, y: r2.y }, u2 = { width: r2.width, height: r2.height }, h2 = { x: r2.caretX, y: r2.caretY };
          if (s2.length) {
            o2.opacity = 1;
            var p2 = [], f2 = [];
            h2 = Dn[a2.position].call(i2, s2, i2._eventPosition);
            var g2 = [];
            for (e4 = 0, n4 = s2.length; e4 < n4; ++e4)
              g2.push(An(s2[e4]));
            a2.filter && (g2 = g2.filter(function(t5) {
              return a2.filter(t5, l2);
            })), a2.itemSort && (g2 = g2.sort(function(t5, e5) {
              return a2.itemSort(t5, e5, l2);
            })), st.each(g2, function(t5) {
              p2.push(a2.callbacks.labelColor.call(i2, t5, i2._chart)), f2.push(a2.callbacks.labelTextColor.call(i2, t5, i2._chart));
            }), o2.title = i2.getTitle(g2, l2), o2.beforeBody = i2.getBeforeBody(g2, l2), o2.body = i2.getBody(g2, l2), o2.afterBody = i2.getAfterBody(g2, l2), o2.footer = i2.getFooter(g2, l2), o2.x = h2.x, o2.y = h2.y, o2.caretPadding = a2.caretPadding, o2.labelColors = p2, o2.labelTextColors = f2, o2.dataPoints = g2, d2 = Pn(o2, u2 = Mn(this, o2), c2 = Rn(this, u2), i2._chart);
          } else
            o2.opacity = 0;
          return o2.xAlign = c2.xAlign, o2.yAlign = c2.yAlign, o2.x = d2.x, o2.y = d2.y, o2.width = u2.width, o2.height = u2.height, o2.caretX = h2.x, o2.caretY = h2.y, i2._model = o2, t4 && a2.custom && a2.custom.call(i2, o2), i2;
        }, drawCaret: function(t4, e4) {
          var n4 = this._chart.ctx, i2 = this._view, a2 = this.getCaretPosition(t4, e4, i2);
          n4.lineTo(a2.x1, a2.y1), n4.lineTo(a2.x2, a2.y2), n4.lineTo(a2.x3, a2.y3);
        }, getCaretPosition: function(t4, e4, n4) {
          var i2, a2, r2, o2, s2, l2, c2 = n4.caretSize, d2 = n4.cornerRadius, u2 = n4.xAlign, h2 = n4.yAlign, p2 = t4.x, f2 = t4.y, g2 = e4.width, m2 = e4.height;
          if (h2 === "center")
            s2 = f2 + m2 / 2, u2 === "left" ? (a2 = (i2 = p2) - c2, r2 = i2, o2 = s2 + c2, l2 = s2 - c2) : (a2 = (i2 = p2 + g2) + c2, r2 = i2, o2 = s2 - c2, l2 = s2 + c2);
          else if (u2 === "left" ? (i2 = (a2 = p2 + d2 + c2) - c2, r2 = a2 + c2) : u2 === "right" ? (i2 = (a2 = p2 + g2 - d2 - c2) - c2, r2 = a2 + c2) : (i2 = (a2 = n4.caretX) - c2, r2 = a2 + c2), h2 === "top")
            s2 = (o2 = f2) - c2, l2 = o2;
          else {
            s2 = (o2 = f2 + m2) + c2, l2 = o2;
            var v2 = r2;
            r2 = i2, i2 = v2;
          }
          return { x1: i2, x2: a2, x3: r2, y1: o2, y2: s2, y3: l2 };
        }, drawTitle: function(t4, e4, n4) {
          var i2, a2, r2, o2 = e4.title, s2 = o2.length;
          if (s2) {
            var l2 = kn(e4.rtl, e4.x, e4.width);
            for (t4.x = On(e4, e4._titleAlign), n4.textAlign = l2.textAlign(e4._titleAlign), n4.textBaseline = "middle", i2 = e4.titleFontSize, a2 = e4.titleSpacing, n4.fillStyle = e4.titleFontColor, n4.font = st.fontString(i2, e4._titleFontStyle, e4._titleFontFamily), r2 = 0; r2 < s2; ++r2)
              n4.fillText(o2[r2], l2.x(t4.x), t4.y + i2 / 2), t4.y += i2 + a2, r2 + 1 === s2 && (t4.y += e4.titleMarginBottom - a2);
          }
        }, drawBody: function(t4, e4, n4) {
          var i2, a2, r2, o2, s2, l2, c2, d2, u2 = e4.bodyFontSize, h2 = e4.bodySpacing, p2 = e4._bodyAlign, f2 = e4.body, g2 = e4.displayColors, m2 = 0, v2 = g2 ? On(e4, "left") : 0, b2 = kn(e4.rtl, e4.x, e4.width), y2 = function(e5) {
            n4.fillText(e5, b2.x(t4.x + m2), t4.y + u2 / 2), t4.y += u2 + h2;
          }, x2 = b2.textAlign(p2);
          for (n4.textAlign = p2, n4.textBaseline = "middle", n4.font = st.fontString(u2, e4._bodyFontStyle, e4._bodyFontFamily), t4.x = On(e4, x2), n4.fillStyle = e4.bodyFontColor, st.each(e4.beforeBody, y2), m2 = g2 && x2 !== "right" ? p2 === "center" ? u2 / 2 + 1 : u2 + 2 : 0, s2 = 0, c2 = f2.length; s2 < c2; ++s2) {
            for (i2 = f2[s2], a2 = e4.labelTextColors[s2], r2 = e4.labelColors[s2], n4.fillStyle = a2, st.each(i2.before, y2), l2 = 0, d2 = (o2 = i2.lines).length; l2 < d2; ++l2) {
              if (g2) {
                var _2 = b2.x(v2);
                n4.fillStyle = e4.legendColorBackground, n4.fillRect(b2.leftForLtr(_2, u2), t4.y, u2, u2), n4.lineWidth = 1, n4.strokeStyle = r2.borderColor, n4.strokeRect(b2.leftForLtr(_2, u2), t4.y, u2, u2), n4.fillStyle = r2.backgroundColor, n4.fillRect(b2.leftForLtr(b2.xPlus(_2, 1), u2 - 2), t4.y + 1, u2 - 2, u2 - 2), n4.fillStyle = a2;
              }
              y2(o2[l2]);
            }
            st.each(i2.after, y2);
          }
          m2 = 0, st.each(e4.afterBody, y2), t4.y -= h2;
        }, drawFooter: function(t4, e4, n4) {
          var i2, a2, r2 = e4.footer, o2 = r2.length;
          if (o2) {
            var s2 = kn(e4.rtl, e4.x, e4.width);
            for (t4.x = On(e4, e4._footerAlign), t4.y += e4.footerMarginTop, n4.textAlign = s2.textAlign(e4._footerAlign), n4.textBaseline = "middle", i2 = e4.footerFontSize, n4.fillStyle = e4.footerFontColor, n4.font = st.fontString(i2, e4._footerFontStyle, e4._footerFontFamily), a2 = 0; a2 < o2; ++a2)
              n4.fillText(r2[a2], s2.x(t4.x), t4.y + i2 / 2), t4.y += i2 + e4.footerSpacing;
          }
        }, drawBackground: function(t4, e4, n4, i2) {
          n4.fillStyle = e4.backgroundColor, n4.strokeStyle = e4.borderColor, n4.lineWidth = e4.borderWidth;
          var a2 = e4.xAlign, r2 = e4.yAlign, o2 = t4.x, s2 = t4.y, l2 = i2.width, c2 = i2.height, d2 = e4.cornerRadius;
          n4.beginPath(), n4.moveTo(o2 + d2, s2), r2 === "top" && this.drawCaret(t4, i2), n4.lineTo(o2 + l2 - d2, s2), n4.quadraticCurveTo(o2 + l2, s2, o2 + l2, s2 + d2), r2 === "center" && a2 === "right" && this.drawCaret(t4, i2), n4.lineTo(o2 + l2, s2 + c2 - d2), n4.quadraticCurveTo(o2 + l2, s2 + c2, o2 + l2 - d2, s2 + c2), r2 === "bottom" && this.drawCaret(t4, i2), n4.lineTo(o2 + d2, s2 + c2), n4.quadraticCurveTo(o2, s2 + c2, o2, s2 + c2 - d2), r2 === "center" && a2 === "left" && this.drawCaret(t4, i2), n4.lineTo(o2, s2 + d2), n4.quadraticCurveTo(o2, s2, o2 + d2, s2), n4.closePath(), n4.fill(), e4.borderWidth > 0 && n4.stroke();
        }, draw: function() {
          var t4 = this._chart.ctx, e4 = this._view;
          if (e4.opacity !== 0) {
            var n4 = { width: e4.width, height: e4.height }, i2 = { x: e4.x, y: e4.y }, a2 = Math.abs(e4.opacity < 1e-3) ? 0 : e4.opacity, r2 = e4.title.length || e4.beforeBody.length || e4.body.length || e4.afterBody.length || e4.footer.length;
            this._options.enabled && r2 && (t4.save(), t4.globalAlpha = a2, this.drawBackground(i2, e4, t4, n4), i2.y += e4.yPadding, st.rtl.overrideTextDirection(t4, e4.textDirection), this.drawTitle(i2, e4, t4), this.drawBody(i2, e4, t4), this.drawFooter(i2, e4, t4), st.rtl.restoreTextDirection(t4, e4.textDirection), t4.restore());
          }
        }, handleEvent: function(t4) {
          var e4 = this, n4 = e4._options, i2 = false;
          return e4._lastActive = e4._lastActive || [], t4.type === "mouseout" ? e4._active = [] : (e4._active = e4._chart.getElementsAtEventForMode(t4, n4.mode, n4), n4.reverse && e4._active.reverse()), (i2 = !st.arrayEquals(e4._active, e4._lastActive)) && (e4._lastActive = e4._active, (n4.enabled || n4.custom) && (e4._eventPosition = { x: t4.x, y: t4.y }, e4.update(true), e4.pivot())), i2;
        } }), Ln = Dn, Fn = Nn;
        Fn.positioners = Ln;
        var Hn = st.valueOrDefault;
        function Bn() {
          return st.merge(/* @__PURE__ */ Object.create(null), [].slice.call(arguments), { merger: function(t4, e4, n4, i2) {
            if (t4 === "xAxes" || t4 === "yAxes") {
              var a2, r2, o2, s2 = n4[t4].length;
              for (e4[t4] || (e4[t4] = []), a2 = 0; a2 < s2; ++a2)
                o2 = n4[t4][a2], r2 = Hn(o2.type, t4 === "xAxes" ? "category" : "linear"), a2 >= e4[t4].length && e4[t4].push({}), !e4[t4][a2].type || o2.type && o2.type !== e4[t4][a2].type ? st.merge(e4[t4][a2], [Sn.getScaleDefaults(r2), o2]) : st.merge(e4[t4][a2], o2);
            } else
              st._merger(t4, e4, n4, i2);
          } });
        }
        function qn() {
          return st.merge(/* @__PURE__ */ Object.create(null), [].slice.call(arguments), { merger: function(t4, e4, n4, i2) {
            var a2 = e4[t4] || /* @__PURE__ */ Object.create(null), r2 = n4[t4];
            t4 === "scales" ? e4[t4] = Bn(a2, r2) : t4 === "scale" ? e4[t4] = st.merge(a2, [Sn.getScaleDefaults(r2.type), r2]) : st._merger(t4, e4, n4, i2);
          } });
        }
        function zn(t4) {
          var e4 = (t4 = t4 || /* @__PURE__ */ Object.create(null)).data = t4.data || {};
          return e4.datasets = e4.datasets || [], e4.labels = e4.labels || [], t4.options = qn(Q.global, Q[t4.type], t4.options || {}), t4;
        }
        function Wn(t4) {
          var e4 = t4.options;
          st.each(t4.scales, function(e5) {
            Ve.removeBox(t4, e5);
          }), e4 = qn(Q.global, Q[t4.config.type], e4), t4.options = t4.config.options = e4, t4.ensureScalesHaveIDs(), t4.buildOrUpdateScales(), t4.tooltip._options = e4.tooltips, t4.tooltip.initialize();
        }
        function $n(t4, e4, n4) {
          var i2, a2 = function(t5) {
            return t5.id === i2;
          };
          do {
            i2 = e4 + n4++;
          } while (st.findIndex(t4, a2) >= 0);
          return i2;
        }
        function Vn(t4) {
          return t4 === "top" || t4 === "bottom";
        }
        function Yn(t4, e4) {
          return function(n4, i2) {
            return n4[t4] === i2[t4] ? n4[e4] - i2[e4] : n4[t4] - i2[t4];
          };
        }
        Q._set("global", { elements: {}, events: ["mousemove", "mouseout", "click", "touchstart", "touchmove"], hover: { onHover: null, mode: "nearest", intersect: true, animationDuration: 400 }, onClick: null, maintainAspectRatio: true, responsive: true, responsiveAnimationDuration: 0 });
        var Un = function(t4, e4) {
          return this.construct(t4, e4), this;
        };
        st.extend(Un.prototype, { construct: function(t4, e4) {
          var n4 = this;
          e4 = zn(e4);
          var i2 = _n.acquireContext(t4, e4), a2 = i2 && i2.canvas, r2 = a2 && a2.height, o2 = a2 && a2.width;
          n4.id = st.uid(), n4.ctx = i2, n4.canvas = a2, n4.config = e4, n4.width = o2, n4.height = r2, n4.aspectRatio = r2 ? o2 / r2 : null, n4.options = e4.options, n4._bufferedRender = false, n4._layers = [], n4.chart = n4, n4.controller = n4, Un.instances[n4.id] = n4, Object.defineProperty(n4, "data", { get: function() {
            return n4.config.data;
          }, set: function(t5) {
            n4.config.data = t5;
          } }), i2 && a2 ? (n4.initialize(), n4.update()) : console.error("Failed to create chart: can't acquire context from the given item");
        }, initialize: function() {
          var t4 = this;
          return wn.notify(t4, "beforeInit"), st.retinaScale(t4, t4.options.devicePixelRatio), t4.bindEvents(), t4.options.responsive && t4.resize(true), t4.initToolTip(), wn.notify(t4, "afterInit"), t4;
        }, clear: function() {
          return st.canvas.clear(this), this;
        }, stop: function() {
          return bt.cancelAnimation(this), this;
        }, resize: function(t4) {
          var e4 = this, n4 = e4.options, i2 = e4.canvas, a2 = n4.maintainAspectRatio && e4.aspectRatio || null, r2 = Math.max(0, Math.floor(st.getMaximumWidth(i2))), o2 = Math.max(0, Math.floor(a2 ? r2 / a2 : st.getMaximumHeight(i2)));
          if ((e4.width !== r2 || e4.height !== o2) && (i2.width = e4.width = r2, i2.height = e4.height = o2, i2.style.width = r2 + "px", i2.style.height = o2 + "px", st.retinaScale(e4, n4.devicePixelRatio), !t4)) {
            var s2 = { width: r2, height: o2 };
            wn.notify(e4, "resize", [s2]), n4.onResize && n4.onResize(e4, s2), e4.stop(), e4.update({ duration: n4.responsiveAnimationDuration });
          }
        }, ensureScalesHaveIDs: function() {
          var t4 = this.options, e4 = t4.scales || {}, n4 = t4.scale;
          st.each(e4.xAxes, function(t5, n5) {
            t5.id || (t5.id = $n(e4.xAxes, "x-axis-", n5));
          }), st.each(e4.yAxes, function(t5, n5) {
            t5.id || (t5.id = $n(e4.yAxes, "y-axis-", n5));
          }), n4 && (n4.id = n4.id || "scale");
        }, buildOrUpdateScales: function() {
          var t4 = this, e4 = t4.options, n4 = t4.scales || {}, i2 = [], a2 = Object.keys(n4).reduce(function(t5, e5) {
            return t5[e5] = false, t5;
          }, {});
          e4.scales && (i2 = i2.concat((e4.scales.xAxes || []).map(function(t5) {
            return { options: t5, dtype: "category", dposition: "bottom" };
          }), (e4.scales.yAxes || []).map(function(t5) {
            return { options: t5, dtype: "linear", dposition: "left" };
          }))), e4.scale && i2.push({ options: e4.scale, dtype: "radialLinear", isDefault: true, dposition: "chartArea" }), st.each(i2, function(e5) {
            var i3 = e5.options, r2 = i3.id, o2 = Hn(i3.type, e5.dtype);
            Vn(i3.position) !== Vn(e5.dposition) && (i3.position = e5.dposition), a2[r2] = true;
            var s2 = null;
            if (r2 in n4 && n4[r2].type === o2)
              (s2 = n4[r2]).options = i3, s2.ctx = t4.ctx, s2.chart = t4;
            else {
              var l2 = Sn.getScaleConstructor(o2);
              if (!l2)
                return;
              s2 = new l2({ id: r2, type: o2, options: i3, ctx: t4.ctx, chart: t4 }), n4[s2.id] = s2;
            }
            s2.mergeTicksOptions(), e5.isDefault && (t4.scale = s2);
          }), st.each(a2, function(t5, e5) {
            t5 || delete n4[e5];
          }), t4.scales = n4, Sn.addScalesToLayout(this);
        }, buildOrUpdateControllers: function() {
          var t4, e4, n4 = this, i2 = [], a2 = n4.data.datasets;
          for (t4 = 0, e4 = a2.length; t4 < e4; t4++) {
            var r2 = a2[t4], o2 = n4.getDatasetMeta(t4), s2 = r2.type || n4.config.type;
            if (o2.type && o2.type !== s2 && (n4.destroyDatasetMeta(t4), o2 = n4.getDatasetMeta(t4)), o2.type = s2, o2.order = r2.order || 0, o2.index = t4, o2.controller)
              o2.controller.updateIndex(t4), o2.controller.linkScales();
            else {
              var l2 = ke[o2.type];
              if (l2 === void 0)
                throw new Error('"' + o2.type + '" is not a chart type.');
              o2.controller = new l2(n4, t4), i2.push(o2.controller);
            }
          }
          return i2;
        }, resetElements: function() {
          var t4 = this;
          st.each(t4.data.datasets, function(e4, n4) {
            t4.getDatasetMeta(n4).controller.reset();
          }, t4);
        }, reset: function() {
          this.resetElements(), this.tooltip.initialize();
        }, update: function(t4) {
          var e4, n4, i2 = this;
          if (t4 && typeof t4 == "object" || (t4 = { duration: t4, lazy: arguments[1] }), Wn(i2), wn._invalidate(i2), wn.notify(i2, "beforeUpdate") !== false) {
            i2.tooltip._data = i2.data;
            var a2 = i2.buildOrUpdateControllers();
            for (e4 = 0, n4 = i2.data.datasets.length; e4 < n4; e4++)
              i2.getDatasetMeta(e4).controller.buildOrUpdateElements();
            i2.updateLayout(), i2.options.animation && i2.options.animation.duration && st.each(a2, function(t5) {
              t5.reset();
            }), i2.updateDatasets(), i2.tooltip.initialize(), i2.lastActive = [], wn.notify(i2, "afterUpdate"), i2._layers.sort(Yn("z", "_idx")), i2._bufferedRender ? i2._bufferedRequest = { duration: t4.duration, easing: t4.easing, lazy: t4.lazy } : i2.render(t4);
          }
        }, updateLayout: function() {
          var t4 = this;
          wn.notify(t4, "beforeLayout") !== false && (Ve.update(this, this.width, this.height), t4._layers = [], st.each(t4.boxes, function(e4) {
            e4._configure && e4._configure(), t4._layers.push.apply(t4._layers, e4._layers());
          }, t4), t4._layers.forEach(function(t5, e4) {
            t5._idx = e4;
          }), wn.notify(t4, "afterScaleUpdate"), wn.notify(t4, "afterLayout"));
        }, updateDatasets: function() {
          var t4 = this;
          if (wn.notify(t4, "beforeDatasetsUpdate") !== false) {
            for (var e4 = 0, n4 = t4.data.datasets.length; e4 < n4; ++e4)
              t4.updateDataset(e4);
            wn.notify(t4, "afterDatasetsUpdate");
          }
        }, updateDataset: function(t4) {
          var e4 = this, n4 = e4.getDatasetMeta(t4), i2 = { meta: n4, index: t4 };
          wn.notify(e4, "beforeDatasetUpdate", [i2]) !== false && (n4.controller._update(), wn.notify(e4, "afterDatasetUpdate", [i2]));
        }, render: function(t4) {
          var e4 = this;
          t4 && typeof t4 == "object" || (t4 = { duration: t4, lazy: arguments[1] });
          var n4 = e4.options.animation, i2 = Hn(t4.duration, n4 && n4.duration), a2 = t4.lazy;
          if (wn.notify(e4, "beforeRender") !== false) {
            var r2 = function(t5) {
              wn.notify(e4, "afterRender"), st.callback(n4 && n4.onComplete, [t5], e4);
            };
            if (n4 && i2) {
              var o2 = new vt({ numSteps: i2 / 16.66, easing: t4.easing || n4.easing, render: function(t5, e5) {
                var n5 = st.easing.effects[e5.easing], i3 = e5.currentStep, a3 = i3 / e5.numSteps;
                t5.draw(n5(a3), a3, i3);
              }, onAnimationProgress: n4.onProgress, onAnimationComplete: r2 });
              bt.addAnimation(e4, o2, i2, a2);
            } else
              e4.draw(), r2(new vt({ numSteps: 0, chart: e4 }));
            return e4;
          }
        }, draw: function(t4) {
          var e4, n4, i2 = this;
          if (i2.clear(), st.isNullOrUndef(t4) && (t4 = 1), i2.transition(t4), !(i2.width <= 0 || i2.height <= 0) && wn.notify(i2, "beforeDraw", [t4]) !== false) {
            for (n4 = i2._layers, e4 = 0; e4 < n4.length && n4[e4].z <= 0; ++e4)
              n4[e4].draw(i2.chartArea);
            for (i2.drawDatasets(t4); e4 < n4.length; ++e4)
              n4[e4].draw(i2.chartArea);
            i2._drawTooltip(t4), wn.notify(i2, "afterDraw", [t4]);
          }
        }, transition: function(t4) {
          for (var e4 = this, n4 = 0, i2 = (e4.data.datasets || []).length; n4 < i2; ++n4)
            e4.isDatasetVisible(n4) && e4.getDatasetMeta(n4).controller.transition(t4);
          e4.tooltip.transition(t4);
        }, _getSortedDatasetMetas: function(t4) {
          var e4, n4, i2 = this, a2 = [];
          for (e4 = 0, n4 = (i2.data.datasets || []).length; e4 < n4; ++e4)
            t4 && !i2.isDatasetVisible(e4) || a2.push(i2.getDatasetMeta(e4));
          return a2.sort(Yn("order", "index")), a2;
        }, _getSortedVisibleDatasetMetas: function() {
          return this._getSortedDatasetMetas(true);
        }, drawDatasets: function(t4) {
          var e4, n4, i2 = this;
          if (wn.notify(i2, "beforeDatasetsDraw", [t4]) !== false) {
            for (n4 = (e4 = i2._getSortedVisibleDatasetMetas()).length - 1; n4 >= 0; --n4)
              i2.drawDataset(e4[n4], t4);
            wn.notify(i2, "afterDatasetsDraw", [t4]);
          }
        }, drawDataset: function(t4, e4) {
          var n4 = this, i2 = { meta: t4, index: t4.index, easingValue: e4 };
          wn.notify(n4, "beforeDatasetDraw", [i2]) !== false && (t4.controller.draw(e4), wn.notify(n4, "afterDatasetDraw", [i2]));
        }, _drawTooltip: function(t4) {
          var e4 = this, n4 = e4.tooltip, i2 = { tooltip: n4, easingValue: t4 };
          wn.notify(e4, "beforeTooltipDraw", [i2]) !== false && (n4.draw(), wn.notify(e4, "afterTooltipDraw", [i2]));
        }, getElementAtEvent: function(t4) {
          return Re.modes.single(this, t4);
        }, getElementsAtEvent: function(t4) {
          return Re.modes.label(this, t4, { intersect: true });
        }, getElementsAtXAxis: function(t4) {
          return Re.modes["x-axis"](this, t4, { intersect: true });
        }, getElementsAtEventForMode: function(t4, e4, n4) {
          var i2 = Re.modes[e4];
          return typeof i2 == "function" ? i2(this, t4, n4) : [];
        }, getDatasetAtEvent: function(t4) {
          return Re.modes.dataset(this, t4, { intersect: true });
        }, getDatasetMeta: function(t4) {
          var e4 = this, n4 = e4.data.datasets[t4];
          n4._meta || (n4._meta = {});
          var i2 = n4._meta[e4.id];
          return i2 || (i2 = n4._meta[e4.id] = { type: null, data: [], dataset: null, controller: null, hidden: null, xAxisID: null, yAxisID: null, order: n4.order || 0, index: t4 }), i2;
        }, getVisibleDatasetCount: function() {
          for (var t4 = 0, e4 = 0, n4 = this.data.datasets.length; e4 < n4; ++e4)
            this.isDatasetVisible(e4) && t4++;
          return t4;
        }, isDatasetVisible: function(t4) {
          var e4 = this.getDatasetMeta(t4);
          return typeof e4.hidden == "boolean" ? !e4.hidden : !this.data.datasets[t4].hidden;
        }, generateLegend: function() {
          return this.options.legendCallback(this);
        }, destroyDatasetMeta: function(t4) {
          var e4 = this.id, n4 = this.data.datasets[t4], i2 = n4._meta && n4._meta[e4];
          i2 && (i2.controller.destroy(), delete n4._meta[e4]);
        }, destroy: function() {
          var t4, e4, n4 = this, i2 = n4.canvas;
          for (n4.stop(), t4 = 0, e4 = n4.data.datasets.length; t4 < e4; ++t4)
            n4.destroyDatasetMeta(t4);
          i2 && (n4.unbindEvents(), st.canvas.clear(n4), _n.releaseContext(n4.ctx), n4.canvas = null, n4.ctx = null), wn.notify(n4, "destroy"), delete Un.instances[n4.id];
        }, toBase64Image: function() {
          return this.canvas.toDataURL.apply(this.canvas, arguments);
        }, initToolTip: function() {
          var t4 = this;
          t4.tooltip = new Fn({ _chart: t4, _chartInstance: t4, _data: t4.data, _options: t4.options.tooltips }, t4);
        }, bindEvents: function() {
          var t4 = this, e4 = t4._listeners = {}, n4 = function() {
            t4.eventHandler.apply(t4, arguments);
          };
          st.each(t4.options.events, function(i2) {
            _n.addEventListener(t4, i2, n4), e4[i2] = n4;
          }), t4.options.responsive && (n4 = function() {
            t4.resize();
          }, _n.addEventListener(t4, "resize", n4), e4.resize = n4);
        }, unbindEvents: function() {
          var t4 = this, e4 = t4._listeners;
          e4 && (delete t4._listeners, st.each(e4, function(e5, n4) {
            _n.removeEventListener(t4, n4, e5);
          }));
        }, updateHoverStyle: function(t4, e4, n4) {
          var i2, a2, r2, o2 = n4 ? "set" : "remove";
          for (a2 = 0, r2 = t4.length; a2 < r2; ++a2)
            (i2 = t4[a2]) && this.getDatasetMeta(i2._datasetIndex).controller[o2 + "HoverStyle"](i2);
          e4 === "dataset" && this.getDatasetMeta(t4[0]._datasetIndex).controller["_" + o2 + "DatasetHoverStyle"]();
        }, eventHandler: function(t4) {
          var e4 = this, n4 = e4.tooltip;
          if (wn.notify(e4, "beforeEvent", [t4]) !== false) {
            e4._bufferedRender = true, e4._bufferedRequest = null;
            var i2 = e4.handleEvent(t4);
            n4 && (i2 = n4._start ? n4.handleEvent(t4) : i2 | n4.handleEvent(t4)), wn.notify(e4, "afterEvent", [t4]);
            var a2 = e4._bufferedRequest;
            return a2 ? e4.render(a2) : i2 && !e4.animating && (e4.stop(), e4.render({ duration: e4.options.hover.animationDuration, lazy: true })), e4._bufferedRender = false, e4._bufferedRequest = null, e4;
          }
        }, handleEvent: function(t4) {
          var e4 = this, n4 = e4.options || {}, i2 = n4.hover, a2 = false;
          return e4.lastActive = e4.lastActive || [], t4.type === "mouseout" ? e4.active = [] : e4.active = e4.getElementsAtEventForMode(t4, i2.mode, i2), st.callback(n4.onHover || n4.hover.onHover, [t4.native, e4.active], e4), t4.type !== "mouseup" && t4.type !== "click" || n4.onClick && n4.onClick.call(e4, t4.native, e4.active), e4.lastActive.length && e4.updateHoverStyle(e4.lastActive, i2.mode, false), e4.active.length && i2.mode && e4.updateHoverStyle(e4.active, i2.mode, true), a2 = !st.arrayEquals(e4.active, e4.lastActive), e4.lastActive = e4.active, a2;
        } }), Un.instances = {};
        var Gn = Un;
        Un.Controller = Un, Un.types = {}, st.configMerge = qn, st.scaleMerge = Bn;
        var Xn = function() {
          function t4(t5, e5, n5) {
            var i2;
            return typeof t5 == "string" ? (i2 = parseInt(t5, 10), t5.indexOf("%") !== -1 && (i2 = i2 / 100 * e5.parentNode[n5])) : i2 = t5, i2;
          }
          function e4(t5) {
            return t5 != null && t5 !== "none";
          }
          function n4(n5, i2, a2) {
            var r2 = document.defaultView, o2 = st._getParentNode(n5), s2 = r2.getComputedStyle(n5)[i2], l2 = r2.getComputedStyle(o2)[i2], c2 = e4(s2), d2 = e4(l2), u2 = Number.POSITIVE_INFINITY;
            return c2 || d2 ? Math.min(c2 ? t4(s2, n5, a2) : u2, d2 ? t4(l2, o2, a2) : u2) : "none";
          }
          st.where = function(t5, e5) {
            if (st.isArray(t5) && Array.prototype.filter)
              return t5.filter(e5);
            var n5 = [];
            return st.each(t5, function(t6) {
              e5(t6) && n5.push(t6);
            }), n5;
          }, st.findIndex = Array.prototype.findIndex ? function(t5, e5, n5) {
            return t5.findIndex(e5, n5);
          } : function(t5, e5, n5) {
            n5 = n5 === void 0 ? t5 : n5;
            for (var i2 = 0, a2 = t5.length; i2 < a2; ++i2)
              if (e5.call(n5, t5[i2], i2, t5))
                return i2;
            return -1;
          }, st.findNextWhere = function(t5, e5, n5) {
            st.isNullOrUndef(n5) && (n5 = -1);
            for (var i2 = n5 + 1; i2 < t5.length; i2++) {
              var a2 = t5[i2];
              if (e5(a2))
                return a2;
            }
          }, st.findPreviousWhere = function(t5, e5, n5) {
            st.isNullOrUndef(n5) && (n5 = t5.length);
            for (var i2 = n5 - 1; i2 >= 0; i2--) {
              var a2 = t5[i2];
              if (e5(a2))
                return a2;
            }
          }, st.isNumber = function(t5) {
            return !isNaN(parseFloat(t5)) && isFinite(t5);
          }, st.almostEquals = function(t5, e5, n5) {
            return Math.abs(t5 - e5) < n5;
          }, st.almostWhole = function(t5, e5) {
            var n5 = Math.round(t5);
            return n5 - e5 <= t5 && n5 + e5 >= t5;
          }, st.max = function(t5) {
            return t5.reduce(function(t6, e5) {
              return isNaN(e5) ? t6 : Math.max(t6, e5);
            }, Number.NEGATIVE_INFINITY);
          }, st.min = function(t5) {
            return t5.reduce(function(t6, e5) {
              return isNaN(e5) ? t6 : Math.min(t6, e5);
            }, Number.POSITIVE_INFINITY);
          }, st.sign = Math.sign ? function(t5) {
            return Math.sign(t5);
          } : function(t5) {
            return (t5 = +t5) == 0 || isNaN(t5) ? t5 : t5 > 0 ? 1 : -1;
          }, st.toRadians = function(t5) {
            return t5 * (Math.PI / 180);
          }, st.toDegrees = function(t5) {
            return t5 * (180 / Math.PI);
          }, st._decimalPlaces = function(t5) {
            if (st.isFinite(t5)) {
              for (var e5 = 1, n5 = 0; Math.round(t5 * e5) / e5 !== t5; )
                e5 *= 10, n5++;
              return n5;
            }
          }, st.getAngleFromPoint = function(t5, e5) {
            var n5 = e5.x - t5.x, i2 = e5.y - t5.y, a2 = Math.sqrt(n5 * n5 + i2 * i2), r2 = Math.atan2(i2, n5);
            return r2 < -0.5 * Math.PI && (r2 += 2 * Math.PI), { angle: r2, distance: a2 };
          }, st.distanceBetweenPoints = function(t5, e5) {
            return Math.sqrt(Math.pow(e5.x - t5.x, 2) + Math.pow(e5.y - t5.y, 2));
          }, st.aliasPixel = function(t5) {
            return t5 % 2 == 0 ? 0 : 0.5;
          }, st._alignPixel = function(t5, e5, n5) {
            var i2 = t5.currentDevicePixelRatio, a2 = n5 / 2;
            return Math.round((e5 - a2) * i2) / i2 + a2;
          }, st.splineCurve = function(t5, e5, n5, i2) {
            var a2 = t5.skip ? e5 : t5, r2 = e5, o2 = n5.skip ? e5 : n5, s2 = Math.sqrt(Math.pow(r2.x - a2.x, 2) + Math.pow(r2.y - a2.y, 2)), l2 = Math.sqrt(Math.pow(o2.x - r2.x, 2) + Math.pow(o2.y - r2.y, 2)), c2 = s2 / (s2 + l2), d2 = l2 / (s2 + l2), u2 = i2 * (c2 = isNaN(c2) ? 0 : c2), h2 = i2 * (d2 = isNaN(d2) ? 0 : d2);
            return { previous: { x: r2.x - u2 * (o2.x - a2.x), y: r2.y - u2 * (o2.y - a2.y) }, next: { x: r2.x + h2 * (o2.x - a2.x), y: r2.y + h2 * (o2.y - a2.y) } };
          }, st.EPSILON = Number.EPSILON || 1e-14, st.splineCurveMonotone = function(t5) {
            var e5, n5, i2, a2, r2, o2, s2, l2, c2, d2 = (t5 || []).map(function(t6) {
              return { model: t6._model, deltaK: 0, mK: 0 };
            }), u2 = d2.length;
            for (e5 = 0; e5 < u2; ++e5)
              if (!(i2 = d2[e5]).model.skip) {
                if (n5 = e5 > 0 ? d2[e5 - 1] : null, (a2 = e5 < u2 - 1 ? d2[e5 + 1] : null) && !a2.model.skip) {
                  var h2 = a2.model.x - i2.model.x;
                  i2.deltaK = h2 !== 0 ? (a2.model.y - i2.model.y) / h2 : 0;
                }
                !n5 || n5.model.skip ? i2.mK = i2.deltaK : !a2 || a2.model.skip ? i2.mK = n5.deltaK : this.sign(n5.deltaK) !== this.sign(i2.deltaK) ? i2.mK = 0 : i2.mK = (n5.deltaK + i2.deltaK) / 2;
              }
            for (e5 = 0; e5 < u2 - 1; ++e5)
              i2 = d2[e5], a2 = d2[e5 + 1], i2.model.skip || a2.model.skip || (st.almostEquals(i2.deltaK, 0, this.EPSILON) ? i2.mK = a2.mK = 0 : (r2 = i2.mK / i2.deltaK, o2 = a2.mK / i2.deltaK, (l2 = Math.pow(r2, 2) + Math.pow(o2, 2)) <= 9 || (s2 = 3 / Math.sqrt(l2), i2.mK = r2 * s2 * i2.deltaK, a2.mK = o2 * s2 * i2.deltaK)));
            for (e5 = 0; e5 < u2; ++e5)
              (i2 = d2[e5]).model.skip || (n5 = e5 > 0 ? d2[e5 - 1] : null, a2 = e5 < u2 - 1 ? d2[e5 + 1] : null, n5 && !n5.model.skip && (c2 = (i2.model.x - n5.model.x) / 3, i2.model.controlPointPreviousX = i2.model.x - c2, i2.model.controlPointPreviousY = i2.model.y - c2 * i2.mK), a2 && !a2.model.skip && (c2 = (a2.model.x - i2.model.x) / 3, i2.model.controlPointNextX = i2.model.x + c2, i2.model.controlPointNextY = i2.model.y + c2 * i2.mK));
          }, st.nextItem = function(t5, e5, n5) {
            return n5 ? e5 >= t5.length - 1 ? t5[0] : t5[e5 + 1] : e5 >= t5.length - 1 ? t5[t5.length - 1] : t5[e5 + 1];
          }, st.previousItem = function(t5, e5, n5) {
            return n5 ? e5 <= 0 ? t5[t5.length - 1] : t5[e5 - 1] : e5 <= 0 ? t5[0] : t5[e5 - 1];
          }, st.niceNum = function(t5, e5) {
            var n5 = Math.floor(st.log10(t5)), i2 = t5 / Math.pow(10, n5);
            return (e5 ? i2 < 1.5 ? 1 : i2 < 3 ? 2 : i2 < 7 ? 5 : 10 : i2 <= 1 ? 1 : i2 <= 2 ? 2 : i2 <= 5 ? 5 : 10) * Math.pow(10, n5);
          }, st.requestAnimFrame = typeof window == "undefined" ? function(t5) {
            t5();
          } : window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(t5) {
            return window.setTimeout(t5, 1e3 / 60);
          }, st.getRelativePosition = function(t5, e5) {
            var n5, i2, a2 = t5.originalEvent || t5, r2 = t5.target || t5.srcElement, o2 = r2.getBoundingClientRect(), s2 = a2.touches;
            s2 && s2.length > 0 ? (n5 = s2[0].clientX, i2 = s2[0].clientY) : (n5 = a2.clientX, i2 = a2.clientY);
            var l2 = parseFloat(st.getStyle(r2, "padding-left")), c2 = parseFloat(st.getStyle(r2, "padding-top")), d2 = parseFloat(st.getStyle(r2, "padding-right")), u2 = parseFloat(st.getStyle(r2, "padding-bottom")), h2 = o2.right - o2.left - l2 - d2, p2 = o2.bottom - o2.top - c2 - u2;
            return { x: n5 = Math.round((n5 - o2.left - l2) / h2 * r2.width / e5.currentDevicePixelRatio), y: i2 = Math.round((i2 - o2.top - c2) / p2 * r2.height / e5.currentDevicePixelRatio) };
          }, st.getConstraintWidth = function(t5) {
            return n4(t5, "max-width", "clientWidth");
          }, st.getConstraintHeight = function(t5) {
            return n4(t5, "max-height", "clientHeight");
          }, st._calculatePadding = function(t5, e5, n5) {
            return (e5 = st.getStyle(t5, e5)).indexOf("%") > -1 ? n5 * parseInt(e5, 10) / 100 : parseInt(e5, 10);
          }, st._getParentNode = function(t5) {
            var e5 = t5.parentNode;
            return e5 && e5.toString() === "[object ShadowRoot]" && (e5 = e5.host), e5;
          }, st.getMaximumWidth = function(t5) {
            var e5 = st._getParentNode(t5);
            if (!e5)
              return t5.clientWidth;
            var n5 = e5.clientWidth, i2 = n5 - st._calculatePadding(e5, "padding-left", n5) - st._calculatePadding(e5, "padding-right", n5), a2 = st.getConstraintWidth(t5);
            return isNaN(a2) ? i2 : Math.min(i2, a2);
          }, st.getMaximumHeight = function(t5) {
            var e5 = st._getParentNode(t5);
            if (!e5)
              return t5.clientHeight;
            var n5 = e5.clientHeight, i2 = n5 - st._calculatePadding(e5, "padding-top", n5) - st._calculatePadding(e5, "padding-bottom", n5), a2 = st.getConstraintHeight(t5);
            return isNaN(a2) ? i2 : Math.min(i2, a2);
          }, st.getStyle = function(t5, e5) {
            return t5.currentStyle ? t5.currentStyle[e5] : document.defaultView.getComputedStyle(t5, null).getPropertyValue(e5);
          }, st.retinaScale = function(t5, e5) {
            var n5 = t5.currentDevicePixelRatio = e5 || typeof window != "undefined" && window.devicePixelRatio || 1;
            if (n5 !== 1) {
              var i2 = t5.canvas, a2 = t5.height, r2 = t5.width;
              i2.height = a2 * n5, i2.width = r2 * n5, t5.ctx.scale(n5, n5), i2.style.height || i2.style.width || (i2.style.height = a2 + "px", i2.style.width = r2 + "px");
            }
          }, st.fontString = function(t5, e5, n5) {
            return e5 + " " + t5 + "px " + n5;
          }, st.longestText = function(t5, e5, n5, i2) {
            var a2 = (i2 = i2 || {}).data = i2.data || {}, r2 = i2.garbageCollect = i2.garbageCollect || [];
            i2.font !== e5 && (a2 = i2.data = {}, r2 = i2.garbageCollect = [], i2.font = e5), t5.font = e5;
            var o2, s2, l2, c2, d2, u2 = 0, h2 = n5.length;
            for (o2 = 0; o2 < h2; o2++)
              if ((c2 = n5[o2]) != null && st.isArray(c2) !== true)
                u2 = st.measureText(t5, a2, r2, u2, c2);
              else if (st.isArray(c2))
                for (s2 = 0, l2 = c2.length; s2 < l2; s2++)
                  (d2 = c2[s2]) == null || st.isArray(d2) || (u2 = st.measureText(t5, a2, r2, u2, d2));
            var p2 = r2.length / 2;
            if (p2 > n5.length) {
              for (o2 = 0; o2 < p2; o2++)
                delete a2[r2[o2]];
              r2.splice(0, p2);
            }
            return u2;
          }, st.measureText = function(t5, e5, n5, i2, a2) {
            var r2 = e5[a2];
            return r2 || (r2 = e5[a2] = t5.measureText(a2).width, n5.push(a2)), r2 > i2 && (i2 = r2), i2;
          }, st.numberOfLabelLines = function(t5) {
            var e5 = 1;
            return st.each(t5, function(t6) {
              st.isArray(t6) && t6.length > e5 && (e5 = t6.length);
            }), e5;
          }, st.color = N ? function(t5) {
            return t5 instanceof CanvasGradient && (t5 = Q.global.defaultColor), N(t5);
          } : function(t5) {
            return console.error("Color.js not found!"), t5;
          }, st.getHoverColor = function(t5) {
            return t5 instanceof CanvasPattern || t5 instanceof CanvasGradient ? t5 : st.color(t5).saturate(0.5).darken(0.1).rgbString();
          };
        };
        function Zn() {
          throw new Error("This method is not implemented: either no adapter can be found or an incomplete integration was provided.");
        }
        function Kn(t4) {
          this.options = t4 || {};
        }
        st.extend(Kn.prototype, { formats: Zn, parse: Zn, format: Zn, add: Zn, diff: Zn, startOf: Zn, endOf: Zn, _create: function(t4) {
          return t4;
        } }), Kn.override = function(t4) {
          st.extend(Kn.prototype, t4);
        };
        var Qn = { _date: Kn }, Jn = { formatters: { values: function(t4) {
          return st.isArray(t4) ? t4 : "" + t4;
        }, linear: function(t4, e4, n4) {
          var i2 = n4.length > 3 ? n4[2] - n4[1] : n4[1] - n4[0];
          Math.abs(i2) > 1 && t4 !== Math.floor(t4) && (i2 = t4 - Math.floor(t4));
          var a2 = st.log10(Math.abs(i2)), r2 = "";
          if (t4 !== 0)
            if (Math.max(Math.abs(n4[0]), Math.abs(n4[n4.length - 1])) < 1e-4) {
              var o2 = st.log10(Math.abs(t4)), s2 = Math.floor(o2) - Math.floor(a2);
              s2 = Math.max(Math.min(s2, 20), 0), r2 = t4.toExponential(s2);
            } else {
              var l2 = -1 * Math.floor(a2);
              l2 = Math.max(Math.min(l2, 20), 0), r2 = t4.toFixed(l2);
            }
          else
            r2 = "0";
          return r2;
        }, logarithmic: function(t4, e4, n4) {
          var i2 = t4 / Math.pow(10, Math.floor(st.log10(t4)));
          return t4 === 0 ? "0" : i2 === 1 || i2 === 2 || i2 === 5 || e4 === 0 || e4 === n4.length - 1 ? t4.toExponential() : "";
        } } }, ti = st.isArray, ei = st.isNullOrUndef, ni = st.valueOrDefault, ii = st.valueAtIndexOrDefault;
        function ai(t4, e4) {
          for (var n4 = [], i2 = t4.length / e4, a2 = 0, r2 = t4.length; a2 < r2; a2 += i2)
            n4.push(t4[Math.floor(a2)]);
          return n4;
        }
        function ri(t4, e4, n4) {
          var i2, a2 = t4.getTicks().length, r2 = Math.min(e4, a2 - 1), o2 = t4.getPixelForTick(r2), s2 = t4._startPixel, l2 = t4._endPixel, c2 = 1e-6;
          if (!(n4 && (i2 = a2 === 1 ? Math.max(o2 - s2, l2 - o2) : e4 === 0 ? (t4.getPixelForTick(1) - o2) / 2 : (o2 - t4.getPixelForTick(r2 - 1)) / 2, (o2 += r2 < e4 ? i2 : -i2) < s2 - c2 || o2 > l2 + c2)))
            return o2;
        }
        function oi(t4, e4) {
          st.each(t4, function(t5) {
            var n4, i2 = t5.gc, a2 = i2.length / 2;
            if (a2 > e4) {
              for (n4 = 0; n4 < a2; ++n4)
                delete t5.data[i2[n4]];
              i2.splice(0, a2);
            }
          });
        }
        function si(t4, e4, n4, i2) {
          var a2, r2, o2, s2, l2, c2, d2, u2, h2, p2, f2, g2, m2, v2 = n4.length, b2 = [], y2 = [], x2 = [], _2 = 0, w2 = 0;
          for (a2 = 0; a2 < v2; ++a2) {
            if (s2 = n4[a2].label, l2 = n4[a2].major ? e4.major : e4.minor, t4.font = c2 = l2.string, d2 = i2[c2] = i2[c2] || { data: {}, gc: [] }, u2 = l2.lineHeight, h2 = p2 = 0, ei(s2) || ti(s2)) {
              if (ti(s2))
                for (r2 = 0, o2 = s2.length; r2 < o2; ++r2)
                  f2 = s2[r2], ei(f2) || ti(f2) || (h2 = st.measureText(t4, d2.data, d2.gc, h2, f2), p2 += u2);
            } else
              h2 = st.measureText(t4, d2.data, d2.gc, h2, s2), p2 = u2;
            b2.push(h2), y2.push(p2), x2.push(u2 / 2), _2 = Math.max(h2, _2), w2 = Math.max(p2, w2);
          }
          function S2(t5) {
            return { width: b2[t5] || 0, height: y2[t5] || 0, offset: x2[t5] || 0 };
          }
          return oi(i2, v2), g2 = b2.indexOf(_2), m2 = y2.indexOf(w2), { first: S2(0), last: S2(v2 - 1), widest: S2(g2), highest: S2(m2) };
        }
        function li(t4) {
          return t4.drawTicks ? t4.tickMarkLength : 0;
        }
        function ci(t4) {
          var e4, n4;
          return t4.display ? (e4 = st.options._parseFont(t4), n4 = st.options.toPadding(t4.padding), e4.lineHeight + n4.height) : 0;
        }
        function di(t4, e4) {
          return st.extend(st.options._parseFont({ fontFamily: ni(e4.fontFamily, t4.fontFamily), fontSize: ni(e4.fontSize, t4.fontSize), fontStyle: ni(e4.fontStyle, t4.fontStyle), lineHeight: ni(e4.lineHeight, t4.lineHeight) }), { color: st.options.resolve([e4.fontColor, t4.fontColor, Q.global.defaultFontColor]) });
        }
        function ui(t4) {
          var e4 = di(t4, t4.minor);
          return { minor: e4, major: t4.major.enabled ? di(t4, t4.major) : e4 };
        }
        function hi(t4) {
          var e4, n4, i2, a2 = [];
          for (n4 = 0, i2 = t4.length; n4 < i2; ++n4)
            (e4 = t4[n4])._index !== void 0 && a2.push(e4);
          return a2;
        }
        function pi(t4) {
          var e4, n4, i2 = t4.length;
          if (i2 < 2)
            return false;
          for (n4 = t4[0], e4 = 1; e4 < i2; ++e4)
            if (t4[e4] - t4[e4 - 1] !== n4)
              return false;
          return n4;
        }
        function fi(t4, e4, n4, i2) {
          var a2, r2, o2, s2, l2 = pi(t4), c2 = (e4.length - 1) / i2;
          if (!l2)
            return Math.max(c2, 1);
          for (o2 = 0, s2 = (a2 = st.math._factorize(l2)).length - 1; o2 < s2; o2++)
            if ((r2 = a2[o2]) > c2)
              return r2;
          return Math.max(c2, 1);
        }
        function gi(t4) {
          var e4, n4, i2 = [];
          for (e4 = 0, n4 = t4.length; e4 < n4; e4++)
            t4[e4].major && i2.push(e4);
          return i2;
        }
        function mi(t4, e4, n4) {
          var i2, a2, r2 = 0, o2 = e4[0];
          for (n4 = Math.ceil(n4), i2 = 0; i2 < t4.length; i2++)
            a2 = t4[i2], i2 === o2 ? (a2._index = i2, o2 = e4[++r2 * n4]) : delete a2.label;
        }
        function vi(t4, e4, n4, i2) {
          var a2, r2, o2, s2, l2 = ni(n4, 0), c2 = Math.min(ni(i2, t4.length), t4.length), d2 = 0;
          for (e4 = Math.ceil(e4), i2 && (e4 = (a2 = i2 - n4) / Math.floor(a2 / e4)), s2 = l2; s2 < 0; )
            d2++, s2 = Math.round(l2 + d2 * e4);
          for (r2 = Math.max(l2, 0); r2 < c2; r2++)
            o2 = t4[r2], r2 === s2 ? (o2._index = r2, d2++, s2 = Math.round(l2 + d2 * e4)) : delete o2.label;
        }
        Q._set("scale", { display: true, position: "left", offset: false, gridLines: { display: true, color: "rgba(0,0,0,0.1)", lineWidth: 1, drawBorder: true, drawOnChartArea: true, drawTicks: true, tickMarkLength: 10, zeroLineWidth: 1, zeroLineColor: "rgba(0,0,0,0.25)", zeroLineBorderDash: [], zeroLineBorderDashOffset: 0, offsetGridLines: false, borderDash: [], borderDashOffset: 0 }, scaleLabel: { display: false, labelString: "", padding: { top: 4, bottom: 4 } }, ticks: { beginAtZero: false, minRotation: 0, maxRotation: 50, mirror: false, padding: 0, reverse: false, display: true, autoSkip: true, autoSkipPadding: 0, labelOffset: 0, callback: Jn.formatters.values, minor: {}, major: {} } });
        var bi = gt.extend({ zeroLineIndex: 0, getPadding: function() {
          var t4 = this;
          return { left: t4.paddingLeft || 0, top: t4.paddingTop || 0, right: t4.paddingRight || 0, bottom: t4.paddingBottom || 0 };
        }, getTicks: function() {
          return this._ticks;
        }, _getLabels: function() {
          var t4 = this.chart.data;
          return this.options.labels || (this.isHorizontal() ? t4.xLabels : t4.yLabels) || t4.labels || [];
        }, mergeTicksOptions: function() {
        }, beforeUpdate: function() {
          st.callback(this.options.beforeUpdate, [this]);
        }, update: function(t4, e4, n4) {
          var i2, a2, r2, o2, s2, l2 = this, c2 = l2.options.ticks, d2 = c2.sampleSize;
          if (l2.beforeUpdate(), l2.maxWidth = t4, l2.maxHeight = e4, l2.margins = st.extend({ left: 0, right: 0, top: 0, bottom: 0 }, n4), l2._ticks = null, l2.ticks = null, l2._labelSizes = null, l2._maxLabelLines = 0, l2.longestLabelWidth = 0, l2.longestTextCache = l2.longestTextCache || {}, l2._gridLineItems = null, l2._labelItems = null, l2.beforeSetDimensions(), l2.setDimensions(), l2.afterSetDimensions(), l2.beforeDataLimits(), l2.determineDataLimits(), l2.afterDataLimits(), l2.beforeBuildTicks(), o2 = l2.buildTicks() || [], (!(o2 = l2.afterBuildTicks(o2) || o2) || !o2.length) && l2.ticks)
            for (o2 = [], i2 = 0, a2 = l2.ticks.length; i2 < a2; ++i2)
              o2.push({ value: l2.ticks[i2], major: false });
          return l2._ticks = o2, s2 = d2 < o2.length, r2 = l2._convertTicksToLabels(s2 ? ai(o2, d2) : o2), l2._configure(), l2.beforeCalculateTickRotation(), l2.calculateTickRotation(), l2.afterCalculateTickRotation(), l2.beforeFit(), l2.fit(), l2.afterFit(), l2._ticksToDraw = c2.display && (c2.autoSkip || c2.source === "auto") ? l2._autoSkip(o2) : o2, s2 && (r2 = l2._convertTicksToLabels(l2._ticksToDraw)), l2.ticks = r2, l2.afterUpdate(), l2.minSize;
        }, _configure: function() {
          var t4, e4, n4 = this, i2 = n4.options.ticks.reverse;
          n4.isHorizontal() ? (t4 = n4.left, e4 = n4.right) : (t4 = n4.top, e4 = n4.bottom, i2 = !i2), n4._startPixel = t4, n4._endPixel = e4, n4._reversePixels = i2, n4._length = e4 - t4;
        }, afterUpdate: function() {
          st.callback(this.options.afterUpdate, [this]);
        }, beforeSetDimensions: function() {
          st.callback(this.options.beforeSetDimensions, [this]);
        }, setDimensions: function() {
          var t4 = this;
          t4.isHorizontal() ? (t4.width = t4.maxWidth, t4.left = 0, t4.right = t4.width) : (t4.height = t4.maxHeight, t4.top = 0, t4.bottom = t4.height), t4.paddingLeft = 0, t4.paddingTop = 0, t4.paddingRight = 0, t4.paddingBottom = 0;
        }, afterSetDimensions: function() {
          st.callback(this.options.afterSetDimensions, [this]);
        }, beforeDataLimits: function() {
          st.callback(this.options.beforeDataLimits, [this]);
        }, determineDataLimits: st.noop, afterDataLimits: function() {
          st.callback(this.options.afterDataLimits, [this]);
        }, beforeBuildTicks: function() {
          st.callback(this.options.beforeBuildTicks, [this]);
        }, buildTicks: st.noop, afterBuildTicks: function(t4) {
          var e4 = this;
          return ti(t4) && t4.length ? st.callback(e4.options.afterBuildTicks, [e4, t4]) : (e4.ticks = st.callback(e4.options.afterBuildTicks, [e4, e4.ticks]) || e4.ticks, t4);
        }, beforeTickToLabelConversion: function() {
          st.callback(this.options.beforeTickToLabelConversion, [this]);
        }, convertTicksToLabels: function() {
          var t4 = this, e4 = t4.options.ticks;
          t4.ticks = t4.ticks.map(e4.userCallback || e4.callback, this);
        }, afterTickToLabelConversion: function() {
          st.callback(this.options.afterTickToLabelConversion, [this]);
        }, beforeCalculateTickRotation: function() {
          st.callback(this.options.beforeCalculateTickRotation, [this]);
        }, calculateTickRotation: function() {
          var t4, e4, n4, i2, a2, r2, o2, s2 = this, l2 = s2.options, c2 = l2.ticks, d2 = s2.getTicks().length, u2 = c2.minRotation || 0, h2 = c2.maxRotation, p2 = u2;
          !s2._isVisible() || !c2.display || u2 >= h2 || d2 <= 1 || !s2.isHorizontal() ? s2.labelRotation = u2 : (e4 = (t4 = s2._getLabelSizes()).widest.width, n4 = t4.highest.height - t4.highest.offset, i2 = Math.min(s2.maxWidth, s2.chart.width - e4), e4 + 6 > (a2 = l2.offset ? s2.maxWidth / d2 : i2 / (d2 - 1)) && (a2 = i2 / (d2 - (l2.offset ? 0.5 : 1)), r2 = s2.maxHeight - li(l2.gridLines) - c2.padding - ci(l2.scaleLabel), o2 = Math.sqrt(e4 * e4 + n4 * n4), p2 = st.toDegrees(Math.min(Math.asin(Math.min((t4.highest.height + 6) / a2, 1)), Math.asin(Math.min(r2 / o2, 1)) - Math.asin(n4 / o2))), p2 = Math.max(u2, Math.min(h2, p2))), s2.labelRotation = p2);
        }, afterCalculateTickRotation: function() {
          st.callback(this.options.afterCalculateTickRotation, [this]);
        }, beforeFit: function() {
          st.callback(this.options.beforeFit, [this]);
        }, fit: function() {
          var t4 = this, e4 = t4.minSize = { width: 0, height: 0 }, n4 = t4.chart, i2 = t4.options, a2 = i2.ticks, r2 = i2.scaleLabel, o2 = i2.gridLines, s2 = t4._isVisible(), l2 = i2.position === "bottom", c2 = t4.isHorizontal();
          if (c2 ? e4.width = t4.maxWidth : s2 && (e4.width = li(o2) + ci(r2)), c2 ? s2 && (e4.height = li(o2) + ci(r2)) : e4.height = t4.maxHeight, a2.display && s2) {
            var d2 = ui(a2), u2 = t4._getLabelSizes(), h2 = u2.first, p2 = u2.last, f2 = u2.widest, g2 = u2.highest, m2 = 0.4 * d2.minor.lineHeight, v2 = a2.padding;
            if (c2) {
              var b2 = t4.labelRotation !== 0, y2 = st.toRadians(t4.labelRotation), x2 = Math.cos(y2), _2 = Math.sin(y2), w2 = _2 * f2.width + x2 * (g2.height - (b2 ? g2.offset : 0)) + (b2 ? 0 : m2);
              e4.height = Math.min(t4.maxHeight, e4.height + w2 + v2);
              var S2, C2, k2 = t4.getPixelForTick(0) - t4.left, D2 = t4.right - t4.getPixelForTick(t4.getTicks().length - 1);
              b2 ? (S2 = l2 ? x2 * h2.width + _2 * h2.offset : _2 * (h2.height - h2.offset), C2 = l2 ? _2 * (p2.height - p2.offset) : x2 * p2.width + _2 * p2.offset) : (S2 = h2.width / 2, C2 = p2.width / 2), t4.paddingLeft = Math.max((S2 - k2) * t4.width / (t4.width - k2), 0) + 3, t4.paddingRight = Math.max((C2 - D2) * t4.width / (t4.width - D2), 0) + 3;
            } else {
              var T2 = a2.mirror ? 0 : f2.width + v2 + m2;
              e4.width = Math.min(t4.maxWidth, e4.width + T2), t4.paddingTop = h2.height / 2, t4.paddingBottom = p2.height / 2;
            }
          }
          t4.handleMargins(), c2 ? (t4.width = t4._length = n4.width - t4.margins.left - t4.margins.right, t4.height = e4.height) : (t4.width = e4.width, t4.height = t4._length = n4.height - t4.margins.top - t4.margins.bottom);
        }, handleMargins: function() {
          var t4 = this;
          t4.margins && (t4.margins.left = Math.max(t4.paddingLeft, t4.margins.left), t4.margins.top = Math.max(t4.paddingTop, t4.margins.top), t4.margins.right = Math.max(t4.paddingRight, t4.margins.right), t4.margins.bottom = Math.max(t4.paddingBottom, t4.margins.bottom));
        }, afterFit: function() {
          st.callback(this.options.afterFit, [this]);
        }, isHorizontal: function() {
          var t4 = this.options.position;
          return t4 === "top" || t4 === "bottom";
        }, isFullWidth: function() {
          return this.options.fullWidth;
        }, getRightValue: function(t4) {
          if (ei(t4))
            return NaN;
          if ((typeof t4 == "number" || t4 instanceof Number) && !isFinite(t4))
            return NaN;
          if (t4) {
            if (this.isHorizontal()) {
              if (t4.x !== void 0)
                return this.getRightValue(t4.x);
            } else if (t4.y !== void 0)
              return this.getRightValue(t4.y);
          }
          return t4;
        }, _convertTicksToLabels: function(t4) {
          var e4, n4, i2, a2 = this;
          for (a2.ticks = t4.map(function(t5) {
            return t5.value;
          }), a2.beforeTickToLabelConversion(), e4 = a2.convertTicksToLabels(t4) || a2.ticks, a2.afterTickToLabelConversion(), n4 = 0, i2 = t4.length; n4 < i2; ++n4)
            t4[n4].label = e4[n4];
          return e4;
        }, _getLabelSizes: function() {
          var t4 = this, e4 = t4._labelSizes;
          return e4 || (t4._labelSizes = e4 = si(t4.ctx, ui(t4.options.ticks), t4.getTicks(), t4.longestTextCache), t4.longestLabelWidth = e4.widest.width), e4;
        }, _parseValue: function(t4) {
          var e4, n4, i2, a2;
          return ti(t4) ? (e4 = +this.getRightValue(t4[0]), n4 = +this.getRightValue(t4[1]), i2 = Math.min(e4, n4), a2 = Math.max(e4, n4)) : (e4 = void 0, n4 = t4 = +this.getRightValue(t4), i2 = t4, a2 = t4), { min: i2, max: a2, start: e4, end: n4 };
        }, _getScaleLabel: function(t4) {
          var e4 = this._parseValue(t4);
          return e4.start !== void 0 ? "[" + e4.start + ", " + e4.end + "]" : +this.getRightValue(t4);
        }, getLabelForIndex: st.noop, getPixelForValue: st.noop, getValueForPixel: st.noop, getPixelForTick: function(t4) {
          var e4 = this, n4 = e4.options.offset, i2 = e4._ticks.length, a2 = 1 / Math.max(i2 - (n4 ? 0 : 1), 1);
          return t4 < 0 || t4 > i2 - 1 ? null : e4.getPixelForDecimal(t4 * a2 + (n4 ? a2 / 2 : 0));
        }, getPixelForDecimal: function(t4) {
          var e4 = this;
          return e4._reversePixels && (t4 = 1 - t4), e4._startPixel + t4 * e4._length;
        }, getDecimalForPixel: function(t4) {
          var e4 = (t4 - this._startPixel) / this._length;
          return this._reversePixels ? 1 - e4 : e4;
        }, getBasePixel: function() {
          return this.getPixelForValue(this.getBaseValue());
        }, getBaseValue: function() {
          var t4 = this, e4 = t4.min, n4 = t4.max;
          return t4.beginAtZero ? 0 : e4 < 0 && n4 < 0 ? n4 : e4 > 0 && n4 > 0 ? e4 : 0;
        }, _autoSkip: function(t4) {
          var e4, n4, i2, a2, r2 = this, o2 = r2.options.ticks, s2 = r2._length, l2 = o2.maxTicksLimit || s2 / r2._tickSize() + 1, c2 = o2.major.enabled ? gi(t4) : [], d2 = c2.length, u2 = c2[0], h2 = c2[d2 - 1];
          if (d2 > l2)
            return mi(t4, c2, d2 / l2), hi(t4);
          if (i2 = fi(c2, t4, s2, l2), d2 > 0) {
            for (e4 = 0, n4 = d2 - 1; e4 < n4; e4++)
              vi(t4, i2, c2[e4], c2[e4 + 1]);
            return a2 = d2 > 1 ? (h2 - u2) / (d2 - 1) : null, vi(t4, i2, st.isNullOrUndef(a2) ? 0 : u2 - a2, u2), vi(t4, i2, h2, st.isNullOrUndef(a2) ? t4.length : h2 + a2), hi(t4);
          }
          return vi(t4, i2), hi(t4);
        }, _tickSize: function() {
          var t4 = this, e4 = t4.options.ticks, n4 = st.toRadians(t4.labelRotation), i2 = Math.abs(Math.cos(n4)), a2 = Math.abs(Math.sin(n4)), r2 = t4._getLabelSizes(), o2 = e4.autoSkipPadding || 0, s2 = r2 ? r2.widest.width + o2 : 0, l2 = r2 ? r2.highest.height + o2 : 0;
          return t4.isHorizontal() ? l2 * i2 > s2 * a2 ? s2 / i2 : l2 / a2 : l2 * a2 < s2 * i2 ? l2 / i2 : s2 / a2;
        }, _isVisible: function() {
          var t4, e4, n4, i2 = this, a2 = i2.chart, r2 = i2.options.display;
          if (r2 !== "auto")
            return !!r2;
          for (t4 = 0, e4 = a2.data.datasets.length; t4 < e4; ++t4)
            if (a2.isDatasetVisible(t4) && ((n4 = a2.getDatasetMeta(t4)).xAxisID === i2.id || n4.yAxisID === i2.id))
              return true;
          return false;
        }, _computeGridLineItems: function(t4) {
          var e4, n4, i2, a2, r2, o2, s2, l2, c2, d2, u2, h2, p2, f2, g2, m2, v2, b2 = this, y2 = b2.chart, x2 = b2.options, _2 = x2.gridLines, w2 = x2.position, S2 = _2.offsetGridLines, C2 = b2.isHorizontal(), k2 = b2._ticksToDraw, D2 = k2.length + (S2 ? 1 : 0), T2 = li(_2), E2 = [], A2 = _2.drawBorder ? ii(_2.lineWidth, 0, 0) : 0, I2 = A2 / 2, M2 = st._alignPixel, R2 = function(t5) {
            return M2(y2, t5, A2);
          };
          for (w2 === "top" ? (e4 = R2(b2.bottom), s2 = b2.bottom - T2, c2 = e4 - I2, u2 = R2(t4.top) + I2, p2 = t4.bottom) : w2 === "bottom" ? (e4 = R2(b2.top), u2 = t4.top, p2 = R2(t4.bottom) - I2, s2 = e4 + I2, c2 = b2.top + T2) : w2 === "left" ? (e4 = R2(b2.right), o2 = b2.right - T2, l2 = e4 - I2, d2 = R2(t4.left) + I2, h2 = t4.right) : (e4 = R2(b2.left), d2 = t4.left, h2 = R2(t4.right) - I2, o2 = e4 + I2, l2 = b2.left + T2), n4 = 0; n4 < D2; ++n4)
            i2 = k2[n4] || {}, ei(i2.label) && n4 < k2.length || (n4 === b2.zeroLineIndex && x2.offset === S2 ? (f2 = _2.zeroLineWidth, g2 = _2.zeroLineColor, m2 = _2.zeroLineBorderDash || [], v2 = _2.zeroLineBorderDashOffset || 0) : (f2 = ii(_2.lineWidth, n4, 1), g2 = ii(_2.color, n4, "rgba(0,0,0,0.1)"), m2 = _2.borderDash || [], v2 = _2.borderDashOffset || 0), (a2 = ri(b2, i2._index || n4, S2)) !== void 0 && (r2 = M2(y2, a2, f2), C2 ? o2 = l2 = d2 = h2 = r2 : s2 = c2 = u2 = p2 = r2, E2.push({ tx1: o2, ty1: s2, tx2: l2, ty2: c2, x1: d2, y1: u2, x2: h2, y2: p2, width: f2, color: g2, borderDash: m2, borderDashOffset: v2 })));
          return E2.ticksLength = D2, E2.borderValue = e4, E2;
        }, _computeLabelItems: function() {
          var t4, e4, n4, i2, a2, r2, o2, s2, l2, c2, d2, u2, h2 = this, p2 = h2.options, f2 = p2.ticks, g2 = p2.position, m2 = f2.mirror, v2 = h2.isHorizontal(), b2 = h2._ticksToDraw, y2 = ui(f2), x2 = f2.padding, _2 = li(p2.gridLines), w2 = -st.toRadians(h2.labelRotation), S2 = [];
          for (g2 === "top" ? (r2 = h2.bottom - _2 - x2, o2 = w2 ? "left" : "center") : g2 === "bottom" ? (r2 = h2.top + _2 + x2, o2 = w2 ? "right" : "center") : g2 === "left" ? (a2 = h2.right - (m2 ? 0 : _2) - x2, o2 = m2 ? "left" : "right") : (a2 = h2.left + (m2 ? 0 : _2) + x2, o2 = m2 ? "right" : "left"), t4 = 0, e4 = b2.length; t4 < e4; ++t4)
            i2 = (n4 = b2[t4]).label, ei(i2) || (s2 = h2.getPixelForTick(n4._index || t4) + f2.labelOffset, c2 = (l2 = n4.major ? y2.major : y2.minor).lineHeight, d2 = ti(i2) ? i2.length : 1, v2 ? (a2 = s2, u2 = g2 === "top" ? ((w2 ? 1 : 0.5) - d2) * c2 : (w2 ? 0 : 0.5) * c2) : (r2 = s2, u2 = (1 - d2) * c2 / 2), S2.push({ x: a2, y: r2, rotation: w2, label: i2, font: l2, textOffset: u2, textAlign: o2 }));
          return S2;
        }, _drawGrid: function(t4) {
          var e4 = this, n4 = e4.options.gridLines;
          if (n4.display) {
            var i2, a2, r2, o2, s2, l2 = e4.ctx, c2 = e4.chart, d2 = st._alignPixel, u2 = n4.drawBorder ? ii(n4.lineWidth, 0, 0) : 0, h2 = e4._gridLineItems || (e4._gridLineItems = e4._computeGridLineItems(t4));
            for (r2 = 0, o2 = h2.length; r2 < o2; ++r2)
              i2 = (s2 = h2[r2]).width, a2 = s2.color, i2 && a2 && (l2.save(), l2.lineWidth = i2, l2.strokeStyle = a2, l2.setLineDash && (l2.setLineDash(s2.borderDash), l2.lineDashOffset = s2.borderDashOffset), l2.beginPath(), n4.drawTicks && (l2.moveTo(s2.tx1, s2.ty1), l2.lineTo(s2.tx2, s2.ty2)), n4.drawOnChartArea && (l2.moveTo(s2.x1, s2.y1), l2.lineTo(s2.x2, s2.y2)), l2.stroke(), l2.restore());
            if (u2) {
              var p2, f2, g2, m2, v2 = u2, b2 = ii(n4.lineWidth, h2.ticksLength - 1, 1), y2 = h2.borderValue;
              e4.isHorizontal() ? (p2 = d2(c2, e4.left, v2) - v2 / 2, f2 = d2(c2, e4.right, b2) + b2 / 2, g2 = m2 = y2) : (g2 = d2(c2, e4.top, v2) - v2 / 2, m2 = d2(c2, e4.bottom, b2) + b2 / 2, p2 = f2 = y2), l2.lineWidth = u2, l2.strokeStyle = ii(n4.color, 0), l2.beginPath(), l2.moveTo(p2, g2), l2.lineTo(f2, m2), l2.stroke();
            }
          }
        }, _drawLabels: function() {
          var t4 = this;
          if (t4.options.ticks.display) {
            var e4, n4, i2, a2, r2, o2, s2, l2, c2 = t4.ctx, d2 = t4._labelItems || (t4._labelItems = t4._computeLabelItems());
            for (e4 = 0, i2 = d2.length; e4 < i2; ++e4) {
              if (o2 = (r2 = d2[e4]).font, c2.save(), c2.translate(r2.x, r2.y), c2.rotate(r2.rotation), c2.font = o2.string, c2.fillStyle = o2.color, c2.textBaseline = "middle", c2.textAlign = r2.textAlign, s2 = r2.label, l2 = r2.textOffset, ti(s2))
                for (n4 = 0, a2 = s2.length; n4 < a2; ++n4)
                  c2.fillText("" + s2[n4], 0, l2), l2 += o2.lineHeight;
              else
                c2.fillText(s2, 0, l2);
              c2.restore();
            }
          }
        }, _drawTitle: function() {
          var t4 = this, e4 = t4.ctx, n4 = t4.options, i2 = n4.scaleLabel;
          if (i2.display) {
            var a2, r2, o2 = ni(i2.fontColor, Q.global.defaultFontColor), s2 = st.options._parseFont(i2), l2 = st.options.toPadding(i2.padding), c2 = s2.lineHeight / 2, d2 = n4.position, u2 = 0;
            if (t4.isHorizontal())
              a2 = t4.left + t4.width / 2, r2 = d2 === "bottom" ? t4.bottom - c2 - l2.bottom : t4.top + c2 + l2.top;
            else {
              var h2 = d2 === "left";
              a2 = h2 ? t4.left + c2 + l2.top : t4.right - c2 - l2.top, r2 = t4.top + t4.height / 2, u2 = h2 ? -0.5 * Math.PI : 0.5 * Math.PI;
            }
            e4.save(), e4.translate(a2, r2), e4.rotate(u2), e4.textAlign = "center", e4.textBaseline = "middle", e4.fillStyle = o2, e4.font = s2.string, e4.fillText(i2.labelString, 0, 0), e4.restore();
          }
        }, draw: function(t4) {
          var e4 = this;
          e4._isVisible() && (e4._drawGrid(t4), e4._drawTitle(), e4._drawLabels());
        }, _layers: function() {
          var t4 = this, e4 = t4.options, n4 = e4.ticks && e4.ticks.z || 0, i2 = e4.gridLines && e4.gridLines.z || 0;
          return t4._isVisible() && n4 !== i2 && t4.draw === t4._draw ? [{ z: i2, draw: function() {
            t4._drawGrid.apply(t4, arguments), t4._drawTitle.apply(t4, arguments);
          } }, { z: n4, draw: function() {
            t4._drawLabels.apply(t4, arguments);
          } }] : [{ z: n4, draw: function() {
            t4.draw.apply(t4, arguments);
          } }];
        }, _getMatchingVisibleMetas: function(t4) {
          var e4 = this, n4 = e4.isHorizontal();
          return e4.chart._getSortedVisibleDatasetMetas().filter(function(i2) {
            return (!t4 || i2.type === t4) && (n4 ? i2.xAxisID === e4.id : i2.yAxisID === e4.id);
          });
        } });
        bi.prototype._draw = bi.prototype.draw;
        var yi = bi, xi = st.isNullOrUndef, _i = { position: "bottom" }, wi = yi.extend({ determineDataLimits: function() {
          var t4, e4 = this, n4 = e4._getLabels(), i2 = e4.options.ticks, a2 = i2.min, r2 = i2.max, o2 = 0, s2 = n4.length - 1;
          a2 !== void 0 && (t4 = n4.indexOf(a2)) >= 0 && (o2 = t4), r2 !== void 0 && (t4 = n4.indexOf(r2)) >= 0 && (s2 = t4), e4.minIndex = o2, e4.maxIndex = s2, e4.min = n4[o2], e4.max = n4[s2];
        }, buildTicks: function() {
          var t4 = this, e4 = t4._getLabels(), n4 = t4.minIndex, i2 = t4.maxIndex;
          t4.ticks = n4 === 0 && i2 === e4.length - 1 ? e4 : e4.slice(n4, i2 + 1);
        }, getLabelForIndex: function(t4, e4) {
          var n4 = this, i2 = n4.chart;
          return i2.getDatasetMeta(e4).controller._getValueScaleId() === n4.id ? n4.getRightValue(i2.data.datasets[e4].data[t4]) : n4._getLabels()[t4];
        }, _configure: function() {
          var t4 = this, e4 = t4.options.offset, n4 = t4.ticks;
          yi.prototype._configure.call(t4), t4.isHorizontal() || (t4._reversePixels = !t4._reversePixels), n4 && (t4._startValue = t4.minIndex - (e4 ? 0.5 : 0), t4._valueRange = Math.max(n4.length - (e4 ? 0 : 1), 1));
        }, getPixelForValue: function(t4, e4, n4) {
          var i2, a2, r2, o2 = this;
          return xi(e4) || xi(n4) || (t4 = o2.chart.data.datasets[n4].data[e4]), xi(t4) || (i2 = o2.isHorizontal() ? t4.x : t4.y), (i2 !== void 0 || t4 !== void 0 && isNaN(e4)) && (a2 = o2._getLabels(), t4 = st.valueOrDefault(i2, t4), e4 = (r2 = a2.indexOf(t4)) !== -1 ? r2 : e4, isNaN(e4) && (e4 = t4)), o2.getPixelForDecimal((e4 - o2._startValue) / o2._valueRange);
        }, getPixelForTick: function(t4) {
          var e4 = this.ticks;
          return t4 < 0 || t4 > e4.length - 1 ? null : this.getPixelForValue(e4[t4], t4 + this.minIndex);
        }, getValueForPixel: function(t4) {
          var e4 = this, n4 = Math.round(e4._startValue + e4.getDecimalForPixel(t4) * e4._valueRange);
          return Math.min(Math.max(n4, 0), e4.ticks.length - 1);
        }, getBasePixel: function() {
          return this.bottom;
        } }), Si = _i;
        wi._defaults = Si;
        var Ci = st.noop, ki = st.isNullOrUndef;
        function Di(t4, e4) {
          var n4, i2, a2, r2, o2 = [], s2 = 1e-14, l2 = t4.stepSize, c2 = l2 || 1, d2 = t4.maxTicks - 1, u2 = t4.min, h2 = t4.max, p2 = t4.precision, f2 = e4.min, g2 = e4.max, m2 = st.niceNum((g2 - f2) / d2 / c2) * c2;
          if (m2 < s2 && ki(u2) && ki(h2))
            return [f2, g2];
          (r2 = Math.ceil(g2 / m2) - Math.floor(f2 / m2)) > d2 && (m2 = st.niceNum(r2 * m2 / d2 / c2) * c2), l2 || ki(p2) ? n4 = Math.pow(10, st._decimalPlaces(m2)) : (n4 = Math.pow(10, p2), m2 = Math.ceil(m2 * n4) / n4), i2 = Math.floor(f2 / m2) * m2, a2 = Math.ceil(g2 / m2) * m2, l2 && (!ki(u2) && st.almostWhole(u2 / m2, m2 / 1e3) && (i2 = u2), !ki(h2) && st.almostWhole(h2 / m2, m2 / 1e3) && (a2 = h2)), r2 = (a2 - i2) / m2, r2 = st.almostEquals(r2, Math.round(r2), m2 / 1e3) ? Math.round(r2) : Math.ceil(r2), i2 = Math.round(i2 * n4) / n4, a2 = Math.round(a2 * n4) / n4, o2.push(ki(u2) ? i2 : u2);
          for (var v2 = 1; v2 < r2; ++v2)
            o2.push(Math.round((i2 + v2 * m2) * n4) / n4);
          return o2.push(ki(h2) ? a2 : h2), o2;
        }
        var Ti = yi.extend({ getRightValue: function(t4) {
          return typeof t4 == "string" ? +t4 : yi.prototype.getRightValue.call(this, t4);
        }, handleTickRangeOptions: function() {
          var t4 = this, e4 = t4.options.ticks;
          if (e4.beginAtZero) {
            var n4 = st.sign(t4.min), i2 = st.sign(t4.max);
            n4 < 0 && i2 < 0 ? t4.max = 0 : n4 > 0 && i2 > 0 && (t4.min = 0);
          }
          var a2 = e4.min !== void 0 || e4.suggestedMin !== void 0, r2 = e4.max !== void 0 || e4.suggestedMax !== void 0;
          e4.min !== void 0 ? t4.min = e4.min : e4.suggestedMin !== void 0 && (t4.min === null ? t4.min = e4.suggestedMin : t4.min = Math.min(t4.min, e4.suggestedMin)), e4.max !== void 0 ? t4.max = e4.max : e4.suggestedMax !== void 0 && (t4.max === null ? t4.max = e4.suggestedMax : t4.max = Math.max(t4.max, e4.suggestedMax)), a2 !== r2 && t4.min >= t4.max && (a2 ? t4.max = t4.min + 1 : t4.min = t4.max - 1), t4.min === t4.max && (t4.max++, e4.beginAtZero || t4.min--);
        }, getTickLimit: function() {
          var t4, e4 = this, n4 = e4.options.ticks, i2 = n4.stepSize, a2 = n4.maxTicksLimit;
          return i2 ? t4 = Math.ceil(e4.max / i2) - Math.floor(e4.min / i2) + 1 : (t4 = e4._computeTickLimit(), a2 = a2 || 11), a2 && (t4 = Math.min(a2, t4)), t4;
        }, _computeTickLimit: function() {
          return Number.POSITIVE_INFINITY;
        }, handleDirectionalChanges: Ci, buildTicks: function() {
          var t4 = this, e4 = t4.options.ticks, n4 = t4.getTickLimit(), i2 = { maxTicks: n4 = Math.max(2, n4), min: e4.min, max: e4.max, precision: e4.precision, stepSize: st.valueOrDefault(e4.fixedStepSize, e4.stepSize) }, a2 = t4.ticks = Di(i2, t4);
          t4.handleDirectionalChanges(), t4.max = st.max(a2), t4.min = st.min(a2), e4.reverse ? (a2.reverse(), t4.start = t4.max, t4.end = t4.min) : (t4.start = t4.min, t4.end = t4.max);
        }, convertTicksToLabels: function() {
          var t4 = this;
          t4.ticksAsNumbers = t4.ticks.slice(), t4.zeroLineIndex = t4.ticks.indexOf(0), yi.prototype.convertTicksToLabels.call(t4);
        }, _configure: function() {
          var t4, e4 = this, n4 = e4.getTicks(), i2 = e4.min, a2 = e4.max;
          yi.prototype._configure.call(e4), e4.options.offset && n4.length && (i2 -= t4 = (a2 - i2) / Math.max(n4.length - 1, 1) / 2, a2 += t4), e4._startValue = i2, e4._endValue = a2, e4._valueRange = a2 - i2;
        } }), Ei = { position: "left", ticks: { callback: Jn.formatters.linear } }, Ai = 0, Ii = 1;
        function Mi(t4, e4, n4) {
          var i2 = [n4.type, e4 === void 0 && n4.stack === void 0 ? n4.index : "", n4.stack].join(".");
          return t4[i2] === void 0 && (t4[i2] = { pos: [], neg: [] }), t4[i2];
        }
        function Ri(t4, e4, n4, i2) {
          var a2, r2, o2 = t4.options, s2 = Mi(e4, o2.stacked, n4), l2 = s2.pos, c2 = s2.neg, d2 = i2.length;
          for (a2 = 0; a2 < d2; ++a2)
            r2 = t4._parseValue(i2[a2]), isNaN(r2.min) || isNaN(r2.max) || n4.data[a2].hidden || (l2[a2] = l2[a2] || 0, c2[a2] = c2[a2] || 0, o2.relativePoints ? l2[a2] = 100 : r2.min < 0 || r2.max < 0 ? c2[a2] += r2.min : l2[a2] += r2.max);
        }
        function Pi(t4, e4, n4) {
          var i2, a2, r2 = n4.length;
          for (i2 = 0; i2 < r2; ++i2)
            a2 = t4._parseValue(n4[i2]), isNaN(a2.min) || isNaN(a2.max) || e4.data[i2].hidden || (t4.min = Math.min(t4.min, a2.min), t4.max = Math.max(t4.max, a2.max));
        }
        var Oi = Ti.extend({ determineDataLimits: function() {
          var t4, e4, n4, i2, a2 = this, r2 = a2.options, o2 = a2.chart.data.datasets, s2 = a2._getMatchingVisibleMetas(), l2 = r2.stacked, c2 = {}, d2 = s2.length;
          if (a2.min = Number.POSITIVE_INFINITY, a2.max = Number.NEGATIVE_INFINITY, l2 === void 0)
            for (t4 = 0; !l2 && t4 < d2; ++t4)
              l2 = (e4 = s2[t4]).stack !== void 0;
          for (t4 = 0; t4 < d2; ++t4)
            n4 = o2[(e4 = s2[t4]).index].data, l2 ? Ri(a2, c2, e4, n4) : Pi(a2, e4, n4);
          st.each(c2, function(t5) {
            i2 = t5.pos.concat(t5.neg), a2.min = Math.min(a2.min, st.min(i2)), a2.max = Math.max(a2.max, st.max(i2));
          }), a2.min = st.isFinite(a2.min) && !isNaN(a2.min) ? a2.min : Ai, a2.max = st.isFinite(a2.max) && !isNaN(a2.max) ? a2.max : Ii, a2.handleTickRangeOptions();
        }, _computeTickLimit: function() {
          var t4, e4 = this;
          return e4.isHorizontal() ? Math.ceil(e4.width / 40) : (t4 = st.options._parseFont(e4.options.ticks), Math.ceil(e4.height / t4.lineHeight));
        }, handleDirectionalChanges: function() {
          this.isHorizontal() || this.ticks.reverse();
        }, getLabelForIndex: function(t4, e4) {
          return this._getScaleLabel(this.chart.data.datasets[e4].data[t4]);
        }, getPixelForValue: function(t4) {
          var e4 = this;
          return e4.getPixelForDecimal((+e4.getRightValue(t4) - e4._startValue) / e4._valueRange);
        }, getValueForPixel: function(t4) {
          return this._startValue + this.getDecimalForPixel(t4) * this._valueRange;
        }, getPixelForTick: function(t4) {
          var e4 = this.ticksAsNumbers;
          return t4 < 0 || t4 > e4.length - 1 ? null : this.getPixelForValue(e4[t4]);
        } }), ji = Ei;
        Oi._defaults = ji;
        var Ni = st.valueOrDefault, Li = st.math.log10;
        function Fi(t4, e4) {
          var n4, i2, a2 = [], r2 = Ni(t4.min, Math.pow(10, Math.floor(Li(e4.min)))), o2 = Math.floor(Li(e4.max)), s2 = Math.ceil(e4.max / Math.pow(10, o2));
          r2 === 0 ? (n4 = Math.floor(Li(e4.minNotZero)), i2 = Math.floor(e4.minNotZero / Math.pow(10, n4)), a2.push(r2), r2 = i2 * Math.pow(10, n4)) : (n4 = Math.floor(Li(r2)), i2 = Math.floor(r2 / Math.pow(10, n4)));
          var l2 = n4 < 0 ? Math.pow(10, Math.abs(n4)) : 1;
          do {
            a2.push(r2), ++i2 == 10 && (i2 = 1, l2 = ++n4 >= 0 ? 1 : l2), r2 = Math.round(i2 * Math.pow(10, n4) * l2) / l2;
          } while (n4 < o2 || n4 === o2 && i2 < s2);
          var c2 = Ni(t4.max, r2);
          return a2.push(c2), a2;
        }
        var Hi = { position: "left", ticks: { callback: Jn.formatters.logarithmic } };
        function Bi(t4, e4) {
          return st.isFinite(t4) && t4 >= 0 ? t4 : e4;
        }
        var qi = yi.extend({ determineDataLimits: function() {
          var t4, e4, n4, i2, a2, r2, o2 = this, s2 = o2.options, l2 = o2.chart, c2 = l2.data.datasets, d2 = o2.isHorizontal();
          function u2(t5) {
            return d2 ? t5.xAxisID === o2.id : t5.yAxisID === o2.id;
          }
          o2.min = Number.POSITIVE_INFINITY, o2.max = Number.NEGATIVE_INFINITY, o2.minNotZero = Number.POSITIVE_INFINITY;
          var h2 = s2.stacked;
          if (h2 === void 0) {
            for (t4 = 0; t4 < c2.length; t4++)
              if (e4 = l2.getDatasetMeta(t4), l2.isDatasetVisible(t4) && u2(e4) && e4.stack !== void 0) {
                h2 = true;
                break;
              }
          }
          if (s2.stacked || h2) {
            var p2 = {};
            for (t4 = 0; t4 < c2.length; t4++) {
              var f2 = [(e4 = l2.getDatasetMeta(t4)).type, s2.stacked === void 0 && e4.stack === void 0 ? t4 : "", e4.stack].join(".");
              if (l2.isDatasetVisible(t4) && u2(e4))
                for (p2[f2] === void 0 && (p2[f2] = []), a2 = 0, r2 = (i2 = c2[t4].data).length; a2 < r2; a2++) {
                  var g2 = p2[f2];
                  n4 = o2._parseValue(i2[a2]), isNaN(n4.min) || isNaN(n4.max) || e4.data[a2].hidden || n4.min < 0 || n4.max < 0 || (g2[a2] = g2[a2] || 0, g2[a2] += n4.max);
                }
            }
            st.each(p2, function(t5) {
              if (t5.length > 0) {
                var e5 = st.min(t5), n5 = st.max(t5);
                o2.min = Math.min(o2.min, e5), o2.max = Math.max(o2.max, n5);
              }
            });
          } else
            for (t4 = 0; t4 < c2.length; t4++)
              if (e4 = l2.getDatasetMeta(t4), l2.isDatasetVisible(t4) && u2(e4))
                for (a2 = 0, r2 = (i2 = c2[t4].data).length; a2 < r2; a2++)
                  n4 = o2._parseValue(i2[a2]), isNaN(n4.min) || isNaN(n4.max) || e4.data[a2].hidden || n4.min < 0 || n4.max < 0 || (o2.min = Math.min(n4.min, o2.min), o2.max = Math.max(n4.max, o2.max), n4.min !== 0 && (o2.minNotZero = Math.min(n4.min, o2.minNotZero)));
          o2.min = st.isFinite(o2.min) ? o2.min : null, o2.max = st.isFinite(o2.max) ? o2.max : null, o2.minNotZero = st.isFinite(o2.minNotZero) ? o2.minNotZero : null, this.handleTickRangeOptions();
        }, handleTickRangeOptions: function() {
          var t4 = this, e4 = t4.options.ticks, n4 = 1, i2 = 10;
          t4.min = Bi(e4.min, t4.min), t4.max = Bi(e4.max, t4.max), t4.min === t4.max && (t4.min !== 0 && t4.min !== null ? (t4.min = Math.pow(10, Math.floor(Li(t4.min)) - 1), t4.max = Math.pow(10, Math.floor(Li(t4.max)) + 1)) : (t4.min = n4, t4.max = i2)), t4.min === null && (t4.min = Math.pow(10, Math.floor(Li(t4.max)) - 1)), t4.max === null && (t4.max = t4.min !== 0 ? Math.pow(10, Math.floor(Li(t4.min)) + 1) : i2), t4.minNotZero === null && (t4.min > 0 ? t4.minNotZero = t4.min : t4.max < 1 ? t4.minNotZero = Math.pow(10, Math.floor(Li(t4.max))) : t4.minNotZero = n4);
        }, buildTicks: function() {
          var t4 = this, e4 = t4.options.ticks, n4 = !t4.isHorizontal(), i2 = { min: Bi(e4.min), max: Bi(e4.max) }, a2 = t4.ticks = Fi(i2, t4);
          t4.max = st.max(a2), t4.min = st.min(a2), e4.reverse ? (n4 = !n4, t4.start = t4.max, t4.end = t4.min) : (t4.start = t4.min, t4.end = t4.max), n4 && a2.reverse();
        }, convertTicksToLabels: function() {
          this.tickValues = this.ticks.slice(), yi.prototype.convertTicksToLabels.call(this);
        }, getLabelForIndex: function(t4, e4) {
          return this._getScaleLabel(this.chart.data.datasets[e4].data[t4]);
        }, getPixelForTick: function(t4) {
          var e4 = this.tickValues;
          return t4 < 0 || t4 > e4.length - 1 ? null : this.getPixelForValue(e4[t4]);
        }, _getFirstTickValue: function(t4) {
          var e4 = Math.floor(Li(t4));
          return Math.floor(t4 / Math.pow(10, e4)) * Math.pow(10, e4);
        }, _configure: function() {
          var t4 = this, e4 = t4.min, n4 = 0;
          yi.prototype._configure.call(t4), e4 === 0 && (e4 = t4._getFirstTickValue(t4.minNotZero), n4 = Ni(t4.options.ticks.fontSize, Q.global.defaultFontSize) / t4._length), t4._startValue = Li(e4), t4._valueOffset = n4, t4._valueRange = (Li(t4.max) - Li(e4)) / (1 - n4);
        }, getPixelForValue: function(t4) {
          var e4 = this, n4 = 0;
          return (t4 = +e4.getRightValue(t4)) > e4.min && t4 > 0 && (n4 = (Li(t4) - e4._startValue) / e4._valueRange + e4._valueOffset), e4.getPixelForDecimal(n4);
        }, getValueForPixel: function(t4) {
          var e4 = this, n4 = e4.getDecimalForPixel(t4);
          return n4 === 0 && e4.min === 0 ? 0 : Math.pow(10, e4._startValue + (n4 - e4._valueOffset) * e4._valueRange);
        } }), zi = Hi;
        qi._defaults = zi;
        var Wi = st.valueOrDefault, $i = st.valueAtIndexOrDefault, Vi = st.options.resolve, Yi = { display: true, animate: true, position: "chartArea", angleLines: { display: true, color: "rgba(0,0,0,0.1)", lineWidth: 1, borderDash: [], borderDashOffset: 0 }, gridLines: { circular: false }, ticks: { showLabelBackdrop: true, backdropColor: "rgba(255,255,255,0.75)", backdropPaddingY: 2, backdropPaddingX: 2, callback: Jn.formatters.linear }, pointLabels: { display: true, fontSize: 10, callback: function(t4) {
          return t4;
        } } };
        function Ui(t4) {
          var e4 = t4.ticks;
          return e4.display && t4.display ? Wi(e4.fontSize, Q.global.defaultFontSize) + 2 * e4.backdropPaddingY : 0;
        }
        function Gi(t4, e4, n4) {
          return st.isArray(n4) ? { w: st.longestText(t4, t4.font, n4), h: n4.length * e4 } : { w: t4.measureText(n4).width, h: e4 };
        }
        function Xi(t4, e4, n4, i2, a2) {
          return t4 === i2 || t4 === a2 ? { start: e4 - n4 / 2, end: e4 + n4 / 2 } : t4 < i2 || t4 > a2 ? { start: e4 - n4, end: e4 } : { start: e4, end: e4 + n4 };
        }
        function Zi(t4) {
          var e4, n4, i2, a2 = st.options._parseFont(t4.options.pointLabels), r2 = { l: 0, r: t4.width, t: 0, b: t4.height - t4.paddingTop }, o2 = {};
          t4.ctx.font = a2.string, t4._pointLabelSizes = [];
          var s2 = t4.chart.data.labels.length;
          for (e4 = 0; e4 < s2; e4++) {
            i2 = t4.getPointPosition(e4, t4.drawingArea + 5), n4 = Gi(t4.ctx, a2.lineHeight, t4.pointLabels[e4]), t4._pointLabelSizes[e4] = n4;
            var l2 = t4.getIndexAngle(e4), c2 = st.toDegrees(l2) % 360, d2 = Xi(c2, i2.x, n4.w, 0, 180), u2 = Xi(c2, i2.y, n4.h, 90, 270);
            d2.start < r2.l && (r2.l = d2.start, o2.l = l2), d2.end > r2.r && (r2.r = d2.end, o2.r = l2), u2.start < r2.t && (r2.t = u2.start, o2.t = l2), u2.end > r2.b && (r2.b = u2.end, o2.b = l2);
          }
          t4.setReductions(t4.drawingArea, r2, o2);
        }
        function Ki(t4) {
          return t4 === 0 || t4 === 180 ? "center" : t4 < 180 ? "left" : "right";
        }
        function Qi(t4, e4, n4, i2) {
          var a2, r2, o2 = n4.y + i2 / 2;
          if (st.isArray(e4))
            for (a2 = 0, r2 = e4.length; a2 < r2; ++a2)
              t4.fillText(e4[a2], n4.x, o2), o2 += i2;
          else
            t4.fillText(e4, n4.x, o2);
        }
        function Ji(t4, e4, n4) {
          t4 === 90 || t4 === 270 ? n4.y -= e4.h / 2 : (t4 > 270 || t4 < 90) && (n4.y -= e4.h);
        }
        function ta(t4) {
          var e4 = t4.ctx, n4 = t4.options, i2 = n4.pointLabels, a2 = Ui(n4), r2 = t4.getDistanceFromCenterForValue(n4.ticks.reverse ? t4.min : t4.max), o2 = st.options._parseFont(i2);
          e4.save(), e4.font = o2.string, e4.textBaseline = "middle";
          for (var s2 = t4.chart.data.labels.length - 1; s2 >= 0; s2--) {
            var l2 = s2 === 0 ? a2 / 2 : 0, c2 = t4.getPointPosition(s2, r2 + l2 + 5), d2 = $i(i2.fontColor, s2, Q.global.defaultFontColor);
            e4.fillStyle = d2;
            var u2 = t4.getIndexAngle(s2), h2 = st.toDegrees(u2);
            e4.textAlign = Ki(h2), Ji(h2, t4._pointLabelSizes[s2], c2), Qi(e4, t4.pointLabels[s2], c2, o2.lineHeight);
          }
          e4.restore();
        }
        function ea(t4, e4, n4, i2) {
          var a2, r2 = t4.ctx, o2 = e4.circular, s2 = t4.chart.data.labels.length, l2 = $i(e4.color, i2 - 1), c2 = $i(e4.lineWidth, i2 - 1);
          if ((o2 || s2) && l2 && c2) {
            if (r2.save(), r2.strokeStyle = l2, r2.lineWidth = c2, r2.setLineDash && (r2.setLineDash(e4.borderDash || []), r2.lineDashOffset = e4.borderDashOffset || 0), r2.beginPath(), o2)
              r2.arc(t4.xCenter, t4.yCenter, n4, 0, 2 * Math.PI);
            else {
              a2 = t4.getPointPosition(0, n4), r2.moveTo(a2.x, a2.y);
              for (var d2 = 1; d2 < s2; d2++)
                a2 = t4.getPointPosition(d2, n4), r2.lineTo(a2.x, a2.y);
            }
            r2.closePath(), r2.stroke(), r2.restore();
          }
        }
        function na(t4) {
          return st.isNumber(t4) ? t4 : 0;
        }
        var ia = Ti.extend({ setDimensions: function() {
          var t4 = this;
          t4.width = t4.maxWidth, t4.height = t4.maxHeight, t4.paddingTop = Ui(t4.options) / 2, t4.xCenter = Math.floor(t4.width / 2), t4.yCenter = Math.floor((t4.height - t4.paddingTop) / 2), t4.drawingArea = Math.min(t4.height - t4.paddingTop, t4.width) / 2;
        }, determineDataLimits: function() {
          var t4 = this, e4 = t4.chart, n4 = Number.POSITIVE_INFINITY, i2 = Number.NEGATIVE_INFINITY;
          st.each(e4.data.datasets, function(a2, r2) {
            if (e4.isDatasetVisible(r2)) {
              var o2 = e4.getDatasetMeta(r2);
              st.each(a2.data, function(e5, a3) {
                var r3 = +t4.getRightValue(e5);
                isNaN(r3) || o2.data[a3].hidden || (n4 = Math.min(r3, n4), i2 = Math.max(r3, i2));
              });
            }
          }), t4.min = n4 === Number.POSITIVE_INFINITY ? 0 : n4, t4.max = i2 === Number.NEGATIVE_INFINITY ? 0 : i2, t4.handleTickRangeOptions();
        }, _computeTickLimit: function() {
          return Math.ceil(this.drawingArea / Ui(this.options));
        }, convertTicksToLabels: function() {
          var t4 = this;
          Ti.prototype.convertTicksToLabels.call(t4), t4.pointLabels = t4.chart.data.labels.map(function() {
            var e4 = st.callback(t4.options.pointLabels.callback, arguments, t4);
            return e4 || e4 === 0 ? e4 : "";
          });
        }, getLabelForIndex: function(t4, e4) {
          return +this.getRightValue(this.chart.data.datasets[e4].data[t4]);
        }, fit: function() {
          var t4 = this, e4 = t4.options;
          e4.display && e4.pointLabels.display ? Zi(t4) : t4.setCenterPoint(0, 0, 0, 0);
        }, setReductions: function(t4, e4, n4) {
          var i2 = this, a2 = e4.l / Math.sin(n4.l), r2 = Math.max(e4.r - i2.width, 0) / Math.sin(n4.r), o2 = -e4.t / Math.cos(n4.t), s2 = -Math.max(e4.b - (i2.height - i2.paddingTop), 0) / Math.cos(n4.b);
          a2 = na(a2), r2 = na(r2), o2 = na(o2), s2 = na(s2), i2.drawingArea = Math.min(Math.floor(t4 - (a2 + r2) / 2), Math.floor(t4 - (o2 + s2) / 2)), i2.setCenterPoint(a2, r2, o2, s2);
        }, setCenterPoint: function(t4, e4, n4, i2) {
          var a2 = this, r2 = a2.width - e4 - a2.drawingArea, o2 = t4 + a2.drawingArea, s2 = n4 + a2.drawingArea, l2 = a2.height - a2.paddingTop - i2 - a2.drawingArea;
          a2.xCenter = Math.floor((o2 + r2) / 2 + a2.left), a2.yCenter = Math.floor((s2 + l2) / 2 + a2.top + a2.paddingTop);
        }, getIndexAngle: function(t4) {
          var e4 = this.chart, n4 = (t4 * (360 / e4.data.labels.length) + ((e4.options || {}).startAngle || 0)) % 360;
          return (n4 < 0 ? n4 + 360 : n4) * Math.PI * 2 / 360;
        }, getDistanceFromCenterForValue: function(t4) {
          var e4 = this;
          if (st.isNullOrUndef(t4))
            return NaN;
          var n4 = e4.drawingArea / (e4.max - e4.min);
          return e4.options.ticks.reverse ? (e4.max - t4) * n4 : (t4 - e4.min) * n4;
        }, getPointPosition: function(t4, e4) {
          var n4 = this, i2 = n4.getIndexAngle(t4) - Math.PI / 2;
          return { x: Math.cos(i2) * e4 + n4.xCenter, y: Math.sin(i2) * e4 + n4.yCenter };
        }, getPointPositionForValue: function(t4, e4) {
          return this.getPointPosition(t4, this.getDistanceFromCenterForValue(e4));
        }, getBasePosition: function(t4) {
          var e4 = this, n4 = e4.min, i2 = e4.max;
          return e4.getPointPositionForValue(t4 || 0, e4.beginAtZero ? 0 : n4 < 0 && i2 < 0 ? i2 : n4 > 0 && i2 > 0 ? n4 : 0);
        }, _drawGrid: function() {
          var t4, e4, n4, i2 = this, a2 = i2.ctx, r2 = i2.options, o2 = r2.gridLines, s2 = r2.angleLines, l2 = Wi(s2.lineWidth, o2.lineWidth), c2 = Wi(s2.color, o2.color);
          if (r2.pointLabels.display && ta(i2), o2.display && st.each(i2.ticks, function(t5, n5) {
            n5 !== 0 && (e4 = i2.getDistanceFromCenterForValue(i2.ticksAsNumbers[n5]), ea(i2, o2, e4, n5));
          }), s2.display && l2 && c2) {
            for (a2.save(), a2.lineWidth = l2, a2.strokeStyle = c2, a2.setLineDash && (a2.setLineDash(Vi([s2.borderDash, o2.borderDash, []])), a2.lineDashOffset = Vi([s2.borderDashOffset, o2.borderDashOffset, 0])), t4 = i2.chart.data.labels.length - 1; t4 >= 0; t4--)
              e4 = i2.getDistanceFromCenterForValue(r2.ticks.reverse ? i2.min : i2.max), n4 = i2.getPointPosition(t4, e4), a2.beginPath(), a2.moveTo(i2.xCenter, i2.yCenter), a2.lineTo(n4.x, n4.y), a2.stroke();
            a2.restore();
          }
        }, _drawLabels: function() {
          var t4 = this, e4 = t4.ctx, n4 = t4.options.ticks;
          if (n4.display) {
            var i2, a2, r2 = t4.getIndexAngle(0), o2 = st.options._parseFont(n4), s2 = Wi(n4.fontColor, Q.global.defaultFontColor);
            e4.save(), e4.font = o2.string, e4.translate(t4.xCenter, t4.yCenter), e4.rotate(r2), e4.textAlign = "center", e4.textBaseline = "middle", st.each(t4.ticks, function(r3, l2) {
              (l2 !== 0 || n4.reverse) && (i2 = t4.getDistanceFromCenterForValue(t4.ticksAsNumbers[l2]), n4.showLabelBackdrop && (a2 = e4.measureText(r3).width, e4.fillStyle = n4.backdropColor, e4.fillRect(-a2 / 2 - n4.backdropPaddingX, -i2 - o2.size / 2 - n4.backdropPaddingY, a2 + 2 * n4.backdropPaddingX, o2.size + 2 * n4.backdropPaddingY)), e4.fillStyle = s2, e4.fillText(r3, 0, -i2));
            }), e4.restore();
          }
        }, _drawTitle: st.noop }), aa = Yi;
        ia._defaults = aa;
        var ra = st._deprecated, oa = st.options.resolve, sa = st.valueOrDefault, la = Number.MIN_SAFE_INTEGER || -9007199254740991, ca = Number.MAX_SAFE_INTEGER || 9007199254740991, da = { millisecond: { common: true, size: 1, steps: 1e3 }, second: { common: true, size: 1e3, steps: 60 }, minute: { common: true, size: 6e4, steps: 60 }, hour: { common: true, size: 36e5, steps: 24 }, day: { common: true, size: 864e5, steps: 30 }, week: { common: false, size: 6048e5, steps: 4 }, month: { common: true, size: 2628e6, steps: 12 }, quarter: { common: false, size: 7884e6, steps: 4 }, year: { common: true, size: 3154e7 } }, ua = Object.keys(da);
        function ha(t4, e4) {
          return t4 - e4;
        }
        function pa(t4) {
          var e4, n4, i2, a2 = {}, r2 = [];
          for (e4 = 0, n4 = t4.length; e4 < n4; ++e4)
            a2[i2 = t4[e4]] || (a2[i2] = true, r2.push(i2));
          return r2;
        }
        function fa(t4) {
          return st.valueOrDefault(t4.time.min, t4.ticks.min);
        }
        function ga(t4) {
          return st.valueOrDefault(t4.time.max, t4.ticks.max);
        }
        function ma(t4, e4, n4, i2) {
          if (i2 === "linear" || !t4.length)
            return [{ time: e4, pos: 0 }, { time: n4, pos: 1 }];
          var a2, r2, o2, s2, l2, c2 = [], d2 = [e4];
          for (a2 = 0, r2 = t4.length; a2 < r2; ++a2)
            (s2 = t4[a2]) > e4 && s2 < n4 && d2.push(s2);
          for (d2.push(n4), a2 = 0, r2 = d2.length; a2 < r2; ++a2)
            l2 = d2[a2 + 1], o2 = d2[a2 - 1], s2 = d2[a2], o2 !== void 0 && l2 !== void 0 && Math.round((l2 + o2) / 2) === s2 || c2.push({ time: s2, pos: a2 / (r2 - 1) });
          return c2;
        }
        function va(t4, e4, n4) {
          for (var i2, a2, r2, o2 = 0, s2 = t4.length - 1; o2 >= 0 && o2 <= s2; ) {
            if (a2 = t4[(i2 = o2 + s2 >> 1) - 1] || null, r2 = t4[i2], !a2)
              return { lo: null, hi: r2 };
            if (r2[e4] < n4)
              o2 = i2 + 1;
            else {
              if (!(a2[e4] > n4))
                return { lo: a2, hi: r2 };
              s2 = i2 - 1;
            }
          }
          return { lo: r2, hi: null };
        }
        function ba(t4, e4, n4, i2) {
          var a2 = va(t4, e4, n4), r2 = a2.lo ? a2.hi ? a2.lo : t4[t4.length - 2] : t4[0], o2 = a2.lo ? a2.hi ? a2.hi : t4[t4.length - 1] : t4[1], s2 = o2[e4] - r2[e4], l2 = s2 ? (n4 - r2[e4]) / s2 : 0, c2 = (o2[i2] - r2[i2]) * l2;
          return r2[i2] + c2;
        }
        function ya(t4, e4) {
          var n4 = t4._adapter, i2 = t4.options.time, a2 = i2.parser, r2 = a2 || i2.format, o2 = e4;
          return typeof a2 == "function" && (o2 = a2(o2)), st.isFinite(o2) || (o2 = typeof r2 == "string" ? n4.parse(o2, r2) : n4.parse(o2)), o2 !== null ? +o2 : (a2 || typeof r2 != "function" || (o2 = r2(e4), st.isFinite(o2) || (o2 = n4.parse(o2))), o2);
        }
        function xa(t4, e4) {
          if (st.isNullOrUndef(e4))
            return null;
          var n4 = t4.options.time, i2 = ya(t4, t4.getRightValue(e4));
          return i2 === null || n4.round && (i2 = +t4._adapter.startOf(i2, n4.round)), i2;
        }
        function _a(t4, e4, n4, i2) {
          var a2, r2, o2, s2 = ua.length;
          for (a2 = ua.indexOf(t4); a2 < s2 - 1; ++a2)
            if (o2 = (r2 = da[ua[a2]]).steps ? r2.steps : ca, r2.common && Math.ceil((n4 - e4) / (o2 * r2.size)) <= i2)
              return ua[a2];
          return ua[s2 - 1];
        }
        function wa(t4, e4, n4, i2, a2) {
          var r2, o2;
          for (r2 = ua.length - 1; r2 >= ua.indexOf(n4); r2--)
            if (o2 = ua[r2], da[o2].common && t4._adapter.diff(a2, i2, o2) >= e4 - 1)
              return o2;
          return ua[n4 ? ua.indexOf(n4) : 0];
        }
        function Sa(t4) {
          for (var e4 = ua.indexOf(t4) + 1, n4 = ua.length; e4 < n4; ++e4)
            if (da[ua[e4]].common)
              return ua[e4];
        }
        function Ca(t4, e4, n4, i2) {
          var a2, r2 = t4._adapter, o2 = t4.options, s2 = o2.time, l2 = s2.unit || _a(s2.minUnit, e4, n4, i2), c2 = oa([s2.stepSize, s2.unitStepSize, 1]), d2 = l2 === "week" && s2.isoWeekday, u2 = e4, h2 = [];
          if (d2 && (u2 = +r2.startOf(u2, "isoWeek", d2)), u2 = +r2.startOf(u2, d2 ? "day" : l2), r2.diff(n4, e4, l2) > 1e5 * c2)
            throw e4 + " and " + n4 + " are too far apart with stepSize of " + c2 + " " + l2;
          for (a2 = u2; a2 < n4; a2 = +r2.add(a2, c2, l2))
            h2.push(a2);
          return a2 !== n4 && o2.bounds !== "ticks" || h2.push(a2), h2;
        }
        function ka(t4, e4, n4, i2, a2) {
          var r2, o2, s2 = 0, l2 = 0;
          return a2.offset && e4.length && (r2 = ba(t4, "time", e4[0], "pos"), s2 = e4.length === 1 ? 1 - r2 : (ba(t4, "time", e4[1], "pos") - r2) / 2, o2 = ba(t4, "time", e4[e4.length - 1], "pos"), l2 = e4.length === 1 ? o2 : (o2 - ba(t4, "time", e4[e4.length - 2], "pos")) / 2), { start: s2, end: l2, factor: 1 / (s2 + 1 + l2) };
        }
        function Da(t4, e4, n4, i2) {
          var a2, r2, o2 = t4._adapter, s2 = +o2.startOf(e4[0].value, i2), l2 = e4[e4.length - 1].value;
          for (a2 = s2; a2 <= l2; a2 = +o2.add(a2, 1, i2))
            (r2 = n4[a2]) >= 0 && (e4[r2].major = true);
          return e4;
        }
        function Ta(t4, e4, n4) {
          var i2, a2, r2 = [], o2 = {}, s2 = e4.length;
          for (i2 = 0; i2 < s2; ++i2)
            o2[a2 = e4[i2]] = i2, r2.push({ value: a2, major: false });
          return s2 !== 0 && n4 ? Da(t4, r2, o2, n4) : r2;
        }
        var Ea = { position: "bottom", distribution: "linear", bounds: "data", adapters: {}, time: { parser: false, unit: false, round: false, displayFormat: false, isoWeekday: false, minUnit: "millisecond", displayFormats: {} }, ticks: { autoSkip: false, source: "auto", major: { enabled: false } } }, Aa = yi.extend({ initialize: function() {
          this.mergeTicksOptions(), yi.prototype.initialize.call(this);
        }, update: function() {
          var t4 = this, e4 = t4.options, n4 = e4.time || (e4.time = {}), i2 = t4._adapter = new Qn._date(e4.adapters.date);
          return ra("time scale", n4.format, "time.format", "time.parser"), ra("time scale", n4.min, "time.min", "ticks.min"), ra("time scale", n4.max, "time.max", "ticks.max"), st.mergeIf(n4.displayFormats, i2.formats()), yi.prototype.update.apply(t4, arguments);
        }, getRightValue: function(t4) {
          return t4 && t4.t !== void 0 && (t4 = t4.t), yi.prototype.getRightValue.call(this, t4);
        }, determineDataLimits: function() {
          var t4, e4, n4, i2, a2, r2, o2, s2 = this, l2 = s2.chart, c2 = s2._adapter, d2 = s2.options, u2 = d2.time.unit || "day", h2 = ca, p2 = la, f2 = [], g2 = [], m2 = [], v2 = s2._getLabels();
          for (t4 = 0, n4 = v2.length; t4 < n4; ++t4)
            m2.push(xa(s2, v2[t4]));
          for (t4 = 0, n4 = (l2.data.datasets || []).length; t4 < n4; ++t4)
            if (l2.isDatasetVisible(t4))
              if (a2 = l2.data.datasets[t4].data, st.isObject(a2[0]))
                for (g2[t4] = [], e4 = 0, i2 = a2.length; e4 < i2; ++e4)
                  r2 = xa(s2, a2[e4]), f2.push(r2), g2[t4][e4] = r2;
              else
                g2[t4] = m2.slice(0), o2 || (f2 = f2.concat(m2), o2 = true);
            else
              g2[t4] = [];
          m2.length && (h2 = Math.min(h2, m2[0]), p2 = Math.max(p2, m2[m2.length - 1])), f2.length && (f2 = n4 > 1 ? pa(f2).sort(ha) : f2.sort(ha), h2 = Math.min(h2, f2[0]), p2 = Math.max(p2, f2[f2.length - 1])), h2 = xa(s2, fa(d2)) || h2, p2 = xa(s2, ga(d2)) || p2, h2 = h2 === ca ? +c2.startOf(Date.now(), u2) : h2, p2 = p2 === la ? +c2.endOf(Date.now(), u2) + 1 : p2, s2.min = Math.min(h2, p2), s2.max = Math.max(h2 + 1, p2), s2._table = [], s2._timestamps = { data: f2, datasets: g2, labels: m2 };
        }, buildTicks: function() {
          var t4, e4, n4, i2 = this, a2 = i2.min, r2 = i2.max, o2 = i2.options, s2 = o2.ticks, l2 = o2.time, c2 = i2._timestamps, d2 = [], u2 = i2.getLabelCapacity(a2), h2 = s2.source, p2 = o2.distribution;
          for (c2 = h2 === "data" || h2 === "auto" && p2 === "series" ? c2.data : h2 === "labels" ? c2.labels : Ca(i2, a2, r2, u2), o2.bounds === "ticks" && c2.length && (a2 = c2[0], r2 = c2[c2.length - 1]), a2 = xa(i2, fa(o2)) || a2, r2 = xa(i2, ga(o2)) || r2, t4 = 0, e4 = c2.length; t4 < e4; ++t4)
            (n4 = c2[t4]) >= a2 && n4 <= r2 && d2.push(n4);
          return i2.min = a2, i2.max = r2, i2._unit = l2.unit || (s2.autoSkip ? _a(l2.minUnit, i2.min, i2.max, u2) : wa(i2, d2.length, l2.minUnit, i2.min, i2.max)), i2._majorUnit = s2.major.enabled && i2._unit !== "year" ? Sa(i2._unit) : void 0, i2._table = ma(i2._timestamps.data, a2, r2, p2), i2._offsets = ka(i2._table, d2, a2, r2, o2), s2.reverse && d2.reverse(), Ta(i2, d2, i2._majorUnit);
        }, getLabelForIndex: function(t4, e4) {
          var n4 = this, i2 = n4._adapter, a2 = n4.chart.data, r2 = n4.options.time, o2 = a2.labels && t4 < a2.labels.length ? a2.labels[t4] : "", s2 = a2.datasets[e4].data[t4];
          return st.isObject(s2) && (o2 = n4.getRightValue(s2)), r2.tooltipFormat ? i2.format(ya(n4, o2), r2.tooltipFormat) : typeof o2 == "string" ? o2 : i2.format(ya(n4, o2), r2.displayFormats.datetime);
        }, tickFormatFunction: function(t4, e4, n4, i2) {
          var a2 = this, r2 = a2._adapter, o2 = a2.options, s2 = o2.time.displayFormats, l2 = s2[a2._unit], c2 = a2._majorUnit, d2 = s2[c2], u2 = n4[e4], h2 = o2.ticks, p2 = c2 && d2 && u2 && u2.major, f2 = r2.format(t4, i2 || (p2 ? d2 : l2)), g2 = p2 ? h2.major : h2.minor, m2 = oa([g2.callback, g2.userCallback, h2.callback, h2.userCallback]);
          return m2 ? m2(f2, e4, n4) : f2;
        }, convertTicksToLabels: function(t4) {
          var e4, n4, i2 = [];
          for (e4 = 0, n4 = t4.length; e4 < n4; ++e4)
            i2.push(this.tickFormatFunction(t4[e4].value, e4, t4));
          return i2;
        }, getPixelForOffset: function(t4) {
          var e4 = this, n4 = e4._offsets, i2 = ba(e4._table, "time", t4, "pos");
          return e4.getPixelForDecimal((n4.start + i2) * n4.factor);
        }, getPixelForValue: function(t4, e4, n4) {
          var i2 = this, a2 = null;
          if (e4 !== void 0 && n4 !== void 0 && (a2 = i2._timestamps.datasets[n4][e4]), a2 === null && (a2 = xa(i2, t4)), a2 !== null)
            return i2.getPixelForOffset(a2);
        }, getPixelForTick: function(t4) {
          var e4 = this.getTicks();
          return t4 >= 0 && t4 < e4.length ? this.getPixelForOffset(e4[t4].value) : null;
        }, getValueForPixel: function(t4) {
          var e4 = this, n4 = e4._offsets, i2 = e4.getDecimalForPixel(t4) / n4.factor - n4.end, a2 = ba(e4._table, "pos", i2, "time");
          return e4._adapter._create(a2);
        }, _getLabelSize: function(t4) {
          var e4 = this, n4 = e4.options.ticks, i2 = e4.ctx.measureText(t4).width, a2 = st.toRadians(e4.isHorizontal() ? n4.maxRotation : n4.minRotation), r2 = Math.cos(a2), o2 = Math.sin(a2), s2 = sa(n4.fontSize, Q.global.defaultFontSize);
          return { w: i2 * r2 + s2 * o2, h: i2 * o2 + s2 * r2 };
        }, getLabelWidth: function(t4) {
          return this._getLabelSize(t4).w;
        }, getLabelCapacity: function(t4) {
          var e4 = this, n4 = e4.options.time, i2 = n4.displayFormats, a2 = i2[n4.unit] || i2.millisecond, r2 = e4.tickFormatFunction(t4, 0, Ta(e4, [t4], e4._majorUnit), a2), o2 = e4._getLabelSize(r2), s2 = Math.floor(e4.isHorizontal() ? e4.width / o2.w : e4.height / o2.h);
          return e4.options.offset && s2--, s2 > 0 ? s2 : 1;
        } }), Ia = Ea;
        Aa._defaults = Ia;
        var Ma = { category: wi, linear: Oi, logarithmic: qi, radialLinear: ia, time: Aa }, Ra = { datetime: "MMM D, YYYY, h:mm:ss a", millisecond: "h:mm:ss.SSS a", second: "h:mm:ss a", minute: "h:mm a", hour: "hA", day: "MMM D", week: "ll", month: "MMM YYYY", quarter: "[Q]Q - YYYY", year: "YYYY" };
        Qn._date.override(typeof t3 == "function" ? { _id: "moment", formats: function() {
          return Ra;
        }, parse: function(e4, n4) {
          return typeof e4 == "string" && typeof n4 == "string" ? e4 = t3(e4, n4) : e4 instanceof t3 || (e4 = t3(e4)), e4.isValid() ? e4.valueOf() : null;
        }, format: function(e4, n4) {
          return t3(e4).format(n4);
        }, add: function(e4, n4, i2) {
          return t3(e4).add(n4, i2).valueOf();
        }, diff: function(e4, n4, i2) {
          return t3(e4).diff(t3(n4), i2);
        }, startOf: function(e4, n4, i2) {
          return e4 = t3(e4), n4 === "isoWeek" ? e4.isoWeekday(i2).valueOf() : e4.startOf(n4).valueOf();
        }, endOf: function(e4, n4) {
          return t3(e4).endOf(n4).valueOf();
        }, _create: function(e4) {
          return t3(e4);
        } } : {}), Q._set("global", { plugins: { filler: { propagate: true } } });
        var Pa = { dataset: function(t4) {
          var e4 = t4.fill, n4 = t4.chart, i2 = n4.getDatasetMeta(e4), a2 = i2 && n4.isDatasetVisible(e4) && i2.dataset._children || [], r2 = a2.length || 0;
          return r2 ? function(t5, e5) {
            return e5 < r2 && a2[e5]._view || null;
          } : null;
        }, boundary: function(t4) {
          var e4 = t4.boundary, n4 = e4 ? e4.x : null, i2 = e4 ? e4.y : null;
          return st.isArray(e4) ? function(t5, n5) {
            return e4[n5];
          } : function(t5) {
            return { x: n4 === null ? t5.x : n4, y: i2 === null ? t5.y : i2 };
          };
        } };
        function Oa(t4, e4, n4) {
          var i2, a2 = t4._model || {}, r2 = a2.fill;
          if (r2 === void 0 && (r2 = !!a2.backgroundColor), r2 === false || r2 === null)
            return false;
          if (r2 === true)
            return "origin";
          if (i2 = parseFloat(r2, 10), isFinite(i2) && Math.floor(i2) === i2)
            return r2[0] !== "-" && r2[0] !== "+" || (i2 = e4 + i2), !(i2 === e4 || i2 < 0 || i2 >= n4) && i2;
          switch (r2) {
            case "bottom":
              return "start";
            case "top":
              return "end";
            case "zero":
              return "origin";
            case "origin":
            case "start":
            case "end":
              return r2;
            default:
              return false;
          }
        }
        function ja(t4) {
          var e4, n4 = t4.el._model || {}, i2 = t4.el._scale || {}, a2 = t4.fill, r2 = null;
          if (isFinite(a2))
            return null;
          if (a2 === "start" ? r2 = n4.scaleBottom === void 0 ? i2.bottom : n4.scaleBottom : a2 === "end" ? r2 = n4.scaleTop === void 0 ? i2.top : n4.scaleTop : n4.scaleZero !== void 0 ? r2 = n4.scaleZero : i2.getBasePixel && (r2 = i2.getBasePixel()), r2 != null) {
            if (r2.x !== void 0 && r2.y !== void 0)
              return r2;
            if (st.isFinite(r2))
              return { x: (e4 = i2.isHorizontal()) ? r2 : null, y: e4 ? null : r2 };
          }
          return null;
        }
        function Na(t4) {
          var e4, n4, i2, a2, r2, o2 = t4.el._scale, s2 = o2.options, l2 = o2.chart.data.labels.length, c2 = t4.fill, d2 = [];
          if (!l2)
            return null;
          for (e4 = s2.ticks.reverse ? o2.max : o2.min, n4 = s2.ticks.reverse ? o2.min : o2.max, i2 = o2.getPointPositionForValue(0, e4), a2 = 0; a2 < l2; ++a2)
            r2 = c2 === "start" || c2 === "end" ? o2.getPointPositionForValue(a2, c2 === "start" ? e4 : n4) : o2.getBasePosition(a2), s2.gridLines.circular && (r2.cx = i2.x, r2.cy = i2.y, r2.angle = o2.getIndexAngle(a2) - Math.PI / 2), d2.push(r2);
          return d2;
        }
        function La(t4) {
          return (t4.el._scale || {}).getPointPositionForValue ? Na(t4) : ja(t4);
        }
        function Fa(t4, e4, n4) {
          var i2, a2 = t4[e4].fill, r2 = [e4];
          if (!n4)
            return a2;
          for (; a2 !== false && r2.indexOf(a2) === -1; ) {
            if (!isFinite(a2))
              return a2;
            if (!(i2 = t4[a2]))
              return false;
            if (i2.visible)
              return a2;
            r2.push(a2), a2 = i2.fill;
          }
          return false;
        }
        function Ha(t4) {
          var e4 = t4.fill, n4 = "dataset";
          return e4 === false ? null : (isFinite(e4) || (n4 = "boundary"), Pa[n4](t4));
        }
        function Ba(t4) {
          return t4 && !t4.skip;
        }
        function qa(t4, e4, n4, i2, a2) {
          var r2, o2, s2, l2;
          if (i2 && a2) {
            for (t4.moveTo(e4[0].x, e4[0].y), r2 = 1; r2 < i2; ++r2)
              st.canvas.lineTo(t4, e4[r2 - 1], e4[r2]);
            if (n4[0].angle === void 0)
              for (t4.lineTo(n4[a2 - 1].x, n4[a2 - 1].y), r2 = a2 - 1; r2 > 0; --r2)
                st.canvas.lineTo(t4, n4[r2], n4[r2 - 1], true);
            else
              for (o2 = n4[0].cx, s2 = n4[0].cy, l2 = Math.sqrt(Math.pow(n4[0].x - o2, 2) + Math.pow(n4[0].y - s2, 2)), r2 = a2 - 1; r2 > 0; --r2)
                t4.arc(o2, s2, l2, n4[r2].angle, n4[r2 - 1].angle, true);
          }
        }
        function za(t4, e4, n4, i2, a2, r2) {
          var o2, s2, l2, c2, d2, u2, h2, p2, f2 = e4.length, g2 = i2.spanGaps, m2 = [], v2 = [], b2 = 0, y2 = 0;
          for (t4.beginPath(), o2 = 0, s2 = f2; o2 < s2; ++o2)
            d2 = n4(c2 = e4[l2 = o2 % f2]._view, l2, i2), u2 = Ba(c2), h2 = Ba(d2), r2 && p2 === void 0 && u2 && (s2 = f2 + (p2 = o2 + 1)), u2 && h2 ? (b2 = m2.push(c2), y2 = v2.push(d2)) : b2 && y2 && (g2 ? (u2 && m2.push(c2), h2 && v2.push(d2)) : (qa(t4, m2, v2, b2, y2), b2 = y2 = 0, m2 = [], v2 = []));
          qa(t4, m2, v2, b2, y2), t4.closePath(), t4.fillStyle = a2, t4.fill();
        }
        var Wa = { id: "filler", afterDatasetsUpdate: function(t4, e4) {
          var n4, i2, a2, r2, o2 = (t4.data.datasets || []).length, s2 = e4.propagate, l2 = [];
          for (i2 = 0; i2 < o2; ++i2)
            r2 = null, (a2 = (n4 = t4.getDatasetMeta(i2)).dataset) && a2._model && a2 instanceof Ut.Line && (r2 = { visible: t4.isDatasetVisible(i2), fill: Oa(a2, i2, o2), chart: t4, el: a2 }), n4.$filler = r2, l2.push(r2);
          for (i2 = 0; i2 < o2; ++i2)
            (r2 = l2[i2]) && (r2.fill = Fa(l2, i2, s2), r2.boundary = La(r2), r2.mapper = Ha(r2));
        }, beforeDatasetsDraw: function(t4) {
          var e4, n4, i2, a2, r2, o2, s2, l2 = t4._getSortedVisibleDatasetMetas(), c2 = t4.ctx;
          for (n4 = l2.length - 1; n4 >= 0; --n4)
            (e4 = l2[n4].$filler) && e4.visible && (a2 = (i2 = e4.el)._view, r2 = i2._children || [], o2 = e4.mapper, s2 = a2.backgroundColor || Q.global.defaultColor, o2 && s2 && r2.length && (st.canvas.clipArea(c2, t4.chartArea), za(c2, r2, o2, a2, s2, i2._loop), st.canvas.unclipArea(c2)));
        } }, $a = st.rtl.getRtlAdapter, Va = st.noop, Ya = st.valueOrDefault;
        function Ua(t4, e4) {
          return t4.usePointStyle && t4.boxWidth > e4 ? e4 : t4.boxWidth;
        }
        Q._set("global", { legend: { display: true, position: "top", align: "center", fullWidth: true, reverse: false, weight: 1e3, onClick: function(t4, e4) {
          var n4 = e4.datasetIndex, i2 = this.chart, a2 = i2.getDatasetMeta(n4);
          a2.hidden = a2.hidden === null ? !i2.data.datasets[n4].hidden : null, i2.update();
        }, onHover: null, onLeave: null, labels: { boxWidth: 40, padding: 10, generateLabels: function(t4) {
          var e4 = t4.data.datasets, n4 = t4.options.legend || {}, i2 = n4.labels && n4.labels.usePointStyle;
          return t4._getSortedDatasetMetas().map(function(n5) {
            var a2 = n5.controller.getStyle(i2 ? 0 : void 0);
            return { text: e4[n5.index].label, fillStyle: a2.backgroundColor, hidden: !t4.isDatasetVisible(n5.index), lineCap: a2.borderCapStyle, lineDash: a2.borderDash, lineDashOffset: a2.borderDashOffset, lineJoin: a2.borderJoinStyle, lineWidth: a2.borderWidth, strokeStyle: a2.borderColor, pointStyle: a2.pointStyle, rotation: a2.rotation, datasetIndex: n5.index };
          }, this);
        } } }, legendCallback: function(t4) {
          var e4, n4, i2, a2 = document.createElement("ul"), r2 = t4.data.datasets;
          for (a2.setAttribute("class", t4.id + "-legend"), e4 = 0, n4 = r2.length; e4 < n4; e4++)
            (i2 = a2.appendChild(document.createElement("li"))).appendChild(document.createElement("span")).style.backgroundColor = r2[e4].backgroundColor, r2[e4].label && i2.appendChild(document.createTextNode(r2[e4].label));
          return a2.outerHTML;
        } });
        var Ga = gt.extend({ initialize: function(t4) {
          var e4 = this;
          st.extend(e4, t4), e4.legendHitBoxes = [], e4._hoveredItem = null, e4.doughnutMode = false;
        }, beforeUpdate: Va, update: function(t4, e4, n4) {
          var i2 = this;
          return i2.beforeUpdate(), i2.maxWidth = t4, i2.maxHeight = e4, i2.margins = n4, i2.beforeSetDimensions(), i2.setDimensions(), i2.afterSetDimensions(), i2.beforeBuildLabels(), i2.buildLabels(), i2.afterBuildLabels(), i2.beforeFit(), i2.fit(), i2.afterFit(), i2.afterUpdate(), i2.minSize;
        }, afterUpdate: Va, beforeSetDimensions: Va, setDimensions: function() {
          var t4 = this;
          t4.isHorizontal() ? (t4.width = t4.maxWidth, t4.left = 0, t4.right = t4.width) : (t4.height = t4.maxHeight, t4.top = 0, t4.bottom = t4.height), t4.paddingLeft = 0, t4.paddingTop = 0, t4.paddingRight = 0, t4.paddingBottom = 0, t4.minSize = { width: 0, height: 0 };
        }, afterSetDimensions: Va, beforeBuildLabels: Va, buildLabels: function() {
          var t4 = this, e4 = t4.options.labels || {}, n4 = st.callback(e4.generateLabels, [t4.chart], t4) || [];
          e4.filter && (n4 = n4.filter(function(n5) {
            return e4.filter(n5, t4.chart.data);
          })), t4.options.reverse && n4.reverse(), t4.legendItems = n4;
        }, afterBuildLabels: Va, beforeFit: Va, fit: function() {
          var t4 = this, e4 = t4.options, n4 = e4.labels, i2 = e4.display, a2 = t4.ctx, r2 = st.options._parseFont(n4), o2 = r2.size, s2 = t4.legendHitBoxes = [], l2 = t4.minSize, c2 = t4.isHorizontal();
          if (c2 ? (l2.width = t4.maxWidth, l2.height = i2 ? 10 : 0) : (l2.width = i2 ? 10 : 0, l2.height = t4.maxHeight), i2) {
            if (a2.font = r2.string, c2) {
              var d2 = t4.lineWidths = [0], u2 = 0;
              a2.textAlign = "left", a2.textBaseline = "middle", st.each(t4.legendItems, function(t5, e5) {
                var i3 = Ua(n4, o2) + o2 / 2 + a2.measureText(t5.text).width;
                (e5 === 0 || d2[d2.length - 1] + i3 + 2 * n4.padding > l2.width) && (u2 += o2 + n4.padding, d2[d2.length - (e5 > 0 ? 0 : 1)] = 0), s2[e5] = { left: 0, top: 0, width: i3, height: o2 }, d2[d2.length - 1] += i3 + n4.padding;
              }), l2.height += u2;
            } else {
              var h2 = n4.padding, p2 = t4.columnWidths = [], f2 = t4.columnHeights = [], g2 = n4.padding, m2 = 0, v2 = 0;
              st.each(t4.legendItems, function(t5, e5) {
                var i3 = Ua(n4, o2) + o2 / 2 + a2.measureText(t5.text).width;
                e5 > 0 && v2 + o2 + 2 * h2 > l2.height && (g2 += m2 + n4.padding, p2.push(m2), f2.push(v2), m2 = 0, v2 = 0), m2 = Math.max(m2, i3), v2 += o2 + h2, s2[e5] = { left: 0, top: 0, width: i3, height: o2 };
              }), g2 += m2, p2.push(m2), f2.push(v2), l2.width += g2;
            }
            t4.width = l2.width, t4.height = l2.height;
          } else
            t4.width = l2.width = t4.height = l2.height = 0;
        }, afterFit: Va, isHorizontal: function() {
          return this.options.position === "top" || this.options.position === "bottom";
        }, draw: function() {
          var t4 = this, e4 = t4.options, n4 = e4.labels, i2 = Q.global, a2 = i2.defaultColor, r2 = i2.elements.line, o2 = t4.height, s2 = t4.columnHeights, l2 = t4.width, c2 = t4.lineWidths;
          if (e4.display) {
            var d2, u2 = $a(e4.rtl, t4.left, t4.minSize.width), h2 = t4.ctx, p2 = Ya(n4.fontColor, i2.defaultFontColor), f2 = st.options._parseFont(n4), g2 = f2.size;
            h2.textAlign = u2.textAlign("left"), h2.textBaseline = "middle", h2.lineWidth = 0.5, h2.strokeStyle = p2, h2.fillStyle = p2, h2.font = f2.string;
            var m2 = Ua(n4, g2), v2 = t4.legendHitBoxes, b2 = function(t5, e5, i3) {
              if (!(isNaN(m2) || m2 <= 0)) {
                h2.save();
                var o3 = Ya(i3.lineWidth, r2.borderWidth);
                if (h2.fillStyle = Ya(i3.fillStyle, a2), h2.lineCap = Ya(i3.lineCap, r2.borderCapStyle), h2.lineDashOffset = Ya(i3.lineDashOffset, r2.borderDashOffset), h2.lineJoin = Ya(i3.lineJoin, r2.borderJoinStyle), h2.lineWidth = o3, h2.strokeStyle = Ya(i3.strokeStyle, a2), h2.setLineDash && h2.setLineDash(Ya(i3.lineDash, r2.borderDash)), n4 && n4.usePointStyle) {
                  var s3 = m2 * Math.SQRT2 / 2, l3 = u2.xPlus(t5, m2 / 2), c3 = e5 + g2 / 2;
                  st.canvas.drawPoint(h2, i3.pointStyle, s3, l3, c3, i3.rotation);
                } else
                  h2.fillRect(u2.leftForLtr(t5, m2), e5, m2, g2), o3 !== 0 && h2.strokeRect(u2.leftForLtr(t5, m2), e5, m2, g2);
                h2.restore();
              }
            }, y2 = function(t5, e5, n5, i3) {
              var a3 = g2 / 2, r3 = u2.xPlus(t5, m2 + a3), o3 = e5 + a3;
              h2.fillText(n5.text, r3, o3), n5.hidden && (h2.beginPath(), h2.lineWidth = 2, h2.moveTo(r3, o3), h2.lineTo(u2.xPlus(r3, i3), o3), h2.stroke());
            }, x2 = function(t5, i3) {
              switch (e4.align) {
                case "start":
                  return n4.padding;
                case "end":
                  return t5 - i3;
                default:
                  return (t5 - i3 + n4.padding) / 2;
              }
            }, _2 = t4.isHorizontal();
            d2 = _2 ? { x: t4.left + x2(l2, c2[0]), y: t4.top + n4.padding, line: 0 } : { x: t4.left + n4.padding, y: t4.top + x2(o2, s2[0]), line: 0 }, st.rtl.overrideTextDirection(t4.ctx, e4.textDirection);
            var w2 = g2 + n4.padding;
            st.each(t4.legendItems, function(e5, i3) {
              var a3 = h2.measureText(e5.text).width, r3 = m2 + g2 / 2 + a3, p3 = d2.x, f3 = d2.y;
              u2.setWidth(t4.minSize.width), _2 ? i3 > 0 && p3 + r3 + n4.padding > t4.left + t4.minSize.width && (f3 = d2.y += w2, d2.line++, p3 = d2.x = t4.left + x2(l2, c2[d2.line])) : i3 > 0 && f3 + w2 > t4.top + t4.minSize.height && (p3 = d2.x = p3 + t4.columnWidths[d2.line] + n4.padding, d2.line++, f3 = d2.y = t4.top + x2(o2, s2[d2.line]));
              var S2 = u2.x(p3);
              b2(S2, f3, e5), v2[i3].left = u2.leftForLtr(S2, v2[i3].width), v2[i3].top = f3, y2(S2, f3, e5, a3), _2 ? d2.x += r3 + n4.padding : d2.y += w2;
            }), st.rtl.restoreTextDirection(t4.ctx, e4.textDirection);
          }
        }, _getLegendItemAt: function(t4, e4) {
          var n4, i2, a2, r2 = this;
          if (t4 >= r2.left && t4 <= r2.right && e4 >= r2.top && e4 <= r2.bottom) {
            for (a2 = r2.legendHitBoxes, n4 = 0; n4 < a2.length; ++n4)
              if (t4 >= (i2 = a2[n4]).left && t4 <= i2.left + i2.width && e4 >= i2.top && e4 <= i2.top + i2.height)
                return r2.legendItems[n4];
          }
          return null;
        }, handleEvent: function(t4) {
          var e4, n4 = this, i2 = n4.options, a2 = t4.type === "mouseup" ? "click" : t4.type;
          if (a2 === "mousemove") {
            if (!i2.onHover && !i2.onLeave)
              return;
          } else {
            if (a2 !== "click")
              return;
            if (!i2.onClick)
              return;
          }
          e4 = n4._getLegendItemAt(t4.x, t4.y), a2 === "click" ? e4 && i2.onClick && i2.onClick.call(n4, t4.native, e4) : (i2.onLeave && e4 !== n4._hoveredItem && (n4._hoveredItem && i2.onLeave.call(n4, t4.native, n4._hoveredItem), n4._hoveredItem = e4), i2.onHover && e4 && i2.onHover.call(n4, t4.native, e4));
        } });
        function Xa(t4, e4) {
          var n4 = new Ga({ ctx: t4.ctx, options: e4, chart: t4 });
          Ve.configure(t4, n4, e4), Ve.addBox(t4, n4), t4.legend = n4;
        }
        var Za = { id: "legend", _element: Ga, beforeInit: function(t4) {
          var e4 = t4.options.legend;
          e4 && Xa(t4, e4);
        }, beforeUpdate: function(t4) {
          var e4 = t4.options.legend, n4 = t4.legend;
          e4 ? (st.mergeIf(e4, Q.global.legend), n4 ? (Ve.configure(t4, n4, e4), n4.options = e4) : Xa(t4, e4)) : n4 && (Ve.removeBox(t4, n4), delete t4.legend);
        }, afterEvent: function(t4, e4) {
          var n4 = t4.legend;
          n4 && n4.handleEvent(e4);
        } }, Ka = st.noop;
        Q._set("global", { title: { display: false, fontStyle: "bold", fullWidth: true, padding: 10, position: "top", text: "", weight: 2e3 } });
        var Qa = gt.extend({ initialize: function(t4) {
          var e4 = this;
          st.extend(e4, t4), e4.legendHitBoxes = [];
        }, beforeUpdate: Ka, update: function(t4, e4, n4) {
          var i2 = this;
          return i2.beforeUpdate(), i2.maxWidth = t4, i2.maxHeight = e4, i2.margins = n4, i2.beforeSetDimensions(), i2.setDimensions(), i2.afterSetDimensions(), i2.beforeBuildLabels(), i2.buildLabels(), i2.afterBuildLabels(), i2.beforeFit(), i2.fit(), i2.afterFit(), i2.afterUpdate(), i2.minSize;
        }, afterUpdate: Ka, beforeSetDimensions: Ka, setDimensions: function() {
          var t4 = this;
          t4.isHorizontal() ? (t4.width = t4.maxWidth, t4.left = 0, t4.right = t4.width) : (t4.height = t4.maxHeight, t4.top = 0, t4.bottom = t4.height), t4.paddingLeft = 0, t4.paddingTop = 0, t4.paddingRight = 0, t4.paddingBottom = 0, t4.minSize = { width: 0, height: 0 };
        }, afterSetDimensions: Ka, beforeBuildLabels: Ka, buildLabels: Ka, afterBuildLabels: Ka, beforeFit: Ka, fit: function() {
          var t4, e4 = this, n4 = e4.options, i2 = e4.minSize = {}, a2 = e4.isHorizontal();
          n4.display ? (t4 = (st.isArray(n4.text) ? n4.text.length : 1) * st.options._parseFont(n4).lineHeight + 2 * n4.padding, e4.width = i2.width = a2 ? e4.maxWidth : t4, e4.height = i2.height = a2 ? t4 : e4.maxHeight) : e4.width = i2.width = e4.height = i2.height = 0;
        }, afterFit: Ka, isHorizontal: function() {
          var t4 = this.options.position;
          return t4 === "top" || t4 === "bottom";
        }, draw: function() {
          var t4 = this, e4 = t4.ctx, n4 = t4.options;
          if (n4.display) {
            var i2, a2, r2, o2 = st.options._parseFont(n4), s2 = o2.lineHeight, l2 = s2 / 2 + n4.padding, c2 = 0, d2 = t4.top, u2 = t4.left, h2 = t4.bottom, p2 = t4.right;
            e4.fillStyle = st.valueOrDefault(n4.fontColor, Q.global.defaultFontColor), e4.font = o2.string, t4.isHorizontal() ? (a2 = u2 + (p2 - u2) / 2, r2 = d2 + l2, i2 = p2 - u2) : (a2 = n4.position === "left" ? u2 + l2 : p2 - l2, r2 = d2 + (h2 - d2) / 2, i2 = h2 - d2, c2 = Math.PI * (n4.position === "left" ? -0.5 : 0.5)), e4.save(), e4.translate(a2, r2), e4.rotate(c2), e4.textAlign = "center", e4.textBaseline = "middle";
            var f2 = n4.text;
            if (st.isArray(f2))
              for (var g2 = 0, m2 = 0; m2 < f2.length; ++m2)
                e4.fillText(f2[m2], 0, g2, i2), g2 += s2;
            else
              e4.fillText(f2, 0, 0, i2);
            e4.restore();
          }
        } });
        function Ja(t4, e4) {
          var n4 = new Qa({ ctx: t4.ctx, options: e4, chart: t4 });
          Ve.configure(t4, n4, e4), Ve.addBox(t4, n4), t4.titleBlock = n4;
        }
        var tr = {}, er = Wa, nr = Za, ir = { id: "title", _element: Qa, beforeInit: function(t4) {
          var e4 = t4.options.title;
          e4 && Ja(t4, e4);
        }, beforeUpdate: function(t4) {
          var e4 = t4.options.title, n4 = t4.titleBlock;
          e4 ? (st.mergeIf(e4, Q.global.title), n4 ? (Ve.configure(t4, n4, e4), n4.options = e4) : Ja(t4, e4)) : n4 && (Ve.removeBox(t4, n4), delete t4.titleBlock);
        } };
        for (var ar in tr.filler = er, tr.legend = nr, tr.title = ir, Gn.helpers = st, Xn(), Gn._adapters = Qn, Gn.Animation = vt, Gn.animationService = bt, Gn.controllers = ke, Gn.DatasetController = Ct, Gn.defaults = Q, Gn.Element = gt, Gn.elements = Ut, Gn.Interaction = Re, Gn.layouts = Ve, Gn.platform = _n, Gn.plugins = wn, Gn.Scale = yi, Gn.scaleService = Sn, Gn.Ticks = Jn, Gn.Tooltip = Fn, Gn.helpers.each(Ma, function(t4, e4) {
          Gn.scaleService.registerScaleType(e4, t4, t4._defaults);
        }), tr)
          tr.hasOwnProperty(ar) && Gn.plugins.register(tr[ar]);
        Gn.platform.initialize();
        var rr = Gn;
        return typeof window != "undefined" && (window.Chart = Gn), Gn.Chart = Gn, Gn.Legend = tr.legend._element, Gn.Title = tr.title._element, Gn.pluginService = Gn.plugins, Gn.PluginBase = Gn.Element.extend({}), Gn.canvasHelpers = Gn.helpers.canvas, Gn.layoutService = Gn.layouts, Gn.LinearScaleBase = Ti, Gn.helpers.each(["Bar", "Bubble", "Doughnut", "Line", "PolarArea", "Radar", "Scatter"], function(t4) {
          Gn[t4] = function(e4, n4) {
            return new Gn(e4, Gn.helpers.merge(n4 || {}, { type: t4.charAt(0).toLowerCase() + t4.slice(1) }));
          };
        }), rr;
      }(function() {
        try {
          return n2(381);
        } catch (t3) {
        }
      }());
    }, 8514: function(t2, e2, n2) {
      "use strict";
      var i = n2(6115);
      t2.exports = function(t3, e3, n3) {
        t3 && i(function() {
          t3.apply(n3 || null, e3 || []);
        });
      };
    }, 5229: function(t2, e2, n2) {
      "use strict";
      var i = n2(2584), a = n2(8514);
      t2.exports = function(t3, e3) {
        var n3 = e3 || {}, r = {};
        return t3 === void 0 && (t3 = {}), t3.on = function(e4, n4) {
          return r[e4] ? r[e4].push(n4) : r[e4] = [n4], t3;
        }, t3.once = function(e4, n4) {
          return n4._once = true, t3.on(e4, n4), t3;
        }, t3.off = function(e4, n4) {
          var i2 = arguments.length;
          if (i2 === 1)
            delete r[e4];
          else if (i2 === 0)
            r = {};
          else {
            var a2 = r[e4];
            if (!a2)
              return t3;
            a2.splice(a2.indexOf(n4), 1);
          }
          return t3;
        }, t3.emit = function() {
          var e4 = i(arguments);
          return t3.emitterSnapshot(e4.shift()).apply(this, e4);
        }, t3.emitterSnapshot = function(e4) {
          var o = (r[e4] || []).slice(0);
          return function() {
            var r2 = i(arguments), s = this || t3;
            if (e4 === "error" && n3.throws !== false && !o.length)
              throw r2.length === 1 ? r2[0] : r2;
            return o.forEach(function(i2) {
              n3.async ? a(i2, r2, s) : i2.apply(s, r2), i2._once && t3.off(e4, i2);
            }), t3;
          };
        }, t3;
      };
    }, 4963: function(t2) {
      t2.exports = function(t3) {
        if (typeof t3 != "function")
          throw TypeError(t3 + " is not a function!");
        return t3;
      };
    }, 7722: function(t2, e2, n2) {
      var i = n2(6314)("unscopables"), a = Array.prototype;
      a[i] == null && n2(7728)(a, i, {}), t2.exports = function(t3) {
        a[i][t3] = true;
      };
    }, 6793: function(t2, e2, n2) {
      "use strict";
      var i = n2(4496)(true);
      t2.exports = function(t3, e3, n3) {
        return e3 + (n3 ? i(t3, e3).length : 1);
      };
    }, 7007: function(t2, e2, n2) {
      var i = n2(5286);
      t2.exports = function(t3) {
        if (!i(t3))
          throw TypeError(t3 + " is not an object!");
        return t3;
      };
    }, 6852: function(t2, e2, n2) {
      "use strict";
      var i = n2(508), a = n2(2337), r = n2(875);
      t2.exports = function(t3) {
        for (var e3 = i(this), n3 = r(e3.length), o = arguments.length, s = a(o > 1 ? arguments[1] : void 0, n3), l = o > 2 ? arguments[2] : void 0, c = l === void 0 ? n3 : a(l, n3); c > s; )
          e3[s++] = t3;
        return e3;
      };
    }, 9315: function(t2, e2, n2) {
      var i = n2(2110), a = n2(875), r = n2(2337);
      t2.exports = function(t3) {
        return function(e3, n3, o) {
          var s, l = i(e3), c = a(l.length), d = r(o, c);
          if (t3 && n3 != n3) {
            for (; c > d; )
              if ((s = l[d++]) != s)
                return true;
          } else
            for (; c > d; d++)
              if ((t3 || d in l) && l[d] === n3)
                return t3 || d || 0;
          return !t3 && -1;
        };
      };
    }, 50: function(t2, e2, n2) {
      var i = n2(741), a = n2(9797), r = n2(508), o = n2(875), s = n2(6886);
      t2.exports = function(t3, e3) {
        var n3 = t3 == 1, l = t3 == 2, c = t3 == 3, d = t3 == 4, u = t3 == 6, h = t3 == 5 || u, p = e3 || s;
        return function(e4, s2, f) {
          for (var g, m, v = r(e4), b = a(v), y = i(s2, f, 3), x = o(b.length), _ = 0, w = n3 ? p(e4, x) : l ? p(e4, 0) : void 0; x > _; _++)
            if ((h || _ in b) && (m = y(g = b[_], _, v), t3)) {
              if (n3)
                w[_] = m;
              else if (m)
                switch (t3) {
                  case 3:
                    return true;
                  case 5:
                    return g;
                  case 6:
                    return _;
                  case 2:
                    w.push(g);
                }
              else if (d)
                return false;
            }
          return u ? -1 : c || d ? d : w;
        };
      };
    }, 2736: function(t2, e2, n2) {
      var i = n2(5286), a = n2(4302), r = n2(6314)("species");
      t2.exports = function(t3) {
        var e3;
        return a(t3) && (typeof (e3 = t3.constructor) != "function" || e3 !== Array && !a(e3.prototype) || (e3 = void 0), i(e3) && (e3 = e3[r]) === null && (e3 = void 0)), e3 === void 0 ? Array : e3;
      };
    }, 6886: function(t2, e2, n2) {
      var i = n2(2736);
      t2.exports = function(t3, e3) {
        return new (i(t3))(e3);
      };
    }, 1488: function(t2, e2, n2) {
      var i = n2(2032), a = n2(6314)("toStringTag"), r = i(function() {
        return arguments;
      }()) == "Arguments";
      t2.exports = function(t3) {
        var e3, n3, o;
        return t3 === void 0 ? "Undefined" : t3 === null ? "Null" : typeof (n3 = function(t4, e4) {
          try {
            return t4[e4];
          } catch (t5) {
          }
        }(e3 = Object(t3), a)) == "string" ? n3 : r ? i(e3) : (o = i(e3)) == "Object" && typeof e3.callee == "function" ? "Arguments" : o;
      };
    }, 2032: function(t2) {
      var e2 = {}.toString;
      t2.exports = function(t3) {
        return e2.call(t3).slice(8, -1);
      };
    }, 5645: function(t2) {
      var e2 = t2.exports = { version: "2.6.12" };
      typeof __e == "number" && (__e = e2);
    }, 2811: function(t2, e2, n2) {
      "use strict";
      var i = n2(9275), a = n2(681);
      t2.exports = function(t3, e3, n3) {
        e3 in t3 ? i.f(t3, e3, a(0, n3)) : t3[e3] = n3;
      };
    }, 741: function(t2, e2, n2) {
      var i = n2(4963);
      t2.exports = function(t3, e3, n3) {
        if (i(t3), e3 === void 0)
          return t3;
        switch (n3) {
          case 1:
            return function(n4) {
              return t3.call(e3, n4);
            };
          case 2:
            return function(n4, i2) {
              return t3.call(e3, n4, i2);
            };
          case 3:
            return function(n4, i2, a) {
              return t3.call(e3, n4, i2, a);
            };
        }
        return function() {
          return t3.apply(e3, arguments);
        };
      };
    }, 1355: function(t2) {
      t2.exports = function(t3) {
        if (t3 == null)
          throw TypeError("Can't call method on  " + t3);
        return t3;
      };
    }, 7057: function(t2, e2, n2) {
      t2.exports = !n2(4253)(function() {
        return Object.defineProperty({}, "a", { get: function() {
          return 7;
        } }).a != 7;
      });
    }, 2457: function(t2, e2, n2) {
      var i = n2(5286), a = n2(3816).document, r = i(a) && i(a.createElement);
      t2.exports = function(t3) {
        return r ? a.createElement(t3) : {};
      };
    }, 4430: function(t2) {
      t2.exports = "constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",");
    }, 5541: function(t2, e2, n2) {
      var i = n2(7184), a = n2(4548), r = n2(4682);
      t2.exports = function(t3) {
        var e3 = i(t3), n3 = a.f;
        if (n3)
          for (var o, s = n3(t3), l = r.f, c = 0; s.length > c; )
            l.call(t3, o = s[c++]) && e3.push(o);
        return e3;
      };
    }, 2985: function(t2, e2, n2) {
      var i = n2(3816), a = n2(5645), r = n2(7728), o = n2(7234), s = n2(741), l = function(t3, e3, n3) {
        var c, d, u, h, p = t3 & l.F, f = t3 & l.G, g = t3 & l.S, m = t3 & l.P, v = t3 & l.B, b = f ? i : g ? i[e3] || (i[e3] = {}) : (i[e3] || {}).prototype, y = f ? a : a[e3] || (a[e3] = {}), x = y.prototype || (y.prototype = {});
        for (c in f && (n3 = e3), n3)
          u = ((d = !p && b && b[c] !== void 0) ? b : n3)[c], h = v && d ? s(u, i) : m && typeof u == "function" ? s(Function.call, u) : u, b && o(b, c, u, t3 & l.U), y[c] != u && r(y, c, h), m && x[c] != u && (x[c] = u);
      };
      i.core = a, l.F = 1, l.G = 2, l.S = 4, l.P = 8, l.B = 16, l.W = 32, l.U = 64, l.R = 128, t2.exports = l;
    }, 4253: function(t2) {
      t2.exports = function(t3) {
        try {
          return !!t3();
        } catch (t4) {
          return true;
        }
      };
    }, 8082: function(t2, e2, n2) {
      "use strict";
      n2(8269);
      var i = n2(7234), a = n2(7728), r = n2(4253), o = n2(1355), s = n2(6314), l = n2(1165), c = s("species"), d = !r(function() {
        var t3 = /./;
        return t3.exec = function() {
          var t4 = [];
          return t4.groups = { a: "7" }, t4;
        }, "".replace(t3, "$<a>") !== "7";
      }), u = function() {
        var t3 = /(?:)/, e3 = t3.exec;
        t3.exec = function() {
          return e3.apply(this, arguments);
        };
        var n3 = "ab".split(t3);
        return n3.length === 2 && n3[0] === "a" && n3[1] === "b";
      }();
      t2.exports = function(t3, e3, n3) {
        var h = s(t3), p = !r(function() {
          var e4 = {};
          return e4[h] = function() {
            return 7;
          }, ""[t3](e4) != 7;
        }), f = p ? !r(function() {
          var e4 = false, n4 = /a/;
          return n4.exec = function() {
            return e4 = true, null;
          }, t3 === "split" && (n4.constructor = {}, n4.constructor[c] = function() {
            return n4;
          }), n4[h](""), !e4;
        }) : void 0;
        if (!p || !f || t3 === "replace" && !d || t3 === "split" && !u) {
          var g = /./[h], m = n3(o, h, ""[t3], function(t4, e4, n4, i2, a2) {
            return e4.exec === l ? p && !a2 ? { done: true, value: g.call(e4, n4, i2) } : { done: true, value: t4.call(n4, e4, i2) } : { done: false };
          }), v = m[0], b = m[1];
          i(String.prototype, t3, v), a(RegExp.prototype, h, e3 == 2 ? function(t4, e4) {
            return b.call(t4, this, e4);
          } : function(t4) {
            return b.call(t4, this);
          });
        }
      };
    }, 3218: function(t2, e2, n2) {
      "use strict";
      var i = n2(7007);
      t2.exports = function() {
        var t3 = i(this), e3 = "";
        return t3.global && (e3 += "g"), t3.ignoreCase && (e3 += "i"), t3.multiline && (e3 += "m"), t3.unicode && (e3 += "u"), t3.sticky && (e3 += "y"), e3;
      };
    }, 18: function(t2, e2, n2) {
      t2.exports = n2(3825)("native-function-to-string", Function.toString);
    }, 3816: function(t2) {
      var e2 = t2.exports = typeof window != "undefined" && window.Math == Math ? window : typeof self != "undefined" && self.Math == Math ? self : Function("return this")();
      typeof __g == "number" && (__g = e2);
    }, 9181: function(t2) {
      var e2 = {}.hasOwnProperty;
      t2.exports = function(t3, n2) {
        return e2.call(t3, n2);
      };
    }, 7728: function(t2, e2, n2) {
      var i = n2(9275), a = n2(681);
      t2.exports = n2(7057) ? function(t3, e3, n3) {
        return i.f(t3, e3, a(1, n3));
      } : function(t3, e3, n3) {
        return t3[e3] = n3, t3;
      };
    }, 639: function(t2, e2, n2) {
      var i = n2(3816).document;
      t2.exports = i && i.documentElement;
    }, 1734: function(t2, e2, n2) {
      t2.exports = !n2(7057) && !n2(4253)(function() {
        return Object.defineProperty(n2(2457)("div"), "a", { get: function() {
          return 7;
        } }).a != 7;
      });
    }, 9797: function(t2, e2, n2) {
      var i = n2(2032);
      t2.exports = Object("z").propertyIsEnumerable(0) ? Object : function(t3) {
        return i(t3) == "String" ? t3.split("") : Object(t3);
      };
    }, 4302: function(t2, e2, n2) {
      var i = n2(2032);
      t2.exports = Array.isArray || function(t3) {
        return i(t3) == "Array";
      };
    }, 5286: function(t2) {
      t2.exports = function(t3) {
        return typeof t3 == "object" ? t3 !== null : typeof t3 == "function";
      };
    }, 5364: function(t2, e2, n2) {
      var i = n2(5286), a = n2(2032), r = n2(6314)("match");
      t2.exports = function(t3) {
        var e3;
        return i(t3) && ((e3 = t3[r]) !== void 0 ? !!e3 : a(t3) == "RegExp");
      };
    }, 4461: function(t2) {
      t2.exports = false;
    }, 4728: function(t2, e2, n2) {
      var i = n2(3953)("meta"), a = n2(5286), r = n2(9181), o = n2(9275).f, s = 0, l = Object.isExtensible || function() {
        return true;
      }, c = !n2(4253)(function() {
        return l(Object.preventExtensions({}));
      }), d = function(t3) {
        o(t3, i, { value: { i: "O" + ++s, w: {} } });
      }, u = t2.exports = { KEY: i, NEED: false, fastKey: function(t3, e3) {
        if (!a(t3))
          return typeof t3 == "symbol" ? t3 : (typeof t3 == "string" ? "S" : "P") + t3;
        if (!r(t3, i)) {
          if (!l(t3))
            return "F";
          if (!e3)
            return "E";
          d(t3);
        }
        return t3[i].i;
      }, getWeak: function(t3, e3) {
        if (!r(t3, i)) {
          if (!l(t3))
            return true;
          if (!e3)
            return false;
          d(t3);
        }
        return t3[i].w;
      }, onFreeze: function(t3) {
        return c && u.NEED && l(t3) && !r(t3, i) && d(t3), t3;
      } };
    }, 2503: function(t2, e2, n2) {
      var i = n2(7007), a = n2(5588), r = n2(4430), o = n2(9335)("IE_PROTO"), s = function() {
      }, l = function() {
        var t3, e3 = n2(2457)("iframe"), i2 = r.length;
        for (e3.style.display = "none", n2(639).appendChild(e3), e3.src = "javascript:", (t3 = e3.contentWindow.document).open(), t3.write("<script>document.F=Object<\/script>"), t3.close(), l = t3.F; i2--; )
          delete l.prototype[r[i2]];
        return l();
      };
      t2.exports = Object.create || function(t3, e3) {
        var n3;
        return t3 !== null ? (s.prototype = i(t3), n3 = new s(), s.prototype = null, n3[o] = t3) : n3 = l(), e3 === void 0 ? n3 : a(n3, e3);
      };
    }, 9275: function(t2, e2, n2) {
      var i = n2(7007), a = n2(1734), r = n2(1689), o = Object.defineProperty;
      e2.f = n2(7057) ? Object.defineProperty : function(t3, e3, n3) {
        if (i(t3), e3 = r(e3, true), i(n3), a)
          try {
            return o(t3, e3, n3);
          } catch (t4) {
          }
        if ("get" in n3 || "set" in n3)
          throw TypeError("Accessors not supported!");
        return "value" in n3 && (t3[e3] = n3.value), t3;
      };
    }, 5588: function(t2, e2, n2) {
      var i = n2(9275), a = n2(7007), r = n2(7184);
      t2.exports = n2(7057) ? Object.defineProperties : function(t3, e3) {
        a(t3);
        for (var n3, o = r(e3), s = o.length, l = 0; s > l; )
          i.f(t3, n3 = o[l++], e3[n3]);
        return t3;
      };
    }, 8693: function(t2, e2, n2) {
      var i = n2(4682), a = n2(681), r = n2(2110), o = n2(1689), s = n2(9181), l = n2(1734), c = Object.getOwnPropertyDescriptor;
      e2.f = n2(7057) ? c : function(t3, e3) {
        if (t3 = r(t3), e3 = o(e3, true), l)
          try {
            return c(t3, e3);
          } catch (t4) {
          }
        if (s(t3, e3))
          return a(!i.f.call(t3, e3), t3[e3]);
      };
    }, 9327: function(t2, e2, n2) {
      var i = n2(2110), a = n2(616).f, r = {}.toString, o = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      t2.exports.f = function(t3) {
        return o && r.call(t3) == "[object Window]" ? function(t4) {
          try {
            return a(t4);
          } catch (t5) {
            return o.slice();
          }
        }(t3) : a(i(t3));
      };
    }, 616: function(t2, e2, n2) {
      var i = n2(189), a = n2(4430).concat("length", "prototype");
      e2.f = Object.getOwnPropertyNames || function(t3) {
        return i(t3, a);
      };
    }, 4548: function(t2, e2) {
      e2.f = Object.getOwnPropertySymbols;
    }, 189: function(t2, e2, n2) {
      var i = n2(9181), a = n2(2110), r = n2(9315)(false), o = n2(9335)("IE_PROTO");
      t2.exports = function(t3, e3) {
        var n3, s = a(t3), l = 0, c = [];
        for (n3 in s)
          n3 != o && i(s, n3) && c.push(n3);
        for (; e3.length > l; )
          i(s, n3 = e3[l++]) && (~r(c, n3) || c.push(n3));
        return c;
      };
    }, 7184: function(t2, e2, n2) {
      var i = n2(189), a = n2(4430);
      t2.exports = Object.keys || function(t3) {
        return i(t3, a);
      };
    }, 4682: function(t2, e2) {
      e2.f = {}.propertyIsEnumerable;
    }, 3160: function(t2, e2, n2) {
      var i = n2(2985), a = n2(5645), r = n2(4253);
      t2.exports = function(t3, e3) {
        var n3 = (a.Object || {})[t3] || Object[t3], o = {};
        o[t3] = e3(n3), i(i.S + i.F * r(function() {
          n3(1);
        }), "Object", o);
      };
    }, 7643: function(t2, e2, n2) {
      var i = n2(616), a = n2(4548), r = n2(7007), o = n2(3816).Reflect;
      t2.exports = o && o.ownKeys || function(t3) {
        var e3 = i.f(r(t3)), n3 = a.f;
        return n3 ? e3.concat(n3(t3)) : e3;
      };
    }, 681: function(t2) {
      t2.exports = function(t3, e2) {
        return { enumerable: !(1 & t3), configurable: !(2 & t3), writable: !(4 & t3), value: e2 };
      };
    }, 7234: function(t2, e2, n2) {
      var i = n2(3816), a = n2(7728), r = n2(9181), o = n2(3953)("src"), s = n2(18), l = "toString", c = ("" + s).split(l);
      n2(5645).inspectSource = function(t3) {
        return s.call(t3);
      }, (t2.exports = function(t3, e3, n3, s2) {
        var l2 = typeof n3 == "function";
        l2 && (r(n3, "name") || a(n3, "name", e3)), t3[e3] !== n3 && (l2 && (r(n3, o) || a(n3, o, t3[e3] ? "" + t3[e3] : c.join(String(e3)))), t3 === i ? t3[e3] = n3 : s2 ? t3[e3] ? t3[e3] = n3 : a(t3, e3, n3) : (delete t3[e3], a(t3, e3, n3)));
      })(Function.prototype, l, function() {
        return typeof this == "function" && this[o] || s.call(this);
      });
    }, 7787: function(t2, e2, n2) {
      "use strict";
      var i = n2(1488), a = RegExp.prototype.exec;
      t2.exports = function(t3, e3) {
        var n3 = t3.exec;
        if (typeof n3 == "function") {
          var r = n3.call(t3, e3);
          if (typeof r != "object")
            throw new TypeError("RegExp exec method returned something other than an Object or null");
          return r;
        }
        if (i(t3) !== "RegExp")
          throw new TypeError("RegExp#exec called on incompatible receiver");
        return a.call(t3, e3);
      };
    }, 1165: function(t2, e2, n2) {
      "use strict";
      var i, a, r = n2(3218), o = RegExp.prototype.exec, s = String.prototype.replace, l = o, c = (i = /a/, a = /b*/g, o.call(i, "a"), o.call(a, "a"), i.lastIndex !== 0 || a.lastIndex !== 0), d = /()??/.exec("")[1] !== void 0;
      (c || d) && (l = function(t3) {
        var e3, n3, i2, a2, l2 = this;
        return d && (n3 = new RegExp("^" + l2.source + "$(?!\\s)", r.call(l2))), c && (e3 = l2.lastIndex), i2 = o.call(l2, t3), c && i2 && (l2.lastIndex = l2.global ? i2.index + i2[0].length : e3), d && i2 && i2.length > 1 && s.call(i2[0], n3, function() {
          for (a2 = 1; a2 < arguments.length - 2; a2++)
            arguments[a2] === void 0 && (i2[a2] = void 0);
        }), i2;
      }), t2.exports = l;
    }, 2943: function(t2, e2, n2) {
      var i = n2(9275).f, a = n2(9181), r = n2(6314)("toStringTag");
      t2.exports = function(t3, e3, n3) {
        t3 && !a(t3 = n3 ? t3 : t3.prototype, r) && i(t3, r, { configurable: true, value: e3 });
      };
    }, 9335: function(t2, e2, n2) {
      var i = n2(3825)("keys"), a = n2(3953);
      t2.exports = function(t3) {
        return i[t3] || (i[t3] = a(t3));
      };
    }, 3825: function(t2, e2, n2) {
      var i = n2(5645), a = n2(3816), r = "__core-js_shared__", o = a[r] || (a[r] = {});
      (t2.exports = function(t3, e3) {
        return o[t3] || (o[t3] = e3 !== void 0 ? e3 : {});
      })("versions", []).push({ version: i.version, mode: n2(4461) ? "pure" : "global", copyright: "\xA9 2020 Denis Pushkarev (zloirock.ru)" });
    }, 8364: function(t2, e2, n2) {
      var i = n2(7007), a = n2(4963), r = n2(6314)("species");
      t2.exports = function(t3, e3) {
        var n3, o = i(t3).constructor;
        return o === void 0 || (n3 = i(o)[r]) == null ? e3 : a(n3);
      };
    }, 7717: function(t2, e2, n2) {
      "use strict";
      var i = n2(4253);
      t2.exports = function(t3, e3) {
        return !!t3 && i(function() {
          e3 ? t3.call(null, function() {
          }, 1) : t3.call(null);
        });
      };
    }, 4496: function(t2, e2, n2) {
      var i = n2(1467), a = n2(1355);
      t2.exports = function(t3) {
        return function(e3, n3) {
          var r, o, s = String(a(e3)), l = i(n3), c = s.length;
          return l < 0 || l >= c ? t3 ? "" : void 0 : (r = s.charCodeAt(l)) < 55296 || r > 56319 || l + 1 === c || (o = s.charCodeAt(l + 1)) < 56320 || o > 57343 ? t3 ? s.charAt(l) : r : t3 ? s.slice(l, l + 2) : o - 56320 + (r - 55296 << 10) + 65536;
        };
      };
    }, 2337: function(t2, e2, n2) {
      var i = n2(1467), a = Math.max, r = Math.min;
      t2.exports = function(t3, e3) {
        return (t3 = i(t3)) < 0 ? a(t3 + e3, 0) : r(t3, e3);
      };
    }, 1467: function(t2) {
      var e2 = Math.ceil, n2 = Math.floor;
      t2.exports = function(t3) {
        return isNaN(t3 = +t3) ? 0 : (t3 > 0 ? n2 : e2)(t3);
      };
    }, 2110: function(t2, e2, n2) {
      var i = n2(9797), a = n2(1355);
      t2.exports = function(t3) {
        return i(a(t3));
      };
    }, 875: function(t2, e2, n2) {
      var i = n2(1467), a = Math.min;
      t2.exports = function(t3) {
        return t3 > 0 ? a(i(t3), 9007199254740991) : 0;
      };
    }, 508: function(t2, e2, n2) {
      var i = n2(1355);
      t2.exports = function(t3) {
        return Object(i(t3));
      };
    }, 1689: function(t2, e2, n2) {
      var i = n2(5286);
      t2.exports = function(t3, e3) {
        if (!i(t3))
          return t3;
        var n3, a;
        if (e3 && typeof (n3 = t3.toString) == "function" && !i(a = n3.call(t3)))
          return a;
        if (typeof (n3 = t3.valueOf) == "function" && !i(a = n3.call(t3)))
          return a;
        if (!e3 && typeof (n3 = t3.toString) == "function" && !i(a = n3.call(t3)))
          return a;
        throw TypeError("Can't convert object to primitive value");
      };
    }, 3953: function(t2) {
      var e2 = 0, n2 = Math.random();
      t2.exports = function(t3) {
        return "Symbol(".concat(t3 === void 0 ? "" : t3, ")_", (++e2 + n2).toString(36));
      };
    }, 6074: function(t2, e2, n2) {
      var i = n2(3816), a = n2(5645), r = n2(4461), o = n2(8787), s = n2(9275).f;
      t2.exports = function(t3) {
        var e3 = a.Symbol || (a.Symbol = r ? {} : i.Symbol || {});
        t3.charAt(0) == "_" || t3 in e3 || s(e3, t3, { value: o.f(t3) });
      };
    }, 8787: function(t2, e2, n2) {
      e2.f = n2(6314);
    }, 6314: function(t2, e2, n2) {
      var i = n2(3825)("wks"), a = n2(3953), r = n2(3816).Symbol, o = typeof r == "function";
      (t2.exports = function(t3) {
        return i[t3] || (i[t3] = o && r[t3] || (o ? r : a)("Symbol." + t3));
      }).store = i;
    }, 5002: function(t2, e2, n2) {
      var i = n2(2985);
      i(i.P, "Array", { fill: n2(6852) }), n2(7722)("fill");
    }, 8837: function(t2, e2, n2) {
      "use strict";
      var i = n2(2985), a = n2(50)(2);
      i(i.P + i.F * !n2(7717)([].filter, true), "Array", { filter: function(t3) {
        return a(this, t3, arguments[1]);
      } });
    }, 9371: function(t2, e2, n2) {
      "use strict";
      var i = n2(2985), a = n2(50)(1);
      i(i.P + i.F * !n2(7717)([].map, true), "Array", { map: function(t3) {
        return a(this, t3, arguments[1]);
      } });
    }, 110: function(t2, e2, n2) {
      "use strict";
      var i = n2(2985), a = n2(639), r = n2(2032), o = n2(2337), s = n2(875), l = [].slice;
      i(i.P + i.F * n2(4253)(function() {
        a && l.call(a);
      }), "Array", { slice: function(t3, e3) {
        var n3 = s(this.length), i2 = r(this);
        if (e3 = e3 === void 0 ? n3 : e3, i2 == "Array")
          return l.call(this, t3, e3);
        for (var a2 = o(t3, n3), c = o(e3, n3), d = s(c - a2), u = new Array(d), h = 0; h < d; h++)
          u[h] = i2 == "String" ? this.charAt(a2 + h) : this[a2 + h];
        return u;
      } });
    }, 4882: function(t2, e2, n2) {
      var i = n2(2110), a = n2(8693).f;
      n2(3160)("getOwnPropertyDescriptor", function() {
        return function(t3, e3) {
          return a(i(t3), e3);
        };
      });
    }, 7476: function(t2, e2, n2) {
      var i = n2(508), a = n2(7184);
      n2(3160)("keys", function() {
        return function(t3) {
          return a(i(t3));
        };
      });
    }, 8269: function(t2, e2, n2) {
      "use strict";
      var i = n2(1165);
      n2(2985)({ target: "RegExp", proto: true, forced: i !== /./.exec }, { exec: i });
    }, 9357: function(t2, e2, n2) {
      "use strict";
      var i = n2(7007), a = n2(508), r = n2(875), o = n2(1467), s = n2(6793), l = n2(7787), c = Math.max, d = Math.min, u = Math.floor, h = /\$([$&`']|\d\d?|<[^>]*>)/g, p = /\$([$&`']|\d\d?)/g;
      n2(8082)("replace", 2, function(t3, e3, n3, f) {
        return [function(i2, a2) {
          var r2 = t3(this), o2 = i2 == null ? void 0 : i2[e3];
          return o2 !== void 0 ? o2.call(i2, r2, a2) : n3.call(String(r2), i2, a2);
        }, function(t4, e4) {
          var a2 = f(n3, t4, this, e4);
          if (a2.done)
            return a2.value;
          var u2 = i(t4), h2 = String(this), p2 = typeof e4 == "function";
          p2 || (e4 = String(e4));
          var m = u2.global;
          if (m) {
            var v = u2.unicode;
            u2.lastIndex = 0;
          }
          for (var b = []; ; ) {
            var y = l(u2, h2);
            if (y === null)
              break;
            if (b.push(y), !m)
              break;
            String(y[0]) === "" && (u2.lastIndex = s(h2, r(u2.lastIndex), v));
          }
          for (var x, _ = "", w = 0, S = 0; S < b.length; S++) {
            y = b[S];
            for (var C = String(y[0]), k = c(d(o(y.index), h2.length), 0), D = [], T = 1; T < y.length; T++)
              D.push((x = y[T]) === void 0 ? x : String(x));
            var E = y.groups;
            if (p2) {
              var A = [C].concat(D, k, h2);
              E !== void 0 && A.push(E);
              var I = String(e4.apply(void 0, A));
            } else
              I = g(C, h2, k, D, E, e4);
            k >= w && (_ += h2.slice(w, k) + I, w = k + C.length);
          }
          return _ + h2.slice(w);
        }];
        function g(t4, e4, i2, r2, o2, s2) {
          var l2 = i2 + t4.length, c2 = r2.length, d2 = p;
          return o2 !== void 0 && (o2 = a(o2), d2 = h), n3.call(s2, d2, function(n4, a2) {
            var s3;
            switch (a2.charAt(0)) {
              case "$":
                return "$";
              case "&":
                return t4;
              case "`":
                return e4.slice(0, i2);
              case "'":
                return e4.slice(l2);
              case "<":
                s3 = o2[a2.slice(1, -1)];
                break;
              default:
                var d3 = +a2;
                if (d3 === 0)
                  return n4;
                if (d3 > c2) {
                  var h2 = u(d3 / 10);
                  return h2 === 0 ? n4 : h2 <= c2 ? r2[h2 - 1] === void 0 ? a2.charAt(1) : r2[h2 - 1] + a2.charAt(1) : n4;
                }
                s3 = r2[d3 - 1];
            }
            return s3 === void 0 ? "" : s3;
          });
        }
      });
    }, 1876: function(t2, e2, n2) {
      "use strict";
      var i = n2(5364), a = n2(7007), r = n2(8364), o = n2(6793), s = n2(875), l = n2(7787), c = n2(1165), d = n2(4253), u = Math.min, h = [].push, p = 4294967295, f = !d(function() {
        RegExp(p, "y");
      });
      n2(8082)("split", 2, function(t3, e3, n3, d2) {
        var g;
        return g = "abbc".split(/(b)*/)[1] == "c" || "test".split(/(?:)/, -1).length != 4 || "ab".split(/(?:ab)*/).length != 2 || ".".split(/(.?)(.?)/).length != 4 || ".".split(/()()/).length > 1 || "".split(/.?/).length ? function(t4, e4) {
          var a2 = String(this);
          if (t4 === void 0 && e4 === 0)
            return [];
          if (!i(t4))
            return n3.call(a2, t4, e4);
          for (var r2, o2, s2, l2 = [], d3 = (t4.ignoreCase ? "i" : "") + (t4.multiline ? "m" : "") + (t4.unicode ? "u" : "") + (t4.sticky ? "y" : ""), u2 = 0, f2 = e4 === void 0 ? p : e4 >>> 0, g2 = new RegExp(t4.source, d3 + "g"); (r2 = c.call(g2, a2)) && !((o2 = g2.lastIndex) > u2 && (l2.push(a2.slice(u2, r2.index)), r2.length > 1 && r2.index < a2.length && h.apply(l2, r2.slice(1)), s2 = r2[0].length, u2 = o2, l2.length >= f2)); )
            g2.lastIndex === r2.index && g2.lastIndex++;
          return u2 === a2.length ? !s2 && g2.test("") || l2.push("") : l2.push(a2.slice(u2)), l2.length > f2 ? l2.slice(0, f2) : l2;
        } : "0".split(void 0, 0).length ? function(t4, e4) {
          return t4 === void 0 && e4 === 0 ? [] : n3.call(this, t4, e4);
        } : n3, [function(n4, i2) {
          var a2 = t3(this), r2 = n4 == null ? void 0 : n4[e3];
          return r2 !== void 0 ? r2.call(n4, a2, i2) : g.call(String(a2), n4, i2);
        }, function(t4, e4) {
          var i2 = d2(g, t4, this, e4, g !== n3);
          if (i2.done)
            return i2.value;
          var c2 = a(t4), h2 = String(this), m = r(c2, RegExp), v = c2.unicode, b = (c2.ignoreCase ? "i" : "") + (c2.multiline ? "m" : "") + (c2.unicode ? "u" : "") + (f ? "y" : "g"), y = new m(f ? c2 : "^(?:" + c2.source + ")", b), x = e4 === void 0 ? p : e4 >>> 0;
          if (x === 0)
            return [];
          if (h2.length === 0)
            return l(y, h2) === null ? [h2] : [];
          for (var _ = 0, w = 0, S = []; w < h2.length; ) {
            y.lastIndex = f ? w : 0;
            var C, k = l(y, f ? h2 : h2.slice(w));
            if (k === null || (C = u(s(y.lastIndex + (f ? 0 : w)), h2.length)) === _)
              w = o(h2, w, v);
            else {
              if (S.push(h2.slice(_, w)), S.length === x)
                return S;
              for (var D = 1; D <= k.length - 1; D++)
                if (S.push(k[D]), S.length === x)
                  return S;
              w = _ = C;
            }
          }
          return S.push(h2.slice(_)), S;
        }];
      });
    }, 5767: function(t2, e2, n2) {
      "use strict";
      var i = n2(3816), a = n2(9181), r = n2(7057), o = n2(2985), s = n2(7234), l = n2(4728).KEY, c = n2(4253), d = n2(3825), u = n2(2943), h = n2(3953), p = n2(6314), f = n2(8787), g = n2(6074), m = n2(5541), v = n2(4302), b = n2(7007), y = n2(5286), x = n2(508), _ = n2(2110), w = n2(1689), S = n2(681), C = n2(2503), k = n2(9327), D = n2(8693), T = n2(4548), E = n2(9275), A = n2(7184), I = D.f, M = E.f, R = k.f, P = i.Symbol, O = i.JSON, j = O && O.stringify, N = p("_hidden"), L = p("toPrimitive"), F = {}.propertyIsEnumerable, H = d("symbol-registry"), B = d("symbols"), q = d("op-symbols"), z = Object.prototype, W = typeof P == "function" && !!T.f, $ = i.QObject, V = !$ || !$.prototype || !$.prototype.findChild, Y = r && c(function() {
        return C(M({}, "a", { get: function() {
          return M(this, "a", { value: 7 }).a;
        } })).a != 7;
      }) ? function(t3, e3, n3) {
        var i2 = I(z, e3);
        i2 && delete z[e3], M(t3, e3, n3), i2 && t3 !== z && M(z, e3, i2);
      } : M, U = function(t3) {
        var e3 = B[t3] = C(P.prototype);
        return e3._k = t3, e3;
      }, G = W && typeof P.iterator == "symbol" ? function(t3) {
        return typeof t3 == "symbol";
      } : function(t3) {
        return t3 instanceof P;
      }, X = function(t3, e3, n3) {
        return t3 === z && X(q, e3, n3), b(t3), e3 = w(e3, true), b(n3), a(B, e3) ? (n3.enumerable ? (a(t3, N) && t3[N][e3] && (t3[N][e3] = false), n3 = C(n3, { enumerable: S(0, false) })) : (a(t3, N) || M(t3, N, S(1, {})), t3[N][e3] = true), Y(t3, e3, n3)) : M(t3, e3, n3);
      }, Z = function(t3, e3) {
        b(t3);
        for (var n3, i2 = m(e3 = _(e3)), a2 = 0, r2 = i2.length; r2 > a2; )
          X(t3, n3 = i2[a2++], e3[n3]);
        return t3;
      }, K = function(t3) {
        var e3 = F.call(this, t3 = w(t3, true));
        return !(this === z && a(B, t3) && !a(q, t3)) && (!(e3 || !a(this, t3) || !a(B, t3) || a(this, N) && this[N][t3]) || e3);
      }, Q = function(t3, e3) {
        if (t3 = _(t3), e3 = w(e3, true), t3 !== z || !a(B, e3) || a(q, e3)) {
          var n3 = I(t3, e3);
          return !n3 || !a(B, e3) || a(t3, N) && t3[N][e3] || (n3.enumerable = true), n3;
        }
      }, J = function(t3) {
        for (var e3, n3 = R(_(t3)), i2 = [], r2 = 0; n3.length > r2; )
          a(B, e3 = n3[r2++]) || e3 == N || e3 == l || i2.push(e3);
        return i2;
      }, tt = function(t3) {
        for (var e3, n3 = t3 === z, i2 = R(n3 ? q : _(t3)), r2 = [], o2 = 0; i2.length > o2; )
          !a(B, e3 = i2[o2++]) || n3 && !a(z, e3) || r2.push(B[e3]);
        return r2;
      };
      W || (P = function() {
        if (this instanceof P)
          throw TypeError("Symbol is not a constructor!");
        var t3 = h(arguments.length > 0 ? arguments[0] : void 0), e3 = function(n3) {
          this === z && e3.call(q, n3), a(this, N) && a(this[N], t3) && (this[N][t3] = false), Y(this, t3, S(1, n3));
        };
        return r && V && Y(z, t3, { configurable: true, set: e3 }), U(t3);
      }, s(P.prototype, "toString", function() {
        return this._k;
      }), D.f = Q, E.f = X, n2(616).f = k.f = J, n2(4682).f = K, T.f = tt, r && !n2(4461) && s(z, "propertyIsEnumerable", K, true), f.f = function(t3) {
        return U(p(t3));
      }), o(o.G + o.W + o.F * !W, { Symbol: P });
      for (var et = "hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables".split(","), nt = 0; et.length > nt; )
        p(et[nt++]);
      for (var it = A(p.store), at = 0; it.length > at; )
        g(it[at++]);
      o(o.S + o.F * !W, "Symbol", { for: function(t3) {
        return a(H, t3 += "") ? H[t3] : H[t3] = P(t3);
      }, keyFor: function(t3) {
        if (!G(t3))
          throw TypeError(t3 + " is not a symbol!");
        for (var e3 in H)
          if (H[e3] === t3)
            return e3;
      }, useSetter: function() {
        V = true;
      }, useSimple: function() {
        V = false;
      } }), o(o.S + o.F * !W, "Object", { create: function(t3, e3) {
        return e3 === void 0 ? C(t3) : Z(C(t3), e3);
      }, defineProperty: X, defineProperties: Z, getOwnPropertyDescriptor: Q, getOwnPropertyNames: J, getOwnPropertySymbols: tt });
      var rt = c(function() {
        T.f(1);
      });
      o(o.S + o.F * rt, "Object", { getOwnPropertySymbols: function(t3) {
        return T.f(x(t3));
      } }), O && o(o.S + o.F * (!W || c(function() {
        var t3 = P();
        return j([t3]) != "[null]" || j({ a: t3 }) != "{}" || j(Object(t3)) != "{}";
      })), "JSON", { stringify: function(t3) {
        for (var e3, n3, i2 = [t3], a2 = 1; arguments.length > a2; )
          i2.push(arguments[a2++]);
        if (n3 = e3 = i2[1], (y(e3) || t3 !== void 0) && !G(t3))
          return v(e3) || (e3 = function(t4, e4) {
            if (typeof n3 == "function" && (e4 = n3.call(this, t4, e4)), !G(e4))
              return e4;
          }), i2[1] = e3, j.apply(O, i2);
      } }), P.prototype[L] || n2(7728)(P.prototype, L, P.prototype.valueOf), u(P, "Symbol"), u(Math, "Math", true), u(i.JSON, "JSON", true);
    }, 8351: function(t2, e2, n2) {
      var i = n2(2985), a = n2(7643), r = n2(2110), o = n2(8693), s = n2(2811);
      i(i.S, "Object", { getOwnPropertyDescriptors: function(t3) {
        for (var e3, n3, i2 = r(t3), l = o.f, c = a(i2), d = {}, u = 0; c.length > u; )
          (n3 = l(i2, e3 = c[u++])) !== void 0 && s(d, e3, n3);
        return d;
      } });
    }, 1808: function(t2, e2, n2) {
      "use strict";
      var i = n2(9638), a = n2(4874), r = n2.g.document, o = function(t3, e3, n3, i2) {
        return t3.addEventListener(e3, n3, i2);
      }, s = function(t3, e3, n3, i2) {
        return t3.removeEventListener(e3, n3, i2);
      }, l = [];
      function c(t3, e3, n3) {
        var i2 = function(t4, e4, n4) {
          var i3, a3;
          for (i3 = 0; i3 < l.length; i3++)
            if ((a3 = l[i3]).element === t4 && a3.type === e4 && a3.fn === n4)
              return i3;
        }(t3, e3, n3);
        if (i2) {
          var a2 = l[i2].wrapper;
          return l.splice(i2, 1), a2;
        }
      }
      n2.g.addEventListener || (o = function(t3, e3, i2) {
        return t3.attachEvent("on" + e3, function(t4, e4, i3) {
          var a2 = c(t4, e4, i3) || function(t5, e5, i4) {
            return function(e6) {
              var a3 = e6 || n2.g.event;
              a3.target = a3.target || a3.srcElement, a3.preventDefault = a3.preventDefault || function() {
                a3.returnValue = false;
              }, a3.stopPropagation = a3.stopPropagation || function() {
                a3.cancelBubble = true;
              }, a3.which = a3.which || a3.keyCode, i4.call(t5, a3);
            };
          }(t4, 0, i3);
          return l.push({ wrapper: a2, element: t4, type: e4, fn: i3 }), a2;
        }(t3, e3, i2));
      }, s = function(t3, e3, n3) {
        var i2 = c(t3, e3, n3);
        if (i2)
          return t3.detachEvent("on" + e3, i2);
      }), t2.exports = { add: o, remove: s, fabricate: function(t3, e3, n3) {
        var o2 = a.indexOf(e3) === -1 ? new i(e3, { detail: n3 }) : function() {
          var t4;
          r.createEvent ? (t4 = r.createEvent("Event")).initEvent(e3, true, true) : r.createEventObject && (t4 = r.createEventObject());
          return t4;
        }();
        t3.dispatchEvent ? t3.dispatchEvent(o2) : t3.fireEvent("on" + e3, o2);
      } };
    }, 4874: function(t2, e2, n2) {
      "use strict";
      var i = [], a = "", r = /^on/;
      for (a in n2.g)
        r.test(a) && i.push(a.slice(2));
      t2.exports = i;
    }, 9638: function(t2, e2, n2) {
      var i = n2.g.CustomEvent;
      t2.exports = function() {
        try {
          var t3 = new i("cat", { detail: { foo: "bar" } });
          return t3.type === "cat" && t3.detail.foo === "bar";
        } catch (t4) {
        }
        return false;
      }() ? i : typeof document != "undefined" && typeof document.createEvent == "function" ? function(t3, e3) {
        var n3 = document.createEvent("CustomEvent");
        return e3 ? n3.initCustomEvent(t3, e3.bubbles, e3.cancelable, e3.detail) : n3.initCustomEvent(t3, false, false, void 0), n3;
      } : function(t3, e3) {
        var n3 = document.createEventObject();
        return n3.type = t3, e3 ? (n3.bubbles = Boolean(e3.bubbles), n3.cancelable = Boolean(e3.cancelable), n3.detail = e3.detail) : (n3.bubbles = false, n3.cancelable = false, n3.detail = void 0), n3;
      };
    }, 9425: function(t2) {
      "use strict";
      var e2 = {};
      function n2(t3) {
        var n3 = e2[t3];
        return n3 ? n3.lastIndex = 0 : e2[t3] = n3 = new RegExp("(?:^|\\s)" + t3 + "(?:\\s|$)", "g"), n3;
      }
      t2.exports = { add: function(t3, e3) {
        var i = t3.className;
        i.length ? n2(e3).test(i) || (t3.className += " " + e3) : t3.className = e3;
      }, rm: function(t3, e3) {
        t3.className = t3.className.replace(n2(e3), " ").trim();
      } };
    }, 7137: function(t2, e2, n2) {
      "use strict";
      var i = n2(5229), a = n2(1808), r = n2(9425), o = document, s = o.documentElement;
      function l(t3, e3, i2, r2) {
        n2.g.navigator.pointerEnabled ? a[e3](t3, { mouseup: "pointerup", mousedown: "pointerdown", mousemove: "pointermove" }[i2], r2) : n2.g.navigator.msPointerEnabled ? a[e3](t3, { mouseup: "MSPointerUp", mousedown: "MSPointerDown", mousemove: "MSPointerMove" }[i2], r2) : (a[e3](t3, { mouseup: "touchend", mousedown: "touchstart", mousemove: "touchmove" }[i2], r2), a[e3](t3, i2, r2));
      }
      function c(t3) {
        if (t3.touches !== void 0)
          return t3.touches.length;
        if (t3.which !== void 0 && t3.which !== 0)
          return t3.which;
        if (t3.buttons !== void 0)
          return t3.buttons;
        var e3 = t3.button;
        return e3 !== void 0 ? 1 & e3 ? 1 : 2 & e3 ? 3 : 4 & e3 ? 2 : 0 : void 0;
      }
      function d(t3) {
        var e3 = t3.getBoundingClientRect();
        return { left: e3.left + u("scrollLeft", "pageXOffset"), top: e3.top + u("scrollTop", "pageYOffset") };
      }
      function u(t3, e3) {
        return n2.g[e3] !== void 0 ? n2.g[e3] : s.clientHeight ? s[t3] : o.body[t3];
      }
      function h(t3, e3, n3) {
        var i2, a2 = (t3 = t3 || {}).className || "";
        return t3.className += " gu-hide", i2 = o.elementFromPoint(e3, n3), t3.className = a2, i2;
      }
      function p() {
        return false;
      }
      function f() {
        return true;
      }
      function g(t3) {
        return t3.width || t3.right - t3.left;
      }
      function m(t3) {
        return t3.height || t3.bottom - t3.top;
      }
      function v(t3) {
        return t3.parentNode === o ? null : t3.parentNode;
      }
      function b(t3) {
        return t3.tagName === "INPUT" || t3.tagName === "TEXTAREA" || t3.tagName === "SELECT" || y(t3);
      }
      function y(t3) {
        return !!t3 && (t3.contentEditable !== "false" && (t3.contentEditable === "true" || y(v(t3))));
      }
      function x(t3) {
        return t3.nextElementSibling || function() {
          var e3 = t3;
          do {
            e3 = e3.nextSibling;
          } while (e3 && e3.nodeType !== 1);
          return e3;
        }();
      }
      function _(t3, e3) {
        var n3 = function(t4) {
          return t4.targetTouches && t4.targetTouches.length ? t4.targetTouches[0] : t4.changedTouches && t4.changedTouches.length ? t4.changedTouches[0] : t4;
        }(e3), i2 = { pageX: "clientX", pageY: "clientY" };
        return t3 in i2 && !(t3 in n3) && i2[t3] in n3 && (t3 = i2[t3]), n3[t3];
      }
      t2.exports = function(t3, e3) {
        var n3, u2, y2, w, S, C, k, D, T, E, A, I = arguments.length;
        I === 1 && Array.isArray(t3) === false && (e3 = t3, t3 = []);
        var M, R = null, P = e3 || {};
        P.moves === void 0 && (P.moves = f), P.accepts === void 0 && (P.accepts = f), P.invalid === void 0 && (P.invalid = U), P.containers === void 0 && (P.containers = t3 || []), P.isContainer === void 0 && (P.isContainer = p), P.copy === void 0 && (P.copy = false), P.copySortSource === void 0 && (P.copySortSource = false), P.revertOnSpill === void 0 && (P.revertOnSpill = false), P.removeOnSpill === void 0 && (P.removeOnSpill = false), P.direction === void 0 && (P.direction = "vertical"), P.ignoreInputTextSelection === void 0 && (P.ignoreInputTextSelection = true), P.mirrorContainer === void 0 && (P.mirrorContainer = o.body);
        var O = i({ containers: P.containers, start: V, end: G, cancel: J, remove: Q, destroy: H, canMove: $, dragging: false });
        return P.removeOnSpill === true && O.on("over", at).on("out", rt), N(), O;
        function j(t4) {
          return O.containers.indexOf(t4) !== -1 || P.isContainer(t4);
        }
        function N(t4) {
          var e4 = t4 ? "remove" : "add";
          l(s, e4, "mousedown", q), l(s, e4, "mouseup", Z);
        }
        function L(t4) {
          l(s, t4 ? "remove" : "add", "mousemove", z);
        }
        function F(t4) {
          var e4 = t4 ? "remove" : "add";
          a[e4](s, "selectstart", B), a[e4](s, "click", B);
        }
        function H() {
          N(true), Z({});
        }
        function B(t4) {
          M && t4.preventDefault();
        }
        function q(t4) {
          if (C = t4.clientX, k = t4.clientY, !(c(t4) !== 1 || t4.metaKey || t4.ctrlKey)) {
            var e4 = t4.target, n4 = W(e4);
            n4 && (M = n4, L(), t4.type === "mousedown" && (b(e4) ? e4.focus() : t4.preventDefault()));
          }
        }
        function z(t4) {
          if (M)
            if (c(t4) !== 0) {
              if (!(t4.clientX !== void 0 && Math.abs(t4.clientX - C) <= (P.slideFactorX || 0) && t4.clientY !== void 0 && Math.abs(t4.clientY - k) <= (P.slideFactorY || 0))) {
                if (P.ignoreInputTextSelection) {
                  var e4 = _("clientX", t4) || 0, n4 = _("clientY", t4) || 0;
                  if (b(o.elementFromPoint(e4, n4)))
                    return;
                }
                var i2 = M;
                L(true), F(), G(), Y(i2);
                var a2 = d(y2);
                w = _("pageX", t4) - a2.left, S = _("pageY", t4) - a2.top, r.add(E || y2, "gu-transit"), ot(), it(t4);
              }
            } else
              Z({});
        }
        function W(t4) {
          if (!(O.dragging && n3 || j(t4))) {
            for (var e4 = t4; v(t4) && j(v(t4)) === false; ) {
              if (P.invalid(t4, e4))
                return;
              if (!(t4 = v(t4)))
                return;
            }
            var i2 = v(t4);
            if (i2) {
              if (!P.invalid(t4, e4)) {
                if (P.moves(t4, i2, e4, x(t4)))
                  return { item: t4, source: i2 };
              }
            }
          }
        }
        function $(t4) {
          return !!W(t4);
        }
        function V(t4) {
          var e4 = W(t4);
          e4 && Y(e4);
        }
        function Y(t4) {
          dt(t4.item, t4.source) && (E = t4.item.cloneNode(true), O.emit("cloned", E, t4.item, "copy")), u2 = t4.source, y2 = t4.item, D = T = x(t4.item), O.dragging = true, O.emit("drag", y2, u2);
        }
        function U() {
          return false;
        }
        function G() {
          if (O.dragging) {
            var t4 = E || y2;
            K(t4, v(t4));
          }
        }
        function X() {
          M = false, L(true), F(true);
        }
        function Z(t4) {
          if (X(), O.dragging) {
            var e4 = E || y2, i2 = _("clientX", t4) || 0, a2 = _("clientY", t4) || 0, r2 = nt(h(n3, i2, a2), i2, a2);
            r2 && (E && P.copySortSource || !E || r2 !== u2) ? K(e4, r2) : P.removeOnSpill ? Q() : J();
          }
        }
        function K(t4, e4) {
          var n4 = v(t4);
          E && P.copySortSource && e4 === u2 && n4.removeChild(y2), et(e4) ? O.emit("cancel", t4, u2, u2) : O.emit("drop", t4, e4, u2, T), tt();
        }
        function Q() {
          if (O.dragging) {
            var t4 = E || y2, e4 = v(t4);
            e4 && e4.removeChild(t4), O.emit(E ? "cancel" : "remove", t4, e4, u2), tt();
          }
        }
        function J(t4) {
          if (O.dragging) {
            var e4 = arguments.length > 0 ? t4 : P.revertOnSpill, n4 = E || y2, i2 = v(n4), a2 = et(i2);
            a2 === false && e4 && (E ? i2 && i2.removeChild(E) : u2.insertBefore(n4, D)), a2 || e4 ? O.emit("cancel", n4, u2, u2) : O.emit("drop", n4, i2, u2, T), tt();
          }
        }
        function tt() {
          var t4 = E || y2;
          X(), st(), t4 && r.rm(t4, "gu-transit"), A && clearTimeout(A), O.dragging = false, R && O.emit("out", t4, R, u2), O.emit("dragend", t4), u2 = y2 = E = D = T = A = R = null;
        }
        function et(t4, e4) {
          var i2;
          return i2 = e4 !== void 0 ? e4 : n3 ? T : x(E || y2), t4 === u2 && i2 === D;
        }
        function nt(t4, e4, n4) {
          for (var i2 = t4; i2 && !a2(); )
            i2 = v(i2);
          return i2;
          function a2() {
            if (j(i2) === false)
              return false;
            var a3 = lt(i2, t4), r2 = ct(i2, a3, e4, n4);
            return !!et(i2, r2) || P.accepts(y2, i2, u2, r2);
          }
        }
        function it(t4) {
          if (n3) {
            t4.preventDefault();
            var e4 = _("clientX", t4) || 0, i2 = _("clientY", t4) || 0, a2 = e4 - w, r2 = i2 - S;
            n3.style.left = a2 + "px", n3.style.top = r2 + "px";
            var o2 = E || y2, s2 = h(n3, e4, i2), l2 = nt(s2, e4, i2), c2 = l2 !== null && l2 !== R;
            (c2 || l2 === null) && (R && g2("out"), R = l2, c2 && g2("over"));
            var d2 = v(o2);
            if (l2 !== u2 || !E || P.copySortSource) {
              var p2, f2 = lt(l2, s2);
              if (f2 !== null)
                p2 = ct(l2, f2, e4, i2);
              else {
                if (P.revertOnSpill !== true || E)
                  return void (E && d2 && d2.removeChild(o2));
                p2 = D, l2 = u2;
              }
              (p2 === null && c2 || p2 !== o2 && p2 !== x(o2)) && (T = p2, l2.insertBefore(o2, p2), O.emit("shadow", o2, l2, u2));
            } else
              d2 && d2.removeChild(o2);
          }
          function g2(t5) {
            O.emit(t5, o2, R, u2);
          }
        }
        function at(t4) {
          r.rm(t4, "gu-hide");
        }
        function rt(t4) {
          O.dragging && r.add(t4, "gu-hide");
        }
        function ot() {
          if (!n3) {
            var t4 = y2.getBoundingClientRect();
            (n3 = y2.cloneNode(true)).style.width = g(t4) + "px", n3.style.height = m(t4) + "px", r.rm(n3, "gu-transit"), r.add(n3, "gu-mirror"), P.mirrorContainer.appendChild(n3), l(s, "add", "mousemove", it), r.add(P.mirrorContainer, "gu-unselectable"), O.emit("cloned", n3, y2, "mirror");
          }
        }
        function st() {
          n3 && (r.rm(P.mirrorContainer, "gu-unselectable"), l(s, "remove", "mousemove", it), v(n3).removeChild(n3), n3 = null);
        }
        function lt(t4, e4) {
          for (var n4 = e4; n4 !== t4 && v(n4) !== t4; )
            n4 = v(n4);
          return n4 === s ? null : n4;
        }
        function ct(t4, e4, n4, i2) {
          var a2 = P.direction === "horizontal", r2 = e4 !== t4 ? function() {
            var t5 = e4.getBoundingClientRect();
            if (a2)
              return o2(n4 > t5.left + g(t5) / 2);
            return o2(i2 > t5.top + m(t5) / 2);
          }() : function() {
            var e5, r3, o3, s2 = t4.children.length;
            for (e5 = 0; e5 < s2; e5++) {
              if (r3 = t4.children[e5], o3 = r3.getBoundingClientRect(), a2 && o3.left + o3.width / 2 > n4)
                return r3;
              if (!a2 && o3.top + o3.height / 2 > i2)
                return r3;
            }
            return null;
          }();
          return r2;
          function o2(t5) {
            return t5 ? x(e4) : e4;
          }
        }
        function dt(t4, e4) {
          return typeof P.copy == "boolean" ? P.copy : P.copy(t4, e4);
        }
      };
    }, 8942: function(t2, e2, n2) {
      var i = n2(9755), a = n2(6193);
      a.$ === void 0 && (a.$ = i), a.jQuery === void 0 && (a.jQuery = i), t2.exports = i;
    }, 6193: function(t2, e2, n2) {
      "use strict";
      t2.exports = function() {
        if (typeof globalThis == "object")
          return globalThis;
        var t3;
        try {
          t3 = this || new Function("return this")();
        } catch (t4) {
          if (typeof window == "object")
            return window;
          if (typeof self == "object")
            return self;
          if (n2.g !== void 0)
            return n2.g;
        }
        return t3;
      }();
    }, 8508: function(t2) {
      var e2;
      typeof self != "undefined" && self, e2 = function() {
        return function(t3) {
          var e3 = {};
          function n2(i) {
            if (e3[i])
              return e3[i].exports;
            var a = e3[i] = { i, l: false, exports: {} };
            return t3[i].call(a.exports, a, a.exports, n2), a.l = true, a.exports;
          }
          return n2.m = t3, n2.c = e3, n2.d = function(t4, e4, i) {
            n2.o(t4, e4) || Object.defineProperty(t4, e4, { configurable: false, enumerable: true, get: i });
          }, n2.r = function(t4) {
            Object.defineProperty(t4, "__esModule", { value: true });
          }, n2.n = function(t4) {
            var e4 = t4 && t4.__esModule ? function() {
              return t4.default;
            } : function() {
              return t4;
            };
            return n2.d(e4, "a", e4), e4;
          }, n2.o = function(t4, e4) {
            return Object.prototype.hasOwnProperty.call(t4, e4);
          }, n2.p = "", n2(n2.s = 0);
        }({ "./dist/icons.json": function(t3) {
          t3.exports = { activity: '<polyline points="22 12 18 12 15 21 9 3 6 12 2 12"></polyline>', airplay: '<path d="M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1"></path><polygon points="12 15 17 21 7 21 12 15"></polygon>', "alert-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line>', "alert-octagon": '<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="12" y1="8" x2="12" y2="12"></line><line x1="12" y1="16" x2="12.01" y2="16"></line>', "alert-triangle": '<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path><line x1="12" y1="9" x2="12" y2="13"></line><line x1="12" y1="17" x2="12.01" y2="17"></line>', "align-center": '<line x1="18" y1="10" x2="6" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="18" y1="18" x2="6" y2="18"></line>', "align-justify": '<line x1="21" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="3" y2="18"></line>', "align-left": '<line x1="17" y1="10" x2="3" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="17" y1="18" x2="3" y2="18"></line>', "align-right": '<line x1="21" y1="10" x2="7" y2="10"></line><line x1="21" y1="6" x2="3" y2="6"></line><line x1="21" y1="14" x2="3" y2="14"></line><line x1="21" y1="18" x2="7" y2="18"></line>', anchor: '<circle cx="12" cy="5" r="3"></circle><line x1="12" y1="22" x2="12" y2="8"></line><path d="M5 12H2a10 10 0 0 0 20 0h-3"></path>', aperture: '<circle cx="12" cy="12" r="10"></circle><line x1="14.31" y1="8" x2="20.05" y2="17.94"></line><line x1="9.69" y1="8" x2="21.17" y2="8"></line><line x1="7.38" y1="12" x2="13.12" y2="2.06"></line><line x1="9.69" y1="16" x2="3.95" y2="6.06"></line><line x1="14.31" y1="16" x2="2.83" y2="16"></line><line x1="16.62" y1="12" x2="10.88" y2="21.94"></line>', archive: '<polyline points="21 8 21 21 3 21 3 8"></polyline><rect x="1" y="3" width="22" height="5"></rect><line x1="10" y1="12" x2="14" y2="12"></line>', "arrow-down-circle": '<circle cx="12" cy="12" r="10"></circle><polyline points="8 12 12 16 16 12"></polyline><line x1="12" y1="8" x2="12" y2="16"></line>', "arrow-down-left": '<line x1="17" y1="7" x2="7" y2="17"></line><polyline points="17 17 7 17 7 7"></polyline>', "arrow-down-right": '<line x1="7" y1="7" x2="17" y2="17"></line><polyline points="17 7 17 17 7 17"></polyline>', "arrow-down": '<line x1="12" y1="5" x2="12" y2="19"></line><polyline points="19 12 12 19 5 12"></polyline>', "arrow-left-circle": '<circle cx="12" cy="12" r="10"></circle><polyline points="12 8 8 12 12 16"></polyline><line x1="16" y1="12" x2="8" y2="12"></line>', "arrow-left": '<line x1="19" y1="12" x2="5" y2="12"></line><polyline points="12 19 5 12 12 5"></polyline>', "arrow-right-circle": '<circle cx="12" cy="12" r="10"></circle><polyline points="12 16 16 12 12 8"></polyline><line x1="8" y1="12" x2="16" y2="12"></line>', "arrow-right": '<line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline>', "arrow-up-circle": '<circle cx="12" cy="12" r="10"></circle><polyline points="16 12 12 8 8 12"></polyline><line x1="12" y1="16" x2="12" y2="8"></line>', "arrow-up-left": '<line x1="17" y1="17" x2="7" y2="7"></line><polyline points="7 17 7 7 17 7"></polyline>', "arrow-up-right": '<line x1="7" y1="17" x2="17" y2="7"></line><polyline points="7 7 17 7 17 17"></polyline>', "arrow-up": '<line x1="12" y1="19" x2="12" y2="5"></line><polyline points="5 12 12 5 19 12"></polyline>', "at-sign": '<circle cx="12" cy="12" r="4"></circle><path d="M16 8v5a3 3 0 0 0 6 0v-1a10 10 0 1 0-3.92 7.94"></path>', award: '<circle cx="12" cy="8" r="7"></circle><polyline points="8.21 13.89 7 23 12 20 17 23 15.79 13.88"></polyline>', "bar-chart-2": '<line x1="18" y1="20" x2="18" y2="10"></line><line x1="12" y1="20" x2="12" y2="4"></line><line x1="6" y1="20" x2="6" y2="14"></line>', "bar-chart": '<line x1="12" y1="20" x2="12" y2="10"></line><line x1="18" y1="20" x2="18" y2="4"></line><line x1="6" y1="20" x2="6" y2="16"></line>', "battery-charging": '<path d="M5 18H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3.19M15 6h2a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-3.19"></path><line x1="23" y1="13" x2="23" y2="11"></line><polyline points="11 6 7 12 13 12 9 18"></polyline>', battery: '<rect x="1" y="6" width="18" height="12" rx="2" ry="2"></rect><line x1="23" y1="13" x2="23" y2="11"></line>', "bell-off": '<path d="M13.73 21a2 2 0 0 1-3.46 0"></path><path d="M18.63 13A17.89 17.89 0 0 1 18 8"></path><path d="M6.26 6.26A5.86 5.86 0 0 0 6 8c0 7-3 9-3 9h14"></path><path d="M18 8a6 6 0 0 0-9.33-5"></path><line x1="1" y1="1" x2="23" y2="23"></line>', bell: '<path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path>', bluetooth: '<polyline points="6.5 6.5 17.5 17.5 12 23 12 1 17.5 6.5 6.5 17.5"></polyline>', bold: '<path d="M6 4h8a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path><path d="M6 12h9a4 4 0 0 1 4 4 4 4 0 0 1-4 4H6z"></path>', "book-open": '<path d="M2 3h6a4 4 0 0 1 4 4v14a3 3 0 0 0-3-3H2z"></path><path d="M22 3h-6a4 4 0 0 0-4 4v14a3 3 0 0 1 3-3h7z"></path>', book: '<path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"></path><path d="M6.5 2H20v20H6.5A2.5 2.5 0 0 1 4 19.5v-15A2.5 2.5 0 0 1 6.5 2z"></path>', bookmark: '<path d="M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z"></path>', box: '<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>', briefcase: '<rect x="2" y="7" width="20" height="14" rx="2" ry="2"></rect><path d="M16 21V5a2 2 0 0 0-2-2h-4a2 2 0 0 0-2 2v16"></path>', calendar: '<rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect><line x1="16" y1="2" x2="16" y2="6"></line><line x1="8" y1="2" x2="8" y2="6"></line><line x1="3" y1="10" x2="21" y2="10"></line>', "camera-off": '<line x1="1" y1="1" x2="23" y2="23"></line><path d="M21 21H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h3m3-3h6l2 3h4a2 2 0 0 1 2 2v9.34m-7.72-2.06a4 4 0 1 1-5.56-5.56"></path>', camera: '<path d="M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z"></path><circle cx="12" cy="13" r="4"></circle>', cast: '<path d="M2 16.1A5 5 0 0 1 5.9 20M2 12.05A9 9 0 0 1 9.95 20M2 8V6a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2h-6"></path><line x1="2" y1="20" x2="2.01" y2="20"></line>', "check-circle": '<path d="M22 11.08V12a10 10 0 1 1-5.93-9.14"></path><polyline points="22 4 12 14.01 9 11.01"></polyline>', "check-square": '<polyline points="9 11 12 14 22 4"></polyline><path d="M21 12v7a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11"></path>', check: '<polyline points="20 6 9 17 4 12"></polyline>', "chevron-down": '<polyline points="6 9 12 15 18 9"></polyline>', "chevron-left": '<polyline points="15 18 9 12 15 6"></polyline>', "chevron-right": '<polyline points="9 18 15 12 9 6"></polyline>', "chevron-up": '<polyline points="18 15 12 9 6 15"></polyline>', "chevrons-down": '<polyline points="7 13 12 18 17 13"></polyline><polyline points="7 6 12 11 17 6"></polyline>', "chevrons-left": '<polyline points="11 17 6 12 11 7"></polyline><polyline points="18 17 13 12 18 7"></polyline>', "chevrons-right": '<polyline points="13 17 18 12 13 7"></polyline><polyline points="6 17 11 12 6 7"></polyline>', "chevrons-up": '<polyline points="17 11 12 6 7 11"></polyline><polyline points="17 18 12 13 7 18"></polyline>', chrome: '<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="21.17" y1="8" x2="12" y2="8"></line><line x1="3.95" y1="6.06" x2="8.54" y2="14"></line><line x1="10.88" y1="21.94" x2="15.46" y2="14"></line>', circle: '<circle cx="12" cy="12" r="10"></circle>', clipboard: '<path d="M16 4h2a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H6a2 2 0 0 1-2-2V6a2 2 0 0 1 2-2h2"></path><rect x="8" y="2" width="8" height="4" rx="1" ry="1"></rect>', clock: '<circle cx="12" cy="12" r="10"></circle><polyline points="12 6 12 12 16 14"></polyline>', "cloud-drizzle": '<line x1="8" y1="19" x2="8" y2="21"></line><line x1="8" y1="13" x2="8" y2="15"></line><line x1="16" y1="19" x2="16" y2="21"></line><line x1="16" y1="13" x2="16" y2="15"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="12" y1="15" x2="12" y2="17"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>', "cloud-lightning": '<path d="M19 16.9A5 5 0 0 0 18 7h-1.26a8 8 0 1 0-11.62 9"></path><polyline points="13 11 9 17 15 17 11 23"></polyline>', "cloud-off": '<path d="M22.61 16.95A5 5 0 0 0 18 10h-1.26a8 8 0 0 0-7.05-6M5 5a8 8 0 0 0 4 15h9a5 5 0 0 0 1.7-.3"></path><line x1="1" y1="1" x2="23" y2="23"></line>', "cloud-rain": '<line x1="16" y1="13" x2="16" y2="21"></line><line x1="8" y1="13" x2="8" y2="21"></line><line x1="12" y1="15" x2="12" y2="23"></line><path d="M20 16.58A5 5 0 0 0 18 7h-1.26A8 8 0 1 0 4 15.25"></path>', "cloud-snow": '<path d="M20 17.58A5 5 0 0 0 18 8h-1.26A8 8 0 1 0 4 16.25"></path><line x1="8" y1="16" x2="8.01" y2="16"></line><line x1="8" y1="20" x2="8.01" y2="20"></line><line x1="12" y1="18" x2="12.01" y2="18"></line><line x1="12" y1="22" x2="12.01" y2="22"></line><line x1="16" y1="16" x2="16.01" y2="16"></line><line x1="16" y1="20" x2="16.01" y2="20"></line>', cloud: '<path d="M18 10h-1.26A8 8 0 1 0 9 20h9a5 5 0 0 0 0-10z"></path>', code: '<polyline points="16 18 22 12 16 6"></polyline><polyline points="8 6 2 12 8 18"></polyline>', codepen: '<polygon points="12 2 22 8.5 22 15.5 12 22 2 15.5 2 8.5 12 2"></polygon><line x1="12" y1="22" x2="12" y2="15.5"></line><polyline points="22 8.5 12 15.5 2 8.5"></polyline><polyline points="2 15.5 12 8.5 22 15.5"></polyline><line x1="12" y1="2" x2="12" y2="8.5"></line>', codesandbox: '<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="7.5 4.21 12 6.81 16.5 4.21"></polyline><polyline points="7.5 19.79 7.5 14.6 3 12"></polyline><polyline points="21 12 16.5 14.6 16.5 19.79"></polyline><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>', coffee: '<path d="M18 8h1a4 4 0 0 1 0 8h-1"></path><path d="M2 8h16v9a4 4 0 0 1-4 4H6a4 4 0 0 1-4-4V8z"></path><line x1="6" y1="1" x2="6" y2="4"></line><line x1="10" y1="1" x2="10" y2="4"></line><line x1="14" y1="1" x2="14" y2="4"></line>', columns: '<path d="M12 3h7a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-7m0-18H5a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h7m0-18v18"></path>', command: '<path d="M18 3a3 3 0 0 0-3 3v12a3 3 0 0 0 3 3 3 3 0 0 0 3-3 3 3 0 0 0-3-3H6a3 3 0 0 0-3 3 3 3 0 0 0 3 3 3 3 0 0 0 3-3V6a3 3 0 0 0-3-3 3 3 0 0 0-3 3 3 3 0 0 0 3 3h12a3 3 0 0 0 3-3 3 3 0 0 0-3-3z"></path>', compass: '<circle cx="12" cy="12" r="10"></circle><polygon points="16.24 7.76 14.12 14.12 7.76 16.24 9.88 9.88 16.24 7.76"></polygon>', copy: '<rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>', "corner-down-left": '<polyline points="9 10 4 15 9 20"></polyline><path d="M20 4v7a4 4 0 0 1-4 4H4"></path>', "corner-down-right": '<polyline points="15 10 20 15 15 20"></polyline><path d="M4 4v7a4 4 0 0 0 4 4h12"></path>', "corner-left-down": '<polyline points="14 15 9 20 4 15"></polyline><path d="M20 4h-7a4 4 0 0 0-4 4v12"></path>', "corner-left-up": '<polyline points="14 9 9 4 4 9"></polyline><path d="M20 20h-7a4 4 0 0 1-4-4V4"></path>', "corner-right-down": '<polyline points="10 15 15 20 20 15"></polyline><path d="M4 4h7a4 4 0 0 1 4 4v12"></path>', "corner-right-up": '<polyline points="10 9 15 4 20 9"></polyline><path d="M4 20h7a4 4 0 0 0 4-4V4"></path>', "corner-up-left": '<polyline points="9 14 4 9 9 4"></polyline><path d="M20 20v-7a4 4 0 0 0-4-4H4"></path>', "corner-up-right": '<polyline points="15 14 20 9 15 4"></polyline><path d="M4 20v-7a4 4 0 0 1 4-4h12"></path>', cpu: '<rect x="4" y="4" width="16" height="16" rx="2" ry="2"></rect><rect x="9" y="9" width="6" height="6"></rect><line x1="9" y1="1" x2="9" y2="4"></line><line x1="15" y1="1" x2="15" y2="4"></line><line x1="9" y1="20" x2="9" y2="23"></line><line x1="15" y1="20" x2="15" y2="23"></line><line x1="20" y1="9" x2="23" y2="9"></line><line x1="20" y1="14" x2="23" y2="14"></line><line x1="1" y1="9" x2="4" y2="9"></line><line x1="1" y1="14" x2="4" y2="14"></line>', "credit-card": '<rect x="1" y="4" width="22" height="16" rx="2" ry="2"></rect><line x1="1" y1="10" x2="23" y2="10"></line>', crop: '<path d="M6.13 1L6 16a2 2 0 0 0 2 2h15"></path><path d="M1 6.13L16 6a2 2 0 0 1 2 2v15"></path>', crosshair: '<circle cx="12" cy="12" r="10"></circle><line x1="22" y1="12" x2="18" y2="12"></line><line x1="6" y1="12" x2="2" y2="12"></line><line x1="12" y1="6" x2="12" y2="2"></line><line x1="12" y1="22" x2="12" y2="18"></line>', database: '<ellipse cx="12" cy="5" rx="9" ry="3"></ellipse><path d="M21 12c0 1.66-4 3-9 3s-9-1.34-9-3"></path><path d="M3 5v14c0 1.66 4 3 9 3s9-1.34 9-3V5"></path>', delete: '<path d="M21 4H8l-7 8 7 8h13a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2z"></path><line x1="18" y1="9" x2="12" y2="15"></line><line x1="12" y1="9" x2="18" y2="15"></line>', disc: '<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="3"></circle>', "divide-circle": '<line x1="8" y1="12" x2="16" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line><line x1="12" y1="8" x2="12" y2="8"></line><circle cx="12" cy="12" r="10"></circle>', "divide-square": '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line><line x1="12" y1="16" x2="12" y2="16"></line><line x1="12" y1="8" x2="12" y2="8"></line>', divide: '<circle cx="12" cy="6" r="2"></circle><line x1="5" y1="12" x2="19" y2="12"></line><circle cx="12" cy="18" r="2"></circle>', "dollar-sign": '<line x1="12" y1="1" x2="12" y2="23"></line><path d="M17 5H9.5a3.5 3.5 0 0 0 0 7h5a3.5 3.5 0 0 1 0 7H6"></path>', "download-cloud": '<polyline points="8 17 12 21 16 17"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.88 18.09A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.29"></path>', download: '<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line>', dribbble: '<circle cx="12" cy="12" r="10"></circle><path d="M8.56 2.75c4.37 6.03 6.02 9.42 8.03 17.72m2.54-15.38c-3.72 4.35-8.94 5.66-16.88 5.85m19.5 1.9c-3.5-.93-6.63-.82-8.94 0-2.58.92-5.01 2.86-7.44 6.32"></path>', droplet: '<path d="M12 2.69l5.66 5.66a8 8 0 1 1-11.31 0z"></path>', "edit-2": '<path d="M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z"></path>', "edit-3": '<path d="M12 20h9"></path><path d="M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z"></path>', edit: '<path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>', "external-link": '<path d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"></path><polyline points="15 3 21 3 21 9"></polyline><line x1="10" y1="14" x2="21" y2="3"></line>', "eye-off": '<path d="M17.94 17.94A10.07 10.07 0 0 1 12 20c-7 0-11-8-11-8a18.45 18.45 0 0 1 5.06-5.94M9.9 4.24A9.12 9.12 0 0 1 12 4c7 0 11 8 11 8a18.5 18.5 0 0 1-2.16 3.19m-6.72-1.07a3 3 0 1 1-4.24-4.24"></path><line x1="1" y1="1" x2="23" y2="23"></line>', eye: '<path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle>', facebook: '<path d="M18 2h-3a5 5 0 0 0-5 5v3H7v4h3v8h4v-8h3l1-4h-4V7a1 1 0 0 1 1-1h3z"></path>', "fast-forward": '<polygon points="13 19 22 12 13 5 13 19"></polygon><polygon points="2 19 11 12 2 5 2 19"></polygon>', feather: '<path d="M20.24 12.24a6 6 0 0 0-8.49-8.49L5 10.5V19h8.5z"></path><line x1="16" y1="8" x2="2" y2="22"></line><line x1="17.5" y1="15" x2="9" y2="15"></line>', figma: '<path d="M5 5.5A3.5 3.5 0 0 1 8.5 2H12v7H8.5A3.5 3.5 0 0 1 5 5.5z"></path><path d="M12 2h3.5a3.5 3.5 0 1 1 0 7H12V2z"></path><path d="M12 12.5a3.5 3.5 0 1 1 7 0 3.5 3.5 0 1 1-7 0z"></path><path d="M5 19.5A3.5 3.5 0 0 1 8.5 16H12v3.5a3.5 3.5 0 1 1-7 0z"></path><path d="M5 12.5A3.5 3.5 0 0 1 8.5 9H12v7H8.5A3.5 3.5 0 0 1 5 12.5z"></path>', "file-minus": '<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="9" y1="15" x2="15" y2="15"></line>', "file-plus": '<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="12" y1="18" x2="12" y2="12"></line><line x1="9" y1="15" x2="15" y2="15"></line>', "file-text": '<path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z"></path><polyline points="14 2 14 8 20 8"></polyline><line x1="16" y1="13" x2="8" y2="13"></line><line x1="16" y1="17" x2="8" y2="17"></line><polyline points="10 9 9 9 8 9"></polyline>', file: '<path d="M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z"></path><polyline points="13 2 13 9 20 9"></polyline>', film: '<rect x="2" y="2" width="20" height="20" rx="2.18" ry="2.18"></rect><line x1="7" y1="2" x2="7" y2="22"></line><line x1="17" y1="2" x2="17" y2="22"></line><line x1="2" y1="12" x2="22" y2="12"></line><line x1="2" y1="7" x2="7" y2="7"></line><line x1="2" y1="17" x2="7" y2="17"></line><line x1="17" y1="17" x2="22" y2="17"></line><line x1="17" y1="7" x2="22" y2="7"></line>', filter: '<polygon points="22 3 2 3 10 12.46 10 19 14 21 14 12.46 22 3"></polygon>', flag: '<path d="M4 15s1-1 4-1 5 2 8 2 4-1 4-1V3s-1 1-4 1-5-2-8-2-4 1-4 1z"></path><line x1="4" y1="22" x2="4" y2="15"></line>', "folder-minus": '<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="9" y1="14" x2="15" y2="14"></line>', "folder-plus": '<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path><line x1="12" y1="11" x2="12" y2="17"></line><line x1="9" y1="14" x2="15" y2="14"></line>', folder: '<path d="M22 19a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h5l2 3h9a2 2 0 0 1 2 2z"></path>', framer: '<path d="M5 16V9h14V2H5l14 14h-7m-7 0l7 7v-7m-7 0h7"></path>', frown: '<circle cx="12" cy="12" r="10"></circle><path d="M16 16s-1.5-2-4-2-4 2-4 2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>', gift: '<polyline points="20 12 20 22 4 22 4 12"></polyline><rect x="2" y="7" width="20" height="5"></rect><line x1="12" y1="22" x2="12" y2="7"></line><path d="M12 7H7.5a2.5 2.5 0 0 1 0-5C11 2 12 7 12 7z"></path><path d="M12 7h4.5a2.5 2.5 0 0 0 0-5C13 2 12 7 12 7z"></path>', "git-branch": '<line x1="6" y1="3" x2="6" y2="15"></line><circle cx="18" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><path d="M18 9a9 9 0 0 1-9 9"></path>', "git-commit": '<circle cx="12" cy="12" r="4"></circle><line x1="1.05" y1="12" x2="7" y2="12"></line><line x1="17.01" y1="12" x2="22.96" y2="12"></line>', "git-merge": '<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M6 21V9a9 9 0 0 0 9 9"></path>', "git-pull-request": '<circle cx="18" cy="18" r="3"></circle><circle cx="6" cy="6" r="3"></circle><path d="M13 6h3a2 2 0 0 1 2 2v7"></path><line x1="6" y1="9" x2="6" y2="21"></line>', github: '<path d="M9 19c-5 1.5-5-2.5-7-3m14 6v-3.87a3.37 3.37 0 0 0-.94-2.61c3.14-.35 6.44-1.54 6.44-7A5.44 5.44 0 0 0 20 4.77 5.07 5.07 0 0 0 19.91 1S18.73.65 16 2.48a13.38 13.38 0 0 0-7 0C6.27.65 5.09 1 5.09 1A5.07 5.07 0 0 0 5 4.77a5.44 5.44 0 0 0-1.5 3.78c0 5.42 3.3 6.61 6.44 7A3.37 3.37 0 0 0 9 18.13V22"></path>', gitlab: '<path d="M22.65 14.39L12 22.13 1.35 14.39a.84.84 0 0 1-.3-.94l1.22-3.78 2.44-7.51A.42.42 0 0 1 4.82 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.49h8.1l2.44-7.51A.42.42 0 0 1 18.6 2a.43.43 0 0 1 .58 0 .42.42 0 0 1 .11.18l2.44 7.51L23 13.45a.84.84 0 0 1-.35.94z"></path>', globe: '<circle cx="12" cy="12" r="10"></circle><line x1="2" y1="12" x2="22" y2="12"></line><path d="M12 2a15.3 15.3 0 0 1 4 10 15.3 15.3 0 0 1-4 10 15.3 15.3 0 0 1-4-10 15.3 15.3 0 0 1 4-10z"></path>', grid: '<rect x="3" y="3" width="7" height="7"></rect><rect x="14" y="3" width="7" height="7"></rect><rect x="14" y="14" width="7" height="7"></rect><rect x="3" y="14" width="7" height="7"></rect>', "hard-drive": '<line x1="22" y1="12" x2="2" y2="12"></line><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path><line x1="6" y1="16" x2="6.01" y2="16"></line><line x1="10" y1="16" x2="10.01" y2="16"></line>', hash: '<line x1="4" y1="9" x2="20" y2="9"></line><line x1="4" y1="15" x2="20" y2="15"></line><line x1="10" y1="3" x2="8" y2="21"></line><line x1="16" y1="3" x2="14" y2="21"></line>', headphones: '<path d="M3 18v-6a9 9 0 0 1 18 0v6"></path><path d="M21 19a2 2 0 0 1-2 2h-1a2 2 0 0 1-2-2v-3a2 2 0 0 1 2-2h3zM3 19a2 2 0 0 0 2 2h1a2 2 0 0 0 2-2v-3a2 2 0 0 0-2-2H3z"></path>', heart: '<path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path>', "help-circle": '<circle cx="12" cy="12" r="10"></circle><path d="M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3"></path><line x1="12" y1="17" x2="12.01" y2="17"></line>', hexagon: '<path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path>', home: '<path d="M3 9l9-7 9 7v11a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2z"></path><polyline points="9 22 9 12 15 12 15 22"></polyline>', image: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><circle cx="8.5" cy="8.5" r="1.5"></circle><polyline points="21 15 16 10 5 21"></polyline>', inbox: '<polyline points="22 12 16 12 14 15 10 15 8 12 2 12"></polyline><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path>', info: '<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line>', instagram: '<rect x="2" y="2" width="20" height="20" rx="5" ry="5"></rect><path d="M16 11.37A4 4 0 1 1 12.63 8 4 4 0 0 1 16 11.37z"></path><line x1="17.5" y1="6.5" x2="17.51" y2="6.5"></line>', italic: '<line x1="19" y1="4" x2="10" y2="4"></line><line x1="14" y1="20" x2="5" y2="20"></line><line x1="15" y1="4" x2="9" y2="20"></line>', key: '<path d="M21 2l-2 2m-7.61 7.61a5.5 5.5 0 1 1-7.778 7.778 5.5 5.5 0 0 1 7.777-7.777zm0 0L15.5 7.5m0 0l3 3L22 7l-3-3m-3.5 3.5L19 4"></path>', layers: '<polygon points="12 2 2 7 12 12 22 7 12 2"></polygon><polyline points="2 17 12 22 22 17"></polyline><polyline points="2 12 12 17 22 12"></polyline>', layout: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="3" y1="9" x2="21" y2="9"></line><line x1="9" y1="21" x2="9" y2="9"></line>', "life-buoy": '<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="4"></circle><line x1="4.93" y1="4.93" x2="9.17" y2="9.17"></line><line x1="14.83" y1="14.83" x2="19.07" y2="19.07"></line><line x1="14.83" y1="9.17" x2="19.07" y2="4.93"></line><line x1="14.83" y1="9.17" x2="18.36" y2="5.64"></line><line x1="4.93" y1="19.07" x2="9.17" y2="14.83"></line>', "link-2": '<path d="M15 7h3a5 5 0 0 1 5 5 5 5 0 0 1-5 5h-3m-6 0H6a5 5 0 0 1-5-5 5 5 0 0 1 5-5h3"></path><line x1="8" y1="12" x2="16" y2="12"></line>', link: '<path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path>', linkedin: '<path d="M16 8a6 6 0 0 1 6 6v7h-4v-7a2 2 0 0 0-2-2 2 2 0 0 0-2 2v7h-4v-7a6 6 0 0 1 6-6z"></path><rect x="2" y="9" width="4" height="12"></rect><circle cx="4" cy="4" r="2"></circle>', list: '<line x1="8" y1="6" x2="21" y2="6"></line><line x1="8" y1="12" x2="21" y2="12"></line><line x1="8" y1="18" x2="21" y2="18"></line><line x1="3" y1="6" x2="3.01" y2="6"></line><line x1="3" y1="12" x2="3.01" y2="12"></line><line x1="3" y1="18" x2="3.01" y2="18"></line>', loader: '<line x1="12" y1="2" x2="12" y2="6"></line><line x1="12" y1="18" x2="12" y2="22"></line><line x1="4.93" y1="4.93" x2="7.76" y2="7.76"></line><line x1="16.24" y1="16.24" x2="19.07" y2="19.07"></line><line x1="2" y1="12" x2="6" y2="12"></line><line x1="18" y1="12" x2="22" y2="12"></line><line x1="4.93" y1="19.07" x2="7.76" y2="16.24"></line><line x1="16.24" y1="7.76" x2="19.07" y2="4.93"></line>', lock: '<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path>', "log-in": '<path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4"></path><polyline points="10 17 15 12 10 7"></polyline><line x1="15" y1="12" x2="3" y2="12"></line>', "log-out": '<path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line>', mail: '<path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z"></path><polyline points="22,6 12,13 2,6"></polyline>', "map-pin": '<path d="M21 10c0 7-9 13-9 13s-9-6-9-13a9 9 0 0 1 18 0z"></path><circle cx="12" cy="10" r="3"></circle>', map: '<polygon points="1 6 1 22 8 18 16 22 23 18 23 2 16 6 8 2 1 6"></polygon><line x1="8" y1="2" x2="8" y2="18"></line><line x1="16" y1="6" x2="16" y2="22"></line>', "maximize-2": '<polyline points="15 3 21 3 21 9"></polyline><polyline points="9 21 3 21 3 15"></polyline><line x1="21" y1="3" x2="14" y2="10"></line><line x1="3" y1="21" x2="10" y2="14"></line>', maximize: '<path d="M8 3H5a2 2 0 0 0-2 2v3m18 0V5a2 2 0 0 0-2-2h-3m0 18h3a2 2 0 0 0 2-2v-3M3 16v3a2 2 0 0 0 2 2h3"></path>', meh: '<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="15" x2="16" y2="15"></line><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>', menu: '<line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line>', "message-circle": '<path d="M21 11.5a8.38 8.38 0 0 1-.9 3.8 8.5 8.5 0 0 1-7.6 4.7 8.38 8.38 0 0 1-3.8-.9L3 21l1.9-5.7a8.38 8.38 0 0 1-.9-3.8 8.5 8.5 0 0 1 4.7-7.6 8.38 8.38 0 0 1 3.8-.9h.5a8.48 8.48 0 0 1 8 8v.5z"></path>', "message-square": '<path d="M21 15a2 2 0 0 1-2 2H7l-4 4V5a2 2 0 0 1 2-2h14a2 2 0 0 1 2 2z"></path>', "mic-off": '<line x1="1" y1="1" x2="23" y2="23"></line><path d="M9 9v3a3 3 0 0 0 5.12 2.12M15 9.34V4a3 3 0 0 0-5.94-.6"></path><path d="M17 16.95A7 7 0 0 1 5 12v-2m14 0v2a7 7 0 0 1-.11 1.23"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>', mic: '<path d="M12 1a3 3 0 0 0-3 3v8a3 3 0 0 0 6 0V4a3 3 0 0 0-3-3z"></path><path d="M19 10v2a7 7 0 0 1-14 0v-2"></path><line x1="12" y1="19" x2="12" y2="23"></line><line x1="8" y1="23" x2="16" y2="23"></line>', "minimize-2": '<polyline points="4 14 10 14 10 20"></polyline><polyline points="20 10 14 10 14 4"></polyline><line x1="14" y1="10" x2="21" y2="3"></line><line x1="3" y1="21" x2="10" y2="14"></line>', minimize: '<path d="M8 3v3a2 2 0 0 1-2 2H3m18 0h-3a2 2 0 0 1-2-2V3m0 18v-3a2 2 0 0 1 2-2h3M3 16h3a2 2 0 0 1 2 2v3"></path>', "minus-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="8" y1="12" x2="16" y2="12"></line>', "minus-square": '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="8" y1="12" x2="16" y2="12"></line>', minus: '<line x1="5" y1="12" x2="19" y2="12"></line>', monitor: '<rect x="2" y="3" width="20" height="14" rx="2" ry="2"></rect><line x1="8" y1="21" x2="16" y2="21"></line><line x1="12" y1="17" x2="12" y2="21"></line>', moon: '<path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"></path>', "more-horizontal": '<circle cx="12" cy="12" r="1"></circle><circle cx="19" cy="12" r="1"></circle><circle cx="5" cy="12" r="1"></circle>', "more-vertical": '<circle cx="12" cy="12" r="1"></circle><circle cx="12" cy="5" r="1"></circle><circle cx="12" cy="19" r="1"></circle>', "mouse-pointer": '<path d="M3 3l7.07 16.97 2.51-7.39 7.39-2.51L3 3z"></path><path d="M13 13l6 6"></path>', move: '<polyline points="5 9 2 12 5 15"></polyline><polyline points="9 5 12 2 15 5"></polyline><polyline points="15 19 12 22 9 19"></polyline><polyline points="19 9 22 12 19 15"></polyline><line x1="2" y1="12" x2="22" y2="12"></line><line x1="12" y1="2" x2="12" y2="22"></line>', music: '<path d="M9 18V5l12-2v13"></path><circle cx="6" cy="18" r="3"></circle><circle cx="18" cy="16" r="3"></circle>', "navigation-2": '<polygon points="12 2 19 21 12 17 5 21 12 2"></polygon>', navigation: '<polygon points="3 11 22 2 13 21 11 13 3 11"></polygon>', octagon: '<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon>', package: '<line x1="16.5" y1="9.4" x2="7.5" y2="4.21"></line><path d="M21 16V8a2 2 0 0 0-1-1.73l-7-4a2 2 0 0 0-2 0l-7 4A2 2 0 0 0 3 8v8a2 2 0 0 0 1 1.73l7 4a2 2 0 0 0 2 0l7-4A2 2 0 0 0 21 16z"></path><polyline points="3.27 6.96 12 12.01 20.73 6.96"></polyline><line x1="12" y1="22.08" x2="12" y2="12"></line>', paperclip: '<path d="M21.44 11.05l-9.19 9.19a6 6 0 0 1-8.49-8.49l9.19-9.19a4 4 0 0 1 5.66 5.66l-9.2 9.19a2 2 0 0 1-2.83-2.83l8.49-8.48"></path>', "pause-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="10" y1="15" x2="10" y2="9"></line><line x1="14" y1="15" x2="14" y2="9"></line>', pause: '<rect x="6" y="4" width="4" height="16"></rect><rect x="14" y="4" width="4" height="16"></rect>', "pen-tool": '<path d="M12 19l7-7 3 3-7 7-3-3z"></path><path d="M18 13l-1.5-7.5L2 2l3.5 14.5L13 18l5-5z"></path><path d="M2 2l7.586 7.586"></path><circle cx="11" cy="11" r="2"></circle>', percent: '<line x1="19" y1="5" x2="5" y2="19"></line><circle cx="6.5" cy="6.5" r="2.5"></circle><circle cx="17.5" cy="17.5" r="2.5"></circle>', "phone-call": '<path d="M15.05 5A5 5 0 0 1 19 8.95M15.05 1A9 9 0 0 1 23 8.94m-1 7.98v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>', "phone-forwarded": '<polyline points="19 1 23 5 19 9"></polyline><line x1="15" y1="5" x2="23" y2="5"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>', "phone-incoming": '<polyline points="16 2 16 8 22 8"></polyline><line x1="23" y1="1" x2="16" y2="8"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>', "phone-missed": '<line x1="23" y1="1" x2="17" y2="7"></line><line x1="17" y1="1" x2="23" y2="7"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>', "phone-off": '<path d="M10.68 13.31a16 16 0 0 0 3.41 2.6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7 2 2 0 0 1 1.72 2v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.42 19.42 0 0 1-3.33-2.67m-2.67-3.34a19.79 19.79 0 0 1-3.07-8.63A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91"></path><line x1="23" y1="1" x2="1" y2="23"></line>', "phone-outgoing": '<polyline points="23 7 23 1 17 1"></polyline><line x1="16" y1="8" x2="23" y2="1"></line><path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>', phone: '<path d="M22 16.92v3a2 2 0 0 1-2.18 2 19.79 19.79 0 0 1-8.63-3.07 19.5 19.5 0 0 1-6-6 19.79 19.79 0 0 1-3.07-8.67A2 2 0 0 1 4.11 2h3a2 2 0 0 1 2 1.72 12.84 12.84 0 0 0 .7 2.81 2 2 0 0 1-.45 2.11L8.09 9.91a16 16 0 0 0 6 6l1.27-1.27a2 2 0 0 1 2.11-.45 12.84 12.84 0 0 0 2.81.7A2 2 0 0 1 22 16.92z"></path>', "pie-chart": '<path d="M21.21 15.89A10 10 0 1 1 8 2.83"></path><path d="M22 12A10 10 0 0 0 12 2v10z"></path>', "play-circle": '<circle cx="12" cy="12" r="10"></circle><polygon points="10 8 16 12 10 16 10 8"></polygon>', play: '<polygon points="5 3 19 12 5 21 5 3"></polygon>', "plus-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>', "plus-square": '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="12" y1="8" x2="12" y2="16"></line><line x1="8" y1="12" x2="16" y2="12"></line>', plus: '<line x1="12" y1="5" x2="12" y2="19"></line><line x1="5" y1="12" x2="19" y2="12"></line>', pocket: '<path d="M4 3h16a2 2 0 0 1 2 2v6a10 10 0 0 1-10 10A10 10 0 0 1 2 11V5a2 2 0 0 1 2-2z"></path><polyline points="8 10 12 14 16 10"></polyline>', power: '<path d="M18.36 6.64a9 9 0 1 1-12.73 0"></path><line x1="12" y1="2" x2="12" y2="12"></line>', printer: '<polyline points="6 9 6 2 18 2 18 9"></polyline><path d="M6 18H4a2 2 0 0 1-2-2v-5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v5a2 2 0 0 1-2 2h-2"></path><rect x="6" y="14" width="12" height="8"></rect>', radio: '<circle cx="12" cy="12" r="2"></circle><path d="M16.24 7.76a6 6 0 0 1 0 8.49m-8.48-.01a6 6 0 0 1 0-8.49m11.31-2.82a10 10 0 0 1 0 14.14m-14.14 0a10 10 0 0 1 0-14.14"></path>', "refresh-ccw": '<polyline points="1 4 1 10 7 10"></polyline><polyline points="23 20 23 14 17 14"></polyline><path d="M20.49 9A9 9 0 0 0 5.64 5.64L1 10m22 4l-4.64 4.36A9 9 0 0 1 3.51 15"></path>', "refresh-cw": '<polyline points="23 4 23 10 17 10"></polyline><polyline points="1 20 1 14 7 14"></polyline><path d="M3.51 9a9 9 0 0 1 14.85-3.36L23 10M1 14l4.64 4.36A9 9 0 0 0 20.49 15"></path>', repeat: '<polyline points="17 1 21 5 17 9"></polyline><path d="M3 11V9a4 4 0 0 1 4-4h14"></path><polyline points="7 23 3 19 7 15"></polyline><path d="M21 13v2a4 4 0 0 1-4 4H3"></path>', rewind: '<polygon points="11 19 2 12 11 5 11 19"></polygon><polygon points="22 19 13 12 22 5 22 19"></polygon>', "rotate-ccw": '<polyline points="1 4 1 10 7 10"></polyline><path d="M3.51 15a9 9 0 1 0 2.13-9.36L1 10"></path>', "rotate-cw": '<polyline points="23 4 23 10 17 10"></polyline><path d="M20.49 15a9 9 0 1 1-2.12-9.36L23 10"></path>', rss: '<path d="M4 11a9 9 0 0 1 9 9"></path><path d="M4 4a16 16 0 0 1 16 16"></path><circle cx="5" cy="19" r="1"></circle>', save: '<path d="M19 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h11l5 5v11a2 2 0 0 1-2 2z"></path><polyline points="17 21 17 13 7 13 7 21"></polyline><polyline points="7 3 7 8 15 8"></polyline>', scissors: '<circle cx="6" cy="6" r="3"></circle><circle cx="6" cy="18" r="3"></circle><line x1="20" y1="4" x2="8.12" y2="15.88"></line><line x1="14.47" y1="14.48" x2="20" y2="20"></line><line x1="8.12" y1="8.12" x2="12" y2="12"></line>', search: '<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line>', send: '<line x1="22" y1="2" x2="11" y2="13"></line><polygon points="22 2 15 22 11 13 2 9 22 2"></polygon>', server: '<rect x="2" y="2" width="20" height="8" rx="2" ry="2"></rect><rect x="2" y="14" width="20" height="8" rx="2" ry="2"></rect><line x1="6" y1="6" x2="6.01" y2="6"></line><line x1="6" y1="18" x2="6.01" y2="18"></line>', settings: '<circle cx="12" cy="12" r="3"></circle><path d="M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1-1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z"></path>', "share-2": '<circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line>', share: '<path d="M4 12v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2v-8"></path><polyline points="16 6 12 2 8 6"></polyline><line x1="12" y1="2" x2="12" y2="15"></line>', "shield-off": '<path d="M19.69 14a6.9 6.9 0 0 0 .31-2V5l-8-3-3.16 1.18"></path><path d="M4.73 4.73L4 5v7c0 6 8 10 8 10a20.29 20.29 0 0 0 5.62-4.38"></path><line x1="1" y1="1" x2="23" y2="23"></line>', shield: '<path d="M12 22s8-4 8-10V5l-8-3-8 3v7c0 6 8 10 8 10z"></path>', "shopping-bag": '<path d="M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z"></path><line x1="3" y1="6" x2="21" y2="6"></line><path d="M16 10a4 4 0 0 1-8 0"></path>', "shopping-cart": '<circle cx="9" cy="21" r="1"></circle><circle cx="20" cy="21" r="1"></circle><path d="M1 1h4l2.68 13.39a2 2 0 0 0 2 1.61h9.72a2 2 0 0 0 2-1.61L23 6H6"></path>', shuffle: '<polyline points="16 3 21 3 21 8"></polyline><line x1="4" y1="20" x2="21" y2="3"></line><polyline points="21 16 21 21 16 21"></polyline><line x1="15" y1="15" x2="21" y2="21"></line><line x1="4" y1="4" x2="9" y2="9"></line>', sidebar: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="3" x2="9" y2="21"></line>', "skip-back": '<polygon points="19 20 9 12 19 4 19 20"></polygon><line x1="5" y1="19" x2="5" y2="5"></line>', "skip-forward": '<polygon points="5 4 15 12 5 20 5 4"></polygon><line x1="19" y1="5" x2="19" y2="19"></line>', slack: '<path d="M14.5 10c-.83 0-1.5-.67-1.5-1.5v-5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5z"></path><path d="M20.5 10H19V8.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5-.67 1.5-1.5 1.5z"></path><path d="M9.5 14c.83 0 1.5.67 1.5 1.5v5c0 .83-.67 1.5-1.5 1.5S8 21.33 8 20.5v-5c0-.83.67-1.5 1.5-1.5z"></path><path d="M3.5 14H5v1.5c0 .83-.67 1.5-1.5 1.5S2 16.33 2 15.5 2.67 14 3.5 14z"></path><path d="M14 14.5c0-.83.67-1.5 1.5-1.5h5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-5c-.83 0-1.5-.67-1.5-1.5z"></path><path d="M15.5 19H14v1.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5-.67-1.5-1.5-1.5z"></path><path d="M10 9.5C10 8.67 9.33 8 8.5 8h-5C2.67 8 2 8.67 2 9.5S2.67 11 3.5 11h5c.83 0 1.5-.67 1.5-1.5z"></path><path d="M8.5 5H10V3.5C10 2.67 9.33 2 8.5 2S7 2.67 7 3.5 7.67 5 8.5 5z"></path>', slash: '<circle cx="12" cy="12" r="10"></circle><line x1="4.93" y1="4.93" x2="19.07" y2="19.07"></line>', sliders: '<line x1="4" y1="21" x2="4" y2="14"></line><line x1="4" y1="10" x2="4" y2="3"></line><line x1="12" y1="21" x2="12" y2="12"></line><line x1="12" y1="8" x2="12" y2="3"></line><line x1="20" y1="21" x2="20" y2="16"></line><line x1="20" y1="12" x2="20" y2="3"></line><line x1="1" y1="14" x2="7" y2="14"></line><line x1="9" y1="8" x2="15" y2="8"></line><line x1="17" y1="16" x2="23" y2="16"></line>', smartphone: '<rect x="5" y="2" width="14" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line>', smile: '<circle cx="12" cy="12" r="10"></circle><path d="M8 14s1.5 2 4 2 4-2 4-2"></path><line x1="9" y1="9" x2="9.01" y2="9"></line><line x1="15" y1="9" x2="15.01" y2="9"></line>', speaker: '<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><circle cx="12" cy="14" r="4"></circle><line x1="12" y1="6" x2="12.01" y2="6"></line>', square: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>', star: '<polygon points="12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2"></polygon>', "stop-circle": '<circle cx="12" cy="12" r="10"></circle><rect x="9" y="9" width="6" height="6"></rect>', sun: '<circle cx="12" cy="12" r="5"></circle><line x1="12" y1="1" x2="12" y2="3"></line><line x1="12" y1="21" x2="12" y2="23"></line><line x1="4.22" y1="4.22" x2="5.64" y2="5.64"></line><line x1="18.36" y1="18.36" x2="19.78" y2="19.78"></line><line x1="1" y1="12" x2="3" y2="12"></line><line x1="21" y1="12" x2="23" y2="12"></line><line x1="4.22" y1="19.78" x2="5.64" y2="18.36"></line><line x1="18.36" y1="5.64" x2="19.78" y2="4.22"></line>', sunrise: '<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="2" x2="12" y2="9"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="8 6 12 2 16 6"></polyline>', sunset: '<path d="M17 18a5 5 0 0 0-10 0"></path><line x1="12" y1="9" x2="12" y2="2"></line><line x1="4.22" y1="10.22" x2="5.64" y2="11.64"></line><line x1="1" y1="18" x2="3" y2="18"></line><line x1="21" y1="18" x2="23" y2="18"></line><line x1="18.36" y1="11.64" x2="19.78" y2="10.22"></line><line x1="23" y1="22" x2="1" y2="22"></line><polyline points="16 5 12 9 8 5"></polyline>', tablet: '<rect x="4" y="2" width="16" height="20" rx="2" ry="2"></rect><line x1="12" y1="18" x2="12.01" y2="18"></line>', tag: '<path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path><line x1="7" y1="7" x2="7.01" y2="7"></line>', target: '<circle cx="12" cy="12" r="10"></circle><circle cx="12" cy="12" r="6"></circle><circle cx="12" cy="12" r="2"></circle>', terminal: '<polyline points="4 17 10 11 4 5"></polyline><line x1="12" y1="19" x2="20" y2="19"></line>', thermometer: '<path d="M14 14.76V3.5a2.5 2.5 0 0 0-5 0v11.26a4.5 4.5 0 1 0 5 0z"></path>', "thumbs-down": '<path d="M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17"></path>', "thumbs-up": '<path d="M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3"></path>', "toggle-left": '<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="8" cy="12" r="3"></circle>', "toggle-right": '<rect x="1" y="5" width="22" height="14" rx="7" ry="7"></rect><circle cx="16" cy="12" r="3"></circle>', tool: '<path d="M14.7 6.3a1 1 0 0 0 0 1.4l1.6 1.6a1 1 0 0 0 1.4 0l3.77-3.77a6 6 0 0 1-7.94 7.94l-6.91 6.91a2.12 2.12 0 0 1-3-3l6.91-6.91a6 6 0 0 1 7.94-7.94l-3.76 3.76z"></path>', "trash-2": '<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path><line x1="10" y1="11" x2="10" y2="17"></line><line x1="14" y1="11" x2="14" y2="17"></line>', trash: '<polyline points="3 6 5 6 21 6"></polyline><path d="M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2"></path>', trello: '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><rect x="7" y="7" width="3" height="9"></rect><rect x="14" y="7" width="3" height="5"></rect>', "trending-down": '<polyline points="23 18 13.5 8.5 8.5 13.5 1 6"></polyline><polyline points="17 18 23 18 23 12"></polyline>', "trending-up": '<polyline points="23 6 13.5 15.5 8.5 10.5 1 18"></polyline><polyline points="17 6 23 6 23 12"></polyline>', triangle: '<path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>', truck: '<rect x="1" y="3" width="15" height="13"></rect><polygon points="16 8 20 8 23 11 23 16 16 16 16 8"></polygon><circle cx="5.5" cy="18.5" r="2.5"></circle><circle cx="18.5" cy="18.5" r="2.5"></circle>', tv: '<rect x="2" y="7" width="20" height="15" rx="2" ry="2"></rect><polyline points="17 2 12 7 7 2"></polyline>', twitch: '<path d="M21 2H3v16h5v4l4-4h5l4-4V2zm-10 9V7m5 4V7"></path>', twitter: '<path d="M23 3a10.9 10.9 0 0 1-3.14 1.53 4.48 4.48 0 0 0-7.86 3v1A10.66 10.66 0 0 1 3 4s-4 9 5 13a11.64 11.64 0 0 1-7 2c9 5 20 0 20-11.5a4.5 4.5 0 0 0-.08-.83A7.72 7.72 0 0 0 23 3z"></path>', type: '<polyline points="4 7 4 4 20 4 20 7"></polyline><line x1="9" y1="20" x2="15" y2="20"></line><line x1="12" y1="4" x2="12" y2="20"></line>', umbrella: '<path d="M23 12a11.05 11.05 0 0 0-22 0zm-5 7a3 3 0 0 1-6 0v-7"></path>', underline: '<path d="M6 3v7a6 6 0 0 0 6 6 6 6 0 0 0 6-6V3"></path><line x1="4" y1="21" x2="20" y2="21"></line>', unlock: '<rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 9.9-1"></path>', "upload-cloud": '<polyline points="16 16 12 12 8 16"></polyline><line x1="12" y1="12" x2="12" y2="21"></line><path d="M20.39 18.39A5 5 0 0 0 18 9h-1.26A8 8 0 1 0 3 16.3"></path><polyline points="16 16 12 12 8 16"></polyline>', upload: '<path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="17 8 12 3 7 8"></polyline><line x1="12" y1="3" x2="12" y2="15"></line>', "user-check": '<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><polyline points="17 11 19 13 23 9"></polyline>', "user-minus": '<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="23" y1="11" x2="17" y2="11"></line>', "user-plus": '<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="20" y1="8" x2="20" y2="14"></line><line x1="23" y1="11" x2="17" y2="11"></line>', "user-x": '<path d="M16 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="8.5" cy="7" r="4"></circle><line x1="18" y1="8" x2="23" y2="13"></line><line x1="23" y1="8" x2="18" y2="13"></line>', user: '<path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle>', users: '<path d="M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2"></path><circle cx="9" cy="7" r="4"></circle><path d="M23 21v-2a4 4 0 0 0-3-3.87"></path><path d="M16 3.13a4 4 0 0 1 0 7.75"></path>', "video-off": '<path d="M16 16v1a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V7a2 2 0 0 1 2-2h2m5.66 0H14a2 2 0 0 1 2 2v3.34l1 1L23 7v10"></path><line x1="1" y1="1" x2="23" y2="23"></line>', video: '<polygon points="23 7 16 12 23 17 23 7"></polygon><rect x="1" y="5" width="15" height="14" rx="2" ry="2"></rect>', voicemail: '<circle cx="5.5" cy="11.5" r="4.5"></circle><circle cx="18.5" cy="11.5" r="4.5"></circle><line x1="5.5" y1="16" x2="18.5" y2="16"></line>', "volume-1": '<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M15.54 8.46a5 5 0 0 1 0 7.07"></path>', "volume-2": '<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><path d="M19.07 4.93a10 10 0 0 1 0 14.14M15.54 8.46a5 5 0 0 1 0 7.07"></path>', "volume-x": '<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon><line x1="23" y1="9" x2="17" y2="15"></line><line x1="17" y1="9" x2="23" y2="15"></line>', volume: '<polygon points="11 5 6 9 2 9 2 15 6 15 11 19 11 5"></polygon>', watch: '<circle cx="12" cy="12" r="7"></circle><polyline points="12 9 12 12 13.5 13.5"></polyline><path d="M16.51 17.35l-.35 3.83a2 2 0 0 1-2 1.82H9.83a2 2 0 0 1-2-1.82l-.35-3.83m.01-10.7l.35-3.83A2 2 0 0 1 9.83 1h4.35a2 2 0 0 1 2 1.82l.35 3.83"></path>', "wifi-off": '<line x1="1" y1="1" x2="23" y2="23"></line><path d="M16.72 11.06A10.94 10.94 0 0 1 19 12.55"></path><path d="M5 12.55a10.94 10.94 0 0 1 5.17-2.39"></path><path d="M10.71 5.05A16 16 0 0 1 22.58 9"></path><path d="M1.42 9a15.91 15.91 0 0 1 4.7-2.88"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12.01" y2="20"></line>', wifi: '<path d="M5 12.55a11 11 0 0 1 14.08 0"></path><path d="M1.42 9a16 16 0 0 1 21.16 0"></path><path d="M8.53 16.11a6 6 0 0 1 6.95 0"></path><line x1="12" y1="20" x2="12.01" y2="20"></line>', wind: '<path d="M9.59 4.59A2 2 0 1 1 11 8H2m10.59 11.41A2 2 0 1 0 14 16H2m15.73-8.27A2.5 2.5 0 1 1 19.5 12H2"></path>', "x-circle": '<circle cx="12" cy="12" r="10"></circle><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>', "x-octagon": '<polygon points="7.86 2 16.14 2 22 7.86 22 16.14 16.14 22 7.86 22 2 16.14 2 7.86 7.86 2"></polygon><line x1="15" y1="9" x2="9" y2="15"></line><line x1="9" y1="9" x2="15" y2="15"></line>', "x-square": '<rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect><line x1="9" y1="9" x2="15" y2="15"></line><line x1="15" y1="9" x2="9" y2="15"></line>', x: '<line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line>', youtube: '<path d="M22.54 6.42a2.78 2.78 0 0 0-1.94-2C18.88 4 12 4 12 4s-6.88 0-8.6.46a2.78 2.78 0 0 0-1.94 2A29 29 0 0 0 1 11.75a29 29 0 0 0 .46 5.33A2.78 2.78 0 0 0 3.4 19c1.72.46 8.6.46 8.6.46s6.88 0 8.6-.46a2.78 2.78 0 0 0 1.94-2 29 29 0 0 0 .46-5.25 29 29 0 0 0-.46-5.33z"></path><polygon points="9.75 15.02 15.5 11.75 9.75 8.48 9.75 15.02"></polygon>', "zap-off": '<polyline points="12.41 6.75 13 2 10.57 4.92"></polyline><polyline points="18.57 12.91 21 10 15.66 10"></polyline><polyline points="8 8 3 14 12 14 11 22 16 16"></polyline><line x1="1" y1="1" x2="23" y2="23"></line>', zap: '<polygon points="13 2 3 14 12 14 11 22 21 10 12 10 13 2"></polygon>', "zoom-in": '<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="11" y1="8" x2="11" y2="14"></line><line x1="8" y1="11" x2="14" y2="11"></line>', "zoom-out": '<circle cx="11" cy="11" r="8"></circle><line x1="21" y1="21" x2="16.65" y2="16.65"></line><line x1="8" y1="11" x2="14" y2="11"></line>' };
        }, "./node_modules/classnames/dedupe.js": function(t3, e3, n2) {
          var i;
          !function() {
            "use strict";
            var n3 = function() {
              function t4() {
              }
              function e4(t5, e5) {
                for (var n5 = e5.length, i3 = 0; i3 < n5; ++i3)
                  a(t5, e5[i3]);
              }
              t4.prototype = /* @__PURE__ */ Object.create(null);
              var n4 = {}.hasOwnProperty, i2 = /\s+/;
              function a(t5, a2) {
                if (a2) {
                  var r = typeof a2;
                  r === "string" ? function(t6, e5) {
                    for (var n5 = e5.split(i2), a3 = n5.length, r2 = 0; r2 < a3; ++r2)
                      t6[n5[r2]] = true;
                  }(t5, a2) : Array.isArray(a2) ? e4(t5, a2) : r === "object" ? function(t6, e5) {
                    for (var i3 in e5)
                      n4.call(e5, i3) && (t6[i3] = !!e5[i3]);
                  }(t5, a2) : r === "number" && function(t6, e5) {
                    t6[e5] = true;
                  }(t5, a2);
                }
              }
              return function() {
                for (var n5 = arguments.length, i3 = Array(n5), a2 = 0; a2 < n5; a2++)
                  i3[a2] = arguments[a2];
                var r = new t4();
                e4(r, i3);
                var o = [];
                for (var s in r)
                  r[s] && o.push(s);
                return o.join(" ");
              };
            }();
            t3 !== void 0 && t3.exports ? t3.exports = n3 : (i = function() {
              return n3;
            }.apply(e3, [])) === void 0 || (t3.exports = i);
          }();
        }, "./node_modules/core-js/es/array/from.js": function(t3, e3, n2) {
          n2("./node_modules/core-js/modules/es.string.iterator.js"), n2("./node_modules/core-js/modules/es.array.from.js");
          var i = n2("./node_modules/core-js/internals/path.js");
          t3.exports = i.Array.from;
        }, "./node_modules/core-js/internals/a-function.js": function(t3, e3) {
          t3.exports = function(t4) {
            if (typeof t4 != "function")
              throw TypeError(String(t4) + " is not a function");
            return t4;
          };
        }, "./node_modules/core-js/internals/an-object.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/is-object.js");
          t3.exports = function(t4) {
            if (!i(t4))
              throw TypeError(String(t4) + " is not an object");
            return t4;
          };
        }, "./node_modules/core-js/internals/array-from.js": function(t3, e3, n2) {
          "use strict";
          var i = n2("./node_modules/core-js/internals/bind-context.js"), a = n2("./node_modules/core-js/internals/to-object.js"), r = n2("./node_modules/core-js/internals/call-with-safe-iteration-closing.js"), o = n2("./node_modules/core-js/internals/is-array-iterator-method.js"), s = n2("./node_modules/core-js/internals/to-length.js"), l = n2("./node_modules/core-js/internals/create-property.js"), c = n2("./node_modules/core-js/internals/get-iterator-method.js");
          t3.exports = function(t4) {
            var e4, n3, d, u, h = a(t4), p = typeof this == "function" ? this : Array, f = arguments.length, g = f > 1 ? arguments[1] : void 0, m = g !== void 0, v = 0, b = c(h);
            if (m && (g = i(g, f > 2 ? arguments[2] : void 0, 2)), b == null || p == Array && o(b))
              for (n3 = new p(e4 = s(h.length)); e4 > v; v++)
                l(n3, v, m ? g(h[v], v) : h[v]);
            else
              for (u = b.call(h), n3 = new p(); !(d = u.next()).done; v++)
                l(n3, v, m ? r(u, g, [d.value, v], true) : d.value);
            return n3.length = v, n3;
          };
        }, "./node_modules/core-js/internals/array-includes.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/to-indexed-object.js"), a = n2("./node_modules/core-js/internals/to-length.js"), r = n2("./node_modules/core-js/internals/to-absolute-index.js");
          t3.exports = function(t4) {
            return function(e4, n3, o) {
              var s, l = i(e4), c = a(l.length), d = r(o, c);
              if (t4 && n3 != n3) {
                for (; c > d; )
                  if ((s = l[d++]) != s)
                    return true;
              } else
                for (; c > d; d++)
                  if ((t4 || d in l) && l[d] === n3)
                    return t4 || d || 0;
              return !t4 && -1;
            };
          };
        }, "./node_modules/core-js/internals/bind-context.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/a-function.js");
          t3.exports = function(t4, e4, n3) {
            if (i(t4), e4 === void 0)
              return t4;
            switch (n3) {
              case 0:
                return function() {
                  return t4.call(e4);
                };
              case 1:
                return function(n4) {
                  return t4.call(e4, n4);
                };
              case 2:
                return function(n4, i2) {
                  return t4.call(e4, n4, i2);
                };
              case 3:
                return function(n4, i2, a) {
                  return t4.call(e4, n4, i2, a);
                };
            }
            return function() {
              return t4.apply(e4, arguments);
            };
          };
        }, "./node_modules/core-js/internals/call-with-safe-iteration-closing.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/an-object.js");
          t3.exports = function(t4, e4, n3, a) {
            try {
              return a ? e4(i(n3)[0], n3[1]) : e4(n3);
            } catch (e5) {
              var r = t4.return;
              throw r !== void 0 && i(r.call(t4)), e5;
            }
          };
        }, "./node_modules/core-js/internals/check-correctness-of-iteration.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/well-known-symbol.js")("iterator"), a = false;
          try {
            var r = 0, o = { next: function() {
              return { done: !!r++ };
            }, return: function() {
              a = true;
            } };
            o[i] = function() {
              return this;
            }, Array.from(o, function() {
              throw 2;
            });
          } catch (t4) {
          }
          t3.exports = function(t4, e4) {
            if (!e4 && !a)
              return false;
            var n3 = false;
            try {
              var r2 = {};
              r2[i] = function() {
                return { next: function() {
                  return { done: n3 = true };
                } };
              }, t4(r2);
            } catch (t5) {
            }
            return n3;
          };
        }, "./node_modules/core-js/internals/classof-raw.js": function(t3, e3) {
          var n2 = {}.toString;
          t3.exports = function(t4) {
            return n2.call(t4).slice(8, -1);
          };
        }, "./node_modules/core-js/internals/classof.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/classof-raw.js"), a = n2("./node_modules/core-js/internals/well-known-symbol.js")("toStringTag"), r = i(function() {
            return arguments;
          }()) == "Arguments";
          t3.exports = function(t4) {
            var e4, n3, o;
            return t4 === void 0 ? "Undefined" : t4 === null ? "Null" : typeof (n3 = function(t5, e5) {
              try {
                return t5[e5];
              } catch (t6) {
              }
            }(e4 = Object(t4), a)) == "string" ? n3 : r ? i(e4) : (o = i(e4)) == "Object" && typeof e4.callee == "function" ? "Arguments" : o;
          };
        }, "./node_modules/core-js/internals/copy-constructor-properties.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/has.js"), a = n2("./node_modules/core-js/internals/own-keys.js"), r = n2("./node_modules/core-js/internals/object-get-own-property-descriptor.js"), o = n2("./node_modules/core-js/internals/object-define-property.js");
          t3.exports = function(t4, e4) {
            for (var n3 = a(e4), s = o.f, l = r.f, c = 0; c < n3.length; c++) {
              var d = n3[c];
              i(t4, d) || s(t4, d, l(e4, d));
            }
          };
        }, "./node_modules/core-js/internals/correct-prototype-getter.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/fails.js");
          t3.exports = !i(function() {
            function t4() {
            }
            return t4.prototype.constructor = null, Object.getPrototypeOf(new t4()) !== t4.prototype;
          });
        }, "./node_modules/core-js/internals/create-iterator-constructor.js": function(t3, e3, n2) {
          "use strict";
          var i = n2("./node_modules/core-js/internals/iterators-core.js").IteratorPrototype, a = n2("./node_modules/core-js/internals/object-create.js"), r = n2("./node_modules/core-js/internals/create-property-descriptor.js"), o = n2("./node_modules/core-js/internals/set-to-string-tag.js"), s = n2("./node_modules/core-js/internals/iterators.js"), l = function() {
            return this;
          };
          t3.exports = function(t4, e4, n3) {
            var c = e4 + " Iterator";
            return t4.prototype = a(i, { next: r(1, n3) }), o(t4, c, false, true), s[c] = l, t4;
          };
        }, "./node_modules/core-js/internals/create-property-descriptor.js": function(t3, e3) {
          t3.exports = function(t4, e4) {
            return { enumerable: !(1 & t4), configurable: !(2 & t4), writable: !(4 & t4), value: e4 };
          };
        }, "./node_modules/core-js/internals/create-property.js": function(t3, e3, n2) {
          "use strict";
          var i = n2("./node_modules/core-js/internals/to-primitive.js"), a = n2("./node_modules/core-js/internals/object-define-property.js"), r = n2("./node_modules/core-js/internals/create-property-descriptor.js");
          t3.exports = function(t4, e4, n3) {
            var o = i(e4);
            o in t4 ? a.f(t4, o, r(0, n3)) : t4[o] = n3;
          };
        }, "./node_modules/core-js/internals/define-iterator.js": function(t3, e3, n2) {
          "use strict";
          var i = n2("./node_modules/core-js/internals/export.js"), a = n2("./node_modules/core-js/internals/create-iterator-constructor.js"), r = n2("./node_modules/core-js/internals/object-get-prototype-of.js"), o = n2("./node_modules/core-js/internals/object-set-prototype-of.js"), s = n2("./node_modules/core-js/internals/set-to-string-tag.js"), l = n2("./node_modules/core-js/internals/hide.js"), c = n2("./node_modules/core-js/internals/redefine.js"), d = n2("./node_modules/core-js/internals/well-known-symbol.js"), u = n2("./node_modules/core-js/internals/is-pure.js"), h = n2("./node_modules/core-js/internals/iterators.js"), p = n2("./node_modules/core-js/internals/iterators-core.js"), f = p.IteratorPrototype, g = p.BUGGY_SAFARI_ITERATORS, m = d("iterator"), v = "keys", b = "values", y = "entries", x = function() {
            return this;
          };
          t3.exports = function(t4, e4, n3, d2, p2, _, w) {
            a(n3, e4, d2);
            var S, C, k, D = function(t5) {
              if (t5 === p2 && M)
                return M;
              if (!g && t5 in A)
                return A[t5];
              switch (t5) {
                case v:
                case b:
                case y:
                  return function() {
                    return new n3(this, t5);
                  };
              }
              return function() {
                return new n3(this);
              };
            }, T = e4 + " Iterator", E = false, A = t4.prototype, I = A[m] || A["@@iterator"] || p2 && A[p2], M = !g && I || D(p2), R = e4 == "Array" && A.entries || I;
            if (R && (S = r(R.call(new t4())), f !== Object.prototype && S.next && (u || r(S) === f || (o ? o(S, f) : typeof S[m] != "function" && l(S, m, x)), s(S, T, true, true), u && (h[T] = x))), p2 == b && I && I.name !== b && (E = true, M = function() {
              return I.call(this);
            }), u && !w || A[m] === M || l(A, m, M), h[e4] = M, p2)
              if (C = { values: D(b), keys: _ ? M : D(v), entries: D(y) }, w)
                for (k in C)
                  (g || E || !(k in A)) && c(A, k, C[k]);
              else
                i({ target: e4, proto: true, forced: g || E }, C);
            return C;
          };
        }, "./node_modules/core-js/internals/descriptors.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/fails.js");
          t3.exports = !i(function() {
            return Object.defineProperty({}, "a", { get: function() {
              return 7;
            } }).a != 7;
          });
        }, "./node_modules/core-js/internals/document-create-element.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js"), a = n2("./node_modules/core-js/internals/is-object.js"), r = i.document, o = a(r) && a(r.createElement);
          t3.exports = function(t4) {
            return o ? r.createElement(t4) : {};
          };
        }, "./node_modules/core-js/internals/enum-bug-keys.js": function(t3, e3) {
          t3.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
        }, "./node_modules/core-js/internals/export.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js"), a = n2("./node_modules/core-js/internals/object-get-own-property-descriptor.js").f, r = n2("./node_modules/core-js/internals/hide.js"), o = n2("./node_modules/core-js/internals/redefine.js"), s = n2("./node_modules/core-js/internals/set-global.js"), l = n2("./node_modules/core-js/internals/copy-constructor-properties.js"), c = n2("./node_modules/core-js/internals/is-forced.js");
          t3.exports = function(t4, e4) {
            var n3, d, u, h, p, f = t4.target, g = t4.global, m = t4.stat;
            if (n3 = g ? i : m ? i[f] || s(f, {}) : (i[f] || {}).prototype)
              for (d in e4) {
                if (h = e4[d], u = t4.noTargetGet ? (p = a(n3, d)) && p.value : n3[d], !c(g ? d : f + (m ? "." : "#") + d, t4.forced) && u !== void 0) {
                  if (typeof h == typeof u)
                    continue;
                  l(h, u);
                }
                (t4.sham || u && u.sham) && r(h, "sham", true), o(n3, d, h, t4);
              }
          };
        }, "./node_modules/core-js/internals/fails.js": function(t3, e3) {
          t3.exports = function(t4) {
            try {
              return !!t4();
            } catch (t5) {
              return true;
            }
          };
        }, "./node_modules/core-js/internals/function-to-string.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/shared.js");
          t3.exports = i("native-function-to-string", Function.toString);
        }, "./node_modules/core-js/internals/get-iterator-method.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/classof.js"), a = n2("./node_modules/core-js/internals/iterators.js"), r = n2("./node_modules/core-js/internals/well-known-symbol.js")("iterator");
          t3.exports = function(t4) {
            if (t4 != null)
              return t4[r] || t4["@@iterator"] || a[i(t4)];
          };
        }, "./node_modules/core-js/internals/global.js": function(t3, e3, n2) {
          (function(e4) {
            var n3 = "object", i = function(t4) {
              return t4 && t4.Math == Math && t4;
            };
            t3.exports = i(typeof globalThis == n3 && globalThis) || i(typeof window == n3 && window) || i(typeof self == n3 && self) || i(typeof e4 == n3 && e4) || Function("return this")();
          }).call(this, n2("./node_modules/webpack/buildin/global.js"));
        }, "./node_modules/core-js/internals/has.js": function(t3, e3) {
          var n2 = {}.hasOwnProperty;
          t3.exports = function(t4, e4) {
            return n2.call(t4, e4);
          };
        }, "./node_modules/core-js/internals/hidden-keys.js": function(t3, e3) {
          t3.exports = {};
        }, "./node_modules/core-js/internals/hide.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/descriptors.js"), a = n2("./node_modules/core-js/internals/object-define-property.js"), r = n2("./node_modules/core-js/internals/create-property-descriptor.js");
          t3.exports = i ? function(t4, e4, n3) {
            return a.f(t4, e4, r(1, n3));
          } : function(t4, e4, n3) {
            return t4[e4] = n3, t4;
          };
        }, "./node_modules/core-js/internals/html.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js").document;
          t3.exports = i && i.documentElement;
        }, "./node_modules/core-js/internals/ie8-dom-define.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/descriptors.js"), a = n2("./node_modules/core-js/internals/fails.js"), r = n2("./node_modules/core-js/internals/document-create-element.js");
          t3.exports = !i && !a(function() {
            return Object.defineProperty(r("div"), "a", { get: function() {
              return 7;
            } }).a != 7;
          });
        }, "./node_modules/core-js/internals/indexed-object.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/fails.js"), a = n2("./node_modules/core-js/internals/classof-raw.js"), r = "".split;
          t3.exports = i(function() {
            return !Object("z").propertyIsEnumerable(0);
          }) ? function(t4) {
            return a(t4) == "String" ? r.call(t4, "") : Object(t4);
          } : Object;
        }, "./node_modules/core-js/internals/internal-state.js": function(t3, e3, n2) {
          var i, a, r, o = n2("./node_modules/core-js/internals/native-weak-map.js"), s = n2("./node_modules/core-js/internals/global.js"), l = n2("./node_modules/core-js/internals/is-object.js"), c = n2("./node_modules/core-js/internals/hide.js"), d = n2("./node_modules/core-js/internals/has.js"), u = n2("./node_modules/core-js/internals/shared-key.js"), h = n2("./node_modules/core-js/internals/hidden-keys.js"), p = s.WeakMap;
          if (o) {
            var f = new p(), g = f.get, m = f.has, v = f.set;
            i = function(t4, e4) {
              return v.call(f, t4, e4), e4;
            }, a = function(t4) {
              return g.call(f, t4) || {};
            }, r = function(t4) {
              return m.call(f, t4);
            };
          } else {
            var b = u("state");
            h[b] = true, i = function(t4, e4) {
              return c(t4, b, e4), e4;
            }, a = function(t4) {
              return d(t4, b) ? t4[b] : {};
            }, r = function(t4) {
              return d(t4, b);
            };
          }
          t3.exports = { set: i, get: a, has: r, enforce: function(t4) {
            return r(t4) ? a(t4) : i(t4, {});
          }, getterFor: function(t4) {
            return function(e4) {
              var n3;
              if (!l(e4) || (n3 = a(e4)).type !== t4)
                throw TypeError("Incompatible receiver, " + t4 + " required");
              return n3;
            };
          } };
        }, "./node_modules/core-js/internals/is-array-iterator-method.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/well-known-symbol.js"), a = n2("./node_modules/core-js/internals/iterators.js"), r = i("iterator"), o = Array.prototype;
          t3.exports = function(t4) {
            return t4 !== void 0 && (a.Array === t4 || o[r] === t4);
          };
        }, "./node_modules/core-js/internals/is-forced.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/fails.js"), a = /#|\.prototype\./, r = function(t4, e4) {
            var n3 = s[o(t4)];
            return n3 == c || n3 != l && (typeof e4 == "function" ? i(e4) : !!e4);
          }, o = r.normalize = function(t4) {
            return String(t4).replace(a, ".").toLowerCase();
          }, s = r.data = {}, l = r.NATIVE = "N", c = r.POLYFILL = "P";
          t3.exports = r;
        }, "./node_modules/core-js/internals/is-object.js": function(t3, e3) {
          t3.exports = function(t4) {
            return typeof t4 == "object" ? t4 !== null : typeof t4 == "function";
          };
        }, "./node_modules/core-js/internals/is-pure.js": function(t3, e3) {
          t3.exports = false;
        }, "./node_modules/core-js/internals/iterators-core.js": function(t3, e3, n2) {
          "use strict";
          var i, a, r, o = n2("./node_modules/core-js/internals/object-get-prototype-of.js"), s = n2("./node_modules/core-js/internals/hide.js"), l = n2("./node_modules/core-js/internals/has.js"), c = n2("./node_modules/core-js/internals/well-known-symbol.js"), d = n2("./node_modules/core-js/internals/is-pure.js"), u = c("iterator"), h = false;
          [].keys && ("next" in (r = [].keys()) ? (a = o(o(r))) !== Object.prototype && (i = a) : h = true), i == null && (i = {}), d || l(i, u) || s(i, u, function() {
            return this;
          }), t3.exports = { IteratorPrototype: i, BUGGY_SAFARI_ITERATORS: h };
        }, "./node_modules/core-js/internals/iterators.js": function(t3, e3) {
          t3.exports = {};
        }, "./node_modules/core-js/internals/native-symbol.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/fails.js");
          t3.exports = !!Object.getOwnPropertySymbols && !i(function() {
            return !String(Symbol());
          });
        }, "./node_modules/core-js/internals/native-weak-map.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js"), a = n2("./node_modules/core-js/internals/function-to-string.js"), r = i.WeakMap;
          t3.exports = typeof r == "function" && /native code/.test(a.call(r));
        }, "./node_modules/core-js/internals/object-create.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/an-object.js"), a = n2("./node_modules/core-js/internals/object-define-properties.js"), r = n2("./node_modules/core-js/internals/enum-bug-keys.js"), o = n2("./node_modules/core-js/internals/hidden-keys.js"), s = n2("./node_modules/core-js/internals/html.js"), l = n2("./node_modules/core-js/internals/document-create-element.js"), c = n2("./node_modules/core-js/internals/shared-key.js")("IE_PROTO"), d = function() {
          }, u = function() {
            var t4, e4 = l("iframe"), n3 = r.length;
            for (e4.style.display = "none", s.appendChild(e4), e4.src = String("javascript:"), (t4 = e4.contentWindow.document).open(), t4.write("<script>document.F=Object<\/script>"), t4.close(), u = t4.F; n3--; )
              delete u.prototype[r[n3]];
            return u();
          };
          t3.exports = Object.create || function(t4, e4) {
            var n3;
            return t4 !== null ? (d.prototype = i(t4), n3 = new d(), d.prototype = null, n3[c] = t4) : n3 = u(), e4 === void 0 ? n3 : a(n3, e4);
          }, o[c] = true;
        }, "./node_modules/core-js/internals/object-define-properties.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/descriptors.js"), a = n2("./node_modules/core-js/internals/object-define-property.js"), r = n2("./node_modules/core-js/internals/an-object.js"), o = n2("./node_modules/core-js/internals/object-keys.js");
          t3.exports = i ? Object.defineProperties : function(t4, e4) {
            r(t4);
            for (var n3, i2 = o(e4), s = i2.length, l = 0; s > l; )
              a.f(t4, n3 = i2[l++], e4[n3]);
            return t4;
          };
        }, "./node_modules/core-js/internals/object-define-property.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/descriptors.js"), a = n2("./node_modules/core-js/internals/ie8-dom-define.js"), r = n2("./node_modules/core-js/internals/an-object.js"), o = n2("./node_modules/core-js/internals/to-primitive.js"), s = Object.defineProperty;
          e3.f = i ? s : function(t4, e4, n3) {
            if (r(t4), e4 = o(e4, true), r(n3), a)
              try {
                return s(t4, e4, n3);
              } catch (t5) {
              }
            if ("get" in n3 || "set" in n3)
              throw TypeError("Accessors not supported");
            return "value" in n3 && (t4[e4] = n3.value), t4;
          };
        }, "./node_modules/core-js/internals/object-get-own-property-descriptor.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/descriptors.js"), a = n2("./node_modules/core-js/internals/object-property-is-enumerable.js"), r = n2("./node_modules/core-js/internals/create-property-descriptor.js"), o = n2("./node_modules/core-js/internals/to-indexed-object.js"), s = n2("./node_modules/core-js/internals/to-primitive.js"), l = n2("./node_modules/core-js/internals/has.js"), c = n2("./node_modules/core-js/internals/ie8-dom-define.js"), d = Object.getOwnPropertyDescriptor;
          e3.f = i ? d : function(t4, e4) {
            if (t4 = o(t4), e4 = s(e4, true), c)
              try {
                return d(t4, e4);
              } catch (t5) {
              }
            if (l(t4, e4))
              return r(!a.f.call(t4, e4), t4[e4]);
          };
        }, "./node_modules/core-js/internals/object-get-own-property-names.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/object-keys-internal.js"), a = n2("./node_modules/core-js/internals/enum-bug-keys.js").concat("length", "prototype");
          e3.f = Object.getOwnPropertyNames || function(t4) {
            return i(t4, a);
          };
        }, "./node_modules/core-js/internals/object-get-own-property-symbols.js": function(t3, e3) {
          e3.f = Object.getOwnPropertySymbols;
        }, "./node_modules/core-js/internals/object-get-prototype-of.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/has.js"), a = n2("./node_modules/core-js/internals/to-object.js"), r = n2("./node_modules/core-js/internals/shared-key.js"), o = n2("./node_modules/core-js/internals/correct-prototype-getter.js"), s = r("IE_PROTO"), l = Object.prototype;
          t3.exports = o ? Object.getPrototypeOf : function(t4) {
            return t4 = a(t4), i(t4, s) ? t4[s] : typeof t4.constructor == "function" && t4 instanceof t4.constructor ? t4.constructor.prototype : t4 instanceof Object ? l : null;
          };
        }, "./node_modules/core-js/internals/object-keys-internal.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/has.js"), a = n2("./node_modules/core-js/internals/to-indexed-object.js"), r = n2("./node_modules/core-js/internals/array-includes.js"), o = n2("./node_modules/core-js/internals/hidden-keys.js"), s = r(false);
          t3.exports = function(t4, e4) {
            var n3, r2 = a(t4), l = 0, c = [];
            for (n3 in r2)
              !i(o, n3) && i(r2, n3) && c.push(n3);
            for (; e4.length > l; )
              i(r2, n3 = e4[l++]) && (~s(c, n3) || c.push(n3));
            return c;
          };
        }, "./node_modules/core-js/internals/object-keys.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/object-keys-internal.js"), a = n2("./node_modules/core-js/internals/enum-bug-keys.js");
          t3.exports = Object.keys || function(t4) {
            return i(t4, a);
          };
        }, "./node_modules/core-js/internals/object-property-is-enumerable.js": function(t3, e3, n2) {
          "use strict";
          var i = {}.propertyIsEnumerable, a = Object.getOwnPropertyDescriptor, r = a && !i.call({ 1: 2 }, 1);
          e3.f = r ? function(t4) {
            var e4 = a(this, t4);
            return !!e4 && e4.enumerable;
          } : i;
        }, "./node_modules/core-js/internals/object-set-prototype-of.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/validate-set-prototype-of-arguments.js");
          t3.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
            var t4, e4 = false, n3 = {};
            try {
              (t4 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(n3, []), e4 = n3 instanceof Array;
            } catch (t5) {
            }
            return function(n4, a) {
              return i(n4, a), e4 ? t4.call(n4, a) : n4.__proto__ = a, n4;
            };
          }() : void 0);
        }, "./node_modules/core-js/internals/own-keys.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js"), a = n2("./node_modules/core-js/internals/object-get-own-property-names.js"), r = n2("./node_modules/core-js/internals/object-get-own-property-symbols.js"), o = n2("./node_modules/core-js/internals/an-object.js"), s = i.Reflect;
          t3.exports = s && s.ownKeys || function(t4) {
            var e4 = a.f(o(t4)), n3 = r.f;
            return n3 ? e4.concat(n3(t4)) : e4;
          };
        }, "./node_modules/core-js/internals/path.js": function(t3, e3, n2) {
          t3.exports = n2("./node_modules/core-js/internals/global.js");
        }, "./node_modules/core-js/internals/redefine.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js"), a = n2("./node_modules/core-js/internals/shared.js"), r = n2("./node_modules/core-js/internals/hide.js"), o = n2("./node_modules/core-js/internals/has.js"), s = n2("./node_modules/core-js/internals/set-global.js"), l = n2("./node_modules/core-js/internals/function-to-string.js"), c = n2("./node_modules/core-js/internals/internal-state.js"), d = c.get, u = c.enforce, h = String(l).split("toString");
          a("inspectSource", function(t4) {
            return l.call(t4);
          }), (t3.exports = function(t4, e4, n3, a2) {
            var l2 = !!a2 && !!a2.unsafe, c2 = !!a2 && !!a2.enumerable, d2 = !!a2 && !!a2.noTargetGet;
            typeof n3 == "function" && (typeof e4 != "string" || o(n3, "name") || r(n3, "name", e4), u(n3).source = h.join(typeof e4 == "string" ? e4 : "")), t4 !== i ? (l2 ? !d2 && t4[e4] && (c2 = true) : delete t4[e4], c2 ? t4[e4] = n3 : r(t4, e4, n3)) : c2 ? t4[e4] = n3 : s(e4, n3);
          })(Function.prototype, "toString", function() {
            return typeof this == "function" && d(this).source || l.call(this);
          });
        }, "./node_modules/core-js/internals/require-object-coercible.js": function(t3, e3) {
          t3.exports = function(t4) {
            if (t4 == null)
              throw TypeError("Can't call method on " + t4);
            return t4;
          };
        }, "./node_modules/core-js/internals/set-global.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js"), a = n2("./node_modules/core-js/internals/hide.js");
          t3.exports = function(t4, e4) {
            try {
              a(i, t4, e4);
            } catch (n3) {
              i[t4] = e4;
            }
            return e4;
          };
        }, "./node_modules/core-js/internals/set-to-string-tag.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/object-define-property.js").f, a = n2("./node_modules/core-js/internals/has.js"), r = n2("./node_modules/core-js/internals/well-known-symbol.js")("toStringTag");
          t3.exports = function(t4, e4, n3) {
            t4 && !a(t4 = n3 ? t4 : t4.prototype, r) && i(t4, r, { configurable: true, value: e4 });
          };
        }, "./node_modules/core-js/internals/shared-key.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/shared.js"), a = n2("./node_modules/core-js/internals/uid.js"), r = i("keys");
          t3.exports = function(t4) {
            return r[t4] || (r[t4] = a(t4));
          };
        }, "./node_modules/core-js/internals/shared.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js"), a = n2("./node_modules/core-js/internals/set-global.js"), r = n2("./node_modules/core-js/internals/is-pure.js"), o = "__core-js_shared__", s = i[o] || a(o, {});
          (t3.exports = function(t4, e4) {
            return s[t4] || (s[t4] = e4 !== void 0 ? e4 : {});
          })("versions", []).push({ version: "3.1.3", mode: r ? "pure" : "global", copyright: "\xA9 2019 Denis Pushkarev (zloirock.ru)" });
        }, "./node_modules/core-js/internals/string-at.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/to-integer.js"), a = n2("./node_modules/core-js/internals/require-object-coercible.js");
          t3.exports = function(t4, e4, n3) {
            var r, o, s = String(a(t4)), l = i(e4), c = s.length;
            return l < 0 || l >= c ? n3 ? "" : void 0 : (r = s.charCodeAt(l)) < 55296 || r > 56319 || l + 1 === c || (o = s.charCodeAt(l + 1)) < 56320 || o > 57343 ? n3 ? s.charAt(l) : r : n3 ? s.slice(l, l + 2) : o - 56320 + (r - 55296 << 10) + 65536;
          };
        }, "./node_modules/core-js/internals/to-absolute-index.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/to-integer.js"), a = Math.max, r = Math.min;
          t3.exports = function(t4, e4) {
            var n3 = i(t4);
            return n3 < 0 ? a(n3 + e4, 0) : r(n3, e4);
          };
        }, "./node_modules/core-js/internals/to-indexed-object.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/indexed-object.js"), a = n2("./node_modules/core-js/internals/require-object-coercible.js");
          t3.exports = function(t4) {
            return i(a(t4));
          };
        }, "./node_modules/core-js/internals/to-integer.js": function(t3, e3) {
          var n2 = Math.ceil, i = Math.floor;
          t3.exports = function(t4) {
            return isNaN(t4 = +t4) ? 0 : (t4 > 0 ? i : n2)(t4);
          };
        }, "./node_modules/core-js/internals/to-length.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/to-integer.js"), a = Math.min;
          t3.exports = function(t4) {
            return t4 > 0 ? a(i(t4), 9007199254740991) : 0;
          };
        }, "./node_modules/core-js/internals/to-object.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/require-object-coercible.js");
          t3.exports = function(t4) {
            return Object(i(t4));
          };
        }, "./node_modules/core-js/internals/to-primitive.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/is-object.js");
          t3.exports = function(t4, e4) {
            if (!i(t4))
              return t4;
            var n3, a;
            if (e4 && typeof (n3 = t4.toString) == "function" && !i(a = n3.call(t4)))
              return a;
            if (typeof (n3 = t4.valueOf) == "function" && !i(a = n3.call(t4)))
              return a;
            if (!e4 && typeof (n3 = t4.toString) == "function" && !i(a = n3.call(t4)))
              return a;
            throw TypeError("Can't convert object to primitive value");
          };
        }, "./node_modules/core-js/internals/uid.js": function(t3, e3) {
          var n2 = 0, i = Math.random();
          t3.exports = function(t4) {
            return "Symbol(".concat(t4 === void 0 ? "" : t4, ")_", (++n2 + i).toString(36));
          };
        }, "./node_modules/core-js/internals/validate-set-prototype-of-arguments.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/is-object.js"), a = n2("./node_modules/core-js/internals/an-object.js");
          t3.exports = function(t4, e4) {
            if (a(t4), !i(e4) && e4 !== null)
              throw TypeError("Can't set " + String(e4) + " as a prototype");
          };
        }, "./node_modules/core-js/internals/well-known-symbol.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/global.js"), a = n2("./node_modules/core-js/internals/shared.js"), r = n2("./node_modules/core-js/internals/uid.js"), o = n2("./node_modules/core-js/internals/native-symbol.js"), s = i.Symbol, l = a("wks");
          t3.exports = function(t4) {
            return l[t4] || (l[t4] = o && s[t4] || (o ? s : r)("Symbol." + t4));
          };
        }, "./node_modules/core-js/modules/es.array.from.js": function(t3, e3, n2) {
          var i = n2("./node_modules/core-js/internals/export.js"), a = n2("./node_modules/core-js/internals/array-from.js");
          i({ target: "Array", stat: true, forced: !n2("./node_modules/core-js/internals/check-correctness-of-iteration.js")(function(t4) {
            Array.from(t4);
          }) }, { from: a });
        }, "./node_modules/core-js/modules/es.string.iterator.js": function(t3, e3, n2) {
          "use strict";
          var i = n2("./node_modules/core-js/internals/string-at.js"), a = n2("./node_modules/core-js/internals/internal-state.js"), r = n2("./node_modules/core-js/internals/define-iterator.js"), o = "String Iterator", s = a.set, l = a.getterFor(o);
          r(String, "String", function(t4) {
            s(this, { type: o, string: String(t4), index: 0 });
          }, function() {
            var t4, e4 = l(this), n3 = e4.string, a2 = e4.index;
            return a2 >= n3.length ? { value: void 0, done: true } : (t4 = i(n3, a2, true), e4.index += t4.length, { value: t4, done: false });
          });
        }, "./node_modules/webpack/buildin/global.js": function(t3, e3) {
          var n2;
          n2 = function() {
            return this;
          }();
          try {
            n2 = n2 || Function("return this")() || (0, eval)("this");
          } catch (t4) {
            typeof window == "object" && (n2 = window);
          }
          t3.exports = n2;
        }, "./src/default-attrs.json": function(t3) {
          t3.exports = { xmlns: "http://www.w3.org/2000/svg", width: 24, height: 24, viewBox: "0 0 24 24", fill: "none", stroke: "currentColor", "stroke-width": 2, "stroke-linecap": "round", "stroke-linejoin": "round" };
        }, "./src/icon.js": function(t3, e3, n2) {
          "use strict";
          Object.defineProperty(e3, "__esModule", { value: true });
          var i = Object.assign || function(t4) {
            for (var e4 = 1; e4 < arguments.length; e4++) {
              var n3 = arguments[e4];
              for (var i2 in n3)
                Object.prototype.hasOwnProperty.call(n3, i2) && (t4[i2] = n3[i2]);
            }
            return t4;
          }, a = function() {
            function t4(t5, e4) {
              for (var n3 = 0; n3 < e4.length; n3++) {
                var i2 = e4[n3];
                i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t5, i2.key, i2);
              }
            }
            return function(e4, n3, i2) {
              return n3 && t4(e4.prototype, n3), i2 && t4(e4, i2), e4;
            };
          }(), r = s(n2("./node_modules/classnames/dedupe.js")), o = s(n2("./src/default-attrs.json"));
          function s(t4) {
            return t4 && t4.__esModule ? t4 : { default: t4 };
          }
          function l(t4, e4) {
            if (!(t4 instanceof e4))
              throw new TypeError("Cannot call a class as a function");
          }
          var c = function() {
            function t4(e4, n3) {
              var a2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : [];
              l(this, t4), this.name = e4, this.contents = n3, this.tags = a2, this.attrs = i({}, o.default, { class: "feather feather-" + e4 });
            }
            return a(t4, [{ key: "toSvg", value: function() {
              var t5 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, e4 = i({}, this.attrs, t5, { class: (0, r.default)(this.attrs.class, t5.class) });
              return "<svg " + d(e4) + ">" + this.contents + "</svg>";
            } }, { key: "toString", value: function() {
              return this.contents;
            } }]), t4;
          }();
          function d(t4) {
            return Object.keys(t4).map(function(e4) {
              return e4 + '="' + t4[e4] + '"';
            }).join(" ");
          }
          e3.default = c;
        }, "./src/icons.js": function(t3, e3, n2) {
          "use strict";
          Object.defineProperty(e3, "__esModule", { value: true });
          var i = o(n2("./src/icon.js")), a = o(n2("./dist/icons.json")), r = o(n2("./src/tags.json"));
          function o(t4) {
            return t4 && t4.__esModule ? t4 : { default: t4 };
          }
          e3.default = Object.keys(a.default).map(function(t4) {
            return new i.default(t4, a.default[t4], r.default[t4]);
          }).reduce(function(t4, e4) {
            return t4[e4.name] = e4, t4;
          }, {});
        }, "./src/index.js": function(t3, e3, n2) {
          "use strict";
          var i = o(n2("./src/icons.js")), a = o(n2("./src/to-svg.js")), r = o(n2("./src/replace.js"));
          function o(t4) {
            return t4 && t4.__esModule ? t4 : { default: t4 };
          }
          t3.exports = { icons: i.default, toSvg: a.default, replace: r.default };
        }, "./src/replace.js": function(t3, e3, n2) {
          "use strict";
          Object.defineProperty(e3, "__esModule", { value: true });
          var i = Object.assign || function(t4) {
            for (var e4 = 1; e4 < arguments.length; e4++) {
              var n3 = arguments[e4];
              for (var i2 in n3)
                Object.prototype.hasOwnProperty.call(n3, i2) && (t4[i2] = n3[i2]);
            }
            return t4;
          }, a = o(n2("./node_modules/classnames/dedupe.js")), r = o(n2("./src/icons.js"));
          function o(t4) {
            return t4 && t4.__esModule ? t4 : { default: t4 };
          }
          function s(t4) {
            var e4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, n3 = l(t4), o2 = n3["data-feather"];
            delete n3["data-feather"];
            var s2 = r.default[o2].toSvg(i({}, e4, n3, { class: (0, a.default)(e4.class, n3.class) })), c = new DOMParser().parseFromString(s2, "image/svg+xml"), d = c.querySelector("svg");
            t4.parentNode.replaceChild(d, t4);
          }
          function l(t4) {
            return Array.from(t4.attributes).reduce(function(t5, e4) {
              return t5[e4.name] = e4.value, t5;
            }, {});
          }
          e3.default = function() {
            var t4 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
            if (typeof document == "undefined")
              throw new Error("`feather.replace()` only works in a browser environment.");
            var e4 = document.querySelectorAll("[data-feather]");
            Array.from(e4).forEach(function(e5) {
              return s(e5, t4);
            });
          };
        }, "./src/tags.json": function(t3) {
          t3.exports = { activity: ["pulse", "health", "action", "motion"], airplay: ["stream", "cast", "mirroring"], "alert-circle": ["warning", "alert", "danger"], "alert-octagon": ["warning", "alert", "danger"], "alert-triangle": ["warning", "alert", "danger"], "align-center": ["text alignment", "center"], "align-justify": ["text alignment", "justified"], "align-left": ["text alignment", "left"], "align-right": ["text alignment", "right"], anchor: [], archive: ["index", "box"], "at-sign": ["mention", "at", "email", "message"], award: ["achievement", "badge"], aperture: ["camera", "photo"], "bar-chart": ["statistics", "diagram", "graph"], "bar-chart-2": ["statistics", "diagram", "graph"], battery: ["power", "electricity"], "battery-charging": ["power", "electricity"], bell: ["alarm", "notification", "sound"], "bell-off": ["alarm", "notification", "silent"], bluetooth: ["wireless"], "book-open": ["read", "library"], book: ["read", "dictionary", "booklet", "magazine", "library"], bookmark: ["read", "clip", "marker", "tag"], box: ["cube"], briefcase: ["work", "bag", "baggage", "folder"], calendar: ["date"], camera: ["photo"], cast: ["chromecast", "airplay"], circle: ["off", "zero", "record"], clipboard: ["copy"], clock: ["time", "watch", "alarm"], "cloud-drizzle": ["weather", "shower"], "cloud-lightning": ["weather", "bolt"], "cloud-rain": ["weather"], "cloud-snow": ["weather", "blizzard"], cloud: ["weather"], codepen: ["logo"], codesandbox: ["logo"], code: ["source", "programming"], coffee: ["drink", "cup", "mug", "tea", "cafe", "hot", "beverage"], columns: ["layout"], command: ["keyboard", "cmd", "terminal", "prompt"], compass: ["navigation", "safari", "travel", "direction"], copy: ["clone", "duplicate"], "corner-down-left": ["arrow", "return"], "corner-down-right": ["arrow"], "corner-left-down": ["arrow"], "corner-left-up": ["arrow"], "corner-right-down": ["arrow"], "corner-right-up": ["arrow"], "corner-up-left": ["arrow"], "corner-up-right": ["arrow"], cpu: ["processor", "technology"], "credit-card": ["purchase", "payment", "cc"], crop: ["photo", "image"], crosshair: ["aim", "target"], database: ["storage", "memory"], delete: ["remove"], disc: ["album", "cd", "dvd", "music"], "dollar-sign": ["currency", "money", "payment"], droplet: ["water"], edit: ["pencil", "change"], "edit-2": ["pencil", "change"], "edit-3": ["pencil", "change"], eye: ["view", "watch"], "eye-off": ["view", "watch", "hide", "hidden"], "external-link": ["outbound"], facebook: ["logo", "social"], "fast-forward": ["music"], figma: ["logo", "design", "tool"], "file-minus": ["delete", "remove", "erase"], "file-plus": ["add", "create", "new"], "file-text": ["data", "txt", "pdf"], film: ["movie", "video"], filter: ["funnel", "hopper"], flag: ["report"], "folder-minus": ["directory"], "folder-plus": ["directory"], folder: ["directory"], framer: ["logo", "design", "tool"], frown: ["emoji", "face", "bad", "sad", "emotion"], gift: ["present", "box", "birthday", "party"], "git-branch": ["code", "version control"], "git-commit": ["code", "version control"], "git-merge": ["code", "version control"], "git-pull-request": ["code", "version control"], github: ["logo", "version control"], gitlab: ["logo", "version control"], globe: ["world", "browser", "language", "translate"], "hard-drive": ["computer", "server", "memory", "data"], hash: ["hashtag", "number", "pound"], headphones: ["music", "audio", "sound"], heart: ["like", "love", "emotion"], "help-circle": ["question mark"], hexagon: ["shape", "node.js", "logo"], home: ["house", "living"], image: ["picture"], inbox: ["email"], instagram: ["logo", "camera"], key: ["password", "login", "authentication", "secure"], layers: ["stack"], layout: ["window", "webpage"], "life-bouy": ["help", "life ring", "support"], link: ["chain", "url"], "link-2": ["chain", "url"], linkedin: ["logo", "social media"], list: ["options"], lock: ["security", "password", "secure"], "log-in": ["sign in", "arrow", "enter"], "log-out": ["sign out", "arrow", "exit"], mail: ["email", "message"], "map-pin": ["location", "navigation", "travel", "marker"], map: ["location", "navigation", "travel"], maximize: ["fullscreen"], "maximize-2": ["fullscreen", "arrows", "expand"], meh: ["emoji", "face", "neutral", "emotion"], menu: ["bars", "navigation", "hamburger"], "message-circle": ["comment", "chat"], "message-square": ["comment", "chat"], "mic-off": ["record", "sound", "mute"], mic: ["record", "sound", "listen"], minimize: ["exit fullscreen", "close"], "minimize-2": ["exit fullscreen", "arrows", "close"], minus: ["subtract"], monitor: ["tv", "screen", "display"], moon: ["dark", "night"], "more-horizontal": ["ellipsis"], "more-vertical": ["ellipsis"], "mouse-pointer": ["arrow", "cursor"], move: ["arrows"], music: ["note"], navigation: ["location", "travel"], "navigation-2": ["location", "travel"], octagon: ["stop"], package: ["box", "container"], paperclip: ["attachment"], pause: ["music", "stop"], "pause-circle": ["music", "audio", "stop"], "pen-tool": ["vector", "drawing"], percent: ["discount"], "phone-call": ["ring"], "phone-forwarded": ["call"], "phone-incoming": ["call"], "phone-missed": ["call"], "phone-off": ["call", "mute"], "phone-outgoing": ["call"], phone: ["call"], play: ["music", "start"], "pie-chart": ["statistics", "diagram"], "play-circle": ["music", "start"], plus: ["add", "new"], "plus-circle": ["add", "new"], "plus-square": ["add", "new"], pocket: ["logo", "save"], power: ["on", "off"], printer: ["fax", "office", "device"], radio: ["signal"], "refresh-cw": ["synchronise", "arrows"], "refresh-ccw": ["arrows"], repeat: ["loop", "arrows"], rewind: ["music"], "rotate-ccw": ["arrow"], "rotate-cw": ["arrow"], rss: ["feed", "subscribe"], save: ["floppy disk"], scissors: ["cut"], search: ["find", "magnifier", "magnifying glass"], send: ["message", "mail", "email", "paper airplane", "paper aeroplane"], settings: ["cog", "edit", "gear", "preferences"], "share-2": ["network", "connections"], shield: ["security", "secure"], "shield-off": ["security", "insecure"], "shopping-bag": ["ecommerce", "cart", "purchase", "store"], "shopping-cart": ["ecommerce", "cart", "purchase", "store"], shuffle: ["music"], "skip-back": ["music"], "skip-forward": ["music"], slack: ["logo"], slash: ["ban", "no"], sliders: ["settings", "controls"], smartphone: ["cellphone", "device"], smile: ["emoji", "face", "happy", "good", "emotion"], speaker: ["audio", "music"], star: ["bookmark", "favorite", "like"], "stop-circle": ["media", "music"], sun: ["brightness", "weather", "light"], sunrise: ["weather", "time", "morning", "day"], sunset: ["weather", "time", "evening", "night"], tablet: ["device"], tag: ["label"], target: ["logo", "bullseye"], terminal: ["code", "command line", "prompt"], thermometer: ["temperature", "celsius", "fahrenheit", "weather"], "thumbs-down": ["dislike", "bad", "emotion"], "thumbs-up": ["like", "good", "emotion"], "toggle-left": ["on", "off", "switch"], "toggle-right": ["on", "off", "switch"], tool: ["settings", "spanner"], trash: ["garbage", "delete", "remove", "bin"], "trash-2": ["garbage", "delete", "remove", "bin"], triangle: ["delta"], truck: ["delivery", "van", "shipping", "transport", "lorry"], tv: ["television", "stream"], twitch: ["logo"], twitter: ["logo", "social"], type: ["text"], umbrella: ["rain", "weather"], unlock: ["security"], "user-check": ["followed", "subscribed"], "user-minus": ["delete", "remove", "unfollow", "unsubscribe"], "user-plus": ["new", "add", "create", "follow", "subscribe"], "user-x": ["delete", "remove", "unfollow", "unsubscribe", "unavailable"], user: ["person", "account"], users: ["group"], "video-off": ["camera", "movie", "film"], video: ["camera", "movie", "film"], voicemail: ["phone"], volume: ["music", "sound", "mute"], "volume-1": ["music", "sound"], "volume-2": ["music", "sound"], "volume-x": ["music", "sound", "mute"], watch: ["clock", "time"], "wifi-off": ["disabled"], wifi: ["connection", "signal", "wireless"], wind: ["weather", "air"], "x-circle": ["cancel", "close", "delete", "remove", "times", "clear"], "x-octagon": ["delete", "stop", "alert", "warning", "times", "clear"], "x-square": ["cancel", "close", "delete", "remove", "times", "clear"], x: ["cancel", "close", "delete", "remove", "times", "clear"], youtube: ["logo", "video", "play"], "zap-off": ["flash", "camera", "lightning"], zap: ["flash", "camera", "lightning"], "zoom-in": ["magnifying glass"], "zoom-out": ["magnifying glass"] };
        }, "./src/to-svg.js": function(t3, e3, n2) {
          "use strict";
          Object.defineProperty(e3, "__esModule", { value: true });
          var i, a = n2("./src/icons.js"), r = (i = a) && i.__esModule ? i : { default: i };
          e3.default = function(t4) {
            var e4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
            if (console.warn("feather.toSvg() is deprecated. Please use feather.icons[name].toSvg() instead."), !t4)
              throw new Error("The required `key` (icon name) parameter is missing.");
            if (!r.default[t4])
              throw new Error("No icon matching '" + t4 + "'. See the complete list of icons at https://feathericons.com");
            return r.default[t4].toSvg(e4);
          };
        }, 0: function(t3, e3, n2) {
          n2("./node_modules/core-js/es/array/from.js"), t3.exports = n2("./src/index.js");
        } });
      }, t2.exports = e2();
    }, 6145: function(t2, e2, n2) {
      var i, a, r, o = o || {};
      o.scope = {}, o.findInternal = function(t3, e3, n3) {
        t3 instanceof String && (t3 = String(t3));
        for (var i2 = t3.length, a2 = 0; a2 < i2; a2++) {
          var r2 = t3[a2];
          if (e3.call(n3, r2, a2, t3))
            return { i: a2, v: r2 };
        }
        return { i: -1, v: void 0 };
      }, o.ASSUME_ES5 = false, o.ASSUME_NO_NATIVE_MAP = false, o.ASSUME_NO_NATIVE_SET = false, o.SIMPLE_FROUND_POLYFILL = false, o.defineProperty = o.ASSUME_ES5 || typeof Object.defineProperties == "function" ? Object.defineProperty : function(t3, e3, n3) {
        t3 != Array.prototype && t3 != Object.prototype && (t3[e3] = n3.value);
      }, o.getGlobal = function(t3) {
        return typeof window != "undefined" && window === t3 ? t3 : n2.g !== void 0 && n2.g != null ? n2.g : t3;
      }, o.global = o.getGlobal(this), o.polyfill = function(t3, e3, n3, i2) {
        if (e3) {
          for (n3 = o.global, t3 = t3.split("."), i2 = 0; i2 < t3.length - 1; i2++) {
            var a2 = t3[i2];
            a2 in n3 || (n3[a2] = {}), n3 = n3[a2];
          }
          (e3 = e3(i2 = n3[t3 = t3[t3.length - 1]])) != i2 && e3 != null && o.defineProperty(n3, t3, { configurable: true, writable: true, value: e3 });
        }
      }, o.polyfill("Array.prototype.find", function(t3) {
        return t3 || function(t4, e3) {
          return o.findInternal(this, t4, e3).v;
        };
      }, "es6", "es3"), window.jQuery, window.Zepto, a = [n2(8942)], i = function(t3) {
        var e3 = function(e4, n4, i3) {
          var a3 = { invalid: [], getCaret: function() {
            try {
              var t4 = 0, n5 = e4.get(0), i4 = document.selection, r3 = n5.selectionStart;
              if (i4 && navigator.appVersion.indexOf("MSIE 10") === -1) {
                var o3 = i4.createRange();
                o3.moveStart("character", -a3.val().length), t4 = o3.text.length;
              } else
                (r3 || r3 === "0") && (t4 = r3);
              return t4;
            } catch (t5) {
            }
          }, setCaret: function(t4) {
            try {
              if (e4.is(":focus")) {
                var n5 = e4.get(0);
                if (n5.setSelectionRange)
                  n5.setSelectionRange(t4, t4);
                else {
                  var i4 = n5.createTextRange();
                  i4.collapse(true), i4.moveEnd("character", t4), i4.moveStart("character", t4), i4.select();
                }
              }
            } catch (t5) {
            }
          }, events: function() {
            e4.on("keydown.mask", function(t4) {
              e4.data("mask-keycode", t4.keyCode || t4.which), e4.data("mask-previus-value", e4.val()), e4.data("mask-previus-caret-pos", a3.getCaret()), a3.maskDigitPosMapOld = a3.maskDigitPosMap;
            }).on(t3.jMaskGlobals.useInput ? "input.mask" : "keyup.mask", a3.behaviour).on("paste.mask drop.mask", function() {
              setTimeout(function() {
                e4.keydown().keyup();
              }, 100);
            }).on("change.mask", function() {
              e4.data("changed", true);
            }).on("blur.mask", function() {
              s === a3.val() || e4.data("changed") || e4.trigger("change"), e4.data("changed", false);
            }).on("blur.mask", function() {
              s = a3.val();
            }).on("focus.mask", function(e5) {
              i3.selectOnFocus === true && t3(e5.target).select();
            }).on("focusout.mask", function() {
              i3.clearIfNotMatch && !r2.test(a3.val()) && a3.val("");
            });
          }, getRegexMask: function() {
            for (var t4, e5, i4, a4, r3 = [], s2 = 0; s2 < n4.length; s2++)
              (t4 = o2.translation[n4.charAt(s2)]) ? (e5 = t4.pattern.toString().replace(/.{1}$|^.{1}/g, ""), i4 = t4.optional, (t4 = t4.recursive) ? (r3.push(n4.charAt(s2)), a4 = { digit: n4.charAt(s2), pattern: e5 }) : r3.push(i4 || t4 ? e5 + "?" : e5)) : r3.push(n4.charAt(s2).replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"));
            return r3 = r3.join(""), a4 && (r3 = r3.replace(new RegExp("(" + a4.digit + "(.*" + a4.digit + ")?)"), "($1)?").replace(new RegExp(a4.digit, "g"), a4.pattern)), new RegExp(r3);
          }, destroyEvents: function() {
            e4.off("input keydown keyup paste drop blur focusout ".split(" ").join(".mask "));
          }, val: function(t4) {
            var n5 = e4.is("input") ? "val" : "text";
            return 0 < arguments.length ? (e4[n5]() !== t4 && e4[n5](t4), n5 = e4) : n5 = e4[n5](), n5;
          }, calculateCaretPosition: function(t4) {
            var n5 = a3.getMasked(), i4 = a3.getCaret();
            if (t4 !== n5) {
              var r3 = e4.data("mask-previus-caret-pos") || 0;
              n5 = n5.length;
              var o3, s2 = t4.length, l = t4 = 0, c = 0, d = 0;
              for (o3 = i4; o3 < n5 && a3.maskDigitPosMap[o3]; o3++)
                l++;
              for (o3 = i4 - 1; 0 <= o3 && a3.maskDigitPosMap[o3]; o3--)
                t4++;
              for (o3 = i4 - 1; 0 <= o3; o3--)
                a3.maskDigitPosMap[o3] && c++;
              for (o3 = r3 - 1; 0 <= o3; o3--)
                a3.maskDigitPosMapOld[o3] && d++;
              i4 > s2 ? i4 = 10 * n5 : r3 >= i4 && r3 !== s2 ? a3.maskDigitPosMapOld[i4] || (r3 = i4, i4 = i4 - (d - c) - t4, a3.maskDigitPosMap[i4] && (i4 = r3)) : i4 > r3 && (i4 = i4 + (c - d) + l);
            }
            return i4;
          }, behaviour: function(n5) {
            n5 = n5 || window.event, a3.invalid = [];
            var i4 = e4.data("mask-keycode");
            if (t3.inArray(i4, o2.byPassKeys) === -1) {
              i4 = a3.getMasked();
              var r3 = a3.getCaret(), s2 = e4.data("mask-previus-value") || "";
              return setTimeout(function() {
                a3.setCaret(a3.calculateCaretPosition(s2));
              }, t3.jMaskGlobals.keyStrokeCompensation), a3.val(i4), a3.setCaret(r3), a3.callbacks(n5);
            }
          }, getMasked: function(t4, e5) {
            var r3, s2 = [], l = e5 === void 0 ? a3.val() : e5 + "", c = 0, d = n4.length, u = 0, h = l.length, p = 1, f = "push", g = -1, m = 0;
            if (e5 = [], i3.reverse) {
              f = "unshift", p = -1;
              var v = 0;
              c = d - 1, u = h - 1;
              var b = function() {
                return -1 < c && -1 < u;
              };
            } else
              v = d - 1, b = function() {
                return c < d && u < h;
              };
            for (; b(); ) {
              var y = n4.charAt(c), x = l.charAt(u), _ = o2.translation[y];
              _ ? (x.match(_.pattern) ? (s2[f](x), _.recursive && (g === -1 ? g = c : c === v && c !== g && (c = g - p), v === g && (c -= p)), c += p) : x === r3 ? (m--, r3 = void 0) : _.optional ? (c += p, u -= p) : _.fallback ? (s2[f](_.fallback), c += p, u -= p) : a3.invalid.push({ p: u, v: x, e: _.pattern }), u += p) : (t4 || s2[f](y), x === y ? (e5.push(u), u += p) : (r3 = y, e5.push(u + m), m++), c += p);
            }
            return t4 = n4.charAt(v), d !== h + 1 || o2.translation[t4] || s2.push(t4), s2 = s2.join(""), a3.mapMaskdigitPositions(s2, e5, h), s2;
          }, mapMaskdigitPositions: function(t4, e5, n5) {
            for (t4 = i3.reverse ? t4.length - n5 : 0, a3.maskDigitPosMap = {}, n5 = 0; n5 < e5.length; n5++)
              a3.maskDigitPosMap[e5[n5] + t4] = 1;
          }, callbacks: function(t4) {
            var r3 = a3.val(), o3 = r3 !== s, l = [r3, t4, e4, i3], c = function(t5, e5, n5) {
              typeof i3[t5] == "function" && e5 && i3[t5].apply(this, n5);
            };
            c("onChange", o3 === true, l), c("onKeyPress", o3 === true, l), c("onComplete", r3.length === n4.length, l), c("onInvalid", 0 < a3.invalid.length, [r3, t4, e4, a3.invalid, i3]);
          } };
          e4 = t3(e4);
          var r2, o2 = this, s = a3.val();
          n4 = typeof n4 == "function" ? n4(a3.val(), void 0, e4, i3) : n4, o2.mask = n4, o2.options = i3, o2.remove = function() {
            var t4 = a3.getCaret();
            return o2.options.placeholder && e4.removeAttr("placeholder"), e4.data("mask-maxlength") && e4.removeAttr("maxlength"), a3.destroyEvents(), a3.val(o2.getCleanVal()), a3.setCaret(t4), e4;
          }, o2.getCleanVal = function() {
            return a3.getMasked(true);
          }, o2.getMaskedVal = function(t4) {
            return a3.getMasked(false, t4);
          }, o2.init = function(s2) {
            if (s2 = s2 || false, i3 = i3 || {}, o2.clearIfNotMatch = t3.jMaskGlobals.clearIfNotMatch, o2.byPassKeys = t3.jMaskGlobals.byPassKeys, o2.translation = t3.extend({}, t3.jMaskGlobals.translation, i3.translation), o2 = t3.extend(true, {}, o2, i3), r2 = a3.getRegexMask(), s2)
              a3.events(), a3.val(a3.getMasked());
            else {
              i3.placeholder && e4.attr("placeholder", i3.placeholder), e4.data("mask") && e4.attr("autocomplete", "off"), s2 = 0;
              for (var l = true; s2 < n4.length; s2++) {
                var c = o2.translation[n4.charAt(s2)];
                if (c && c.recursive) {
                  l = false;
                  break;
                }
              }
              l && e4.attr("maxlength", n4.length).data("mask-maxlength", true), a3.destroyEvents(), a3.events(), s2 = a3.getCaret(), a3.val(a3.getMasked()), a3.setCaret(s2);
            }
          }, o2.init(!e4.is("input"));
        };
        t3.maskWatchers = {};
        var n3 = function() {
          var n4 = t3(this), a3 = {}, r2 = n4.attr("data-mask");
          if (n4.attr("data-mask-reverse") && (a3.reverse = true), n4.attr("data-mask-clearifnotmatch") && (a3.clearIfNotMatch = true), n4.attr("data-mask-selectonfocus") === "true" && (a3.selectOnFocus = true), i2(n4, r2, a3))
            return n4.data("mask", new e3(this, r2, a3));
        }, i2 = function(e4, n4, i3) {
          i3 = i3 || {};
          var a3 = t3(e4).data("mask"), r2 = JSON.stringify;
          e4 = t3(e4).val() || t3(e4).text();
          try {
            return typeof n4 == "function" && (n4 = n4(e4)), typeof a3 != "object" || r2(a3.options) !== r2(i3) || a3.mask !== n4;
          } catch (t4) {
          }
        }, a2 = function(t4) {
          var e4 = document.createElement("div"), n4 = (t4 = "on" + t4) in e4;
          return n4 || (e4.setAttribute(t4, "return;"), n4 = typeof e4[t4] == "function"), n4;
        };
        t3.fn.mask = function(n4, a3) {
          a3 = a3 || {};
          var r2 = this.selector, o2 = t3.jMaskGlobals, s = o2.watchInterval;
          o2 = a3.watchInputs || o2.watchInputs;
          var l = function() {
            if (i2(this, n4, a3))
              return t3(this).data("mask", new e3(this, n4, a3));
          };
          return t3(this).each(l), r2 && r2 !== "" && o2 && (clearInterval(t3.maskWatchers[r2]), t3.maskWatchers[r2] = setInterval(function() {
            t3(document).find(r2).each(l);
          }, s)), this;
        }, t3.fn.masked = function(t4) {
          return this.data("mask").getMaskedVal(t4);
        }, t3.fn.unmask = function() {
          return clearInterval(t3.maskWatchers[this.selector]), delete t3.maskWatchers[this.selector], this.each(function() {
            var e4 = t3(this).data("mask");
            e4 && e4.remove().removeData("mask");
          });
        }, t3.fn.cleanVal = function() {
          return this.data("mask").getCleanVal();
        }, t3.applyDataMask = function(e4) {
          ((e4 = e4 || t3.jMaskGlobals.maskElements) instanceof t3 ? e4 : t3(e4)).filter(t3.jMaskGlobals.dataMaskAttr).each(n3);
        }, a2 = { maskElements: "input,td,span,div", dataMaskAttr: "*[data-mask]", dataMask: true, watchInterval: 300, watchInputs: true, keyStrokeCompensation: 10, useInput: !/Chrome\/[2-4][0-9]|SamsungBrowser/.test(window.navigator.userAgent) && a2("input"), watchDataMask: false, byPassKeys: [9, 16, 17, 18, 36, 37, 38, 39, 40, 91], translation: { 0: { pattern: /\d/ }, 9: { pattern: /\d/, optional: true }, "#": { pattern: /\d/, recursive: true }, A: { pattern: /[a-zA-Z0-9]/ }, S: { pattern: /[a-zA-Z]/ } } }, t3.jMaskGlobals = t3.jMaskGlobals || {}, (a2 = t3.jMaskGlobals = t3.extend(true, {}, a2, t3.jMaskGlobals)).dataMask && t3.applyDataMask(), setInterval(function() {
          t3.jMaskGlobals.watchDataMask && t3.applyDataMask();
        }, a2.watchInterval);
      }, (r = typeof i == "function" ? i.apply(e2, a) : i) === void 0 || (t2.exports = r);
    }, 9165: function(t2, e2, n2) {
      var i, a, r;
      a = [n2(8942), n2(3587)], (r = typeof (i = function(t3) {
        return function() {
          function e3(t4) {
            return t4.replace(/<.[^<>]*?>/g, " ").replace(/&nbsp;|&#160;/gi, " ").replace(/[.(),;:!?%#$'\"_+=\/\-“”’]*/g, "");
          }
          t3.validator.addMethod("maxWords", function(t4, n3, i2) {
            return this.optional(n3) || e3(t4).match(/\b\w+\b/g).length <= i2;
          }, t3.validator.format("Please enter {0} words or less.")), t3.validator.addMethod("minWords", function(t4, n3, i2) {
            return this.optional(n3) || e3(t4).match(/\b\w+\b/g).length >= i2;
          }, t3.validator.format("Please enter at least {0} words.")), t3.validator.addMethod("rangeWords", function(t4, n3, i2) {
            var a2 = e3(t4), r2 = /\b\w+\b/g;
            return this.optional(n3) || a2.match(r2).length >= i2[0] && a2.match(r2).length <= i2[1];
          }, t3.validator.format("Please enter between {0} and {1} words."));
        }(), t3.validator.addMethod("abaRoutingNumber", function(t4) {
          var e3 = 0, n3 = t4.split(""), i2 = n3.length;
          if (i2 !== 9)
            return false;
          for (var a2 = 0; a2 < i2; a2 += 3)
            e3 += 3 * parseInt(n3[a2], 10) + 7 * parseInt(n3[a2 + 1], 10) + parseInt(n3[a2 + 2], 10);
          return e3 !== 0 && e3 % 10 == 0;
        }, "Please enter a valid routing number."), t3.validator.addMethod("accept", function(e3, n3, i2) {
          var a2, r2, o = typeof i2 == "string" ? i2.replace(/\s/g, "") : "image/*", s = this.optional(n3);
          if (s)
            return s;
          if (t3(n3).attr("type") === "file" && (o = o.replace(/[\-\[\]\/\{\}\(\)\+\?\.\\\^\$\|]/g, "\\$&").replace(/,/g, "|").replace(/\/\*/g, "/.*"), n3.files && n3.files.length)) {
            for (r2 = new RegExp(".?(" + o + ")$", "i"), a2 = 0; a2 < n3.files.length; a2++)
              if (!n3.files[a2].type.match(r2))
                return false;
          }
          return true;
        }, t3.validator.format("Please enter a value with a valid mimetype.")), t3.validator.addMethod("alphanumeric", function(t4, e3) {
          return this.optional(e3) || /^\w+$/i.test(t4);
        }, "Letters, numbers, and underscores only please"), t3.validator.addMethod("bankaccountNL", function(t4, e3) {
          if (this.optional(e3))
            return true;
          if (!/^[0-9]{9}|([0-9]{2} ){3}[0-9]{3}$/.test(t4))
            return false;
          var n3, i2 = t4.replace(/ /g, ""), a2 = 0, r2 = i2.length;
          for (n3 = 0; n3 < r2; n3++)
            a2 += (r2 - n3) * i2.substring(n3, n3 + 1);
          return a2 % 11 == 0;
        }, "Please specify a valid bank account number"), t3.validator.addMethod("bankorgiroaccountNL", function(e3, n3) {
          return this.optional(n3) || t3.validator.methods.bankaccountNL.call(this, e3, n3) || t3.validator.methods.giroaccountNL.call(this, e3, n3);
        }, "Please specify a valid bank or giro account number"), t3.validator.addMethod("bic", function(t4, e3) {
          return this.optional(e3) || /^([A-Z]{6}[A-Z2-9][A-NP-Z1-9])(X{3}|[A-WY-Z0-9][A-Z0-9]{2})?$/.test(t4.toUpperCase());
        }, "Please specify a valid BIC code"), t3.validator.addMethod("cifES", function(t4, e3) {
          "use strict";
          if (this.optional(e3))
            return true;
          var n3, i2, a2, r2, o = new RegExp(/^([ABCDEFGHJKLMNPQRSUVW])(\d{7})([0-9A-J])$/gi), s = t4.substring(0, 1), l = t4.substring(1, 8), c = t4.substring(8, 9), d = 0, u = 0;
          function h(t5) {
            return t5 % 2 == 0;
          }
          if (t4.length !== 9 || !o.test(t4))
            return false;
          for (n3 = 0; n3 < l.length; n3++)
            i2 = parseInt(l[n3], 10), h(n3) ? u += (i2 *= 2) < 10 ? i2 : i2 - 9 : d += i2;
          return a2 = (10 - (d + u).toString().substr(-1)).toString(), a2 = parseInt(a2, 10) > 9 ? "0" : a2, r2 = "JABCDEFGHI".substr(a2, 1).toString(), s.match(/[ABEH]/) ? c === a2 : s.match(/[KPQS]/) ? c === r2 : c === a2 || c === r2;
        }, "Please specify a valid CIF number."), t3.validator.addMethod("cnhBR", function(t4) {
          if ((t4 = t4.replace(/([~!@#$%^&*()_+=`{}\[\]\-|\\:;'<>,.\/? ])+/g, "")).length !== 11)
            return false;
          var e3, n3, i2, a2, r2, o = 0, s = 0;
          if (e3 = t4.charAt(0), new Array(12).join(e3) === t4)
            return false;
          for (a2 = 0, r2 = 9; a2 < 9; ++a2, --r2)
            o += +t4.charAt(a2) * r2;
          for ((n3 = o % 11) >= 10 && (n3 = 0, s = 2), o = 0, a2 = 0, r2 = 1; a2 < 9; ++a2, ++r2)
            o += +t4.charAt(a2) * r2;
          return (i2 = o % 11) >= 10 ? i2 = 0 : i2 -= s, String(n3).concat(i2) === t4.substr(-2);
        }, "Please specify a valid CNH number"), t3.validator.addMethod("cnpjBR", function(t4, e3) {
          "use strict";
          if (this.optional(e3))
            return true;
          if ((t4 = t4.replace(/[^\d]+/g, "")).length !== 14)
            return false;
          if (t4 === "00000000000000" || t4 === "11111111111111" || t4 === "22222222222222" || t4 === "33333333333333" || t4 === "44444444444444" || t4 === "55555555555555" || t4 === "66666666666666" || t4 === "77777777777777" || t4 === "88888888888888" || t4 === "99999999999999")
            return false;
          for (var n3 = t4.length - 2, i2 = t4.substring(0, n3), a2 = t4.substring(n3), r2 = 0, o = n3 - 7, s = n3; s >= 1; s--)
            r2 += i2.charAt(n3 - s) * o--, o < 2 && (o = 9);
          var l = r2 % 11 < 2 ? 0 : 11 - r2 % 11;
          if (l !== parseInt(a2.charAt(0), 10))
            return false;
          n3 += 1, i2 = t4.substring(0, n3), r2 = 0, o = n3 - 7;
          for (var c = n3; c >= 1; c--)
            r2 += i2.charAt(n3 - c) * o--, o < 2 && (o = 9);
          return (l = r2 % 11 < 2 ? 0 : 11 - r2 % 11) === parseInt(a2.charAt(1), 10);
        }, "Please specify a CNPJ value number"), t3.validator.addMethod("cpfBR", function(t4, e3) {
          "use strict";
          if (this.optional(e3))
            return true;
          if ((t4 = t4.replace(/([~!@#$%^&*()_+=`{}\[\]\-|\\:;'<>,.\/? ])+/g, "")).length !== 11)
            return false;
          var n3, i2, a2, r2, o = 0;
          if (n3 = parseInt(t4.substring(9, 10), 10), i2 = parseInt(t4.substring(10, 11), 10), a2 = function(t5, e4) {
            var n4 = 10 * t5 % 11;
            return n4 !== 10 && n4 !== 11 || (n4 = 0), n4 === e4;
          }, t4 === "" || t4 === "00000000000" || t4 === "11111111111" || t4 === "22222222222" || t4 === "33333333333" || t4 === "44444444444" || t4 === "55555555555" || t4 === "66666666666" || t4 === "77777777777" || t4 === "88888888888" || t4 === "99999999999")
            return false;
          for (r2 = 1; r2 <= 9; r2++)
            o += parseInt(t4.substring(r2 - 1, r2), 10) * (11 - r2);
          if (a2(o, n3)) {
            for (o = 0, r2 = 1; r2 <= 10; r2++)
              o += parseInt(t4.substring(r2 - 1, r2), 10) * (12 - r2);
            return a2(o, i2);
          }
          return false;
        }, "Please specify a valid CPF number"), t3.validator.addMethod("creditcard", function(t4, e3) {
          if (this.optional(e3))
            return "dependency-mismatch";
          if (/[^0-9 \-]+/.test(t4))
            return false;
          var n3, i2, a2 = 0, r2 = 0, o = false;
          if ((t4 = t4.replace(/\D/g, "")).length < 13 || t4.length > 19)
            return false;
          for (n3 = t4.length - 1; n3 >= 0; n3--)
            i2 = t4.charAt(n3), r2 = parseInt(i2, 10), o && (r2 *= 2) > 9 && (r2 -= 9), a2 += r2, o = !o;
          return a2 % 10 == 0;
        }, "Please enter a valid credit card number."), t3.validator.addMethod("creditcardtypes", function(t4, e3, n3) {
          if (/[^0-9\-]+/.test(t4))
            return false;
          t4 = t4.replace(/\D/g, "");
          var i2 = 0;
          return n3.mastercard && (i2 |= 1), n3.visa && (i2 |= 2), n3.amex && (i2 |= 4), n3.dinersclub && (i2 |= 8), n3.enroute && (i2 |= 16), n3.discover && (i2 |= 32), n3.jcb && (i2 |= 64), n3.unknown && (i2 |= 128), n3.all && (i2 = 255), 1 & i2 && (/^(5[12345])/.test(t4) || /^(2[234567])/.test(t4)) || 2 & i2 && /^(4)/.test(t4) ? t4.length === 16 : 4 & i2 && /^(3[47])/.test(t4) ? t4.length === 15 : 8 & i2 && /^(3(0[012345]|[68]))/.test(t4) ? t4.length === 14 : 16 & i2 && /^(2(014|149))/.test(t4) ? t4.length === 15 : 32 & i2 && /^(6011)/.test(t4) || 64 & i2 && /^(3)/.test(t4) ? t4.length === 16 : 64 & i2 && /^(2131|1800)/.test(t4) ? t4.length === 15 : !!(128 & i2);
        }, "Please enter a valid credit card number."), t3.validator.addMethod("currency", function(t4, e3, n3) {
          var i2, a2 = typeof n3 == "string", r2 = a2 ? n3 : n3[0], o = !!a2 || n3[1];
          return r2 = r2.replace(/,/g, ""), i2 = "^[" + (r2 = o ? r2 + "]" : r2 + "]?") + "([1-9]{1}[0-9]{0,2}(\\,[0-9]{3})*(\\.[0-9]{0,2})?|[1-9]{1}[0-9]{0,}(\\.[0-9]{0,2})?|0(\\.[0-9]{0,2})?|(\\.[0-9]{1,2})?)$", i2 = new RegExp(i2), this.optional(e3) || i2.test(t4);
        }, "Please specify a valid currency"), t3.validator.addMethod("dateFA", function(t4, e3) {
          return this.optional(e3) || /^[1-4]\d{3}\/((0?[1-6]\/((3[0-1])|([1-2][0-9])|(0?[1-9])))|((1[0-2]|(0?[7-9]))\/(30|([1-2][0-9])|(0?[1-9]))))$/.test(t4);
        }, t3.validator.messages.date), t3.validator.addMethod("dateITA", function(t4, e3) {
          var n3, i2, a2, r2, o, s = false;
          return /^\d{1,2}\/\d{1,2}\/\d{4}$/.test(t4) ? (n3 = t4.split("/"), i2 = parseInt(n3[0], 10), a2 = parseInt(n3[1], 10), r2 = parseInt(n3[2], 10), s = (o = new Date(Date.UTC(r2, a2 - 1, i2, 12, 0, 0, 0))).getUTCFullYear() === r2 && o.getUTCMonth() === a2 - 1 && o.getUTCDate() === i2) : s = false, this.optional(e3) || s;
        }, t3.validator.messages.date), t3.validator.addMethod("dateNL", function(t4, e3) {
          return this.optional(e3) || /^(0?[1-9]|[12]\d|3[01])[\.\/\-](0?[1-9]|1[012])[\.\/\-]([12]\d)?(\d\d)$/.test(t4);
        }, t3.validator.messages.date), t3.validator.addMethod("extension", function(t4, e3, n3) {
          return n3 = typeof n3 == "string" ? n3.replace(/,/g, "|") : "png|jpe?g|gif", this.optional(e3) || t4.match(new RegExp("\\.(" + n3 + ")$", "i"));
        }, t3.validator.format("Please enter a value with a valid extension.")), t3.validator.addMethod("giroaccountNL", function(t4, e3) {
          return this.optional(e3) || /^[0-9]{1,7}$/.test(t4);
        }, "Please specify a valid giro account number"), t3.validator.addMethod("greaterThan", function(e3, n3, i2) {
          var a2 = t3(i2);
          return this.settings.onfocusout && a2.not(".validate-greaterThan-blur").length && a2.addClass("validate-greaterThan-blur").on("blur.validate-greaterThan", function() {
            t3(n3).valid();
          }), e3 > a2.val();
        }, "Please enter a greater value."), t3.validator.addMethod("greaterThanEqual", function(e3, n3, i2) {
          var a2 = t3(i2);
          return this.settings.onfocusout && a2.not(".validate-greaterThanEqual-blur").length && a2.addClass("validate-greaterThanEqual-blur").on("blur.validate-greaterThanEqual", function() {
            t3(n3).valid();
          }), e3 >= a2.val();
        }, "Please enter a greater value."), t3.validator.addMethod("iban", function(t4, e3) {
          if (this.optional(e3))
            return true;
          var n3, i2, a2, r2, o, s = t4.replace(/ /g, "").toUpperCase(), l = "", c = true, d = "", u = 5;
          if (s.length < u)
            return false;
          if ((a2 = { AL: "\\d{8}[\\dA-Z]{16}", AD: "\\d{8}[\\dA-Z]{12}", AT: "\\d{16}", AZ: "[\\dA-Z]{4}\\d{20}", BE: "\\d{12}", BH: "[A-Z]{4}[\\dA-Z]{14}", BA: "\\d{16}", BR: "\\d{23}[A-Z][\\dA-Z]", BG: "[A-Z]{4}\\d{6}[\\dA-Z]{8}", CR: "\\d{17}", HR: "\\d{17}", CY: "\\d{8}[\\dA-Z]{16}", CZ: "\\d{20}", DK: "\\d{14}", DO: "[A-Z]{4}\\d{20}", EE: "\\d{16}", FO: "\\d{14}", FI: "\\d{14}", FR: "\\d{10}[\\dA-Z]{11}\\d{2}", GE: "[\\dA-Z]{2}\\d{16}", DE: "\\d{18}", GI: "[A-Z]{4}[\\dA-Z]{15}", GR: "\\d{7}[\\dA-Z]{16}", GL: "\\d{14}", GT: "[\\dA-Z]{4}[\\dA-Z]{20}", HU: "\\d{24}", IS: "\\d{22}", IE: "[\\dA-Z]{4}\\d{14}", IL: "\\d{19}", IT: "[A-Z]\\d{10}[\\dA-Z]{12}", KZ: "\\d{3}[\\dA-Z]{13}", KW: "[A-Z]{4}[\\dA-Z]{22}", LV: "[A-Z]{4}[\\dA-Z]{13}", LB: "\\d{4}[\\dA-Z]{20}", LI: "\\d{5}[\\dA-Z]{12}", LT: "\\d{16}", LU: "\\d{3}[\\dA-Z]{13}", MK: "\\d{3}[\\dA-Z]{10}\\d{2}", MT: "[A-Z]{4}\\d{5}[\\dA-Z]{18}", MR: "\\d{23}", MU: "[A-Z]{4}\\d{19}[A-Z]{3}", MC: "\\d{10}[\\dA-Z]{11}\\d{2}", MD: "[\\dA-Z]{2}\\d{18}", ME: "\\d{18}", NL: "[A-Z]{4}\\d{10}", NO: "\\d{11}", PK: "[\\dA-Z]{4}\\d{16}", PS: "[\\dA-Z]{4}\\d{21}", PL: "\\d{24}", PT: "\\d{21}", RO: "[A-Z]{4}[\\dA-Z]{16}", SM: "[A-Z]\\d{10}[\\dA-Z]{12}", SA: "\\d{2}[\\dA-Z]{18}", RS: "\\d{18}", SK: "\\d{20}", SI: "\\d{15}", ES: "\\d{20}", SE: "\\d{20}", CH: "\\d{5}[\\dA-Z]{12}", TN: "\\d{20}", TR: "\\d{5}[\\dA-Z]{17}", AE: "\\d{3}\\d{16}", GB: "[A-Z]{4}\\d{14}", VG: "[\\dA-Z]{4}\\d{16}" }[s.substring(0, 2)]) !== void 0 && !new RegExp("^[A-Z]{2}\\d{2}" + a2 + "$", "").test(s))
            return false;
          for (n3 = s.substring(4, s.length) + s.substring(0, 4), r2 = 0; r2 < n3.length; r2++)
            (i2 = n3.charAt(r2)) !== "0" && (c = false), c || (l += "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".indexOf(i2));
          for (o = 0; o < l.length; o++)
            d = ("" + d + l.charAt(o)) % 97;
          return d === 1;
        }, "Please specify a valid IBAN"), t3.validator.addMethod("integer", function(t4, e3) {
          return this.optional(e3) || /^-?\d+$/.test(t4);
        }, "A positive or negative non-decimal number please"), t3.validator.addMethod("ipv4", function(t4, e3) {
          return this.optional(e3) || /^(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)\.(25[0-5]|2[0-4]\d|[01]?\d\d?)$/i.test(t4);
        }, "Please enter a valid IP v4 address."), t3.validator.addMethod("ipv6", function(t4, e3) {
          return this.optional(e3) || /^((([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}:[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){5}:([0-9A-Fa-f]{1,4}:)?[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){4}:([0-9A-Fa-f]{1,4}:){0,2}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){3}:([0-9A-Fa-f]{1,4}:){0,3}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){2}:([0-9A-Fa-f]{1,4}:){0,4}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){6}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(([0-9A-Fa-f]{1,4}:){0,5}:((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|(::([0-9A-Fa-f]{1,4}:){0,5}((\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b)\.){3}(\b((25[0-5])|(1\d{2})|(2[0-4]\d)|(\d{1,2}))\b))|([0-9A-Fa-f]{1,4}::([0-9A-Fa-f]{1,4}:){0,5}[0-9A-Fa-f]{1,4})|(::([0-9A-Fa-f]{1,4}:){0,6}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f]{1,4}:){1,7}:))$/i.test(t4);
        }, "Please enter a valid IP v6 address."), t3.validator.addMethod("lessThan", function(e3, n3, i2) {
          var a2 = t3(i2);
          return this.settings.onfocusout && a2.not(".validate-lessThan-blur").length && a2.addClass("validate-lessThan-blur").on("blur.validate-lessThan", function() {
            t3(n3).valid();
          }), e3 < a2.val();
        }, "Please enter a lesser value."), t3.validator.addMethod("lessThanEqual", function(e3, n3, i2) {
          var a2 = t3(i2);
          return this.settings.onfocusout && a2.not(".validate-lessThanEqual-blur").length && a2.addClass("validate-lessThanEqual-blur").on("blur.validate-lessThanEqual", function() {
            t3(n3).valid();
          }), e3 <= a2.val();
        }, "Please enter a lesser value."), t3.validator.addMethod("lettersonly", function(t4, e3) {
          return this.optional(e3) || /^[a-z]+$/i.test(t4);
        }, "Letters only please"), t3.validator.addMethod("letterswithbasicpunc", function(t4, e3) {
          return this.optional(e3) || /^[a-z\-.,()'"\s]+$/i.test(t4);
        }, "Letters or punctuation only please"), t3.validator.addMethod("maxfiles", function(e3, n3, i2) {
          return !!this.optional(n3) || !(t3(n3).attr("type") === "file" && n3.files && n3.files.length > i2);
        }, t3.validator.format("Please select no more than {0} files.")), t3.validator.addMethod("maxsize", function(e3, n3, i2) {
          if (this.optional(n3))
            return true;
          if (t3(n3).attr("type") === "file" && n3.files && n3.files.length) {
            for (var a2 = 0; a2 < n3.files.length; a2++)
              if (n3.files[a2].size > i2)
                return false;
          }
          return true;
        }, t3.validator.format("File size must not exceed {0} bytes each.")), t3.validator.addMethod("maxsizetotal", function(e3, n3, i2) {
          if (this.optional(n3))
            return true;
          if (t3(n3).attr("type") === "file" && n3.files && n3.files.length) {
            for (var a2 = 0, r2 = 0; r2 < n3.files.length; r2++)
              if ((a2 += n3.files[r2].size) > i2)
                return false;
          }
          return true;
        }, t3.validator.format("Total size of all files must not exceed {0} bytes.")), t3.validator.addMethod("mobileNL", function(t4, e3) {
          return this.optional(e3) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)6((\s|\s?\-\s?)?[0-9]){8}$/.test(t4);
        }, "Please specify a valid mobile number"), t3.validator.addMethod("mobileRU", function(t4, e3) {
          var n3 = t4.replace(/\(|\)|\s+|-/g, "");
          return this.optional(e3) || n3.length > 9 && /^((\+7|7|8)+([0-9]){10})$/.test(n3);
        }, "Please specify a valid mobile number"), t3.validator.addMethod("mobileUK", function(t4, e3) {
          return t4 = t4.replace(/\(|\)|\s+|-/g, ""), this.optional(e3) || t4.length > 9 && t4.match(/^(?:(?:(?:00\s?|\+)44\s?|0)7(?:[1345789]\d{2}|624)\s?\d{3}\s?\d{3})$/);
        }, "Please specify a valid mobile number"), t3.validator.addMethod("netmask", function(t4, e3) {
          return this.optional(e3) || /^(254|252|248|240|224|192|128)\.0\.0\.0|255\.(254|252|248|240|224|192|128|0)\.0\.0|255\.255\.(254|252|248|240|224|192|128|0)\.0|255\.255\.255\.(254|252|248|240|224|192|128|0)/i.test(t4);
        }, "Please enter a valid netmask."), t3.validator.addMethod("nieES", function(t4, e3) {
          "use strict";
          if (this.optional(e3))
            return true;
          var n3, i2 = new RegExp(/^[MXYZ]{1}[0-9]{7,8}[TRWAGMYFPDXBNJZSQVHLCKET]{1}$/gi), a2 = "TRWAGMYFPDXBNJZSQVHLCKET", r2 = t4.substr(t4.length - 1).toUpperCase();
          return !((t4 = t4.toString().toUpperCase()).length > 10 || t4.length < 9 || !i2.test(t4)) && (n3 = (t4 = t4.replace(/^[X]/, "0").replace(/^[Y]/, "1").replace(/^[Z]/, "2")).length === 9 ? t4.substr(0, 8) : t4.substr(0, 9), a2.charAt(parseInt(n3, 10) % 23) === r2);
        }, "Please specify a valid NIE number."), t3.validator.addMethod("nifES", function(t4, e3) {
          "use strict";
          return !!this.optional(e3) || !!(t4 = t4.toUpperCase()).match("((^[A-Z]{1}[0-9]{7}[A-Z0-9]{1}$|^[T]{1}[A-Z0-9]{8}$)|^[0-9]{8}[A-Z]{1}$)") && (/^[0-9]{8}[A-Z]{1}$/.test(t4) ? "TRWAGMYFPDXBNJZSQVHLCKE".charAt(t4.substring(8, 0) % 23) === t4.charAt(8) : !!/^[KLM]{1}/.test(t4) && t4[8] === "TRWAGMYFPDXBNJZSQVHLCKE".charAt(t4.substring(8, 1) % 23));
        }, "Please specify a valid NIF number."), t3.validator.addMethod("nipPL", function(t4) {
          "use strict";
          if ((t4 = t4.replace(/[^0-9]/g, "")).length !== 10)
            return false;
          for (var e3 = [6, 5, 7, 2, 3, 4, 5, 6, 7], n3 = 0, i2 = 0; i2 < 9; i2++)
            n3 += e3[i2] * t4[i2];
          var a2 = n3 % 11;
          return (a2 === 10 ? 0 : a2) === parseInt(t4[9], 10);
        }, "Please specify a valid NIP number."), t3.validator.addMethod("nisBR", function(t4) {
          var e3, n3, i2, a2, r2, o = 0;
          if ((t4 = t4.replace(/([~!@#$%^&*()_+=`{}\[\]\-|\\:;'<>,.\/? ])+/g, "")).length !== 11)
            return false;
          for (n3 = parseInt(t4.substring(10, 11), 10), e3 = parseInt(t4.substring(0, 10), 10), a2 = 2; a2 < 12; a2++)
            r2 = a2, a2 === 10 && (r2 = 2), a2 === 11 && (r2 = 3), o += e3 % 10 * r2, e3 = parseInt(e3 / 10, 10);
          return n3 === (i2 = (i2 = o % 11) > 1 ? 11 - i2 : 0);
        }, "Please specify a valid NIS/PIS number"), t3.validator.addMethod("notEqualTo", function(e3, n3, i2) {
          return this.optional(n3) || !t3.validator.methods.equalTo.call(this, e3, n3, i2);
        }, "Please enter a different value, values must not be the same."), t3.validator.addMethod("nowhitespace", function(t4, e3) {
          return this.optional(e3) || /^\S+$/i.test(t4);
        }, "No white space please"), t3.validator.addMethod("pattern", function(t4, e3, n3) {
          return !!this.optional(e3) || (typeof n3 == "string" && (n3 = new RegExp("^(?:" + n3 + ")$")), n3.test(t4));
        }, "Invalid format."), t3.validator.addMethod("phoneNL", function(t4, e3) {
          return this.optional(e3) || /^((\+|00(\s|\s?\-\s?)?)31(\s|\s?\-\s?)?(\(0\)[\-\s]?)?|0)[1-9]((\s|\s?\-\s?)?[0-9]){8}$/.test(t4);
        }, "Please specify a valid phone number."), t3.validator.addMethod("phonePL", function(t4, e3) {
          t4 = t4.replace(/\s+/g, "");
          var n3 = /^(?:(?:(?:\+|00)?48)|(?:\(\+?48\)))?(?:1[2-8]|2[2-69]|3[2-49]|4[1-68]|5[0-9]|6[0-35-9]|[7-8][1-9]|9[145])\d{7}$/;
          return this.optional(e3) || n3.test(t4);
        }, "Please specify a valid phone number"), t3.validator.addMethod("phonesUK", function(t4, e3) {
          return t4 = t4.replace(/\(|\)|\s+|-/g, ""), this.optional(e3) || t4.length > 9 && t4.match(/^(?:(?:(?:00\s?|\+)44\s?|0)(?:1\d{8,9}|[23]\d{9}|7(?:[1345789]\d{8}|624\d{6})))$/);
        }, "Please specify a valid uk phone number"), t3.validator.addMethod("phoneUK", function(t4, e3) {
          return t4 = t4.replace(/\(|\)|\s+|-/g, ""), this.optional(e3) || t4.length > 9 && t4.match(/^(?:(?:(?:00\s?|\+)44\s?)|(?:\(?0))(?:\d{2}\)?\s?\d{4}\s?\d{4}|\d{3}\)?\s?\d{3}\s?\d{3,4}|\d{4}\)?\s?(?:\d{5}|\d{3}\s?\d{3})|\d{5}\)?\s?\d{4,5})$/);
        }, "Please specify a valid phone number"), t3.validator.addMethod("phoneUS", function(t4, e3) {
          return t4 = t4.replace(/\s+/g, ""), this.optional(e3) || t4.length > 9 && t4.match(/^(\+?1-?)?(\([2-9]([02-9]\d|1[02-9])\)|[2-9]([02-9]\d|1[02-9]))-?[2-9]\d{2}-?\d{4}$/);
        }, "Please specify a valid phone number"), t3.validator.addMethod("postalcodeBR", function(t4, e3) {
          return this.optional(e3) || /^\d{2}.\d{3}-\d{3}?$|^\d{5}-?\d{3}?$/.test(t4);
        }, "Informe um CEP v\xE1lido."), t3.validator.addMethod("postalCodeCA", function(t4, e3) {
          return this.optional(e3) || /^[ABCEGHJKLMNPRSTVXY]\d[ABCEGHJKLMNPRSTVWXYZ] *\d[ABCEGHJKLMNPRSTVWXYZ]\d$/i.test(t4);
        }, "Please specify a valid postal code"), t3.validator.addMethod("postalcodeIT", function(t4, e3) {
          return this.optional(e3) || /^\d{5}$/.test(t4);
        }, "Please specify a valid postal code"), t3.validator.addMethod("postalcodeNL", function(t4, e3) {
          return this.optional(e3) || /^[1-9][0-9]{3}\s?[a-zA-Z]{2}$/.test(t4);
        }, "Please specify a valid postal code"), t3.validator.addMethod("postcodeUK", function(t4, e3) {
          return this.optional(e3) || /^((([A-PR-UWYZ][0-9])|([A-PR-UWYZ][0-9][0-9])|([A-PR-UWYZ][A-HK-Y][0-9])|([A-PR-UWYZ][A-HK-Y][0-9][0-9])|([A-PR-UWYZ][0-9][A-HJKSTUW])|([A-PR-UWYZ][A-HK-Y][0-9][ABEHMNPRVWXY]))\s?([0-9][ABD-HJLNP-UW-Z]{2})|(GIR)\s?(0AA))$/i.test(t4);
        }, "Please specify a valid UK postcode"), t3.validator.addMethod("require_from_group", function(e3, n3, i2) {
          var a2 = t3(i2[1], n3.form), r2 = a2.eq(0), o = r2.data("valid_req_grp") ? r2.data("valid_req_grp") : t3.extend({}, this), s = a2.filter(function() {
            return o.elementValue(this);
          }).length >= i2[0];
          return r2.data("valid_req_grp", o), t3(n3).data("being_validated") || (a2.data("being_validated", true), a2.each(function() {
            o.element(this);
          }), a2.data("being_validated", false)), s;
        }, t3.validator.format("Please fill at least {0} of these fields.")), t3.validator.addMethod("skip_or_fill_minimum", function(e3, n3, i2) {
          var a2 = t3(i2[1], n3.form), r2 = a2.eq(0), o = r2.data("valid_skip") ? r2.data("valid_skip") : t3.extend({}, this), s = a2.filter(function() {
            return o.elementValue(this);
          }).length, l = s === 0 || s >= i2[0];
          return r2.data("valid_skip", o), t3(n3).data("being_validated") || (a2.data("being_validated", true), a2.each(function() {
            o.element(this);
          }), a2.data("being_validated", false)), l;
        }, t3.validator.format("Please either skip these fields or fill at least {0} of them.")), t3.validator.addMethod("stateUS", function(t4, e3, n3) {
          var i2, a2 = n3 === void 0, r2 = !a2 && n3.caseSensitive !== void 0 && n3.caseSensitive, o = !a2 && n3.includeTerritories !== void 0 && n3.includeTerritories, s = !a2 && n3.includeMilitary !== void 0 && n3.includeMilitary;
          return i2 = o || s ? o && s ? "^(A[AEKLPRSZ]|C[AOT]|D[CE]|FL|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEINOPST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$" : o ? "^(A[KLRSZ]|C[AOT]|D[CE]|FL|G[AU]|HI|I[ADLN]|K[SY]|LA|M[ADEINOPST]|N[CDEHJMVY]|O[HKR]|P[AR]|RI|S[CD]|T[NX]|UT|V[AIT]|W[AIVY])$" : "^(A[AEKLPRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$" : "^(A[KLRZ]|C[AOT]|D[CE]|FL|GA|HI|I[ADLN]|K[SY]|LA|M[ADEINOST]|N[CDEHJMVY]|O[HKR]|PA|RI|S[CD]|T[NX]|UT|V[AT]|W[AIVY])$", i2 = r2 ? new RegExp(i2) : new RegExp(i2, "i"), this.optional(e3) || i2.test(t4);
        }, "Please specify a valid state"), t3.validator.addMethod("strippedminlength", function(e3, n3, i2) {
          return t3(e3).text().length >= i2;
        }, t3.validator.format("Please enter at least {0} characters")), t3.validator.addMethod("time", function(t4, e3) {
          return this.optional(e3) || /^([01]\d|2[0-3]|[0-9])(:[0-5]\d){1,2}$/.test(t4);
        }, "Please enter a valid time, between 00:00 and 23:59"), t3.validator.addMethod("time12h", function(t4, e3) {
          return this.optional(e3) || /^((0?[1-9]|1[012])(:[0-5]\d){1,2}(\ ?[AP]M))$/i.test(t4);
        }, "Please enter a valid time in 12-hour am/pm format"), t3.validator.addMethod("url2", function(t4, e3) {
          return this.optional(e3) || /^(https?|ftp):\/\/(((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:)*@)?(((\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5])\.(\d|[1-9]\d|1\d\d|2[0-4]\d|25[0-5]))|((([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|\d|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.)*(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])*([a-z]|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])))\.?)(:\d*)?)(\/((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)+(\/(([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)*)*)?)?(\?((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|[\uE000-\uF8FF]|\/|\?)*)?(#((([a-z]|\d|-|\.|_|~|[\u00A0-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF])|(%[\da-f]{2})|[!\$&'\(\)\*\+,;=]|:|@)|\/|\?)*)?$/i.test(t4);
        }, t3.validator.messages.url), t3.validator.addMethod("vinUS", function(t4) {
          if (t4.length !== 17)
            return false;
          var e3, n3, i2, a2, r2, o, s = ["A", "B", "C", "D", "E", "F", "G", "H", "J", "K", "L", "M", "N", "P", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"], l = [1, 2, 3, 4, 5, 6, 7, 8, 1, 2, 3, 4, 5, 7, 9, 2, 3, 4, 5, 6, 7, 8, 9], c = [8, 7, 6, 5, 4, 3, 2, 10, 0, 9, 8, 7, 6, 5, 4, 3, 2], d = 0;
          for (e3 = 0; e3 < 17; e3++) {
            if (a2 = c[e3], i2 = t4.slice(e3, e3 + 1), e3 === 8 && (o = i2), isNaN(i2)) {
              for (n3 = 0; n3 < s.length; n3++)
                if (i2.toUpperCase() === s[n3]) {
                  i2 = l[n3], i2 *= a2, isNaN(o) && n3 === 8 && (o = s[n3]);
                  break;
                }
            } else
              i2 *= a2;
            d += i2;
          }
          return (r2 = d % 11) == 10 && (r2 = "X"), r2 === o;
        }, "The specified vehicle identification number (VIN) is invalid."), t3.validator.addMethod("zipcodeUS", function(t4, e3) {
          return this.optional(e3) || /^\d{5}(-\d{4})?$/.test(t4);
        }, "The specified US ZIP Code is invalid"), t3.validator.addMethod("ziprange", function(t4, e3) {
          return this.optional(e3) || /^90[2-5]\d\{2\}-\d{4}$/.test(t4);
        }, "Your ZIP-code must be in the range 902xx-xxxx to 905xx-xxxx"), t3;
      }) == "function" ? i.apply(e2, a) : i) === void 0 || (t2.exports = r);
    }, 3587: function(t2, e2, n2) {
      var i, a, r;
      a = [n2(8942)], i = function(t3) {
        t3.extend(t3.fn, { validate: function(e4) {
          if (this.length) {
            var n4 = t3.data(this[0], "validator");
            return n4 || (this.attr("novalidate", "novalidate"), n4 = new t3.validator(e4, this[0]), t3.data(this[0], "validator", n4), n4.settings.onsubmit && (this.on("click.validate", ":submit", function(e5) {
              n4.submitButton = e5.currentTarget, t3(this).hasClass("cancel") && (n4.cancelSubmit = true), t3(this).attr("formnovalidate") !== void 0 && (n4.cancelSubmit = true);
            }), this.on("submit.validate", function(e5) {
              function i3() {
                var i4, a3;
                return n4.submitButton && (n4.settings.submitHandler || n4.formSubmitted) && (i4 = t3("<input type='hidden'/>").attr("name", n4.submitButton.name).val(t3(n4.submitButton).val()).appendTo(n4.currentForm)), !(n4.settings.submitHandler && !n4.settings.debug) || (a3 = n4.settings.submitHandler.call(n4, n4.currentForm, e5), i4 && i4.remove(), a3 !== void 0 && a3);
              }
              return n4.settings.debug && e5.preventDefault(), n4.cancelSubmit ? (n4.cancelSubmit = false, i3()) : n4.form() ? n4.pendingRequest ? (n4.formSubmitted = true, false) : i3() : (n4.focusInvalid(), false);
            })), n4);
          }
          e4 && e4.debug && window.console && console.warn("Nothing selected, can't validate, returning nothing.");
        }, valid: function() {
          var e4, n4, i3;
          return t3(this[0]).is("form") ? e4 = this.validate().form() : (i3 = [], e4 = true, n4 = t3(this[0].form).validate(), this.each(function() {
            (e4 = n4.element(this) && e4) || (i3 = i3.concat(n4.errorList));
          }), n4.errorList = i3), e4;
        }, rules: function(e4, n4) {
          var i3, a3, r2, o, s, l, c = this[0], d = this.attr("contenteditable") !== void 0 && this.attr("contenteditable") !== "false";
          if (c != null && (!c.form && d && (c.form = this.closest("form")[0], c.name = this.attr("name")), c.form != null)) {
            if (e4)
              switch (a3 = (i3 = t3.data(c.form, "validator").settings).rules, r2 = t3.validator.staticRules(c), e4) {
                case "add":
                  t3.extend(r2, t3.validator.normalizeRule(n4)), delete r2.messages, a3[c.name] = r2, n4.messages && (i3.messages[c.name] = t3.extend(i3.messages[c.name], n4.messages));
                  break;
                case "remove":
                  return n4 ? (l = {}, t3.each(n4.split(/\s/), function(t4, e5) {
                    l[e5] = r2[e5], delete r2[e5];
                  }), l) : (delete a3[c.name], r2);
              }
            return (o = t3.validator.normalizeRules(t3.extend({}, t3.validator.classRules(c), t3.validator.attributeRules(c), t3.validator.dataRules(c), t3.validator.staticRules(c)), c)).required && (s = o.required, delete o.required, o = t3.extend({ required: s }, o)), o.remote && (s = o.remote, delete o.remote, o = t3.extend(o, { remote: s })), o;
          }
        } });
        var e3, n3 = function(t4) {
          return t4.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
        };
        t3.extend(t3.expr.pseudos || t3.expr[":"], { blank: function(e4) {
          return !n3("" + t3(e4).val());
        }, filled: function(e4) {
          var i3 = t3(e4).val();
          return i3 !== null && !!n3("" + i3);
        }, unchecked: function(e4) {
          return !t3(e4).prop("checked");
        } }), t3.validator = function(e4, n4) {
          this.settings = t3.extend(true, {}, t3.validator.defaults, e4), this.currentForm = n4, this.init();
        }, t3.validator.format = function(e4, n4) {
          return arguments.length === 1 ? function() {
            var n5 = t3.makeArray(arguments);
            return n5.unshift(e4), t3.validator.format.apply(this, n5);
          } : (n4 === void 0 || (arguments.length > 2 && n4.constructor !== Array && (n4 = t3.makeArray(arguments).slice(1)), n4.constructor !== Array && (n4 = [n4]), t3.each(n4, function(t4, n5) {
            e4 = e4.replace(new RegExp("\\{" + t4 + "\\}", "g"), function() {
              return n5;
            });
          })), e4);
        }, t3.extend(t3.validator, { defaults: { messages: {}, groups: {}, rules: {}, errorClass: "error", pendingClass: "pending", validClass: "valid", errorElement: "label", focusCleanup: false, focusInvalid: true, errorContainer: t3([]), errorLabelContainer: t3([]), onsubmit: true, ignore: ":hidden", ignoreTitle: false, onfocusin: function(t4) {
          this.lastActive = t4, this.settings.focusCleanup && (this.settings.unhighlight && this.settings.unhighlight.call(this, t4, this.settings.errorClass, this.settings.validClass), this.hideThese(this.errorsFor(t4)));
        }, onfocusout: function(t4) {
          this.checkable(t4) || !(t4.name in this.submitted) && this.optional(t4) || this.element(t4);
        }, onkeyup: function(e4, n4) {
          var i3 = [16, 17, 18, 20, 35, 36, 37, 38, 39, 40, 45, 144, 225];
          n4.which === 9 && this.elementValue(e4) === "" || t3.inArray(n4.keyCode, i3) !== -1 || (e4.name in this.submitted || e4.name in this.invalid) && this.element(e4);
        }, onclick: function(t4) {
          t4.name in this.submitted ? this.element(t4) : t4.parentNode.name in this.submitted && this.element(t4.parentNode);
        }, highlight: function(e4, n4, i3) {
          e4.type === "radio" ? this.findByName(e4.name).addClass(n4).removeClass(i3) : t3(e4).addClass(n4).removeClass(i3);
        }, unhighlight: function(e4, n4, i3) {
          e4.type === "radio" ? this.findByName(e4.name).removeClass(n4).addClass(i3) : t3(e4).removeClass(n4).addClass(i3);
        } }, setDefaults: function(e4) {
          t3.extend(t3.validator.defaults, e4);
        }, messages: { required: "This field is required.", remote: "Please fix this field.", email: "Please enter a valid email address.", url: "Please enter a valid URL.", date: "Please enter a valid date.", dateISO: "Please enter a valid date (ISO).", number: "Please enter a valid number.", digits: "Please enter only digits.", equalTo: "Please enter the same value again.", maxlength: t3.validator.format("Please enter no more than {0} characters."), minlength: t3.validator.format("Please enter at least {0} characters."), rangelength: t3.validator.format("Please enter a value between {0} and {1} characters long."), range: t3.validator.format("Please enter a value between {0} and {1}."), max: t3.validator.format("Please enter a value less than or equal to {0}."), min: t3.validator.format("Please enter a value greater than or equal to {0}."), step: t3.validator.format("Please enter a multiple of {0}.") }, autoCreateRanges: false, prototype: { init: function() {
          this.labelContainer = t3(this.settings.errorLabelContainer), this.errorContext = this.labelContainer.length && this.labelContainer || t3(this.currentForm), this.containers = t3(this.settings.errorContainer).add(this.settings.errorLabelContainer), this.submitted = {}, this.valueCache = {}, this.pendingRequest = 0, this.pending = {}, this.invalid = {}, this.reset();
          var e4, n4 = this.currentForm, i3 = this.groups = {};
          function a3(e5) {
            var i4 = t3(this).attr("contenteditable") !== void 0 && t3(this).attr("contenteditable") !== "false";
            if (!this.form && i4 && (this.form = t3(this).closest("form")[0], this.name = t3(this).attr("name")), n4 === this.form) {
              var a4 = t3.data(this.form, "validator"), r2 = "on" + e5.type.replace(/^validate/, ""), o = a4.settings;
              o[r2] && !t3(this).is(o.ignore) && o[r2].call(a4, this, e5);
            }
          }
          t3.each(this.settings.groups, function(e5, n5) {
            typeof n5 == "string" && (n5 = n5.split(/\s/)), t3.each(n5, function(t4, n6) {
              i3[n6] = e5;
            });
          }), e4 = this.settings.rules, t3.each(e4, function(n5, i4) {
            e4[n5] = t3.validator.normalizeRule(i4);
          }), t3(this.currentForm).on("focusin.validate focusout.validate keyup.validate", ":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], [type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], [type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], [type='radio'], [type='checkbox'], [contenteditable], [type='button']", a3).on("click.validate", "select, option, [type='radio'], [type='checkbox']", a3), this.settings.invalidHandler && t3(this.currentForm).on("invalid-form.validate", this.settings.invalidHandler);
        }, form: function() {
          return this.checkForm(), t3.extend(this.submitted, this.errorMap), this.invalid = t3.extend({}, this.errorMap), this.valid() || t3(this.currentForm).triggerHandler("invalid-form", [this]), this.showErrors(), this.valid();
        }, checkForm: function() {
          this.prepareForm();
          for (var t4 = 0, e4 = this.currentElements = this.elements(); e4[t4]; t4++)
            this.check(e4[t4]);
          return this.valid();
        }, element: function(e4) {
          var n4, i3, a3 = this.clean(e4), r2 = this.validationTargetFor(a3), o = this, s = true;
          return r2 === void 0 ? delete this.invalid[a3.name] : (this.prepareElement(r2), this.currentElements = t3(r2), (i3 = this.groups[r2.name]) && t3.each(this.groups, function(t4, e5) {
            e5 === i3 && t4 !== r2.name && (a3 = o.validationTargetFor(o.clean(o.findByName(t4)))) && a3.name in o.invalid && (o.currentElements.push(a3), s = o.check(a3) && s);
          }), n4 = this.check(r2) !== false, s = s && n4, this.invalid[r2.name] = !n4, this.numberOfInvalids() || (this.toHide = this.toHide.add(this.containers)), this.showErrors(), t3(e4).attr("aria-invalid", !n4)), s;
        }, showErrors: function(e4) {
          if (e4) {
            var n4 = this;
            t3.extend(this.errorMap, e4), this.errorList = t3.map(this.errorMap, function(t4, e5) {
              return { message: t4, element: n4.findByName(e5)[0] };
            }), this.successList = t3.grep(this.successList, function(t4) {
              return !(t4.name in e4);
            });
          }
          this.settings.showErrors ? this.settings.showErrors.call(this, this.errorMap, this.errorList) : this.defaultShowErrors();
        }, resetForm: function() {
          t3.fn.resetForm && t3(this.currentForm).resetForm(), this.invalid = {}, this.submitted = {}, this.prepareForm(), this.hideErrors();
          var e4 = this.elements().removeData("previousValue").removeAttr("aria-invalid");
          this.resetElements(e4);
        }, resetElements: function(t4) {
          var e4;
          if (this.settings.unhighlight)
            for (e4 = 0; t4[e4]; e4++)
              this.settings.unhighlight.call(this, t4[e4], this.settings.errorClass, ""), this.findByName(t4[e4].name).removeClass(this.settings.validClass);
          else
            t4.removeClass(this.settings.errorClass).removeClass(this.settings.validClass);
        }, numberOfInvalids: function() {
          return this.objectLength(this.invalid);
        }, objectLength: function(t4) {
          var e4, n4 = 0;
          for (e4 in t4)
            t4[e4] !== void 0 && t4[e4] !== null && t4[e4] !== false && n4++;
          return n4;
        }, hideErrors: function() {
          this.hideThese(this.toHide);
        }, hideThese: function(t4) {
          t4.not(this.containers).text(""), this.addWrapper(t4).hide();
        }, valid: function() {
          return this.size() === 0;
        }, size: function() {
          return this.errorList.length;
        }, focusInvalid: function() {
          if (this.settings.focusInvalid)
            try {
              t3(this.findLastActive() || this.errorList.length && this.errorList[0].element || []).filter(":visible").trigger("focus").trigger("focusin");
            } catch (t4) {
            }
        }, findLastActive: function() {
          var e4 = this.lastActive;
          return e4 && t3.grep(this.errorList, function(t4) {
            return t4.element.name === e4.name;
          }).length === 1 && e4;
        }, elements: function() {
          var e4 = this, n4 = {};
          return t3(this.currentForm).find("input, select, textarea, [contenteditable]").not(":submit, :reset, :image, :disabled").not(this.settings.ignore).filter(function() {
            var i3 = this.name || t3(this).attr("name"), a3 = t3(this).attr("contenteditable") !== void 0 && t3(this).attr("contenteditable") !== "false";
            return !i3 && e4.settings.debug && window.console && console.error("%o has no name assigned", this), a3 && (this.form = t3(this).closest("form")[0], this.name = i3), !(this.form !== e4.currentForm || i3 in n4 || !e4.objectLength(t3(this).rules()) || (n4[i3] = true, 0));
          });
        }, clean: function(e4) {
          return t3(e4)[0];
        }, errors: function() {
          var e4 = this.settings.errorClass.split(" ").join(".");
          return t3(this.settings.errorElement + "." + e4, this.errorContext);
        }, resetInternals: function() {
          this.successList = [], this.errorList = [], this.errorMap = {}, this.toShow = t3([]), this.toHide = t3([]);
        }, reset: function() {
          this.resetInternals(), this.currentElements = t3([]);
        }, prepareForm: function() {
          this.reset(), this.toHide = this.errors().add(this.containers);
        }, prepareElement: function(t4) {
          this.reset(), this.toHide = this.errorsFor(t4);
        }, elementValue: function(e4) {
          var n4, i3, a3 = t3(e4), r2 = e4.type, o = a3.attr("contenteditable") !== void 0 && a3.attr("contenteditable") !== "false";
          return r2 === "radio" || r2 === "checkbox" ? this.findByName(e4.name).filter(":checked").val() : r2 === "number" && e4.validity !== void 0 ? e4.validity.badInput ? "NaN" : a3.val() : (n4 = o ? a3.text() : a3.val(), r2 === "file" ? n4.substr(0, 12) === "C:\\fakepath\\" ? n4.substr(12) : (i3 = n4.lastIndexOf("/")) >= 0 || (i3 = n4.lastIndexOf("\\")) >= 0 ? n4.substr(i3 + 1) : n4 : typeof n4 == "string" ? n4.replace(/\r/g, "") : n4);
        }, check: function(e4) {
          e4 = this.validationTargetFor(this.clean(e4));
          var n4, i3, a3, r2, o = t3(e4).rules(), s = t3.map(o, function(t4, e5) {
            return e5;
          }).length, l = false, c = this.elementValue(e4);
          for (i3 in typeof o.normalizer == "function" ? r2 = o.normalizer : typeof this.settings.normalizer == "function" && (r2 = this.settings.normalizer), r2 && (c = r2.call(e4, c), delete o.normalizer), o) {
            a3 = { method: i3, parameters: o[i3] };
            try {
              if ((n4 = t3.validator.methods[i3].call(this, c, e4, a3.parameters)) === "dependency-mismatch" && s === 1) {
                l = true;
                continue;
              }
              if (l = false, n4 === "pending")
                return void (this.toHide = this.toHide.not(this.errorsFor(e4)));
              if (!n4)
                return this.formatAndAdd(e4, a3), false;
            } catch (t4) {
              throw this.settings.debug && window.console && console.log("Exception occurred when checking element " + e4.id + ", check the '" + a3.method + "' method.", t4), t4 instanceof TypeError && (t4.message += ".  Exception occurred when checking element " + e4.id + ", check the '" + a3.method + "' method."), t4;
            }
          }
          if (!l)
            return this.objectLength(o) && this.successList.push(e4), true;
        }, customDataMessage: function(e4, n4) {
          return t3(e4).data("msg" + n4.charAt(0).toUpperCase() + n4.substring(1).toLowerCase()) || t3(e4).data("msg");
        }, customMessage: function(t4, e4) {
          var n4 = this.settings.messages[t4];
          return n4 && (n4.constructor === String ? n4 : n4[e4]);
        }, findDefined: function() {
          for (var t4 = 0; t4 < arguments.length; t4++)
            if (arguments[t4] !== void 0)
              return arguments[t4];
        }, defaultMessage: function(e4, n4) {
          typeof n4 == "string" && (n4 = { method: n4 });
          var i3 = this.findDefined(this.customMessage(e4.name, n4.method), this.customDataMessage(e4, n4.method), !this.settings.ignoreTitle && e4.title || void 0, t3.validator.messages[n4.method], "<strong>Warning: No message defined for " + e4.name + "</strong>"), a3 = /\$?\{(\d+)\}/g;
          return typeof i3 == "function" ? i3 = i3.call(this, n4.parameters, e4) : a3.test(i3) && (i3 = t3.validator.format(i3.replace(a3, "{$1}"), n4.parameters)), i3;
        }, formatAndAdd: function(t4, e4) {
          var n4 = this.defaultMessage(t4, e4);
          this.errorList.push({ message: n4, element: t4, method: e4.method }), this.errorMap[t4.name] = n4, this.submitted[t4.name] = n4;
        }, addWrapper: function(t4) {
          return this.settings.wrapper && (t4 = t4.add(t4.parent(this.settings.wrapper))), t4;
        }, defaultShowErrors: function() {
          var t4, e4, n4;
          for (t4 = 0; this.errorList[t4]; t4++)
            n4 = this.errorList[t4], this.settings.highlight && this.settings.highlight.call(this, n4.element, this.settings.errorClass, this.settings.validClass), this.showLabel(n4.element, n4.message);
          if (this.errorList.length && (this.toShow = this.toShow.add(this.containers)), this.settings.success)
            for (t4 = 0; this.successList[t4]; t4++)
              this.showLabel(this.successList[t4]);
          if (this.settings.unhighlight)
            for (t4 = 0, e4 = this.validElements(); e4[t4]; t4++)
              this.settings.unhighlight.call(this, e4[t4], this.settings.errorClass, this.settings.validClass);
          this.toHide = this.toHide.not(this.toShow), this.hideErrors(), this.addWrapper(this.toShow).show();
        }, validElements: function() {
          return this.currentElements.not(this.invalidElements());
        }, invalidElements: function() {
          return t3(this.errorList).map(function() {
            return this.element;
          });
        }, showLabel: function(e4, n4) {
          var i3, a3, r2, o, s = this.errorsFor(e4), l = this.idOrName(e4), c = t3(e4).attr("aria-describedby");
          s.length ? (s.removeClass(this.settings.validClass).addClass(this.settings.errorClass), s.html(n4)) : (i3 = s = t3("<" + this.settings.errorElement + ">").attr("id", l + "-error").addClass(this.settings.errorClass).html(n4 || ""), this.settings.wrapper && (i3 = s.hide().show().wrap("<" + this.settings.wrapper + "/>").parent()), this.labelContainer.length ? this.labelContainer.append(i3) : this.settings.errorPlacement ? this.settings.errorPlacement.call(this, i3, t3(e4)) : i3.insertAfter(e4), s.is("label") ? s.attr("for", l) : s.parents("label[for='" + this.escapeCssMeta(l) + "']").length === 0 && (r2 = s.attr("id"), c ? c.match(new RegExp("\\b" + this.escapeCssMeta(r2) + "\\b")) || (c += " " + r2) : c = r2, t3(e4).attr("aria-describedby", c), (a3 = this.groups[e4.name]) && (o = this, t3.each(o.groups, function(e5, n5) {
            n5 === a3 && t3("[name='" + o.escapeCssMeta(e5) + "']", o.currentForm).attr("aria-describedby", s.attr("id"));
          })))), !n4 && this.settings.success && (s.text(""), typeof this.settings.success == "string" ? s.addClass(this.settings.success) : this.settings.success(s, e4)), this.toShow = this.toShow.add(s);
        }, errorsFor: function(e4) {
          var n4 = this.escapeCssMeta(this.idOrName(e4)), i3 = t3(e4).attr("aria-describedby"), a3 = "label[for='" + n4 + "'], label[for='" + n4 + "'] *";
          return i3 && (a3 = a3 + ", #" + this.escapeCssMeta(i3).replace(/\s+/g, ", #")), this.errors().filter(a3);
        }, escapeCssMeta: function(t4) {
          return t4.replace(/([\\!"#$%&'()*+,./:;<=>?@\[\]^`{|}~])/g, "\\$1");
        }, idOrName: function(t4) {
          return this.groups[t4.name] || (this.checkable(t4) ? t4.name : t4.id || t4.name);
        }, validationTargetFor: function(e4) {
          return this.checkable(e4) && (e4 = this.findByName(e4.name)), t3(e4).not(this.settings.ignore)[0];
        }, checkable: function(t4) {
          return /radio|checkbox/i.test(t4.type);
        }, findByName: function(e4) {
          return t3(this.currentForm).find("[name='" + this.escapeCssMeta(e4) + "']");
        }, getLength: function(e4, n4) {
          switch (n4.nodeName.toLowerCase()) {
            case "select":
              return t3("option:selected", n4).length;
            case "input":
              if (this.checkable(n4))
                return this.findByName(n4.name).filter(":checked").length;
          }
          return e4.length;
        }, depend: function(t4, e4) {
          return !this.dependTypes[typeof t4] || this.dependTypes[typeof t4](t4, e4);
        }, dependTypes: { boolean: function(t4) {
          return t4;
        }, string: function(e4, n4) {
          return !!t3(e4, n4.form).length;
        }, function: function(t4, e4) {
          return t4(e4);
        } }, optional: function(e4) {
          var n4 = this.elementValue(e4);
          return !t3.validator.methods.required.call(this, n4, e4) && "dependency-mismatch";
        }, startRequest: function(e4) {
          this.pending[e4.name] || (this.pendingRequest++, t3(e4).addClass(this.settings.pendingClass), this.pending[e4.name] = true);
        }, stopRequest: function(e4, n4) {
          this.pendingRequest--, this.pendingRequest < 0 && (this.pendingRequest = 0), delete this.pending[e4.name], t3(e4).removeClass(this.settings.pendingClass), n4 && this.pendingRequest === 0 && this.formSubmitted && this.form() ? (t3(this.currentForm).submit(), this.submitButton && t3("input:hidden[name='" + this.submitButton.name + "']", this.currentForm).remove(), this.formSubmitted = false) : !n4 && this.pendingRequest === 0 && this.formSubmitted && (t3(this.currentForm).triggerHandler("invalid-form", [this]), this.formSubmitted = false);
        }, previousValue: function(e4, n4) {
          return n4 = typeof n4 == "string" && n4 || "remote", t3.data(e4, "previousValue") || t3.data(e4, "previousValue", { old: null, valid: true, message: this.defaultMessage(e4, { method: n4 }) });
        }, destroy: function() {
          this.resetForm(), t3(this.currentForm).off(".validate").removeData("validator").find(".validate-equalTo-blur").off(".validate-equalTo").removeClass("validate-equalTo-blur").find(".validate-lessThan-blur").off(".validate-lessThan").removeClass("validate-lessThan-blur").find(".validate-lessThanEqual-blur").off(".validate-lessThanEqual").removeClass("validate-lessThanEqual-blur").find(".validate-greaterThanEqual-blur").off(".validate-greaterThanEqual").removeClass("validate-greaterThanEqual-blur").find(".validate-greaterThan-blur").off(".validate-greaterThan").removeClass("validate-greaterThan-blur");
        } }, classRuleSettings: { required: { required: true }, email: { email: true }, url: { url: true }, date: { date: true }, dateISO: { dateISO: true }, number: { number: true }, digits: { digits: true }, creditcard: { creditcard: true } }, addClassRules: function(e4, n4) {
          e4.constructor === String ? this.classRuleSettings[e4] = n4 : t3.extend(this.classRuleSettings, e4);
        }, classRules: function(e4) {
          var n4 = {}, i3 = t3(e4).attr("class");
          return i3 && t3.each(i3.split(" "), function() {
            this in t3.validator.classRuleSettings && t3.extend(n4, t3.validator.classRuleSettings[this]);
          }), n4;
        }, normalizeAttributeRule: function(t4, e4, n4, i3) {
          /min|max|step/.test(n4) && (e4 === null || /number|range|text/.test(e4)) && (i3 = Number(i3), isNaN(i3) && (i3 = void 0)), i3 || i3 === 0 ? t4[n4] = i3 : e4 === n4 && e4 !== "range" && (t4[n4] = true);
        }, attributeRules: function(e4) {
          var n4, i3, a3 = {}, r2 = t3(e4), o = e4.getAttribute("type");
          for (n4 in t3.validator.methods)
            n4 === "required" ? ((i3 = e4.getAttribute(n4)) === "" && (i3 = true), i3 = !!i3) : i3 = r2.attr(n4), this.normalizeAttributeRule(a3, o, n4, i3);
          return a3.maxlength && /-1|2147483647|524288/.test(a3.maxlength) && delete a3.maxlength, a3;
        }, dataRules: function(e4) {
          var n4, i3, a3 = {}, r2 = t3(e4), o = e4.getAttribute("type");
          for (n4 in t3.validator.methods)
            (i3 = r2.data("rule" + n4.charAt(0).toUpperCase() + n4.substring(1).toLowerCase())) === "" && (i3 = true), this.normalizeAttributeRule(a3, o, n4, i3);
          return a3;
        }, staticRules: function(e4) {
          var n4 = {}, i3 = t3.data(e4.form, "validator");
          return i3.settings.rules && (n4 = t3.validator.normalizeRule(i3.settings.rules[e4.name]) || {}), n4;
        }, normalizeRules: function(e4, n4) {
          return t3.each(e4, function(i3, a3) {
            if (a3 !== false) {
              if (a3.param || a3.depends) {
                var r2 = true;
                switch (typeof a3.depends) {
                  case "string":
                    r2 = !!t3(a3.depends, n4.form).length;
                    break;
                  case "function":
                    r2 = a3.depends.call(n4, n4);
                }
                r2 ? e4[i3] = a3.param === void 0 || a3.param : (t3.data(n4.form, "validator").resetElements(t3(n4)), delete e4[i3]);
              }
            } else
              delete e4[i3];
          }), t3.each(e4, function(t4, i3) {
            e4[t4] = typeof i3 == "function" && t4 !== "normalizer" ? i3(n4) : i3;
          }), t3.each(["minlength", "maxlength"], function() {
            e4[this] && (e4[this] = Number(e4[this]));
          }), t3.each(["rangelength", "range"], function() {
            var t4;
            e4[this] && (Array.isArray(e4[this]) ? e4[this] = [Number(e4[this][0]), Number(e4[this][1])] : typeof e4[this] == "string" && (t4 = e4[this].replace(/[\[\]]/g, "").split(/[\s,]+/), e4[this] = [Number(t4[0]), Number(t4[1])]));
          }), t3.validator.autoCreateRanges && (e4.min != null && e4.max != null && (e4.range = [e4.min, e4.max], delete e4.min, delete e4.max), e4.minlength != null && e4.maxlength != null && (e4.rangelength = [e4.minlength, e4.maxlength], delete e4.minlength, delete e4.maxlength)), e4;
        }, normalizeRule: function(e4) {
          if (typeof e4 == "string") {
            var n4 = {};
            t3.each(e4.split(/\s/), function() {
              n4[this] = true;
            }), e4 = n4;
          }
          return e4;
        }, addMethod: function(e4, n4, i3) {
          t3.validator.methods[e4] = n4, t3.validator.messages[e4] = i3 !== void 0 ? i3 : t3.validator.messages[e4], n4.length < 3 && t3.validator.addClassRules(e4, t3.validator.normalizeRule(e4));
        }, methods: { required: function(e4, n4, i3) {
          if (!this.depend(i3, n4))
            return "dependency-mismatch";
          if (n4.nodeName.toLowerCase() === "select") {
            var a3 = t3(n4).val();
            return a3 && a3.length > 0;
          }
          return this.checkable(n4) ? this.getLength(e4, n4) > 0 : e4 != null && e4.length > 0;
        }, email: function(t4, e4) {
          return this.optional(e4) || /^[a-zA-Z0-9.!#$%&'*+\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(t4);
        }, url: function(t4, e4) {
          return this.optional(e4) || /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i.test(t4);
        }, date: (e3 = false, function(t4, n4) {
          return e3 || (e3 = true, this.settings.debug && window.console && console.warn("The `date` method is deprecated and will be removed in version '2.0.0'.\nPlease don't use it, since it relies on the Date constructor, which\nbehaves very differently across browsers and locales. Use `dateISO`\ninstead or one of the locale specific methods in `localizations/`\nand `additional-methods.js`.")), this.optional(n4) || !/Invalid|NaN/.test(new Date(t4).toString());
        }), dateISO: function(t4, e4) {
          return this.optional(e4) || /^\d{4}[\/\-](0?[1-9]|1[012])[\/\-](0?[1-9]|[12][0-9]|3[01])$/.test(t4);
        }, number: function(t4, e4) {
          return this.optional(e4) || /^(?:-?\d+|-?\d{1,3}(?:,\d{3})+)?(?:\.\d+)?$/.test(t4);
        }, digits: function(t4, e4) {
          return this.optional(e4) || /^\d+$/.test(t4);
        }, minlength: function(t4, e4, n4) {
          var i3 = Array.isArray(t4) ? t4.length : this.getLength(t4, e4);
          return this.optional(e4) || i3 >= n4;
        }, maxlength: function(t4, e4, n4) {
          var i3 = Array.isArray(t4) ? t4.length : this.getLength(t4, e4);
          return this.optional(e4) || i3 <= n4;
        }, rangelength: function(t4, e4, n4) {
          var i3 = Array.isArray(t4) ? t4.length : this.getLength(t4, e4);
          return this.optional(e4) || i3 >= n4[0] && i3 <= n4[1];
        }, min: function(t4, e4, n4) {
          return this.optional(e4) || t4 >= n4;
        }, max: function(t4, e4, n4) {
          return this.optional(e4) || t4 <= n4;
        }, range: function(t4, e4, n4) {
          return this.optional(e4) || t4 >= n4[0] && t4 <= n4[1];
        }, step: function(e4, n4, i3) {
          var a3, r2 = t3(n4).attr("type"), o = "Step attribute on input type " + r2 + " is not supported.", s = ["text", "number", "range"], l = new RegExp("\\b" + r2 + "\\b"), c = function(t4) {
            var e5 = ("" + t4).match(/(?:\.(\d+))?$/);
            return e5 && e5[1] ? e5[1].length : 0;
          }, d = function(t4) {
            return Math.round(t4 * Math.pow(10, a3));
          }, u = true;
          if (r2 && !l.test(s.join()))
            throw new Error(o);
          return a3 = c(i3), (c(e4) > a3 || d(e4) % d(i3) != 0) && (u = false), this.optional(n4) || u;
        }, equalTo: function(e4, n4, i3) {
          var a3 = t3(i3);
          return this.settings.onfocusout && a3.not(".validate-equalTo-blur").length && a3.addClass("validate-equalTo-blur").on("blur.validate-equalTo", function() {
            t3(n4).valid();
          }), e4 === a3.val();
        }, remote: function(e4, n4, i3, a3) {
          if (this.optional(n4))
            return "dependency-mismatch";
          a3 = typeof a3 == "string" && a3 || "remote";
          var r2, o, s, l = this.previousValue(n4, a3);
          return this.settings.messages[n4.name] || (this.settings.messages[n4.name] = {}), l.originalMessage = l.originalMessage || this.settings.messages[n4.name][a3], this.settings.messages[n4.name][a3] = l.message, i3 = typeof i3 == "string" && { url: i3 } || i3, s = t3.param(t3.extend({ data: e4 }, i3.data)), l.old === s ? l.valid : (l.old = s, r2 = this, this.startRequest(n4), (o = {})[n4.name] = e4, t3.ajax(t3.extend(true, { mode: "abort", port: "validate" + n4.name, dataType: "json", data: o, context: r2.currentForm, success: function(t4) {
            var i4, o2, s2, c = t4 === true || t4 === "true";
            r2.settings.messages[n4.name][a3] = l.originalMessage, c ? (s2 = r2.formSubmitted, r2.resetInternals(), r2.toHide = r2.errorsFor(n4), r2.formSubmitted = s2, r2.successList.push(n4), r2.invalid[n4.name] = false, r2.showErrors()) : (i4 = {}, o2 = t4 || r2.defaultMessage(n4, { method: a3, parameters: e4 }), i4[n4.name] = l.message = o2, r2.invalid[n4.name] = true, r2.showErrors(i4)), l.valid = c, r2.stopRequest(n4, c);
          } }, i3)), "pending");
        } } });
        var i2, a2 = {};
        return t3.ajaxPrefilter ? t3.ajaxPrefilter(function(t4, e4, n4) {
          var i3 = t4.port;
          t4.mode === "abort" && (a2[i3] && a2[i3].abort(), a2[i3] = n4);
        }) : (i2 = t3.ajax, t3.ajax = function(e4) {
          var n4 = ("mode" in e4 ? e4 : t3.ajaxSettings).mode, r2 = ("port" in e4 ? e4 : t3.ajaxSettings).port;
          return n4 === "abort" ? (a2[r2] && a2[r2].abort(), a2[r2] = i2.apply(this, arguments), a2[r2]) : i2.apply(this, arguments);
        }), t3;
      }, (r = typeof i == "function" ? i.apply(e2, a) : i) === void 0 || (t2.exports = r);
    }, 9755: function(t2, e2) {
      var n2;
      !function(e3, n3) {
        "use strict";
        typeof t2.exports == "object" ? t2.exports = e3.document ? n3(e3, true) : function(t3) {
          if (!t3.document)
            throw new Error("jQuery requires a window with a document");
          return n3(t3);
        } : n3(e3);
      }(typeof window != "undefined" ? window : this, function(i, a) {
        "use strict";
        var r = [], o = Object.getPrototypeOf, s = r.slice, l = r.flat ? function(t3) {
          return r.flat.call(t3);
        } : function(t3) {
          return r.concat.apply([], t3);
        }, c = r.push, d = r.indexOf, u = {}, h = u.toString, p = u.hasOwnProperty, f = p.toString, g = f.call(Object), m = {}, v = function(t3) {
          return typeof t3 == "function" && typeof t3.nodeType != "number" && typeof t3.item != "function";
        }, b = function(t3) {
          return t3 != null && t3 === t3.window;
        }, y = i.document, x = { type: true, src: true, nonce: true, noModule: true };
        function _(t3, e3, n3) {
          var i2, a2, r2 = (n3 = n3 || y).createElement("script");
          if (r2.text = t3, e3)
            for (i2 in x)
              (a2 = e3[i2] || e3.getAttribute && e3.getAttribute(i2)) && r2.setAttribute(i2, a2);
          n3.head.appendChild(r2).parentNode.removeChild(r2);
        }
        function w(t3) {
          return t3 == null ? t3 + "" : typeof t3 == "object" || typeof t3 == "function" ? u[h.call(t3)] || "object" : typeof t3;
        }
        var S = "3.6.0", C = function(t3, e3) {
          return new C.fn.init(t3, e3);
        };
        function k(t3) {
          var e3 = !!t3 && "length" in t3 && t3.length, n3 = w(t3);
          return !v(t3) && !b(t3) && (n3 === "array" || e3 === 0 || typeof e3 == "number" && e3 > 0 && e3 - 1 in t3);
        }
        C.fn = C.prototype = { jquery: S, constructor: C, length: 0, toArray: function() {
          return s.call(this);
        }, get: function(t3) {
          return t3 == null ? s.call(this) : t3 < 0 ? this[t3 + this.length] : this[t3];
        }, pushStack: function(t3) {
          var e3 = C.merge(this.constructor(), t3);
          return e3.prevObject = this, e3;
        }, each: function(t3) {
          return C.each(this, t3);
        }, map: function(t3) {
          return this.pushStack(C.map(this, function(e3, n3) {
            return t3.call(e3, n3, e3);
          }));
        }, slice: function() {
          return this.pushStack(s.apply(this, arguments));
        }, first: function() {
          return this.eq(0);
        }, last: function() {
          return this.eq(-1);
        }, even: function() {
          return this.pushStack(C.grep(this, function(t3, e3) {
            return (e3 + 1) % 2;
          }));
        }, odd: function() {
          return this.pushStack(C.grep(this, function(t3, e3) {
            return e3 % 2;
          }));
        }, eq: function(t3) {
          var e3 = this.length, n3 = +t3 + (t3 < 0 ? e3 : 0);
          return this.pushStack(n3 >= 0 && n3 < e3 ? [this[n3]] : []);
        }, end: function() {
          return this.prevObject || this.constructor();
        }, push: c, sort: r.sort, splice: r.splice }, C.extend = C.fn.extend = function() {
          var t3, e3, n3, i2, a2, r2, o2 = arguments[0] || {}, s2 = 1, l2 = arguments.length, c2 = false;
          for (typeof o2 == "boolean" && (c2 = o2, o2 = arguments[s2] || {}, s2++), typeof o2 == "object" || v(o2) || (o2 = {}), s2 === l2 && (o2 = this, s2--); s2 < l2; s2++)
            if ((t3 = arguments[s2]) != null)
              for (e3 in t3)
                i2 = t3[e3], e3 !== "__proto__" && o2 !== i2 && (c2 && i2 && (C.isPlainObject(i2) || (a2 = Array.isArray(i2))) ? (n3 = o2[e3], r2 = a2 && !Array.isArray(n3) ? [] : a2 || C.isPlainObject(n3) ? n3 : {}, a2 = false, o2[e3] = C.extend(c2, r2, i2)) : i2 !== void 0 && (o2[e3] = i2));
          return o2;
        }, C.extend({ expando: "jQuery" + (S + Math.random()).replace(/\D/g, ""), isReady: true, error: function(t3) {
          throw new Error(t3);
        }, noop: function() {
        }, isPlainObject: function(t3) {
          var e3, n3;
          return !(!t3 || h.call(t3) !== "[object Object]") && (!(e3 = o(t3)) || typeof (n3 = p.call(e3, "constructor") && e3.constructor) == "function" && f.call(n3) === g);
        }, isEmptyObject: function(t3) {
          var e3;
          for (e3 in t3)
            return false;
          return true;
        }, globalEval: function(t3, e3, n3) {
          _(t3, { nonce: e3 && e3.nonce }, n3);
        }, each: function(t3, e3) {
          var n3, i2 = 0;
          if (k(t3))
            for (n3 = t3.length; i2 < n3 && e3.call(t3[i2], i2, t3[i2]) !== false; i2++)
              ;
          else
            for (i2 in t3)
              if (e3.call(t3[i2], i2, t3[i2]) === false)
                break;
          return t3;
        }, makeArray: function(t3, e3) {
          var n3 = e3 || [];
          return t3 != null && (k(Object(t3)) ? C.merge(n3, typeof t3 == "string" ? [t3] : t3) : c.call(n3, t3)), n3;
        }, inArray: function(t3, e3, n3) {
          return e3 == null ? -1 : d.call(e3, t3, n3);
        }, merge: function(t3, e3) {
          for (var n3 = +e3.length, i2 = 0, a2 = t3.length; i2 < n3; i2++)
            t3[a2++] = e3[i2];
          return t3.length = a2, t3;
        }, grep: function(t3, e3, n3) {
          for (var i2 = [], a2 = 0, r2 = t3.length, o2 = !n3; a2 < r2; a2++)
            !e3(t3[a2], a2) !== o2 && i2.push(t3[a2]);
          return i2;
        }, map: function(t3, e3, n3) {
          var i2, a2, r2 = 0, o2 = [];
          if (k(t3))
            for (i2 = t3.length; r2 < i2; r2++)
              (a2 = e3(t3[r2], r2, n3)) != null && o2.push(a2);
          else
            for (r2 in t3)
              (a2 = e3(t3[r2], r2, n3)) != null && o2.push(a2);
          return l(o2);
        }, guid: 1, support: m }), typeof Symbol == "function" && (C.fn[Symbol.iterator] = r[Symbol.iterator]), C.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "), function(t3, e3) {
          u["[object " + e3 + "]"] = e3.toLowerCase();
        });
        var D = function(t3) {
          var e3, n3, i2, a2, r2, o2, s2, l2, c2, d2, u2, h2, p2, f2, g2, m2, v2, b2, y2, x2 = "sizzle" + 1 * new Date(), _2 = t3.document, w2 = 0, S2 = 0, C2 = lt2(), k2 = lt2(), D2 = lt2(), T2 = lt2(), E2 = function(t4, e4) {
            return t4 === e4 && (u2 = true), 0;
          }, A2 = {}.hasOwnProperty, I2 = [], M2 = I2.pop, R2 = I2.push, P2 = I2.push, O2 = I2.slice, j2 = function(t4, e4) {
            for (var n4 = 0, i3 = t4.length; n4 < i3; n4++)
              if (t4[n4] === e4)
                return n4;
            return -1;
          }, N2 = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped", L2 = "[\\x20\\t\\r\\n\\f]", F2 = "(?:\\\\[\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+", H2 = "\\[[\\x20\\t\\r\\n\\f]*(" + F2 + ")(?:" + L2 + "*([*^$|!~]?=)" + L2 + `*(?:'((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)"|(` + F2 + "))|)" + L2 + "*\\]", B2 = ":(" + F2 + `)(?:\\((('((?:\\\\.|[^\\\\'])*)'|"((?:\\\\.|[^\\\\"])*)")|((?:\\\\.|[^\\\\()[\\]]|` + H2 + ")*)|.*)\\)|)", q2 = new RegExp(L2 + "+", "g"), z2 = new RegExp("^[\\x20\\t\\r\\n\\f]+|((?:^|[^\\\\])(?:\\\\.)*)[\\x20\\t\\r\\n\\f]+$", "g"), W2 = new RegExp("^[\\x20\\t\\r\\n\\f]*,[\\x20\\t\\r\\n\\f]*"), $2 = new RegExp("^[\\x20\\t\\r\\n\\f]*([>+~]|[\\x20\\t\\r\\n\\f])[\\x20\\t\\r\\n\\f]*"), V2 = new RegExp(L2 + "|>"), Y2 = new RegExp(B2), U2 = new RegExp("^" + F2 + "$"), G2 = { ID: new RegExp("^#(" + F2 + ")"), CLASS: new RegExp("^\\.(" + F2 + ")"), TAG: new RegExp("^(" + F2 + "|[*])"), ATTR: new RegExp("^" + H2), PSEUDO: new RegExp("^" + B2), CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\([\\x20\\t\\r\\n\\f]*(even|odd|(([+-]|)(\\d*)n|)[\\x20\\t\\r\\n\\f]*(?:([+-]|)[\\x20\\t\\r\\n\\f]*(\\d+)|))[\\x20\\t\\r\\n\\f]*\\)|)", "i"), bool: new RegExp("^(?:" + N2 + ")$", "i"), needsContext: new RegExp("^[\\x20\\t\\r\\n\\f]*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\([\\x20\\t\\r\\n\\f]*((?:-\\d)?\\d*)[\\x20\\t\\r\\n\\f]*\\)|)(?=[^-]|$)", "i") }, X2 = /HTML$/i, Z2 = /^(?:input|select|textarea|button)$/i, K2 = /^h\d$/i, Q2 = /^[^{]+\{\s*\[native \w/, J2 = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, tt2 = /[+~]/, et2 = new RegExp("\\\\[\\da-fA-F]{1,6}[\\x20\\t\\r\\n\\f]?|\\\\([^\\r\\n\\f])", "g"), nt2 = function(t4, e4) {
            var n4 = "0x" + t4.slice(1) - 65536;
            return e4 || (n4 < 0 ? String.fromCharCode(n4 + 65536) : String.fromCharCode(n4 >> 10 | 55296, 1023 & n4 | 56320));
          }, it2 = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g, at2 = function(t4, e4) {
            return e4 ? t4 === "\0" ? "\uFFFD" : t4.slice(0, -1) + "\\" + t4.charCodeAt(t4.length - 1).toString(16) + " " : "\\" + t4;
          }, rt2 = function() {
            h2();
          }, ot2 = xt2(function(t4) {
            return t4.disabled === true && t4.nodeName.toLowerCase() === "fieldset";
          }, { dir: "parentNode", next: "legend" });
          try {
            P2.apply(I2 = O2.call(_2.childNodes), _2.childNodes), I2[_2.childNodes.length].nodeType;
          } catch (t4) {
            P2 = { apply: I2.length ? function(t5, e4) {
              R2.apply(t5, O2.call(e4));
            } : function(t5, e4) {
              for (var n4 = t5.length, i3 = 0; t5[n4++] = e4[i3++]; )
                ;
              t5.length = n4 - 1;
            } };
          }
          function st2(t4, e4, i3, a3) {
            var r3, s3, c3, d3, u3, f3, v3, b3 = e4 && e4.ownerDocument, _3 = e4 ? e4.nodeType : 9;
            if (i3 = i3 || [], typeof t4 != "string" || !t4 || _3 !== 1 && _3 !== 9 && _3 !== 11)
              return i3;
            if (!a3 && (h2(e4), e4 = e4 || p2, g2)) {
              if (_3 !== 11 && (u3 = J2.exec(t4)))
                if (r3 = u3[1]) {
                  if (_3 === 9) {
                    if (!(c3 = e4.getElementById(r3)))
                      return i3;
                    if (c3.id === r3)
                      return i3.push(c3), i3;
                  } else if (b3 && (c3 = b3.getElementById(r3)) && y2(e4, c3) && c3.id === r3)
                    return i3.push(c3), i3;
                } else {
                  if (u3[2])
                    return P2.apply(i3, e4.getElementsByTagName(t4)), i3;
                  if ((r3 = u3[3]) && n3.getElementsByClassName && e4.getElementsByClassName)
                    return P2.apply(i3, e4.getElementsByClassName(r3)), i3;
                }
              if (n3.qsa && !T2[t4 + " "] && (!m2 || !m2.test(t4)) && (_3 !== 1 || e4.nodeName.toLowerCase() !== "object")) {
                if (v3 = t4, b3 = e4, _3 === 1 && (V2.test(t4) || $2.test(t4))) {
                  for ((b3 = tt2.test(t4) && vt2(e4.parentNode) || e4) === e4 && n3.scope || ((d3 = e4.getAttribute("id")) ? d3 = d3.replace(it2, at2) : e4.setAttribute("id", d3 = x2)), s3 = (f3 = o2(t4)).length; s3--; )
                    f3[s3] = (d3 ? "#" + d3 : ":scope") + " " + yt2(f3[s3]);
                  v3 = f3.join(",");
                }
                try {
                  return P2.apply(i3, b3.querySelectorAll(v3)), i3;
                } catch (e5) {
                  T2(t4, true);
                } finally {
                  d3 === x2 && e4.removeAttribute("id");
                }
              }
            }
            return l2(t4.replace(z2, "$1"), e4, i3, a3);
          }
          function lt2() {
            var t4 = [];
            return function e4(n4, a3) {
              return t4.push(n4 + " ") > i2.cacheLength && delete e4[t4.shift()], e4[n4 + " "] = a3;
            };
          }
          function ct2(t4) {
            return t4[x2] = true, t4;
          }
          function dt2(t4) {
            var e4 = p2.createElement("fieldset");
            try {
              return !!t4(e4);
            } catch (t5) {
              return false;
            } finally {
              e4.parentNode && e4.parentNode.removeChild(e4), e4 = null;
            }
          }
          function ut2(t4, e4) {
            for (var n4 = t4.split("|"), a3 = n4.length; a3--; )
              i2.attrHandle[n4[a3]] = e4;
          }
          function ht2(t4, e4) {
            var n4 = e4 && t4, i3 = n4 && t4.nodeType === 1 && e4.nodeType === 1 && t4.sourceIndex - e4.sourceIndex;
            if (i3)
              return i3;
            if (n4) {
              for (; n4 = n4.nextSibling; )
                if (n4 === e4)
                  return -1;
            }
            return t4 ? 1 : -1;
          }
          function pt2(t4) {
            return function(e4) {
              return e4.nodeName.toLowerCase() === "input" && e4.type === t4;
            };
          }
          function ft2(t4) {
            return function(e4) {
              var n4 = e4.nodeName.toLowerCase();
              return (n4 === "input" || n4 === "button") && e4.type === t4;
            };
          }
          function gt2(t4) {
            return function(e4) {
              return "form" in e4 ? e4.parentNode && e4.disabled === false ? "label" in e4 ? "label" in e4.parentNode ? e4.parentNode.disabled === t4 : e4.disabled === t4 : e4.isDisabled === t4 || e4.isDisabled !== !t4 && ot2(e4) === t4 : e4.disabled === t4 : "label" in e4 && e4.disabled === t4;
            };
          }
          function mt2(t4) {
            return ct2(function(e4) {
              return e4 = +e4, ct2(function(n4, i3) {
                for (var a3, r3 = t4([], n4.length, e4), o3 = r3.length; o3--; )
                  n4[a3 = r3[o3]] && (n4[a3] = !(i3[a3] = n4[a3]));
              });
            });
          }
          function vt2(t4) {
            return t4 && t4.getElementsByTagName !== void 0 && t4;
          }
          for (e3 in n3 = st2.support = {}, r2 = st2.isXML = function(t4) {
            var e4 = t4 && t4.namespaceURI, n4 = t4 && (t4.ownerDocument || t4).documentElement;
            return !X2.test(e4 || n4 && n4.nodeName || "HTML");
          }, h2 = st2.setDocument = function(t4) {
            var e4, a3, o3 = t4 ? t4.ownerDocument || t4 : _2;
            return o3 != p2 && o3.nodeType === 9 && o3.documentElement ? (f2 = (p2 = o3).documentElement, g2 = !r2(p2), _2 != p2 && (a3 = p2.defaultView) && a3.top !== a3 && (a3.addEventListener ? a3.addEventListener("unload", rt2, false) : a3.attachEvent && a3.attachEvent("onunload", rt2)), n3.scope = dt2(function(t5) {
              return f2.appendChild(t5).appendChild(p2.createElement("div")), t5.querySelectorAll !== void 0 && !t5.querySelectorAll(":scope fieldset div").length;
            }), n3.attributes = dt2(function(t5) {
              return t5.className = "i", !t5.getAttribute("className");
            }), n3.getElementsByTagName = dt2(function(t5) {
              return t5.appendChild(p2.createComment("")), !t5.getElementsByTagName("*").length;
            }), n3.getElementsByClassName = Q2.test(p2.getElementsByClassName), n3.getById = dt2(function(t5) {
              return f2.appendChild(t5).id = x2, !p2.getElementsByName || !p2.getElementsByName(x2).length;
            }), n3.getById ? (i2.filter.ID = function(t5) {
              var e5 = t5.replace(et2, nt2);
              return function(t6) {
                return t6.getAttribute("id") === e5;
              };
            }, i2.find.ID = function(t5, e5) {
              if (e5.getElementById !== void 0 && g2) {
                var n4 = e5.getElementById(t5);
                return n4 ? [n4] : [];
              }
            }) : (i2.filter.ID = function(t5) {
              var e5 = t5.replace(et2, nt2);
              return function(t6) {
                var n4 = t6.getAttributeNode !== void 0 && t6.getAttributeNode("id");
                return n4 && n4.value === e5;
              };
            }, i2.find.ID = function(t5, e5) {
              if (e5.getElementById !== void 0 && g2) {
                var n4, i3, a4, r3 = e5.getElementById(t5);
                if (r3) {
                  if ((n4 = r3.getAttributeNode("id")) && n4.value === t5)
                    return [r3];
                  for (a4 = e5.getElementsByName(t5), i3 = 0; r3 = a4[i3++]; )
                    if ((n4 = r3.getAttributeNode("id")) && n4.value === t5)
                      return [r3];
                }
                return [];
              }
            }), i2.find.TAG = n3.getElementsByTagName ? function(t5, e5) {
              return e5.getElementsByTagName !== void 0 ? e5.getElementsByTagName(t5) : n3.qsa ? e5.querySelectorAll(t5) : void 0;
            } : function(t5, e5) {
              var n4, i3 = [], a4 = 0, r3 = e5.getElementsByTagName(t5);
              if (t5 === "*") {
                for (; n4 = r3[a4++]; )
                  n4.nodeType === 1 && i3.push(n4);
                return i3;
              }
              return r3;
            }, i2.find.CLASS = n3.getElementsByClassName && function(t5, e5) {
              if (e5.getElementsByClassName !== void 0 && g2)
                return e5.getElementsByClassName(t5);
            }, v2 = [], m2 = [], (n3.qsa = Q2.test(p2.querySelectorAll)) && (dt2(function(t5) {
              var e5;
              f2.appendChild(t5).innerHTML = "<a id='" + x2 + "'></a><select id='" + x2 + "-\r\\' msallowcapture=''><option selected=''></option></select>", t5.querySelectorAll("[msallowcapture^='']").length && m2.push(`[*^$]=[\\x20\\t\\r\\n\\f]*(?:''|"")`), t5.querySelectorAll("[selected]").length || m2.push("\\[[\\x20\\t\\r\\n\\f]*(?:value|" + N2 + ")"), t5.querySelectorAll("[id~=" + x2 + "-]").length || m2.push("~="), (e5 = p2.createElement("input")).setAttribute("name", ""), t5.appendChild(e5), t5.querySelectorAll("[name='']").length || m2.push(`\\[[\\x20\\t\\r\\n\\f]*name[\\x20\\t\\r\\n\\f]*=[\\x20\\t\\r\\n\\f]*(?:''|"")`), t5.querySelectorAll(":checked").length || m2.push(":checked"), t5.querySelectorAll("a#" + x2 + "+*").length || m2.push(".#.+[+~]"), t5.querySelectorAll("\\\f"), m2.push("[\\r\\n\\f]");
            }), dt2(function(t5) {
              t5.innerHTML = "<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";
              var e5 = p2.createElement("input");
              e5.setAttribute("type", "hidden"), t5.appendChild(e5).setAttribute("name", "D"), t5.querySelectorAll("[name=d]").length && m2.push("name[\\x20\\t\\r\\n\\f]*[*^$|!~]?="), t5.querySelectorAll(":enabled").length !== 2 && m2.push(":enabled", ":disabled"), f2.appendChild(t5).disabled = true, t5.querySelectorAll(":disabled").length !== 2 && m2.push(":enabled", ":disabled"), t5.querySelectorAll("*,:x"), m2.push(",.*:");
            })), (n3.matchesSelector = Q2.test(b2 = f2.matches || f2.webkitMatchesSelector || f2.mozMatchesSelector || f2.oMatchesSelector || f2.msMatchesSelector)) && dt2(function(t5) {
              n3.disconnectedMatch = b2.call(t5, "*"), b2.call(t5, "[s!='']:x"), v2.push("!=", B2);
            }), m2 = m2.length && new RegExp(m2.join("|")), v2 = v2.length && new RegExp(v2.join("|")), e4 = Q2.test(f2.compareDocumentPosition), y2 = e4 || Q2.test(f2.contains) ? function(t5, e5) {
              var n4 = t5.nodeType === 9 ? t5.documentElement : t5, i3 = e5 && e5.parentNode;
              return t5 === i3 || !(!i3 || i3.nodeType !== 1 || !(n4.contains ? n4.contains(i3) : t5.compareDocumentPosition && 16 & t5.compareDocumentPosition(i3)));
            } : function(t5, e5) {
              if (e5) {
                for (; e5 = e5.parentNode; )
                  if (e5 === t5)
                    return true;
              }
              return false;
            }, E2 = e4 ? function(t5, e5) {
              if (t5 === e5)
                return u2 = true, 0;
              var i3 = !t5.compareDocumentPosition - !e5.compareDocumentPosition;
              return i3 || (1 & (i3 = (t5.ownerDocument || t5) == (e5.ownerDocument || e5) ? t5.compareDocumentPosition(e5) : 1) || !n3.sortDetached && e5.compareDocumentPosition(t5) === i3 ? t5 == p2 || t5.ownerDocument == _2 && y2(_2, t5) ? -1 : e5 == p2 || e5.ownerDocument == _2 && y2(_2, e5) ? 1 : d2 ? j2(d2, t5) - j2(d2, e5) : 0 : 4 & i3 ? -1 : 1);
            } : function(t5, e5) {
              if (t5 === e5)
                return u2 = true, 0;
              var n4, i3 = 0, a4 = t5.parentNode, r3 = e5.parentNode, o4 = [t5], s3 = [e5];
              if (!a4 || !r3)
                return t5 == p2 ? -1 : e5 == p2 ? 1 : a4 ? -1 : r3 ? 1 : d2 ? j2(d2, t5) - j2(d2, e5) : 0;
              if (a4 === r3)
                return ht2(t5, e5);
              for (n4 = t5; n4 = n4.parentNode; )
                o4.unshift(n4);
              for (n4 = e5; n4 = n4.parentNode; )
                s3.unshift(n4);
              for (; o4[i3] === s3[i3]; )
                i3++;
              return i3 ? ht2(o4[i3], s3[i3]) : o4[i3] == _2 ? -1 : s3[i3] == _2 ? 1 : 0;
            }, p2) : p2;
          }, st2.matches = function(t4, e4) {
            return st2(t4, null, null, e4);
          }, st2.matchesSelector = function(t4, e4) {
            if (h2(t4), n3.matchesSelector && g2 && !T2[e4 + " "] && (!v2 || !v2.test(e4)) && (!m2 || !m2.test(e4)))
              try {
                var i3 = b2.call(t4, e4);
                if (i3 || n3.disconnectedMatch || t4.document && t4.document.nodeType !== 11)
                  return i3;
              } catch (t5) {
                T2(e4, true);
              }
            return st2(e4, p2, null, [t4]).length > 0;
          }, st2.contains = function(t4, e4) {
            return (t4.ownerDocument || t4) != p2 && h2(t4), y2(t4, e4);
          }, st2.attr = function(t4, e4) {
            (t4.ownerDocument || t4) != p2 && h2(t4);
            var a3 = i2.attrHandle[e4.toLowerCase()], r3 = a3 && A2.call(i2.attrHandle, e4.toLowerCase()) ? a3(t4, e4, !g2) : void 0;
            return r3 !== void 0 ? r3 : n3.attributes || !g2 ? t4.getAttribute(e4) : (r3 = t4.getAttributeNode(e4)) && r3.specified ? r3.value : null;
          }, st2.escape = function(t4) {
            return (t4 + "").replace(it2, at2);
          }, st2.error = function(t4) {
            throw new Error("Syntax error, unrecognized expression: " + t4);
          }, st2.uniqueSort = function(t4) {
            var e4, i3 = [], a3 = 0, r3 = 0;
            if (u2 = !n3.detectDuplicates, d2 = !n3.sortStable && t4.slice(0), t4.sort(E2), u2) {
              for (; e4 = t4[r3++]; )
                e4 === t4[r3] && (a3 = i3.push(r3));
              for (; a3--; )
                t4.splice(i3[a3], 1);
            }
            return d2 = null, t4;
          }, a2 = st2.getText = function(t4) {
            var e4, n4 = "", i3 = 0, r3 = t4.nodeType;
            if (r3) {
              if (r3 === 1 || r3 === 9 || r3 === 11) {
                if (typeof t4.textContent == "string")
                  return t4.textContent;
                for (t4 = t4.firstChild; t4; t4 = t4.nextSibling)
                  n4 += a2(t4);
              } else if (r3 === 3 || r3 === 4)
                return t4.nodeValue;
            } else
              for (; e4 = t4[i3++]; )
                n4 += a2(e4);
            return n4;
          }, i2 = st2.selectors = { cacheLength: 50, createPseudo: ct2, match: G2, attrHandle: {}, find: {}, relative: { ">": { dir: "parentNode", first: true }, " ": { dir: "parentNode" }, "+": { dir: "previousSibling", first: true }, "~": { dir: "previousSibling" } }, preFilter: { ATTR: function(t4) {
            return t4[1] = t4[1].replace(et2, nt2), t4[3] = (t4[3] || t4[4] || t4[5] || "").replace(et2, nt2), t4[2] === "~=" && (t4[3] = " " + t4[3] + " "), t4.slice(0, 4);
          }, CHILD: function(t4) {
            return t4[1] = t4[1].toLowerCase(), t4[1].slice(0, 3) === "nth" ? (t4[3] || st2.error(t4[0]), t4[4] = +(t4[4] ? t4[5] + (t4[6] || 1) : 2 * (t4[3] === "even" || t4[3] === "odd")), t4[5] = +(t4[7] + t4[8] || t4[3] === "odd")) : t4[3] && st2.error(t4[0]), t4;
          }, PSEUDO: function(t4) {
            var e4, n4 = !t4[6] && t4[2];
            return G2.CHILD.test(t4[0]) ? null : (t4[3] ? t4[2] = t4[4] || t4[5] || "" : n4 && Y2.test(n4) && (e4 = o2(n4, true)) && (e4 = n4.indexOf(")", n4.length - e4) - n4.length) && (t4[0] = t4[0].slice(0, e4), t4[2] = n4.slice(0, e4)), t4.slice(0, 3));
          } }, filter: { TAG: function(t4) {
            var e4 = t4.replace(et2, nt2).toLowerCase();
            return t4 === "*" ? function() {
              return true;
            } : function(t5) {
              return t5.nodeName && t5.nodeName.toLowerCase() === e4;
            };
          }, CLASS: function(t4) {
            var e4 = C2[t4 + " "];
            return e4 || (e4 = new RegExp("(^|[\\x20\\t\\r\\n\\f])" + t4 + "(" + L2 + "|$)")) && C2(t4, function(t5) {
              return e4.test(typeof t5.className == "string" && t5.className || t5.getAttribute !== void 0 && t5.getAttribute("class") || "");
            });
          }, ATTR: function(t4, e4, n4) {
            return function(i3) {
              var a3 = st2.attr(i3, t4);
              return a3 == null ? e4 === "!=" : !e4 || (a3 += "", e4 === "=" ? a3 === n4 : e4 === "!=" ? a3 !== n4 : e4 === "^=" ? n4 && a3.indexOf(n4) === 0 : e4 === "*=" ? n4 && a3.indexOf(n4) > -1 : e4 === "$=" ? n4 && a3.slice(-n4.length) === n4 : e4 === "~=" ? (" " + a3.replace(q2, " ") + " ").indexOf(n4) > -1 : e4 === "|=" && (a3 === n4 || a3.slice(0, n4.length + 1) === n4 + "-"));
            };
          }, CHILD: function(t4, e4, n4, i3, a3) {
            var r3 = t4.slice(0, 3) !== "nth", o3 = t4.slice(-4) !== "last", s3 = e4 === "of-type";
            return i3 === 1 && a3 === 0 ? function(t5) {
              return !!t5.parentNode;
            } : function(e5, n5, l3) {
              var c3, d3, u3, h3, p3, f3, g3 = r3 !== o3 ? "nextSibling" : "previousSibling", m3 = e5.parentNode, v3 = s3 && e5.nodeName.toLowerCase(), b3 = !l3 && !s3, y3 = false;
              if (m3) {
                if (r3) {
                  for (; g3; ) {
                    for (h3 = e5; h3 = h3[g3]; )
                      if (s3 ? h3.nodeName.toLowerCase() === v3 : h3.nodeType === 1)
                        return false;
                    f3 = g3 = t4 === "only" && !f3 && "nextSibling";
                  }
                  return true;
                }
                if (f3 = [o3 ? m3.firstChild : m3.lastChild], o3 && b3) {
                  for (y3 = (p3 = (c3 = (d3 = (u3 = (h3 = m3)[x2] || (h3[x2] = {}))[h3.uniqueID] || (u3[h3.uniqueID] = {}))[t4] || [])[0] === w2 && c3[1]) && c3[2], h3 = p3 && m3.childNodes[p3]; h3 = ++p3 && h3 && h3[g3] || (y3 = p3 = 0) || f3.pop(); )
                    if (h3.nodeType === 1 && ++y3 && h3 === e5) {
                      d3[t4] = [w2, p3, y3];
                      break;
                    }
                } else if (b3 && (y3 = p3 = (c3 = (d3 = (u3 = (h3 = e5)[x2] || (h3[x2] = {}))[h3.uniqueID] || (u3[h3.uniqueID] = {}))[t4] || [])[0] === w2 && c3[1]), y3 === false)
                  for (; (h3 = ++p3 && h3 && h3[g3] || (y3 = p3 = 0) || f3.pop()) && ((s3 ? h3.nodeName.toLowerCase() !== v3 : h3.nodeType !== 1) || !++y3 || (b3 && ((d3 = (u3 = h3[x2] || (h3[x2] = {}))[h3.uniqueID] || (u3[h3.uniqueID] = {}))[t4] = [w2, y3]), h3 !== e5)); )
                    ;
                return (y3 -= a3) === i3 || y3 % i3 == 0 && y3 / i3 >= 0;
              }
            };
          }, PSEUDO: function(t4, e4) {
            var n4, a3 = i2.pseudos[t4] || i2.setFilters[t4.toLowerCase()] || st2.error("unsupported pseudo: " + t4);
            return a3[x2] ? a3(e4) : a3.length > 1 ? (n4 = [t4, t4, "", e4], i2.setFilters.hasOwnProperty(t4.toLowerCase()) ? ct2(function(t5, n5) {
              for (var i3, r3 = a3(t5, e4), o3 = r3.length; o3--; )
                t5[i3 = j2(t5, r3[o3])] = !(n5[i3] = r3[o3]);
            }) : function(t5) {
              return a3(t5, 0, n4);
            }) : a3;
          } }, pseudos: { not: ct2(function(t4) {
            var e4 = [], n4 = [], i3 = s2(t4.replace(z2, "$1"));
            return i3[x2] ? ct2(function(t5, e5, n5, a3) {
              for (var r3, o3 = i3(t5, null, a3, []), s3 = t5.length; s3--; )
                (r3 = o3[s3]) && (t5[s3] = !(e5[s3] = r3));
            }) : function(t5, a3, r3) {
              return e4[0] = t5, i3(e4, null, r3, n4), e4[0] = null, !n4.pop();
            };
          }), has: ct2(function(t4) {
            return function(e4) {
              return st2(t4, e4).length > 0;
            };
          }), contains: ct2(function(t4) {
            return t4 = t4.replace(et2, nt2), function(e4) {
              return (e4.textContent || a2(e4)).indexOf(t4) > -1;
            };
          }), lang: ct2(function(t4) {
            return U2.test(t4 || "") || st2.error("unsupported lang: " + t4), t4 = t4.replace(et2, nt2).toLowerCase(), function(e4) {
              var n4;
              do {
                if (n4 = g2 ? e4.lang : e4.getAttribute("xml:lang") || e4.getAttribute("lang"))
                  return (n4 = n4.toLowerCase()) === t4 || n4.indexOf(t4 + "-") === 0;
              } while ((e4 = e4.parentNode) && e4.nodeType === 1);
              return false;
            };
          }), target: function(e4) {
            var n4 = t3.location && t3.location.hash;
            return n4 && n4.slice(1) === e4.id;
          }, root: function(t4) {
            return t4 === f2;
          }, focus: function(t4) {
            return t4 === p2.activeElement && (!p2.hasFocus || p2.hasFocus()) && !!(t4.type || t4.href || ~t4.tabIndex);
          }, enabled: gt2(false), disabled: gt2(true), checked: function(t4) {
            var e4 = t4.nodeName.toLowerCase();
            return e4 === "input" && !!t4.checked || e4 === "option" && !!t4.selected;
          }, selected: function(t4) {
            return t4.parentNode && t4.parentNode.selectedIndex, t4.selected === true;
          }, empty: function(t4) {
            for (t4 = t4.firstChild; t4; t4 = t4.nextSibling)
              if (t4.nodeType < 6)
                return false;
            return true;
          }, parent: function(t4) {
            return !i2.pseudos.empty(t4);
          }, header: function(t4) {
            return K2.test(t4.nodeName);
          }, input: function(t4) {
            return Z2.test(t4.nodeName);
          }, button: function(t4) {
            var e4 = t4.nodeName.toLowerCase();
            return e4 === "input" && t4.type === "button" || e4 === "button";
          }, text: function(t4) {
            var e4;
            return t4.nodeName.toLowerCase() === "input" && t4.type === "text" && ((e4 = t4.getAttribute("type")) == null || e4.toLowerCase() === "text");
          }, first: mt2(function() {
            return [0];
          }), last: mt2(function(t4, e4) {
            return [e4 - 1];
          }), eq: mt2(function(t4, e4, n4) {
            return [n4 < 0 ? n4 + e4 : n4];
          }), even: mt2(function(t4, e4) {
            for (var n4 = 0; n4 < e4; n4 += 2)
              t4.push(n4);
            return t4;
          }), odd: mt2(function(t4, e4) {
            for (var n4 = 1; n4 < e4; n4 += 2)
              t4.push(n4);
            return t4;
          }), lt: mt2(function(t4, e4, n4) {
            for (var i3 = n4 < 0 ? n4 + e4 : n4 > e4 ? e4 : n4; --i3 >= 0; )
              t4.push(i3);
            return t4;
          }), gt: mt2(function(t4, e4, n4) {
            for (var i3 = n4 < 0 ? n4 + e4 : n4; ++i3 < e4; )
              t4.push(i3);
            return t4;
          }) } }, i2.pseudos.nth = i2.pseudos.eq, { radio: true, checkbox: true, file: true, password: true, image: true })
            i2.pseudos[e3] = pt2(e3);
          for (e3 in { submit: true, reset: true })
            i2.pseudos[e3] = ft2(e3);
          function bt2() {
          }
          function yt2(t4) {
            for (var e4 = 0, n4 = t4.length, i3 = ""; e4 < n4; e4++)
              i3 += t4[e4].value;
            return i3;
          }
          function xt2(t4, e4, n4) {
            var i3 = e4.dir, a3 = e4.next, r3 = a3 || i3, o3 = n4 && r3 === "parentNode", s3 = S2++;
            return e4.first ? function(e5, n5, a4) {
              for (; e5 = e5[i3]; )
                if (e5.nodeType === 1 || o3)
                  return t4(e5, n5, a4);
              return false;
            } : function(e5, n5, l3) {
              var c3, d3, u3, h3 = [w2, s3];
              if (l3) {
                for (; e5 = e5[i3]; )
                  if ((e5.nodeType === 1 || o3) && t4(e5, n5, l3))
                    return true;
              } else
                for (; e5 = e5[i3]; )
                  if (e5.nodeType === 1 || o3)
                    if (d3 = (u3 = e5[x2] || (e5[x2] = {}))[e5.uniqueID] || (u3[e5.uniqueID] = {}), a3 && a3 === e5.nodeName.toLowerCase())
                      e5 = e5[i3] || e5;
                    else {
                      if ((c3 = d3[r3]) && c3[0] === w2 && c3[1] === s3)
                        return h3[2] = c3[2];
                      if (d3[r3] = h3, h3[2] = t4(e5, n5, l3))
                        return true;
                    }
              return false;
            };
          }
          function _t2(t4) {
            return t4.length > 1 ? function(e4, n4, i3) {
              for (var a3 = t4.length; a3--; )
                if (!t4[a3](e4, n4, i3))
                  return false;
              return true;
            } : t4[0];
          }
          function wt2(t4, e4, n4, i3, a3) {
            for (var r3, o3 = [], s3 = 0, l3 = t4.length, c3 = e4 != null; s3 < l3; s3++)
              (r3 = t4[s3]) && (n4 && !n4(r3, i3, a3) || (o3.push(r3), c3 && e4.push(s3)));
            return o3;
          }
          function St2(t4, e4, n4, i3, a3, r3) {
            return i3 && !i3[x2] && (i3 = St2(i3)), a3 && !a3[x2] && (a3 = St2(a3, r3)), ct2(function(r4, o3, s3, l3) {
              var c3, d3, u3, h3 = [], p3 = [], f3 = o3.length, g3 = r4 || function(t5, e5, n5) {
                for (var i4 = 0, a4 = e5.length; i4 < a4; i4++)
                  st2(t5, e5[i4], n5);
                return n5;
              }(e4 || "*", s3.nodeType ? [s3] : s3, []), m3 = !t4 || !r4 && e4 ? g3 : wt2(g3, h3, t4, s3, l3), v3 = n4 ? a3 || (r4 ? t4 : f3 || i3) ? [] : o3 : m3;
              if (n4 && n4(m3, v3, s3, l3), i3)
                for (c3 = wt2(v3, p3), i3(c3, [], s3, l3), d3 = c3.length; d3--; )
                  (u3 = c3[d3]) && (v3[p3[d3]] = !(m3[p3[d3]] = u3));
              if (r4) {
                if (a3 || t4) {
                  if (a3) {
                    for (c3 = [], d3 = v3.length; d3--; )
                      (u3 = v3[d3]) && c3.push(m3[d3] = u3);
                    a3(null, v3 = [], c3, l3);
                  }
                  for (d3 = v3.length; d3--; )
                    (u3 = v3[d3]) && (c3 = a3 ? j2(r4, u3) : h3[d3]) > -1 && (r4[c3] = !(o3[c3] = u3));
                }
              } else
                v3 = wt2(v3 === o3 ? v3.splice(f3, v3.length) : v3), a3 ? a3(null, o3, v3, l3) : P2.apply(o3, v3);
            });
          }
          function Ct2(t4) {
            for (var e4, n4, a3, r3 = t4.length, o3 = i2.relative[t4[0].type], s3 = o3 || i2.relative[" "], l3 = o3 ? 1 : 0, d3 = xt2(function(t5) {
              return t5 === e4;
            }, s3, true), u3 = xt2(function(t5) {
              return j2(e4, t5) > -1;
            }, s3, true), h3 = [function(t5, n5, i3) {
              var a4 = !o3 && (i3 || n5 !== c2) || ((e4 = n5).nodeType ? d3(t5, n5, i3) : u3(t5, n5, i3));
              return e4 = null, a4;
            }]; l3 < r3; l3++)
              if (n4 = i2.relative[t4[l3].type])
                h3 = [xt2(_t2(h3), n4)];
              else {
                if ((n4 = i2.filter[t4[l3].type].apply(null, t4[l3].matches))[x2]) {
                  for (a3 = ++l3; a3 < r3 && !i2.relative[t4[a3].type]; a3++)
                    ;
                  return St2(l3 > 1 && _t2(h3), l3 > 1 && yt2(t4.slice(0, l3 - 1).concat({ value: t4[l3 - 2].type === " " ? "*" : "" })).replace(z2, "$1"), n4, l3 < a3 && Ct2(t4.slice(l3, a3)), a3 < r3 && Ct2(t4 = t4.slice(a3)), a3 < r3 && yt2(t4));
                }
                h3.push(n4);
              }
            return _t2(h3);
          }
          return bt2.prototype = i2.filters = i2.pseudos, i2.setFilters = new bt2(), o2 = st2.tokenize = function(t4, e4) {
            var n4, a3, r3, o3, s3, l3, c3, d3 = k2[t4 + " "];
            if (d3)
              return e4 ? 0 : d3.slice(0);
            for (s3 = t4, l3 = [], c3 = i2.preFilter; s3; ) {
              for (o3 in n4 && !(a3 = W2.exec(s3)) || (a3 && (s3 = s3.slice(a3[0].length) || s3), l3.push(r3 = [])), n4 = false, (a3 = $2.exec(s3)) && (n4 = a3.shift(), r3.push({ value: n4, type: a3[0].replace(z2, " ") }), s3 = s3.slice(n4.length)), i2.filter)
                !(a3 = G2[o3].exec(s3)) || c3[o3] && !(a3 = c3[o3](a3)) || (n4 = a3.shift(), r3.push({ value: n4, type: o3, matches: a3 }), s3 = s3.slice(n4.length));
              if (!n4)
                break;
            }
            return e4 ? s3.length : s3 ? st2.error(t4) : k2(t4, l3).slice(0);
          }, s2 = st2.compile = function(t4, e4) {
            var n4, a3 = [], r3 = [], s3 = D2[t4 + " "];
            if (!s3) {
              for (e4 || (e4 = o2(t4)), n4 = e4.length; n4--; )
                (s3 = Ct2(e4[n4]))[x2] ? a3.push(s3) : r3.push(s3);
              s3 = D2(t4, function(t5, e5) {
                var n5 = e5.length > 0, a4 = t5.length > 0, r4 = function(r5, o3, s4, l3, d3) {
                  var u3, f3, m3, v3 = 0, b3 = "0", y3 = r5 && [], x3 = [], _3 = c2, S3 = r5 || a4 && i2.find.TAG("*", d3), C3 = w2 += _3 == null ? 1 : Math.random() || 0.1, k3 = S3.length;
                  for (d3 && (c2 = o3 == p2 || o3 || d3); b3 !== k3 && (u3 = S3[b3]) != null; b3++) {
                    if (a4 && u3) {
                      for (f3 = 0, o3 || u3.ownerDocument == p2 || (h2(u3), s4 = !g2); m3 = t5[f3++]; )
                        if (m3(u3, o3 || p2, s4)) {
                          l3.push(u3);
                          break;
                        }
                      d3 && (w2 = C3);
                    }
                    n5 && ((u3 = !m3 && u3) && v3--, r5 && y3.push(u3));
                  }
                  if (v3 += b3, n5 && b3 !== v3) {
                    for (f3 = 0; m3 = e5[f3++]; )
                      m3(y3, x3, o3, s4);
                    if (r5) {
                      if (v3 > 0)
                        for (; b3--; )
                          y3[b3] || x3[b3] || (x3[b3] = M2.call(l3));
                      x3 = wt2(x3);
                    }
                    P2.apply(l3, x3), d3 && !r5 && x3.length > 0 && v3 + e5.length > 1 && st2.uniqueSort(l3);
                  }
                  return d3 && (w2 = C3, c2 = _3), y3;
                };
                return n5 ? ct2(r4) : r4;
              }(r3, a3)), s3.selector = t4;
            }
            return s3;
          }, l2 = st2.select = function(t4, e4, n4, a3) {
            var r3, l3, c3, d3, u3, h3 = typeof t4 == "function" && t4, p3 = !a3 && o2(t4 = h3.selector || t4);
            if (n4 = n4 || [], p3.length === 1) {
              if ((l3 = p3[0] = p3[0].slice(0)).length > 2 && (c3 = l3[0]).type === "ID" && e4.nodeType === 9 && g2 && i2.relative[l3[1].type]) {
                if (!(e4 = (i2.find.ID(c3.matches[0].replace(et2, nt2), e4) || [])[0]))
                  return n4;
                h3 && (e4 = e4.parentNode), t4 = t4.slice(l3.shift().value.length);
              }
              for (r3 = G2.needsContext.test(t4) ? 0 : l3.length; r3-- && (c3 = l3[r3], !i2.relative[d3 = c3.type]); )
                if ((u3 = i2.find[d3]) && (a3 = u3(c3.matches[0].replace(et2, nt2), tt2.test(l3[0].type) && vt2(e4.parentNode) || e4))) {
                  if (l3.splice(r3, 1), !(t4 = a3.length && yt2(l3)))
                    return P2.apply(n4, a3), n4;
                  break;
                }
            }
            return (h3 || s2(t4, p3))(a3, e4, !g2, n4, !e4 || tt2.test(t4) && vt2(e4.parentNode) || e4), n4;
          }, n3.sortStable = x2.split("").sort(E2).join("") === x2, n3.detectDuplicates = !!u2, h2(), n3.sortDetached = dt2(function(t4) {
            return 1 & t4.compareDocumentPosition(p2.createElement("fieldset"));
          }), dt2(function(t4) {
            return t4.innerHTML = "<a href='#'></a>", t4.firstChild.getAttribute("href") === "#";
          }) || ut2("type|href|height|width", function(t4, e4, n4) {
            if (!n4)
              return t4.getAttribute(e4, e4.toLowerCase() === "type" ? 1 : 2);
          }), n3.attributes && dt2(function(t4) {
            return t4.innerHTML = "<input/>", t4.firstChild.setAttribute("value", ""), t4.firstChild.getAttribute("value") === "";
          }) || ut2("value", function(t4, e4, n4) {
            if (!n4 && t4.nodeName.toLowerCase() === "input")
              return t4.defaultValue;
          }), dt2(function(t4) {
            return t4.getAttribute("disabled") == null;
          }) || ut2(N2, function(t4, e4, n4) {
            var i3;
            if (!n4)
              return t4[e4] === true ? e4.toLowerCase() : (i3 = t4.getAttributeNode(e4)) && i3.specified ? i3.value : null;
          }), st2;
        }(i);
        C.find = D, C.expr = D.selectors, C.expr[":"] = C.expr.pseudos, C.uniqueSort = C.unique = D.uniqueSort, C.text = D.getText, C.isXMLDoc = D.isXML, C.contains = D.contains, C.escapeSelector = D.escape;
        var T = function(t3, e3, n3) {
          for (var i2 = [], a2 = n3 !== void 0; (t3 = t3[e3]) && t3.nodeType !== 9; )
            if (t3.nodeType === 1) {
              if (a2 && C(t3).is(n3))
                break;
              i2.push(t3);
            }
          return i2;
        }, E = function(t3, e3) {
          for (var n3 = []; t3; t3 = t3.nextSibling)
            t3.nodeType === 1 && t3 !== e3 && n3.push(t3);
          return n3;
        }, A = C.expr.match.needsContext;
        function I(t3, e3) {
          return t3.nodeName && t3.nodeName.toLowerCase() === e3.toLowerCase();
        }
        var M = /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;
        function R(t3, e3, n3) {
          return v(e3) ? C.grep(t3, function(t4, i2) {
            return !!e3.call(t4, i2, t4) !== n3;
          }) : e3.nodeType ? C.grep(t3, function(t4) {
            return t4 === e3 !== n3;
          }) : typeof e3 != "string" ? C.grep(t3, function(t4) {
            return d.call(e3, t4) > -1 !== n3;
          }) : C.filter(e3, t3, n3);
        }
        C.filter = function(t3, e3, n3) {
          var i2 = e3[0];
          return n3 && (t3 = ":not(" + t3 + ")"), e3.length === 1 && i2.nodeType === 1 ? C.find.matchesSelector(i2, t3) ? [i2] : [] : C.find.matches(t3, C.grep(e3, function(t4) {
            return t4.nodeType === 1;
          }));
        }, C.fn.extend({ find: function(t3) {
          var e3, n3, i2 = this.length, a2 = this;
          if (typeof t3 != "string")
            return this.pushStack(C(t3).filter(function() {
              for (e3 = 0; e3 < i2; e3++)
                if (C.contains(a2[e3], this))
                  return true;
            }));
          for (n3 = this.pushStack([]), e3 = 0; e3 < i2; e3++)
            C.find(t3, a2[e3], n3);
          return i2 > 1 ? C.uniqueSort(n3) : n3;
        }, filter: function(t3) {
          return this.pushStack(R(this, t3 || [], false));
        }, not: function(t3) {
          return this.pushStack(R(this, t3 || [], true));
        }, is: function(t3) {
          return !!R(this, typeof t3 == "string" && A.test(t3) ? C(t3) : t3 || [], false).length;
        } });
        var P, O = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;
        (C.fn.init = function(t3, e3, n3) {
          var i2, a2;
          if (!t3)
            return this;
          if (n3 = n3 || P, typeof t3 == "string") {
            if (!(i2 = t3[0] === "<" && t3[t3.length - 1] === ">" && t3.length >= 3 ? [null, t3, null] : O.exec(t3)) || !i2[1] && e3)
              return !e3 || e3.jquery ? (e3 || n3).find(t3) : this.constructor(e3).find(t3);
            if (i2[1]) {
              if (e3 = e3 instanceof C ? e3[0] : e3, C.merge(this, C.parseHTML(i2[1], e3 && e3.nodeType ? e3.ownerDocument || e3 : y, true)), M.test(i2[1]) && C.isPlainObject(e3))
                for (i2 in e3)
                  v(this[i2]) ? this[i2](e3[i2]) : this.attr(i2, e3[i2]);
              return this;
            }
            return (a2 = y.getElementById(i2[2])) && (this[0] = a2, this.length = 1), this;
          }
          return t3.nodeType ? (this[0] = t3, this.length = 1, this) : v(t3) ? n3.ready !== void 0 ? n3.ready(t3) : t3(C) : C.makeArray(t3, this);
        }).prototype = C.fn, P = C(y);
        var j = /^(?:parents|prev(?:Until|All))/, N = { children: true, contents: true, next: true, prev: true };
        function L(t3, e3) {
          for (; (t3 = t3[e3]) && t3.nodeType !== 1; )
            ;
          return t3;
        }
        C.fn.extend({ has: function(t3) {
          var e3 = C(t3, this), n3 = e3.length;
          return this.filter(function() {
            for (var t4 = 0; t4 < n3; t4++)
              if (C.contains(this, e3[t4]))
                return true;
          });
        }, closest: function(t3, e3) {
          var n3, i2 = 0, a2 = this.length, r2 = [], o2 = typeof t3 != "string" && C(t3);
          if (!A.test(t3)) {
            for (; i2 < a2; i2++)
              for (n3 = this[i2]; n3 && n3 !== e3; n3 = n3.parentNode)
                if (n3.nodeType < 11 && (o2 ? o2.index(n3) > -1 : n3.nodeType === 1 && C.find.matchesSelector(n3, t3))) {
                  r2.push(n3);
                  break;
                }
          }
          return this.pushStack(r2.length > 1 ? C.uniqueSort(r2) : r2);
        }, index: function(t3) {
          return t3 ? typeof t3 == "string" ? d.call(C(t3), this[0]) : d.call(this, t3.jquery ? t3[0] : t3) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        }, add: function(t3, e3) {
          return this.pushStack(C.uniqueSort(C.merge(this.get(), C(t3, e3))));
        }, addBack: function(t3) {
          return this.add(t3 == null ? this.prevObject : this.prevObject.filter(t3));
        } }), C.each({ parent: function(t3) {
          var e3 = t3.parentNode;
          return e3 && e3.nodeType !== 11 ? e3 : null;
        }, parents: function(t3) {
          return T(t3, "parentNode");
        }, parentsUntil: function(t3, e3, n3) {
          return T(t3, "parentNode", n3);
        }, next: function(t3) {
          return L(t3, "nextSibling");
        }, prev: function(t3) {
          return L(t3, "previousSibling");
        }, nextAll: function(t3) {
          return T(t3, "nextSibling");
        }, prevAll: function(t3) {
          return T(t3, "previousSibling");
        }, nextUntil: function(t3, e3, n3) {
          return T(t3, "nextSibling", n3);
        }, prevUntil: function(t3, e3, n3) {
          return T(t3, "previousSibling", n3);
        }, siblings: function(t3) {
          return E((t3.parentNode || {}).firstChild, t3);
        }, children: function(t3) {
          return E(t3.firstChild);
        }, contents: function(t3) {
          return t3.contentDocument != null && o(t3.contentDocument) ? t3.contentDocument : (I(t3, "template") && (t3 = t3.content || t3), C.merge([], t3.childNodes));
        } }, function(t3, e3) {
          C.fn[t3] = function(n3, i2) {
            var a2 = C.map(this, e3, n3);
            return t3.slice(-5) !== "Until" && (i2 = n3), i2 && typeof i2 == "string" && (a2 = C.filter(i2, a2)), this.length > 1 && (N[t3] || C.uniqueSort(a2), j.test(t3) && a2.reverse()), this.pushStack(a2);
          };
        });
        var F = /[^\x20\t\r\n\f]+/g;
        function H(t3) {
          return t3;
        }
        function B(t3) {
          throw t3;
        }
        function q(t3, e3, n3, i2) {
          var a2;
          try {
            t3 && v(a2 = t3.promise) ? a2.call(t3).done(e3).fail(n3) : t3 && v(a2 = t3.then) ? a2.call(t3, e3, n3) : e3.apply(void 0, [t3].slice(i2));
          } catch (t4) {
            n3.apply(void 0, [t4]);
          }
        }
        C.Callbacks = function(t3) {
          t3 = typeof t3 == "string" ? function(t4) {
            var e4 = {};
            return C.each(t4.match(F) || [], function(t5, n4) {
              e4[n4] = true;
            }), e4;
          }(t3) : C.extend({}, t3);
          var e3, n3, i2, a2, r2 = [], o2 = [], s2 = -1, l2 = function() {
            for (a2 = a2 || t3.once, i2 = e3 = true; o2.length; s2 = -1)
              for (n3 = o2.shift(); ++s2 < r2.length; )
                r2[s2].apply(n3[0], n3[1]) === false && t3.stopOnFalse && (s2 = r2.length, n3 = false);
            t3.memory || (n3 = false), e3 = false, a2 && (r2 = n3 ? [] : "");
          }, c2 = { add: function() {
            return r2 && (n3 && !e3 && (s2 = r2.length - 1, o2.push(n3)), function e4(n4) {
              C.each(n4, function(n5, i3) {
                v(i3) ? t3.unique && c2.has(i3) || r2.push(i3) : i3 && i3.length && w(i3) !== "string" && e4(i3);
              });
            }(arguments), n3 && !e3 && l2()), this;
          }, remove: function() {
            return C.each(arguments, function(t4, e4) {
              for (var n4; (n4 = C.inArray(e4, r2, n4)) > -1; )
                r2.splice(n4, 1), n4 <= s2 && s2--;
            }), this;
          }, has: function(t4) {
            return t4 ? C.inArray(t4, r2) > -1 : r2.length > 0;
          }, empty: function() {
            return r2 && (r2 = []), this;
          }, disable: function() {
            return a2 = o2 = [], r2 = n3 = "", this;
          }, disabled: function() {
            return !r2;
          }, lock: function() {
            return a2 = o2 = [], n3 || e3 || (r2 = n3 = ""), this;
          }, locked: function() {
            return !!a2;
          }, fireWith: function(t4, n4) {
            return a2 || (n4 = [t4, (n4 = n4 || []).slice ? n4.slice() : n4], o2.push(n4), e3 || l2()), this;
          }, fire: function() {
            return c2.fireWith(this, arguments), this;
          }, fired: function() {
            return !!i2;
          } };
          return c2;
        }, C.extend({ Deferred: function(t3) {
          var e3 = [["notify", "progress", C.Callbacks("memory"), C.Callbacks("memory"), 2], ["resolve", "done", C.Callbacks("once memory"), C.Callbacks("once memory"), 0, "resolved"], ["reject", "fail", C.Callbacks("once memory"), C.Callbacks("once memory"), 1, "rejected"]], n3 = "pending", a2 = { state: function() {
            return n3;
          }, always: function() {
            return r2.done(arguments).fail(arguments), this;
          }, catch: function(t4) {
            return a2.then(null, t4);
          }, pipe: function() {
            var t4 = arguments;
            return C.Deferred(function(n4) {
              C.each(e3, function(e4, i2) {
                var a3 = v(t4[i2[4]]) && t4[i2[4]];
                r2[i2[1]](function() {
                  var t5 = a3 && a3.apply(this, arguments);
                  t5 && v(t5.promise) ? t5.promise().progress(n4.notify).done(n4.resolve).fail(n4.reject) : n4[i2[0] + "With"](this, a3 ? [t5] : arguments);
                });
              }), t4 = null;
            }).promise();
          }, then: function(t4, n4, a3) {
            var r3 = 0;
            function o2(t5, e4, n5, a4) {
              return function() {
                var s2 = this, l2 = arguments, c2 = function() {
                  var i2, c3;
                  if (!(t5 < r3)) {
                    if ((i2 = n5.apply(s2, l2)) === e4.promise())
                      throw new TypeError("Thenable self-resolution");
                    c3 = i2 && (typeof i2 == "object" || typeof i2 == "function") && i2.then, v(c3) ? a4 ? c3.call(i2, o2(r3, e4, H, a4), o2(r3, e4, B, a4)) : (r3++, c3.call(i2, o2(r3, e4, H, a4), o2(r3, e4, B, a4), o2(r3, e4, H, e4.notifyWith))) : (n5 !== H && (s2 = void 0, l2 = [i2]), (a4 || e4.resolveWith)(s2, l2));
                  }
                }, d2 = a4 ? c2 : function() {
                  try {
                    c2();
                  } catch (i2) {
                    C.Deferred.exceptionHook && C.Deferred.exceptionHook(i2, d2.stackTrace), t5 + 1 >= r3 && (n5 !== B && (s2 = void 0, l2 = [i2]), e4.rejectWith(s2, l2));
                  }
                };
                t5 ? d2() : (C.Deferred.getStackHook && (d2.stackTrace = C.Deferred.getStackHook()), i.setTimeout(d2));
              };
            }
            return C.Deferred(function(i2) {
              e3[0][3].add(o2(0, i2, v(a3) ? a3 : H, i2.notifyWith)), e3[1][3].add(o2(0, i2, v(t4) ? t4 : H)), e3[2][3].add(o2(0, i2, v(n4) ? n4 : B));
            }).promise();
          }, promise: function(t4) {
            return t4 != null ? C.extend(t4, a2) : a2;
          } }, r2 = {};
          return C.each(e3, function(t4, i2) {
            var o2 = i2[2], s2 = i2[5];
            a2[i2[1]] = o2.add, s2 && o2.add(function() {
              n3 = s2;
            }, e3[3 - t4][2].disable, e3[3 - t4][3].disable, e3[0][2].lock, e3[0][3].lock), o2.add(i2[3].fire), r2[i2[0]] = function() {
              return r2[i2[0] + "With"](this === r2 ? void 0 : this, arguments), this;
            }, r2[i2[0] + "With"] = o2.fireWith;
          }), a2.promise(r2), t3 && t3.call(r2, r2), r2;
        }, when: function(t3) {
          var e3 = arguments.length, n3 = e3, i2 = Array(n3), a2 = s.call(arguments), r2 = C.Deferred(), o2 = function(t4) {
            return function(n4) {
              i2[t4] = this, a2[t4] = arguments.length > 1 ? s.call(arguments) : n4, --e3 || r2.resolveWith(i2, a2);
            };
          };
          if (e3 <= 1 && (q(t3, r2.done(o2(n3)).resolve, r2.reject, !e3), r2.state() === "pending" || v(a2[n3] && a2[n3].then)))
            return r2.then();
          for (; n3--; )
            q(a2[n3], o2(n3), r2.reject);
          return r2.promise();
        } });
        var z = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;
        C.Deferred.exceptionHook = function(t3, e3) {
          i.console && i.console.warn && t3 && z.test(t3.name) && i.console.warn("jQuery.Deferred exception: " + t3.message, t3.stack, e3);
        }, C.readyException = function(t3) {
          i.setTimeout(function() {
            throw t3;
          });
        };
        var W = C.Deferred();
        function $() {
          y.removeEventListener("DOMContentLoaded", $), i.removeEventListener("load", $), C.ready();
        }
        C.fn.ready = function(t3) {
          return W.then(t3).catch(function(t4) {
            C.readyException(t4);
          }), this;
        }, C.extend({ isReady: false, readyWait: 1, ready: function(t3) {
          (t3 === true ? --C.readyWait : C.isReady) || (C.isReady = true, t3 !== true && --C.readyWait > 0 || W.resolveWith(y, [C]));
        } }), C.ready.then = W.then, y.readyState === "complete" || y.readyState !== "loading" && !y.documentElement.doScroll ? i.setTimeout(C.ready) : (y.addEventListener("DOMContentLoaded", $), i.addEventListener("load", $));
        var V = function(t3, e3, n3, i2, a2, r2, o2) {
          var s2 = 0, l2 = t3.length, c2 = n3 == null;
          if (w(n3) === "object")
            for (s2 in a2 = true, n3)
              V(t3, e3, s2, n3[s2], true, r2, o2);
          else if (i2 !== void 0 && (a2 = true, v(i2) || (o2 = true), c2 && (o2 ? (e3.call(t3, i2), e3 = null) : (c2 = e3, e3 = function(t4, e4, n4) {
            return c2.call(C(t4), n4);
          })), e3))
            for (; s2 < l2; s2++)
              e3(t3[s2], n3, o2 ? i2 : i2.call(t3[s2], s2, e3(t3[s2], n3)));
          return a2 ? t3 : c2 ? e3.call(t3) : l2 ? e3(t3[0], n3) : r2;
        }, Y = /^-ms-/, U = /-([a-z])/g;
        function G(t3, e3) {
          return e3.toUpperCase();
        }
        function X(t3) {
          return t3.replace(Y, "ms-").replace(U, G);
        }
        var Z = function(t3) {
          return t3.nodeType === 1 || t3.nodeType === 9 || !+t3.nodeType;
        };
        function K() {
          this.expando = C.expando + K.uid++;
        }
        K.uid = 1, K.prototype = { cache: function(t3) {
          var e3 = t3[this.expando];
          return e3 || (e3 = {}, Z(t3) && (t3.nodeType ? t3[this.expando] = e3 : Object.defineProperty(t3, this.expando, { value: e3, configurable: true }))), e3;
        }, set: function(t3, e3, n3) {
          var i2, a2 = this.cache(t3);
          if (typeof e3 == "string")
            a2[X(e3)] = n3;
          else
            for (i2 in e3)
              a2[X(i2)] = e3[i2];
          return a2;
        }, get: function(t3, e3) {
          return e3 === void 0 ? this.cache(t3) : t3[this.expando] && t3[this.expando][X(e3)];
        }, access: function(t3, e3, n3) {
          return e3 === void 0 || e3 && typeof e3 == "string" && n3 === void 0 ? this.get(t3, e3) : (this.set(t3, e3, n3), n3 !== void 0 ? n3 : e3);
        }, remove: function(t3, e3) {
          var n3, i2 = t3[this.expando];
          if (i2 !== void 0) {
            if (e3 !== void 0) {
              n3 = (e3 = Array.isArray(e3) ? e3.map(X) : (e3 = X(e3)) in i2 ? [e3] : e3.match(F) || []).length;
              for (; n3--; )
                delete i2[e3[n3]];
            }
            (e3 === void 0 || C.isEmptyObject(i2)) && (t3.nodeType ? t3[this.expando] = void 0 : delete t3[this.expando]);
          }
        }, hasData: function(t3) {
          var e3 = t3[this.expando];
          return e3 !== void 0 && !C.isEmptyObject(e3);
        } };
        var Q = new K(), J = new K(), tt = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/, et = /[A-Z]/g;
        function nt(t3, e3, n3) {
          var i2;
          if (n3 === void 0 && t3.nodeType === 1)
            if (i2 = "data-" + e3.replace(et, "-$&").toLowerCase(), typeof (n3 = t3.getAttribute(i2)) == "string") {
              try {
                n3 = function(t4) {
                  return t4 === "true" || t4 !== "false" && (t4 === "null" ? null : t4 === +t4 + "" ? +t4 : tt.test(t4) ? JSON.parse(t4) : t4);
                }(n3);
              } catch (t4) {
              }
              J.set(t3, e3, n3);
            } else
              n3 = void 0;
          return n3;
        }
        C.extend({ hasData: function(t3) {
          return J.hasData(t3) || Q.hasData(t3);
        }, data: function(t3, e3, n3) {
          return J.access(t3, e3, n3);
        }, removeData: function(t3, e3) {
          J.remove(t3, e3);
        }, _data: function(t3, e3, n3) {
          return Q.access(t3, e3, n3);
        }, _removeData: function(t3, e3) {
          Q.remove(t3, e3);
        } }), C.fn.extend({ data: function(t3, e3) {
          var n3, i2, a2, r2 = this[0], o2 = r2 && r2.attributes;
          if (t3 === void 0) {
            if (this.length && (a2 = J.get(r2), r2.nodeType === 1 && !Q.get(r2, "hasDataAttrs"))) {
              for (n3 = o2.length; n3--; )
                o2[n3] && (i2 = o2[n3].name).indexOf("data-") === 0 && (i2 = X(i2.slice(5)), nt(r2, i2, a2[i2]));
              Q.set(r2, "hasDataAttrs", true);
            }
            return a2;
          }
          return typeof t3 == "object" ? this.each(function() {
            J.set(this, t3);
          }) : V(this, function(e4) {
            var n4;
            if (r2 && e4 === void 0)
              return (n4 = J.get(r2, t3)) !== void 0 || (n4 = nt(r2, t3)) !== void 0 ? n4 : void 0;
            this.each(function() {
              J.set(this, t3, e4);
            });
          }, null, e3, arguments.length > 1, null, true);
        }, removeData: function(t3) {
          return this.each(function() {
            J.remove(this, t3);
          });
        } }), C.extend({ queue: function(t3, e3, n3) {
          var i2;
          if (t3)
            return e3 = (e3 || "fx") + "queue", i2 = Q.get(t3, e3), n3 && (!i2 || Array.isArray(n3) ? i2 = Q.access(t3, e3, C.makeArray(n3)) : i2.push(n3)), i2 || [];
        }, dequeue: function(t3, e3) {
          e3 = e3 || "fx";
          var n3 = C.queue(t3, e3), i2 = n3.length, a2 = n3.shift(), r2 = C._queueHooks(t3, e3);
          a2 === "inprogress" && (a2 = n3.shift(), i2--), a2 && (e3 === "fx" && n3.unshift("inprogress"), delete r2.stop, a2.call(t3, function() {
            C.dequeue(t3, e3);
          }, r2)), !i2 && r2 && r2.empty.fire();
        }, _queueHooks: function(t3, e3) {
          var n3 = e3 + "queueHooks";
          return Q.get(t3, n3) || Q.access(t3, n3, { empty: C.Callbacks("once memory").add(function() {
            Q.remove(t3, [e3 + "queue", n3]);
          }) });
        } }), C.fn.extend({ queue: function(t3, e3) {
          var n3 = 2;
          return typeof t3 != "string" && (e3 = t3, t3 = "fx", n3--), arguments.length < n3 ? C.queue(this[0], t3) : e3 === void 0 ? this : this.each(function() {
            var n4 = C.queue(this, t3, e3);
            C._queueHooks(this, t3), t3 === "fx" && n4[0] !== "inprogress" && C.dequeue(this, t3);
          });
        }, dequeue: function(t3) {
          return this.each(function() {
            C.dequeue(this, t3);
          });
        }, clearQueue: function(t3) {
          return this.queue(t3 || "fx", []);
        }, promise: function(t3, e3) {
          var n3, i2 = 1, a2 = C.Deferred(), r2 = this, o2 = this.length, s2 = function() {
            --i2 || a2.resolveWith(r2, [r2]);
          };
          for (typeof t3 != "string" && (e3 = t3, t3 = void 0), t3 = t3 || "fx"; o2--; )
            (n3 = Q.get(r2[o2], t3 + "queueHooks")) && n3.empty && (i2++, n3.empty.add(s2));
          return s2(), a2.promise(e3);
        } });
        var it = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, at = new RegExp("^(?:([+-])=|)(" + it + ")([a-z%]*)$", "i"), rt = ["Top", "Right", "Bottom", "Left"], ot = y.documentElement, st = function(t3) {
          return C.contains(t3.ownerDocument, t3);
        }, lt = { composed: true };
        ot.getRootNode && (st = function(t3) {
          return C.contains(t3.ownerDocument, t3) || t3.getRootNode(lt) === t3.ownerDocument;
        });
        var ct = function(t3, e3) {
          return (t3 = e3 || t3).style.display === "none" || t3.style.display === "" && st(t3) && C.css(t3, "display") === "none";
        };
        function dt(t3, e3, n3, i2) {
          var a2, r2, o2 = 20, s2 = i2 ? function() {
            return i2.cur();
          } : function() {
            return C.css(t3, e3, "");
          }, l2 = s2(), c2 = n3 && n3[3] || (C.cssNumber[e3] ? "" : "px"), d2 = t3.nodeType && (C.cssNumber[e3] || c2 !== "px" && +l2) && at.exec(C.css(t3, e3));
          if (d2 && d2[3] !== c2) {
            for (l2 /= 2, c2 = c2 || d2[3], d2 = +l2 || 1; o2--; )
              C.style(t3, e3, d2 + c2), (1 - r2) * (1 - (r2 = s2() / l2 || 0.5)) <= 0 && (o2 = 0), d2 /= r2;
            d2 *= 2, C.style(t3, e3, d2 + c2), n3 = n3 || [];
          }
          return n3 && (d2 = +d2 || +l2 || 0, a2 = n3[1] ? d2 + (n3[1] + 1) * n3[2] : +n3[2], i2 && (i2.unit = c2, i2.start = d2, i2.end = a2)), a2;
        }
        var ut = {};
        function ht(t3) {
          var e3, n3 = t3.ownerDocument, i2 = t3.nodeName, a2 = ut[i2];
          return a2 || (e3 = n3.body.appendChild(n3.createElement(i2)), a2 = C.css(e3, "display"), e3.parentNode.removeChild(e3), a2 === "none" && (a2 = "block"), ut[i2] = a2, a2);
        }
        function pt(t3, e3) {
          for (var n3, i2, a2 = [], r2 = 0, o2 = t3.length; r2 < o2; r2++)
            (i2 = t3[r2]).style && (n3 = i2.style.display, e3 ? (n3 === "none" && (a2[r2] = Q.get(i2, "display") || null, a2[r2] || (i2.style.display = "")), i2.style.display === "" && ct(i2) && (a2[r2] = ht(i2))) : n3 !== "none" && (a2[r2] = "none", Q.set(i2, "display", n3)));
          for (r2 = 0; r2 < o2; r2++)
            a2[r2] != null && (t3[r2].style.display = a2[r2]);
          return t3;
        }
        C.fn.extend({ show: function() {
          return pt(this, true);
        }, hide: function() {
          return pt(this);
        }, toggle: function(t3) {
          return typeof t3 == "boolean" ? t3 ? this.show() : this.hide() : this.each(function() {
            ct(this) ? C(this).show() : C(this).hide();
          });
        } });
        var ft, gt, mt = /^(?:checkbox|radio)$/i, vt = /<([a-z][^\/\0>\x20\t\r\n\f]*)/i, bt = /^$|^module$|\/(?:java|ecma)script/i;
        ft = y.createDocumentFragment().appendChild(y.createElement("div")), (gt = y.createElement("input")).setAttribute("type", "radio"), gt.setAttribute("checked", "checked"), gt.setAttribute("name", "t"), ft.appendChild(gt), m.checkClone = ft.cloneNode(true).cloneNode(true).lastChild.checked, ft.innerHTML = "<textarea>x</textarea>", m.noCloneChecked = !!ft.cloneNode(true).lastChild.defaultValue, ft.innerHTML = "<option></option>", m.option = !!ft.lastChild;
        var yt = { thead: [1, "<table>", "</table>"], col: [2, "<table><colgroup>", "</colgroup></table>"], tr: [2, "<table><tbody>", "</tbody></table>"], td: [3, "<table><tbody><tr>", "</tr></tbody></table>"], _default: [0, "", ""] };
        function xt(t3, e3) {
          var n3;
          return n3 = t3.getElementsByTagName !== void 0 ? t3.getElementsByTagName(e3 || "*") : t3.querySelectorAll !== void 0 ? t3.querySelectorAll(e3 || "*") : [], e3 === void 0 || e3 && I(t3, e3) ? C.merge([t3], n3) : n3;
        }
        function _t(t3, e3) {
          for (var n3 = 0, i2 = t3.length; n3 < i2; n3++)
            Q.set(t3[n3], "globalEval", !e3 || Q.get(e3[n3], "globalEval"));
        }
        yt.tbody = yt.tfoot = yt.colgroup = yt.caption = yt.thead, yt.th = yt.td, m.option || (yt.optgroup = yt.option = [1, "<select multiple='multiple'>", "</select>"]);
        var wt = /<|&#?\w+;/;
        function St(t3, e3, n3, i2, a2) {
          for (var r2, o2, s2, l2, c2, d2, u2 = e3.createDocumentFragment(), h2 = [], p2 = 0, f2 = t3.length; p2 < f2; p2++)
            if ((r2 = t3[p2]) || r2 === 0)
              if (w(r2) === "object")
                C.merge(h2, r2.nodeType ? [r2] : r2);
              else if (wt.test(r2)) {
                for (o2 = o2 || u2.appendChild(e3.createElement("div")), s2 = (vt.exec(r2) || ["", ""])[1].toLowerCase(), l2 = yt[s2] || yt._default, o2.innerHTML = l2[1] + C.htmlPrefilter(r2) + l2[2], d2 = l2[0]; d2--; )
                  o2 = o2.lastChild;
                C.merge(h2, o2.childNodes), (o2 = u2.firstChild).textContent = "";
              } else
                h2.push(e3.createTextNode(r2));
          for (u2.textContent = "", p2 = 0; r2 = h2[p2++]; )
            if (i2 && C.inArray(r2, i2) > -1)
              a2 && a2.push(r2);
            else if (c2 = st(r2), o2 = xt(u2.appendChild(r2), "script"), c2 && _t(o2), n3)
              for (d2 = 0; r2 = o2[d2++]; )
                bt.test(r2.type || "") && n3.push(r2);
          return u2;
        }
        var Ct = /^([^.]*)(?:\.(.+)|)/;
        function kt() {
          return true;
        }
        function Dt() {
          return false;
        }
        function Tt(t3, e3) {
          return t3 === function() {
            try {
              return y.activeElement;
            } catch (t4) {
            }
          }() == (e3 === "focus");
        }
        function Et(t3, e3, n3, i2, a2, r2) {
          var o2, s2;
          if (typeof e3 == "object") {
            for (s2 in typeof n3 != "string" && (i2 = i2 || n3, n3 = void 0), e3)
              Et(t3, s2, n3, i2, e3[s2], r2);
            return t3;
          }
          if (i2 == null && a2 == null ? (a2 = n3, i2 = n3 = void 0) : a2 == null && (typeof n3 == "string" ? (a2 = i2, i2 = void 0) : (a2 = i2, i2 = n3, n3 = void 0)), a2 === false)
            a2 = Dt;
          else if (!a2)
            return t3;
          return r2 === 1 && (o2 = a2, a2 = function(t4) {
            return C().off(t4), o2.apply(this, arguments);
          }, a2.guid = o2.guid || (o2.guid = C.guid++)), t3.each(function() {
            C.event.add(this, e3, a2, i2, n3);
          });
        }
        function At(t3, e3, n3) {
          n3 ? (Q.set(t3, e3, false), C.event.add(t3, e3, { namespace: false, handler: function(t4) {
            var i2, a2, r2 = Q.get(this, e3);
            if (1 & t4.isTrigger && this[e3]) {
              if (r2.length)
                (C.event.special[e3] || {}).delegateType && t4.stopPropagation();
              else if (r2 = s.call(arguments), Q.set(this, e3, r2), i2 = n3(this, e3), this[e3](), r2 !== (a2 = Q.get(this, e3)) || i2 ? Q.set(this, e3, false) : a2 = {}, r2 !== a2)
                return t4.stopImmediatePropagation(), t4.preventDefault(), a2 && a2.value;
            } else
              r2.length && (Q.set(this, e3, { value: C.event.trigger(C.extend(r2[0], C.Event.prototype), r2.slice(1), this) }), t4.stopImmediatePropagation());
          } })) : Q.get(t3, e3) === void 0 && C.event.add(t3, e3, kt);
        }
        C.event = { global: {}, add: function(t3, e3, n3, i2, a2) {
          var r2, o2, s2, l2, c2, d2, u2, h2, p2, f2, g2, m2 = Q.get(t3);
          if (Z(t3))
            for (n3.handler && (n3 = (r2 = n3).handler, a2 = r2.selector), a2 && C.find.matchesSelector(ot, a2), n3.guid || (n3.guid = C.guid++), (l2 = m2.events) || (l2 = m2.events = /* @__PURE__ */ Object.create(null)), (o2 = m2.handle) || (o2 = m2.handle = function(e4) {
              return C !== void 0 && C.event.triggered !== e4.type ? C.event.dispatch.apply(t3, arguments) : void 0;
            }), c2 = (e3 = (e3 || "").match(F) || [""]).length; c2--; )
              p2 = g2 = (s2 = Ct.exec(e3[c2]) || [])[1], f2 = (s2[2] || "").split(".").sort(), p2 && (u2 = C.event.special[p2] || {}, p2 = (a2 ? u2.delegateType : u2.bindType) || p2, u2 = C.event.special[p2] || {}, d2 = C.extend({ type: p2, origType: g2, data: i2, handler: n3, guid: n3.guid, selector: a2, needsContext: a2 && C.expr.match.needsContext.test(a2), namespace: f2.join(".") }, r2), (h2 = l2[p2]) || ((h2 = l2[p2] = []).delegateCount = 0, u2.setup && u2.setup.call(t3, i2, f2, o2) !== false || t3.addEventListener && t3.addEventListener(p2, o2)), u2.add && (u2.add.call(t3, d2), d2.handler.guid || (d2.handler.guid = n3.guid)), a2 ? h2.splice(h2.delegateCount++, 0, d2) : h2.push(d2), C.event.global[p2] = true);
        }, remove: function(t3, e3, n3, i2, a2) {
          var r2, o2, s2, l2, c2, d2, u2, h2, p2, f2, g2, m2 = Q.hasData(t3) && Q.get(t3);
          if (m2 && (l2 = m2.events)) {
            for (c2 = (e3 = (e3 || "").match(F) || [""]).length; c2--; )
              if (p2 = g2 = (s2 = Ct.exec(e3[c2]) || [])[1], f2 = (s2[2] || "").split(".").sort(), p2) {
                for (u2 = C.event.special[p2] || {}, h2 = l2[p2 = (i2 ? u2.delegateType : u2.bindType) || p2] || [], s2 = s2[2] && new RegExp("(^|\\.)" + f2.join("\\.(?:.*\\.|)") + "(\\.|$)"), o2 = r2 = h2.length; r2--; )
                  d2 = h2[r2], !a2 && g2 !== d2.origType || n3 && n3.guid !== d2.guid || s2 && !s2.test(d2.namespace) || i2 && i2 !== d2.selector && (i2 !== "**" || !d2.selector) || (h2.splice(r2, 1), d2.selector && h2.delegateCount--, u2.remove && u2.remove.call(t3, d2));
                o2 && !h2.length && (u2.teardown && u2.teardown.call(t3, f2, m2.handle) !== false || C.removeEvent(t3, p2, m2.handle), delete l2[p2]);
              } else
                for (p2 in l2)
                  C.event.remove(t3, p2 + e3[c2], n3, i2, true);
            C.isEmptyObject(l2) && Q.remove(t3, "handle events");
          }
        }, dispatch: function(t3) {
          var e3, n3, i2, a2, r2, o2, s2 = new Array(arguments.length), l2 = C.event.fix(t3), c2 = (Q.get(this, "events") || /* @__PURE__ */ Object.create(null))[l2.type] || [], d2 = C.event.special[l2.type] || {};
          for (s2[0] = l2, e3 = 1; e3 < arguments.length; e3++)
            s2[e3] = arguments[e3];
          if (l2.delegateTarget = this, !d2.preDispatch || d2.preDispatch.call(this, l2) !== false) {
            for (o2 = C.event.handlers.call(this, l2, c2), e3 = 0; (a2 = o2[e3++]) && !l2.isPropagationStopped(); )
              for (l2.currentTarget = a2.elem, n3 = 0; (r2 = a2.handlers[n3++]) && !l2.isImmediatePropagationStopped(); )
                l2.rnamespace && r2.namespace !== false && !l2.rnamespace.test(r2.namespace) || (l2.handleObj = r2, l2.data = r2.data, (i2 = ((C.event.special[r2.origType] || {}).handle || r2.handler).apply(a2.elem, s2)) !== void 0 && (l2.result = i2) === false && (l2.preventDefault(), l2.stopPropagation()));
            return d2.postDispatch && d2.postDispatch.call(this, l2), l2.result;
          }
        }, handlers: function(t3, e3) {
          var n3, i2, a2, r2, o2, s2 = [], l2 = e3.delegateCount, c2 = t3.target;
          if (l2 && c2.nodeType && !(t3.type === "click" && t3.button >= 1)) {
            for (; c2 !== this; c2 = c2.parentNode || this)
              if (c2.nodeType === 1 && (t3.type !== "click" || c2.disabled !== true)) {
                for (r2 = [], o2 = {}, n3 = 0; n3 < l2; n3++)
                  o2[a2 = (i2 = e3[n3]).selector + " "] === void 0 && (o2[a2] = i2.needsContext ? C(a2, this).index(c2) > -1 : C.find(a2, this, null, [c2]).length), o2[a2] && r2.push(i2);
                r2.length && s2.push({ elem: c2, handlers: r2 });
              }
          }
          return c2 = this, l2 < e3.length && s2.push({ elem: c2, handlers: e3.slice(l2) }), s2;
        }, addProp: function(t3, e3) {
          Object.defineProperty(C.Event.prototype, t3, { enumerable: true, configurable: true, get: v(e3) ? function() {
            if (this.originalEvent)
              return e3(this.originalEvent);
          } : function() {
            if (this.originalEvent)
              return this.originalEvent[t3];
          }, set: function(e4) {
            Object.defineProperty(this, t3, { enumerable: true, configurable: true, writable: true, value: e4 });
          } });
        }, fix: function(t3) {
          return t3[C.expando] ? t3 : new C.Event(t3);
        }, special: { load: { noBubble: true }, click: { setup: function(t3) {
          var e3 = this || t3;
          return mt.test(e3.type) && e3.click && I(e3, "input") && At(e3, "click", kt), false;
        }, trigger: function(t3) {
          var e3 = this || t3;
          return mt.test(e3.type) && e3.click && I(e3, "input") && At(e3, "click"), true;
        }, _default: function(t3) {
          var e3 = t3.target;
          return mt.test(e3.type) && e3.click && I(e3, "input") && Q.get(e3, "click") || I(e3, "a");
        } }, beforeunload: { postDispatch: function(t3) {
          t3.result !== void 0 && t3.originalEvent && (t3.originalEvent.returnValue = t3.result);
        } } } }, C.removeEvent = function(t3, e3, n3) {
          t3.removeEventListener && t3.removeEventListener(e3, n3);
        }, C.Event = function(t3, e3) {
          if (!(this instanceof C.Event))
            return new C.Event(t3, e3);
          t3 && t3.type ? (this.originalEvent = t3, this.type = t3.type, this.isDefaultPrevented = t3.defaultPrevented || t3.defaultPrevented === void 0 && t3.returnValue === false ? kt : Dt, this.target = t3.target && t3.target.nodeType === 3 ? t3.target.parentNode : t3.target, this.currentTarget = t3.currentTarget, this.relatedTarget = t3.relatedTarget) : this.type = t3, e3 && C.extend(this, e3), this.timeStamp = t3 && t3.timeStamp || Date.now(), this[C.expando] = true;
        }, C.Event.prototype = { constructor: C.Event, isDefaultPrevented: Dt, isPropagationStopped: Dt, isImmediatePropagationStopped: Dt, isSimulated: false, preventDefault: function() {
          var t3 = this.originalEvent;
          this.isDefaultPrevented = kt, t3 && !this.isSimulated && t3.preventDefault();
        }, stopPropagation: function() {
          var t3 = this.originalEvent;
          this.isPropagationStopped = kt, t3 && !this.isSimulated && t3.stopPropagation();
        }, stopImmediatePropagation: function() {
          var t3 = this.originalEvent;
          this.isImmediatePropagationStopped = kt, t3 && !this.isSimulated && t3.stopImmediatePropagation(), this.stopPropagation();
        } }, C.each({ altKey: true, bubbles: true, cancelable: true, changedTouches: true, ctrlKey: true, detail: true, eventPhase: true, metaKey: true, pageX: true, pageY: true, shiftKey: true, view: true, char: true, code: true, charCode: true, key: true, keyCode: true, button: true, buttons: true, clientX: true, clientY: true, offsetX: true, offsetY: true, pointerId: true, pointerType: true, screenX: true, screenY: true, targetTouches: true, toElement: true, touches: true, which: true }, C.event.addProp), C.each({ focus: "focusin", blur: "focusout" }, function(t3, e3) {
          C.event.special[t3] = { setup: function() {
            return At(this, t3, Tt), false;
          }, trigger: function() {
            return At(this, t3), true;
          }, _default: function() {
            return true;
          }, delegateType: e3 };
        }), C.each({ mouseenter: "mouseover", mouseleave: "mouseout", pointerenter: "pointerover", pointerleave: "pointerout" }, function(t3, e3) {
          C.event.special[t3] = { delegateType: e3, bindType: e3, handle: function(t4) {
            var n3, i2 = this, a2 = t4.relatedTarget, r2 = t4.handleObj;
            return a2 && (a2 === i2 || C.contains(i2, a2)) || (t4.type = r2.origType, n3 = r2.handler.apply(this, arguments), t4.type = e3), n3;
          } };
        }), C.fn.extend({ on: function(t3, e3, n3, i2) {
          return Et(this, t3, e3, n3, i2);
        }, one: function(t3, e3, n3, i2) {
          return Et(this, t3, e3, n3, i2, 1);
        }, off: function(t3, e3, n3) {
          var i2, a2;
          if (t3 && t3.preventDefault && t3.handleObj)
            return i2 = t3.handleObj, C(t3.delegateTarget).off(i2.namespace ? i2.origType + "." + i2.namespace : i2.origType, i2.selector, i2.handler), this;
          if (typeof t3 == "object") {
            for (a2 in t3)
              this.off(a2, e3, t3[a2]);
            return this;
          }
          return e3 !== false && typeof e3 != "function" || (n3 = e3, e3 = void 0), n3 === false && (n3 = Dt), this.each(function() {
            C.event.remove(this, t3, n3, e3);
          });
        } });
        var It = /<script|<style|<link/i, Mt = /checked\s*(?:[^=]|=\s*.checked.)/i, Rt = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;
        function Pt(t3, e3) {
          return I(t3, "table") && I(e3.nodeType !== 11 ? e3 : e3.firstChild, "tr") && C(t3).children("tbody")[0] || t3;
        }
        function Ot(t3) {
          return t3.type = (t3.getAttribute("type") !== null) + "/" + t3.type, t3;
        }
        function jt(t3) {
          return (t3.type || "").slice(0, 5) === "true/" ? t3.type = t3.type.slice(5) : t3.removeAttribute("type"), t3;
        }
        function Nt(t3, e3) {
          var n3, i2, a2, r2, o2, s2;
          if (e3.nodeType === 1) {
            if (Q.hasData(t3) && (s2 = Q.get(t3).events))
              for (a2 in Q.remove(e3, "handle events"), s2)
                for (n3 = 0, i2 = s2[a2].length; n3 < i2; n3++)
                  C.event.add(e3, a2, s2[a2][n3]);
            J.hasData(t3) && (r2 = J.access(t3), o2 = C.extend({}, r2), J.set(e3, o2));
          }
        }
        function Lt(t3, e3) {
          var n3 = e3.nodeName.toLowerCase();
          n3 === "input" && mt.test(t3.type) ? e3.checked = t3.checked : n3 !== "input" && n3 !== "textarea" || (e3.defaultValue = t3.defaultValue);
        }
        function Ft(t3, e3, n3, i2) {
          e3 = l(e3);
          var a2, r2, o2, s2, c2, d2, u2 = 0, h2 = t3.length, p2 = h2 - 1, f2 = e3[0], g2 = v(f2);
          if (g2 || h2 > 1 && typeof f2 == "string" && !m.checkClone && Mt.test(f2))
            return t3.each(function(a3) {
              var r3 = t3.eq(a3);
              g2 && (e3[0] = f2.call(this, a3, r3.html())), Ft(r3, e3, n3, i2);
            });
          if (h2 && (r2 = (a2 = St(e3, t3[0].ownerDocument, false, t3, i2)).firstChild, a2.childNodes.length === 1 && (a2 = r2), r2 || i2)) {
            for (s2 = (o2 = C.map(xt(a2, "script"), Ot)).length; u2 < h2; u2++)
              c2 = a2, u2 !== p2 && (c2 = C.clone(c2, true, true), s2 && C.merge(o2, xt(c2, "script"))), n3.call(t3[u2], c2, u2);
            if (s2)
              for (d2 = o2[o2.length - 1].ownerDocument, C.map(o2, jt), u2 = 0; u2 < s2; u2++)
                c2 = o2[u2], bt.test(c2.type || "") && !Q.access(c2, "globalEval") && C.contains(d2, c2) && (c2.src && (c2.type || "").toLowerCase() !== "module" ? C._evalUrl && !c2.noModule && C._evalUrl(c2.src, { nonce: c2.nonce || c2.getAttribute("nonce") }, d2) : _(c2.textContent.replace(Rt, ""), c2, d2));
          }
          return t3;
        }
        function Ht(t3, e3, n3) {
          for (var i2, a2 = e3 ? C.filter(e3, t3) : t3, r2 = 0; (i2 = a2[r2]) != null; r2++)
            n3 || i2.nodeType !== 1 || C.cleanData(xt(i2)), i2.parentNode && (n3 && st(i2) && _t(xt(i2, "script")), i2.parentNode.removeChild(i2));
          return t3;
        }
        C.extend({ htmlPrefilter: function(t3) {
          return t3;
        }, clone: function(t3, e3, n3) {
          var i2, a2, r2, o2, s2 = t3.cloneNode(true), l2 = st(t3);
          if (!(m.noCloneChecked || t3.nodeType !== 1 && t3.nodeType !== 11 || C.isXMLDoc(t3)))
            for (o2 = xt(s2), i2 = 0, a2 = (r2 = xt(t3)).length; i2 < a2; i2++)
              Lt(r2[i2], o2[i2]);
          if (e3)
            if (n3)
              for (r2 = r2 || xt(t3), o2 = o2 || xt(s2), i2 = 0, a2 = r2.length; i2 < a2; i2++)
                Nt(r2[i2], o2[i2]);
            else
              Nt(t3, s2);
          return (o2 = xt(s2, "script")).length > 0 && _t(o2, !l2 && xt(t3, "script")), s2;
        }, cleanData: function(t3) {
          for (var e3, n3, i2, a2 = C.event.special, r2 = 0; (n3 = t3[r2]) !== void 0; r2++)
            if (Z(n3)) {
              if (e3 = n3[Q.expando]) {
                if (e3.events)
                  for (i2 in e3.events)
                    a2[i2] ? C.event.remove(n3, i2) : C.removeEvent(n3, i2, e3.handle);
                n3[Q.expando] = void 0;
              }
              n3[J.expando] && (n3[J.expando] = void 0);
            }
        } }), C.fn.extend({ detach: function(t3) {
          return Ht(this, t3, true);
        }, remove: function(t3) {
          return Ht(this, t3);
        }, text: function(t3) {
          return V(this, function(t4) {
            return t4 === void 0 ? C.text(this) : this.empty().each(function() {
              this.nodeType !== 1 && this.nodeType !== 11 && this.nodeType !== 9 || (this.textContent = t4);
            });
          }, null, t3, arguments.length);
        }, append: function() {
          return Ft(this, arguments, function(t3) {
            this.nodeType !== 1 && this.nodeType !== 11 && this.nodeType !== 9 || Pt(this, t3).appendChild(t3);
          });
        }, prepend: function() {
          return Ft(this, arguments, function(t3) {
            if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {
              var e3 = Pt(this, t3);
              e3.insertBefore(t3, e3.firstChild);
            }
          });
        }, before: function() {
          return Ft(this, arguments, function(t3) {
            this.parentNode && this.parentNode.insertBefore(t3, this);
          });
        }, after: function() {
          return Ft(this, arguments, function(t3) {
            this.parentNode && this.parentNode.insertBefore(t3, this.nextSibling);
          });
        }, empty: function() {
          for (var t3, e3 = 0; (t3 = this[e3]) != null; e3++)
            t3.nodeType === 1 && (C.cleanData(xt(t3, false)), t3.textContent = "");
          return this;
        }, clone: function(t3, e3) {
          return t3 = t3 != null && t3, e3 = e3 == null ? t3 : e3, this.map(function() {
            return C.clone(this, t3, e3);
          });
        }, html: function(t3) {
          return V(this, function(t4) {
            var e3 = this[0] || {}, n3 = 0, i2 = this.length;
            if (t4 === void 0 && e3.nodeType === 1)
              return e3.innerHTML;
            if (typeof t4 == "string" && !It.test(t4) && !yt[(vt.exec(t4) || ["", ""])[1].toLowerCase()]) {
              t4 = C.htmlPrefilter(t4);
              try {
                for (; n3 < i2; n3++)
                  (e3 = this[n3] || {}).nodeType === 1 && (C.cleanData(xt(e3, false)), e3.innerHTML = t4);
                e3 = 0;
              } catch (t5) {
              }
            }
            e3 && this.empty().append(t4);
          }, null, t3, arguments.length);
        }, replaceWith: function() {
          var t3 = [];
          return Ft(this, arguments, function(e3) {
            var n3 = this.parentNode;
            C.inArray(this, t3) < 0 && (C.cleanData(xt(this)), n3 && n3.replaceChild(e3, this));
          }, t3);
        } }), C.each({ appendTo: "append", prependTo: "prepend", insertBefore: "before", insertAfter: "after", replaceAll: "replaceWith" }, function(t3, e3) {
          C.fn[t3] = function(t4) {
            for (var n3, i2 = [], a2 = C(t4), r2 = a2.length - 1, o2 = 0; o2 <= r2; o2++)
              n3 = o2 === r2 ? this : this.clone(true), C(a2[o2])[e3](n3), c.apply(i2, n3.get());
            return this.pushStack(i2);
          };
        });
        var Bt = new RegExp("^(" + it + ")(?!px)[a-z%]+$", "i"), qt = function(t3) {
          var e3 = t3.ownerDocument.defaultView;
          return e3 && e3.opener || (e3 = i), e3.getComputedStyle(t3);
        }, zt = function(t3, e3, n3) {
          var i2, a2, r2 = {};
          for (a2 in e3)
            r2[a2] = t3.style[a2], t3.style[a2] = e3[a2];
          for (a2 in i2 = n3.call(t3), e3)
            t3.style[a2] = r2[a2];
          return i2;
        }, Wt = new RegExp(rt.join("|"), "i");
        function $t(t3, e3, n3) {
          var i2, a2, r2, o2, s2 = t3.style;
          return (n3 = n3 || qt(t3)) && ((o2 = n3.getPropertyValue(e3) || n3[e3]) !== "" || st(t3) || (o2 = C.style(t3, e3)), !m.pixelBoxStyles() && Bt.test(o2) && Wt.test(e3) && (i2 = s2.width, a2 = s2.minWidth, r2 = s2.maxWidth, s2.minWidth = s2.maxWidth = s2.width = o2, o2 = n3.width, s2.width = i2, s2.minWidth = a2, s2.maxWidth = r2)), o2 !== void 0 ? o2 + "" : o2;
        }
        function Vt(t3, e3) {
          return { get: function() {
            if (!t3())
              return (this.get = e3).apply(this, arguments);
            delete this.get;
          } };
        }
        !function() {
          function t3() {
            if (d2) {
              c2.style.cssText = "position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0", d2.style.cssText = "position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%", ot.appendChild(c2).appendChild(d2);
              var t4 = i.getComputedStyle(d2);
              n3 = t4.top !== "1%", l2 = e3(t4.marginLeft) === 12, d2.style.right = "60%", o2 = e3(t4.right) === 36, a2 = e3(t4.width) === 36, d2.style.position = "absolute", r2 = e3(d2.offsetWidth / 3) === 12, ot.removeChild(c2), d2 = null;
            }
          }
          function e3(t4) {
            return Math.round(parseFloat(t4));
          }
          var n3, a2, r2, o2, s2, l2, c2 = y.createElement("div"), d2 = y.createElement("div");
          d2.style && (d2.style.backgroundClip = "content-box", d2.cloneNode(true).style.backgroundClip = "", m.clearCloneStyle = d2.style.backgroundClip === "content-box", C.extend(m, { boxSizingReliable: function() {
            return t3(), a2;
          }, pixelBoxStyles: function() {
            return t3(), o2;
          }, pixelPosition: function() {
            return t3(), n3;
          }, reliableMarginLeft: function() {
            return t3(), l2;
          }, scrollboxSize: function() {
            return t3(), r2;
          }, reliableTrDimensions: function() {
            var t4, e4, n4, a3;
            return s2 == null && (t4 = y.createElement("table"), e4 = y.createElement("tr"), n4 = y.createElement("div"), t4.style.cssText = "position:absolute;left:-11111px;border-collapse:separate", e4.style.cssText = "border:1px solid", e4.style.height = "1px", n4.style.height = "9px", n4.style.display = "block", ot.appendChild(t4).appendChild(e4).appendChild(n4), a3 = i.getComputedStyle(e4), s2 = parseInt(a3.height, 10) + parseInt(a3.borderTopWidth, 10) + parseInt(a3.borderBottomWidth, 10) === e4.offsetHeight, ot.removeChild(t4)), s2;
          } }));
        }();
        var Yt = ["Webkit", "Moz", "ms"], Ut = y.createElement("div").style, Gt = {};
        function Xt(t3) {
          var e3 = C.cssProps[t3] || Gt[t3];
          return e3 || (t3 in Ut ? t3 : Gt[t3] = function(t4) {
            for (var e4 = t4[0].toUpperCase() + t4.slice(1), n3 = Yt.length; n3--; )
              if ((t4 = Yt[n3] + e4) in Ut)
                return t4;
          }(t3) || t3);
        }
        var Zt = /^(none|table(?!-c[ea]).+)/, Kt = /^--/, Qt = { position: "absolute", visibility: "hidden", display: "block" }, Jt = { letterSpacing: "0", fontWeight: "400" };
        function te(t3, e3, n3) {
          var i2 = at.exec(e3);
          return i2 ? Math.max(0, i2[2] - (n3 || 0)) + (i2[3] || "px") : e3;
        }
        function ee(t3, e3, n3, i2, a2, r2) {
          var o2 = e3 === "width" ? 1 : 0, s2 = 0, l2 = 0;
          if (n3 === (i2 ? "border" : "content"))
            return 0;
          for (; o2 < 4; o2 += 2)
            n3 === "margin" && (l2 += C.css(t3, n3 + rt[o2], true, a2)), i2 ? (n3 === "content" && (l2 -= C.css(t3, "padding" + rt[o2], true, a2)), n3 !== "margin" && (l2 -= C.css(t3, "border" + rt[o2] + "Width", true, a2))) : (l2 += C.css(t3, "padding" + rt[o2], true, a2), n3 !== "padding" ? l2 += C.css(t3, "border" + rt[o2] + "Width", true, a2) : s2 += C.css(t3, "border" + rt[o2] + "Width", true, a2));
          return !i2 && r2 >= 0 && (l2 += Math.max(0, Math.ceil(t3["offset" + e3[0].toUpperCase() + e3.slice(1)] - r2 - l2 - s2 - 0.5)) || 0), l2;
        }
        function ne(t3, e3, n3) {
          var i2 = qt(t3), a2 = (!m.boxSizingReliable() || n3) && C.css(t3, "boxSizing", false, i2) === "border-box", r2 = a2, o2 = $t(t3, e3, i2), s2 = "offset" + e3[0].toUpperCase() + e3.slice(1);
          if (Bt.test(o2)) {
            if (!n3)
              return o2;
            o2 = "auto";
          }
          return (!m.boxSizingReliable() && a2 || !m.reliableTrDimensions() && I(t3, "tr") || o2 === "auto" || !parseFloat(o2) && C.css(t3, "display", false, i2) === "inline") && t3.getClientRects().length && (a2 = C.css(t3, "boxSizing", false, i2) === "border-box", (r2 = s2 in t3) && (o2 = t3[s2])), (o2 = parseFloat(o2) || 0) + ee(t3, e3, n3 || (a2 ? "border" : "content"), r2, i2, o2) + "px";
        }
        function ie(t3, e3, n3, i2, a2) {
          return new ie.prototype.init(t3, e3, n3, i2, a2);
        }
        C.extend({ cssHooks: { opacity: { get: function(t3, e3) {
          if (e3) {
            var n3 = $t(t3, "opacity");
            return n3 === "" ? "1" : n3;
          }
        } } }, cssNumber: { animationIterationCount: true, columnCount: true, fillOpacity: true, flexGrow: true, flexShrink: true, fontWeight: true, gridArea: true, gridColumn: true, gridColumnEnd: true, gridColumnStart: true, gridRow: true, gridRowEnd: true, gridRowStart: true, lineHeight: true, opacity: true, order: true, orphans: true, widows: true, zIndex: true, zoom: true }, cssProps: {}, style: function(t3, e3, n3, i2) {
          if (t3 && t3.nodeType !== 3 && t3.nodeType !== 8 && t3.style) {
            var a2, r2, o2, s2 = X(e3), l2 = Kt.test(e3), c2 = t3.style;
            if (l2 || (e3 = Xt(s2)), o2 = C.cssHooks[e3] || C.cssHooks[s2], n3 === void 0)
              return o2 && "get" in o2 && (a2 = o2.get(t3, false, i2)) !== void 0 ? a2 : c2[e3];
            (r2 = typeof n3) === "string" && (a2 = at.exec(n3)) && a2[1] && (n3 = dt(t3, e3, a2), r2 = "number"), n3 != null && n3 == n3 && (r2 !== "number" || l2 || (n3 += a2 && a2[3] || (C.cssNumber[s2] ? "" : "px")), m.clearCloneStyle || n3 !== "" || e3.indexOf("background") !== 0 || (c2[e3] = "inherit"), o2 && "set" in o2 && (n3 = o2.set(t3, n3, i2)) === void 0 || (l2 ? c2.setProperty(e3, n3) : c2[e3] = n3));
          }
        }, css: function(t3, e3, n3, i2) {
          var a2, r2, o2, s2 = X(e3);
          return Kt.test(e3) || (e3 = Xt(s2)), (o2 = C.cssHooks[e3] || C.cssHooks[s2]) && "get" in o2 && (a2 = o2.get(t3, true, n3)), a2 === void 0 && (a2 = $t(t3, e3, i2)), a2 === "normal" && e3 in Jt && (a2 = Jt[e3]), n3 === "" || n3 ? (r2 = parseFloat(a2), n3 === true || isFinite(r2) ? r2 || 0 : a2) : a2;
        } }), C.each(["height", "width"], function(t3, e3) {
          C.cssHooks[e3] = { get: function(t4, n3, i2) {
            if (n3)
              return !Zt.test(C.css(t4, "display")) || t4.getClientRects().length && t4.getBoundingClientRect().width ? ne(t4, e3, i2) : zt(t4, Qt, function() {
                return ne(t4, e3, i2);
              });
          }, set: function(t4, n3, i2) {
            var a2, r2 = qt(t4), o2 = !m.scrollboxSize() && r2.position === "absolute", s2 = (o2 || i2) && C.css(t4, "boxSizing", false, r2) === "border-box", l2 = i2 ? ee(t4, e3, i2, s2, r2) : 0;
            return s2 && o2 && (l2 -= Math.ceil(t4["offset" + e3[0].toUpperCase() + e3.slice(1)] - parseFloat(r2[e3]) - ee(t4, e3, "border", false, r2) - 0.5)), l2 && (a2 = at.exec(n3)) && (a2[3] || "px") !== "px" && (t4.style[e3] = n3, n3 = C.css(t4, e3)), te(0, n3, l2);
          } };
        }), C.cssHooks.marginLeft = Vt(m.reliableMarginLeft, function(t3, e3) {
          if (e3)
            return (parseFloat($t(t3, "marginLeft")) || t3.getBoundingClientRect().left - zt(t3, { marginLeft: 0 }, function() {
              return t3.getBoundingClientRect().left;
            })) + "px";
        }), C.each({ margin: "", padding: "", border: "Width" }, function(t3, e3) {
          C.cssHooks[t3 + e3] = { expand: function(n3) {
            for (var i2 = 0, a2 = {}, r2 = typeof n3 == "string" ? n3.split(" ") : [n3]; i2 < 4; i2++)
              a2[t3 + rt[i2] + e3] = r2[i2] || r2[i2 - 2] || r2[0];
            return a2;
          } }, t3 !== "margin" && (C.cssHooks[t3 + e3].set = te);
        }), C.fn.extend({ css: function(t3, e3) {
          return V(this, function(t4, e4, n3) {
            var i2, a2, r2 = {}, o2 = 0;
            if (Array.isArray(e4)) {
              for (i2 = qt(t4), a2 = e4.length; o2 < a2; o2++)
                r2[e4[o2]] = C.css(t4, e4[o2], false, i2);
              return r2;
            }
            return n3 !== void 0 ? C.style(t4, e4, n3) : C.css(t4, e4);
          }, t3, e3, arguments.length > 1);
        } }), C.Tween = ie, ie.prototype = { constructor: ie, init: function(t3, e3, n3, i2, a2, r2) {
          this.elem = t3, this.prop = n3, this.easing = a2 || C.easing._default, this.options = e3, this.start = this.now = this.cur(), this.end = i2, this.unit = r2 || (C.cssNumber[n3] ? "" : "px");
        }, cur: function() {
          var t3 = ie.propHooks[this.prop];
          return t3 && t3.get ? t3.get(this) : ie.propHooks._default.get(this);
        }, run: function(t3) {
          var e3, n3 = ie.propHooks[this.prop];
          return this.options.duration ? this.pos = e3 = C.easing[this.easing](t3, this.options.duration * t3, 0, 1, this.options.duration) : this.pos = e3 = t3, this.now = (this.end - this.start) * e3 + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), n3 && n3.set ? n3.set(this) : ie.propHooks._default.set(this), this;
        } }, ie.prototype.init.prototype = ie.prototype, ie.propHooks = { _default: { get: function(t3) {
          var e3;
          return t3.elem.nodeType !== 1 || t3.elem[t3.prop] != null && t3.elem.style[t3.prop] == null ? t3.elem[t3.prop] : (e3 = C.css(t3.elem, t3.prop, "")) && e3 !== "auto" ? e3 : 0;
        }, set: function(t3) {
          C.fx.step[t3.prop] ? C.fx.step[t3.prop](t3) : t3.elem.nodeType !== 1 || !C.cssHooks[t3.prop] && t3.elem.style[Xt(t3.prop)] == null ? t3.elem[t3.prop] = t3.now : C.style(t3.elem, t3.prop, t3.now + t3.unit);
        } } }, ie.propHooks.scrollTop = ie.propHooks.scrollLeft = { set: function(t3) {
          t3.elem.nodeType && t3.elem.parentNode && (t3.elem[t3.prop] = t3.now);
        } }, C.easing = { linear: function(t3) {
          return t3;
        }, swing: function(t3) {
          return 0.5 - Math.cos(t3 * Math.PI) / 2;
        }, _default: "swing" }, C.fx = ie.prototype.init, C.fx.step = {};
        var ae, re, oe = /^(?:toggle|show|hide)$/, se = /queueHooks$/;
        function le() {
          re && (y.hidden === false && i.requestAnimationFrame ? i.requestAnimationFrame(le) : i.setTimeout(le, C.fx.interval), C.fx.tick());
        }
        function ce() {
          return i.setTimeout(function() {
            ae = void 0;
          }), ae = Date.now();
        }
        function de(t3, e3) {
          var n3, i2 = 0, a2 = { height: t3 };
          for (e3 = e3 ? 1 : 0; i2 < 4; i2 += 2 - e3)
            a2["margin" + (n3 = rt[i2])] = a2["padding" + n3] = t3;
          return e3 && (a2.opacity = a2.width = t3), a2;
        }
        function ue(t3, e3, n3) {
          for (var i2, a2 = (he.tweeners[e3] || []).concat(he.tweeners["*"]), r2 = 0, o2 = a2.length; r2 < o2; r2++)
            if (i2 = a2[r2].call(n3, e3, t3))
              return i2;
        }
        function he(t3, e3, n3) {
          var i2, a2, r2 = 0, o2 = he.prefilters.length, s2 = C.Deferred().always(function() {
            delete l2.elem;
          }), l2 = function() {
            if (a2)
              return false;
            for (var e4 = ae || ce(), n4 = Math.max(0, c2.startTime + c2.duration - e4), i3 = 1 - (n4 / c2.duration || 0), r3 = 0, o3 = c2.tweens.length; r3 < o3; r3++)
              c2.tweens[r3].run(i3);
            return s2.notifyWith(t3, [c2, i3, n4]), i3 < 1 && o3 ? n4 : (o3 || s2.notifyWith(t3, [c2, 1, 0]), s2.resolveWith(t3, [c2]), false);
          }, c2 = s2.promise({ elem: t3, props: C.extend({}, e3), opts: C.extend(true, { specialEasing: {}, easing: C.easing._default }, n3), originalProperties: e3, originalOptions: n3, startTime: ae || ce(), duration: n3.duration, tweens: [], createTween: function(e4, n4) {
            var i3 = C.Tween(t3, c2.opts, e4, n4, c2.opts.specialEasing[e4] || c2.opts.easing);
            return c2.tweens.push(i3), i3;
          }, stop: function(e4) {
            var n4 = 0, i3 = e4 ? c2.tweens.length : 0;
            if (a2)
              return this;
            for (a2 = true; n4 < i3; n4++)
              c2.tweens[n4].run(1);
            return e4 ? (s2.notifyWith(t3, [c2, 1, 0]), s2.resolveWith(t3, [c2, e4])) : s2.rejectWith(t3, [c2, e4]), this;
          } }), d2 = c2.props;
          for (!function(t4, e4) {
            var n4, i3, a3, r3, o3;
            for (n4 in t4)
              if (a3 = e4[i3 = X(n4)], r3 = t4[n4], Array.isArray(r3) && (a3 = r3[1], r3 = t4[n4] = r3[0]), n4 !== i3 && (t4[i3] = r3, delete t4[n4]), (o3 = C.cssHooks[i3]) && "expand" in o3)
                for (n4 in r3 = o3.expand(r3), delete t4[i3], r3)
                  n4 in t4 || (t4[n4] = r3[n4], e4[n4] = a3);
              else
                e4[i3] = a3;
          }(d2, c2.opts.specialEasing); r2 < o2; r2++)
            if (i2 = he.prefilters[r2].call(c2, t3, d2, c2.opts))
              return v(i2.stop) && (C._queueHooks(c2.elem, c2.opts.queue).stop = i2.stop.bind(i2)), i2;
          return C.map(d2, ue, c2), v(c2.opts.start) && c2.opts.start.call(t3, c2), c2.progress(c2.opts.progress).done(c2.opts.done, c2.opts.complete).fail(c2.opts.fail).always(c2.opts.always), C.fx.timer(C.extend(l2, { elem: t3, anim: c2, queue: c2.opts.queue })), c2;
        }
        C.Animation = C.extend(he, { tweeners: { "*": [function(t3, e3) {
          var n3 = this.createTween(t3, e3);
          return dt(n3.elem, t3, at.exec(e3), n3), n3;
        }] }, tweener: function(t3, e3) {
          v(t3) ? (e3 = t3, t3 = ["*"]) : t3 = t3.match(F);
          for (var n3, i2 = 0, a2 = t3.length; i2 < a2; i2++)
            n3 = t3[i2], he.tweeners[n3] = he.tweeners[n3] || [], he.tweeners[n3].unshift(e3);
        }, prefilters: [function(t3, e3, n3) {
          var i2, a2, r2, o2, s2, l2, c2, d2, u2 = "width" in e3 || "height" in e3, h2 = this, p2 = {}, f2 = t3.style, g2 = t3.nodeType && ct(t3), m2 = Q.get(t3, "fxshow");
          for (i2 in n3.queue || ((o2 = C._queueHooks(t3, "fx")).unqueued == null && (o2.unqueued = 0, s2 = o2.empty.fire, o2.empty.fire = function() {
            o2.unqueued || s2();
          }), o2.unqueued++, h2.always(function() {
            h2.always(function() {
              o2.unqueued--, C.queue(t3, "fx").length || o2.empty.fire();
            });
          })), e3)
            if (a2 = e3[i2], oe.test(a2)) {
              if (delete e3[i2], r2 = r2 || a2 === "toggle", a2 === (g2 ? "hide" : "show")) {
                if (a2 !== "show" || !m2 || m2[i2] === void 0)
                  continue;
                g2 = true;
              }
              p2[i2] = m2 && m2[i2] || C.style(t3, i2);
            }
          if ((l2 = !C.isEmptyObject(e3)) || !C.isEmptyObject(p2))
            for (i2 in u2 && t3.nodeType === 1 && (n3.overflow = [f2.overflow, f2.overflowX, f2.overflowY], (c2 = m2 && m2.display) == null && (c2 = Q.get(t3, "display")), (d2 = C.css(t3, "display")) === "none" && (c2 ? d2 = c2 : (pt([t3], true), c2 = t3.style.display || c2, d2 = C.css(t3, "display"), pt([t3]))), (d2 === "inline" || d2 === "inline-block" && c2 != null) && C.css(t3, "float") === "none" && (l2 || (h2.done(function() {
              f2.display = c2;
            }), c2 == null && (d2 = f2.display, c2 = d2 === "none" ? "" : d2)), f2.display = "inline-block")), n3.overflow && (f2.overflow = "hidden", h2.always(function() {
              f2.overflow = n3.overflow[0], f2.overflowX = n3.overflow[1], f2.overflowY = n3.overflow[2];
            })), l2 = false, p2)
              l2 || (m2 ? "hidden" in m2 && (g2 = m2.hidden) : m2 = Q.access(t3, "fxshow", { display: c2 }), r2 && (m2.hidden = !g2), g2 && pt([t3], true), h2.done(function() {
                for (i2 in g2 || pt([t3]), Q.remove(t3, "fxshow"), p2)
                  C.style(t3, i2, p2[i2]);
              })), l2 = ue(g2 ? m2[i2] : 0, i2, h2), i2 in m2 || (m2[i2] = l2.start, g2 && (l2.end = l2.start, l2.start = 0));
        }], prefilter: function(t3, e3) {
          e3 ? he.prefilters.unshift(t3) : he.prefilters.push(t3);
        } }), C.speed = function(t3, e3, n3) {
          var i2 = t3 && typeof t3 == "object" ? C.extend({}, t3) : { complete: n3 || !n3 && e3 || v(t3) && t3, duration: t3, easing: n3 && e3 || e3 && !v(e3) && e3 };
          return C.fx.off ? i2.duration = 0 : typeof i2.duration != "number" && (i2.duration in C.fx.speeds ? i2.duration = C.fx.speeds[i2.duration] : i2.duration = C.fx.speeds._default), i2.queue != null && i2.queue !== true || (i2.queue = "fx"), i2.old = i2.complete, i2.complete = function() {
            v(i2.old) && i2.old.call(this), i2.queue && C.dequeue(this, i2.queue);
          }, i2;
        }, C.fn.extend({ fadeTo: function(t3, e3, n3, i2) {
          return this.filter(ct).css("opacity", 0).show().end().animate({ opacity: e3 }, t3, n3, i2);
        }, animate: function(t3, e3, n3, i2) {
          var a2 = C.isEmptyObject(t3), r2 = C.speed(e3, n3, i2), o2 = function() {
            var e4 = he(this, C.extend({}, t3), r2);
            (a2 || Q.get(this, "finish")) && e4.stop(true);
          };
          return o2.finish = o2, a2 || r2.queue === false ? this.each(o2) : this.queue(r2.queue, o2);
        }, stop: function(t3, e3, n3) {
          var i2 = function(t4) {
            var e4 = t4.stop;
            delete t4.stop, e4(n3);
          };
          return typeof t3 != "string" && (n3 = e3, e3 = t3, t3 = void 0), e3 && this.queue(t3 || "fx", []), this.each(function() {
            var e4 = true, a2 = t3 != null && t3 + "queueHooks", r2 = C.timers, o2 = Q.get(this);
            if (a2)
              o2[a2] && o2[a2].stop && i2(o2[a2]);
            else
              for (a2 in o2)
                o2[a2] && o2[a2].stop && se.test(a2) && i2(o2[a2]);
            for (a2 = r2.length; a2--; )
              r2[a2].elem !== this || t3 != null && r2[a2].queue !== t3 || (r2[a2].anim.stop(n3), e4 = false, r2.splice(a2, 1));
            !e4 && n3 || C.dequeue(this, t3);
          });
        }, finish: function(t3) {
          return t3 !== false && (t3 = t3 || "fx"), this.each(function() {
            var e3, n3 = Q.get(this), i2 = n3[t3 + "queue"], a2 = n3[t3 + "queueHooks"], r2 = C.timers, o2 = i2 ? i2.length : 0;
            for (n3.finish = true, C.queue(this, t3, []), a2 && a2.stop && a2.stop.call(this, true), e3 = r2.length; e3--; )
              r2[e3].elem === this && r2[e3].queue === t3 && (r2[e3].anim.stop(true), r2.splice(e3, 1));
            for (e3 = 0; e3 < o2; e3++)
              i2[e3] && i2[e3].finish && i2[e3].finish.call(this);
            delete n3.finish;
          });
        } }), C.each(["toggle", "show", "hide"], function(t3, e3) {
          var n3 = C.fn[e3];
          C.fn[e3] = function(t4, i2, a2) {
            return t4 == null || typeof t4 == "boolean" ? n3.apply(this, arguments) : this.animate(de(e3, true), t4, i2, a2);
          };
        }), C.each({ slideDown: de("show"), slideUp: de("hide"), slideToggle: de("toggle"), fadeIn: { opacity: "show" }, fadeOut: { opacity: "hide" }, fadeToggle: { opacity: "toggle" } }, function(t3, e3) {
          C.fn[t3] = function(t4, n3, i2) {
            return this.animate(e3, t4, n3, i2);
          };
        }), C.timers = [], C.fx.tick = function() {
          var t3, e3 = 0, n3 = C.timers;
          for (ae = Date.now(); e3 < n3.length; e3++)
            (t3 = n3[e3])() || n3[e3] !== t3 || n3.splice(e3--, 1);
          n3.length || C.fx.stop(), ae = void 0;
        }, C.fx.timer = function(t3) {
          C.timers.push(t3), C.fx.start();
        }, C.fx.interval = 13, C.fx.start = function() {
          re || (re = true, le());
        }, C.fx.stop = function() {
          re = null;
        }, C.fx.speeds = { slow: 600, fast: 200, _default: 400 }, C.fn.delay = function(t3, e3) {
          return t3 = C.fx && C.fx.speeds[t3] || t3, e3 = e3 || "fx", this.queue(e3, function(e4, n3) {
            var a2 = i.setTimeout(e4, t3);
            n3.stop = function() {
              i.clearTimeout(a2);
            };
          });
        }, function() {
          var t3 = y.createElement("input"), e3 = y.createElement("select").appendChild(y.createElement("option"));
          t3.type = "checkbox", m.checkOn = t3.value !== "", m.optSelected = e3.selected, (t3 = y.createElement("input")).value = "t", t3.type = "radio", m.radioValue = t3.value === "t";
        }();
        var pe, fe = C.expr.attrHandle;
        C.fn.extend({ attr: function(t3, e3) {
          return V(this, C.attr, t3, e3, arguments.length > 1);
        }, removeAttr: function(t3) {
          return this.each(function() {
            C.removeAttr(this, t3);
          });
        } }), C.extend({ attr: function(t3, e3, n3) {
          var i2, a2, r2 = t3.nodeType;
          if (r2 !== 3 && r2 !== 8 && r2 !== 2)
            return t3.getAttribute === void 0 ? C.prop(t3, e3, n3) : (r2 === 1 && C.isXMLDoc(t3) || (a2 = C.attrHooks[e3.toLowerCase()] || (C.expr.match.bool.test(e3) ? pe : void 0)), n3 !== void 0 ? n3 === null ? void C.removeAttr(t3, e3) : a2 && "set" in a2 && (i2 = a2.set(t3, n3, e3)) !== void 0 ? i2 : (t3.setAttribute(e3, n3 + ""), n3) : a2 && "get" in a2 && (i2 = a2.get(t3, e3)) !== null ? i2 : (i2 = C.find.attr(t3, e3)) == null ? void 0 : i2);
        }, attrHooks: { type: { set: function(t3, e3) {
          if (!m.radioValue && e3 === "radio" && I(t3, "input")) {
            var n3 = t3.value;
            return t3.setAttribute("type", e3), n3 && (t3.value = n3), e3;
          }
        } } }, removeAttr: function(t3, e3) {
          var n3, i2 = 0, a2 = e3 && e3.match(F);
          if (a2 && t3.nodeType === 1)
            for (; n3 = a2[i2++]; )
              t3.removeAttribute(n3);
        } }), pe = { set: function(t3, e3, n3) {
          return e3 === false ? C.removeAttr(t3, n3) : t3.setAttribute(n3, n3), n3;
        } }, C.each(C.expr.match.bool.source.match(/\w+/g), function(t3, e3) {
          var n3 = fe[e3] || C.find.attr;
          fe[e3] = function(t4, e4, i2) {
            var a2, r2, o2 = e4.toLowerCase();
            return i2 || (r2 = fe[o2], fe[o2] = a2, a2 = n3(t4, e4, i2) != null ? o2 : null, fe[o2] = r2), a2;
          };
        });
        var ge = /^(?:input|select|textarea|button)$/i, me = /^(?:a|area)$/i;
        function ve(t3) {
          return (t3.match(F) || []).join(" ");
        }
        function be(t3) {
          return t3.getAttribute && t3.getAttribute("class") || "";
        }
        function ye(t3) {
          return Array.isArray(t3) ? t3 : typeof t3 == "string" && t3.match(F) || [];
        }
        C.fn.extend({ prop: function(t3, e3) {
          return V(this, C.prop, t3, e3, arguments.length > 1);
        }, removeProp: function(t3) {
          return this.each(function() {
            delete this[C.propFix[t3] || t3];
          });
        } }), C.extend({ prop: function(t3, e3, n3) {
          var i2, a2, r2 = t3.nodeType;
          if (r2 !== 3 && r2 !== 8 && r2 !== 2)
            return r2 === 1 && C.isXMLDoc(t3) || (e3 = C.propFix[e3] || e3, a2 = C.propHooks[e3]), n3 !== void 0 ? a2 && "set" in a2 && (i2 = a2.set(t3, n3, e3)) !== void 0 ? i2 : t3[e3] = n3 : a2 && "get" in a2 && (i2 = a2.get(t3, e3)) !== null ? i2 : t3[e3];
        }, propHooks: { tabIndex: { get: function(t3) {
          var e3 = C.find.attr(t3, "tabindex");
          return e3 ? parseInt(e3, 10) : ge.test(t3.nodeName) || me.test(t3.nodeName) && t3.href ? 0 : -1;
        } } }, propFix: { for: "htmlFor", class: "className" } }), m.optSelected || (C.propHooks.selected = { get: function(t3) {
          var e3 = t3.parentNode;
          return e3 && e3.parentNode && e3.parentNode.selectedIndex, null;
        }, set: function(t3) {
          var e3 = t3.parentNode;
          e3 && (e3.selectedIndex, e3.parentNode && e3.parentNode.selectedIndex);
        } }), C.each(["tabIndex", "readOnly", "maxLength", "cellSpacing", "cellPadding", "rowSpan", "colSpan", "useMap", "frameBorder", "contentEditable"], function() {
          C.propFix[this.toLowerCase()] = this;
        }), C.fn.extend({ addClass: function(t3) {
          var e3, n3, i2, a2, r2, o2, s2, l2 = 0;
          if (v(t3))
            return this.each(function(e4) {
              C(this).addClass(t3.call(this, e4, be(this)));
            });
          if ((e3 = ye(t3)).length) {
            for (; n3 = this[l2++]; )
              if (a2 = be(n3), i2 = n3.nodeType === 1 && " " + ve(a2) + " ") {
                for (o2 = 0; r2 = e3[o2++]; )
                  i2.indexOf(" " + r2 + " ") < 0 && (i2 += r2 + " ");
                a2 !== (s2 = ve(i2)) && n3.setAttribute("class", s2);
              }
          }
          return this;
        }, removeClass: function(t3) {
          var e3, n3, i2, a2, r2, o2, s2, l2 = 0;
          if (v(t3))
            return this.each(function(e4) {
              C(this).removeClass(t3.call(this, e4, be(this)));
            });
          if (!arguments.length)
            return this.attr("class", "");
          if ((e3 = ye(t3)).length) {
            for (; n3 = this[l2++]; )
              if (a2 = be(n3), i2 = n3.nodeType === 1 && " " + ve(a2) + " ") {
                for (o2 = 0; r2 = e3[o2++]; )
                  for (; i2.indexOf(" " + r2 + " ") > -1; )
                    i2 = i2.replace(" " + r2 + " ", " ");
                a2 !== (s2 = ve(i2)) && n3.setAttribute("class", s2);
              }
          }
          return this;
        }, toggleClass: function(t3, e3) {
          var n3 = typeof t3, i2 = n3 === "string" || Array.isArray(t3);
          return typeof e3 == "boolean" && i2 ? e3 ? this.addClass(t3) : this.removeClass(t3) : v(t3) ? this.each(function(n4) {
            C(this).toggleClass(t3.call(this, n4, be(this), e3), e3);
          }) : this.each(function() {
            var e4, a2, r2, o2;
            if (i2)
              for (a2 = 0, r2 = C(this), o2 = ye(t3); e4 = o2[a2++]; )
                r2.hasClass(e4) ? r2.removeClass(e4) : r2.addClass(e4);
            else
              t3 !== void 0 && n3 !== "boolean" || ((e4 = be(this)) && Q.set(this, "__className__", e4), this.setAttribute && this.setAttribute("class", e4 || t3 === false ? "" : Q.get(this, "__className__") || ""));
          });
        }, hasClass: function(t3) {
          var e3, n3, i2 = 0;
          for (e3 = " " + t3 + " "; n3 = this[i2++]; )
            if (n3.nodeType === 1 && (" " + ve(be(n3)) + " ").indexOf(e3) > -1)
              return true;
          return false;
        } });
        var xe = /\r/g;
        C.fn.extend({ val: function(t3) {
          var e3, n3, i2, a2 = this[0];
          return arguments.length ? (i2 = v(t3), this.each(function(n4) {
            var a3;
            this.nodeType === 1 && ((a3 = i2 ? t3.call(this, n4, C(this).val()) : t3) == null ? a3 = "" : typeof a3 == "number" ? a3 += "" : Array.isArray(a3) && (a3 = C.map(a3, function(t4) {
              return t4 == null ? "" : t4 + "";
            })), (e3 = C.valHooks[this.type] || C.valHooks[this.nodeName.toLowerCase()]) && "set" in e3 && e3.set(this, a3, "value") !== void 0 || (this.value = a3));
          })) : a2 ? (e3 = C.valHooks[a2.type] || C.valHooks[a2.nodeName.toLowerCase()]) && "get" in e3 && (n3 = e3.get(a2, "value")) !== void 0 ? n3 : typeof (n3 = a2.value) == "string" ? n3.replace(xe, "") : n3 == null ? "" : n3 : void 0;
        } }), C.extend({ valHooks: { option: { get: function(t3) {
          var e3 = C.find.attr(t3, "value");
          return e3 != null ? e3 : ve(C.text(t3));
        } }, select: { get: function(t3) {
          var e3, n3, i2, a2 = t3.options, r2 = t3.selectedIndex, o2 = t3.type === "select-one", s2 = o2 ? null : [], l2 = o2 ? r2 + 1 : a2.length;
          for (i2 = r2 < 0 ? l2 : o2 ? r2 : 0; i2 < l2; i2++)
            if (((n3 = a2[i2]).selected || i2 === r2) && !n3.disabled && (!n3.parentNode.disabled || !I(n3.parentNode, "optgroup"))) {
              if (e3 = C(n3).val(), o2)
                return e3;
              s2.push(e3);
            }
          return s2;
        }, set: function(t3, e3) {
          for (var n3, i2, a2 = t3.options, r2 = C.makeArray(e3), o2 = a2.length; o2--; )
            ((i2 = a2[o2]).selected = C.inArray(C.valHooks.option.get(i2), r2) > -1) && (n3 = true);
          return n3 || (t3.selectedIndex = -1), r2;
        } } } }), C.each(["radio", "checkbox"], function() {
          C.valHooks[this] = { set: function(t3, e3) {
            if (Array.isArray(e3))
              return t3.checked = C.inArray(C(t3).val(), e3) > -1;
          } }, m.checkOn || (C.valHooks[this].get = function(t3) {
            return t3.getAttribute("value") === null ? "on" : t3.value;
          });
        }), m.focusin = "onfocusin" in i;
        var _e = /^(?:focusinfocus|focusoutblur)$/, we = function(t3) {
          t3.stopPropagation();
        };
        C.extend(C.event, { trigger: function(t3, e3, n3, a2) {
          var r2, o2, s2, l2, c2, d2, u2, h2, f2 = [n3 || y], g2 = p.call(t3, "type") ? t3.type : t3, m2 = p.call(t3, "namespace") ? t3.namespace.split(".") : [];
          if (o2 = h2 = s2 = n3 = n3 || y, n3.nodeType !== 3 && n3.nodeType !== 8 && !_e.test(g2 + C.event.triggered) && (g2.indexOf(".") > -1 && (m2 = g2.split("."), g2 = m2.shift(), m2.sort()), c2 = g2.indexOf(":") < 0 && "on" + g2, (t3 = t3[C.expando] ? t3 : new C.Event(g2, typeof t3 == "object" && t3)).isTrigger = a2 ? 2 : 3, t3.namespace = m2.join("."), t3.rnamespace = t3.namespace ? new RegExp("(^|\\.)" + m2.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, t3.result = void 0, t3.target || (t3.target = n3), e3 = e3 == null ? [t3] : C.makeArray(e3, [t3]), u2 = C.event.special[g2] || {}, a2 || !u2.trigger || u2.trigger.apply(n3, e3) !== false)) {
            if (!a2 && !u2.noBubble && !b(n3)) {
              for (l2 = u2.delegateType || g2, _e.test(l2 + g2) || (o2 = o2.parentNode); o2; o2 = o2.parentNode)
                f2.push(o2), s2 = o2;
              s2 === (n3.ownerDocument || y) && f2.push(s2.defaultView || s2.parentWindow || i);
            }
            for (r2 = 0; (o2 = f2[r2++]) && !t3.isPropagationStopped(); )
              h2 = o2, t3.type = r2 > 1 ? l2 : u2.bindType || g2, (d2 = (Q.get(o2, "events") || /* @__PURE__ */ Object.create(null))[t3.type] && Q.get(o2, "handle")) && d2.apply(o2, e3), (d2 = c2 && o2[c2]) && d2.apply && Z(o2) && (t3.result = d2.apply(o2, e3), t3.result === false && t3.preventDefault());
            return t3.type = g2, a2 || t3.isDefaultPrevented() || u2._default && u2._default.apply(f2.pop(), e3) !== false || !Z(n3) || c2 && v(n3[g2]) && !b(n3) && ((s2 = n3[c2]) && (n3[c2] = null), C.event.triggered = g2, t3.isPropagationStopped() && h2.addEventListener(g2, we), n3[g2](), t3.isPropagationStopped() && h2.removeEventListener(g2, we), C.event.triggered = void 0, s2 && (n3[c2] = s2)), t3.result;
          }
        }, simulate: function(t3, e3, n3) {
          var i2 = C.extend(new C.Event(), n3, { type: t3, isSimulated: true });
          C.event.trigger(i2, null, e3);
        } }), C.fn.extend({ trigger: function(t3, e3) {
          return this.each(function() {
            C.event.trigger(t3, e3, this);
          });
        }, triggerHandler: function(t3, e3) {
          var n3 = this[0];
          if (n3)
            return C.event.trigger(t3, e3, n3, true);
        } }), m.focusin || C.each({ focus: "focusin", blur: "focusout" }, function(t3, e3) {
          var n3 = function(t4) {
            C.event.simulate(e3, t4.target, C.event.fix(t4));
          };
          C.event.special[e3] = { setup: function() {
            var i2 = this.ownerDocument || this.document || this, a2 = Q.access(i2, e3);
            a2 || i2.addEventListener(t3, n3, true), Q.access(i2, e3, (a2 || 0) + 1);
          }, teardown: function() {
            var i2 = this.ownerDocument || this.document || this, a2 = Q.access(i2, e3) - 1;
            a2 ? Q.access(i2, e3, a2) : (i2.removeEventListener(t3, n3, true), Q.remove(i2, e3));
          } };
        });
        var Se = i.location, Ce = { guid: Date.now() }, ke = /\?/;
        C.parseXML = function(t3) {
          var e3, n3;
          if (!t3 || typeof t3 != "string")
            return null;
          try {
            e3 = new i.DOMParser().parseFromString(t3, "text/xml");
          } catch (t4) {
          }
          return n3 = e3 && e3.getElementsByTagName("parsererror")[0], e3 && !n3 || C.error("Invalid XML: " + (n3 ? C.map(n3.childNodes, function(t4) {
            return t4.textContent;
          }).join("\n") : t3)), e3;
        };
        var De = /\[\]$/, Te = /\r?\n/g, Ee = /^(?:submit|button|image|reset|file)$/i, Ae = /^(?:input|select|textarea|keygen)/i;
        function Ie(t3, e3, n3, i2) {
          var a2;
          if (Array.isArray(e3))
            C.each(e3, function(e4, a3) {
              n3 || De.test(t3) ? i2(t3, a3) : Ie(t3 + "[" + (typeof a3 == "object" && a3 != null ? e4 : "") + "]", a3, n3, i2);
            });
          else if (n3 || w(e3) !== "object")
            i2(t3, e3);
          else
            for (a2 in e3)
              Ie(t3 + "[" + a2 + "]", e3[a2], n3, i2);
        }
        C.param = function(t3, e3) {
          var n3, i2 = [], a2 = function(t4, e4) {
            var n4 = v(e4) ? e4() : e4;
            i2[i2.length] = encodeURIComponent(t4) + "=" + encodeURIComponent(n4 == null ? "" : n4);
          };
          if (t3 == null)
            return "";
          if (Array.isArray(t3) || t3.jquery && !C.isPlainObject(t3))
            C.each(t3, function() {
              a2(this.name, this.value);
            });
          else
            for (n3 in t3)
              Ie(n3, t3[n3], e3, a2);
          return i2.join("&");
        }, C.fn.extend({ serialize: function() {
          return C.param(this.serializeArray());
        }, serializeArray: function() {
          return this.map(function() {
            var t3 = C.prop(this, "elements");
            return t3 ? C.makeArray(t3) : this;
          }).filter(function() {
            var t3 = this.type;
            return this.name && !C(this).is(":disabled") && Ae.test(this.nodeName) && !Ee.test(t3) && (this.checked || !mt.test(t3));
          }).map(function(t3, e3) {
            var n3 = C(this).val();
            return n3 == null ? null : Array.isArray(n3) ? C.map(n3, function(t4) {
              return { name: e3.name, value: t4.replace(Te, "\r\n") };
            }) : { name: e3.name, value: n3.replace(Te, "\r\n") };
          }).get();
        } });
        var Me = /%20/g, Re = /#.*$/, Pe = /([?&])_=[^&]*/, Oe = /^(.*?):[ \t]*([^\r\n]*)$/gm, je = /^(?:GET|HEAD)$/, Ne = /^\/\//, Le = {}, Fe = {}, He = "*/".concat("*"), Be = y.createElement("a");
        function qe(t3) {
          return function(e3, n3) {
            typeof e3 != "string" && (n3 = e3, e3 = "*");
            var i2, a2 = 0, r2 = e3.toLowerCase().match(F) || [];
            if (v(n3))
              for (; i2 = r2[a2++]; )
                i2[0] === "+" ? (i2 = i2.slice(1) || "*", (t3[i2] = t3[i2] || []).unshift(n3)) : (t3[i2] = t3[i2] || []).push(n3);
          };
        }
        function ze(t3, e3, n3, i2) {
          var a2 = {}, r2 = t3 === Fe;
          function o2(s2) {
            var l2;
            return a2[s2] = true, C.each(t3[s2] || [], function(t4, s3) {
              var c2 = s3(e3, n3, i2);
              return typeof c2 != "string" || r2 || a2[c2] ? r2 ? !(l2 = c2) : void 0 : (e3.dataTypes.unshift(c2), o2(c2), false);
            }), l2;
          }
          return o2(e3.dataTypes[0]) || !a2["*"] && o2("*");
        }
        function We(t3, e3) {
          var n3, i2, a2 = C.ajaxSettings.flatOptions || {};
          for (n3 in e3)
            e3[n3] !== void 0 && ((a2[n3] ? t3 : i2 || (i2 = {}))[n3] = e3[n3]);
          return i2 && C.extend(true, t3, i2), t3;
        }
        Be.href = Se.href, C.extend({ active: 0, lastModified: {}, etag: {}, ajaxSettings: { url: Se.href, type: "GET", isLocal: /^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Se.protocol), global: true, processData: true, async: true, contentType: "application/x-www-form-urlencoded; charset=UTF-8", accepts: { "*": He, text: "text/plain", html: "text/html", xml: "application/xml, text/xml", json: "application/json, text/javascript" }, contents: { xml: /\bxml\b/, html: /\bhtml/, json: /\bjson\b/ }, responseFields: { xml: "responseXML", text: "responseText", json: "responseJSON" }, converters: { "* text": String, "text html": true, "text json": JSON.parse, "text xml": C.parseXML }, flatOptions: { url: true, context: true } }, ajaxSetup: function(t3, e3) {
          return e3 ? We(We(t3, C.ajaxSettings), e3) : We(C.ajaxSettings, t3);
        }, ajaxPrefilter: qe(Le), ajaxTransport: qe(Fe), ajax: function(t3, e3) {
          typeof t3 == "object" && (e3 = t3, t3 = void 0), e3 = e3 || {};
          var n3, a2, r2, o2, s2, l2, c2, d2, u2, h2, p2 = C.ajaxSetup({}, e3), f2 = p2.context || p2, g2 = p2.context && (f2.nodeType || f2.jquery) ? C(f2) : C.event, m2 = C.Deferred(), v2 = C.Callbacks("once memory"), b2 = p2.statusCode || {}, x2 = {}, _2 = {}, w2 = "canceled", S2 = { readyState: 0, getResponseHeader: function(t4) {
            var e4;
            if (c2) {
              if (!o2)
                for (o2 = {}; e4 = Oe.exec(r2); )
                  o2[e4[1].toLowerCase() + " "] = (o2[e4[1].toLowerCase() + " "] || []).concat(e4[2]);
              e4 = o2[t4.toLowerCase() + " "];
            }
            return e4 == null ? null : e4.join(", ");
          }, getAllResponseHeaders: function() {
            return c2 ? r2 : null;
          }, setRequestHeader: function(t4, e4) {
            return c2 == null && (t4 = _2[t4.toLowerCase()] = _2[t4.toLowerCase()] || t4, x2[t4] = e4), this;
          }, overrideMimeType: function(t4) {
            return c2 == null && (p2.mimeType = t4), this;
          }, statusCode: function(t4) {
            var e4;
            if (t4)
              if (c2)
                S2.always(t4[S2.status]);
              else
                for (e4 in t4)
                  b2[e4] = [b2[e4], t4[e4]];
            return this;
          }, abort: function(t4) {
            var e4 = t4 || w2;
            return n3 && n3.abort(e4), k2(0, e4), this;
          } };
          if (m2.promise(S2), p2.url = ((t3 || p2.url || Se.href) + "").replace(Ne, Se.protocol + "//"), p2.type = e3.method || e3.type || p2.method || p2.type, p2.dataTypes = (p2.dataType || "*").toLowerCase().match(F) || [""], p2.crossDomain == null) {
            l2 = y.createElement("a");
            try {
              l2.href = p2.url, l2.href = l2.href, p2.crossDomain = Be.protocol + "//" + Be.host != l2.protocol + "//" + l2.host;
            } catch (t4) {
              p2.crossDomain = true;
            }
          }
          if (p2.data && p2.processData && typeof p2.data != "string" && (p2.data = C.param(p2.data, p2.traditional)), ze(Le, p2, e3, S2), c2)
            return S2;
          for (u2 in (d2 = C.event && p2.global) && C.active++ == 0 && C.event.trigger("ajaxStart"), p2.type = p2.type.toUpperCase(), p2.hasContent = !je.test(p2.type), a2 = p2.url.replace(Re, ""), p2.hasContent ? p2.data && p2.processData && (p2.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && (p2.data = p2.data.replace(Me, "+")) : (h2 = p2.url.slice(a2.length), p2.data && (p2.processData || typeof p2.data == "string") && (a2 += (ke.test(a2) ? "&" : "?") + p2.data, delete p2.data), p2.cache === false && (a2 = a2.replace(Pe, "$1"), h2 = (ke.test(a2) ? "&" : "?") + "_=" + Ce.guid++ + h2), p2.url = a2 + h2), p2.ifModified && (C.lastModified[a2] && S2.setRequestHeader("If-Modified-Since", C.lastModified[a2]), C.etag[a2] && S2.setRequestHeader("If-None-Match", C.etag[a2])), (p2.data && p2.hasContent && p2.contentType !== false || e3.contentType) && S2.setRequestHeader("Content-Type", p2.contentType), S2.setRequestHeader("Accept", p2.dataTypes[0] && p2.accepts[p2.dataTypes[0]] ? p2.accepts[p2.dataTypes[0]] + (p2.dataTypes[0] !== "*" ? ", " + He + "; q=0.01" : "") : p2.accepts["*"]), p2.headers)
            S2.setRequestHeader(u2, p2.headers[u2]);
          if (p2.beforeSend && (p2.beforeSend.call(f2, S2, p2) === false || c2))
            return S2.abort();
          if (w2 = "abort", v2.add(p2.complete), S2.done(p2.success), S2.fail(p2.error), n3 = ze(Fe, p2, e3, S2)) {
            if (S2.readyState = 1, d2 && g2.trigger("ajaxSend", [S2, p2]), c2)
              return S2;
            p2.async && p2.timeout > 0 && (s2 = i.setTimeout(function() {
              S2.abort("timeout");
            }, p2.timeout));
            try {
              c2 = false, n3.send(x2, k2);
            } catch (t4) {
              if (c2)
                throw t4;
              k2(-1, t4);
            }
          } else
            k2(-1, "No Transport");
          function k2(t4, e4, o3, l3) {
            var u3, h3, y2, x3, _3, w3 = e4;
            c2 || (c2 = true, s2 && i.clearTimeout(s2), n3 = void 0, r2 = l3 || "", S2.readyState = t4 > 0 ? 4 : 0, u3 = t4 >= 200 && t4 < 300 || t4 === 304, o3 && (x3 = function(t5, e5, n4) {
              for (var i2, a3, r3, o4, s3 = t5.contents, l4 = t5.dataTypes; l4[0] === "*"; )
                l4.shift(), i2 === void 0 && (i2 = t5.mimeType || e5.getResponseHeader("Content-Type"));
              if (i2) {
                for (a3 in s3)
                  if (s3[a3] && s3[a3].test(i2)) {
                    l4.unshift(a3);
                    break;
                  }
              }
              if (l4[0] in n4)
                r3 = l4[0];
              else {
                for (a3 in n4) {
                  if (!l4[0] || t5.converters[a3 + " " + l4[0]]) {
                    r3 = a3;
                    break;
                  }
                  o4 || (o4 = a3);
                }
                r3 = r3 || o4;
              }
              if (r3)
                return r3 !== l4[0] && l4.unshift(r3), n4[r3];
            }(p2, S2, o3)), !u3 && C.inArray("script", p2.dataTypes) > -1 && C.inArray("json", p2.dataTypes) < 0 && (p2.converters["text script"] = function() {
            }), x3 = function(t5, e5, n4, i2) {
              var a3, r3, o4, s3, l4, c3 = {}, d3 = t5.dataTypes.slice();
              if (d3[1])
                for (o4 in t5.converters)
                  c3[o4.toLowerCase()] = t5.converters[o4];
              for (r3 = d3.shift(); r3; )
                if (t5.responseFields[r3] && (n4[t5.responseFields[r3]] = e5), !l4 && i2 && t5.dataFilter && (e5 = t5.dataFilter(e5, t5.dataType)), l4 = r3, r3 = d3.shift()) {
                  if (r3 === "*")
                    r3 = l4;
                  else if (l4 !== "*" && l4 !== r3) {
                    if (!(o4 = c3[l4 + " " + r3] || c3["* " + r3])) {
                      for (a3 in c3)
                        if ((s3 = a3.split(" "))[1] === r3 && (o4 = c3[l4 + " " + s3[0]] || c3["* " + s3[0]])) {
                          o4 === true ? o4 = c3[a3] : c3[a3] !== true && (r3 = s3[0], d3.unshift(s3[1]));
                          break;
                        }
                    }
                    if (o4 !== true)
                      if (o4 && t5.throws)
                        e5 = o4(e5);
                      else
                        try {
                          e5 = o4(e5);
                        } catch (t6) {
                          return { state: "parsererror", error: o4 ? t6 : "No conversion from " + l4 + " to " + r3 };
                        }
                  }
                }
              return { state: "success", data: e5 };
            }(p2, x3, S2, u3), u3 ? (p2.ifModified && ((_3 = S2.getResponseHeader("Last-Modified")) && (C.lastModified[a2] = _3), (_3 = S2.getResponseHeader("etag")) && (C.etag[a2] = _3)), t4 === 204 || p2.type === "HEAD" ? w3 = "nocontent" : t4 === 304 ? w3 = "notmodified" : (w3 = x3.state, h3 = x3.data, u3 = !(y2 = x3.error))) : (y2 = w3, !t4 && w3 || (w3 = "error", t4 < 0 && (t4 = 0))), S2.status = t4, S2.statusText = (e4 || w3) + "", u3 ? m2.resolveWith(f2, [h3, w3, S2]) : m2.rejectWith(f2, [S2, w3, y2]), S2.statusCode(b2), b2 = void 0, d2 && g2.trigger(u3 ? "ajaxSuccess" : "ajaxError", [S2, p2, u3 ? h3 : y2]), v2.fireWith(f2, [S2, w3]), d2 && (g2.trigger("ajaxComplete", [S2, p2]), --C.active || C.event.trigger("ajaxStop")));
          }
          return S2;
        }, getJSON: function(t3, e3, n3) {
          return C.get(t3, e3, n3, "json");
        }, getScript: function(t3, e3) {
          return C.get(t3, void 0, e3, "script");
        } }), C.each(["get", "post"], function(t3, e3) {
          C[e3] = function(t4, n3, i2, a2) {
            return v(n3) && (a2 = a2 || i2, i2 = n3, n3 = void 0), C.ajax(C.extend({ url: t4, type: e3, dataType: a2, data: n3, success: i2 }, C.isPlainObject(t4) && t4));
          };
        }), C.ajaxPrefilter(function(t3) {
          var e3;
          for (e3 in t3.headers)
            e3.toLowerCase() === "content-type" && (t3.contentType = t3.headers[e3] || "");
        }), C._evalUrl = function(t3, e3, n3) {
          return C.ajax({ url: t3, type: "GET", dataType: "script", cache: true, async: false, global: false, converters: { "text script": function() {
          } }, dataFilter: function(t4) {
            C.globalEval(t4, e3, n3);
          } });
        }, C.fn.extend({ wrapAll: function(t3) {
          var e3;
          return this[0] && (v(t3) && (t3 = t3.call(this[0])), e3 = C(t3, this[0].ownerDocument).eq(0).clone(true), this[0].parentNode && e3.insertBefore(this[0]), e3.map(function() {
            for (var t4 = this; t4.firstElementChild; )
              t4 = t4.firstElementChild;
            return t4;
          }).append(this)), this;
        }, wrapInner: function(t3) {
          return v(t3) ? this.each(function(e3) {
            C(this).wrapInner(t3.call(this, e3));
          }) : this.each(function() {
            var e3 = C(this), n3 = e3.contents();
            n3.length ? n3.wrapAll(t3) : e3.append(t3);
          });
        }, wrap: function(t3) {
          var e3 = v(t3);
          return this.each(function(n3) {
            C(this).wrapAll(e3 ? t3.call(this, n3) : t3);
          });
        }, unwrap: function(t3) {
          return this.parent(t3).not("body").each(function() {
            C(this).replaceWith(this.childNodes);
          }), this;
        } }), C.expr.pseudos.hidden = function(t3) {
          return !C.expr.pseudos.visible(t3);
        }, C.expr.pseudos.visible = function(t3) {
          return !!(t3.offsetWidth || t3.offsetHeight || t3.getClientRects().length);
        }, C.ajaxSettings.xhr = function() {
          try {
            return new i.XMLHttpRequest();
          } catch (t3) {
          }
        };
        var $e = { 0: 200, 1223: 204 }, Ve = C.ajaxSettings.xhr();
        m.cors = !!Ve && "withCredentials" in Ve, m.ajax = Ve = !!Ve, C.ajaxTransport(function(t3) {
          var e3, n3;
          if (m.cors || Ve && !t3.crossDomain)
            return { send: function(a2, r2) {
              var o2, s2 = t3.xhr();
              if (s2.open(t3.type, t3.url, t3.async, t3.username, t3.password), t3.xhrFields)
                for (o2 in t3.xhrFields)
                  s2[o2] = t3.xhrFields[o2];
              for (o2 in t3.mimeType && s2.overrideMimeType && s2.overrideMimeType(t3.mimeType), t3.crossDomain || a2["X-Requested-With"] || (a2["X-Requested-With"] = "XMLHttpRequest"), a2)
                s2.setRequestHeader(o2, a2[o2]);
              e3 = function(t4) {
                return function() {
                  e3 && (e3 = n3 = s2.onload = s2.onerror = s2.onabort = s2.ontimeout = s2.onreadystatechange = null, t4 === "abort" ? s2.abort() : t4 === "error" ? typeof s2.status != "number" ? r2(0, "error") : r2(s2.status, s2.statusText) : r2($e[s2.status] || s2.status, s2.statusText, (s2.responseType || "text") !== "text" || typeof s2.responseText != "string" ? { binary: s2.response } : { text: s2.responseText }, s2.getAllResponseHeaders()));
                };
              }, s2.onload = e3(), n3 = s2.onerror = s2.ontimeout = e3("error"), s2.onabort !== void 0 ? s2.onabort = n3 : s2.onreadystatechange = function() {
                s2.readyState === 4 && i.setTimeout(function() {
                  e3 && n3();
                });
              }, e3 = e3("abort");
              try {
                s2.send(t3.hasContent && t3.data || null);
              } catch (t4) {
                if (e3)
                  throw t4;
              }
            }, abort: function() {
              e3 && e3();
            } };
        }), C.ajaxPrefilter(function(t3) {
          t3.crossDomain && (t3.contents.script = false);
        }), C.ajaxSetup({ accepts: { script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript" }, contents: { script: /\b(?:java|ecma)script\b/ }, converters: { "text script": function(t3) {
          return C.globalEval(t3), t3;
        } } }), C.ajaxPrefilter("script", function(t3) {
          t3.cache === void 0 && (t3.cache = false), t3.crossDomain && (t3.type = "GET");
        }), C.ajaxTransport("script", function(t3) {
          var e3, n3;
          if (t3.crossDomain || t3.scriptAttrs)
            return { send: function(i2, a2) {
              e3 = C("<script>").attr(t3.scriptAttrs || {}).prop({ charset: t3.scriptCharset, src: t3.url }).on("load error", n3 = function(t4) {
                e3.remove(), n3 = null, t4 && a2(t4.type === "error" ? 404 : 200, t4.type);
              }), y.head.appendChild(e3[0]);
            }, abort: function() {
              n3 && n3();
            } };
        });
        var Ye, Ue = [], Ge = /(=)\?(?=&|$)|\?\?/;
        C.ajaxSetup({ jsonp: "callback", jsonpCallback: function() {
          var t3 = Ue.pop() || C.expando + "_" + Ce.guid++;
          return this[t3] = true, t3;
        } }), C.ajaxPrefilter("json jsonp", function(t3, e3, n3) {
          var a2, r2, o2, s2 = t3.jsonp !== false && (Ge.test(t3.url) ? "url" : typeof t3.data == "string" && (t3.contentType || "").indexOf("application/x-www-form-urlencoded") === 0 && Ge.test(t3.data) && "data");
          if (s2 || t3.dataTypes[0] === "jsonp")
            return a2 = t3.jsonpCallback = v(t3.jsonpCallback) ? t3.jsonpCallback() : t3.jsonpCallback, s2 ? t3[s2] = t3[s2].replace(Ge, "$1" + a2) : t3.jsonp !== false && (t3.url += (ke.test(t3.url) ? "&" : "?") + t3.jsonp + "=" + a2), t3.converters["script json"] = function() {
              return o2 || C.error(a2 + " was not called"), o2[0];
            }, t3.dataTypes[0] = "json", r2 = i[a2], i[a2] = function() {
              o2 = arguments;
            }, n3.always(function() {
              r2 === void 0 ? C(i).removeProp(a2) : i[a2] = r2, t3[a2] && (t3.jsonpCallback = e3.jsonpCallback, Ue.push(a2)), o2 && v(r2) && r2(o2[0]), o2 = r2 = void 0;
            }), "script";
        }), m.createHTMLDocument = ((Ye = y.implementation.createHTMLDocument("").body).innerHTML = "<form></form><form></form>", Ye.childNodes.length === 2), C.parseHTML = function(t3, e3, n3) {
          return typeof t3 != "string" ? [] : (typeof e3 == "boolean" && (n3 = e3, e3 = false), e3 || (m.createHTMLDocument ? ((i2 = (e3 = y.implementation.createHTMLDocument("")).createElement("base")).href = y.location.href, e3.head.appendChild(i2)) : e3 = y), r2 = !n3 && [], (a2 = M.exec(t3)) ? [e3.createElement(a2[1])] : (a2 = St([t3], e3, r2), r2 && r2.length && C(r2).remove(), C.merge([], a2.childNodes)));
          var i2, a2, r2;
        }, C.fn.load = function(t3, e3, n3) {
          var i2, a2, r2, o2 = this, s2 = t3.indexOf(" ");
          return s2 > -1 && (i2 = ve(t3.slice(s2)), t3 = t3.slice(0, s2)), v(e3) ? (n3 = e3, e3 = void 0) : e3 && typeof e3 == "object" && (a2 = "POST"), o2.length > 0 && C.ajax({ url: t3, type: a2 || "GET", dataType: "html", data: e3 }).done(function(t4) {
            r2 = arguments, o2.html(i2 ? C("<div>").append(C.parseHTML(t4)).find(i2) : t4);
          }).always(n3 && function(t4, e4) {
            o2.each(function() {
              n3.apply(this, r2 || [t4.responseText, e4, t4]);
            });
          }), this;
        }, C.expr.pseudos.animated = function(t3) {
          return C.grep(C.timers, function(e3) {
            return t3 === e3.elem;
          }).length;
        }, C.offset = { setOffset: function(t3, e3, n3) {
          var i2, a2, r2, o2, s2, l2, c2 = C.css(t3, "position"), d2 = C(t3), u2 = {};
          c2 === "static" && (t3.style.position = "relative"), s2 = d2.offset(), r2 = C.css(t3, "top"), l2 = C.css(t3, "left"), (c2 === "absolute" || c2 === "fixed") && (r2 + l2).indexOf("auto") > -1 ? (o2 = (i2 = d2.position()).top, a2 = i2.left) : (o2 = parseFloat(r2) || 0, a2 = parseFloat(l2) || 0), v(e3) && (e3 = e3.call(t3, n3, C.extend({}, s2))), e3.top != null && (u2.top = e3.top - s2.top + o2), e3.left != null && (u2.left = e3.left - s2.left + a2), "using" in e3 ? e3.using.call(t3, u2) : d2.css(u2);
        } }, C.fn.extend({ offset: function(t3) {
          if (arguments.length)
            return t3 === void 0 ? this : this.each(function(e4) {
              C.offset.setOffset(this, t3, e4);
            });
          var e3, n3, i2 = this[0];
          return i2 ? i2.getClientRects().length ? (e3 = i2.getBoundingClientRect(), n3 = i2.ownerDocument.defaultView, { top: e3.top + n3.pageYOffset, left: e3.left + n3.pageXOffset }) : { top: 0, left: 0 } : void 0;
        }, position: function() {
          if (this[0]) {
            var t3, e3, n3, i2 = this[0], a2 = { top: 0, left: 0 };
            if (C.css(i2, "position") === "fixed")
              e3 = i2.getBoundingClientRect();
            else {
              for (e3 = this.offset(), n3 = i2.ownerDocument, t3 = i2.offsetParent || n3.documentElement; t3 && (t3 === n3.body || t3 === n3.documentElement) && C.css(t3, "position") === "static"; )
                t3 = t3.parentNode;
              t3 && t3 !== i2 && t3.nodeType === 1 && ((a2 = C(t3).offset()).top += C.css(t3, "borderTopWidth", true), a2.left += C.css(t3, "borderLeftWidth", true));
            }
            return { top: e3.top - a2.top - C.css(i2, "marginTop", true), left: e3.left - a2.left - C.css(i2, "marginLeft", true) };
          }
        }, offsetParent: function() {
          return this.map(function() {
            for (var t3 = this.offsetParent; t3 && C.css(t3, "position") === "static"; )
              t3 = t3.offsetParent;
            return t3 || ot;
          });
        } }), C.each({ scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function(t3, e3) {
          var n3 = e3 === "pageYOffset";
          C.fn[t3] = function(i2) {
            return V(this, function(t4, i3, a2) {
              var r2;
              if (b(t4) ? r2 = t4 : t4.nodeType === 9 && (r2 = t4.defaultView), a2 === void 0)
                return r2 ? r2[e3] : t4[i3];
              r2 ? r2.scrollTo(n3 ? r2.pageXOffset : a2, n3 ? a2 : r2.pageYOffset) : t4[i3] = a2;
            }, t3, i2, arguments.length);
          };
        }), C.each(["top", "left"], function(t3, e3) {
          C.cssHooks[e3] = Vt(m.pixelPosition, function(t4, n3) {
            if (n3)
              return n3 = $t(t4, e3), Bt.test(n3) ? C(t4).position()[e3] + "px" : n3;
          });
        }), C.each({ Height: "height", Width: "width" }, function(t3, e3) {
          C.each({ padding: "inner" + t3, content: e3, "": "outer" + t3 }, function(n3, i2) {
            C.fn[i2] = function(a2, r2) {
              var o2 = arguments.length && (n3 || typeof a2 != "boolean"), s2 = n3 || (a2 === true || r2 === true ? "margin" : "border");
              return V(this, function(e4, n4, a3) {
                var r3;
                return b(e4) ? i2.indexOf("outer") === 0 ? e4["inner" + t3] : e4.document.documentElement["client" + t3] : e4.nodeType === 9 ? (r3 = e4.documentElement, Math.max(e4.body["scroll" + t3], r3["scroll" + t3], e4.body["offset" + t3], r3["offset" + t3], r3["client" + t3])) : a3 === void 0 ? C.css(e4, n4, s2) : C.style(e4, n4, a3, s2);
              }, e3, o2 ? a2 : void 0, o2);
            };
          });
        }), C.each(["ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend"], function(t3, e3) {
          C.fn[e3] = function(t4) {
            return this.on(e3, t4);
          };
        }), C.fn.extend({ bind: function(t3, e3, n3) {
          return this.on(t3, null, e3, n3);
        }, unbind: function(t3, e3) {
          return this.off(t3, null, e3);
        }, delegate: function(t3, e3, n3, i2) {
          return this.on(e3, t3, n3, i2);
        }, undelegate: function(t3, e3, n3) {
          return arguments.length === 1 ? this.off(t3, "**") : this.off(e3, t3 || "**", n3);
        }, hover: function(t3, e3) {
          return this.mouseenter(t3).mouseleave(e3 || t3);
        } }), C.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "), function(t3, e3) {
          C.fn[e3] = function(t4, n3) {
            return arguments.length > 0 ? this.on(e3, null, t4, n3) : this.trigger(e3);
          };
        });
        var Xe = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
        C.proxy = function(t3, e3) {
          var n3, i2, a2;
          if (typeof e3 == "string" && (n3 = t3[e3], e3 = t3, t3 = n3), v(t3))
            return i2 = s.call(arguments, 2), a2 = function() {
              return t3.apply(e3 || this, i2.concat(s.call(arguments)));
            }, a2.guid = t3.guid = t3.guid || C.guid++, a2;
        }, C.holdReady = function(t3) {
          t3 ? C.readyWait++ : C.ready(true);
        }, C.isArray = Array.isArray, C.parseJSON = JSON.parse, C.nodeName = I, C.isFunction = v, C.isWindow = b, C.camelCase = X, C.type = w, C.now = Date.now, C.isNumeric = function(t3) {
          var e3 = C.type(t3);
          return (e3 === "number" || e3 === "string") && !isNaN(t3 - parseFloat(t3));
        }, C.trim = function(t3) {
          return t3 == null ? "" : (t3 + "").replace(Xe, "");
        }, (n2 = function() {
          return C;
        }.apply(e2, [])) === void 0 || (t2.exports = n2);
        var Ze = i.jQuery, Ke = i.$;
        return C.noConflict = function(t3) {
          return i.$ === C && (i.$ = Ke), t3 && i.jQuery === C && (i.jQuery = Ze), C;
        }, a === void 0 && (i.jQuery = i.$ = C), C;
      });
    }, 1163: function(t2) {
      t2.exports = function() {
        "use strict";
        Element.prototype.matches || (Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function(t4) {
          for (var e3 = (this.document || this.ownerDocument).querySelectorAll(t4), n3 = e3.length; --n3 >= 0 && e3.item(n3) !== this; )
            ;
          return n3 > -1;
        }), Object.assign || Object.defineProperty(Object, "assign", { enumerable: false, configurable: true, writable: true, value: function(t4) {
          if (t4 == null)
            throw new TypeError("Cannot convert first argument to object");
          for (var e3 = Object(t4), n3 = 1; n3 < arguments.length; n3++) {
            var i2 = arguments[n3];
            if (i2 != null) {
              i2 = Object(i2);
              for (var a2 = Object.keys(Object(i2)), r2 = 0, o2 = a2.length; r2 < o2; r2++) {
                var s2 = a2[r2], l2 = Object.getOwnPropertyDescriptor(i2, s2);
                l2 !== void 0 && l2.enumerable && (e3[s2] = i2[s2]);
              }
            }
          }
          return e3;
        } });
        var t3 = {}, e2 = 1, n2 = function(n3, i2, a2, r2) {
          r2 === void 0 && (r2 = {});
          var o2 = "jvm:" + i2 + "::" + e2++;
          t3[o2] = { selector: n3, handler: a2 }, a2._uid = o2, n3.addEventListener(i2, a2, r2);
        }, i = function(e3, n3, i2) {
          var a2 = n3.split(":")[1];
          e3.removeEventListener(a2, i2), delete t3[i2._uid];
        }, a = function() {
          return t3;
        }, r = function() {
          function t4(t5) {
            return t5 instanceof Element ? (this.selector = t5, this) : (this.selector = document.querySelector(t5), this);
          }
          var e3 = t4.prototype;
          return e3.on = function(t5, e4, i2) {
            return i2 === void 0 && (i2 = {}), n2(this.selector, t5, e4, i2), this;
          }, e3.delegate = function(t5, e4, n3) {
            for (var i2 in e4 = e4.split(" "))
              this.on(e4[i2], function(e5) {
                var i3 = e5.target;
                i3.matches(t5) && n3.call(i3, e5);
              });
          }, e3.css = function(t5) {
            for (var e4 in t5)
              this.selector.style[e4] = t5[e4];
            return this;
          }, e3.text = function(t5) {
            return t5 ? (this.selector.textContent = t5, this) : this.selector.textContent;
          }, e3.attr = function(t5, e4) {
            return t5 && e4 ? (this.selector.setAttribute(t5, e4), this) : this.selector.getAttribute(t5);
          }, e3.addClass = function(t5) {
            return this.selector.classList ? (this.selector.classList.add(t5), this) : (this.selector.className.split(" ").indexOf(t5) == -1 && (this.selector.className += " " + t5), this);
          }, e3.append = function(t5) {
            return this.selector.appendChild(t5), this;
          }, e3.show = function() {
            this.css({ display: "block" });
          }, e3.hide = function() {
            this.css({ display: "none" });
          }, e3.height = function() {
            return this.selector.offsetHeight;
          }, e3.width = function() {
            return this.selector.offsetWidth;
          }, t4;
        }(), o = function(t4) {
          return function(t5) {
            return !!t5 && typeof t5 == "object";
          }(t4) && !function(t5) {
            var e3 = Object.prototype.toString.call(t5);
            return e3 === "[object RegExp]" || e3 === "[object Date]" || function(t6) {
              return t6.$$typeof === s;
            }(t5);
          }(t4);
        }, s = typeof Symbol == "function" && Symbol.for ? Symbol.for("react.element") : 60103;
        function l(t4, e3) {
          return e3.clone !== false && e3.isMergeableObject(t4) ? p((n3 = t4, Array.isArray(n3) ? [] : {}), t4, e3) : t4;
          var n3;
        }
        function c(t4, e3, n3) {
          return t4.concat(e3).map(function(t5) {
            return l(t5, n3);
          });
        }
        function d(t4) {
          return Object.keys(t4).concat(function(t5) {
            return Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols(t5).filter(function(e3) {
              return t5.propertyIsEnumerable(e3);
            }) : [];
          }(t4));
        }
        function u(t4, e3) {
          try {
            return e3 in t4;
          } catch (t5) {
            return false;
          }
        }
        function h(t4, e3, n3) {
          var i2 = {};
          return n3.isMergeableObject(t4) && d(t4).forEach(function(e4) {
            i2[e4] = l(t4[e4], n3);
          }), d(e3).forEach(function(a2) {
            (function(t5, e4) {
              return u(t5, e4) && !(Object.hasOwnProperty.call(t5, e4) && Object.propertyIsEnumerable.call(t5, e4));
            })(t4, a2) || (u(t4, a2) && n3.isMergeableObject(e3[a2]) ? i2[a2] = function(t5, e4) {
              if (!e4.customMerge)
                return p;
              var n4 = e4.customMerge(t5);
              return typeof n4 == "function" ? n4 : p;
            }(a2, n3)(t4[a2], e3[a2], n3) : i2[a2] = l(e3[a2], n3));
          }), i2;
        }
        var p = function(t4, e3, n3) {
          (n3 = n3 || {}).arrayMerge = n3.arrayMerge || c, n3.isMergeableObject = n3.isMergeableObject || o, n3.cloneUnlessOtherwiseSpecified = l;
          var i2 = Array.isArray(e3);
          return i2 === Array.isArray(t4) ? i2 ? n3.arrayMerge(t4, e3, n3) : h(t4, e3, n3) : l(e3, n3);
        }, f = { isImageUrl: function(t4) {
          return /\.(jpg|gif|png)$/.test(t4);
        }, createElement: function(t4, e3, n3, i2) {
          i2 === void 0 && (i2 = false);
          var a2 = document.createElement(t4);
          return n3 && (a2[i2 ? "innerHTML" : "textContent"] = n3), e3 && (a2.className = e3), a2;
        }, removeElement: function(t4) {
          t4.parentNode.removeChild(t4);
        }, $: function(t4) {
          return new r(t4);
        }, hyphenate: function(t4) {
          return t4.replace(/[\w]([A-Z])/g, function(t5) {
            return t5[0] + "-" + t5[1];
          }).toLowerCase();
        }, isFunc: function(t4) {
          return typeof t4 == "function";
        }, isObj: function(t4) {
          return typeof t4 == "object";
        }, isStr: function(t4) {
          return typeof t4 == "string";
        }, isArr: function(t4) {
          return Array.isArray(t4);
        }, merge: function(t4, e3) {
          return Object.assign(t4, e3);
        }, mergeDeeply: function(t4, e3) {
          return p(t4, e3);
        }, keys: function(t4) {
          return Object.keys(t4);
        } };
        function g(t4, e3) {
          t4.prototype = Object.create(e3.prototype), t4.prototype.constructor = t4, m(t4, e3);
        }
        function m(t4, e3) {
          return (m = Object.setPrototypeOf || function(t5, e4) {
            return t5.__proto__ = e4, t5;
          })(t4, e3);
        }
        var v = function() {
          function t4(t5, e4) {
            this._name = t5, this.node = this.createElement(t5), e4 && this.set(e4);
          }
          var e3 = t4.prototype;
          return e3.createElement = function(t5) {
            return document.createElementNS("http://www.w3.org/2000/svg", t5);
          }, e3.addClass = function(t5) {
            this.node.setAttribute("class", t5);
          }, e3.getBBox = function() {
            return this.node.getBBox();
          }, e3.set = function(t5, e4) {
            if (f.isObj(t5))
              for (var n3 in t5)
                this.applyAttr(n3, t5[n3]);
            else
              this.applyAttr(t5, e4);
          }, e3.get = function(t5) {
            return this.style.initial[t5];
          }, e3.applyAttr = function(t5, e4) {
            this.node.setAttribute(f.hyphenate(t5), e4);
          }, e3.remove = function() {
            this.node.parentNode.removeChild(this.node);
          }, t4;
        }(), b = function(t4) {
          function e3(e4, n4, i2) {
            var a2;
            return i2 === void 0 && (i2 = {}), (a2 = t4.call(this, e4, n4) || this).isHovered = false, a2.isSelected = false, a2.style = i2, a2.style.current = {}, a2.updateStyle(), a2;
          }
          g(e3, t4);
          var n3 = e3.prototype;
          return n3.setStyle = function(t5, e4) {
            var n4;
            f.isObj(t5) ? f.merge(this.style.current, t5) : f.merge(this.style.current, ((n4 = {})[t5] = e4, n4)), this.updateStyle();
          }, n3.updateStyle = function() {
            var t5 = {};
            f.merge(t5, this.style.initial), f.merge(t5, this.style.current), this.isHovered && f.merge(t5, this.style.hover), this.isSelected && (f.merge(t5, this.style.selected), this.isHovered && f.merge(t5, this.style.selectedHover)), this.set(t5);
          }, e3;
        }(v), y = function(t4) {
          function e3(e4, n3) {
            return t4.call(this, "text", e4, n3) || this;
          }
          return g(e3, t4), e3.prototype.applyAttr = function(e4, n3) {
            e4 === "text" ? this.node.textContent = n3 : t4.prototype.applyAttr.call(this, e4, n3);
          }, e3;
        }(b), x = function(t4) {
          function e3(e4, n3) {
            return t4.call(this, "image", e4, n3) || this;
          }
          return g(e3, t4), e3.prototype.applyAttr = function(e4, n3) {
            var i2;
            e4 === "image" ? (f.isObj(n3) ? (i2 = n3.url, this.offset = n3.offset || [0, 0]) : (i2 = n3, this.offset = [0, 0]), this.node.setAttributeNS("http://www.w3.org/1999/xlink", "href", i2), this.width = 23, this.height = 23, this.applyAttr("width", this.width), this.applyAttr("height", this.height), this.applyAttr("x", this.cx - this.width / 2 + this.offset[0]), this.applyAttr("y", this.cy - this.height / 2 + this.offset[1])) : e4 == "cx" ? (this.cx = n3, this.width && this.applyAttr("x", n3 - this.width / 2 + this.offset[0])) : e4 == "cy" ? (this.cy = n3, this.height && this.applyAttr("y", n3 - this.height / 2 + this.offset[1])) : t4.prototype.applyAttr.apply(this, arguments);
          }, e3;
        }(b), _ = function(t4) {
          function e3(e4) {
            var n4;
            return (n4 = t4.call(this, "svg") || this)._container = e4, n4._defsElement = new v("defs"), n4._rootElement = new v("g", { id: "jvm-regions-group" }), n4.node.appendChild(n4._defsElement.node), n4.node.appendChild(n4._rootElement.node), n4._container.append(n4.node), n4;
          }
          g(e3, t4);
          var n3 = e3.prototype;
          return n3.setSize = function(t5, e4) {
            this.node.setAttribute("width", t5), this.node.setAttribute("height", e4);
          }, n3.applyTransformParams = function(t5, e4, n4) {
            this._rootElement.node.setAttribute("transform", "scale(" + t5 + ") translate(" + e4 + ", " + n4 + ")");
          }, n3.createPath = function(t5, e4) {
            var n4 = new b("path", t5, e4);
            return n4.node.setAttribute("fill-rule", "evenodd"), this.add(n4);
          }, n3.createCircle = function(t5, e4, n4) {
            var i2 = new b("circle", t5, e4);
            return this.add(i2, n4);
          }, n3.createLine = function(t5, e4, n4) {
            var i2 = new b("line", t5, e4);
            return this.add(i2, n4);
          }, n3.createText = function(t5, e4, n4) {
            var i2 = new y(t5, e4);
            return this.add(i2, n4);
          }, n3.createImage = function(t5, e4, n4) {
            var i2 = new x(t5, e4);
            return this.add(i2, n4);
          }, n3.createGroup = function(t5) {
            var e4 = new v("g");
            return this.node.appendChild(e4.node), t5 && (e4.node.id = t5), e4.canvas = this, e4;
          }, n3.add = function(t5, e4) {
            return (e4 = e4 || this._rootElement).node.appendChild(t5.node), t5;
          }, e3;
        }(v);
        function w(t4, e3, n3) {
          var i2 = f.$(e3), a2 = i2.attr("class").indexOf("jvm-region") === -1 ? "marker" : "region", r2 = a2 === "region" ? i2.attr("data-code") : i2.attr("data-index"), o2 = a2 + ":selected";
          return n3 && (o2 = a2 + ".tooltip:show"), { event: o2, type: a2, code: r2, element: a2 === "region" ? t4.regions[r2].element : t4.markers[r2].element, tooltipText: a2 === "region" ? t4.mapData.paths[r2].name || "" : t4.markers[r2].config.name || "" };
        }
        var S = function() {
          function t4() {
          }
          var e3 = t4.prototype;
          return e3.getLabelText = function(t5, e4) {
            if (e4) {
              if (f.isFunc(e4.render)) {
                var n3 = [];
                return this.config.marker && n3.push(this.config.marker), n3.push(t5), e4.render.apply(this, n3);
              }
              return t5;
            }
          }, e3.getLabelOffsets = function(t5, e4) {
            return f.isFunc(e4.offsets) ? e4.offsets(t5) : f.isArr(e4.offsets) ? e4.offsets[t5] : [0, 0];
          }, e3.setStyle = function(t5, e4) {
            this.shape.setStyle(t5, e4);
          }, e3.remove = function() {
            this.shape.remove(), this.label && this.label.remove();
          }, e3.hover = function(t5) {
            this._setStatus("isHovered", t5);
          }, e3.select = function(t5) {
            this._setStatus("isSelected", t5);
          }, e3._setStatus = function(t5, e4) {
            this.shape[t5] = e4, this.shape.updateStyle(), this[t5] = e4, this.label && (this.label[t5] = e4, this.label.updateStyle());
          }, t4;
        }(), C = function(t4) {
          function e3(e4) {
            var n3, i2 = e4.map, a2 = e4.code, r2 = e4.path, o2 = e4.style, s2 = e4.label, l2 = e4.labelStyle, c2 = e4.labelsGroup;
            (n3 = t4.call(this) || this).config = arguments[0], n3.canvas = i2.canvas, n3.map = i2, n3.shape = n3.canvas.createPath({ d: r2, dataCode: a2 }, o2), n3.shape.addClass("jvm-region jvm-element");
            var d2 = n3.shape.getBBox(), u2 = n3.getLabelText(a2, s2);
            if (s2 && u2) {
              var h2 = n3.getLabelOffsets(a2);
              n3.labelX = d2.x + d2.width / 2 + h2[0], n3.labelY = d2.y + d2.height / 2 + h2[1], n3.label = n3.canvas.createText({ text: u2, textAnchor: "middle", alignmentBaseline: "central", dataCode: a2, x: n3.labelX, y: n3.labelY }, l2, c2), n3.label.addClass("jvm-region jvm-element");
            }
            return n3;
          }
          return g(e3, t4), e3.prototype.updateLabelPosition = function() {
            this.label && this.label.set({ x: this.labelX * this.map.scale + this.map.transX * this.map.scale, y: this.labelY * this.map.scale + this.map.transY * this.map.scale });
          }, e3;
        }(S), k = function(t4) {
          function e3(e4) {
            var n3, i2 = e4.index, a2 = e4.map, r2 = e4.style, o2 = e4.x1, s2 = e4.y1, l2 = e4.x2, c2 = e4.y2, d2 = e4.group;
            return (n3 = t4.call(this) || this).shape = a2.canvas.createLine({ x1: o2, y1: s2, x2: l2, y2: c2, dataIndex: i2 }, r2, d2), n3.shape.addClass("jvm-line"), n3;
          }
          return g(e3, t4), e3;
        }(S);
        function D(t4, e3) {
          return t4.toLowerCase() + ":to:" + e3.toLowerCase();
        }
        var T = function(t4) {
          function e3(e4) {
            var n4, i2 = e4.index, a2 = e4.style, r2 = e4.label, o2 = e4.cx, s2 = e4.cy, l2 = e4.map, c2 = e4.group;
            return (n4 = t4.call(this) || this)._map = l2, n4._isImage = !!a2.initial.image, n4.config = arguments[0], n4.shape = l2.canvas[n4._isImage ? "createImage" : "createCircle"]({ dataIndex: i2, cx: o2, cy: s2 }, n4._getStyle(), c2), n4.shape.addClass("jvm-marker jvm-element"), n4._isImage && n4.updateLabelPosition(), r2 && n4._createLabel(n4.config), n4;
          }
          g(e3, t4);
          var n3 = e3.prototype;
          return n3.updateLabelPosition = function() {
            this.label && this.label.set({ x: this._labelX * this._map.scale + this._offsets[0] + this._map.transX * this._map.scale + 5 + (this._isImage ? (this.shape.width || 0) / 2 : this.shape.node.r.baseVal.value), y: this._labelY * this._map.scale + this._map.transY * this._map.scale + this._offsets[1] });
          }, n3._createLabel = function(t5) {
            var e4 = t5.index, n4 = t5.map, i2 = t5.label, a2 = t5.labelsGroup, r2 = t5.cx, o2 = t5.cy, s2 = t5.marker, l2 = t5.isRecentlyCreated, c2 = this.getLabelText(e4, i2);
            this._labelX = r2 / n4.scale - n4.transX, this._labelY = o2 / n4.scale - n4.transY, this._offsets = l2 && s2.offsets ? s2.offsets : this.getLabelOffsets(e4, i2), this.label = n4.canvas.createText({ text: c2, dataIndex: e4, x: this._labelX, y: this._labelY, dy: "0.6ex" }, n4.params.markerLabelStyle, a2), this.label.addClass("jvm-marker jvm-element"), l2 && this.updateLabelPosition();
          }, n3._getStyle = function() {
            var t5 = {};
            return this._isImage ? t5.initial = { image: this.config.style.initial.image } : t5 = this.config.style, t5;
          }, e3;
        }(S), E = function() {
          function t4(t5) {
            t5 === void 0 && (t5 = {}), this._options = t5, this._map = this._options.map, this._series = this._options.series, this._body = f.createElement("div", "jvm-legend"), this._options.cssClass && this._body.setAttribute("class", this._options.cssClass), t5.vertical ? this._map.legendVertical.appendChild(this._body) : this._map.legendHorizontal.appendChild(this._body), this.render();
          }
          return t4.prototype.render = function() {
            var t5, e3, n3, i2 = this._series.scale.getTicks(), a2 = f.createElement("div", "jvm-legend-inner");
            if (this._body.innderHTML = "", this._options.title) {
              var r2 = f.createElement("div", "jvm-legend-title", this._options.title);
              this._body.appendChild(r2);
            }
            this._body.appendChild(a2);
            for (var o2 = 0; o2 < i2.length; o2++) {
              switch (t5 = f.createElement("div", "jvm-legend-tick"), e3 = f.createElement("div", "jvm-legend-tick-sample"), this._series.config.attribute) {
                case "fill":
                  f.isImageUrl(i2[o2].value) ? e3.style.background = "url(" + i2[o2].value + ")" : e3.style.background = i2[o2].value;
                  break;
                case "stroke":
                  e3.style.background = i2[o2].value;
                  break;
                case "image":
                  e3.style.background = "url(" + (f.isObj(i2[o2].value) ? i2[o2].value.url : i2[o2].value) + ") no-repeat center center", e3.style.backgroundSize = "cover";
              }
              t5.appendChild(e3), n3 = i2[o2].label, this._options.labelRender && (n3 = this._options.labelRender(n3));
              var s2 = f.createElement("div", "jvm-legend-tick-text", n3);
              t5.appendChild(s2), a2.appendChild(t5);
            }
          }, t4;
        }(), A = function() {
          function t4(t5) {
            this._scale = t5;
          }
          var e3 = t4.prototype;
          return e3.getValue = function(t5) {
            return this._scale[t5];
          }, e3.getTicks = function() {
            var t5 = [];
            for (var e4 in this._scale)
              t5.push({ label: e4, value: this._scale[e4] });
            return t5;
          }, t4;
        }(), I = function() {
          function t4(t5, e4, n3) {
            t5 === void 0 && (t5 = {}), this._map = n3, this._elements = e4, this._values = t5.values || {}, this.config = t5, this.config.attribute = t5.attribute || "fill", t5.attributes && this.setAttributes(t5.attributes), f.isObj(t5.scale) && (this.scale = new A(t5.scale)), this.config.legend && (this.legend = new E(f.merge({ map: this._map, series: this }, this.config.legend))), this.setValues(this._values);
          }
          var e3 = t4.prototype;
          return e3.setValues = function(t5) {
            var e4 = {};
            for (var n3 in t5)
              t5[n3] && (e4[n3] = this.scale.getValue(t5[n3]));
            this.setAttributes(e4);
          }, e3.setAttributes = function(t5) {
            for (var e4 in t5)
              this._elements[e4] && this._elements[e4].element.setStyle(this.config.attribute, t5[e4]);
          }, e3.clear = function() {
            var t5, e4 = {};
            for (t5 in this._values)
              this._elements[t5] && (e4[t5] = this._elements[t5].element.shape.style.initial[this.config.attribute]);
            this.setAttributes(e4), this._values = {};
          }, t4;
        }(), M = { mill: function(t4, e3, n3) {
          return { x: this.radius * (e3 - n3) * this.radDeg, y: -this.radius * Math.log(Math.tan((45 + 0.4 * t4) * this.radDeg)) / 0.8 };
        }, merc: function(t4, e3, n3) {
          return { x: this.radius * (e3 - n3) * this.radDeg, y: -this.radius * Math.log(Math.tan(Math.PI / 4 + t4 * Math.PI / 360)) };
        }, aea: function(t4, e3, n3) {
          var i2 = n3 * this.radDeg, a2 = 29.5 * this.radDeg, r2 = 45.5 * this.radDeg, o2 = t4 * this.radDeg, s2 = e3 * this.radDeg, l2 = (Math.sin(a2) + Math.sin(r2)) / 2, c2 = Math.cos(a2) * Math.cos(a2) + 2 * l2 * Math.sin(a2), d2 = l2 * (s2 - i2), u2 = Math.sqrt(c2 - 2 * l2 * Math.sin(o2)) / l2, h2 = Math.sqrt(c2 - 2 * l2 * Math.sin(0)) / l2;
          return { x: u2 * Math.sin(d2) * this.radius, y: -(h2 - u2 * Math.cos(d2)) * this.radius };
        }, lcc: function(t4, e3, n3) {
          var i2 = n3 * this.radDeg, a2 = e3 * this.radDeg, r2 = 33 * this.radDeg, o2 = 45 * this.radDeg, s2 = t4 * this.radDeg, l2 = Math.log(Math.cos(r2) * (1 / Math.cos(o2))) / Math.log(Math.tan(Math.PI / 4 + o2 / 2) * (1 / Math.tan(Math.PI / 4 + r2 / 2))), c2 = Math.cos(r2) * Math.pow(Math.tan(Math.PI / 4 + r2 / 2), l2) / l2, d2 = c2 * Math.pow(1 / Math.tan(Math.PI / 4 + s2 / 2), l2), u2 = c2 * Math.pow(1 / Math.tan(Math.PI / 4 + 0), l2);
          return { x: d2 * Math.sin(l2 * (a2 - i2)) * this.radius, y: -(u2 - d2 * Math.cos(l2 * (a2 - i2))) * this.radius };
        } };
        M.degRad = 180 / Math.PI, M.radDeg = Math.PI / 180, M.radius = 6381372;
        var R = function() {
          function t4(t5, e4) {
            var n3 = t5.scale, i2 = t5.values;
            this._scale = n3, this._values = i2, this._fromColor = this.hexToRgb(n3[0]), this._toColor = this.hexToRgb(n3[1]), this._map = e4, this.setMinMaxValues(i2), this.visualize();
          }
          var e3 = t4.prototype;
          return e3.setMinMaxValues = function(t5) {
            for (var e4 in this.min = Number.MAX_VALUE, this.max = 0, t5)
              (e4 = parseFloat(t5[e4])) > this.max && (this.max = e4), e4 < this.min && (this.min = e4);
          }, e3.visualize = function() {
            var t5, e4 = {};
            for (var n3 in this._values)
              t5 = parseFloat(this._values[n3]), isNaN(t5) || (e4[n3] = this.getValue(t5));
            this.setAttributes(e4);
          }, e3.setAttributes = function(t5) {
            for (var e4 in t5)
              this._map.regions[e4] && this._map.regions[e4].element.setStyle("fill", t5[e4]);
          }, e3.getValue = function(t5) {
            for (var e4, n3 = "#", i2 = 0; i2 < 3; i2++)
              n3 += ((e4 = Math.round(this._fromColor[i2] + (this._toColor[i2] - this._fromColor[i2]) * ((t5 - this.min) / (this.max - this.min))).toString(16)).length === 1 ? "0" : "") + e4;
            return n3;
          }, e3.hexToRgb = function(t5) {
            var e4 = 0, n3 = 0, i2 = 0;
            return t5.length == 4 ? (e4 = "0x" + t5[1] + t5[1], n3 = "0x" + t5[2] + t5[2], i2 = "0x" + t5[3] + t5[3]) : t5.length == 7 && (e4 = "0x" + t5[1] + t5[2], n3 = "0x" + t5[3] + t5[4], i2 = "0x" + t5[5] + t5[6]), [parseInt(e4), parseInt(n3), parseInt(i2)];
          }, t4;
        }(), P = Object.freeze({ __proto__: null, handleContainerEvents: function() {
          var t4, e3, n3 = this, i2 = false, a2 = this;
          this.params.draggable && (this.container.on("mousemove", function(r2) {
            return i2 && (a2.transX -= (t4 - r2.pageX) / a2.scale, a2.transY -= (e3 - r2.pageY) / a2.scale, a2.applyTransform(), t4 = r2.pageX, e3 = r2.pageY, n3.isBeingDragged = true), false;
          }).on("mousedown", function(n4) {
            return i2 = true, t4 = n4.pageX, e3 = n4.pageY, false;
          }), f.$("body").on("mouseup", function() {
            i2 = false;
          })), this.params.zoomOnScroll && this.container.on("wheel", function(t5) {
            var e4 = 0;
            e4 = (t5.deltaY || -t5.wheelDelta || t5.detail) >> 10 || 1, e4 *= 75;
            var i3 = n3.container.selector.getBoundingClientRect(), r2 = t5.pageX - i3.left - window.pageXOffset, o2 = t5.pageY - i3.top - window.pageYOffset, s2 = Math.pow(1 + a2.params.zoomOnScrollSpeed / 1e3, -1.5 * e4);
            a2.tooltip && a2.tooltip.hide(), a2.setScale(a2.scale * s2, r2, o2);
          }, { passive: true });
        }, handleElementEvents: function() {
          var t4 = this, e3 = this;
          this.container.delegate(".jvm-element", "mousedown", function() {
            t4.isBeingDragged = false;
          }), this.container.delegate(".jvm-element", "mouseover mouseout", function(t5) {
            var n3 = w(e3, this, true), i2 = e3.params.showTooltip;
            t5.type === "mouseover" ? t5.defaultPrevented || (n3.element.hover(true), i2 && (e3.tooltip.text(n3.tooltipText), e3.tooltip.show(), e3.emit(n3.event, [e3.tooltip, n3.code]))) : (n3.element.hover(false), i2 && e3.tooltip.hide());
          }), this.container.delegate(".jvm-element", "mouseup", function(t5) {
            var n3 = w(e3, this);
            if (!e3.isBeingDragged && !t5.defaultPrevented && (n3.type === "region" && e3.params.regionsSelectable || n3.type === "marker" && e3.params.markersSelectable)) {
              var i2 = n3.element;
              e3.params[n3.type + "sSelectableOne"] && e3.clearSelected(n3.type + "s"), n3.element.isSelected ? i2.select(false) : i2.select(true), e3.emit(n3.event, [n3.code, i2.isSelected, e3.getSelected(n3.type + "s")]);
            }
          });
        }, handleZoomButtons: function() {
          var t4 = this, e3 = this, i2 = f.createElement("div", "jvm-zoom-btn jvm-zoomin", "&#43;", true), a2 = f.createElement("div", "jvm-zoom-btn jvm-zoomout", "&#x2212", true);
          this.container.append(i2).append(a2), n2(i2, "click", function() {
            t4.setScale(e3.scale * e3.params.zoomStep, e3.width / 2, e3.height / 2, false, e3.params.zoomAnimate);
          }), n2(a2, "click", function() {
            t4.setScale(e3.scale / e3.params.zoomStep, e3.width / 2, e3.height / 2, false, e3.params.zoomAnimate);
          });
        }, bindContainerTouchEvents: function() {
          var t4, e3, n3, i2, a2, r2, o2, s2 = this, l2 = function(l3) {
            var c2, d2, u2, h2, p2 = l3.touches;
            if (l3.type == "touchstart" && (o2 = 0), p2.length == 1)
              o2 == 1 && (u2 = s2.transX, h2 = s2.transY, s2.transX -= (n3 - p2[0].pageX) / s2.scale, s2.transY -= (i2 - p2[0].pageY) / s2.scale, s2.tooltip.hide(), s2.applyTransform(), u2 == s2.transX && h2 == s2.transY || l3.preventDefault()), n3 = p2[0].pageX, i2 = p2[0].pageY;
            else if (p2.length == 2)
              if (o2 == 2)
                d2 = Math.sqrt(Math.pow(p2[0].pageX - p2[1].pageX, 2) + Math.pow(p2[0].pageY - p2[1].pageY, 2)) / e3, s2.setScale(t4 * d2, a2, r2), s2.tooltip.hide(), l3.preventDefault();
              else {
                var f2 = s2.container.selector.getBoundingClientRect();
                c2 = { top: f2.top + window.scrollY, left: f2.left + window.scrollX }, a2 = p2[0].pageX > p2[1].pageX ? p2[1].pageX + (p2[0].pageX - p2[1].pageX) / 2 : p2[0].pageX + (p2[1].pageX - p2[0].pageX) / 2, r2 = p2[0].pageY > p2[1].pageY ? p2[1].pageY + (p2[0].pageY - p2[1].pageY) / 2 : p2[0].pageY + (p2[1].pageY - p2[0].pageY) / 2, a2 -= c2.left, r2 -= c2.top, t4 = s2.scale, e3 = Math.sqrt(Math.pow(p2[0].pageX - p2[1].pageX, 2) + Math.pow(p2[0].pageY - p2[1].pageY, 2));
              }
            o2 = p2.length;
          };
          this.container.on("touchstart", l2).on("touchmove", l2);
        }, createRegions: function() {
          var t4, e3;
          for (t4 in this.regionLabelsGroup = this.regionLabelsGroup || this.canvas.createGroup("jvm-regions-labels-group"), this.mapData.paths)
            e3 = new C({ map: this, code: t4, path: this.mapData.paths[t4].path, style: f.merge({}, this.params.regionStyle), labelStyle: this.params.regionLabelStyle, labelsGroup: this.regionLabelsGroup, label: this.params.labels && this.params.labels.regions }), this.regions[t4] = { config: this.mapData.paths[t4], element: e3 };
        }, createLines: function(t4, e3, n3) {
          var i2 = this;
          n3 === void 0 && (n3 = false);
          var a2, r2 = false, o2 = false;
          for (var s2 in this.linesGroup = this.linesGroup || this.canvas.createGroup("jvm-lines-group"), t4) {
            var l2 = t4[s2];
            for (var c2 in e3) {
              var d2 = n3 ? e3[c2].config : e3[c2];
              d2.name === l2.from && (r2 = this.getMarkerPosition(d2)), d2.name === l2.to && (o2 = this.getMarkerPosition(d2));
            }
            r2 !== false && o2 !== false && (a2 = new k({ index: s2, map: this, style: f.mergeDeeply({ initial: this.params.lineStyle }, { initial: l2.style || {} }), x1: r2.x, y1: r2.y, x2: o2.x, y2: o2.y, group: this.linesGroup }), n3 && Object.keys(this.lines).forEach(function(e4) {
              e4 === D(t4[0].from, t4[0].to) && i2.lines[e4].element.remove();
            }), this.lines[D(l2.from, l2.to)] = { element: a2, config: l2 });
          }
        }, createMarkers: function(t4, e3) {
          var n3, i2, a2, r2, o2 = this;
          for (var s2 in t4 === void 0 && (t4 = {}), e3 === void 0 && (e3 = false), this.markersGroup = this.markersGroup || this.canvas.createGroup("jvm-markers-group"), this.markerLabelsGroup = this.markerLabelsGroup || this.canvas.createGroup("jvm-markers-labels-group"), t4) {
            if (n3 = t4[s2], a2 = this.getMarkerPosition(n3), r2 = n3.coords.join(":"), e3) {
              if (f.keys(this.markers).filter(function(t5) {
                return o2.markers[t5]._uid === r2;
              }).length)
                continue;
              s2 = f.keys(this.markers).length;
            }
            a2 !== false && (i2 = new T({ index: s2, map: this, style: f.mergeDeeply(this.params.markerStyle, { initial: n3.style || {} }), label: this.params.labels && this.params.labels.markers, labelsGroup: this.markerLabelsGroup, cx: a2.x, cy: a2.y, group: this.markersGroup, marker: n3, isRecentlyCreated: e3 }), this.markers[s2] && this.removeMarkers([s2]), this.markers[s2] = { _uid: r2, config: n3, element: i2 });
          }
        }, createTooltip: function() {
          var t4 = this, e3 = f.createElement("div", "jvm-tooltip");
          this.tooltip = f.$(document.body.appendChild(e3)), this.container.on("mousemove", function(n3) {
            if (t4.tooltip.selector.style.display === "block") {
              var i2 = t4.container.selector.querySelector("#jvm-regions-group").getBoundingClientRect(), a2 = e3.getBoundingClientRect(), r2 = a2.height, o2 = a2.width, s2 = n3.clientY <= i2.top + r2 + 5, l2 = n3.pageY - r2 - 5, c2 = n3.pageX - o2 - 5;
              s2 && (l2 += r2 + 5, c2 -= 10), n3.clientX < i2.left + o2 + 5 && (c2 = n3.pageX + 5 + 2, s2 && (c2 += 10)), t4.tooltip.css({ top: l2 + "px", left: c2 + "px" });
            }
          });
        }, createSeries: function() {
          for (var t4 in this.series = { markers: [], regions: [] }, this.params.series)
            for (var e3 = 0; e3 < this.params.series[t4].length; e3++)
              this.series[t4][e3] = new I(this.params.series[t4][e3], this[t4], this);
        }, applyTransform: function() {
          var t4, e3, n3, i2;
          this.defaultWidth * this.scale <= this.width ? (t4 = (this.width - this.defaultWidth * this.scale) / (2 * this.scale), n3 = (this.width - this.defaultWidth * this.scale) / (2 * this.scale)) : (t4 = 0, n3 = (this.width - this.defaultWidth * this.scale) / this.scale), this.defaultHeight * this.scale <= this.height ? (e3 = (this.height - this.defaultHeight * this.scale) / (2 * this.scale), i2 = (this.height - this.defaultHeight * this.scale) / (2 * this.scale)) : (e3 = 0, i2 = (this.height - this.defaultHeight * this.scale) / this.scale), this.transY > e3 ? this.transY = e3 : this.transY < i2 && (this.transY = i2), this.transX > t4 ? this.transX = t4 : this.transX < n3 && (this.transX = n3), this.canvas.applyTransformParams(this.scale, this.transX, this.transY), this.markers && this.repositionMarkers(), this.lines && this.repositionLines(), this.repositionLabels();
        }, setFocus: function(t4) {
          var e3 = this;
          t4 === void 0 && (t4 = {});
          var n3, i2 = [];
          if (t4.region ? i2.push(t4.region) : t4.regions && (i2 = t4.regions), i2.length)
            return i2.forEach(function(t5) {
              if (e3.regions[t5]) {
                var i3 = e3.regions[t5].element.shape.getBBox();
                i3 && (n3 = n3 === void 0 ? i3 : { x: Math.min(n3.x, i3.x), y: Math.min(n3.y, i3.y), width: Math.max(n3.x + n3.width, i3.x + i3.width) - Math.min(n3.x, i3.x), height: Math.max(n3.y + n3.height, i3.y + i3.height) - Math.min(n3.y, i3.y) });
              }
            }), this.setScale(Math.min(this.width / n3.width, this.height / n3.height), -(n3.x + n3.width / 2), -(n3.y + n3.height / 2), true, t4.animate);
          if (t4.coords) {
            var a2 = this.coordsToPoint(t4.coords[0], t4.coords[1]), r2 = this.transX - a2.x / this.scale, o2 = this.transY - a2.y / this.scale;
            return this.setScale(t4.scale * this.baseScale, r2, o2, true, t4.animate);
          }
        }, resize: function() {
          var t4 = this.baseScale;
          this.width / this.height > this.defaultWidth / this.defaultHeight ? (this.baseScale = this.height / this.defaultHeight, this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale)) : (this.baseScale = this.width / this.defaultWidth, this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale)), this.scale *= this.baseScale / t4, this.transX *= this.baseScale / t4, this.transY *= this.baseScale / t4;
        }, setScale: function(t4, e3, n3, i2, a2) {
          var r2, o2, s2, l2, c2, d2, u2, h2, p2, f2, g2 = this, m2 = 0, v2 = Math.abs(Math.round(60 * (t4 - this.scale) / Math.max(t4, this.scale)));
          t4 > this.params.zoomMax * this.baseScale ? t4 = this.params.zoomMax * this.baseScale : t4 < this.params.zoomMin * this.baseScale && (t4 = this.params.zoomMin * this.baseScale), e3 !== void 0 && n3 !== void 0 && (r2 = t4 / this.scale, i2 ? (p2 = e3 + this.defaultWidth * (this.width / (this.defaultWidth * t4)) / 2, f2 = n3 + this.defaultHeight * (this.height / (this.defaultHeight * t4)) / 2) : (p2 = this.transX - (r2 - 1) / t4 * e3, f2 = this.transY - (r2 - 1) / t4 * n3)), a2 && v2 > 0 ? (s2 = this.scale, l2 = (t4 - s2) / v2, c2 = this.transX * this.scale, u2 = this.transY * this.scale, d2 = (p2 * t4 - c2) / v2, h2 = (f2 * t4 - u2) / v2, o2 = setInterval(function() {
            m2 += 1, g2.scale = s2 + l2 * m2, g2.transX = (c2 + d2 * m2) / g2.scale, g2.transY = (u2 + h2 * m2) / g2.scale, g2.applyTransform(), m2 == v2 && (clearInterval(o2), g2.emit("viewport:changed", [g2.scale, g2.transX, g2.transY]));
          }, 10)) : (this.transX = p2, this.transY = f2, this.scale = t4, this.applyTransform(), this.emit("viewport:changed", [this.scale, this.transX, this.transY]));
        }, updateSize: function() {
          this.width = this.container.width(), this.height = this.container.height(), this.resize(), this.canvas.setSize(this.width, this.height), this.applyTransform();
        }, coordsToPoint: function(t4, e3) {
          var n3, i2, a2, r2 = j.maps[this.params.map].projection, o2 = r2.centralMeridian;
          return n3 = M[r2.type](t4, e3, o2), !!(i2 = this.getInsetForPoint(n3.x, n3.y)) && (a2 = i2.bbox, n3.x = (n3.x - a2[0].x) / (a2[1].x - a2[0].x) * i2.width * this.scale, n3.y = (n3.y - a2[0].y) / (a2[1].y - a2[0].y) * i2.height * this.scale, { x: n3.x + this.transX * this.scale + i2.left * this.scale, y: n3.y + this.transY * this.scale + i2.top * this.scale });
        }, getInsetForPoint: function(t4, e3) {
          var n3, i2, a2 = j.maps[this.params.map].insets;
          for (n3 = 0; n3 < a2.length; n3++)
            if (t4 > (i2 = a2[n3].bbox)[0].x && t4 < i2[1].x && e3 > i2[0].y && e3 < i2[1].y)
              return a2[n3];
        }, getMarkerPosition: function(t4) {
          var e3 = t4.coords;
          return j.maps[this.params.map].projection ? this.coordsToPoint.apply(this, e3) : { x: e3[0] * this.scale + this.transX * this.scale, y: e3[1] * this.scale + this.transY * this.scale };
        }, repositionLines: function() {
          var t4 = false, e3 = false;
          for (var n3 in this.lines) {
            for (var i2 in this.markers) {
              var a2 = this.markers[i2];
              a2.config.name === this.lines[n3].config.from && (t4 = this.getMarkerPosition(a2.config)), a2.config.name === this.lines[n3].config.to && (e3 = this.getMarkerPosition(a2.config));
            }
            t4 !== false && e3 !== false && this.lines[n3].element.setStyle({ x1: t4.x, y1: t4.y, x2: e3.x, y2: e3.y });
          }
        }, repositionMarkers: function() {
          var t4;
          for (var e3 in this.markers)
            (t4 = this.getMarkerPosition(this.markers[e3].config)) !== false && this.markers[e3].element.setStyle({ cx: t4.x, cy: t4.y });
        }, repositionLabels: function() {
          var t4 = this.params.labels;
          if (t4) {
            if (t4.regions)
              for (var e3 in this.regions)
                this.regions[e3].element.updateLabelPosition();
            if (t4.markers)
              for (var n3 in this.markers)
                this.markers[n3].element.updateLabelPosition();
          }
        }, visualizeData: function(t4) {
          f.isObj(t4) && (this.dataVisualization = new R(t4, this));
        } }), O = { onViewportChange: "viewport:changed", onRegionSelected: "region:selected", onMarkerSelected: "marker:selected", onRegionTooltipShow: "region.tooltip:show", onMarkerTooltipShow: "marker.tooltip:show", onLoaded: "map:loaded", onDestroyed: "map:destroyed" }, j = function() {
          function t4(e4) {
            if (e4 === void 0 && (e4 = {}), this.params = f.mergeDeeply(t4.defaults, e4), !t4.maps[this.params.map])
              throw new Error("Attempt to use map which was not loaded: " + e4.map);
            this.mapData = t4.maps[this.params.map], this.regions = {}, this.markers = {}, this.lines = {}, this.defaultWidth = this.mapData.width, this.defaultHeight = this.mapData.height, this.height = 0, this.width = 0, this.scale = 1, this.baseScale = 1, this.transX = 0, this.transY = 0, this.baseTransX = 0, this.baseTransY = 0, this.isBeingDragged = false, this.selector = e4.selector, window.document.readyState !== "loading" ? this.init(e4.selector) : window.addEventListener("DOMContentLoaded", this.init.bind(this, e4.selector));
          }
          var e3 = t4.prototype;
          return e3.init = function(t5) {
            var e4 = this.params;
            this.container = f.$(t5).addClass("jvm-container"), this.canvas = new _(this.container, this.width, this.height), this.setBackgroundColor(e4.backgroundColor), this.handleContainerEvents(), this.createRegions(), this.updateSize(), this.createLines(e4.lines || {}, e4.markers || {}), this.createMarkers(e4.markers), this.handleElementEvents(), this.repositionLabels(), e4.showTooltip && this.createTooltip(), e4.zoomButtons && this.handleZoomButtons(), e4.selectedRegions && this.setSelected("regions", e4.selectedRegions), e4.selectedMarkers && this.setSelected("markers", e4.selectedMarkers), e4.focusOn && this.setFocus(e4.focusOn), e4.visualizeData && this.visualizeData(e4.visualizeData), e4.bindTouchEvents && ("ontouchstart" in window || window.DocumentTouch && document instanceof DocumentTouch) && this.bindContainerTouchEvents(), e4.series && (this.container.append(this.legendHorizontal = f.createElement("div", "jvm-series-container jvm-series-h")).append(this.legendVertical = f.createElement("div", "jvm-series-container jvm-series-v")), this.createSeries()), this.emit("map:loaded", [this]);
          }, e3.emit = function(t5, e4) {
            for (var n3 in O)
              O[n3] === t5 && f.isFunc(this.params[n3]) && this.params[n3].apply(this, e4);
          }, e3.setBackgroundColor = function(t5) {
            this.container.css({ backgroundColor: t5 });
          }, e3.getSelected = function(t5) {
            var e4, n3 = [];
            for (e4 in this[t5])
              this[t5][e4].element.isSelected && n3.push(e4);
            return n3;
          }, e3.clearSelected = function(t5) {
            var e4 = this;
            this.getSelected(t5).forEach(function(n3) {
              e4[t5][n3].element.select(false);
            });
          }, e3.setSelected = function(t5, e4) {
            var n3 = this;
            e4.forEach(function(e5) {
              n3[t5][e5] && n3[t5][e5].element.select(true);
            });
          }, e3.getSelectedRegions = function() {
            return this.getSelected("regions");
          }, e3.clearSelectedRegions = function() {
            var t5 = this;
            this.getSelected("regions").forEach(function(e4) {
              t5.regions[e4].element.select(false);
            });
          }, e3.getSelectedMarkers = function() {
            return this.getSelected("markers");
          }, e3.clearSelectedMarkers = function() {
            var t5 = this;
            this.getSelected("markers").forEach(function(e4) {
              t5.markers[e4].element.select(false);
            });
          }, e3.addMarker = function(t5) {
            console.warn("`addMarker` method is depreacted, please use `addMarkers` instead."), this.createMarkers([t5], true);
          }, e3.addMarkers = function(t5) {
            if (typeof t5 == "object")
              return this.createMarkers([t5], true);
            this.createMarkers(t5, true);
          }, e3.removeMarkers = function(t5) {
            var e4 = this;
            t5 || (t5 = Object.keys(this.markers)), t5.forEach(function(t6) {
              e4.markers[t6].element.remove(), delete e4.markers[t6];
            });
          }, e3.addLine = function(t5, e4, n3) {
            n3 === void 0 && (n3 = {}), this.createLines([{ from: t5, to: e4, style: n3 }], this.markers, true);
          }, e3.reset = function() {
            for (var t5 in this.series)
              for (var e4 = 0; e4 < this.series[t5].length; e4++)
                this.series[t5][e4].clear();
            this.legendHorizontal && (f.removeElement(this.legendHorizontal), this.legendHorizontal = null), this.legendVertical && (f.removeElement(this.legendVertical), this.legendVertical = null), this.scale = this.baseScale, this.transX = this.baseTransX, this.transY = this.baseTransY, this.applyTransform(), this.clearSelectedMarkers(), this.clearSelectedRegions(), this.removeMarkers();
          }, e3.destroy = function(t5) {
            var e4 = this;
            t5 === void 0 && (t5 = true);
            var n3 = a(), r2 = this.tooltip.selector, o2 = Object.keys;
            f.removeElement(r2), o2(n3).forEach(function(t6) {
              i(n3[t6].selector, t6, n3[t6].handler);
            }), this.emit("map:destroyed"), t5 && o2(this).forEach(function(t6) {
              try {
                delete e4[t6];
              } catch (t7) {
              }
            });
          }, e3.extend = function(e4, n3) {
            t4.prototype[e4] = n3;
          }, e3.getUtils = function() {
            return f;
          }, t4;
        }();
        j.maps = {}, j.defaults = { map: "world", backgroundColor: "tranparent", draggable: true, zoomButtons: true, zoomOnScroll: true, zoomOnScrollSpeed: 3, zoomMax: 12, zoomMin: 1, zoomAnimate: true, showTooltip: true, zoomStep: 1.5, bindTouchEvents: true, lineStyle: { stroke: "#808080", strokeWidth: 1, strokeLinecap: "round" }, markersSelectable: false, markersSelectableOne: false, markerStyle: { initial: { r: 7, fill: "#374151", fillOpacity: 1, stroke: "#FFF", strokeWidth: 5, strokeOpacity: 0.5 }, hover: { fill: "#3cc0ff", cursor: "pointer" }, selected: { fill: "blue" }, selectedHover: {} }, markerLabelStyle: { initial: { fontFamily: "Verdana", fontSize: 12, fontWeight: 500, cursor: "default", fill: "#374151" }, hover: { cursor: "pointer" }, selected: {}, selectedHover: {} }, regionsSelectable: false, regionsSelectableOne: false, regionStyle: { initial: { fill: "#dee2e8", fillOpacity: 1, stroke: "none", strokeWidth: 0 }, hover: { fillOpacity: 0.7, cursor: "pointer" }, selected: { fill: "#9ca3af" }, selectedHover: {} }, regionLabelStyle: { initial: { fontFamily: "Verdana", fontSize: "12", fontWeight: "bold", cursor: "default", fill: "#35373e" }, hover: { cursor: "pointer" } } }, Object.assign(j.prototype, P);
        var N = function() {
          function t4(t5) {
            if (t5 === void 0 && (t5 = {}), !t5.selector)
              throw new Error("Selector is not given.");
            return new j(t5);
          }
          return t4.prototype.addMap = function(t5, e3) {
            j.maps[t5] = e3;
          }, t4;
        }();
        return window.jsVectorMap = N;
      }();
    }, 7427: function() {
      jsVectorMap.prototype.addMap("us_aea_en", { insets: [{ width: 220, top: 440, height: 146.9158157558812, bbox: [{ y: -8441281712315228e-9, x: -5263934893342895e-9 }, { y: -6227992545028123e-9, x: -1.9496312950683108e6 }], left: 0 }, { width: 80, top: 460, height: 129.05725678001465, bbox: [{ y: -4207380690946597e-9, x: -5958501652314129e-9 }, { y: -3.6582014570359783e6, x: -561807648127754e-8 }], left: 245 }, { width: 900, top: 0, height: 550.2150229714246, bbox: [{ y: -54908392352678e-7, x: -2.0292436460439637e6 }, { y: -2690044485299302e-9, x: 2.5520839617675776e6 }], left: 0 }], paths: { "US-VA": { path: "M682.42,290.04l1.61,-0.93l1.65,-0.48l1.12,-0.95l3.57,-1.69l0.74,-2.33l0.82,-0.19l2.32,-1.54l0.05,-1.81l2.04,-1.86l-0.13,-1.58l0.26,-0.42l5.0,-4.09l4.76,-6.0l0.09,0.63l0.96,0.54l0.33,1.37l1.32,0.74l0.71,0.81l1.46,0.09l0.79,0.65l1.3,0.48l1.41,-0.09l0.79,-0.41l0.76,-1.22l1.17,-0.57l0.53,-1.38l2.72,1.49l1.42,-1.1l2.25,-0.99l0.76,0.06l1.08,-0.97l0.33,-0.82l-0.48,-0.96l0.23,-0.42l1.9,0.58l3.26,-2.62l0.3,-0.1l0.51,0.73l0.66,-0.07l2.38,-2.34l0.17,-0.85l-0.49,-0.51l0.99,-1.12l0.1,-0.6l-0.28,-0.51l-1.0,-0.46l0.71,-3.03l2.6,-4.8l0.55,-2.15l-0.01,-1.91l1.61,-2.55l-0.22,-0.94l0.24,-0.84l0.5,-0.48l0.39,-1.7l-0.0,-3.18l1.23,0.19l1.18,1.73l3.8,0.43l0.59,-0.28l1.05,-2.52l0.2,-2.36l0.71,-1.05l-0.04,-1.61l0.76,-2.31l1.78,0.75l0.65,-0.17l1.3,-3.3l0.57,0.05l0.59,-0.39l0.52,-1.2l0.81,-0.68l0.44,-1.8l1.38,-2.43l-0.35,-2.57l0.54,-1.76l-0.3,-2.01l9.18,4.58l0.59,-0.29l0.63,-4.0l2.6,-0.07l0.63,0.57l1.05,0.23l-0.5,1.74l0.6,0.88l1.61,0.85l2.52,-0.04l1.03,1.18l1.64,0.12l1.94,1.52l0.57,2.53l-0.94,0.78l-0.45,0.02l-0.3,0.43l0.13,0.71l-0.61,-0.05l-0.49,0.59l-0.37,2.5l0.07,2.29l-0.43,0.25l0.01,0.6l1.05,0.77l-0.36,0.14l-0.17,0.6l0.44,0.3l1.64,-0.08l1.38,-0.61l1.77,-1.61l0.39,0.58l-0.58,0.35l0.02,0.58l1.9,1.07l0.64,1.08l1.69,0.35l1.37,-0.11l0.95,0.49l0.82,-0.65l1.05,-0.08l0.33,0.56l1.26,0.63l-0.1,0.55l0.36,0.55l0.94,-0.23l0.41,0.56l3.96,0.88l0.25,1.12l-0.85,-0.41l-0.57,0.44l0.89,1.74l-0.35,0.57l0.62,0.78l-0.44,0.89l0.24,0.59l-1.36,-0.36l-0.59,-0.72l-0.67,0.18l-0.1,0.43l-2.44,-2.3l-0.56,0.05l-0.38,-0.56l-0.52,0.32l-1.36,-1.51l-1.23,-0.43l-2.86,-2.72l-1.34,-0.12l-1.11,-0.81l-1.17,0.05l-0.39,0.52l0.47,0.71l1.1,-0.01l0.63,0.68l1.33,0.07l0.6,0.43l0.62,1.4l1.46,1.11l1.13,0.34l1.53,1.8l2.55,0.94l1.4,1.89l2.14,-0.02l0.56,0.41l0.72,0.06l-0.61,0.7l0.3,0.49l2.03,0.34l0.26,0.72l0.55,0.1l0.13,1.67l-1.0,-0.75l-0.39,0.21l-1.13,-1.0l-0.58,0.29l0.1,0.82l-0.31,0.68l0.7,0.7l-0.18,0.6l1.12,0.32l-0.86,0.44l-2.12,-0.73l-1.39,-1.38l-0.83,-0.32l-2.23,-1.87l-0.58,0.11l-0.22,0.53l0.26,0.81l0.64,0.21l3.81,3.15l2.69,1.12l1.28,-0.33l0.45,1.07l1.27,0.26l-0.44,0.67l0.3,0.56l0.93,-0.19l0.0,1.24l-0.92,0.41l-0.57,0.73l-0.71,-0.93l-3.2,-1.58l-0.29,-1.16l-0.59,-0.59l-0.87,-0.11l-1.2,0.67l-1.71,-0.44l-0.36,-1.15l-0.71,-0.05l-0.05,1.32l-0.33,0.41l-1.43,-1.32l-0.51,0.09l-0.48,0.57l-0.65,-0.4l-0.99,0.45l-2.23,-0.1l-0.37,0.94l0.34,0.46l1.9,0.22l1.4,-0.31l0.85,0.24l0.56,-0.69l0.63,0.88l1.34,0.43l1.95,-0.31l1.5,0.71l0.67,-0.63l0.94,2.47l3.16,1.23l0.37,0.91l-0.57,1.03l0.56,0.44l1.72,-1.32l0.88,-0.02l0.83,0.65l0.8,-0.26l-0.61,-0.9l-0.2,-1.17l3.78,0.08l1.13,-0.44l1.89,3.23l-0.46,0.71l0.65,3.09l-1.19,-0.58l-0.02,0.88l-30.95,7.83l-37.19,8.41l-19.52,3.35l-7.08,0.85l-0.46,-0.26l-4.24,0.64l-0.82,0.62l-28.2,5.01ZM781.15,223.32l0.14,0.09l-0.06,0.07l-0.01,-0.03l-0.07,-0.12ZM808.05,244.59l0.53,-1.14l-0.26,-0.54l-0.36,-0.08l0.58,-0.98l-0.39,-0.71l-0.03,-0.49l0.44,-0.35l-0.17,-0.73l0.62,-0.3l0.23,-0.6l0.14,-2.33l1.01,-0.39l-0.12,-0.9l0.48,-0.14l-0.26,-1.53l-0.79,-0.4l0.87,-0.57l0.1,-1.03l2.69,-1.11l0.36,2.48l-1.08,4.2l-0.22,2.38l0.33,1.09l-0.34,0.97l-0.6,-0.79l-0.81,0.15l-0.39,0.95l0.27,0.37l-0.65,0.46l-0.3,0.85l0.17,1.05l-0.31,1.46l0.38,2.47l-0.6,0.6l0.07,1.33l-1.37,-1.9l0.23,-0.94l-0.33,-1.57l0.28,-0.97l-0.38,-0.3Z", name: "Virginia" }, "US-PA": { path: "M716.46,159.99l0.63,-0.19l4.3,-3.73l1.13,5.2l0.48,0.31l34.84,-7.93l34.28,-8.64l1.42,0.58l0.71,1.39l0.64,0.13l0.77,-0.33l1.24,0.59l0.14,0.85l0.81,0.41l-0.16,0.58l0.89,2.69l1.9,2.07l2.12,0.75l2.21,-0.2l0.72,0.79l-0.89,0.87l-0.73,1.49l-0.17,2.25l-1.41,3.35l-1.37,1.58l0.04,0.79l1.79,1.72l-0.31,1.65l-0.84,0.43l-0.22,0.66l0.14,1.48l1.04,2.87l0.52,0.25l1.2,-0.18l1.18,2.39l0.95,0.58l0.66,-0.26l0.6,0.9l4.23,2.75l0.12,0.41l-1.29,0.93l-3.71,4.22l-0.23,0.76l0.17,0.9l-1.36,1.13l-0.84,0.15l-1.33,1.08l-0.33,0.66l-1.72,-0.12l-2.03,0.84l-1.15,1.37l-0.41,1.39l-37.23,9.21l-39.1,8.66l-10.03,-48.21l1.92,-1.22l3.08,-3.04Z", name: "Pennsylvania" }, "US-TN": { path: "M571.72,341.09l0.86,-0.84l0.29,-1.37l1.0,0.04l0.65,-0.79l-0.99,-4.89l1.41,-1.93l0.06,-1.32l1.18,-0.46l0.36,-0.48l-0.63,-1.31l0.53,-0.65l0.05,-0.56l-0.89,-1.33l2.55,-1.57l1.09,-1.13l-0.14,-0.84l-0.85,-0.53l0.14,-0.19l0.34,-0.16l0.85,0.37l0.46,-0.33l-0.27,-1.31l-0.85,-0.9l0.06,-0.71l0.51,-1.43l1.0,-1.11l-1.35,-2.06l1.37,-0.21l0.61,-0.55l-0.13,-0.64l-1.17,-0.82l0.82,-0.15l0.58,-0.54l0.13,-0.69l-0.59,-1.38l0.02,-0.36l0.37,0.53l0.47,0.08l0.58,-0.29l0.6,-0.86l23.67,-2.81l0.35,-0.41l-0.1,-1.35l-0.84,-2.39l2.98,-0.08l0.82,0.58l22.79,-3.55l7.64,-0.46l7.5,-0.86l8.82,-1.42l24.01,-3.1l1.11,-0.6l29.3,-5.2l0.73,-0.6l3.56,-0.54l-0.4,1.44l0.43,0.85l-0.4,2.0l0.36,0.82l-1.15,-0.03l-1.71,1.79l-1.21,3.89l-0.55,0.7l-0.56,0.08l-0.63,-0.74l-1.44,-0.02l-2.66,1.73l-1.42,2.73l-0.96,0.89l-0.34,-0.34l-0.13,-1.05l-0.73,-0.54l-0.53,0.15l-2.3,1.81l-0.29,1.32l-0.93,-0.24l-0.9,0.48l-0.16,0.77l0.32,0.73l-0.85,2.18l-1.29,0.06l-1.75,1.14l-1.28,1.24l-0.61,1.06l-0.78,0.27l-2.28,2.46l-4.04,0.78l-2.58,1.7l-0.49,1.09l-0.88,0.55l-0.55,0.81l-0.18,2.88l-0.35,0.6l-1.65,0.52l-0.89,-0.16l-1.06,1.14l0.21,5.24l-20.21,3.32l-21.62,3.04l-25.56,2.95l-0.34,0.31l-7.39,0.9l-28.73,3.17Z", name: "Tennessee" }, "US-ID": { path: "M132.38,121.39l-0.34,-0.44l0.08,-1.99l0.53,-1.74l1.42,-1.22l2.11,-3.59l1.68,-0.92l1.39,-1.53l1.08,-2.15l0.05,-1.22l2.21,-2.41l1.43,-2.7l0.37,-1.37l2.04,-2.26l1.89,-2.81l0.03,-1.01l-0.79,-2.95l-2.13,-1.94l-0.87,-0.36l-0.85,-1.61l-0.41,-3.02l-0.59,-1.19l0.94,-1.19l-0.12,-2.35l-1.04,-2.69l0.46,-0.98l9.67,-54.45l13.39,2.35l-3.54,20.72l1.29,2.89l1.0,1.27l0.27,1.55l1.17,1.76l-0.12,0.83l0.39,1.14l-0.99,0.95l0.83,1.76l-0.83,0.11l-0.28,0.71l1.93,1.68l1.03,2.04l2.24,1.22l0.54,1.58l1.09,1.33l1.49,2.79l0.08,0.68l1.64,1.81l0.01,1.88l1.79,1.71l-0.07,1.35l0.74,0.19l0.9,-0.58l0.36,0.46l-0.36,0.55l0.07,0.54l1.11,0.96l1.61,0.15l1.81,-0.36l-0.63,2.61l-0.99,0.54l0.25,1.14l-1.83,3.73l0.06,1.72l-0.81,0.07l-0.37,0.54l0.6,1.33l-0.62,0.9l-0.03,1.16l0.97,0.93l-0.37,0.81l0.28,1.01l-1.57,0.43l-1.21,1.41l0.1,1.11l0.46,0.77l-0.13,0.74l-0.83,0.77l-0.2,1.52l1.48,0.63l1.38,1.79l0.78,0.27l1.08,-0.35l0.56,-0.8l1.85,-0.41l1.21,-1.28l0.81,-0.29l0.15,-0.76l0.78,0.81l0.23,0.71l1.06,0.64l-0.42,1.23l0.73,0.95l-0.34,1.38l0.57,1.34l-0.21,1.61l1.54,2.64l0.31,1.73l0.82,0.37l0.67,2.08l-0.18,0.98l-0.76,0.64l0.51,1.9l1.24,1.16l0.3,0.79l0.81,0.08l0.86,-0.37l1.04,0.93l1.06,2.79l-0.5,0.81l0.89,1.83l-0.28,0.6l0.11,0.98l2.29,2.41l0.97,-0.14l-0.01,-1.14l1.07,-0.89l0.93,-0.22l4.53,1.62l0.69,-0.32l0.67,-1.35l1.19,-0.39l2.25,0.93l3.3,-0.1l0.96,0.88l2.29,-0.58l3.23,0.78l0.45,-0.49l-0.67,-0.76l0.26,-1.06l0.74,-0.48l-0.07,-0.96l1.23,-0.51l0.48,0.37l1.07,2.11l0.12,1.11l1.36,1.95l0.73,0.45l-6.27,53.86l-47.48,-6.32l-46.97,-7.73l6.88,-39.17l1.12,-1.18l1.07,-2.67l-0.21,-1.75l0.74,-0.15l0.77,-1.62l-0.9,-1.27l-0.18,-1.2l-1.24,-0.08l-0.64,-0.81l-0.88,0.29Z", name: "Idaho" }, "US-NV": { path: "M139.36,329.2l-12.7,-16.93l-36.59,-51.1l-25.35,-34.52l13.7,-64.19l46.89,9.24l46.99,7.74l-18.72,125.83l-0.9,1.16l-0.99,2.19l-0.44,0.17l-1.34,-0.22l-0.98,-2.24l-0.7,-0.63l-1.41,0.22l-1.95,-1.02l-1.6,0.23l-1.78,0.96l-0.76,2.48l0.88,2.59l-0.6,0.97l-0.24,1.31l0.38,3.12l-0.76,2.54l0.77,3.71l-0.13,3.07l-0.3,1.07l-1.04,0.31l-0.12,0.51l0.32,0.8l-0.52,0.62Z", name: "Nevada" }, "US-TX": { path: "M276.16,412.59l33.07,1.99l32.79,1.35l0.41,-0.39l3.6,-98.71l25.86,0.61l26.29,0.22l0.05,42.09l0.44,0.4l1.02,-0.13l0.78,0.28l3.74,3.82l1.66,0.21l0.88,-0.58l2.49,0.64l0.6,-0.68l0.11,-1.05l0.6,0.76l0.92,0.22l0.38,0.93l0.77,0.78l-0.01,1.64l0.52,0.83l2.85,0.42l1.25,-0.2l1.38,0.89l2.78,0.69l1.82,-0.56l0.63,0.1l1.89,1.8l1.4,-0.11l1.25,-1.43l2.43,0.26l1.67,-0.46l0.1,2.28l0.91,0.67l1.62,0.4l-0.04,2.09l1.56,0.79l1.82,-0.66l1.57,-1.68l1.02,-0.65l0.41,0.19l0.45,1.64l2.01,0.2l0.24,1.05l0.72,0.48l1.47,-0.21l0.88,-0.93l0.39,0.33l0.59,-0.08l0.61,-0.99l0.26,0.41l-0.45,1.23l0.14,0.76l0.67,1.14l0.78,0.42l0.57,-0.04l0.6,-0.5l0.68,-2.36l0.91,-0.65l0.35,-1.54l0.57,-0.14l0.4,0.14l0.29,0.99l0.57,0.64l1.21,0.02l0.83,0.5l1.26,-0.2l0.68,-1.34l0.48,0.15l-0.13,0.7l0.49,0.69l1.21,0.45l0.49,0.72l1.52,-0.05l1.49,1.74l0.52,0.02l0.63,-0.62l0.08,-0.71l1.49,-0.1l0.93,-1.43l1.88,-0.41l1.66,-1.13l1.52,0.83l1.51,-0.22l0.29,-0.83l2.29,-0.73l0.53,-0.55l0.5,0.32l0.38,0.88l1.82,0.42l1.69,-0.06l1.86,-1.14l0.41,-1.05l1.06,0.31l2.24,1.56l1.16,0.17l1.79,2.08l2.14,0.41l1.04,0.92l0.76,-0.11l2.48,0.85l1.04,0.04l0.37,0.79l1.38,0.97l1.45,-0.12l0.39,-0.72l0.8,0.36l0.88,-0.4l0.92,0.35l0.76,-0.15l0.64,0.36l2.23,34.03l1.51,1.67l1.3,0.82l1.25,1.87l0.57,1.63l-0.1,2.64l1.0,1.21l0.85,0.4l-0.12,0.85l0.75,0.54l0.28,0.87l0.65,0.7l-0.19,1.17l1.0,1.02l0.59,1.63l0.5,0.34l0.55,-0.1l-0.16,1.71l0.81,1.22l-0.64,0.25l-0.35,0.68l0.77,1.27l-0.55,0.89l0.19,1.39l-0.75,2.69l-0.74,0.85l-0.36,1.54l-0.79,1.13l0.64,2.0l-0.83,2.28l0.17,1.07l0.83,1.2l-0.19,1.01l0.49,1.6l-0.24,1.41l-1.13,1.67l-1.02,0.2l-1.76,3.37l-0.04,1.06l1.79,2.37l-3.43,0.08l-7.37,3.78l-0.02,-0.43l-2.19,-0.46l-3.24,1.07l1.09,-3.51l-0.3,-1.21l-0.8,-0.76l-0.62,-0.07l-1.52,0.85l-0.99,2.0l-1.56,-0.96l-1.64,0.12l-0.07,0.63l0.89,0.62l0.0,1.06l0.56,0.39l-0.47,0.69l0.07,1.02l1.63,0.64l-0.62,0.71l0.49,0.97l0.91,0.23l0.28,0.37l-0.4,1.25l-0.45,-0.12l-0.97,0.81l-1.72,2.25l-1.18,-0.4l-0.49,0.12l0.32,1.0l0.08,2.55l-1.85,1.49l-1.91,2.11l-0.96,0.37l-4.1,2.9l-3.3,0.45l-2.54,1.06l-0.2,1.12l-0.75,-0.34l-2.04,0.89l-0.33,-0.34l-1.11,0.18l0.43,-0.87l-0.52,-0.6l-1.43,0.22l-1.22,1.08l-0.6,-0.62l-0.11,-1.2l-1.38,-0.81l-0.5,0.44l0.65,1.44l0.01,1.12l-0.71,0.09l-0.54,-0.44l-0.75,-0.0l-0.55,-1.34l-1.46,-0.37l-0.58,0.39l0.04,0.54l0.94,1.7l0.03,1.24l0.58,0.37l0.36,-0.16l1.13,0.78l-0.75,0.37l-0.27,0.54l0.15,0.36l0.7,0.23l1.08,-0.54l0.96,0.6l-4.27,2.42l-0.57,-0.13l-0.37,-1.44l-0.5,-0.18l-1.13,-1.46l-0.49,-0.03l-0.48,0.51l0.1,0.63l-0.62,0.34l-0.05,0.51l1.18,1.61l-0.31,1.04l0.33,0.85l-1.66,1.79l-0.37,0.2l0.37,-0.64l-0.18,-0.72l0.25,-0.73l-0.46,-0.67l-0.52,0.17l-0.71,1.1l0.26,0.72l-0.39,0.95l-0.07,-1.13l-0.52,-0.55l-1.95,1.29l-0.78,-0.33l-0.7,0.52l0.07,0.75l-0.81,0.99l0.02,0.49l1.25,0.64l0.03,0.56l0.78,0.28l0.7,-1.41l0.86,-0.41l0.01,0.62l-2.82,4.36l-1.23,-1.0l-1.36,0.38l-0.32,-0.34l-2.4,0.39l-0.46,-0.31l-0.65,0.16l-0.18,0.58l0.41,0.61l0.55,0.38l1.53,0.03l-0.01,0.91l0.55,0.64l2.07,1.03l-2.7,7.63l-0.2,0.1l-0.38,-0.54l-0.34,0.1l0.18,-0.76l-0.57,-0.43l-2.35,1.95l-1.72,-2.36l-1.19,-0.91l-0.61,0.4l0.09,0.52l1.44,2.0l-0.11,0.82l-0.93,-0.09l-0.33,0.63l0.51,0.56l1.88,0.07l2.14,0.72l2.08,-0.72l-0.43,1.75l0.24,0.77l-0.98,0.7l0.37,1.59l-1.12,0.14l-0.43,0.41l0.4,2.11l-0.33,1.6l0.45,0.64l0.84,0.24l0.87,2.86l0.71,2.81l-0.91,0.82l0.62,0.49l-0.08,1.28l0.72,0.3l0.18,0.61l0.58,0.29l0.4,1.79l0.68,0.31l0.45,3.22l1.46,0.62l-0.52,1.1l0.31,1.07l-0.63,0.77l-0.84,-0.05l-0.53,0.44l0.08,1.31l-0.49,-0.33l-0.49,0.25l-0.39,-0.67l-1.49,-0.45l-2.92,-2.53l-2.2,-0.18l-0.81,-0.51l-4.2,0.09l-0.9,0.42l-0.78,-0.63l-1.06,0.25l-1.25,-0.2l-1.45,-0.7l-0.72,-0.97l-0.6,-0.14l-0.21,-0.72l-1.17,-0.49l-0.99,-0.02l-1.98,-0.87l-1.45,0.39l-0.83,-1.09l-0.6,-0.21l-1.43,-1.38l-1.96,0.01l-1.47,-0.64l-0.86,0.12l-1.62,-0.41l0.28,-1.26l-0.54,-1.01l-0.96,-0.35l-1.65,-6.03l-2.77,-3.02l-0.29,-1.12l-1.08,-0.75l0.35,-0.77l-0.24,-0.76l0.34,-2.18l-0.45,-0.96l-1.04,-1.01l0.65,-1.99l0.05,-1.19l-0.18,-0.7l-0.54,-0.33l-0.15,-1.81l-1.85,-1.44l-0.85,0.21l-0.29,-0.41l-0.81,-0.11l-0.74,-1.31l-2.22,-1.71l0.01,-0.69l-0.51,-0.58l0.12,-0.86l-0.97,-0.92l-0.08,-0.75l-1.12,-0.61l-1.3,-2.88l-2.66,-1.48l-0.38,-0.91l-1.13,-0.59l-0.06,-1.16l-0.82,-1.19l-0.59,-1.95l0.41,-0.22l-0.04,-0.73l-1.03,-0.49l-0.26,-1.29l-0.81,-0.57l-0.94,-1.74l-0.61,-2.38l-1.85,-2.36l-0.87,-4.24l-1.81,-1.34l0.05,-0.7l-0.75,-1.21l-3.96,-2.67l-0.71,-1.86l-1.82,-0.62l-1.44,-0.99l-0.01,-1.63l-0.6,-0.39l-0.88,0.24l-0.12,-0.77l-0.98,-0.33l-0.8,-2.08l-0.57,-0.47l-0.46,0.12l-0.46,-0.44l-0.86,0.27l-0.14,-0.6l-0.44,-0.31l-0.47,0.15l-0.25,0.61l-1.05,0.16l-2.89,-0.47l-0.39,-0.38l-1.48,-0.03l-0.79,0.29l-0.77,-0.44l-2.67,0.27l-3.92,-2.08l-1.35,0.86l-0.64,1.61l-1.98,-0.17l-0.52,0.44l-0.49,-0.17l-1.05,0.49l-1.33,0.14l-3.22,6.4l-0.18,1.77l-0.76,0.67l-0.38,1.8l0.35,0.59l-1.99,1.01l-0.72,1.3l-1.11,0.65l-1.12,2.0l-2.67,-0.46l-1.04,-0.87l-0.55,0.3l-1.69,-1.21l-1.31,-1.63l-2.9,-0.85l-1.15,-0.95l-0.02,-0.67l-0.42,-0.41l-2.75,-0.51l-2.28,-1.03l-1.89,-1.75l-0.91,-1.53l-0.96,-0.91l-1.53,-0.29l-1.77,-1.26l-0.22,-0.56l-1.31,-1.18l-0.65,-2.68l-0.86,-1.01l-0.24,-1.1l-0.76,-1.28l-0.26,-2.34l0.52,-3.05l-3.01,-5.07l-0.06,-1.94l-1.26,-2.51l-0.99,-0.44l-0.43,-1.24l-1.43,-0.81l-2.15,-2.18l-1.02,-0.1l-2.01,-1.25l-3.18,-3.35l-0.59,-1.55l-3.13,-2.55l-1.59,-2.45l-1.19,-0.95l-0.61,-1.05l-4.42,-2.6l-1.19,-2.19l-1.21,-3.23l-1.37,-1.08l-1.12,-0.08l-1.75,-1.67l-0.79,-3.05ZM502.09,468.18l-0.33,0.17l0.18,-0.16l0.15,-0.02ZM498.69,470.85l-0.09,0.12l-0.04,0.02l0.13,-0.14ZM497.79,472.33l0.15,0.05l-0.2,0.18l0.04,-0.11l0.01,-0.12ZM497.02,473.23l-0.13,0.12l0.03,-0.09l0.09,-0.03ZM467.54,489.19l0.03,0.02l-0.02,0.01l-0.0,-0.03ZM453.94,547.19l0.75,-0.5l0.25,-0.68l0.11,1.08l-1.1,0.1ZM460.89,499.8l-0.14,-0.59l1.22,-0.36l-0.28,0.33l-0.79,0.63ZM463.51,497.84l0.1,-0.23l1.27,-0.88l-0.92,0.85l-0.45,0.26ZM465.8,496.12l0.28,-0.24l0.47,-0.04l-0.25,0.13l-0.5,0.15ZM457.96,502.92l0.71,-1.64l0.64,-0.71l-0.02,0.75l-1.33,1.6ZM451.06,515.13l0.06,-0.22l0.07,-0.15l-0.13,0.37ZM451.5,513.91l0.16,-0.35l0.02,-0.02l-0.18,0.37ZM452.44,511.95l-0.01,-0.04l0.05,-0.04l-0.04,0.08Z", name: "Texas" }, "US-NH": { path: "M829.94,105.42l0.2,-1.33l-1.43,-5.38l0.53,-1.45l-0.28,-2.22l1.0,-1.86l-0.13,-2.3l0.64,-2.28l-0.44,-0.62l0.29,-2.31l-0.93,-3.8l0.08,-0.7l0.3,-0.45l1.83,-0.8l0.7,-1.39l1.43,-1.62l0.74,-1.8l-0.25,-1.13l0.52,-0.62l-2.34,-3.49l0.87,-3.26l-0.11,-0.78l-0.81,-1.29l0.27,-0.59l-0.23,-0.7l0.48,-3.2l-0.36,-0.82l0.91,-1.49l2.44,0.33l0.65,-0.88l13.0,34.89l0.84,3.65l2.6,2.21l0.88,0.34l0.36,1.6l1.72,1.31l0.0,0.35l0.77,0.23l-0.06,0.58l-0.46,3.09l-1.57,0.24l-1.32,1.19l-0.51,0.94l-0.96,0.37l-0.5,1.68l-1.1,1.44l-17.61,4.74l-1.7,-1.43l-0.41,-0.89l-0.1,-2.0l0.54,-0.59l0.03,-0.52l-1.02,-5.18Z", name: "New Hampshire" }, "US-NY": { path: "M821.38,166.44l0.69,-2.05l0.62,-0.02l0.55,-0.75l0.76,0.15l0.54,-0.41l-0.04,-0.31l0.57,-0.03l0.28,-0.66l0.66,-0.02l0.2,-0.55l-0.42,-0.83l0.22,-0.53l0.61,-0.37l1.34,0.22l0.54,-0.59l1.45,-0.18l0.21,-0.8l1.85,0.02l1.08,-0.91l0.11,-0.78l0.62,0.24l0.43,-0.61l4.83,-1.29l2.26,-1.3l1.99,-2.91l-0.2,1.16l-0.98,0.86l-1.22,2.31l0.55,0.46l1.6,-0.35l0.28,0.63l-0.43,0.49l-1.37,0.87l-0.51,-0.07l-2.26,0.92l-0.08,0.93l-0.87,-0.0l-2.73,1.72l-1.01,0.15l-0.17,0.8l-1.24,0.09l-2.24,1.91l-4.44,2.17l-0.2,0.71l-0.29,0.08l-0.45,-0.83l-1.41,-0.06l-0.73,0.42l-0.42,0.8l0.23,0.32l-0.92,0.69l-0.76,-0.84l0.32,-1.05ZM828.05,159.06l-0.02,-0.01l0.02,-0.06l-0.01,0.08ZM845.16,149.05l0.06,-0.06l0.18,-0.06l-0.11,0.19l-0.13,-0.07ZM844.3,154.94l0.1,-0.89l0.74,-1.16l1.65,-1.52l1.01,0.31l0.05,-0.82l0.79,0.67l-3.36,3.21l-0.67,0.45l-0.31,-0.25ZM850.39,150.14l0.02,-0.03l0.07,-0.07l-0.09,0.1ZM722.09,155.56l3.76,-3.85l1.27,-2.19l1.76,-1.86l1.16,-0.78l1.28,-3.35l1.56,-1.3l0.53,-0.83l-0.21,-1.83l-1.61,-2.42l0.43,-1.13l-0.17,-0.78l-0.83,-0.53l-2.11,-0.0l0.04,-0.99l-0.57,-2.22l4.99,-2.94l4.49,-1.8l2.38,-0.19l1.84,-0.74l5.64,-0.24l3.13,1.25l3.16,-1.68l5.49,-1.06l0.58,0.45l0.68,-0.2l0.12,-0.98l1.45,-0.72l1.03,-0.93l0.75,-0.2l0.69,-2.05l1.87,-1.76l0.79,-1.26l1.12,0.03l1.13,-0.52l1.07,-1.63l-0.46,-0.7l0.36,-1.2l-0.25,-0.51l-0.64,0.02l-0.17,-1.17l-0.94,-1.59l-1.01,-0.62l0.12,-0.18l0.59,0.39l0.53,-0.27l0.75,-1.44l-0.01,-0.91l0.81,-0.65l-0.01,-0.97l-0.93,-0.19l-0.6,0.7l-0.28,0.12l0.56,-1.3l-0.81,-0.62l-1.26,0.05l-0.87,0.77l-0.92,-0.41l-0.06,-0.29l2.05,-2.5l1.78,-1.47l1.67,-2.64l0.7,-0.56l0.11,-0.59l0.78,-0.95l0.07,-0.56l-0.5,-0.95l0.78,-1.89l4.82,-7.61l4.77,-4.5l2.84,-0.51l19.67,-5.66l0.41,0.88l-0.08,2.01l1.02,1.22l0.43,3.8l2.29,3.25l-0.09,1.89l0.85,2.42l-0.59,1.07l-0.0,3.41l0.71,0.9l1.32,2.76l0.19,1.09l0.62,0.84l0.12,3.92l0.55,0.85l0.54,0.07l0.53,-0.61l0.06,-0.87l0.33,-0.07l1.05,1.12l3.97,15.58l0.74,1.2l0.22,15.32l0.6,0.62l3.57,16.23l1.26,1.34l-2.82,3.18l0.03,0.54l1.52,1.31l0.19,0.6l-0.78,0.88l-0.64,1.8l-0.41,0.39l0.15,0.69l-1.25,0.64l0.04,-4.02l-0.57,-2.28l-0.74,-1.62l-1.46,-1.1l-0.17,-1.13l-0.7,-0.1l-0.42,1.33l0.68,1.27l1.05,0.83l0.97,2.85l-13.75,-4.06l-1.28,-1.47l-2.39,0.24l-0.63,-0.43l-1.06,-0.15l-1.74,-1.91l-0.75,-2.33l0.12,-0.72l-0.36,-0.63l-0.56,-0.21l0.09,-0.46l-0.35,-0.42l-1.64,-0.68l-1.08,0.32l-0.53,-1.22l-1.92,-0.93l-34.6,8.73l-34.44,7.84l-1.11,-5.15ZM818.84,168.69l1.08,-0.48l0.14,0.63l-1.17,1.53l-0.05,-1.68ZM730.07,136.63l0.03,-0.69l0.78,-0.07l-0.38,1.09l-0.43,-0.33Z", name: "New York" }, "US-HI": { path: "M295.5,583.17l0.06,-1.75l4.12,-4.97l1.03,-3.4l-0.33,-0.64l0.94,-2.43l-0.05,-3.52l0.39,-0.78l2.47,-0.7l1.55,0.23l4.45,-1.4l0.51,-0.7l-0.17,-2.69l0.4,-1.66l1.78,-1.16l1.74,2.15l-0.15,0.94l1.88,3.6l0.94,0.35l5.13,7.65l0.86,3.93l-1.52,3.14l0.22,0.58l1.47,0.95l-0.68,2.07l0.35,1.51l1.6,3.0l-1.39,0.86l-2.28,-0.2l-3.27,0.51l-4.56,-1.32l-2.15,-1.34l-6.66,-0.15l-1.59,0.26l-1.56,1.19l-1.63,0.58l-1.14,0.02l-0.7,-2.54l-2.09,-2.18ZM306.33,530.7l1.6,0.08l0.51,2.07l-0.3,2.25l0.37,0.59l2.33,0.88l1.38,0.1l1.55,1.39l0.27,1.55l0.93,0.97l-0.13,1.05l1.83,2.52l-0.13,0.66l-0.61,0.48l-1.82,0.38l-1.84,-0.18l-1.47,-1.19l-2.21,-0.24l-2.69,-1.48l0.01,-1.23l1.15,-1.86l0.41,-2.07l-1.76,-1.28l-1.08,-1.75l-0.1,-2.61l1.79,-1.08ZM297.2,518.01l0.71,0.31l0.38,1.05l2.64,2.0l0.9,1.11l0.92,0.08l0.8,1.67l1.56,1.05l0.72,0.06l1.07,1.11l-1.31,0.41l-2.75,-0.66l-3.23,-3.93l-3.16,-2.01l-1.39,-0.44l-0.05,-0.7l1.58,-0.43l0.62,-0.67ZM301.59,541.55l-2.09,-0.98l-0.28,-0.51l2.92,0.34l-0.56,1.15ZM298.23,532.36l-0.92,-0.29l-0.72,-0.89l0.92,-2.06l-0.49,-1.73l2.6,1.38l0.61,2.08l0.14,1.06l-2.15,0.45ZM281.13,503.64l0.57,-1.85l-0.38,-0.9l-0.16,-2.84l0.75,-0.92l-0.12,-1.22l2.74,1.9l2.9,-0.62l1.56,0.15l0.38,1.01l-0.33,2.17l0.29,1.5l-0.69,0.6l-0.19,1.55l0.38,1.54l0.86,0.51l0.29,1.07l-0.52,1.14l0.53,1.28l-1.18,-0.0l-0.2,-0.48l-2.04,-0.86l-0.77,-2.83l-1.27,-0.38l0.8,-0.11l0.32,-0.46l-0.08,-0.66l-0.63,-0.68l-1.75,-0.32l0.23,1.82l-2.28,-1.1ZM259.66,469.47l-0.24,-2.03l-0.91,-0.69l-0.68,-1.23l0.08,-1.2l0.08,-0.34l2.39,-0.81l4.6,0.53l0.67,1.04l2.51,1.09l0.69,1.25l-0.15,1.9l-2.3,1.32l-0.74,1.3l-0.79,0.34l-2.78,0.09l-0.92,-1.53l-1.52,-1.0ZM245.78,462.61l-0.23,-0.74l1.03,-0.75l4.32,-0.72l0.43,0.3l-0.92,0.4l-0.68,0.94l-1.66,-0.5l-1.36,0.34l-0.94,0.72Z", name: "Hawaii" }, "US-VT": { path: "M805.56,72.69l26.03,-7.97l0.89,1.85l-0.74,2.37l-0.03,1.54l2.22,2.75l-0.51,0.58l0.26,1.13l-0.67,1.6l-1.35,1.49l-0.64,1.32l-1.72,0.7l-0.62,0.92l-0.1,0.98l0.93,3.74l-0.29,2.44l0.4,0.54l-0.6,2.11l0.15,2.19l-1.0,1.87l0.27,2.36l-0.53,1.54l1.43,5.44l-0.22,1.22l1.05,5.3l-0.58,0.85l0.11,2.31l0.6,1.26l1.51,1.1l-11.44,2.89l-0.57,-0.85l-4.02,-15.75l-1.72,-1.59l-0.91,0.25l-0.3,1.19l-0.12,-0.26l-0.11,-3.91l-0.68,-1.0l-0.14,-0.98l-1.37,-2.85l-0.63,-0.68l0.01,-3.15l0.6,-1.15l-0.86,-2.57l0.08,-1.93l-0.39,-0.91l-1.55,-1.63l-0.38,-0.81l-0.41,-3.71l-1.03,-1.27l0.11,-1.87l-0.43,-1.01Z", name: "Vermont" }, "US-NM": { path: "M230.86,422.88l11.82,-123.66l25.67,2.24l26.1,1.86l26.12,1.45l25.74,1.02l-0.31,10.24l-0.74,0.39l-3.59,98.69l-32.38,-1.34l-33.53,-2.02l-0.44,0.76l0.54,2.31l0.44,1.26l0.99,0.76l-30.55,-2.46l-0.43,0.36l-0.82,9.46l-14.63,-1.33Z", name: "New Mexico" }, "US-NC": { path: "M826.87,289.49l0.07,-0.05l-0.02,0.03l-0.04,0.02ZM819.58,272.4l0.2,0.23l-0.05,0.01l-0.16,-0.24ZM821.84,276.68l0.19,0.15l-0.02,0.18l-0.05,-0.08l-0.12,-0.25ZM676.72,321.77l0.92,0.17l1.52,-0.39l0.42,-0.39l0.52,-0.97l0.13,-2.7l1.34,-1.19l0.47,-1.05l2.24,-1.47l2.12,-0.52l0.76,0.18l1.32,-0.52l2.36,-2.52l0.78,-0.25l1.84,-2.29l1.48,-1.0l1.55,-0.19l1.15,-2.65l-0.28,-1.22l1.66,0.06l0.51,-1.65l0.93,-0.77l1.08,-0.77l0.51,1.52l1.07,0.33l1.34,-1.17l1.35,-2.64l2.49,-1.59l0.79,0.08l0.82,0.8l1.06,-0.21l0.84,-1.07l1.47,-4.18l1.08,-1.1l1.47,0.09l0.44,-0.31l-0.69,-1.26l0.4,-2.0l-0.42,-0.9l0.38,-1.25l7.42,-0.86l19.54,-3.36l37.22,-8.42l31.12,-7.87l0.4,1.21l3.54,3.24l1.0,1.53l-1.21,-1.0l-0.16,-0.63l-0.92,-0.4l-0.52,0.05l-0.24,0.65l0.66,0.54l0.59,1.56l-0.53,0.01l-0.91,-0.75l-2.31,-0.8l-0.4,-0.48l-0.55,0.13l-0.31,0.69l0.14,0.64l1.37,0.44l1.69,1.38l-1.11,0.66l-2.48,-1.2l-0.36,0.51l0.14,0.42l1.6,1.18l-1.84,-0.33l-2.23,-0.87l-0.46,0.14l0.01,0.48l0.6,0.7l1.71,0.83l-0.97,0.58l0.0,0.6l-0.43,0.53l-1.48,0.74l-0.89,-0.77l-0.61,0.22l-0.1,0.35l-0.2,-0.13l-1.32,-2.32l0.21,-2.63l-0.42,-0.48l-0.89,-0.22l-0.37,0.64l0.62,0.71l-0.43,0.99l-0.02,1.04l0.49,1.73l1.6,2.2l-0.31,1.28l0.48,0.29l2.97,-0.59l2.1,-1.49l0.27,0.01l0.37,0.79l0.76,-0.34l1.56,0.05l0.16,-0.71l-0.57,-0.32l1.29,-0.76l2.04,-0.46l-0.1,1.19l0.64,0.29l-0.6,0.88l0.89,1.19l-0.84,0.1l-0.19,0.66l1.38,0.46l0.26,0.94l-1.21,0.05l-0.19,0.66l0.66,0.59l1.25,-0.16l0.52,0.26l0.4,-0.38l0.18,-1.95l-0.75,-3.33l0.41,-0.48l0.56,0.43l0.94,0.06l0.28,-0.57l-0.29,-0.44l0.48,-0.57l1.71,1.84l-0.0,1.41l0.62,0.9l-0.53,0.18l-0.25,0.47l0.9,1.14l-0.08,0.37l-0.42,0.55l-0.78,0.09l-0.91,-0.86l-0.32,0.33l0.13,1.26l-1.08,1.61l0.2,0.57l-0.32,0.22l-0.15,0.98l-0.74,0.55l0.1,0.91l-0.9,0.96l-1.06,0.21l-0.59,-0.37l-0.52,0.52l-0.93,-0.81l-0.86,0.1l-0.4,-0.82l-0.59,-0.21l-0.52,0.38l0.08,0.94l-0.52,0.22l-1.42,-1.25l1.31,-0.4l0.23,-0.88l-0.57,-0.42l-2.02,0.31l-1.14,1.01l0.29,0.67l0.44,0.16l0.09,0.82l0.35,0.25l-0.03,0.12l-0.57,-0.34l-1.69,0.83l-1.12,-0.43l-1.45,0.06l-3.32,-0.7l0.42,1.08l0.97,0.45l0.36,0.64l0.63,0.11l0.87,-0.32l1.68,0.63l2.35,0.39l3.51,0.11l0.47,0.42l-0.06,0.52l-0.99,0.05l-0.38,0.5l0.13,0.23l-1.62,1.44l0.32,0.58l1.85,0.01l-2.55,3.5l-1.67,0.04l-1.59,-0.98l-0.9,-0.19l-1.21,-1.02l-1.12,0.07l0.07,0.47l1.04,1.14l2.32,2.09l2.68,0.26l1.31,0.49l1.71,-2.16l0.51,0.47l1.17,0.33l0.4,-0.57l-0.55,-0.9l0.87,0.16l0.19,0.57l0.66,0.24l1.63,-1.2l-0.18,0.61l0.29,0.57l-0.29,0.38l-0.43,-0.2l-0.41,0.37l0.03,0.9l-0.97,1.72l0.01,0.78l-0.71,-0.07l-0.06,-0.74l-1.12,-0.61l-0.42,0.47l0.27,1.45l-0.52,-1.1l-0.65,-0.16l-1.22,1.08l-0.21,0.52l0.25,0.27l-2.03,0.32l-2.75,1.84l-0.67,-1.04l-0.75,-0.29l-0.37,0.49l0.43,1.26l-0.57,-0.01l-0.09,0.82l-0.94,1.73l-0.91,0.85l-0.59,-0.26l0.49,-0.69l-0.02,-0.77l-1.06,-0.93l-0.08,-0.52l-1.69,-0.41l-0.16,0.47l0.43,1.16l0.2,0.33l0.58,0.07l0.3,0.61l-0.88,0.37l-0.08,0.71l0.65,0.64l0.77,0.18l-0.01,0.37l-2.12,1.67l-1.92,2.65l-2.0,4.31l-0.34,2.13l0.12,1.34l-0.15,-1.03l-1.01,-1.59l-0.55,-0.17l-0.3,0.48l1.17,3.95l-0.63,2.27l-3.9,0.19l-1.43,0.65l-0.35,-0.52l-0.58,-0.18l-0.54,1.07l-1.9,1.14l-0.61,-0.02l-23.25,-15.36l-1.05,-0.02l-18.68,3.49l-0.65,-2.77l-3.25,-2.84l-0.47,0.08l-1.23,1.31l-0.01,-1.29l-0.82,-0.54l-22.82,3.35l-0.64,-0.27l-0.62,0.46l-0.25,0.65l-3.98,1.93l-0.89,1.23l-1.01,0.08l-4.78,2.66l-20.95,3.93l-0.34,-4.55l0.7,-0.95ZM817.0,271.48l0.19,0.35l0.24,0.39l-0.45,-0.41l0.02,-0.32ZM807.53,290.29l0.2,0.32l-0.16,-0.09l-0.03,-0.23ZM815.31,299.15l0.16,-0.36l0.16,0.07l-0.13,0.29l-0.19,0.01ZM812.76,299.11l-0.06,-0.28l-0.03,-0.11l0.3,0.26l-0.21,0.13ZM812.97,264.02l0.37,-0.24l0.15,0.42l-0.42,0.07l-0.1,-0.25ZM791.92,329.4l0.04,-0.08l0.22,0.03l-0.0,0.09l-0.26,-0.05Z", name: "North Carolina" }, "US-ND": { path: "M438.54,42.78l2.06,6.9l-0.73,2.53l0.57,2.36l-0.27,1.17l0.47,1.99l0.01,3.26l1.42,3.95l0.45,0.54l-0.08,0.97l0.39,1.52l0.62,0.74l1.48,3.74l-0.06,3.9l0.42,0.7l0.5,8.35l0.51,1.54l0.51,0.25l-0.47,2.64l0.36,1.63l-0.14,1.75l0.69,1.1l0.2,2.16l0.49,1.13l1.8,2.56l0.15,2.2l0.51,1.08l0.17,1.39l-0.24,1.36l0.28,1.74l-27.89,0.73l-28.38,0.19l-28.38,-0.37l-28.49,-0.93l2.75,-65.47l23.08,0.78l25.57,0.42l25.57,-0.06l24.11,-0.49Z", name: "North Dakota" }, "US-NE": { path: "M422.58,174.02l3.92,2.71l3.93,1.9l1.34,-0.22l0.51,-0.47l0.36,-1.08l0.48,-0.2l2.49,0.34l1.32,-0.47l1.58,0.25l3.45,-0.65l2.37,1.98l1.4,0.14l1.55,0.77l1.45,0.08l0.88,1.1l1.49,0.17l-0.06,0.98l1.68,2.08l3.32,0.6l0.19,0.68l-0.22,1.87l1.13,1.94l0.01,2.29l1.15,1.08l0.34,1.72l1.73,1.46l0.07,1.88l1.5,2.11l-0.49,2.33l0.44,3.09l0.52,0.54l0.94,-0.2l-0.04,1.25l1.21,0.5l-0.41,2.36l0.21,0.44l1.12,0.4l-0.6,0.77l-0.09,1.01l0.13,0.59l0.82,0.5l0.16,1.45l-0.26,0.92l0.26,1.27l0.55,0.61l0.3,1.93l-0.22,1.33l0.23,0.72l-0.57,0.92l0.02,0.79l0.45,0.88l1.23,0.63l0.25,2.5l1.1,0.51l0.03,0.79l1.18,2.75l-0.23,0.96l1.16,0.21l0.8,0.99l1.1,0.24l-0.15,0.96l1.31,1.68l-0.21,1.12l0.51,0.91l-26.15,1.05l-27.83,0.63l-27.84,0.14l-27.89,-0.35l0.46,-21.66l-0.39,-0.41l-32.36,-1.04l1.85,-43.24l43.36,1.22l44.67,-0.04Z", name: "Nebraska" }, "US-LA": { path: "M508.97,412.97l-1.33,-21.76l51.44,-4.07l0.34,0.83l1.48,0.66l-0.92,1.35l-0.25,2.13l0.49,0.72l1.18,0.31l-1.21,0.47l-0.45,0.78l0.45,1.36l1.05,0.84l0.08,2.15l0.46,0.54l1.51,0.74l0.45,1.05l1.42,0.44l-0.87,1.22l-0.85,2.34l-0.75,0.04l-0.52,0.51l-0.02,0.73l0.63,0.72l-0.22,1.16l-1.35,0.96l-1.08,1.89l-1.37,0.67l-0.68,0.83l-0.79,2.42l-0.25,3.52l-1.55,1.74l0.13,1.21l0.62,0.96l-0.35,2.38l-1.61,0.29l-0.6,0.57l0.28,0.97l0.64,0.59l-0.26,1.41l0.98,1.51l-1.18,1.18l-0.08,0.45l0.4,0.23l6.18,-0.55l29.23,-2.92l-0.68,3.47l-0.52,1.02l-0.2,2.24l0.69,0.98l-0.09,0.66l0.6,1.0l1.31,0.7l1.22,1.42l0.14,0.88l0.89,1.39l0.14,1.05l1.11,1.84l-1.85,0.39l-0.38,-0.08l-0.01,-0.56l-0.53,-0.57l-1.28,0.28l-1.18,-0.59l-1.51,0.17l-0.61,-0.98l-1.24,-0.86l-2.84,-0.47l-1.24,0.63l-1.39,2.3l-1.3,1.42l-0.42,0.91l0.07,1.2l0.55,0.89l0.82,0.57l4.25,0.82l3.35,-1.0l1.32,-1.19l0.68,-1.19l0.34,0.59l1.08,0.43l0.59,-0.4l0.81,0.03l0.51,-0.46l-0.76,1.21l-1.12,-0.12l-0.57,0.32l-0.38,0.62l0.0,0.83l0.77,1.22l1.48,-0.02l0.65,0.89l1.1,0.48l0.94,-0.21l0.51,-0.45l0.46,-1.11l-0.02,-1.37l0.93,-0.58l0.42,-0.99l0.23,0.05l0.1,1.16l-0.24,0.25l0.18,0.57l0.43,0.15l-0.07,0.75l1.34,1.08l0.34,-0.16l-0.48,0.59l0.18,0.63l-0.35,0.13l-0.52,-0.57l-0.92,-0.19l-1.0,1.89l-0.85,0.14l-0.46,0.53l0.16,1.19l-1.6,-0.61l-0.43,0.19l0.04,0.46l1.14,1.06l-1.17,-0.14l-0.92,0.61l0.68,0.43l1.26,2.04l2.74,0.97l-0.08,1.2l0.34,0.41l2.07,-0.32l0.77,0.17l0.17,0.53l0.73,0.32l1.35,-0.34l0.53,0.78l1.08,-0.46l1.13,0.74l0.14,0.3l-0.4,0.62l1.54,0.86l-0.39,0.65l0.39,0.58l-0.18,0.62l-0.95,1.49l-1.3,-1.56l-0.68,0.34l0.1,0.66l-0.38,0.12l0.41,-1.88l-1.33,-0.76l-0.5,0.5l0.2,1.18l-0.54,0.45l-0.27,-1.02l-0.57,-0.25l-0.89,-1.27l0.03,-0.77l-0.96,-0.14l-0.47,0.5l-1.41,-0.17l-0.41,-0.61l0.14,-0.63l-0.39,-0.46l-0.45,-0.02l-0.81,0.73l-1.18,0.02l0.12,-1.23l-0.46,-0.88l-0.91,0.04l0.09,-0.96l-0.37,-0.36l-0.91,-0.03l-0.22,0.58l-0.85,-0.38l-0.48,0.27l-2.61,-1.26l-1.24,-0.03l-0.67,-0.64l-0.61,0.19l-0.3,0.56l-0.05,1.25l1.72,0.94l1.67,0.35l-0.16,0.92l0.28,0.39l-0.34,0.35l0.23,0.68l-0.76,0.95l-0.02,0.66l0.81,0.97l-0.95,1.43l-1.33,0.94l-0.76,-1.15l0.22,-1.5l-0.35,-0.92l-0.49,-0.18l-0.4,0.36l-1.15,-1.08l-0.59,0.42l-0.76,-1.05l-0.62,-0.2l-0.64,1.33l-0.85,0.26l-0.88,-0.53l-0.86,0.53l-0.1,0.62l0.48,0.41l-0.68,0.56l-0.13,1.44l-0.46,0.13l-0.39,0.83l-0.92,0.08l-0.11,-0.68l-1.6,-0.4l-0.77,0.97l-1.92,-0.93l-0.3,-0.54l-0.99,0.01l-0.35,0.6l-1.16,-0.51l0.42,-0.4l0.01,-1.46l-0.38,-0.57l-1.9,-1.19l-0.08,-0.54l-0.83,-0.72l-0.09,-0.91l0.73,-1.15l-0.34,-1.14l-0.87,-0.19l-0.34,0.57l0.16,0.43l-0.59,0.81l0.04,0.91l-1.8,-0.4l0.07,-0.39l-0.47,-0.54l-1.97,0.76l-0.7,-2.22l-1.32,0.23l-0.18,-2.12l-1.31,-0.35l-1.89,0.3l-1.09,0.65l-0.21,-0.71l0.84,-0.26l-0.05,-0.8l-0.6,-0.58l-1.03,-0.1l-0.85,0.42l-0.95,-0.15l-0.4,0.8l-2.0,1.11l-0.63,-0.31l-1.29,0.71l0.54,1.37l0.8,0.31l0.97,1.51l-1.39,0.19l-1.83,1.03l-3.69,-0.4l-1.24,0.21l-3.09,-0.45l-1.99,-0.68l-1.81,-1.07l-3.7,-1.1l-3.19,-0.48l-2.53,0.58l-5.62,0.45l-1.0,0.26l-1.82,1.25l-0.59,-0.63l-0.26,-1.08l1.59,-0.47l0.7,-1.76l-0.02,-1.55l-0.39,-0.56l1.11,-1.54l0.23,-1.59l-0.5,-1.83l0.07,-1.46l-0.66,-0.7l-0.21,-1.04l0.83,-2.22l-0.64,-1.95l0.76,-0.84l0.3,-1.49l0.78,-0.94l0.79,-2.83l-0.18,-1.42l0.58,-0.97l-0.75,-1.33l0.84,-0.39l0.2,-0.44l-0.89,-1.36l0.03,-2.13l-1.07,-0.23l-0.57,-1.57l-0.92,-0.84l0.28,-1.27l-0.81,-0.76l-0.33,-0.95l-0.64,-0.34l0.22,-0.98l-1.16,-0.58l-0.81,-0.93l0.16,-2.46l-0.68,-1.93l-1.33,-1.98l-2.63,-2.21ZM607.49,467.45l-0.03,-0.03l-0.07,-0.04l0.13,-0.01l-0.03,0.08ZM607.51,465.85l-0.02,-0.01l0.03,-0.01l-0.02,0.02ZM567.04,468.98l-2.0,-0.42l-0.66,-0.5l0.73,-0.43l0.35,-0.76l0.39,0.49l0.83,0.21l-0.15,0.61l0.5,0.81ZM550.39,463.0l1.73,-1.05l3.34,1.07l-0.69,0.56l-0.17,0.81l-0.68,0.17l-3.53,-1.57Z", name: "Louisiana" }, "US-SD": { path: "M336.37,128.84l0.3,-0.53l0.75,-19.93l28.5,0.93l28.4,0.37l28.4,-0.19l27.78,-0.73l-0.18,1.71l-0.73,1.71l-2.9,2.46l-0.42,1.27l1.59,2.13l1.06,2.06l0.55,0.36l1.74,0.24l1.01,0.84l0.57,1.02l1.45,38.83l-1.84,0.09l-0.42,0.56l0.24,1.44l0.88,1.14l0.01,1.45l-0.65,0.36l0.17,1.48l0.48,0.43l1.09,0.04l0.34,1.68l-0.16,0.91l-0.62,0.83l0.02,1.73l-0.68,2.45l-0.49,0.44l-0.67,1.88l0.5,1.1l1.33,1.08l-0.16,0.62l0.64,0.66l0.35,1.15l-1.65,-0.28l-0.34,-0.94l-0.85,-0.73l0.19,-0.61l-0.28,-0.59l-1.58,-0.23l-1.03,-1.18l-1.57,-0.11l-1.51,-0.75l-1.34,-0.12l-2.38,-1.99l-3.78,0.6l-1.65,-0.25l-1.19,0.46l-2.62,-0.33l-0.98,0.48l-0.76,1.45l-0.72,0.05l-3.67,-1.82l-4.13,-2.8l-44.83,0.05l-43.33,-1.22l1.79,-43.2Z", name: "South Dakota" }, "US-DC": { path: "M781.25,216.97l0.45,-0.77l2.04,1.26l-0.66,1.14l-0.55,-1.05l-1.28,-0.58Z", name: "District of Columbia" }, "US-DE": { path: "M798.52,195.11l0.42,-1.51l0.92,-1.11l1.72,-0.71l1.12,0.06l-0.33,0.56l-0.08,1.38l-1.13,1.92l0.1,1.09l1.11,1.1l-0.07,1.52l2.29,2.48l1.25,0.6l0.93,1.52l0.99,3.35l1.72,1.57l0.57,1.32l3.06,1.99l1.44,-0.09l0.45,1.25l-1.06,0.56l0.16,1.32l0.36,0.19l-0.83,0.57l-0.08,1.21l0.66,0.21l0.85,-0.73l0.71,0.34l0.3,-0.21l0.75,1.55l-10.19,2.82l-8.12,-26.12Z", name: "Delaware" }, "US-FL": { path: "M630.28,423.69l47.19,-6.86l1.53,1.91l0.87,2.72l1.47,1.0l48.79,-5.11l1.03,1.38l0.03,1.09l0.55,1.05l1.04,0.48l1.64,-0.28l0.85,-0.75l-0.14,-4.57l-0.98,-1.49l-0.22,-1.77l0.28,-0.74l0.62,-0.3l0.12,-0.7l5.6,0.96l4.03,-0.16l0.14,1.24l-0.75,-0.12l-0.33,0.43l0.25,1.54l2.11,1.81l0.22,1.01l0.42,0.38l0.29,1.92l1.87,3.29l1.7,4.87l0.73,0.84l0.51,1.5l1.64,2.46l0.64,1.57l2.79,3.71l1.93,3.18l2.29,2.77l0.16,0.6l0.63,0.36l6.82,7.53l-0.48,-0.03l-0.27,0.61l-1.35,-0.02l-0.34,-0.65l0.38,-1.38l-0.16,-0.56l-2.3,-0.92l-0.46,0.53l1.0,2.8l0.78,0.97l2.14,4.77l9.92,13.71l1.37,3.11l3.66,5.34l-1.38,-0.35l-0.43,0.74l0.8,0.65l0.85,0.24l0.56,-0.22l1.46,0.94l2.05,3.05l-0.5,0.34l-0.12,0.53l1.16,0.53l0.89,1.83l-0.08,1.06l0.59,0.95l0.61,2.64l-0.27,0.75l0.93,8.98l-0.31,1.07l0.46,0.67l0.5,3.1l-0.81,1.46l0.07,2.23l-0.84,0.74l-0.22,1.8l-0.48,0.85l0.21,1.47l-0.3,1.75l0.54,1.74l0.45,0.23l-1.15,1.8l-0.39,1.28l-0.94,0.24l-0.53,-0.22l-1.37,0.45l-0.35,1.06l-0.89,0.3l-0.18,0.58l-0.85,0.67l-1.44,0.14l-0.27,-0.32l-1.23,-0.1l-0.9,1.05l-3.17,1.13l-1.06,-0.59l-0.7,-1.04l0.06,-1.79l1.0,0.84l1.64,0.47l0.26,0.63l0.52,0.07l1.35,-0.72l0.2,-0.69l-0.26,-0.64l-1.58,-1.11l-2.4,-0.26l-0.91,-0.46l-0.85,-1.67l-0.89,-0.72l0.22,-0.98l-0.48,-0.28l-0.53,0.15l-1.38,-2.51l-0.44,-0.3l-0.64,0.07l-0.44,-0.61l0.22,-0.89l-0.7,-0.65l-1.21,-0.6l-1.06,-0.08l-0.75,-0.54l-0.57,0.18l-2.8,-0.59l-0.5,0.64l0.25,-0.91l-0.46,-0.42l-0.87,0.12l-0.26,-0.72l-0.88,-0.65l-0.61,-1.41l-0.55,-0.11l-0.72,-2.94l-0.77,-1.0l-0.16,-1.52l-0.44,-0.83l-0.71,-0.89l-0.49,-0.15l-0.12,0.93l-1.29,-0.26l1.06,-1.3l0.3,-0.75l-0.12,-0.63l0.86,-1.46l0.65,-0.34l0.28,-0.83l-0.61,-0.38l-1.42,0.93l-0.89,1.29l-0.42,2.17l-1.37,0.35l-0.21,-1.33l-0.79,-1.33l-0.27,-4.04l-0.86,-0.6l1.63,-1.33l0.22,-0.97l-0.58,-0.42l-3.06,1.92l-0.75,-0.66l-0.4,0.26l-1.27,-0.89l-0.37,0.74l1.13,1.09l0.52,0.1l1.26,2.0l-1.04,0.23l-1.42,-0.38l-0.84,-1.6l-1.13,-0.6l-1.94,-2.55l-1.04,-2.28l-1.28,-0.87l0.1,-0.87l-0.97,-1.8l-1.77,-0.98l0.09,-0.67l0.99,-0.41l-0.35,-0.49l0.44,-0.73l-0.39,-0.35l0.4,-1.21l2.47,-4.47l-1.05,-2.41l-0.68,-0.46l-0.92,0.42l-0.28,0.93l0.29,1.2l-0.24,0.03l-0.73,-2.44l-0.99,-0.28l-1.19,-0.87l-1.52,-0.31l0.29,1.95l-0.48,0.61l0.27,0.59l2.21,0.56l0.25,0.97l-0.37,2.46l-0.31,-0.58l-0.8,-0.22l-2.13,-1.53l-0.41,0.2l-0.29,-0.63l0.59,-2.11l0.07,-2.97l-0.66,-1.97l0.42,-0.51l0.48,-1.91l-0.24,-0.54l0.66,-3.04l-0.35,-5.26l-0.71,-1.7l0.35,-0.47l-0.47,-2.18l-2.1,-1.33l-0.05,-0.52l-0.55,-0.43l-0.1,-1.01l-0.92,-0.73l-0.55,-1.51l-0.64,-0.25l-1.44,0.32l-1.03,-0.2l-1.57,0.54l-1.14,-1.74l-1.51,-0.48l-0.19,-0.6l-1.35,-1.51l-0.87,-0.59l-0.62,0.07l-1.52,-1.16l-0.8,-0.21l-0.51,-2.75l-3.06,-1.13l-0.65,-0.59l-0.52,-1.23l-2.15,-1.93l-2.19,-1.09l-1.45,-0.12l-3.44,-1.68l-2.85,0.98l-1.0,-0.4l-1.05,0.42l-0.35,0.68l-1.33,0.68l-0.5,0.7l0.03,0.64l-0.73,-0.22l-0.59,0.6l0.67,0.94l1.51,0.08l0.41,0.21l-3.03,0.23l-1.58,1.51l-0.91,0.45l-1.3,1.56l-1.56,1.03l-0.32,0.13l0.2,-0.48l-0.26,-0.54l-0.66,-0.04l-0.96,0.75l-1.12,1.5l-2.2,0.23l-2.11,1.06l-0.78,0.03l-0.27,-2.03l-1.71,-2.23l-2.21,-1.0l-0.18,-0.41l-2.51,-1.5l2.79,1.33l1.21,-0.74l0.0,-0.74l-1.32,-0.34l-0.36,0.55l-0.21,-1.01l-0.34,-0.1l0.13,-0.52l-0.49,-0.33l-1.39,0.61l-2.3,-0.76l0.65,-1.08l0.83,-0.1l1.03,-1.45l-0.91,-0.95l-0.46,0.12l-0.49,1.02l-0.44,-0.04l-0.81,0.56l-0.72,-0.9l-0.7,0.09l-0.17,0.38l-1.34,0.73l-0.14,0.68l0.29,0.46l-3.95,-1.35l-5.05,-0.71l0.12,-0.24l1.27,0.29l0.61,-0.53l2.1,0.39l0.23,-0.78l-0.94,-1.02l0.09,-0.7l-0.63,-0.28l-0.5,0.32l-0.28,-0.47l-1.9,0.19l-2.25,1.1l0.3,-0.63l-0.41,-0.58l-0.96,0.35l-0.58,-0.25l-0.23,0.44l0.2,0.71l-1.45,0.8l-0.4,0.63l-5.18,0.97l0.32,-0.52l-0.4,-0.52l-1.35,-0.28l-0.72,-0.53l0.69,-0.53l0.01,-0.78l-0.68,-0.13l-0.81,-0.66l-0.46,0.11l0.14,0.76l-0.42,1.77l-1.05,-1.39l-0.69,-0.45l-0.55,0.07l-0.3,0.71l0.82,1.77l-0.25,0.79l-1.39,0.99l-0.05,1.04l-0.6,0.22l-0.17,0.57l-1.48,0.56l0.28,-0.65l-0.21,-0.46l1.14,-1.03l0.07,-0.74l-0.4,-0.58l-1.19,-0.24l-0.41,-0.84l0.3,-1.7l-0.18,-1.61l-2.17,-1.12l-2.39,-2.46l0.32,-1.44l-0.15,-1.04ZM767.29,490.44l0.48,1.07l0.9,0.39l0.78,-0.15l1.41,1.67l0.91,0.58l1.86,0.69l1.61,0.07l0.55,-0.44l-0.08,-0.87l0.55,-0.65l-0.16,-1.21l0.76,-1.36l0.09,-1.81l-0.64,-1.62l-1.46,-2.01l-1.74,-1.32l-1.19,-0.13l-1.12,0.83l-1.83,3.16l-2.12,1.94l-0.13,0.77l0.57,0.41ZM644.36,434.13l-0.94,0.26l0.41,-0.44l0.53,0.18ZM665.13,435.7l0.98,-0.28l0.35,0.32l0.09,0.72l-1.42,-0.75ZM770.56,455.01l0.42,0.56l-0.43,0.75l0.0,-1.31ZM788.88,525.23l0.01,-0.07l0.01,0.03l-0.03,0.04ZM789.47,522.87l-0.22,-0.23l0.49,-0.32l-0.27,0.55ZM768.83,453.61l0.21,0.76l-0.31,2.33l0.28,1.79l-1.38,-3.23l1.19,-1.65ZM679.81,445.61l0.22,-0.2l0.36,0.02l-0.11,0.42l-0.47,-0.25Z", name: "Florida" }, "US-WA": { path: "M38.52,55.26l0.46,-1.32l0.18,0.45l0.65,0.3l1.04,-0.74l0.43,0.59l0.7,-0.03l0.17,-0.77l-0.92,-1.56l0.79,-0.74l-0.09,-1.36l0.49,-0.39l-0.1,-1.03l0.81,-0.27l0.05,0.5l0.48,0.41l0.95,-0.31l-0.09,-0.68l-1.35,-1.65l-0.9,0.15l-1.88,-0.56l0.17,-1.98l0.66,0.53l0.52,-0.07l0.29,-0.56l-0.16,-0.67l3.3,-0.52l0.26,-0.69l-1.7,-0.96l-0.86,-0.14l-0.37,-1.51l-0.7,-0.42l-0.81,-0.02l0.32,-4.73l-0.49,-1.28l0.1,-0.69l-0.4,-0.34l0.76,-5.74l-0.13,-2.46l-0.45,-0.62l-0.16,-1.36l-0.65,-1.33l-0.73,-0.57l-0.32,-2.45l0.35,-2.27l-0.15,-1.11l1.74,-3.3l-0.52,-1.23l4.59,3.9l1.19,0.38l0.92,0.75l0.81,1.3l1.86,1.08l3.24,0.91l0.84,0.77l1.42,0.11l1.73,1.02l2.33,0.73l1.46,-0.47l0.52,0.29l0.55,0.69l-0.03,1.09l0.55,0.74l0.31,0.11l0.49,-0.35l0.07,-0.75l0.45,0.03l0.63,1.39l-0.4,0.58l0.34,0.49l0.56,-0.04l0.72,-0.84l-0.38,-1.7l1.03,-0.24l-0.44,0.23l-0.21,0.69l1.27,4.41l-0.46,0.1l-1.67,1.73l0.22,-1.29l-0.22,-0.41l-1.31,0.31l-0.38,0.81l0.09,0.95l-1.37,1.7l-1.98,1.38l-1.06,1.41l-0.96,0.69l-1.1,1.67l-0.06,0.71l0.62,0.6l0.96,0.12l2.77,-0.48l1.22,-0.58l-0.03,-0.7l-0.64,-0.23l-2.94,0.79l-0.35,-0.3l3.23,-3.42l3.06,-0.88l0.89,-1.51l1.73,-1.54l0.53,0.57l0.54,-0.19l0.22,-1.81l-0.06,2.25l0.26,0.91l-0.99,-0.21l-0.64,0.77l-0.41,-0.73l-0.52,-0.19l-0.39,0.64l0.3,0.71l0.02,1.63l-0.21,-1.07l-0.67,-0.21l-0.47,0.69l-0.07,0.75l0.46,0.66l-0.63,0.58l-0.0,0.45l0.42,0.17l1.68,-0.57l0.25,1.09l-1.08,1.79l-0.08,1.05l-0.83,0.7l0.13,1.0l-0.85,-0.68l1.12,-1.44l-0.23,-0.96l-1.96,1.08l-0.38,0.64l-0.05,-2.11l-0.52,0.02l-1.03,1.59l-1.26,0.53l-1.14,1.87l-1.51,0.3l-0.46,0.43l-0.21,1.18l1.11,-0.03l-0.25,0.36l0.27,0.37l0.93,0.02l0.06,0.68l0.53,0.47l0.52,-0.27l0.35,-1.76l0.14,0.42l0.83,-0.15l1.11,1.48l1.31,-0.61l1.65,-1.48l0.98,-1.56l0.63,0.78l0.73,0.14l0.44,-0.23l-0.06,-0.86l1.56,-0.55l0.35,-0.94l-0.33,-1.27l0.22,-1.19l-0.18,-1.36l0.83,0.2l0.3,-0.92l-0.19,-0.75l-0.72,-0.63l0.89,-1.13l0.07,-1.75l1.24,-1.24l0.61,-1.37l1.61,-0.49l0.78,-1.16l-0.45,-0.66l-0.51,-0.02l-0.86,-1.3l0.16,-2.09l-0.26,-0.87l0.49,-0.79l0.06,-0.84l-1.15,-1.73l-0.63,-0.4l-0.17,-0.64l0.18,-0.5l0.59,0.23l0.53,-0.33l0.24,-1.8l0.79,-0.24l0.3,-1.0l-0.61,-2.32l0.44,-0.53l-0.03,-0.86l-0.96,-0.88l-0.95,0.3l-1.09,-2.66l0.93,-1.83l41.31,9.4l38.96,7.65l-9.66,54.39l-0.47,1.02l1.04,3.0l0.13,2.0l-1.0,1.3l0.73,1.88l-31.18,-5.92l-1.67,0.79l-7.24,-1.02l-1.68,0.92l-4.19,-0.12l-3.18,0.45l-1.64,0.75l-0.88,-0.26l-1.2,0.3l-1.51,-0.23l-2.43,-0.94l-0.91,0.46l-3.45,0.51l-2.11,-0.71l-1.65,0.3l-0.31,-1.36l-1.09,-0.88l-4.34,-1.46l-2.32,-0.11l-1.15,-0.51l-1.27,0.21l-1.89,0.86l-4.5,0.58l-1.11,-0.71l-1.15,-0.3l-1.61,-1.15l-1.84,-0.51l-0.63,-0.81l0.64,-6.82l-0.47,-0.95l-0.22,-1.9l-0.98,-1.35l-1.96,-1.67l-2.82,-0.11l-1.03,-1.31l-0.15,-1.05l-0.56,-0.63l-2.36,-0.31l-0.56,-0.3l-0.24,-0.79l-0.5,-0.18l-0.97,0.35l-0.84,-0.26l-1.1,0.4l-0.97,-1.47l-0.89,-0.22ZM61.85,39.78l0.16,0.74l-0.42,0.49l0.0,-0.91l0.26,-0.31ZM71.27,20.38l-0.61,0.87l-0.15,0.52l0.11,-1.01l0.65,-0.38ZM71.14,15.62l-0.09,-0.05l0.05,-0.04l0.04,0.1ZM70.37,15.48l-0.77,0.39l0.37,-0.68l-0.07,-0.6l0.22,-0.07l0.25,0.97ZM57.56,42.45l0.05,-0.02l-0.01,0.01l-0.04,0.02ZM67.75,19.23l1.73,-2.1l0.47,-0.02l0.53,1.71l-0.35,-0.55l-0.51,-0.12l-0.55,0.44l-0.35,-0.09l-0.35,0.73l-0.63,-0.01ZM67.87,20.4l0.44,0.0l0.61,0.5l0.08,0.35l-0.79,-0.2l-0.33,-0.65ZM68.84,23.16l-0.1,0.51l-0.0,0.0l-0.02,-0.24l0.12,-0.28ZM69.15,25.42l0.08,0.04l0.12,-0.04l-0.16,0.11l-0.05,-0.1ZM69.52,25.33l0.48,-0.93l1.02,1.21l0.11,1.12l-0.34,0.36l-0.34,-0.09l-0.27,-1.55l-0.67,-0.12ZM66.34,9.97l0.48,-0.34l0.18,1.51l-0.22,-0.05l-0.44,-1.12ZM68.04,9.66l0.83,0.8l-0.65,0.31l-0.18,-1.11ZM66.69,38.03l0.34,-1.07l0.21,-0.25l-0.03,1.07l-0.52,0.26ZM66.99,33.31l0.1,-1.04l0.35,-0.34l-0.23,1.56l-0.22,-0.18ZM66.51,14.27l-0.41,-0.4l0.6,-0.75l-0.18,0.61l-0.01,0.55ZM66.68,14.62l0.4,0.2l-0.08,0.12l-0.29,-0.12l-0.03,-0.2ZM66.74,12.96l-0.01,-0.1l0.05,-0.12l-0.04,0.23ZM64.36,13.12l-1.06,-0.82l0.19,-1.81l1.33,1.92l-0.35,0.18l-0.11,0.54ZM62.18,42.55l0.23,-0.25l0.02,0.01l-0.13,0.31l-0.12,-0.07ZM60.04,40.3l-0.09,-0.19l0.04,-0.07l0.0,0.13l0.05,0.14Z", name: "Washington" }, "US-KS": { path: "M477.9,239.67l0.44,0.63l0.76,0.18l1.04,0.8l2.19,-1.08l-0.0,0.75l1.08,0.79l0.23,1.44l-0.95,-0.15l-0.6,0.31l-0.17,0.97l-1.14,1.37l-0.06,1.14l-0.79,0.5l0.04,0.64l1.56,2.1l2.0,1.49l0.2,1.13l0.42,0.86l0.74,0.56l0.32,1.11l1.89,0.91l1.54,0.26l2.67,46.82l-31.55,1.48l-31.97,0.88l-31.98,0.26l-32.05,-0.37l1.21,-65.47l27.9,0.35l27.86,-0.14l27.85,-0.64l27.68,-1.12l1.65,1.23Z", name: "Kansas" }, "US-WI": { path: "M598.7,107.43l0.83,-0.15l-0.13,0.81l-0.56,0.01l-0.14,-0.68ZM594.22,116.05l0.47,-0.41l0.26,-2.36l0.95,-0.25l0.64,-0.69l0.22,-1.4l0.41,-0.63l0.63,-0.03l0.06,0.38l-0.76,0.06l-0.18,0.51l0.17,1.27l-0.38,0.17l-0.11,0.58l0.56,0.57l-0.24,0.65l-0.5,0.33l-0.69,1.91l0.07,1.23l-1.05,2.28l-0.41,0.15l-0.86,-0.97l-0.19,-0.72l0.31,-1.57l0.62,-1.05ZM510.06,124.08l0.41,-0.27l0.28,-0.9l-0.45,-1.48l0.04,-1.91l0.7,-1.16l0.53,-2.25l-1.61,-2.91l-0.83,-0.36l-1.28,-0.01l-0.21,-2.31l1.67,-2.26l-0.05,-0.77l0.77,-1.55l1.95,-1.09l0.48,-0.75l0.97,-0.25l0.45,-0.75l1.16,-0.14l1.04,-1.56l-0.97,-12.11l1.03,-0.35l0.22,-1.1l0.73,-0.97l0.78,0.69l1.68,0.64l2.61,-0.56l3.28,-1.57l2.65,-0.82l2.21,-2.12l0.31,0.29l1.39,-0.11l1.25,-1.48l0.79,-0.58l1.04,-0.1l0.4,-0.52l1.07,0.99l-0.48,1.68l-0.67,1.01l0.23,1.61l-1.21,2.21l0.64,0.66l2.5,-1.09l0.72,-0.86l2.16,1.22l2.34,0.47l0.44,0.54l0.86,-0.13l1.6,0.7l2.23,3.54l15.48,2.52l4.65,1.96l1.68,-0.17l1.63,0.42l1.33,-0.59l3.17,0.71l2.18,0.09l0.85,0.41l0.56,0.89l-0.42,1.09l0.41,0.77l3.4,0.63l1.41,1.13l-0.16,0.71l0.59,1.11l-0.36,0.81l0.43,1.25l-0.78,1.25l-0.03,1.76l0.91,0.63l1.38,-0.26l1.02,-0.72l0.2,0.26l-0.79,2.44l0.04,1.31l1.32,1.46l0.84,0.35l-0.24,2.02l-2.42,1.2l-0.51,0.79l0.04,1.26l-1.61,3.49l-0.4,3.5l1.11,0.82l0.92,-0.04l0.5,-0.36l0.49,-1.37l1.82,-1.47l0.66,-2.53l1.06,-1.7l0.14,0.25l0.45,-0.07l0.57,-0.7l0.88,-0.4l1.12,1.12l0.59,0.19l-0.29,2.21l-1.18,2.82l-0.56,5.58l0.23,1.11l0.8,0.93l0.07,0.52l-0.51,0.98l-1.3,1.34l-0.86,3.89l0.15,2.57l0.72,1.2l0.06,1.24l-1.07,3.22l0.12,2.12l-0.73,2.11l-0.28,2.47l0.59,2.02l-0.04,1.32l0.49,0.54l-0.21,1.7l0.92,0.78l0.54,2.43l1.2,1.54l0.08,1.69l-0.33,1.45l0.47,2.95l-44.2,4.6l-0.19,-0.79l-1.56,-2.19l-4.94,-0.84l-1.06,-1.35l-0.36,-1.69l-0.9,-1.21l-0.86,-4.9l1.04,-2.62l-0.09,-0.99l-0.71,-0.79l-1.44,-0.48l-0.71,-1.76l-0.47,-6.02l-0.7,-1.4l-0.52,-2.56l-1.15,-0.6l-1.1,-1.56l-0.93,-0.11l-1.17,-0.75l-1.71,0.09l-2.67,-1.79l-2.3,-3.5l-2.64,-2.1l-2.94,-0.53l-0.73,-1.24l-1.12,-1.0l-3.12,-0.45l-3.53,-2.74l0.45,-1.24l-0.12,-1.61l0.25,-0.81l-0.88,-3.11ZM541.58,78.25l0.05,-0.28l0.03,0.16l-0.08,0.12ZM537.91,83.72l0.28,-0.21l0.05,0.08l-0.33,0.12Z", name: "Wisconsin" }, "US-OR": { path: "M10.69,140.12l0.01,-1.77l0.5,-0.84l0.32,-1.95l1.12,-1.91l0.24,-1.9l-0.72,-2.57l-0.33,-0.15l-0.12,-1.81l3.04,-3.82l2.5,-5.98l0.01,0.77l0.52,0.52l0.49,-0.28l0.6,-1.6l0.47,-0.48l0.31,0.98l1.12,0.41l0.33,-0.54l-0.45,-1.76l0.27,-0.87l-0.45,-0.14l-0.79,0.32l1.74,-3.16l1.13,-0.96l0.89,0.3l0.49,-0.29l-0.47,-1.08l-0.81,-0.4l1.77,-4.63l0.47,-0.57l0.02,-0.99l1.08,-2.67l0.62,-2.6l1.04,-1.92l0.33,0.28l0.66,-0.33l-0.04,-0.6l-0.76,-0.62l1.06,-2.6l0.32,0.22l0.59,-0.19l0.13,-0.35l-0.04,-0.51l-0.57,-0.32l0.85,-3.84l1.23,-1.8l0.83,-3.04l1.14,-1.76l0.83,-2.45l0.26,-1.21l-0.18,-0.5l1.19,-1.08l-0.32,-1.64l0.96,0.57l0.78,-0.63l-0.39,-0.75l0.2,-0.65l-0.77,-0.77l0.51,-1.07l1.3,-0.86l0.06,-0.46l-0.93,-0.34l-0.33,-1.25l0.97,-2.14l-0.04,-1.48l0.86,-0.53l0.58,-1.33l0.18,-1.96l-0.21,-1.45l0.83,1.17l0.6,0.18l-0.11,0.89l0.55,0.53l0.83,-0.96l-0.27,-0.99l0.21,-0.07l0.24,0.56l0.69,0.32l1.51,0.04l0.37,-0.36l1.37,-0.19l0.99,2.08l2.43,0.92l1.25,-0.64l0.78,0.04l1.72,1.51l0.77,1.04l0.21,1.9l0.43,0.78l-0.03,2.05l-0.39,1.24l0.19,0.93l-0.43,1.74l0.26,1.45l0.79,0.85l1.94,0.56l1.44,1.05l1.36,0.41l1.04,0.69l4.98,-0.53l2.9,-1.06l1.14,0.51l2.23,0.09l4.24,1.43l0.69,0.54l0.19,1.15l0.57,0.58l1.86,-0.27l2.11,0.71l3.79,-0.55l0.69,-0.42l2.19,0.93l1.64,0.24l1.2,-0.3l0.88,0.26l1.89,-0.78l3.07,-0.43l4.16,0.13l1.61,-0.91l7.17,1.02l0.96,-0.19l0.79,-0.58l31.27,5.93l0.23,1.81l0.93,1.82l1.16,0.63l1.96,1.86l0.57,2.45l-0.16,1.0l-3.69,4.55l-0.4,1.41l-1.39,2.63l-2.21,2.42l-0.65,2.68l-1.49,1.84l-2.23,1.5l-1.92,3.35l-1.49,1.27l-0.62,2.02l-0.12,1.87l0.28,0.92l0.56,0.61l0.54,0.04l0.39,-0.35l0.63,0.76l0.89,-0.05l0.07,0.88l0.81,0.95l-0.46,1.0l-0.65,0.06l-0.33,0.4l0.21,1.8l-1.03,2.56l-1.22,1.41l-6.86,39.16l-26.21,-4.99l-28.9,-6.05l-28.8,-6.61l-28.95,-7.24l-1.48,-2.59l0.2,-2.36l-0.23,-0.89Z", name: "Oregon" }, "US-KY": { path: "M583.02,306.59l0.35,-2.18l1.13,0.96l0.72,0.2l0.75,-0.36l0.46,-0.88l0.87,-3.55l-0.54,-1.75l0.38,-0.86l-0.1,-1.88l-1.27,-2.04l1.79,-3.21l1.24,-0.51l0.73,0.06l7.03,2.56l0.81,-0.2l0.65,-0.72l0.24,-1.93l-1.49,-2.14l-0.24,-1.44l0.2,-0.87l0.4,-0.52l1.1,-0.18l1.24,-0.83l3.0,-0.95l0.64,-0.51l0.15,-1.13l-1.53,-2.05l-0.08,-0.68l1.33,-1.97l0.14,-1.16l1.25,0.42l1.12,-1.33l-0.68,-2.0l1.92,0.9l1.72,-0.84l0.03,1.18l1.0,0.46l0.99,-0.94l0.02,-1.36l0.51,0.16l1.9,-0.96l4.41,1.52l0.64,0.94l0.86,0.18l0.59,-0.59l0.73,-2.53l1.38,-0.55l1.39,-1.34l0.86,1.29l0.77,0.42l1.16,-0.13l0.11,0.75l0.95,0.19l0.67,-0.62l0.03,-1.01l0.84,-0.38l0.26,-0.48l-0.25,-2.09l0.84,-0.4l0.34,-0.56l-0.06,-0.69l1.25,-0.56l0.34,-0.72l0.38,1.47l0.61,0.6l1.46,0.64l1.25,-0.0l1.11,0.81l0.53,-0.11l0.26,-0.55l1.1,-0.46l0.53,-0.69l0.04,-3.48l0.85,-2.18l1.02,0.18l1.55,-1.19l0.75,-3.46l1.04,-0.37l1.65,-2.23l0.0,-0.81l-1.18,-2.88l2.78,-0.59l1.54,0.81l3.85,-2.82l2.23,-0.46l-0.18,-1.07l0.36,-1.47l-0.32,-0.36l-1.22,-0.04l0.58,-1.39l-1.09,-1.54l1.65,-1.83l1.81,1.18l0.92,-0.11l1.93,-1.01l0.78,0.88l1.76,0.54l0.57,1.28l0.94,0.92l0.79,1.84l2.6,0.67l1.87,-0.57l1.63,0.27l2.18,1.85l0.96,0.43l1.28,-0.18l0.61,-1.31l0.99,-0.54l1.35,0.5l1.34,0.04l1.33,1.09l1.26,-0.69l1.41,-0.15l1.81,-2.55l1.72,-1.03l0.92,2.35l0.7,0.83l2.45,0.81l1.35,0.97l0.75,1.05l0.93,3.35l-0.37,0.45l0.09,0.72l-0.44,0.61l0.02,0.53l2.24,2.62l1.35,0.92l-0.08,0.89l1.34,0.97l0.58,1.36l1.55,1.2l0.98,1.62l2.14,0.84l1.09,1.12l2.14,0.25l-4.86,6.13l-5.06,4.16l-0.42,0.86l0.22,1.25l-2.07,1.93l0.04,1.64l-3.06,1.63l-0.8,2.38l-1.71,0.6l-2.7,1.83l-1.66,0.48l-3.39,2.42l-23.95,3.09l-8.8,1.42l-7.47,0.86l-7.68,0.46l-22.71,3.52l-0.64,-0.56l-3.63,0.09l-0.41,0.6l1.03,3.57l-23.0,2.73ZM580.9,306.78l-0.59,0.08l-0.06,-0.55l0.47,-0.01l0.18,0.49Z", name: "Kentucky" }, "US-CO": { path: "M364.18,239.57l-1.22,65.87l-29.29,-0.9l-29.38,-1.43l-29.35,-1.95l-32.17,-2.75l8.33,-87.15l27.79,2.4l28.23,1.92l29.58,1.46l27.95,0.87l-0.46,21.66Z", name: "Colorado" }, "US-OH": { path: "M664.99,178.81l1.67,0.47l1.04,-0.3l1.74,1.07l2.07,0.26l1.47,1.18l1.71,0.23l-2.19,1.18l-0.12,0.47l0.42,0.24l2.46,0.19l1.39,-1.1l1.77,-0.25l3.39,0.96l0.92,-0.08l1.48,-1.29l1.74,-0.6l1.15,-0.96l1.91,-0.97l2.62,-0.03l1.09,-0.62l1.24,-0.06l1.07,-0.8l4.24,-5.46l4.53,-3.47l6.92,-4.36l5.83,28.05l-0.51,0.54l-1.28,0.43l-0.41,0.95l1.65,2.24l0.02,2.11l0.41,0.26l0.31,0.94l-0.04,0.76l-0.54,0.83l-0.5,4.08l0.18,3.21l-0.58,0.41l0.34,1.11l-0.35,1.74l-0.39,0.54l0.76,1.23l-0.25,1.87l-2.41,2.65l-0.82,1.86l-1.37,1.5l-1.24,0.67l-0.6,0.7l-0.87,-0.92l-1.18,0.14l-1.32,1.74l-0.09,1.32l-1.78,0.85l-0.78,2.25l0.28,1.58l-0.94,0.85l0.3,0.67l0.63,0.41l0.27,1.3l-0.8,0.17l-0.5,1.6l0.06,-0.93l-0.91,-1.26l-1.53,-0.55l-1.07,0.71l-0.82,1.98l-0.34,2.69l-0.53,0.82l1.22,3.58l-1.27,0.39l-0.28,0.42l-0.25,3.12l-2.66,1.2l-1.0,0.05l-0.76,-1.06l-1.51,-1.1l-2.34,-0.73l-1.17,-1.92l-0.31,-1.14l-0.42,-0.33l-0.73,0.13l-1.84,1.17l-1.1,1.29l-0.4,1.05l-1.43,0.15l-0.87,0.61l-1.11,-1.0l-3.14,-0.59l-1.37,0.72l-0.53,1.25l-0.71,0.05l-3.04,-2.26l-1.93,-0.29l-1.77,0.56l-2.14,-0.52l-0.55,-1.54l-0.96,-0.97l-0.63,-1.38l-2.03,-0.76l-1.14,-1.01l-0.97,0.26l-1.31,0.89l-0.46,0.03l-1.79,-1.23l-0.61,0.2l-0.6,0.71l-8.53,-55.69l20.43,-4.26ZM675.61,181.34l0.53,-0.79l0.67,0.41l-0.48,0.35l-0.72,0.03ZM677.31,180.77l0.01,-0.0l0.01,-0.0l-0.02,0.0Z", name: "Ohio" }, "US-OK": { path: "M399.06,359.31l-0.05,-42.03l-0.39,-0.4l-26.69,-0.22l-25.13,-0.6l0.31,-10.23l36.7,0.74l36.0,-0.07l35.99,-0.86l35.56,-1.62l0.6,10.68l4.55,24.34l1.41,37.88l-1.2,-0.22l-0.29,-0.36l-2.13,-0.21l-0.82,-0.79l-2.11,-0.39l-1.77,-2.05l-1.23,-0.22l-2.25,-1.57l-1.5,-0.4l-0.8,0.46l-0.23,0.88l-0.82,0.24l-0.46,0.62l-2.47,-0.14l-0.47,-0.19l-0.27,-0.68l-1.05,-0.61l-2.3,1.29l-1.17,0.2l-0.19,0.56l-0.63,0.28l-2.12,-0.77l-1.7,1.18l-1.17,0.08l-0.89,0.42l-0.83,1.37l-1.48,0.06l-0.57,1.25l-1.26,-1.55l-1.7,-0.1l-0.32,-0.58l-1.21,-0.46l-0.02,-0.96l-0.44,-0.5l-1.24,-0.18l-0.73,1.38l-0.66,0.11l-0.84,-0.5l-0.97,0.07l-0.71,-1.51l-1.09,-0.35l-1.17,0.57l-0.45,1.7l-0.7,-0.08l-0.49,0.43l0.29,0.73l-0.51,1.68l-0.43,0.19l-0.55,-0.55l-0.3,-0.91l0.39,-1.65l-0.75,-0.86l-0.8,0.18l-0.49,0.76l-0.84,-0.18l-0.92,0.98l-1.07,0.13l-0.53,-1.36l-1.99,-0.19l-0.3,-1.48l-1.19,-0.53l-0.82,0.33l-2.12,2.15l-1.21,0.51l-0.97,-0.38l0.19,-1.25l-0.28,-1.13l-2.33,-0.68l-0.07,-2.18l-0.43,-0.55l-2.11,0.39l-2.52,-0.25l-0.64,0.26l-0.81,1.21l-0.95,0.06l-1.77,-1.77l-0.97,-0.12l-1.5,0.56l-2.68,-0.63l-1.86,-1.0l-1.05,0.25l-2.46,-0.3l-0.17,-2.12l-0.85,-0.87l-0.44,-1.02l-1.16,-0.41l-0.7,-0.83l-0.83,0.08l-0.44,1.64l-2.22,-0.68l-1.07,0.6l-0.96,-0.09l-3.79,-3.78l-1.12,-0.43l-0.8,0.08Z", name: "Oklahoma" }, "US-WV": { path: "M693.03,248.42l3.95,-1.54l0.35,-0.71l0.12,-2.77l1.15,-0.22l0.4,-0.61l-0.57,-2.49l-0.61,-1.24l0.49,-0.64l0.36,-2.77l0.68,-1.66l0.45,-0.39l1.24,0.55l0.41,0.71l-0.14,1.13l0.71,0.46l0.78,-0.44l0.48,-1.42l0.49,0.21l0.57,-0.2l0.2,-0.44l-0.63,-2.09l-0.75,-0.55l0.81,-0.79l-0.26,-1.71l0.74,-2.0l1.65,-0.51l0.17,-1.6l1.02,-1.42l0.43,-0.08l0.65,0.79l0.67,0.19l2.28,-1.59l1.5,-1.64l0.79,-1.83l2.45,-2.67l0.37,-2.41l-0.73,-1.0l0.71,-2.33l-0.25,-0.76l0.59,-0.58l-0.27,-3.43l0.47,-3.93l0.53,-0.8l0.08,-1.11l-0.38,-1.21l-0.39,-0.33l-0.04,-2.01l-1.57,-1.91l0.44,-0.54l0.85,-0.1l0.3,-0.33l4.03,19.34l0.47,0.31l16.6,-3.55l2.17,10.68l0.5,0.37l2.06,-2.5l0.97,-0.56l0.34,-1.03l1.63,-1.99l0.25,-1.05l0.52,-0.4l1.19,0.45l0.74,-0.32l1.32,-2.6l0.6,-0.46l-0.04,-0.85l0.42,0.59l1.81,0.52l3.2,-0.57l0.78,-0.86l0.07,-1.46l2.0,-0.74l1.02,-1.69l0.67,-0.1l3.16,1.5l1.81,-0.71l-0.45,1.02l0.56,0.92l1.27,0.42l0.09,0.96l1.13,0.43l0.09,1.2l0.33,0.42l-0.58,3.64l-9.0,-4.48l-0.64,0.24l-0.31,1.14l0.38,1.61l-0.52,1.62l0.41,2.28l-1.36,2.4l-0.42,1.76l-0.72,0.53l-0.42,1.11l-0.27,0.21l-0.61,-0.23l-0.37,0.33l-1.25,3.28l-1.84,-0.78l-0.64,0.25l-0.94,2.77l0.08,1.47l-0.73,1.14l-0.19,2.33l-0.89,2.2l-3.25,-0.36l-1.44,-1.76l-1.71,-0.24l-0.5,0.41l-0.26,2.17l0.19,1.3l-0.32,1.45l-0.49,0.45l-0.31,1.04l0.23,0.92l-1.58,2.44l-0.04,2.1l-0.52,2.0l-2.58,4.73l-0.75,3.16l0.14,0.76l1.14,0.55l-1.08,1.38l0.06,0.6l0.45,0.4l-2.16,2.13l-0.55,-0.7l-0.84,0.15l-3.12,2.53l-1.03,-0.56l-1.32,0.26l-0.44,0.91l0.45,1.17l-0.91,0.91l-0.73,-0.05l-2.27,1.0l-1.21,0.96l-2.18,-1.36l-0.73,-0.01l-0.82,1.58l-1.1,0.49l-1.22,1.46l-1.08,0.08l-1.98,-1.09l-1.31,-0.01l-0.61,-0.74l-1.19,-0.6l-0.31,-1.33l-0.89,-0.55l0.36,-0.67l-0.3,-0.81l-0.85,-0.37l-0.84,0.25l-1.33,-0.17l-1.26,-1.19l-2.06,-0.79l-0.76,-1.43l-1.58,-1.24l-0.7,-1.49l-1.0,-0.6l-0.12,-1.09l-1.38,-0.95l-2.0,-2.27l0.71,-2.03l-0.25,-1.62l-0.66,-1.46Z", name: "West Virginia" }, "US-WY": { path: "M218.53,207.02l10.1,-86.6l25.46,2.74l26.8,2.4l26.83,1.91l27.85,1.46l-3.67,87.11l-27.32,-1.41l-28.21,-1.97l-29.69,-2.63l-28.14,-3.02Z", name: "Wyoming" }, "US-UT": { path: "M178.67,180.38l41.53,5.44l-2.51,21.5l0.35,0.45l32.24,3.43l-8.33,87.15l-42.54,-4.67l-42.41,-5.77l16.08,-108.34l5.58,0.82ZM187.74,191.46l-0.3,0.04l-0.25,0.62l0.74,3.68l-0.81,0.19l-0.5,1.31l1.15,0.59l0.35,-0.84l0.37,-0.18l0.92,1.14l0.83,1.68l-0.25,1.0l0.16,1.45l-0.4,0.77l0.4,0.52l-0.05,0.56l1.58,1.84l0.02,0.59l1.13,1.92l0.71,-0.1l0.83,-1.74l0.08,2.28l0.53,0.94l0.06,1.8l0.99,0.47l1.65,-0.67l2.48,-1.77l0.37,-1.25l3.32,-1.44l0.17,-0.54l-0.52,-1.02l-0.68,-0.84l-1.36,-0.7l-1.87,-4.59l-0.87,-0.46l0.87,-0.92l1.3,0.6l1.33,-0.15l0.92,-0.83l-0.06,-1.12l-1.55,-0.5l-0.81,0.42l-1.17,-0.12l0.27,-0.76l-0.58,-0.79l-1.86,-0.22l-0.56,1.13l0.28,0.78l-0.35,0.69l0.55,2.44l-0.91,0.32l-0.34,-0.42l0.22,-1.8l-0.42,-0.69l-0.06,-1.74l-0.68,-0.6l-1.32,-0.11l-1.07,-1.55l-0.19,-0.69l0.64,-0.55l0.36,-1.29l-0.83,-1.38l-1.23,-0.28l-0.99,0.81l-2.73,0.2l-0.35,0.63l0.62,0.83l-0.28,0.43ZM199.13,204.0l0.03,0.02l0.04,0.11l-0.07,-0.13ZM199.17,204.81l0.31,0.91l-0.18,0.9l-0.39,-0.93l0.25,-0.88Z", name: "Utah" }, "US-IN": { path: "M600.86,189.63l1.43,0.87l2.1,0.14l1.52,-0.38l2.63,-1.39l2.73,-2.1l32.3,-4.83l8.81,57.45l-0.66,1.15l0.3,0.92l0.81,0.79l-0.66,1.14l0.49,0.8l1.12,0.04l-0.36,1.14l0.18,0.51l-1.81,0.29l-3.18,2.55l-0.43,0.17l-1.4,-0.81l-3.46,0.91l-0.09,0.78l1.19,3.1l-1.4,1.88l-1.18,0.49l-0.45,0.89l-0.31,2.6l-1.11,0.88l-1.06,-0.24l-0.47,0.47l-0.85,1.95l0.05,3.14l-0.39,1.0l-1.38,0.85l-0.93,-0.68l-1.24,0.01l-1.48,-0.69l-0.62,-1.84l-1.89,-0.73l-0.44,0.3l-0.04,0.5l0.83,0.68l-0.62,0.31l-0.89,-0.35l-0.36,0.29l-0.04,0.48l0.54,0.93l-1.08,0.68l0.14,2.37l-1.06,0.65l-0.0,0.83l-0.16,0.37l0.08,-0.5l-0.33,-0.51l-1.6,0.18l-1.4,-1.69l-0.5,-0.08l-1.67,1.5l-1.57,0.69l-1.07,2.89l-0.81,-1.07l-2.79,-0.77l-1.11,-0.61l-1.08,-0.18l-1.76,0.92l-0.64,-1.02l-0.58,-0.18l-0.53,0.56l0.64,1.86l-0.34,0.84l-0.28,0.09l-0.02,-1.18l-0.42,-0.4l-0.58,0.01l-1.46,0.79l-1.41,-0.84l-0.85,0.0l-0.48,0.95l0.71,1.55l-0.49,0.74l-1.15,-0.39l-0.07,-0.54l-0.53,-0.44l0.55,-0.63l-0.35,-3.09l0.96,-0.78l-0.07,-0.58l-0.44,-0.23l0.69,-0.46l0.25,-0.61l-1.17,-1.47l0.46,-1.16l0.32,0.19l1.39,-0.55l0.33,-1.8l0.55,-0.4l0.44,-0.92l-0.06,-0.83l1.52,-1.07l0.06,-0.69l-0.41,-0.93l0.57,-0.86l0.14,-1.29l0.87,-0.51l0.4,-1.91l-1.08,-2.54l0.22,-0.8l-0.16,-1.11l-0.93,-0.91l-0.61,-1.5l-1.05,-0.78l-0.04,-0.59l0.92,-1.39l-0.63,-2.25l1.27,-1.31l-6.5,-50.68Z", name: "Indiana" }, "US-IL": { path: "M540.07,225.55l0.86,-0.35l0.37,-0.67l-0.23,-2.33l-0.73,-0.93l0.15,-0.41l0.72,-0.69l2.42,-0.98l0.71,-0.65l0.63,-1.68l0.17,-2.11l1.65,-2.47l0.27,-0.94l-0.03,-1.22l-0.59,-1.95l-2.23,-1.88l-0.11,-1.77l0.67,-2.38l0.45,-0.37l4.6,-0.85l0.81,-0.41l0.82,-1.12l2.55,-1.0l1.43,-1.56l-0.01,-1.57l0.4,-1.71l1.42,-1.46l0.29,-0.74l0.33,-4.37l-0.76,-2.14l-4.02,-2.47l-0.28,-1.5l-0.48,-0.82l-3.64,-2.48l44.58,-4.64l-0.01,2.66l0.57,2.59l1.37,2.49l1.31,0.95l0.76,2.6l1.26,2.71l1.42,1.84l6.6,51.49l-1.22,1.13l-0.1,0.69l0.67,1.76l-0.84,1.09l-0.03,1.11l1.19,1.09l0.56,1.41l0.89,0.82l-0.1,1.8l1.06,2.31l-0.28,1.49l-0.87,0.56l-0.21,1.47l-0.59,0.93l0.34,1.2l-1.48,1.13l-0.23,0.41l0.28,0.7l-0.93,1.17l-0.31,1.19l-1.64,0.67l-0.63,1.67l0.15,0.8l0.97,0.83l-1.27,1.15l0.42,0.76l-0.49,0.23l-0.13,0.54l0.43,2.94l-1.15,0.19l0.08,0.45l0.92,0.78l-0.48,0.17l-0.03,0.64l0.83,0.29l0.04,0.42l-1.31,1.97l-0.25,1.19l0.59,1.22l0.7,0.64l0.37,1.08l-3.31,1.22l-1.19,0.82l-1.24,0.24l-0.77,1.01l-0.18,2.04l0.3,0.88l1.4,1.93l0.07,0.54l-0.53,1.19l-0.96,0.03l-6.3,-2.43l-1.08,-0.08l-1.57,0.64l-0.68,0.72l-1.44,2.95l0.06,0.66l-1.18,-1.2l-0.79,0.14l-0.35,0.47l0.59,1.13l-1.24,-0.79l-0.01,-0.68l-1.6,-2.21l-0.4,-1.12l-0.76,-0.37l-0.05,-0.49l0.94,-1.35l0.2,-1.03l-0.32,-1.01l-1.44,-2.02l-0.47,-3.18l-2.26,-0.99l-1.55,-2.14l-1.95,-0.82l-1.72,-1.34l-1.56,-0.14l-1.82,-0.96l-2.32,-1.78l-2.34,-2.44l-0.36,-1.95l2.37,-6.85l-0.25,-2.32l0.98,-2.06l-0.38,-0.84l-2.66,-1.45l-2.59,-0.67l-1.29,0.45l-0.86,1.45l-0.46,0.28l-0.44,-0.13l-1.3,-1.9l-0.43,-1.52l0.16,-0.87l-0.54,-0.91l-0.29,-1.65l-0.83,-1.36l-0.94,-0.9l-4.11,-2.52l-1.01,-1.64l-4.53,-3.53l-0.73,-1.9l-1.04,-1.21l-0.04,-1.6l-0.96,-1.48l-0.75,-3.54l0.1,-2.94l0.6,-1.28ZM585.52,295.52l0.05,0.05l0.04,0.04l-0.05,-0.0l-0.04,-0.09Z", name: "Illinois" }, "US-AK": { path: "M89.36,517.03l0.84,0.08l0.09,0.36l-0.3,0.32l-0.64,0.3l-0.15,-0.15l0.25,-0.4l-0.12,-0.31l0.04,-0.2ZM91.79,517.2l0.42,-0.02l0.19,-0.11l0.26,-0.56l1.74,-0.37l2.26,0.07l1.57,0.63l0.84,0.69l0.02,1.85l0.32,0.18l0.0,0.34l0.25,0.27l-0.35,0.09l-0.25,-0.16l-0.23,0.08l-0.41,-0.33l-0.29,-0.04l-0.69,0.23l-0.91,-0.21l-0.07,-0.26l-0.24,-0.17l0.27,-0.21l0.74,0.72l0.46,-0.02l0.2,-0.48l-0.28,-0.44l-0.03,-0.3l-0.31,-0.67l-0.96,-0.52l-1.05,0.27l-0.57,0.69l-1.04,0.3l-0.44,-0.3l-0.48,0.12l-0.06,0.12l-0.63,-0.14l-0.26,0.06l-0.22,0.24l0.2,-0.3l-0.1,-0.55l0.12,-0.79ZM99.83,520.19l0.3,-0.07l0.29,-0.28l-0.03,-0.55l0.31,0.2l-0.06,0.45l0.83,0.92l-0.93,-0.51l-0.44,0.41l-0.13,-0.54l-0.13,-0.04ZM100.07,520.81l0.0,0.04l-0.03,0.0l0.02,-0.04ZM102.01,520.78l0.05,-0.34l0.33,-0.2l0.01,-0.12l-0.58,-1.24l0.1,-0.2l0.59,-0.24l0.29,-0.3l0.65,-0.34l0.62,-0.01l0.41,-0.13l0.81,0.1l1.42,-0.06l0.64,0.15l0.49,0.27l0.88,0.11l0.27,0.15l0.23,-0.22l0.27,-0.05l0.39,0.09l0.2,0.21l0.26,-0.05l0.2,0.38l0.44,0.31l0.1,0.23l0.7,-0.06l0.3,-0.77l0.44,-0.61l0.47,-0.21l1.78,-0.45l0.5,0.04l0.37,0.23l1.13,-0.38l0.66,0.04l-0.11,0.41l0.43,0.51l0.42,0.26l0.62,0.06l0.42,-0.43l0.14,-0.42l-0.34,-0.29l-0.31,-0.03l0.15,-0.44l-0.15,-0.38l1.04,-1.0l0.83,-0.99l0.12,-0.08l0.34,0.17l0.38,-0.02l0.32,0.3l0.19,0.37l0.66,-0.29l-0.1,-0.57l-0.43,-0.58l-0.46,-0.24l0.15,-0.44l0.77,-0.47l0.36,0.04l0.68,-0.2l0.8,-0.08l0.58,0.18l0.45,-0.16l-0.12,-0.52l0.66,-0.6l0.4,0.06l0.26,-0.11l0.43,-0.52l0.34,-0.12l0.23,-0.46l-0.42,-0.3l-0.38,0.03l-0.33,0.15l-0.36,0.39l-0.51,-0.09l-0.5,0.27l-2.19,-0.52l-1.69,-0.24l-0.71,-0.26l-0.12,-0.2l0.17,-0.32l0.04,-0.44l-0.28,-0.56l0.45,-0.35l0.43,-0.13l0.36,0.38l0.04,0.25l-0.15,0.44l0.07,0.39l0.56,0.12l0.32,-0.15l-0.03,-0.3l0.16,-0.35l-0.05,-0.75l-0.84,-1.05l0.01,-0.7l-0.67,-0.19l-0.19,0.24l-0.06,0.48l-0.41,0.22l-0.09,0.03l-0.26,-0.56l-0.34,-0.09l-0.51,0.41l-0.02,0.26l-0.15,0.15l-0.38,-0.02l-0.48,0.27l-0.24,0.54l-0.22,1.13l-0.13,0.32l-0.19,0.05l-0.31,-0.31l0.1,-2.67l-0.23,-0.99l0.19,-0.33l0.02,-0.27l-0.16,-0.29l-0.53,-0.27l-0.46,0.26l-0.1,-0.07l-0.35,0.13l-0.01,-0.54l-0.54,-0.61l0.19,-0.22l0.08,-0.65l-0.16,-0.37l-0.55,-0.26l-1.89,-0.01l-0.58,-0.34l-1.01,-0.12l-0.16,-0.12l-0.07,-0.22l-0.23,-0.07l-1.06,0.53l-0.75,-0.16l-0.12,-0.44l0.3,0.09l0.48,-0.08l0.31,-0.44l-0.21,-0.49l0.37,-0.49l0.83,0.04l0.43,-0.16l0.12,-0.35l-0.14,-0.42l-1.11,-0.64l0.09,-0.27l0.34,-0.17l0.38,-0.44l1.12,-0.0l0.23,-0.09l0.19,-0.32l0.03,-0.95l0.22,-0.54l0.07,-1.42l0.25,-0.45l-0.08,-0.58l0.07,-0.2l0.88,-0.74l0.02,-0.1l-0.09,-0.02l0.19,-0.16l-0.31,-0.35l-0.27,0.05l-0.04,-0.25l-0.09,-0.04l0.57,-0.22l0.33,-0.25l0.51,-0.1l0.24,-0.25l0.42,-0.0l0.19,0.18l0.41,0.08l0.29,-0.08l0.44,-0.55l-0.3,-0.34l-0.39,-0.07l-0.05,-0.33l-0.27,-0.31l-0.6,0.4l-0.43,-0.07l-1.12,0.62l-1.04,0.06l-0.34,0.18l-0.48,-0.03l-0.12,0.5l0.4,0.64l-0.26,0.19l-0.29,0.45l-0.19,-0.09l-0.17,-0.27l-0.76,-0.04l-1.16,-0.25l-0.81,-0.4l-1.05,-0.59l-0.78,-0.61l-0.52,-0.69l0.01,-0.21l0.6,-0.1l-0.06,-0.4l0.1,-0.24l-0.51,-1.06l0.1,-0.78l-0.18,-0.52l0.33,-0.54l-0.4,-0.34l-0.23,0.0l-0.44,-0.69l-0.01,-0.2l0.59,-0.14l0.3,-0.37l-0.05,-0.44l-0.36,-0.26l0.72,0.04l0.29,-0.13l0.18,-0.25l0.63,0.01l0.08,0.51l0.56,0.51l0.32,0.49l-0.03,0.09l-0.79,0.11l-0.53,0.51l0.31,0.45l0.94,-0.08l0.4,0.24l0.26,-0.01l0.39,-0.22l0.29,0.03l0.08,0.07l-0.51,0.6l-0.05,0.38l0.22,0.43l0.46,0.24l1.42,0.07l0.28,-0.17l0.16,-0.35l0.19,-0.08l-0.2,-0.74l0.35,-0.35l-0.02,-0.33l-0.18,-0.25l0.15,-0.43l-0.08,-0.13l-0.52,-0.26l-0.77,-0.01l-0.34,0.1l-1.51,-1.2l-0.01,-0.53l-0.35,-0.39l-0.26,-0.12l-0.15,-0.38l0.55,0.15l0.53,-0.4l-0.17,-0.41l-0.7,-0.51l0.4,-0.45l-0.14,-0.5l0.31,-0.15l0.27,0.08l0.44,-0.1l0.45,0.27l0.75,-0.04l0.67,-0.44l-0.08,-0.48l-0.18,-0.19l-0.48,-0.03l-0.51,0.16l-0.43,-0.19l-1.02,-0.02l-0.26,0.14l-0.44,0.04l-0.36,0.29l-0.62,0.09l-0.15,0.12l-0.15,0.42l-0.13,-0.19l0.27,-0.52l0.36,-0.24l-0.1,-0.44l-0.48,-0.6l0.03,-0.1l0.37,0.1l0.4,-0.18l0.16,-0.22l0.07,-0.36l-0.22,-0.6l0.55,0.23l0.42,-0.5l-0.44,-0.59l0.38,0.32l0.94,0.37l0.2,-0.44l0.14,0.01l-0.04,-0.54l0.12,-0.36l0.48,-0.28l0.49,0.01l1.96,-0.47l0.8,-0.03l0.3,0.25l-0.01,0.44l0.19,0.27l-0.27,0.16l0.13,0.47l0.35,0.15l0.74,0.01l0.29,-0.39l-0.13,-0.45l0.08,-0.34l1.21,-0.11l0.29,-0.63l-0.31,-0.24l-0.93,-0.04l0.03,-0.08l0.41,-0.03l0.15,-0.63l0.72,-0.27l0.86,0.88l0.32,0.11l0.38,-0.28l0.08,-0.27l-0.04,-0.41l-0.18,-0.26l0.34,0.0l0.69,0.32l0.35,0.31l0.54,0.81l-0.06,0.29l-0.38,-0.09l-0.52,0.21l-0.13,0.47l0.43,0.24l1.07,0.06l0.05,0.52l0.31,0.3l0.91,0.49l1.02,0.09l0.53,-0.18l0.41,0.17l0.49,-0.0l1.61,-0.32l0.1,0.49l1.67,0.97l0.28,0.31l0.53,0.32l1.06,0.37l1.81,-0.2l0.56,-0.21l0.47,-0.49l0.2,-0.57l0.15,-0.95l0.61,-1.1l0.01,-0.29l-0.24,-0.88l0.14,-0.05l-0.03,-0.19l0.58,0.25l0.2,-0.1l0.86,0.0l0.36,-0.17l0.41,-0.47l0.07,-0.93l-0.19,-0.43l0.22,-0.03l0.11,-0.44l-0.23,-0.32l-0.73,-0.39l-0.29,0.12l-0.43,-0.04l-0.52,0.2l-0.21,-0.12l-0.29,-0.6l-0.31,-0.29l-0.51,0.0l-0.02,0.1l-0.52,-0.04l-0.43,-0.31l-0.56,-0.02l-0.32,0.1l-1.04,-0.24l-0.48,0.03l-0.33,0.16l0.04,-0.42l-0.29,-0.71l-0.21,-0.97l-0.49,-0.23l-0.55,-0.08l-0.29,0.09l-0.47,-0.64l-0.48,-0.4l-0.5,-0.25l-1.14,-1.02l-0.95,-0.24l-0.2,-0.27l-0.49,-0.27l-0.11,-0.23l-0.63,-0.01l-0.04,0.13l-0.9,-1.22l-1.86,-2.14l-0.25,-0.55l-0.0,-0.32l0.07,-0.19l0.27,0.06l0.27,-0.13l0.35,-0.76l-0.41,-1.02l0.05,-0.11l0.4,0.19l0.51,-0.05l0.41,-0.17l0.51,0.66l0.43,0.23l0.48,-0.4l-0.02,-0.33l-0.32,-0.66l-0.48,-0.41l-0.46,-0.78l-0.84,-0.88l-0.12,-0.02l-0.98,-1.16l-0.33,-0.52l-0.04,-0.3l-0.46,-0.96l0.41,0.03l0.54,0.45l0.34,0.15l0.44,-0.1l0.12,-0.17l0.2,0.03l0.06,-0.15l0.18,0.03l0.17,0.41l0.2,0.18l1.09,0.35l1.08,-0.18l1.53,0.45l0.14,0.13l-0.06,0.06l0.19,0.45l0.88,0.89l1.03,0.47l0.56,-0.36l-0.06,-0.35l-0.37,-0.64l1.48,0.48l0.36,0.26l0.11,0.4l0.61,0.16l1.2,0.07l0.48,0.24l1.49,0.99l0.18,0.45l-0.34,0.04l-0.1,0.06l-0.4,0.34l-0.16,0.3l-0.6,-0.28l-0.52,-0.06l-0.12,0.69l0.62,0.52l0.02,0.52l0.16,0.37l0.28,0.32l0.91,0.59l0.18,0.29l0.46,0.4l0.69,0.3l0.39,0.29l-0.14,0.25l0.02,0.32l0.38,0.24l0.2,-0.05l0.26,0.12l0.44,0.49l0.56,0.16l0.39,0.46l-0.08,0.39l0.24,0.31l0.41,0.19l0.41,-0.15l0.03,-0.15l1.39,-0.46l0.24,0.52l0.24,0.25l-0.25,0.06l0.01,0.5l0.38,0.29l0.43,0.02l0.5,-0.24l0.36,-0.41l-0.05,-0.98l-0.45,-0.65l0.19,0.01l0.65,1.54l0.23,0.25l1.6,0.95l0.53,-0.01l0.29,-0.27l0.34,-0.59l-0.02,-0.44l0.3,-0.38l-0.16,-0.23l-0.72,-0.38l-0.44,-0.04l-0.49,-0.92l-0.89,-0.53l-0.42,-0.12l-0.61,0.21l-0.32,-0.28l-0.0,-0.43l-0.16,-0.19l-0.23,-0.71l0.64,-0.39l0.29,-0.02l0.35,0.29l0.32,0.05l0.37,-0.41l-0.0,-0.15l-0.75,-1.21l-1.13,-0.68l-0.06,-0.29l0.18,-0.28l-0.15,-0.48l-0.43,-0.23l-0.43,0.29l-0.42,0.07l-0.25,-0.44l-0.53,-0.4l-0.31,-0.1l-0.25,-0.41l-1.35,-1.4l0.59,-1.11l0.15,-1.07l-0.1,-1.05l-0.51,-1.13l-0.29,-1.11l-0.36,-0.48l-0.85,-2.25l-1.06,-1.45l-0.08,-0.73l-0.38,-0.89l0.17,-0.17l0.91,-0.32l1.04,-1.04l1.08,1.08l1.75,1.29l0.84,0.44l1.33,0.95l1.37,0.54l1.36,0.24l1.49,-0.09l0.3,0.11l0.42,-0.05l0.4,-0.16l0.23,-0.26l0.3,-0.14l0.42,-0.5l0.56,-0.03l0.17,-0.31l1.66,0.14l0.96,-0.29l0.5,0.12l0.03,0.15l0.87,0.52l0.35,0.13l0.52,-0.01l0.77,0.56l0.91,0.33l0.1,0.2l0.28,-0.04l0.42,0.16l1.99,0.27l-0.05,0.31l0.11,0.18l-0.18,0.06l-0.15,0.66l0.44,0.21l0.04,0.83l0.28,0.36l0.44,-0.14l0.1,-0.13l0.05,-0.46l0.22,-0.51l1.1,0.62l0.73,0.1l0.29,-0.35l-0.22,-0.39l-0.74,-0.5l-0.43,-0.14l-0.07,-0.18l0.03,-0.25l0.76,-0.07l0.26,0.1l0.01,0.3l0.27,0.62l0.54,0.33l0.14,-0.17l0.45,0.24l0.16,-0.08l0.63,0.55l1.13,0.63l0.13,-0.03l0.81,0.55l0.59,0.22l1.21,0.25l1.27,0.12l1.06,-0.17l1.19,0.0l0.01,0.22l0.26,0.49l0.68,0.48l0.08,0.62l0.56,0.17l0.57,0.45l-0.61,-0.02l-0.77,-0.42l-0.42,0.03l-0.44,0.21l0.1,0.48l0.23,0.26l-0.19,0.32l0.18,0.59l0.33,0.11l0.33,-0.12l0.64,0.36l0.3,0.06l0.31,-0.08l0.23,-0.23l0.33,-0.02l0.39,0.36l0.26,0.01l0.25,0.18l0.33,0.02l0.27,-0.16l0.13,0.09l0.16,0.38l-0.54,-0.04l-0.29,0.34l0.21,0.4l0.2,0.11l0.07,0.35l0.89,0.58l-0.04,0.13l0.18,0.3l0.49,0.21l0.94,-0.04l0.96,0.68l0.58,0.26l0.32,0.03l0.37,0.42l0.23,0.1l0.1,0.31l0.34,0.26l0.21,0.38l0.34,0.08l0.26,-0.12l0.25,0.23l-0.55,0.05l-0.29,0.34l-0.41,0.04l-0.18,0.63l0.35,0.33l1.4,0.72l-0.08,0.69l1.48,0.96l0.49,0.67l0.27,0.15l0.49,-0.16l1.05,0.48l0.24,-0.05l0.38,0.32l0.16,0.58l1.1,0.42l0.72,0.06l0.21,0.19l0.85,0.38l0.32,0.34l0.31,0.09l0.59,0.53l0.2,0.37l0.73,0.47l0.25,0.29l0.1,0.53l0.48,0.29l0.55,0.03l0.31,0.44l0.56,0.33l-0.11,0.34l0.39,0.41l1.66,1.19l0.76,0.36l0.16,-0.03l1.78,1.0l0.42,0.4l0.69,0.34l0.47,0.65l0.08,-0.08l-0.02,0.25l0.22,0.06l0.5,0.55l0.02,0.21l0.5,0.23l0.54,0.42l1.19,0.58l0.8,0.03l0.63,0.31l0.03,0.31l0.43,0.12l0.33,-0.2l0.19,-0.0l0.43,0.12l1.02,0.51l0.05,0.25l0.41,0.27l0.22,-0.19l0.58,0.53l0.31,0.09l0.53,0.55l-0.01,0.24l0.49,0.42l0.02,0.24l0.27,0.43l0.55,0.34l0.18,0.4l0.42,0.15l0.58,0.51l0.56,0.96l0.35,0.26l0.53,0.01l0.15,0.11l-23.69,51.51l0.09,0.46l1.53,1.4l0.52,0.02l0.19,-0.15l1.17,1.29l0.41,0.12l1.37,-0.4l1.79,0.68l-0.86,0.96l-0.08,0.38l0.35,1.01l0.91,0.92l-0.08,0.65l0.1,0.44l2.43,4.76l-0.2,1.48l-0.29,0.38l0.19,0.62l0.58,0.12l0.83,-0.25l0.54,-0.07l0.07,0.08l0.03,0.1l-0.66,0.3l-0.33,0.34l0.29,0.54l0.35,-0.0l0.37,-0.18l0.25,0.12l0.02,0.21l0.44,0.11l0.09,0.11l0.26,1.19l-0.17,0.03l-0.1,0.51l0.24,0.32l0.94,0.22l0.04,0.16l-0.27,0.18l0.01,0.12l0.21,0.32l0.21,0.09l-0.05,0.37l-0.24,-0.02l-0.1,-0.46l-0.35,-0.31l-0.11,0.06l-0.28,-0.47l-0.47,-0.03l-0.26,0.35l-0.45,0.01l-0.08,0.13l-0.26,-0.63l-0.14,0.01l-0.35,-0.41l-0.47,-0.12l-0.89,-1.43l0.11,-0.01l0.32,-0.49l-0.08,-0.26l-0.34,-0.28l-0.51,0.01l-0.47,-0.93l-0.05,-0.15l0.12,-0.53l-0.08,-0.41l-0.52,-1.06l-0.46,-0.7l-0.19,-0.07l0.1,-0.61l-0.29,-0.28l-0.72,-0.14l-1.24,-1.44l-0.27,-0.47l-0.01,-0.21l-0.32,-0.23l-0.24,-0.34l-0.28,-0.11l-0.49,-0.63l0.39,-0.11l0.12,-0.23l0.05,0.05l0.59,-0.3l-0.02,0.13l-0.16,0.06l-0.16,0.55l0.3,0.41l0.38,0.07l0.43,-0.3l0.25,-1.03l0.15,-0.22l0.42,0.2l0.36,0.46l0.36,0.04l0.35,-0.35l-0.47,-0.83l-0.69,-0.39l-0.27,-0.91l-0.35,-0.63l-0.4,-0.17l-0.67,0.44l-0.39,0.06l-0.79,0.37l-1.9,-0.05l-1.0,-0.5l-0.45,-0.34l-1.46,-1.5l0.23,-0.14l0.21,-0.32l0.16,-0.74l-0.43,-0.94l-0.52,-0.09l-0.33,0.19l-0.12,0.52l-0.6,-0.04l-0.85,-0.89l-2.81,-1.97l-1.68,-0.48l-1.62,-0.65l-1.13,-0.19l-0.1,-0.53l-0.27,-0.5l0.13,-0.25l-0.02,-0.26l-0.22,-0.25l-0.8,-0.28l-0.36,-0.35l-0.17,-0.01l-0.13,-0.55l-0.2,-0.34l-0.2,-0.12l0.7,-0.5l0.09,-0.27l-0.09,-0.08l0.21,-0.27l0.23,-0.09l0.38,0.08l0.38,-0.17l0.18,-0.32l-0.03,-0.34l-0.35,-0.22l-0.55,-0.07l-0.81,0.27l-0.24,0.2l-0.57,0.02l-0.56,0.35l-0.61,0.15l-0.2,-0.13l-0.19,-0.59l-0.58,-0.63l0.77,-0.37l0.19,-0.38l-0.32,-0.45l-0.53,-0.01l-0.15,-0.48l-0.19,-0.17l0.09,-0.49l-0.16,-0.25l0.04,-0.22l-0.31,-0.55l-0.43,-0.22l-0.53,0.17l-0.07,-0.2l-0.27,-0.03l-0.09,-0.14l0.22,-0.56l0.26,0.03l0.08,-0.09l0.65,0.37l0.38,0.07l0.42,-0.49l-0.14,-0.42l-0.27,-0.26l-1.05,-0.52l-1.54,0.27l-0.1,-0.21l-0.41,-0.3l-0.42,-0.01l-0.08,-0.23l-0.47,0.02l-0.21,-0.16l0.21,-0.26l-0.05,-0.39l0.14,-0.4l-0.28,-0.27l-0.25,-0.05l0.21,-0.77l-0.33,-0.28l-0.29,0.02l-1.36,0.57l0.02,-0.11l-0.34,-0.35l-1.19,-0.19l-0.14,0.25l-0.55,0.26l0.08,0.49l0.21,0.14l-0.01,0.1l-0.83,-0.27l-0.63,-0.03l-0.23,0.49l-0.51,0.38l0.12,0.52l0.31,0.16l0.46,-0.02l-0.05,0.11l-0.98,0.16l-0.3,0.14l-0.16,0.16l-0.05,0.46l0.37,0.28l0.83,-0.12l0.12,0.14l-0.04,0.25l0.31,0.21l-0.27,0.12l-0.15,0.24l-0.51,-0.02l-0.23,0.34l-0.3,0.12l0.05,0.54l-0.3,0.32l-0.12,-0.14l-0.66,0.24l-0.32,-0.27l-0.44,-0.13l-0.32,-0.39l0.11,-0.5l-0.38,-0.29l-0.64,0.04l0.13,-0.4l-0.05,-0.34l-0.23,-0.26l-0.26,-0.07l-0.4,0.16l-0.47,0.73l-0.25,-0.01l-0.23,-0.49l-0.46,-0.07l-0.37,0.4l-0.4,-0.06l-0.16,0.33l-0.29,-0.31l-0.42,-0.03l-0.26,0.25l-0.01,0.21l-0.31,-0.08l-0.11,-0.32l-0.12,-0.03l-0.37,0.06l-0.72,0.4l-0.01,-0.27l-0.13,-0.08l-0.8,-0.04l-0.38,0.2l-0.0,0.45l-0.09,0.05l-1.16,0.08l-0.3,0.13l-0.87,-0.77l-0.22,-0.05l-0.29,0.29l-0.4,-0.28l-1.02,-0.03l0.03,-0.13l-0.35,-0.39l-0.01,-0.13l0.45,0.02l0.16,-0.37l0.53,0.01l0.43,0.3l0.3,0.45l0.49,-0.04l0.2,-0.43l0.23,0.09l0.44,-0.04l0.48,-0.17l0.06,-0.15l0.45,-0.23l0.46,-0.08l0.32,-0.52l-0.21,-0.37l-0.49,-0.19l-1.84,0.04l-0.57,-0.71l-0.07,-0.28l1.28,-0.98l1.62,-0.44l0.37,-0.26l0.33,-0.45l0.46,-0.1l0.65,-0.89l0.14,-1.04l0.36,-0.03l0.74,0.3l1.54,-0.17l1.4,0.03l0.01,0.5l0.23,0.42l0.56,0.48l1.06,0.16l0.14,0.1l0.28,0.41l0.4,0.26l1.19,1.07l0.2,0.34l0.25,0.13l0.5,-0.37l0.0,-0.44l-0.13,-0.39l-0.42,-0.46l-0.43,-0.13l-0.32,-0.52l-0.43,-0.35l-0.69,-1.19l0.45,-0.11l0.44,-0.3l0.35,0.02l0.33,-0.17l1.56,0.33l0.37,-0.06l0.15,-0.62l-0.09,-0.11l-0.67,-0.46l-0.84,-0.3l-0.61,-0.04l-0.74,0.14l-0.37,0.19l-0.29,0.35l-0.76,-0.52l-0.11,-0.24l-0.42,-0.02l-0.16,-0.12l0.14,-0.2l-0.17,-0.67l-0.09,-0.02l-1.07,0.27l-0.85,-0.19l-0.49,0.0l-0.85,0.41l-0.65,-0.15l-0.6,-0.29l-1.18,0.04l-0.71,0.35l-0.19,0.5l-0.35,-0.15l-0.65,0.04l-0.5,0.24l-0.62,0.03l-0.54,0.15l-0.41,0.33l-0.12,0.36l-0.49,0.22l-0.59,-0.02l-0.4,-0.27l-0.26,-0.68l-0.43,-0.32l-0.3,-0.11l-0.42,0.02l-0.3,0.28l0.16,0.51l0.31,0.08l0.01,0.37l0.37,0.61l0.21,0.72l-0.38,0.08l-0.35,0.26l-0.33,-0.06l-0.56,-0.39l-0.98,-0.37l-0.58,0.21l0.02,0.44l-0.07,-0.38l-0.32,-0.34l-0.42,0.19l-0.23,0.4l-0.2,-0.38l-0.81,0.14l-0.08,0.05l-0.02,0.41l-0.37,-0.32l-0.33,-0.04l-0.36,0.28l0.13,0.39l-1.49,-0.27l-0.16,0.49l-0.25,0.14l-0.28,0.36l-0.51,0.04l-0.02,0.17l-0.2,0.09l0.03,0.42l-0.16,0.27l-0.01,0.39l0.33,0.34l0.59,-0.05l0.39,0.38l0.56,0.31l0.08,0.49l0.23,0.34l0.3,0.19l0.03,0.3l-0.64,0.54l-0.5,-0.05l-0.44,0.18l-0.88,-0.46l-0.37,0.02l-0.48,0.41l-0.2,-0.12l-0.45,-0.01l-0.34,0.59l-0.75,-0.12l-0.4,0.05l-0.27,0.3l-0.1,-0.02l0.07,0.06l-0.11,0.01l0.0,0.1l-0.42,-0.28l-0.36,0.33l-0.19,-0.1l-0.32,0.19l-0.3,-0.11l-0.37,0.07l-0.53,-0.44l-0.45,-0.15l-0.9,0.53l-0.18,-0.15l-0.71,-0.02l-0.45,0.28l-0.15,-0.37l-0.41,-0.28l-0.42,0.1l-0.43,0.49l-0.37,-0.15l-0.28,0.31l-0.47,-0.08l-0.4,-0.43l-0.4,0.07l-0.3,0.24l-0.14,-0.11l-0.43,-0.05l-0.14,0.08l-1.45,-0.04l-0.31,0.12l-0.22,0.28l0.24,0.95l-0.31,-0.03l-0.15,0.18l-0.69,-0.24l-0.41,-0.28l-0.26,0.05l-0.26,0.26l-0.2,-0.24l-0.49,0.22l-0.65,0.09l-0.32,-0.22l-0.27,0.2l-0.19,-0.65l-0.39,-0.22l-0.43,0.08l-0.28,0.31l-0.44,0.09l-0.26,-0.07l-0.14,0.34l-0.06,-0.31l-0.26,-0.25l-0.54,-0.14l-1.29,-0.05l-0.62,0.31l-0.42,-0.34l-0.51,-0.04l-0.84,0.27l-0.73,0.11l-0.16,0.12l-0.11,0.56l-0.26,-0.07l-0.44,0.3l-0.03,0.21l-0.23,0.15l-0.26,-0.25l-0.37,-0.03l-0.36,0.17l-0.6,-0.33l-0.87,-0.22l-0.41,-0.18l-0.09,-0.37l-0.55,-0.15l-0.25,0.15l-0.71,-0.67l-0.41,0.02l-0.78,-0.24l-0.4,0.21ZM111.25,502.71l-0.44,0.21l-0.03,-0.02l0.24,-0.26l0.23,0.07ZM128.45,468.26l-0.1,0.14l-0.06,0.02l0.02,-0.15l0.14,-0.02ZM191.55,470.09l-0.0,0.04l-0.02,-0.04l0.03,-0.01ZM191.85,541.2l-0.08,-0.21l0.06,-0.51l0.25,-0.06l0.08,0.39l-0.31,0.39ZM165.84,518.29l-0.19,0.37l-0.34,0.04l-0.07,0.31l-0.27,-0.07l-0.45,0.06l-0.04,-0.09l0.46,-0.29l0.06,-0.15l0.84,-0.19ZM162.12,521.34l0.09,0.0l-0.06,0.02l-0.02,-0.03ZM162.26,521.34l0.08,-0.02l0.01,0.04l-0.04,0.04l-0.05,-0.05ZM141.64,514.73l0.19,0.06l0.26,0.22l-0.46,0.03l-0.07,-0.12l0.08,-0.19ZM132.07,521.13l-0.0,0.0l0.0,-0.0l0.0,0.0ZM132.06,520.84l-0.02,-0.07l0.06,-0.01l-0.03,0.08ZM109.91,522.38l0.07,-0.02l0.05,0.12l-0.03,0.01l-0.09,-0.11ZM107.83,523.67l0.01,0.02l-0.02,0.0l0.0,-0.02l0.01,-0.01ZM136.02,515.64l-0.01,-0.04l0.07,0.01l-0.06,0.03ZM199.71,549.76l0.43,-0.06l0.87,0.3l0.36,-0.05l0.76,-0.54l0.39,-0.87l0.67,-0.03l0.47,-0.34l0.17,-0.49l0.96,0.19l1.89,-0.14l0.49,0.7l0.06,0.43l0.38,0.59l-0.1,0.26l-0.29,0.17l-0.1,0.55l0.11,0.16l-0.11,0.33l0.13,0.53l0.17,0.24l0.69,0.46l0.02,0.37l0.3,0.56l0.35,0.24l0.08,0.34l-0.15,0.26l0.26,1.28l1.33,1.5l0.24,0.78l-0.64,-0.19l-0.38,0.04l-0.33,0.37l-0.51,0.26l-0.01,0.29l-0.38,0.15l-0.21,0.29l-0.52,-0.98l-0.84,-0.64l0.11,-0.44l-0.27,-1.06l0.14,-0.11l0.26,-1.09l-0.26,-0.26l0.04,-0.09l-0.12,-0.01l0.04,-0.06l-0.09,0.05l-0.1,-0.1l-0.04,0.1l-0.12,-0.01l-0.03,-0.07l0.24,-0.92l0.1,-1.07l-0.15,-1.05l0.51,-0.94l0.02,-0.37l-0.66,-0.25l-0.5,0.69l-0.24,-0.13l-0.45,0.11l0.01,0.55l-0.32,0.35l0.3,1.04l-0.34,0.85l0.13,1.32l-0.11,0.36l0.04,0.39l-0.27,0.34l0.03,1.86l-0.28,0.29l-0.27,-0.31l0.02,-1.36l-0.28,-0.43l-0.53,0.1l-0.08,0.1l-0.88,-0.14l0.22,-0.05l0.2,-0.25l0.2,-0.91l-0.12,-0.1l-0.13,-1.06l0.88,0.13l0.45,-0.45l-0.11,-0.33l-0.74,-0.45l-0.23,0.1l0.0,-0.84l-0.33,-0.34l-0.31,-0.01l-0.29,0.56l-0.24,0.06l-0.27,0.41l0.12,0.13l-0.5,-0.23l0.24,-0.5l-0.28,-0.54l-0.29,-0.02l-0.18,-0.5l-0.47,-0.15l-0.19,0.31l-0.22,-0.47ZM201.64,551.89l0.21,0.2l-0.19,0.19l-0.03,-0.38ZM210.83,558.1l0.42,0.83l-0.23,0.38l0.09,0.66l0.47,1.27l0.06,1.07l0.15,0.48l-0.33,-0.38l-1.31,-0.73l-0.26,-0.05l0.19,-0.2l-0.17,-0.39l0.14,-0.1l0.31,-0.63l-0.47,-0.31l-0.27,0.01l-0.75,0.68l-0.11,-0.36l0.09,-0.18l-0.03,-0.41l0.26,-0.33l0.36,-0.19l0.16,-0.56l0.43,-0.42l0.36,0.09l0.44,-0.23ZM211.88,563.05l1.25,5.46l-0.54,0.45l0.03,0.64l0.81,0.55l-0.47,0.67l0.05,0.52l0.58,0.54l-0.08,0.3l0.06,0.48l-0.14,0.55l0.15,0.3l0.2,0.13l0.9,0.26l1.46,1.84l1.18,0.8l0.34,0.76l0.55,0.42l-0.01,0.53l0.1,0.24l0.78,0.58l0.49,0.11l0.03,0.16l-0.16,0.69l-0.68,0.46l-0.31,0.4l-0.04,0.78l-0.31,0.67l0.11,0.99l-0.15,0.54l0.03,0.33l-0.4,0.17l-1.34,1.4l-0.41,0.31l-0.48,0.16l-0.2,-0.13l-0.28,0.01l0.12,-0.5l-0.16,-0.42l-0.64,0.07l-0.08,0.17l-0.1,-0.51l0.24,-0.03l0.12,0.14l0.5,0.14l1.27,-0.81l0.75,-0.65l-0.23,-0.63l-0.48,0.07l0.01,-0.13l-0.37,-0.36l-0.54,0.12l0.59,-1.72l0.0,-0.38l0.15,-0.3l-0.06,-0.43l0.09,-0.51l-0.36,-0.24l-0.06,-0.35l-0.27,-0.49l0.49,-0.15l0.35,-0.35l0.18,-0.48l-0.43,-0.27l-0.43,0.08l-0.61,0.31l-0.45,0.04l-0.55,-0.29l-1.43,0.28l-0.59,-0.05l0.17,-0.09l0.2,-0.36l0.21,-0.85l0.32,0.02l0.81,0.41l0.31,0.03l0.71,-0.34l-0.07,-0.49l-0.33,-0.19l-0.4,0.02l-0.88,-0.43l0.03,-0.84l-0.23,-0.29l-0.46,-0.26l0.02,-0.43l-0.43,-0.61l0.27,-0.3l-0.16,-0.68l-0.35,-0.03l0.1,-0.07l0.01,-0.21l0.42,-0.17l0.22,-0.62l-0.38,-0.26l-0.67,0.18l-0.27,-0.29l-0.2,-0.32l-0.06,-0.35l0.33,-0.21l0.18,-1.04l-0.39,-0.3l-0.47,0.16l-0.17,-0.08l-0.29,-0.36l0.13,-0.2l-0.14,-0.35l-0.45,-0.27l1.08,-0.08l0.35,-0.42l-0.28,-0.52l-0.49,0.08l-0.44,-0.14l0.18,-0.32l-0.03,-0.32l-0.51,-0.26l0.04,-0.13l0.64,0.01l0.41,0.72l0.28,0.23l0.31,0.02l0.28,-0.15l0.04,-0.52l-0.24,-0.23l-0.1,-0.4l-0.37,-0.63l-0.78,-0.91l0.12,-0.39l1.23,0.83l0.52,-0.45ZM214.19,585.45l-0.17,0.68l-0.05,-0.01l0.09,-0.42l0.13,-0.25ZM215.44,583.76l-0.46,0.24l-0.25,-0.22l-0.63,0.14l0.05,-0.14l0.52,-0.28l0.76,0.25ZM211.63,577.78l-0.08,0.43l0.26,0.27l-0.46,0.4l-0.51,-0.23l-0.26,0.45l0.06,0.32l-0.15,-0.2l0.08,-0.67l0.25,-0.15l0.49,-0.04l0.32,-0.57ZM209.08,567.17l-0.25,-0.24l0.08,-0.14l0.49,0.2l-0.32,0.18ZM138.39,458.34l-0.47,-0.44l0.06,-0.45l0.41,0.27l0.0,0.62ZM108.63,500.59l-0.13,0.01l0.09,-0.03l0.04,0.02ZM211.75,580.86l0.58,-0.24l-0.2,0.44l0.02,0.52l-0.22,-0.23l-0.18,-0.5ZM212.61,580.43l0.18,-0.49l-0.1,-0.18l0.52,-0.05l0.31,-0.26l0.18,-0.36l0.14,-0.03l0.14,-0.52l0.57,-0.03l0.29,1.05l0.12,1.09l-0.15,0.19l0.03,0.12l-0.16,0.04l-0.27,0.73l-0.28,0.21l-0.2,-0.36l0.13,-1.47l-0.39,-0.42l-0.41,0.19l-0.18,0.46l-0.46,0.07ZM211.52,574.36l0.23,0.31l0.37,0.12l0.01,0.48l-0.14,0.07l-0.12,-0.08l-0.4,-0.44l-0.11,-0.22l0.15,-0.24ZM209.53,575.0l0.17,-0.21l0.28,-0.04l-0.06,0.38l0.09,0.09l0.27,0.14l0.34,0.0l0.41,0.28l0.04,0.12l-0.35,0.14l0.09,0.38l-0.06,0.17l-0.28,0.08l0.14,-0.47l-0.34,-0.41l-0.06,-0.25l-0.69,-0.39ZM210.36,574.41l0.1,-0.07l0.07,0.06l-0.0,0.01l-0.16,-0.0ZM209.54,571.91l0.03,-0.1l0.32,-0.15l0.14,-0.29l-0.04,-0.37l0.05,-0.1l0.34,1.01l-0.09,-0.09l-0.52,-0.06l-0.15,0.21l-0.08,-0.04ZM206.97,580.16l0.1,-0.52l-0.42,-0.36l0.1,-0.03l-0.05,-0.5l-0.28,-0.2l0.14,-0.17l0.28,-0.1l0.36,0.03l0.21,-0.67l-0.39,-0.23l-1.18,-0.03l-0.2,-0.17l0.19,-0.17l0.46,-0.05l0.67,-0.52l0.19,-0.54l-0.08,-0.32l-0.26,-0.01l0.23,-0.63l0.14,0.22l0.53,0.22l0.24,0.31l0.4,0.27l0.42,1.0l0.12,0.56l-0.14,0.62l-0.17,-0.03l-0.11,0.19l-0.32,0.19l0.02,0.34l-0.75,0.25l-0.08,0.43l0.07,0.45l0.56,-0.01l-0.02,0.13l0.38,0.45l0.22,-0.01l0.23,0.23l0.25,-0.06l0.21,0.38l-0.39,-0.07l-0.32,0.43l-0.06,0.32l0.22,0.37l0.41,0.04l0.21,0.09l-0.2,-0.03l-0.41,0.47l-0.47,0.15l0.11,0.7l0.38,0.27l-0.13,0.2l0.18,0.53l-0.2,0.06l-0.06,0.23l-0.22,-0.08l0.18,-0.35l-0.4,-1.09l0.11,-0.08l0.05,-0.73l-0.28,-0.13l-0.15,-0.32l0.01,-0.81l-0.21,-0.78l-0.46,-0.01l-0.11,0.08l-0.05,-0.39ZM207.26,574.01l-0.02,-0.27l-0.21,-0.27l0.29,-0.14l0.03,0.3l0.15,0.15l-0.04,0.21l-0.2,0.0ZM206.9,573.41l-0.43,-0.14l-0.38,-0.35l0.21,-0.11l0.28,0.14l0.04,0.28l0.27,0.18ZM208.72,573.09l0.26,-0.17l0.43,0.23l0.25,-0.0l-0.15,0.15l-0.09,0.37l-0.14,0.04l-0.23,-0.02l-0.33,-0.6ZM206.49,567.38l1.0,0.59l0.81,0.7l0.06,0.4l-0.46,0.04l-0.19,0.76l0.03,0.31l0.19,0.26l-0.17,0.31l0.43,0.76l-0.15,0.1l-0.85,-0.57l-0.44,0.12l-0.01,0.16l-0.22,-0.06l0.24,-0.51l-0.06,-0.27l0.08,0.03l0.08,-0.27l-0.06,-0.29l0.42,-0.7l0.08,-0.44l-0.28,-0.43l0.06,-0.22l-0.32,-0.31l-0.25,-0.5ZM208.6,569.24l0.34,0.07l0.2,-0.33l0.2,0.07l0.2,0.44l-0.0,0.19l-0.3,0.2l-0.13,0.86l-0.14,-0.44l-0.01,-0.6l-0.07,-0.17l-0.2,-0.03l-0.09,-0.25ZM209.57,569.66l0.0,-0.0l0.03,-0.02l-0.04,0.02ZM204.29,565.52l0.44,-0.15l-0.03,-0.36l0.29,-0.2l0.29,0.26l0.51,-0.3l-0.08,0.47l-0.15,0.23l-0.33,-0.04l-0.36,0.3l-0.27,-0.06l-0.16,0.09l0.02,0.12l-0.36,0.07l0.19,-0.44ZM206.36,564.27l-0.49,0.31l-0.02,-0.59l-0.46,-0.14l-0.02,-0.1l0.53,-0.05l0.24,-0.65l-0.35,-0.23l-0.51,-0.03l-0.1,-0.28l0.09,-0.84l0.2,-0.34l0.16,-0.72l0.07,-1.03l0.34,-0.33l0.69,0.17l0.26,0.31l-0.04,0.27l-0.16,0.12l0.03,0.24l-0.13,0.05l-0.05,0.65l-0.22,0.57l0.02,0.09l0.33,0.11l0.23,1.01l-0.15,0.27l0.43,0.45l-0.08,0.23l-0.57,-0.12l-0.09,0.19l-0.15,0.04l-0.01,0.39ZM206.15,574.28l-0.13,-0.03l0.0,-0.02l0.15,-0.04l-0.02,0.09ZM205.18,574.32l-0.02,0.0l0.01,-0.01l0.01,0.0ZM204.96,570.25l-0.05,-0.24l0.09,0.22l-0.04,0.01ZM205.25,569.02l-0.25,0.19l-0.3,-0.19l-0.18,-0.37l-0.42,-0.07l0.04,-0.08l0.41,0.09l0.15,-0.2l0.31,0.17l0.28,-0.13l0.03,0.52l-0.07,0.07ZM198.99,558.2l0.09,-0.07l0.23,0.49l-0.21,-0.07l-0.11,-0.35ZM199.36,558.71l0.38,0.44l0.56,-0.45l-0.44,-1.09l0.59,0.02l0.03,-0.77l0.24,0.32l0.51,0.01l0.2,-0.29l0.29,-0.06l0.19,0.34l0.24,0.12l0.18,0.27l-0.28,0.14l-0.69,-0.17l-0.13,0.26l-0.17,-0.1l-0.57,0.26l0.08,0.42l0.27,0.54l0.56,0.48l0.25,0.5l0.39,0.36l-0.12,0.15l0.09,0.44l-0.94,-1.32l-0.28,-0.2l-0.61,0.35l0.06,0.34l-0.2,0.14l0.2,0.7l0.21,0.07l-0.14,0.51l0.2,0.13l0.05,0.18l-0.28,0.06l-0.12,-0.56l-0.37,-0.57l0.25,-0.15l-0.16,-0.49l-0.21,-0.17l-0.02,-0.33l-0.28,-0.49l-0.01,-0.31ZM202.27,558.92l0.38,-0.28l0.43,-0.1l0.76,0.39l0.05,0.17l0.43,0.38l-0.11,0.18l-0.41,-0.45l-0.58,-0.11l-0.2,0.41l0.19,0.59l-0.97,-1.19ZM202.11,560.96l0.33,0.1l0.14,0.21l0.26,0.09l0.85,-0.01l-0.23,1.25l-0.31,-0.14l-1.03,-1.5ZM201.29,562.69l0.18,0.07l0.33,-0.09l0.0,0.25l0.48,0.21l0.22,0.28l-0.11,0.08l0.12,0.52l-0.05,0.29l0.23,0.34l-0.06,0.8l0.13,0.32l-0.1,0.03l-0.14,0.56l-0.14,0.99l0.02,0.73l-0.25,0.74l-0.22,-0.02l-0.19,0.34l-0.01,0.5l-0.44,1.06l-0.2,-0.86l-0.08,-0.92l0.3,-0.02l0.63,-0.49l-0.06,-0.73l-0.22,-0.05l0.02,-0.45l-0.19,-0.26l-0.25,-0.01l-0.16,-0.59l-0.47,-0.03l0.24,-0.17l0.01,-0.27l0.65,-0.05l0.22,-0.32l-0.13,-0.51l-0.53,-0.24l0.57,-0.27l-0.34,-1.16l-0.33,-0.12l0.28,-0.19l0.04,-0.3ZM199.27,560.14l0.0,0.0l-0.01,0.0l0.0,-0.0ZM199.1,564.31l0.25,-0.07l0.1,-0.06l-0.12,0.15l-0.23,-0.02ZM199.63,563.32l0.06,-0.2l-0.05,-0.13l0.09,0.13l-0.1,0.2ZM162.15,525.49l0.25,-0.21l0.11,-0.0l-0.2,0.31l-0.16,-0.1ZM136.7,524.68l0.22,0.25l0.59,-0.1l0.04,-0.44l0.61,0.38l0.29,-0.23l0.18,-0.67l0.1,-0.05l0.25,0.13l0.16,-0.06l-0.14,0.5l0.39,0.72l-0.5,0.38l-0.19,-0.72l-0.36,-0.02l-0.69,0.57l-0.12,-0.24l-0.46,0.06l-0.15,0.16l-0.22,-0.52l-0.13,-0.04l0.04,-0.14l0.07,0.07ZM139.88,525.13l-0.03,-0.01l0.02,-0.02l0.01,0.03ZM127.78,528.13l0.49,-0.13l0.09,0.05l-0.34,0.29l-0.18,0.01l-0.06,-0.22ZM128.01,526.82l0.09,-0.93l-0.34,-0.41l0.27,-0.06l0.19,-0.29l0.22,-0.02l0.24,-0.25l0.44,0.22l0.16,-0.11l0.5,0.1l0.1,-0.23l0.15,-0.03l0.38,0.09l0.25,0.25l-0.43,0.12l0.02,0.5l0.44,0.31l-0.25,0.64l0.13,1.11l0.36,0.59l0.43,0.15l-0.37,0.07l-0.19,0.39l-0.11,-0.05l0.03,-0.41l-0.23,-0.36l-0.69,-0.05l-0.43,-0.59l-0.47,-0.4l-0.65,-0.34l-0.26,-0.01ZM131.4,528.57l0.28,-0.39l-0.19,-0.6l0.07,-0.55l0.15,-0.28l0.3,0.13l0.31,-0.27l0.44,0.14l0.52,-0.02l0.3,-0.22l0.26,0.17l0.23,-0.03l0.19,0.33l0.66,-0.29l0.18,-0.29l0.28,0.22l-0.13,0.25l-0.0,0.39l0.26,0.35l0.46,-0.02l0.28,-0.39l0.28,0.18l0.44,-0.16l0.31,0.17l0.08,-0.05l-0.05,0.23l-0.73,0.21l-0.21,0.41l0.22,0.27l-0.07,0.65l0.3,0.23l0.29,0.05l-0.5,0.18l-0.19,-0.24l-0.3,-0.08l-0.09,-0.22l-0.26,-0.17l-0.13,-0.32l-0.96,-0.67l-0.23,0.18l-0.65,0.18l-0.19,0.27l0.12,0.28l-0.38,-0.39l-0.44,0.12l-0.19,0.46l-0.91,-0.26l-0.07,0.08l-0.35,-0.23ZM134.19,529.01l0.07,-0.02l0.09,0.03l-0.15,-0.01l-0.01,0.0ZM134.4,529.04l0.27,0.1l0.23,0.58l-0.25,-0.11l0.04,-0.1l-0.29,-0.47ZM135.83,526.14l0.09,-0.06l0.01,0.01l-0.11,0.04ZM132.89,525.47l-0.57,-0.58l0.11,-0.17l0.27,-0.08l0.34,0.07l0.08,0.37l-0.22,0.39ZM98.14,450.76l0.34,-0.44l0.56,-0.16l0.06,0.49l-0.13,0.02l0.1,0.29l0.7,0.54l0.29,0.6l0.36,0.4l-0.66,-0.36l-1.21,-0.26l-0.45,-0.8l0.04,-0.32ZM100.81,452.78l1.01,0.2l0.26,0.2l0.38,0.11l0.3,0.33l0.23,0.8l-0.26,0.19l-0.26,0.4l0.43,0.51l0.28,0.71l0.39,0.33l-0.09,0.31l0.05,0.32l0.21,0.31l0.5,0.32l0.0,0.35l-0.82,-0.26l-0.09,0.09l-0.51,-0.1l-0.33,0.07l-0.08,-0.93l-0.57,-1.1l0.12,-0.48l-0.3,-0.98l-0.39,-0.84l-0.28,-0.35l-0.01,-0.23l-0.17,-0.28ZM104.84,458.76l0.28,0.01l0.41,0.53l-0.25,0.05l-0.44,-0.59ZM96.98,478.79l0.06,-0.22l1.37,1.26l0.38,-0.0l0.32,-0.21l0.21,0.06l0.2,0.25l0.72,-0.01l-0.01,0.32l0.69,0.19l0.2,0.27l-0.05,0.32l0.09,0.16l0.27,0.29l0.49,0.19l0.07,0.2l-0.23,0.33l-0.32,0.22l-0.42,1.13l-0.7,-0.22l-0.36,-0.42l-0.19,0.11l-0.26,-0.08l-0.29,-0.35l-0.42,-0.13l-0.26,-0.41l-0.51,-0.41l-0.61,-1.56l0.07,-0.19l-0.47,-0.5l0.04,-0.31l-0.09,-0.3ZM97.68,522.17l0.05,-0.07l0.04,-0.11l0.07,0.18l-0.15,-0.01ZM98.03,522.39l0.04,0.02l-0.0,0.03l-0.03,-0.05ZM80.23,514.88l0.08,-0.15l0.69,0.24l0.38,-0.02l1.55,-0.69l0.18,0.0l0.16,0.37l0.44,0.39l0.27,0.08l0.4,-0.16l0.54,0.24l0.6,-0.01l0.53,0.26l0.44,0.41l0.03,0.72l-0.26,0.4l-0.13,0.44l-0.31,0.06l-0.22,0.21l-0.27,0.01l-0.3,-0.08l-0.46,-0.58l-1.38,-0.93l-0.45,-0.11l-0.76,0.03l-0.42,0.3l-0.21,0.03l-0.91,-0.42l-0.33,-0.34l0.14,-0.67ZM74.26,514.0l0.03,-0.25l0.32,0.05l0.02,0.35l-0.37,-0.15ZM64.81,513.23l0.09,-0.01l0.13,0.09l-0.17,0.0l-0.05,-0.08ZM70.29,514.35l-0.12,-0.05l-0.16,0.39l-0.25,-0.27l-0.36,0.08l0.24,-0.12l0.32,0.02l0.41,-0.61l-0.31,-0.35l-0.31,-0.63l-0.3,-0.24l0.05,-0.29l0.13,-0.06l0.67,0.13l0.43,0.28l0.16,0.24l-0.29,0.4l0.11,0.51l-0.06,0.17l-0.33,0.11l-0.04,0.31ZM68.8,514.2l-0.28,0.32l-0.09,-0.1l0.24,-0.29l-0.1,-0.27l0.19,-0.02l0.04,0.36ZM59.97,511.71l0.2,-0.13l0.18,-0.38l0.48,-0.06l0.27,0.03l0.13,0.21l0.36,0.14l0.1,0.15l-0.09,0.12l-0.23,-0.03l-0.61,0.18l-0.41,-0.22l-0.36,0.0ZM62.67,511.56l0.07,-0.35l0.28,-0.32l0.75,-0.02l0.67,0.35l0.17,0.49l-0.28,0.29l-1.25,-0.24l-0.41,-0.2ZM37.79,498.38l0.07,-0.23l-0.1,-0.23l0.32,0.03l0.09,0.49l-0.29,0.05l-0.1,-0.11ZM36.41,498.87l-0.02,0.01l0.01,-0.02l0.01,0.01ZM36.85,498.71l-0.0,-0.07l-0.0,-0.01l0.02,0.01l-0.01,0.07ZM30.2,493.17l-0.02,-0.03l0.04,-0.04l0.0,0.08l-0.02,-0.0ZM26.76,492.74l0.41,-0.33l0.12,0.35l-0.02,0.08l-0.25,0.01l-0.26,-0.12ZM25.01,490.83l0.02,0.0l-0.01,0.01l-0.02,-0.01ZM23.18,488.38l-0.09,0.01l0.05,-0.17l0.04,0.08l0.01,0.08ZM23.19,487.9l-0.06,0.1l-0.14,-0.54l0.19,0.18l0.0,0.26ZM15.95,478.85l0.25,0.07l-0.02,0.19l-0.14,-0.01l-0.09,-0.25ZM1.23,449.67l0.23,0.17l0.21,0.66l0.47,0.45l-0.25,0.16l0.12,0.39l-0.24,-0.38l-0.54,-0.19l-0.11,-0.3l0.19,-0.08l0.2,-0.42l-0.28,-0.47Z", name: "Alaska" }, "US-NJ": { path: "M801.67,165.24l1.31,-1.55l0.48,-1.57l0.5,-0.62l0.54,-1.45l0.11,-2.05l0.68,-1.35l0.92,-0.71l14.12,4.17l-0.3,5.66l-0.51,0.83l-0.13,-0.3l-0.65,-0.07l-0.34,0.44l-0.56,1.46l-0.46,2.72l0.26,1.55l0.63,0.61l1.06,0.15l1.23,-0.43l2.46,0.29l0.66,1.87l-0.2,4.55l0.29,0.47l-0.54,0.44l0.27,0.81l-0.72,0.74l0.03,0.35l0.43,0.22l-0.21,0.6l0.48,0.6l-0.17,3.8l0.59,0.52l-0.36,1.36l-1.14,1.82l-0.11,0.94l-1.36,0.07l0.09,1.21l0.64,0.83l-0.82,0.56l-0.18,1.15l1.05,0.77l-0.31,0.29l-0.17,-0.44l-0.53,-0.18l-0.5,0.22l-0.44,1.51l-1.28,0.61l-0.2,0.45l0.46,0.55l0.8,0.06l-0.66,1.26l-0.26,1.5l-0.68,0.65l0.19,0.48l0.4,0.04l-0.89,1.57l0.07,0.95l-1.56,1.66l-0.17,-1.65l0.33,-2.07l-0.11,-0.87l-0.58,-0.82l-0.89,-0.28l-1.11,0.34l-0.81,-0.35l-1.51,0.88l-0.31,-0.71l-1.62,-0.96l-1.0,0.04l-0.65,-0.71l-0.7,0.07l-3.24,-2.03l-0.06,-1.72l-1.02,-0.94l0.48,-0.68l0.0,-0.88l0.43,-0.83l-0.12,-0.73l0.51,-1.19l1.2,-1.16l2.6,-1.49l0.54,-0.86l-0.38,-0.85l0.5,-0.37l0.47,-1.44l1.24,-1.7l2.52,-2.22l0.18,-0.67l-0.47,-0.82l-4.26,-2.78l-0.75,-1.05l-0.9,0.24l-0.48,-0.33l-1.24,-2.46l-1.62,-0.02l-1.0,-3.45l1.02,-1.03l0.36,-2.23l-1.87,-1.91Z", name: "New Jersey" }, "US-ME": { path: "M837.04,56.27l0.86,-1.15l1.42,1.7l0.84,0.04l0.39,-2.12l-0.46,-2.19l1.7,0.36l0.73,-0.42l0.21,-0.52l-0.32,-0.7l-1.18,-0.47l-0.44,-0.62l0.19,-1.43l0.86,-2.02l2.08,-2.25l0.01,-0.98l-0.52,-0.93l1.02,-1.64l0.39,-1.51l-0.22,-0.91l-1.02,-0.35l-0.07,-1.42l-0.4,-0.43l0.55,-0.96l-0.04,-0.63l-1.0,-1.26l0.13,-1.73l0.37,-0.63l-0.15,-0.97l1.22,-1.93l-0.96,-6.17l5.58,-18.88l2.25,-0.23l1.15,3.18l0.55,0.43l2.54,0.56l1.83,-1.73l1.68,-0.83l1.24,-1.72l1.25,-0.12l0.64,-0.47l0.25,-1.43l0.42,-0.3l1.36,0.04l3.68,1.41l1.14,0.96l2.36,1.05l8.38,22.7l0.64,0.65l-0.25,0.95l0.72,1.02l-0.1,1.41l0.54,1.3l0.67,0.47l1.05,-0.12l1.12,0.58l0.97,0.1l2.47,-0.53l0.4,0.95l-0.59,1.42l1.69,1.86l0.28,2.69l2.72,1.68l0.98,-0.1l0.47,-0.74l-0.06,-0.5l1.21,0.25l2.95,2.8l0.04,0.47l-0.52,-0.14l-0.38,0.41l0.18,0.77l-0.76,-0.15l-0.35,0.4l0.15,0.63l1.84,1.62l0.16,-0.88l0.39,-0.17l0.8,0.32l0.27,-0.83l0.33,0.41l-0.31,0.85l-0.53,0.19l-1.21,3.24l-0.62,-0.04l-0.31,0.44l-0.55,-1.05l-0.72,0.03l-0.3,0.5l-0.56,0.06l-0.02,0.49l0.58,0.85l-0.91,-0.45l-0.32,0.63l0.26,0.52l-1.2,-0.28l-0.37,0.3l-0.37,0.78l0.08,0.45l0.44,0.08l0.07,1.21l-0.37,-0.57l-0.54,-0.06l-0.39,0.45l-0.2,1.09l-0.48,-1.53l-1.14,0.01l-0.68,0.75l-0.36,1.48l0.59,0.63l-0.83,0.63l-0.7,-0.46l-0.73,1.04l0.1,0.64l0.99,0.63l-0.35,0.21l-0.1,0.82l-0.45,-0.2l-0.85,-1.82l-1.03,-0.46l-0.39,0.22l-0.45,-0.41l-0.57,0.63l-1.25,-0.19l-0.26,0.86l0.78,0.4l0.01,0.37l-0.51,-0.06l-0.56,0.4l-0.09,0.69l-0.49,-1.02l-1.17,-0.02l-0.16,0.64l0.52,0.87l-1.44,0.96l0.84,1.11l0.08,1.06l0.53,0.65l-0.96,-0.41l-0.96,0.22l-1.2,-0.42l-0.17,-0.91l0.74,-0.28l-0.08,-0.55l-0.43,-0.5l-0.67,-0.12l-0.3,0.33l-0.23,-2.37l-0.37,-0.22l-1.1,0.26l0.04,1.96l-1.85,1.92l0.02,0.49l1.25,1.47l-0.64,0.96l-0.19,3.87l0.77,1.41l-0.57,0.53l0.0,0.63l-0.51,0.55l-0.8,-0.19l-0.45,0.93l-0.62,-0.06l-0.41,-1.15l-0.73,-0.21l-0.52,1.03l0.11,0.69l-0.45,0.59l0.12,2.41l-0.95,-1.01l0.14,-1.28l-0.24,-0.59l-0.81,0.29l-0.08,2.01l-0.44,-0.25l0.15,-1.55l-0.48,-0.4l-0.68,0.49l-0.76,3.04l-0.75,-1.84l0.07,-1.51l-0.77,0.05l-1.06,2.76l0.51,0.55l0.73,-0.25l0.91,2.04l-0.28,-0.59l-0.52,-0.23l-0.66,0.3l-0.07,0.64l-1.38,-0.1l-2.16,3.18l-0.53,1.86l0.29,0.6l-0.68,0.65l0.51,0.43l0.91,-0.21l0.37,0.92l-0.77,0.3l-0.2,0.39l-0.4,-0.04l-0.51,0.57l-0.14,1.03l0.67,1.37l-0.08,0.68l-0.79,1.29l-0.94,0.61l-0.41,1.07l-0.1,1.28l0.44,0.9l-0.4,2.81l-0.8,-0.33l-0.41,0.6l-1.02,-0.76l-0.57,-1.86l-0.93,-0.37l-2.36,-1.99l-0.76,-3.45l-13.25,-35.55ZM863.92,80.85l0.09,0.26l-0.08,0.23l0.03,-0.29l-0.04,-0.2ZM865.33,81.07l0.47,0.7l-0.04,0.47l-0.32,-0.25l-0.1,-0.93ZM867.67,77.93l0.43,0.83l-0.16,0.14l-0.42,-0.19l0.16,-0.77ZM877.04,64.5l-0.14,0.2l-0.03,-0.24l0.17,0.04ZM873.08,74.84l0.01,0.02l-0.03,0.03l0.01,-0.06ZM882.73,63.41l0.04,-1.17l0.41,-0.66l-0.18,-0.44l0.4,-0.5l0.62,-0.11l1.54,1.36l-0.49,0.65l-1.08,0.04l-0.27,0.43l0.57,1.3l-0.99,-0.18l-0.14,-0.57l-0.44,-0.16ZM879.31,65.98l0.61,0.41l-0.35,0.29l0.15,0.96l-0.39,-0.63l0.19,-0.53l-0.21,-0.5ZM878.07,70.51l0.09,-0.01l0.48,-0.08l-0.25,0.46l-0.32,-0.37Z", name: "Maine" }, "US-MD": { path: "M740.69,219.66l-2.04,-10.06l19.85,-4.49l-0.66,1.29l-0.94,0.08l-1.55,0.81l0.16,0.7l-0.42,0.49l0.23,0.78l-1.04,0.09l-0.72,0.41l-1.48,0.03l-1.14,-0.39l0.21,-0.36l-0.3,-0.49l-1.11,-0.31l-0.47,1.8l-1.63,2.85l-1.37,-0.39l-1.03,0.62l-0.41,1.26l-1.6,1.93l-0.36,1.04l-0.88,0.45l-1.3,1.87ZM760.76,204.58l37.02,-9.15l8.22,26.4l0.48,0.26l8.48,-2.22l0.24,0.71l0.6,0.03l0.38,0.95l0.52,-0.05l-0.38,1.96l-0.12,-0.26l-0.47,0.06l-0.73,0.86l-0.17,2.7l-0.6,0.19l-0.36,0.71l-0.02,1.47l-3.64,1.51l-0.37,0.76l-2.25,0.43l-0.56,0.65l-0.3,-1.09l0.5,-0.31l0.87,-1.85l-0.4,-0.51l-0.45,0.12l0.08,-0.5l-0.44,-0.42l-2.29,0.63l0.3,-0.6l1.15,-0.83l-0.17,-0.69l-1.36,-0.18l0.38,-2.24l-0.18,-1.02l-0.91,0.16l-0.53,1.76l-0.34,-0.69l-0.62,-0.07l-0.44,0.47l-0.5,1.39l0.53,1.02l-2.87,-2.14l-0.43,-0.19l-0.61,0.36l-0.73,-0.76l0.37,-0.84l-0.04,-0.84l0.76,-0.6l-0.08,-1.35l2.08,0.1l0.89,-0.45l0.36,-0.9l-0.32,-1.42l-0.43,-0.05l-0.54,1.31l-0.39,0.09l-1.05,-0.72l0.06,-0.4l-0.52,-0.28l-0.55,0.23l-0.22,-0.68l-0.73,0.1l-0.12,0.28l0.07,-0.74l0.65,-0.01l0.49,-0.37l0.22,-1.04l-0.54,-0.55l-0.57,0.71l-0.2,-0.53l0.88,-0.87l-0.25,-0.65l-0.54,-0.08l-0.09,-0.48l-0.42,-0.27l-0.35,0.15l-0.66,-0.53l0.89,-0.8l-0.24,-1.03l0.94,-2.38l-0.17,-0.43l-0.46,0.02l-0.66,0.66l-0.56,-0.16l-0.61,0.95l-0.74,-0.6l0.49,-3.59l0.6,-0.52l0.06,-0.61l4.22,-1.21l0.12,-0.7l-0.51,-0.3l-2.38,0.43l0.76,-1.27l1.42,-0.05l0.35,-0.5l-0.99,-0.67l0.44,-1.9l-0.63,-0.32l-1.2,1.82l0.05,-1.5l-0.59,-0.34l-0.68,1.1l-1.62,0.67l-0.31,1.65l0.39,0.54l0.65,0.12l-1.45,1.92l-0.2,-1.64l-0.64,-0.42l-0.61,0.73l0.07,1.45l-0.85,-0.29l-1.16,0.64l0.02,0.71l1.01,0.27l-0.37,0.54l-0.83,0.22l-0.05,0.34l-0.44,-0.04l-0.35,0.64l1.15,1.2l-1.88,-0.67l-1.21,0.59l0.16,0.69l1.56,0.58l0.91,0.93l0.72,-0.12l0.56,0.75l-0.98,-0.07l-1.15,1.36l0.32,0.77l1.57,0.92l-0.67,0.12l-0.21,0.41l0.8,1.08l-0.32,0.56l0.32,0.97l0.58,0.45l-0.52,1.09l0.99,1.25l0.96,3.54l0.61,0.84l2.07,1.63l0.42,0.81l-0.58,0.17l-0.64,-0.75l-1.45,-0.31l-1.64,-1.26l-1.33,-3.16l-0.73,-0.68l-0.3,0.37l0.11,0.7l1.28,3.54l1.14,1.31l2.05,0.74l1.03,1.11l0.64,0.14l0.91,-0.36l-0.03,1.11l1.66,1.54l0.1,1.1l-0.89,-0.35l-0.51,-1.29l-0.63,-0.45l-0.45,0.04l-0.13,0.44l0.27,0.79l-0.67,0.09l-0.65,-0.82l-1.41,-0.67l-2.39,0.63l-0.7,-0.67l-0.71,-1.49l-1.26,-0.71l-0.46,0.14l0.01,0.48l1.13,1.84l-0.22,-0.08l-1.62,-1.2l-1.66,-2.28l-0.45,-0.02l-0.37,1.44l-0.32,-0.79l-0.74,0.2l-0.21,0.27l0.33,0.72l-0.11,0.56l-0.76,0.53l-0.94,-1.5l0.07,-1.68l0.76,-0.6l-0.19,-0.74l0.78,-0.47l0.21,-1.61l1.07,-1.03l-0.0,-1.03l-0.46,-0.86l1.27,-2.19l-0.14,-0.54l-2.72,-1.68l-0.56,0.14l-0.63,1.08l-1.87,-0.26l-0.52,-0.83l-1.11,-0.51l-2.41,0.07l-1.25,-0.91l0.61,-1.35l-0.4,-0.97l-1.19,-0.3l-0.89,-0.66l-2.69,0.07l-0.36,-0.23l-0.11,-1.26l-1.04,-0.6l0.09,-1.2l-0.51,-0.29l-0.49,0.19l-0.23,-0.64l-0.52,-0.13l0.26,-0.83l-0.45,-0.58l-0.69,-0.12l-1.81,0.67l-2.24,-1.27ZM790.04,212.1l1.14,0.18l0.3,0.17l-0.52,0.29l-0.93,-0.63ZM803.05,225.67l-0.02,0.33l-0.21,-0.15l0.23,-0.19ZM807.02,229.13l-0.16,0.3l-0.13,0.07l0.02,-0.24l0.26,-0.12ZM797.57,220.61l-0.06,0.01l-0.09,0.03l0.12,-0.07l0.03,0.02ZM797.24,220.74l-0.26,0.56l-0.18,0.12l0.15,-0.61l0.29,-0.07ZM795.94,216.76l-0.29,0.29l-0.72,-0.27l0.02,-0.33l0.26,-0.36l0.72,0.67ZM794.58,212.85l-0.34,0.78l-0.59,0.23l0.02,-1.48l0.92,0.47ZM802.18,228.89l0.1,-0.11l0.12,0.08l-0.22,0.03Z", name: "Maryland" }, "US-AR": { path: "M498.73,376.99l-1.42,-38.01l-4.48,-23.98l37.68,-2.58l39.02,-3.58l0.8,1.6l1.01,0.7l0.11,1.77l-0.77,0.57l-0.22,0.94l-1.42,0.93l-0.29,1.04l-0.83,0.54l-1.19,2.59l0.02,0.7l0.53,0.26l10.94,-1.46l0.86,0.93l-1.18,0.37l-0.52,0.96l0.25,0.49l0.84,0.41l-3.6,2.7l0.02,0.84l0.83,1.04l-0.6,1.15l0.62,0.97l-1.42,0.74l-0.11,1.44l-1.45,2.09l0.12,1.64l0.91,3.1l-0.15,0.27l-1.08,-0.01l-0.33,0.26l-0.51,1.73l-1.52,0.95l-0.04,0.51l0.79,0.91l0.05,0.65l-1.11,1.21l-2.02,1.13l-0.21,0.62l0.43,1.0l-0.19,0.27l-1.23,0.03l-0.42,0.67l-0.32,1.89l0.47,1.57l0.02,3.08l-1.27,1.09l-1.54,0.13l0.23,1.49l-0.21,0.48l-0.93,0.25l-0.59,1.77l-1.49,1.19l-0.02,0.93l1.39,0.76l-0.03,0.7l-1.23,0.3l-2.24,1.23l0.03,0.67l0.99,0.82l-0.45,1.14l0.53,1.38l-1.09,0.62l-1.9,2.57l0.52,0.7l1.0,0.49l0.01,0.58l-0.98,0.29l-0.42,0.64l0.51,0.84l1.63,1.01l0.06,1.77l-0.59,0.98l-0.09,0.84l0.29,0.4l1.05,0.39l0.5,2.17l-1.09,1.01l0.06,2.11l-51.46,4.07l-0.83,-11.53l-1.18,-0.85l-0.9,0.16l-0.83,-0.35l-0.93,0.39l-1.22,-0.33l-0.57,0.72l-0.47,0.01l-0.49,-0.48l-0.82,-0.15l-0.63,-1.0Z", name: "Arkansas" }, "US-MA": { path: "M877.65,135.84l1.07,-0.19l0.85,-1.13l0.45,0.58l-1.06,0.64l-1.31,0.1ZM831.87,132.65l-0.46,-0.28l-10.4,2.53l-0.25,-0.18l-0.27,-14.8l29.99,-7.86l1.53,-1.8l0.34,-1.48l0.95,-0.35l0.61,-1.04l1.3,-1.08l1.23,-0.08l-0.44,1.05l1.36,0.55l-0.16,0.61l0.44,0.83l1.0,0.36l-0.06,0.32l0.39,0.28l1.31,0.19l-0.16,0.56l-2.52,1.87l-0.05,1.07l0.45,0.16l-1.11,1.41l0.23,1.08l-1.01,0.96l0.58,1.41l1.4,0.45l0.5,0.63l1.36,-0.57l0.33,-0.59l1.2,0.09l0.79,0.47l0.23,0.68l1.78,1.37l-0.07,1.25l-0.36,0.29l0.11,0.61l1.58,0.82l1.19,-0.14l0.68,1.2l0.22,1.14l0.89,0.68l1.33,0.41l1.48,-0.12l0.43,0.38l1.05,-0.23l3.35,-2.76l0.39,-0.69l0.54,0.02l0.56,1.86l-3.32,1.52l-0.94,0.82l-2.75,0.98l-0.49,1.65l-1.94,1.27l-0.81,-2.53l0.11,-1.35l-0.55,-0.31l-0.5,0.39l-0.93,-0.11l-0.3,0.51l0.25,0.92l-0.26,0.79l-0.4,0.06l-0.63,1.1l-0.6,-0.2l-0.5,0.48l0.22,1.86l-0.9,0.87l-0.63,-0.8l-0.47,0.01l-0.11,0.55l-0.26,0.03l-0.7,-2.02l-1.02,-0.35l0.44,-2.5l-0.21,-0.4l-0.77,0.4l-0.29,1.47l-0.69,0.2l-1.4,-0.64l-0.78,-2.12l-0.8,-0.22l-0.78,-2.15l-0.49,-0.24l-6.13,2.0l-0.3,-0.15l-14.84,4.19l-0.28,0.5ZM860.89,110.08l-0.02,-0.37l-0.14,-0.48l0.51,0.23l-0.35,0.62ZM876.37,122.8l-0.42,-0.66l0.06,-0.05l0.44,0.67l-0.09,0.05ZM875.46,121.25l-0.86,-0.11l-0.94,-1.42l1.44,1.0l0.36,0.54ZM871.54,119.46l-0.06,0.25l-0.35,-0.2l0.13,0.02l0.29,-0.07ZM871.87,135.18l0.01,-0.02l0.01,0.04l-0.02,-0.02ZM867.18,137.63l0.78,-0.56l0.28,-1.17l0.84,-1.19l0.17,0.26l0.46,-0.11l0.34,0.52l0.71,-0.01l0.19,0.38l-2.11,0.73l-1.34,1.31l-0.33,-0.17Z", name: "Massachusetts" }, "US-AL": { path: "M608.66,337.47l25.17,-2.91l19.4,-2.75l14.04,43.3l0.79,1.4l0.22,1.05l1.17,1.59l0.59,1.87l2.24,2.5l0.92,1.8l-0.11,2.13l1.8,1.13l-0.17,0.74l-0.63,0.1l-0.16,0.7l-0.98,0.84l-0.22,2.29l0.25,1.48l-0.77,2.3l-0.14,1.84l1.1,2.94l1.21,1.52l0.53,1.6l-0.08,5.02l-0.25,0.81l0.48,2.03l1.35,1.16l1.14,2.07l-47.65,6.92l-0.42,0.61l-0.08,2.99l2.64,2.75l2.0,0.97l-0.34,2.7l0.56,1.6l0.43,0.39l-0.94,1.69l-1.24,1.0l-1.13,-0.75l-0.34,0.49l0.66,1.46l-2.82,1.05l0.29,-0.64l-0.45,-0.86l-0.99,-0.77l-0.1,-1.11l-0.57,-0.22l-0.53,0.61l-0.32,-0.1l-0.89,-1.53l0.41,-1.67l-0.97,-2.21l-0.46,-0.45l-0.86,-0.2l-0.3,-0.89l-0.56,-0.17l-0.37,0.61l0.14,0.35l-0.77,3.1l-0.01,5.08l-0.59,0.0l-0.24,-0.71l-2.22,-0.44l-1.65,0.31l-5.46,-31.99l-0.99,-66.49l-0.02,-0.37l-1.07,-0.63l-0.69,-1.02Z", name: "Alabama" }, "US-MO": { path: "M468.68,225.54l24.71,-0.73l18.94,-1.43l22.11,-2.58l0.42,0.35l0.39,0.91l2.43,1.65l0.29,0.74l1.21,0.87l-0.51,1.37l-0.1,3.21l0.78,3.65l0.95,1.44l0.03,1.59l1.11,1.37l0.46,1.55l4.96,4.1l1.06,1.69l4.93,3.31l0.7,1.15l0.27,1.62l0.5,0.82l-0.18,0.69l0.47,1.8l0.97,1.63l0.77,0.73l1.04,0.16l0.83,-0.56l0.84,-1.4l0.57,-0.19l2.41,0.61l1.68,0.76l0.84,0.77l-0.97,1.95l0.26,2.28l-2.37,6.86l0.01,1.02l0.7,1.92l4.67,4.05l1.99,1.05l1.46,0.09l1.66,1.31l1.91,0.8l1.51,2.11l2.04,0.83l0.42,2.96l1.72,2.9l-1.1,1.94l0.18,1.38l0.75,0.33l2.31,4.25l1.94,0.92l0.55,-0.32l0.0,-0.65l0.87,1.1l1.07,-0.08l0.14,1.85l-0.37,1.07l0.53,1.6l-1.07,3.86l-0.51,0.07l-1.37,-1.13l-0.65,0.13l-0.78,3.34l-0.52,0.74l0.13,-1.06l-0.56,-1.09l-0.97,-0.2l-0.74,0.63l0.02,1.05l0.53,0.66l-0.04,0.7l0.58,1.34l-0.2,0.4l-1.2,0.39l-0.17,0.41l0.15,0.55l0.86,0.84l-1.71,0.37l-0.14,0.62l1.53,1.97l-0.89,0.75l-0.63,2.13l-10.61,1.42l1.06,-2.28l0.87,-0.61l0.18,-0.87l1.44,-0.96l0.25,-0.96l0.63,-0.37l0.29,-0.59l-0.22,-2.28l-1.05,-0.75l-0.2,-0.77l-1.09,-1.18l-39.24,3.61l-37.72,2.58l-3.21,-58.2l-1.03,-0.63l-1.2,-0.02l-1.52,-0.73l-0.19,-0.93l-0.76,-0.59l-0.34,-0.71l-0.36,-1.55l-0.55,-0.09l-0.3,-0.56l-1.13,-0.66l-1.4,-1.84l0.73,-0.51l0.09,-1.24l1.12,-1.27l0.09,-0.79l1.01,0.16l0.56,-0.43l-0.2,-2.24l-1.02,-0.74l-0.32,-1.1l-1.17,-0.01l-1.31,0.96l-0.81,-0.7l-0.73,-0.17l-2.67,-2.35l-1.05,-0.28l0.13,-1.6l-1.32,-1.72l0.1,-1.02l-0.37,-0.36l-1.01,-0.18l-0.59,-0.85l-0.84,-0.26l0.07,-0.53l-1.24,-2.88l-0.0,-0.74l-0.4,-0.49l-0.85,-0.29l-0.05,-0.54ZM583.77,294.59l-0.1,-0.1l-0.08,-0.15l0.11,-0.01l0.07,0.26Z", name: "Missouri" }, "US-MN": { path: "M439.34,42.76l26.81,-1.05l0.34,1.46l1.28,0.84l1.79,-0.5l1.05,-1.43l0.78,-0.31l2.13,2.19l1.71,0.28l0.31,1.2l1.83,1.4l1.79,0.48l2.64,-0.41l0.39,0.85l0.67,0.4l5.12,0.01l0.37,0.23l0.54,1.59l0.71,0.61l4.27,-0.78l0.77,-0.65l0.07,-0.69l2.43,-0.79l3.97,-0.02l1.42,0.7l3.39,0.66l-1.01,0.79l0.0,0.82l1.18,0.54l2.23,-0.16l0.52,2.08l1.58,2.29l0.71,0.05l1.03,-0.78l-0.04,-1.73l2.67,-0.46l1.43,2.17l2.01,0.79l1.54,0.18l0.54,0.57l-0.03,0.83l0.58,0.35l1.32,0.06l0.38,0.83l1.43,-0.19l1.12,0.22l2.22,-0.85l2.78,-2.55l2.49,-1.54l1.24,2.52l0.96,0.51l2.23,-0.66l0.87,0.36l5.98,-1.3l0.56,0.18l1.32,1.64l1.24,0.59l0.62,-0.01l1.61,-0.83l1.35,0.08l-0.93,1.03l-4.69,3.07l-6.35,2.82l-3.68,2.48l-2.15,2.49l-0.95,0.58l-6.63,8.66l-0.95,0.61l-1.08,1.56l-1.96,1.96l-4.17,3.55l-0.86,1.79l-0.55,0.44l-0.14,0.96l-0.78,-0.01l-0.46,0.51l0.98,12.22l-0.79,1.2l-1.05,0.08l-0.52,0.82l-0.83,0.15l-0.61,0.83l-2.06,1.19l-0.94,1.86l0.06,0.72l-1.69,2.39l-0.01,2.06l0.38,0.91l2.15,0.39l1.42,2.49l-0.52,1.92l-0.71,1.25l-0.05,2.12l0.45,1.32l-0.71,1.23l0.91,3.14l-0.51,4.08l3.95,3.03l3.02,0.4l1.89,2.25l2.87,0.5l2.45,1.93l2.39,3.59l2.64,1.8l2.09,0.09l1.07,0.71l0.88,0.1l0.82,1.36l1.03,0.45l0.23,0.39l0.28,2.03l0.68,1.3l0.39,4.82l-40.63,3.2l-40.63,2.09l-1.46,-38.98l-0.7,-1.27l-0.83,-0.78l-2.57,-0.79l-0.94,-1.91l-1.46,-1.79l0.21,-0.68l2.83,-2.34l0.97,-2.12l0.4,-2.44l-0.35,-1.58l0.23,-1.58l-0.18,-1.79l-0.5,-1.03l-0.18,-2.33l-1.81,-2.59l-0.47,-1.13l-0.21,-2.16l-0.66,-0.98l0.15,-1.66l-0.35,-1.52l0.53,-2.69l-1.08,-1.85l-0.49,-8.33l-0.42,-0.79l0.06,-3.92l-1.58,-3.96l-0.53,-0.65l-0.4,-1.37l0.05,-1.19l-0.48,-0.53l-1.36,-3.77l0.0,-3.22l-0.47,-1.97l0.27,-1.12l-0.57,-2.32l0.73,-2.56l-2.06,-6.9ZM468.97,33.61l1.22,0.46l0.99,-0.2l0.33,0.45l-0.05,1.72l-1.78,1.12l-0.15,-0.47l-0.4,-0.14l-0.16,-2.95Z", name: "Minnesota" }, "US-CA": { path: "M2.95,175.4l0.78,-1.24l0.46,0.46l0.59,-0.08l0.52,-1.18l0.8,-0.86l1.3,-0.26l0.56,-0.53l-0.15,-0.71l-0.93,-0.32l1.53,-2.79l-0.3,-1.58l0.14,-0.87l2.04,-3.3l1.31,-3.03l0.36,-2.12l-0.28,-1.0l0.16,-3.11l-1.36,-2.16l1.18,-1.38l0.67,-2.53l32.73,8.13l32.58,7.34l-13.67,64.68l25.45,34.66l36.6,51.1l13.3,17.72l-0.19,2.73l0.73,0.94l0.21,1.71l0.85,0.63l0.81,2.56l-0.07,0.91l0.63,1.46l-0.16,1.36l3.8,3.82l0.01,0.5l-1.95,1.53l-3.11,1.26l-1.2,1.99l-1.72,1.14l-0.33,0.81l0.38,1.03l-0.51,0.51l-0.1,0.9l0.08,2.29l-0.6,0.72l-0.64,2.44l-2.02,2.47l-1.6,0.14l-0.42,0.51l0.33,0.89l-0.59,1.34l0.54,1.12l-0.01,1.19l-0.78,2.68l0.57,1.02l2.74,1.13l0.34,0.83l-0.19,2.4l-1.18,0.78l-0.42,1.37l-2.27,-0.62l-1.25,0.6l-43.38,-3.34l0.17,-1.15l0.67,-0.51l-0.17,-1.06l-1.17,-1.38l-1.04,-0.15l0.23,-1.2l-0.28,-1.07l0.78,-1.33l-0.3,-4.25l-0.6,-2.3l-1.92,-4.07l-3.56,-4.07l-1.29,-1.98l-2.42,-2.11l-2.04,-3.01l-2.22,-0.89l-0.94,0.3l-0.39,0.96l-0.62,-0.73l-0.88,-0.22l-0.15,-0.31l0.61,-0.76l0.17,-1.57l-0.44,-2.06l-1.01,-1.95l-1.0,-0.74l-4.44,-0.19l-3.33,-1.81l-1.36,-1.26l-0.7,-0.12l-1.02,-1.19l-0.44,-2.6l-0.97,-0.47l-1.68,-2.31l-2.19,-1.73l-1.24,-0.41l-1.66,0.37l-1.15,-1.01l-1.25,0.03l-2.48,-1.83l-1.06,0.01l-1.49,-0.69l-4.91,-0.52l-1.12,-2.35l-1.43,-0.76l1.34,-2.45l-0.25,-1.36l0.74,-1.99l-0.63,-1.35l1.27,-2.45l0.33,-2.44l-0.99,-1.24l-1.26,-0.23l-1.4,-1.28l0.41,-1.62l0.79,-0.09l0.25,-0.45l-0.47,-2.2l-0.65,-0.77l-1.47,-0.84l-1.78,-3.97l-1.82,-1.25l-0.36,-2.75l-1.61,-2.58l0.07,-1.39l-0.33,-1.26l-1.16,-0.94l-0.74,-2.95l-2.41,-2.69l-0.55,-1.25l-0.02,-4.63l0.59,-0.57l-0.59,-1.14l0.51,-0.59l0.53,0.61l0.78,-0.02l0.84,-0.81l0.56,-1.33l0.8,0.04l0.21,-0.88l-0.43,-0.27l0.47,-1.19l-1.22,-3.68l-0.62,-0.48l-1.05,0.08l-1.93,-0.51l-1.04,-1.06l-1.89,-3.21l-0.8,-2.28l0.86,-2.39l0.09,-1.11l-0.27,-2.38l-0.32,-0.64l-0.54,-0.24l0.25,-1.19l0.69,-1.07l0.24,-2.71l0.47,-0.64l0.88,0.13l0.18,0.94l-0.7,2.13l0.05,1.15l1.18,1.32l0.55,0.1l0.58,1.28l1.16,0.78l0.4,1.01l0.89,0.41l0.83,-0.21l-0.21,-1.45l-0.65,-0.43l-0.18,-0.58l-0.24,-3.57l-0.56,-0.71l0.26,-0.69l-1.48,-1.06l0.5,-1.07l0.09,-1.06l-1.2,-1.58l0.78,-0.74l0.79,0.06l1.24,-0.73l1.25,1.02l1.87,-0.32l5.55,2.41l0.61,-0.09l0.64,-1.38l0.69,-0.04l1.92,2.53l0.25,0.18l0.63,-0.24l0.02,-0.38l-0.39,-0.93l-1.57,-1.89l-1.66,-0.32l0.27,-0.62l-0.28,-0.54l-0.48,0.09l-1.05,1.01l-1.84,-0.22l-0.43,0.28l-0.15,-0.51l-1.05,-0.4l0.24,-1.05l-0.85,-0.47l-1.0,0.28l-0.6,0.84l-1.09,0.4l-1.35,-0.9l-0.39,-0.88l-1.51,-1.44l-0.58,0.03l-0.64,0.61l-0.92,-0.12l-0.48,0.36l-0.33,1.88l0.21,0.78l-0.76,1.36l0.36,0.65l-0.47,0.59l-0.04,0.69l-2.16,-2.89l-0.44,-0.15l-0.25,0.32l-0.73,-1.0l-0.21,-1.03l-1.2,-1.17l-0.4,-1.05l-0.61,-0.18l0.65,-1.48l0.11,0.95l0.76,1.49l0.44,0.25l0.33,-0.38l-1.45,-5.21l-1.08,-1.42l-0.31,-2.68l-2.5,-2.87l-1.8,-4.48l-3.05,-5.54l1.09,-1.7l0.25,-1.97l-0.46,-2.11l-0.14,-3.61l1.34,-2.92l0.7,-0.74l-0.07,-1.54l0.42,-1.53l-0.41,-1.63l0.11,-1.96l-1.41,-4.06l-0.97,-1.15l0.06,-0.8l-0.42,-1.19l-2.91,-4.03l0.51,-1.35l-0.21,-2.69l2.23,-3.44ZM31.5,240.45l-0.06,0.1l-0.34,0.04l0.21,-0.05l0.19,-0.09ZM64.32,351.64l0.27,0.13l0.19,0.18l-0.31,-0.18l-0.15,-0.13ZM65.92,352.88l1.32,0.84l0.76,1.73l-0.89,-0.66l-1.14,0.03l-0.05,-1.94ZM62.72,363.08l1.36,2.08l0.57,0.53l-0.46,0.06l-0.83,-0.79l-0.65,-1.88ZM43.54,333.81l0.88,0.73l1.37,0.36l1.36,1.0l-2.82,-0.18l-0.71,-0.58l0.24,-0.66l-0.32,-0.67ZM47.89,335.89l0.94,-0.5l0.32,0.36l-0.37,0.14l-0.88,-0.0ZM46.05,352.4l0.29,-0.06l0.95,0.92l-0.61,-0.17l-0.64,-0.69ZM37.57,334.04l2.57,0.16l0.2,0.74l0.6,0.45l-1.21,0.64l-1.17,-0.1l-0.49,-0.44l-0.5,-1.44ZM34.94,332.37l0.06,-0.02l0.05,0.06l-0.01,-0.0l-0.1,-0.04Z", name: "California" }, "US-IA": { path: "M452.9,162.25l42.83,-2.19l40.56,-3.19l0.96,2.52l2.0,1.0l0.08,0.59l-0.9,1.8l-0.16,1.04l0.9,5.09l0.92,1.26l0.39,1.75l1.46,1.72l4.95,0.85l1.27,2.03l-0.3,1.03l0.29,0.66l3.61,2.37l0.85,2.41l3.84,2.31l0.62,1.68l-0.31,4.21l-1.64,1.98l-0.5,1.94l0.13,1.28l-1.26,1.36l-2.51,0.97l-0.89,1.18l-0.55,0.25l-4.56,0.83l-0.89,0.73l-0.61,1.71l-0.15,2.56l0.4,1.08l2.01,1.47l0.54,2.65l-1.87,3.25l-0.22,2.24l-0.53,1.42l-2.88,1.39l-1.02,1.02l-0.2,0.99l0.72,0.87l0.2,2.15l-0.58,0.23l-1.34,-0.82l-0.31,-0.76l-1.29,-0.82l-0.29,-0.51l-0.88,-0.36l-0.3,-0.82l-0.95,-0.68l-22.3,2.61l-15.13,1.17l-7.59,0.51l-20.78,0.47l-0.22,-1.06l-1.3,-0.73l-0.33,-0.67l0.58,-1.16l-0.21,-0.95l0.22,-1.39l-0.36,-2.19l-0.6,-0.73l0.07,-3.65l-1.05,-0.5l0.05,-0.91l0.71,-1.02l-0.05,-0.44l-1.31,-0.56l0.33,-2.54l-0.41,-0.45l-0.89,-0.16l0.23,-0.8l-0.3,-0.58l-0.51,-0.25l-0.74,0.23l-0.42,-2.81l0.5,-2.36l-0.2,-0.67l-1.36,-1.71l-0.08,-1.92l-1.78,-1.54l-0.36,-1.74l-1.09,-0.94l0.03,-2.18l-1.1,-1.87l0.21,-1.7l-0.27,-1.08l-1.38,-0.67l-0.42,-1.58l-0.45,-0.59l0.05,-0.63l-1.81,-1.82l0.56,-1.61l0.54,-0.47l0.73,-2.68l0.0,-1.68l0.55,-0.69l0.21,-1.19l-0.51,-2.24l-1.33,-0.29l-0.05,-0.73l0.45,-0.56l-0.0,-1.71l-0.95,-1.42l-0.05,-0.87Z", name: "Iowa" }, "US-MI": { path: "M612.24,185.84l1.83,-2.17l0.7,-1.59l1.18,-4.4l1.43,-3.04l1.01,-5.05l0.09,-5.37l-0.86,-5.54l-2.4,-5.18l0.61,-0.51l0.3,-0.79l-0.57,-0.42l-1.08,0.55l-3.82,-7.04l-0.21,-1.11l1.13,-2.69l-0.01,-0.97l-0.74,-3.13l-1.28,-1.65l-0.05,-0.62l1.73,-2.73l1.22,-4.14l-0.21,-5.34l-0.77,-1.6l1.09,-1.15l0.81,-0.02l0.56,-0.47l-0.27,-3.49l1.08,-0.11l0.67,-1.43l1.19,0.48l0.65,-0.33l0.76,-2.59l0.82,-1.2l0.56,-1.68l0.55,-0.18l-0.58,0.87l0.6,1.65l-0.71,1.8l0.71,0.42l-0.48,2.61l0.88,1.42l0.73,-0.06l0.52,0.56l0.65,-0.24l0.89,-2.26l0.66,-3.52l-0.08,-2.07l-0.76,-3.42l0.58,-1.02l2.13,-1.64l2.74,-0.54l0.98,-0.63l0.28,-0.64l-0.25,-0.54l-1.76,-0.1l-0.96,-0.86l-0.52,-1.99l1.85,-2.98l-0.11,-0.73l1.72,-0.23l0.74,-0.94l4.16,2.0l0.83,0.13l1.98,-0.4l1.37,0.39l1.19,1.04l0.53,1.14l0.77,0.49l2.41,-0.29l1.7,1.02l1.92,0.09l0.8,0.64l3.27,0.45l1.1,0.78l-0.01,1.12l1.04,1.31l0.64,0.21l0.38,0.92l-0.16,0.54l-0.66,-0.25l-0.94,0.57l-0.23,1.83l0.81,1.29l1.6,0.99l0.69,1.37l0.65,2.26l-0.12,1.73l0.77,5.57l-0.14,0.6l-0.57,0.2l-0.48,0.96l-0.75,0.08l-0.79,0.81l-0.17,4.47l-1.12,0.49l-0.18,0.82l-1.86,0.43l-0.73,0.6l-0.58,2.61l0.26,0.45l-0.21,0.52l0.25,2.58l1.38,1.31l2.9,0.84l0.91,-0.07l1.08,-1.23l0.6,-1.44l0.62,0.19l0.38,-0.24l1.01,-3.59l0.6,-1.06l-0.08,-0.52l0.97,-1.45l1.39,-0.39l1.07,-0.69l0.83,-1.1l0.87,-0.44l2.06,0.59l1.13,0.7l1.0,1.09l1.21,2.16l2.0,5.91l0.82,1.6l1.03,3.71l1.49,3.63l1.27,1.73l-0.33,3.93l0.45,2.49l-0.48,2.79l-0.34,0.44l-0.24,-0.33l-0.31,-1.71l-1.46,-0.52l-0.47,0.08l-1.48,1.36l-0.06,0.83l0.55,0.67l-0.83,0.57l-0.29,0.79l0.28,2.94l-0.49,0.75l-1.62,0.92l-1.06,1.85l-0.43,3.73l0.27,1.55l-0.33,0.93l-0.42,0.19l0.02,0.91l-0.64,0.3l-0.37,1.08l-0.52,0.52l-0.5,1.28l-0.02,1.05l-0.52,0.78l-20.37,4.25l-0.14,-0.86l-0.46,-0.33l-31.6,4.74ZM621.47,115.87l0.0,-0.07l0.12,-0.12l-0.01,0.03l-0.11,0.16ZM621.73,114.95l-0.07,-0.16l0.07,-0.14l-0.0,0.3ZM543.48,88.04l4.87,-2.38l3.55,-3.62l5.77,-1.36l1.39,-0.84l2.36,-2.71l0.97,0.04l1.52,-0.73l1.0,-2.25l2.82,-2.84l0.23,1.72l1.85,0.59l0.05,1.45l0.66,0.14l0.51,0.6l-0.17,3.14l0.44,0.95l-0.34,0.47l0.2,0.47l0.74,-0.02l1.08,-2.21l1.08,-0.9l-0.42,1.15l0.59,0.45l0.82,-0.67l0.52,-1.22l1.0,-0.43l3.09,-0.25l1.51,0.21l1.18,0.93l1.54,0.44l0.47,1.05l2.31,2.58l1.17,0.55l0.53,1.55l0.73,0.34l1.87,0.07l0.73,-0.4l1.07,-0.06l0.52,-0.65l0.88,-0.43l1.0,1.11l1.1,0.64l1.02,-0.25l0.68,-0.82l1.87,1.06l0.64,-0.34l1.65,-2.59l2.81,-1.89l1.7,-1.65l0.91,0.11l3.27,-1.21l5.17,-0.25l4.49,-2.72l2.56,-0.37l-0.01,3.24l0.29,0.71l-0.36,1.1l0.67,0.85l0.66,0.11l0.71,-0.39l2.2,0.7l1.14,-0.43l1.03,-0.87l0.66,0.48l0.21,0.71l0.85,0.22l1.27,-0.8l0.95,-1.55l0.66,-0.02l0.84,0.75l1.98,3.78l-0.86,1.04l0.48,0.89l0.47,0.36l1.37,-0.42l0.58,0.46l0.64,0.04l0.18,1.2l0.98,0.87l1.53,0.52l-1.17,0.68l-4.96,-0.14l-0.53,0.29l-1.35,-0.17l-0.88,0.41l-0.66,-0.76l-1.63,-0.07l-0.59,0.47l-0.07,1.22l-0.49,0.75l0.38,2.05l-0.92,-0.22l-0.89,-0.92l-0.77,-0.13l-1.96,-1.65l-2.41,-0.6l-1.6,0.04l-1.04,-0.5l-2.89,0.47l-0.61,0.45l-1.18,2.52l-3.48,0.73l-0.58,0.77l-2.06,-0.34l-2.82,0.93l-0.68,0.83l-0.56,2.51l-0.78,0.28l-0.81,0.87l-0.65,0.28l0.16,-1.96l-0.75,-0.91l-1.02,0.34l-0.76,0.92l-0.97,-0.39l-0.68,0.17l-0.37,0.4l0.1,0.83l-0.73,2.01l-1.2,0.59l-0.11,-1.38l-0.46,-1.06l0.34,-1.69l-0.17,-0.37l-0.66,-0.17l-0.45,0.58l-0.6,2.12l-0.22,2.57l-1.12,0.91l-1.26,3.02l-0.62,2.66l-2.56,5.33l-0.69,0.74l0.12,0.91l-1.4,-1.28l0.18,-1.75l0.63,-1.69l-0.41,-0.81l-0.62,-0.31l-1.36,0.85l-1.16,0.09l0.04,-1.29l0.81,-1.45l-0.41,-1.34l0.3,-1.09l-0.58,-0.98l0.15,-0.83l-1.9,-1.55l-1.1,-0.06l-0.59,-0.44l-0.86,0.2l-0.62,-0.2l0.3,-1.36l-0.94,-1.45l-1.13,-0.51l-2.23,-0.1l-3.2,-0.71l-1.55,0.59l-1.43,-0.42l-1.62,0.17l-4.56,-1.94l-15.37,-2.5l-2.0,-3.4l-1.88,-0.96l-0.76,0.26l-0.1,-0.3ZM603.38,98.65l-0.01,0.52l-0.46,0.32l-0.7,1.39l0.08,0.57l-0.65,-0.58l0.91,-2.16l0.83,-0.06ZM643.87,87.47l1.99,-1.52l0.17,-0.57l-0.27,-0.64l1.05,0.16l0.8,1.24l0.81,0.19l-0.27,1.08l-0.36,0.19l-1.5,-0.34l-0.77,0.45l-1.63,-0.24ZM635.6,77.64l0.56,-0.83l0.52,0.05l-0.37,1.32l0.11,0.71l-0.35,-0.9l-0.46,-0.35ZM636.53,79.17l0.09,0.14l0.01,0.01l-0.02,-0.01l-0.08,-0.14ZM637.39,81.25l0.4,0.45l0.22,0.61l-0.63,-0.71l0.01,-0.34ZM633.73,93.13l1.41,0.25l0.36,-0.18l0.4,0.21l-0.17,0.52l-0.75,0.11l-1.24,-0.9ZM618.85,96.77l0.62,2.25l-0.8,0.78l-0.39,-0.27l0.56,-2.76ZM613.26,110.83l0.47,0.3l-0.09,0.57l-0.45,-0.69l0.06,-0.17ZM612.23,113.57l0.0,-0.03l0.02,-0.04l-0.03,0.07ZM599.41,82.64l-0.23,-0.37l0.03,-0.4l0.37,0.32l-0.17,0.45ZM570.51,72.75l-0.51,-0.27l-1.16,0.06l-0.04,-1.56l1.0,-1.03l1.17,-2.09l1.84,-1.49l0.63,-0.0l0.53,-0.58l2.08,-0.89l3.34,-0.42l1.1,0.66l-0.54,0.38l-1.31,-0.12l-2.27,0.78l-0.15,0.29l0.3,0.59l0.71,0.13l-1.19,0.98l-1.4,1.89l-0.7,0.29l-0.36,1.45l-1.15,1.37l-0.66,2.04l-0.67,-0.87l0.75,-0.97l0.14,-1.95l-0.63,-0.37l-0.21,0.15l-0.6,0.92l-0.05,0.67ZM558.28,58.21l0.75,-0.98l-0.39,-0.33l0.56,-0.53l4.62,-2.98l1.97,-1.72l0.62,-0.18l-0.45,0.65l0.1,0.79l-0.43,0.49l-4.25,2.56l-0.86,0.99l0.24,0.36l-1.87,1.17l-0.61,-0.28Z", name: "Michigan" }, "US-GA": { path: "M654.05,331.71l22.02,-3.57l20.65,-3.86l-1.48,1.42l-0.51,1.68l-0.66,0.82l-0.41,1.73l0.11,1.23l0.82,0.78l1.84,0.8l1.03,0.12l2.7,2.03l0.84,0.24l1.9,-0.37l0.6,0.25l0.8,1.64l1.51,1.6l1.04,2.5l1.33,0.82l0.84,1.16l0.56,0.26l1.0,1.77l1.07,0.3l1.17,0.99l3.81,1.85l2.41,3.16l2.25,0.58l2.53,1.67l0.5,2.34l1.25,1.02l0.47,-0.16l0.31,0.49l-0.1,0.62l0.79,0.73l0.79,0.09l0.56,1.21l4.99,1.89l0.4,1.78l1.54,1.73l1.02,2.01l-0.07,0.81l0.49,0.69l0.11,1.24l1.04,0.79l1.17,0.17l1.25,0.62l0.28,0.53l0.57,0.23l1.12,2.56l0.76,0.57l0.08,2.68l0.77,1.48l1.38,0.9l1.52,-0.27l1.44,0.76l1.45,0.11l-0.59,0.78l-0.56,-0.35l-0.47,0.28l-0.4,0.99l0.62,0.91l-0.38,0.48l-1.38,-0.16l-0.77,-0.55l-0.65,0.44l0.26,0.71l-0.49,0.52l0.36,0.61l0.94,-0.04l0.5,0.29l-0.58,1.35l-1.43,0.27l-1.33,-0.44l-0.44,0.39l0.34,0.85l1.23,0.35l-0.5,0.87l0.23,0.35l-0.2,0.64l0.83,0.64l-0.33,0.44l-0.72,-0.13l-0.96,0.51l-0.1,0.62l1.09,0.45l0.05,0.95l0.48,-0.07l1.2,-1.17l-0.92,2.31l-0.31,-0.58l-0.59,-0.08l-0.44,0.72l0.29,0.7l0.98,0.83l-2.32,0.04l-0.92,-0.28l-0.63,0.3l0.06,0.63l0.55,0.34l2.76,0.24l1.07,0.66l-0.02,0.34l-0.56,0.22l-0.88,1.95l-0.5,-1.41l-0.45,-0.13l-0.6,0.33l-0.15,0.84l0.34,0.96l-0.6,0.11l-0.03,0.84l-0.3,0.16l0.07,0.46l1.33,1.15l-1.09,1.03l0.32,0.47l0.77,0.07l-0.39,0.92l0.06,0.88l-0.46,0.51l1.1,1.66l0.03,0.76l-0.79,0.33l-2.64,-0.17l-4.06,-0.96l-1.31,0.35l-0.18,0.74l-0.68,0.26l-0.35,1.25l0.28,2.08l0.95,1.36l0.13,4.25l-1.97,0.4l-0.54,-0.92l-0.12,-1.3l-1.33,-1.82l-49.22,5.14l-0.72,-0.56l-0.86,-2.7l-0.94,-1.51l-0.56,-0.38l0.16,-0.68l-0.73,-1.51l-1.82,-1.81l-0.43,-1.75l0.25,-0.8l0.06,-5.18l-0.6,-1.81l-1.19,-1.47l-1.03,-2.65l0.12,-1.65l0.78,-2.36l-0.25,-1.53l0.19,-2.11l1.62,-1.33l0.46,-1.47l-0.55,-0.61l-1.42,-0.69l0.09,-2.15l-0.97,-1.87l-2.18,-2.42l-1.03,-2.81l-0.75,-0.68l-0.17,-0.96l-0.77,-1.37l-13.99,-43.12ZM745.21,389.83l0.7,-0.26l-0.07,0.82l-0.29,-0.33l-0.34,-0.24ZM743.75,406.73l0.05,0.87l-0.01,0.46l-0.34,-0.56l0.3,-0.76Z", name: "Georgia" }, "US-AZ": { path: "M128.39,384.21l0.44,-1.81l1.29,-1.29l0.54,-1.11l0.48,-0.25l1.66,0.62l0.96,-0.03l0.52,-0.46l0.28,-1.17l1.31,-1.0l0.24,-2.73l-0.46,-1.24l-0.84,-0.66l-2.07,-0.67l-0.3,-0.61l0.8,-2.4l0.0,-1.39l-0.52,-1.2l0.57,-0.86l-0.2,-0.87l1.57,-0.27l2.29,-2.81l0.65,-2.43l0.65,-0.81l0.02,-3.17l0.55,-0.62l-0.29,-1.43l1.71,-1.14l1.03,-1.85l3.16,-1.29l2.03,-1.58l0.26,-0.53l-0.13,-1.04l-3.25,-3.49l-0.51,-0.22l0.22,-1.26l-0.66,-1.46l0.07,-0.91l-0.88,-2.76l-0.84,-0.56l-0.19,-1.65l-0.69,-0.8l0.19,-3.54l0.58,-0.87l-0.3,-0.86l1.04,-0.4l0.4,-1.42l0.14,-3.2l-0.76,-3.66l0.47,-0.88l0.29,-1.67l-0.4,-3.0l0.85,-2.56l-0.8,-1.87l-0.03,-0.92l0.43,-0.52l0.34,-1.35l2.54,-0.63l1.75,0.99l1.43,-0.19l0.96,2.24l0.79,0.71l1.54,0.14l1.01,-0.5l1.02,-2.27l0.94,-1.19l2.57,-16.95l42.43,5.78l42.56,4.67l-11.82,123.66l-36.89,-4.05l-36.34,-18.98l-28.44,-15.56Z", name: "Arizona" }, "US-MT": { path: "M166.3,57.31l0.69,-0.1l0.33,-0.38l-0.9,-1.99l0.83,-0.96l-0.39,-1.3l0.09,-0.96l-1.24,-1.93l-0.24,-1.49l-1.03,-1.33l-1.19,-2.44l3.53,-20.65l43.66,6.71l43.06,5.23l42.75,3.84l43.15,2.53l-3.53,86.06l-28.11,-1.47l-26.82,-1.91l-26.78,-2.4l-25.84,-2.79l-0.44,0.35l-1.22,10.41l-1.51,-2.01l-0.03,-0.91l-1.19,-2.35l-1.25,-0.74l-1.8,0.92l0.03,1.05l-0.72,0.42l-0.34,1.56l-2.42,-0.41l-1.91,0.57l-0.92,-0.85l-3.36,0.09l-2.38,-0.96l-1.68,0.58l-0.84,1.49l-4.66,-1.6l-1.3,0.37l-1.12,0.9l-0.31,0.67l-1.65,-1.4l0.22,-1.43l-0.9,-1.71l0.4,-0.36l0.07,-0.62l-1.17,-3.08l-1.45,-1.25l-1.44,0.36l-0.21,-0.64l-1.08,-0.9l-0.41,-1.37l0.68,-0.61l0.2,-1.41l-0.77,-2.38l-0.77,-0.35l-0.31,-1.58l-1.51,-2.54l0.23,-1.51l-0.56,-1.26l0.34,-1.4l-0.73,-0.86l0.48,-0.98l-0.21,-0.74l-1.14,-0.75l-0.13,-0.59l-0.85,-0.91l-0.8,-0.4l-0.51,0.37l-0.07,0.74l-0.7,0.27l-1.13,1.22l-1.75,0.37l-1.21,1.07l-1.08,-0.85l-0.64,-1.01l-1.06,-0.44l0.02,-0.86l0.74,-0.63l0.24,-1.06l-0.61,-1.6l0.9,-1.09l1.07,-0.08l0.83,-0.8l-0.26,-1.14l0.38,-1.07l-0.95,-0.81l-0.04,-0.81l0.66,-1.28l-0.59,-1.07l0.74,-0.07l0.38,-0.42l-0.04,-1.77l1.83,-3.73l-0.14,-1.05l0.89,-0.62l0.6,-3.17l-0.78,-0.5l-1.8,0.37l-1.33,-0.11l-0.64,-0.55l0.37,-0.83l-0.62,-0.97l-0.66,-0.23l-0.72,0.35l-0.07,-0.95l-1.74,-1.63l0.04,-1.84l-1.68,-1.82l-0.08,-0.69l-1.55,-2.88l-1.07,-1.29l-0.57,-1.63l-2.35,-1.34l-0.95,-1.95l-1.44,-1.19Z", name: "Montana" }, "US-MS": { path: "M555.49,431.1l0.67,-0.97l-1.05,-1.76l0.18,-1.63l-0.81,-0.87l1.69,-0.25l0.47,-0.54l0.4,-2.74l-0.77,-1.82l1.56,-1.79l0.25,-3.58l0.74,-2.26l1.89,-1.25l1.15,-1.97l1.4,-1.04l0.34,-0.78l-0.04,-0.99l-0.63,-0.96l1.14,-0.28l0.96,-2.59l0.91,-1.31l-0.16,-0.86l-1.54,-0.43l-0.35,-0.96l-1.83,-1.04l-0.07,-2.14l-0.93,-0.74l-0.45,-0.84l-0.02,-0.37l1.14,-0.29l0.47,-0.69l-0.26,-0.89l-1.41,-0.49l0.23,-1.77l0.98,-1.54l-0.77,-1.06l-1.08,-0.31l-0.15,-2.82l0.9,-0.54l0.23,-0.8l-0.62,-2.52l-1.25,-0.66l0.7,-1.33l-0.07,-2.22l-2.02,-1.52l1.14,-0.47l0.12,-1.41l-1.34,-0.89l1.58,-2.04l0.93,-0.31l0.36,-0.69l-0.52,-1.56l0.42,-1.35l-0.9,-0.89l1.6,-0.83l1.24,-0.27l0.59,-0.77l-0.09,-1.07l-1.41,-0.95l1.39,-1.08l0.62,-1.77l0.5,0.11l0.45,-0.28l0.34,-0.98l-0.2,-0.77l1.48,-0.43l1.22,-1.21l0.07,-3.53l-0.46,-1.53l0.36,-1.78l0.73,0.09l0.68,-0.33l0.42,-0.87l-0.41,-1.06l2.72,-1.71l0.58,-1.06l-0.29,-1.28l36.45,-4.1l0.86,1.26l0.85,0.45l0.99,66.5l5.52,32.95l-0.73,0.69l-1.53,-0.3l-0.91,-0.94l-1.32,1.06l-1.23,0.17l-2.17,-1.26l-1.85,-0.19l-0.83,0.36l-0.34,0.44l0.32,0.41l-0.56,0.36l-3.96,1.66l-0.05,-0.5l-0.96,-0.52l-1.0,0.04l-0.59,1.0l0.76,0.61l-1.59,1.21l-0.32,1.28l-0.69,0.3l-1.34,-0.06l-1.16,-1.86l-0.08,-0.89l-0.92,-1.47l-0.21,-1.01l-1.4,-1.63l-1.16,-0.54l-0.47,-0.78l0.1,-0.62l-0.69,-0.92l0.21,-1.99l0.5,-0.93l0.66,-2.98l-0.06,-1.23l-0.43,-0.29l-34.66,3.41Z", name: "Mississippi" }, "US-SC": { path: "M697.56,324.11l4.86,-2.69l1.02,-0.05l1.11,-1.38l3.93,-1.9l0.45,-0.88l0.63,0.22l22.71,-3.36l0.07,1.22l0.42,0.57l0.71,0.01l1.21,-1.3l2.82,2.54l0.46,2.48l0.55,0.52l19.74,-3.49l22.74,15.07l0.02,0.55l-2.48,2.18l-2.44,3.67l-2.41,5.72l-0.09,2.74l-1.08,-0.21l0.85,-2.73l-0.64,-0.23l-0.76,0.87l-0.56,1.38l-0.11,1.55l0.84,0.95l1.05,0.23l0.44,0.91l-0.75,0.08l-0.41,0.56l-0.87,0.02l-0.24,0.68l0.94,0.45l-1.1,1.13l-0.07,1.02l-1.34,0.63l-0.5,-0.61l-0.5,-0.08l-1.07,0.87l-0.56,1.76l0.43,0.87l-1.2,1.23l-0.61,1.44l-1.2,1.01l-0.9,-0.4l0.27,-0.6l-0.53,-0.74l-1.38,0.31l-0.11,0.43l0.36,0.77l-0.52,0.03l0.05,0.76l0.72,0.58l1.3,0.43l-0.12,0.39l-0.88,0.94l-1.22,0.23l-0.25,0.51l0.33,0.45l-2.3,1.34l-1.42,-0.85l-0.56,0.11l-0.11,0.67l1.19,0.78l-1.54,1.57l-0.72,-0.75l-0.5,0.52l-0.0,0.74l-0.69,-0.37l-0.85,-0.0l-1.34,-0.84l-0.45,0.5l0.16,0.53l-1.73,0.17l-0.44,0.37l-0.06,0.77l0.65,0.23l1.43,-0.17l-0.26,0.55l0.42,0.25l1.91,-0.15l0.11,0.22l-0.97,0.86l-0.32,0.78l0.57,0.49l0.94,-0.53l0.03,0.21l-1.12,1.09l-0.99,0.43l-0.21,-2.04l-0.69,-0.27l-0.22,-1.55l-0.88,-0.15l-0.31,0.58l0.86,2.7l-1.12,-0.66l-0.63,-1.0l-0.4,-1.76l-0.65,-0.2l-0.52,-0.63l-0.69,0.0l-0.27,0.6l0.84,1.02l0.01,0.68l1.11,1.83l-0.02,0.86l1.22,1.17l-0.62,0.35l0.03,0.98l-1.2,3.56l-1.52,-0.78l-1.52,0.26l-0.97,-0.68l-0.54,-1.03l-0.17,-2.93l-0.86,-0.75l-1.06,-2.47l-1.04,-0.95l-3.23,-1.33l-0.49,-2.65l-1.12,-2.17l-1.43,-1.58l-0.06,-1.07l-0.76,-1.21l-4.82,-1.69l-0.58,-1.27l-1.21,-0.37l0.02,-0.7l-0.53,-0.87l-0.87,0.0l-0.73,-0.61l0.03,-1.21l-0.66,-1.26l-2.7,-1.78l-2.16,-0.52l-2.36,-3.12l-3.93,-1.93l-1.22,-1.03l-0.83,-0.12l-1.05,-1.81l-0.51,-0.22l-0.91,-1.21l-1.18,-0.68l-0.99,-2.42l-1.54,-1.65l-1.02,-1.87l-1.06,-0.37l-1.93,0.37l-0.46,-0.16l-2.75,-2.19l-1.06,0.02l-1.7,-0.74l-0.52,-0.53l0.36,-2.22l0.64,-0.78l0.34,-1.39l1.36,-1.23l0.4,-0.98ZM750.38,375.27l0.73,-0.08l0.51,0.45l-1.23,1.9l0.28,-1.22l-0.3,-1.06Z", name: "South Carolina" }, "US-RI": { path: "M859.15,133.1l0.33,0.01l1.02,2.65l-0.31,0.56l-1.04,-3.22ZM858.41,136.77l-0.28,-0.34l0.24,-1.5l0.41,1.53l-0.37,0.31ZM851.13,141.49l0.22,-0.46l-0.53,-2.22l-3.14,-10.0l5.61,-1.84l0.76,2.06l0.8,0.25l0.19,0.73l0.08,0.41l-0.77,0.25l0.03,0.29l0.51,1.45l0.59,0.5l-0.6,0.15l-0.46,0.73l0.87,0.97l-0.14,1.22l0.94,2.18l-0.32,2.08l-1.33,0.23l-3.15,2.19l-0.16,-1.21ZM855.93,131.57l0.26,0.1l0.01,0.09l-0.17,-0.08l-0.1,-0.11ZM857.32,132.24l0.23,0.48l-0.2,0.31l-0.04,-0.39l0.01,-0.4ZM855.92,145.03l0.11,0.11l-0.18,0.1l-0.03,-0.14l0.11,-0.07Z", name: "Rhode Island" }, "US-CT": { path: "M823.44,156.54l2.83,-3.23l-0.07,-0.54l-1.31,-1.25l-3.5,-15.89l9.81,-2.41l0.6,0.46l0.65,-0.26l0.23,-0.58l14.16,-4.0l3.2,10.18l0.47,1.96l-0.04,1.69l-1.65,0.32l-0.91,0.81l-0.69,-0.36l-0.5,0.11l-0.18,0.91l-1.15,0.07l-1.27,1.27l-0.62,-0.14l-0.56,-1.02l-0.89,-0.09l-0.21,0.67l0.75,0.64l0.08,0.54l-0.89,-0.02l-1.02,0.87l-1.65,0.07l-1.15,0.94l-0.86,-0.09l-2.05,0.82l-0.4,-0.68l-0.61,0.11l-0.89,2.12l-0.59,0.29l-0.83,1.29l-0.79,-0.05l-0.94,0.74l-0.2,0.63l-0.53,0.05l-0.88,0.75l-2.77,3.07l-0.96,0.27l-1.24,-1.04Z", name: "Connecticut" } }, height: 589.0572567800147, projection: { type: "aea", centralMeridian: -100 }, width: 900 });
    }, 8439: function() {
      jsVectorMap.prototype.addMap("world", { insets: [{ width: 900, top: 0, left: 0, height: 440.70631074413296, bbox: [{ y: -12671671123330014e-9, x: -20004297151525836e-9 }, { y: 6930392025135122e-9, x: 2002657239474939e-8 }] }], paths: { BD: { path: "M651.84,230.21l-0.6,-2.0l-1.36,-1.71l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.2,-0.36l-0.37,-2.0l-0.81,-1.86l0.39,-1.46l-0.22,-0.47l-1.14,-0.53l0.29,-0.5l1.48,-0.94l0.03,-0.65l-1.55,-1.22l0.55,-1.14l1.61,0.94l1.04,0.15l0.18,1.54l0.34,0.35l5.64,0.63l-0.84,1.64l-1.22,0.34l-0.77,1.51l0.07,0.47l1.37,1.37l0.67,-0.19l0.42,-1.39l1.21,3.84l-0.03,1.21l-0.33,-0.15l-0.4,0.28Z", name: "Bangladesh" }, BE: { path: "M429.29,144.05l1.91,0.24l2.1,-0.63l2.63,1.99l-0.21,1.66l-0.69,0.4l-0.18,1.2l-1.66,-1.13l-1.39,0.15l-2.73,-2.7l-1.17,-0.18l-0.16,-0.52l1.54,-0.5Z", name: "Belgium" }, BF: { path: "M421.42,247.64l-0.11,0.95l0.34,1.16l1.4,1.71l0.07,1.1l0.32,0.37l2.55,0.51l-0.04,1.28l-0.38,0.53l-1.07,0.21l-0.72,1.18l-0.63,0.21l-3.22,-0.25l-0.94,0.39l-5.4,-0.05l-0.39,0.38l0.16,2.73l-1.23,-0.43l-1.17,0.1l-0.89,0.57l-2.27,-1.72l-0.13,-1.11l0.61,-0.96l0.02,-0.93l1.87,-1.98l0.44,-1.81l0.43,-0.39l1.28,0.26l1.05,-0.52l0.47,-0.73l1.84,-1.09l0.55,-0.83l2.2,-1.0l1.15,-0.3l0.72,0.45l1.13,-0.01Z", name: "Burkina Faso" }, BG: { path: "M491.65,168.18l-0.86,0.88l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.28,1.51l-1.8,0.22l-2.0,-1.0l-1.92,0.79l-1.42,-0.07l-0.15,-1.63l-1.05,-0.97l0.0,-0.8l1.2,-1.57l0.01,-0.56l-1.14,-1.23l-0.05,-0.94l0.88,0.97l0.88,-0.2l1.91,0.47l3.68,0.16l1.42,-0.81l2.72,-0.66l2.55,1.24Z", name: "Bulgaria" }, BA: { path: "M463.49,163.65l2.1,0.5l1.72,-0.03l1.52,0.68l-0.36,0.78l0.08,0.45l1.04,1.02l-0.25,0.98l-1.81,1.15l-0.38,1.38l-1.67,-0.87l-0.89,-1.2l-2.11,-1.83l-1.63,-2.22l0.23,-0.57l0.48,0.38l0.55,-0.06l0.43,-0.51l0.94,-0.06Z", name: "Bosnia and Herz." }, BN: { path: "M707.48,273.58l0.68,-0.65l1.41,-0.91l-0.15,1.63l-0.81,-0.05l-0.61,0.58l-0.53,-0.6Z", name: "Brunei" }, BO: { path: "M263.83,340.69l-3.09,-0.23l-0.38,0.23l-0.7,1.52l-1.31,-1.53l-3.28,-0.64l-2.37,2.4l-1.31,0.26l-0.88,-3.26l-1.3,-2.86l0.74,-2.37l-0.13,-0.43l-1.2,-1.01l-0.37,-1.89l-1.08,-1.55l1.45,-2.56l-0.96,-2.33l0.47,-1.06l-0.34,-0.73l0.91,-1.32l0.16,-3.84l0.5,-1.18l-1.81,-3.41l2.46,0.07l0.8,-0.85l3.4,-1.91l2.66,-0.35l-0.19,1.38l0.3,1.07l-0.05,1.97l2.72,2.27l2.88,0.49l0.89,0.86l1.79,0.58l0.98,0.7l1.71,0.05l1.17,0.61l0.6,2.7l-0.7,0.54l0.96,2.99l0.37,0.28l4.3,0.1l-0.25,1.2l0.27,1.02l1.43,0.9l0.5,1.35l-0.41,1.86l-0.65,1.08l0.12,1.35l-2.69,-1.65l-2.4,-0.03l-4.36,0.76l-1.49,2.5l-0.11,1.52l-0.75,2.37Z", name: "Bolivia" }, JP: { path: "M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46Z", name: "Japan" }, BI: { path: "M495.45,295.49l-1.08,-2.99l1.14,-0.11l0.64,-1.19l0.76,0.09l0.65,1.83l-2.1,2.36Z", name: "Burundi" }, BJ: { path: "M429.57,255.75l-0.05,0.8l0.5,1.34l-0.42,0.86l0.17,0.79l-1.81,2.12l-0.57,1.76l-0.08,5.42l-1.41,0.2l-0.48,-1.36l0.11,-5.71l-0.52,-0.7l-0.2,-1.35l-1.48,-1.48l0.21,-0.9l0.89,-0.43l0.42,-0.92l1.27,-0.36l1.22,-1.34l0.61,-0.0l1.62,1.24Z", name: "Benin" }, BT: { path: "M650.32,213.86l0.84,0.71l-0.12,1.1l-3.76,-0.11l-1.57,0.4l-1.93,-0.87l1.48,-1.96l1.13,-0.57l1.63,0.57l1.33,0.08l0.99,0.65Z", name: "Bhutan" }, JM: { path: "M228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03Z", name: "Jamaica" }, BW: { path: "M483.92,330.07l2.27,4.01l2.83,2.86l0.96,0.31l0.78,2.43l2.13,0.61l1.02,0.76l-3.0,1.64l-2.32,2.02l-1.54,2.69l-1.52,0.45l-0.64,1.94l-1.34,0.52l-1.85,-0.12l-1.21,-0.74l-1.35,-0.3l-1.22,0.62l-0.75,1.37l-2.31,1.9l-1.4,0.21l-0.35,-0.59l0.16,-1.75l-1.48,-2.54l-0.62,-0.43l-0.0,-7.1l2.08,-0.08l0.39,-0.4l0.07,-8.9l5.19,-0.93l0.8,0.89l0.51,0.07l1.5,-0.95l2.21,-0.49Z", name: "Botswana" }, BR: { path: "M259.98,275.05l3.24,0.7l0.65,-0.53l4.55,-1.32l1.08,-1.06l-0.02,-0.63l0.55,-0.05l0.28,0.28l-0.26,0.87l0.22,0.48l0.73,0.32l0.4,0.81l-0.62,0.86l-0.4,2.13l0.82,2.56l1.69,1.43l1.43,0.2l3.17,-1.68l3.18,0.3l0.65,-0.75l-0.27,-0.92l1.9,-0.09l2.39,0.99l1.06,-0.61l0.84,0.78l1.2,-0.18l1.18,-1.06l0.84,-1.94l1.36,-2.11l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l1.02,0.87l4.07,0.36l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.83,3.42l-1.24,2.74l-1.18,1.15l-0.36,-0.83l0.95,-1.14l0.01,-0.5l-1.52,-1.97l-4.56,-3.32l-1.03,-0.0l-2.38,-2.02l-0.81,-0.0l5.34,-5.45l3.77,-2.58l0.22,-2.46l-1.35,-1.81l-0.91,0.07l0.58,-2.33l0.01,-1.54l-1.11,-0.83l-1.75,0.3l-0.44,-3.11l-0.52,-0.95l-1.88,-0.88l-1.24,0.47l-2.17,-0.41l0.15,-3.21l-0.62,-1.34l0.66,-0.73l-0.22,-1.34l0.66,-1.13l0.44,-2.04l-0.61,-1.83l-1.4,-0.86l-0.2,-0.75l0.34,-1.39l-0.38,-0.5l-4.52,-0.1l-0.72,-2.22l0.59,-0.42l-0.03,-1.1l-0.5,-0.87l-0.32,-1.7l-1.45,-0.76l-1.63,-0.02l-1.05,-0.72l-1.6,-0.48l-1.13,-0.99l-2.69,-0.4l-2.47,-2.06l0.13,-4.35l-0.45,-0.45l-3.46,0.5l-3.44,1.94l-0.6,0.74l-2.9,-0.17l-1.47,0.42l-0.72,-0.18l0.15,-3.52l-0.63,-0.34l-1.94,1.41l-1.87,-0.06l-0.83,-1.18l-1.37,-0.26l0.21,-1.01l-1.35,-1.49l-0.88,-1.91l0.56,-0.6l-0.0,-0.81l1.29,-0.62l0.22,-0.43l-0.22,-1.19l0.61,-0.91l0.15,-0.99l2.65,-1.58l1.99,-0.47l0.42,-0.36l2.06,0.11l0.42,-0.33l1.19,-8.0l-0.41,-1.56l-1.1,-1.0l0.01,-1.33l1.91,-0.42l0.08,-0.96l-0.33,-0.43l-1.14,-0.2l-0.02,-0.83l4.47,0.05l0.82,-0.67l0.82,1.81l0.8,0.07l1.15,1.1l2.26,-0.05l0.71,-0.83l2.78,-0.96l0.48,-1.13l1.6,-0.64l0.24,-0.47l-0.48,-0.82l-1.83,-0.19l-0.36,-3.22Z", name: "Brazil" }, BS: { path: "M226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06Z", name: "Bahamas" }, BY: { path: "M493.84,128.32l0.29,0.7l0.49,0.23l1.19,-0.38l2.09,0.72l0.19,1.26l-0.45,1.24l1.57,2.26l0.89,0.59l0.17,0.81l1.58,0.56l0.4,0.5l-0.53,0.41l-1.87,-0.11l-0.73,0.38l-0.13,0.52l1.04,2.74l-1.91,0.26l-0.89,0.99l-0.11,1.18l-2.73,-0.04l-0.53,-0.62l-0.52,-0.08l-0.75,0.46l-0.91,-0.42l-1.92,-0.07l-2.75,-0.79l-2.6,-0.28l-2.0,0.07l-1.5,0.92l-0.67,0.07l-0.08,-1.22l-0.59,-1.19l1.36,-0.88l0.01,-1.35l-0.7,-1.41l-0.07,-1.0l2.16,-0.02l2.72,-1.3l0.75,-2.04l1.91,-1.04l0.2,-0.41l-0.19,-1.25l3.8,-1.78l2.3,0.77Z", name: "Belarus" }, BZ: { path: "M198.03,244.38l0.1,-4.49l0.69,-0.06l0.74,-1.3l0.34,0.28l-0.4,1.3l0.17,0.58l-0.34,2.25l-1.3,1.42Z", name: "Belize" }, RU: { path: "M491.55,115.25l2.55,-1.85l-0.01,-0.65l-2.2,-1.5l7.32,-6.76l1.03,-2.11l-0.13,-0.49l-3.46,-2.52l0.86,-2.7l-2.11,-2.81l1.56,-3.67l-2.77,-4.52l2.15,-2.99l-0.08,-0.55l-3.65,-2.73l0.3,-2.54l1.81,-0.37l4.26,-1.77l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.27,-0.42l-0.07,-0.69l-0.49,-0.35l-1.73,0.39l0.04,-0.68l1.04,-0.72l2.66,-0.48l0.4,-1.32l-0.5,-1.6l0.92,-1.54l0.03,-1.17l-0.29,-0.37l-3.69,-1.06l-1.41,0.02l-1.42,-1.41l-2.19,0.38l-2.77,-1.01l-0.03,-0.59l-0.89,-1.43l-2.0,-0.32l-0.11,-0.54l0.49,-0.53l0.01,-0.53l-1.6,-1.9l-3.58,0.02l-0.88,0.73l-0.46,-0.07l-1.0,-2.79l2.22,-0.02l0.97,-0.74l0.07,-0.57l-0.9,-1.04l-1.35,-0.48l-0.11,-0.7l-0.95,-0.58l-1.38,-1.99l0.46,-0.98l-0.51,-1.96l-2.45,-0.84l-1.21,0.3l-0.46,-0.76l-2.46,-0.83l-0.72,-1.87l-0.21,-1.69l-0.99,-0.85l0.85,-1.17l-0.7,-3.21l1.66,-1.97l-0.16,-0.79ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM874.85,67.94l-5.63,0.48l-0.26,-0.84l3.15,-1.89l1.94,0.01l3.19,1.16l-2.39,1.09ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM477.37,133.15l-4.08,0.05l-2.56,-0.32l0.33,-0.87l3.17,-1.03l3.24,0.96l-0.09,1.23Z", name: "Russia" }, RW: { path: "M497.0,288.25l0.71,1.01l-0.11,1.09l-1.63,0.03l-1.04,1.39l-0.83,-0.11l0.51,-1.2l0.08,-1.34l0.42,-0.41l0.7,0.14l1.19,-0.61Z", name: "Rwanda" }, RS: { path: "M469.4,163.99l0.42,-0.5l-0.01,-0.52l-1.15,-1.63l1.43,-0.62l1.33,0.12l1.17,1.06l0.46,1.13l1.34,0.64l0.35,1.35l1.46,0.9l0.76,-0.29l0.2,0.69l-0.48,0.78l0.22,1.12l1.05,1.22l-0.77,0.8l-0.37,1.52l-1.21,0.08l0.24,-0.64l-0.39,-0.54l-2.08,-1.64l-0.9,0.05l-0.48,0.94l-2.12,-1.37l0.53,-1.6l-1.11,-1.37l0.51,-1.1l-0.41,-0.57Z", name: "Serbia" }, LT: { path: "M486.93,129.3l0.17,1.12l-1.81,0.98l-0.72,2.02l-2.47,1.18l-2.1,-0.02l-0.73,-1.05l-1.06,-0.3l-0.09,-1.87l-3.56,-1.13l-0.43,-2.36l2.48,-0.94l4.12,0.22l2.25,-0.31l0.52,0.69l1.24,0.21l2.19,1.56Z", name: "Lithuania" }, LU: { path: "M436.08,149.45l-0.48,-0.07l0.3,-1.28l0.27,0.4l-0.09,0.96Z", name: "Luxembourg" }, LR: { path: "M399.36,265.97l0.18,1.54l-0.48,0.99l0.08,0.47l2.47,1.8l-0.33,2.8l-2.65,-1.13l-5.78,-4.61l0.58,-1.32l2.1,-2.33l0.86,-0.22l0.77,1.14l-0.14,0.85l0.59,0.87l1.0,0.14l0.76,-0.99Z", name: "Liberia" }, RO: { path: "M487.53,154.23l0.6,0.24l2.87,3.98l-0.17,2.69l0.45,1.42l1.32,0.81l1.35,-0.42l0.76,0.36l0.02,0.31l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.62,3.3l-1.0,-0.22l-2.07,-1.13l-2.95,0.71l-1.25,0.76l-3.51,-0.15l-1.89,-0.47l-0.87,0.16l-0.82,-1.3l0.29,-0.26l-0.06,-0.64l-1.09,-0.34l-0.56,0.5l-1.05,-0.64l-0.39,-1.39l-1.36,-0.65l-0.35,-1.0l-0.83,-0.75l1.54,-0.54l2.66,-4.21l2.4,-1.24l2.96,0.34l1.48,0.73l0.79,-0.45l1.78,-0.3l0.75,-0.74l0.79,0.0Z", name: "Romania" }, GW: { path: "M386.23,253.6l-0.29,0.84l0.15,0.6l-2.21,0.59l-0.86,0.96l-1.04,-0.83l-1.09,-0.23l-0.54,-1.06l-0.66,-0.49l2.41,-0.48l4.13,0.1Z", name: "Guinea-Bissau" }, GT: { path: "M195.08,249.77l-2.48,-0.37l-1.03,-0.45l-1.14,-0.89l0.3,-0.99l-0.24,-0.68l0.96,-1.66l2.98,-0.01l0.4,-0.37l-0.19,-1.28l-1.67,-1.4l0.51,-0.4l0.0,-1.05l3.85,0.02l-0.21,4.53l0.4,0.43l1.46,0.38l-1.48,0.98l-0.35,0.7l0.12,0.57l-2.2,1.96Z", name: "Guatemala" }, GR: { path: "M487.07,174.59l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-0.61,0.23l-1.14,0.0l-1.2,-1.39l-0.63,0.03l-0.53,1.01l0.56,1.76l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.11,-0.56l1.04,-1.28l0.2,-0.95l0.85,-0.66l0.03,-0.46l1.32,-0.21l1.01,-0.64l1.22,0.05l0.65,-0.56l2.26,-0.0l1.82,-0.75l1.85,1.0l2.28,-0.28l0.35,-0.39l0.01,-0.77l0.34,0.22ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51Z", name: "Greece" }, GQ: { path: "M448.79,279.62l0.02,2.22l-4.09,0.0l0.69,-2.27l3.38,0.05Z", name: "Eq. Guinea" }, GY: { path: "M277.42,270.07l-0.32,1.83l-1.32,0.57l-0.23,0.46l-0.28,2.0l1.11,1.82l0.83,0.19l0.32,1.25l1.13,1.62l-1.21,-0.19l-1.08,0.71l-1.77,0.5l-0.44,0.46l-0.86,-0.09l-1.32,-1.01l-0.77,-2.27l0.36,-1.9l0.68,-1.23l-0.57,-1.17l-0.74,-0.43l0.12,-1.16l-0.9,-0.69l-1.1,0.09l-1.31,-1.48l0.53,-0.72l-0.04,-0.84l1.99,-0.86l0.05,-0.59l-0.71,-0.78l0.14,-0.57l1.66,-1.24l1.36,0.77l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.06,1.86Z", name: "Guyana" }, GE: { path: "M521.71,168.93l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.68,1.1l1.07,0.55l-0.12,0.59l0.98,1.29l-1.01,-0.13l-1.81,-0.83l-0.94,0.47l-3.23,0.43l-2.29,-1.39l-2.33,0.05l0.21,-0.97l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42Z", name: "Georgia" }, GB: { path: "M412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM406.26,132.86l-1.01,1.77l-1.57,-0.59l-1.16,0.01l0.37,-1.54l-0.39,-1.39l1.45,-0.1l2.3,1.84Z", name: "United Kingdom" }, GA: { path: "M453.24,279.52l-0.08,0.98l0.7,1.29l2.36,0.24l-0.98,2.63l1.18,1.79l0.25,1.78l-0.29,1.52l-0.6,0.93l-1.84,-0.09l-1.23,-1.11l-0.66,0.23l-0.15,0.84l-1.42,0.26l-1.02,0.7l-0.11,0.52l0.77,1.35l-1.34,0.97l-3.94,-4.3l-1.44,-2.45l0.06,-0.6l0.54,-0.81l1.05,-3.46l4.17,-0.07l0.4,-0.4l-0.02,-2.66l2.39,0.21l1.25,-0.27Z", name: "Gabon" }, GN: { path: "M391.8,254.11l0.47,0.8l1.11,-0.32l0.98,0.7l1.07,0.2l2.26,-1.22l0.64,0.44l1.13,1.56l-0.48,1.4l0.8,0.3l-0.08,0.48l0.46,0.68l-0.35,1.36l1.05,2.61l-1.0,0.69l0.03,1.41l-0.72,-0.06l-1.08,1.0l-0.24,-0.27l0.07,-1.11l-1.05,-1.54l-1.79,0.21l-0.35,-2.01l-1.6,-2.18l-2.0,-0.0l-1.31,0.54l-1.95,2.18l-1.86,-2.19l-1.2,-0.78l-0.3,-1.11l-0.8,-0.85l0.65,-0.72l0.81,-0.03l1.64,-0.8l0.23,-1.87l2.67,0.64l0.89,-0.3l1.21,0.15Z", name: "Guinea" }, GM: { path: "M379.31,251.39l0.1,-0.35l2.43,-0.07l0.74,-0.61l0.51,-0.03l0.77,0.49l-1.03,-0.3l-1.87,0.9l-1.65,-0.04ZM384.03,250.91l0.91,0.05l0.75,-0.24l-0.59,0.31l-1.08,-0.13Z", name: "Gambia" }, GL: { path: "M353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8Z", name: "Greenland" }, KW: { path: "M540.81,207.91l0.37,0.86l-0.17,0.76l0.6,1.53l-0.95,0.04l-0.82,-1.28l-1.57,-0.18l1.31,-1.88l1.22,0.17Z", name: "Kuwait" }, GH: { path: "M420.53,257.51l-0.01,0.72l0.96,1.2l0.24,3.73l0.59,0.95l-0.51,2.1l0.19,1.41l1.02,2.21l-6.97,2.84l-1.8,-0.57l0.04,-0.89l-1.02,-2.04l0.61,-2.65l1.07,-2.32l-0.96,-6.47l5.01,0.07l0.94,-0.39l0.61,0.11Z", name: "Ghana" }, OM: { path: "M568.09,230.93l-0.91,1.67l-1.22,0.04l-0.6,0.76l-0.41,1.51l0.27,1.58l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.62,0.05l-0.98,0.65l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-2.4,0.94l-2.47,-5.4l7.35,-2.71l1.67,-5.23l-1.12,-2.09l0.05,-0.83l0.67,-1.0l0.07,-1.05l0.9,-0.42l-0.05,-2.07l0.7,-0.01l1.0,1.62l1.51,1.08l3.3,0.84l1.73,2.29l0.81,0.37l-1.23,2.35l-0.99,0.79Z", name: "Oman" }, _2: { path: "M531.15,258.94l1.51,0.12l5.13,-0.95l5.3,-1.48l-0.01,4.4l-2.67,3.39l-1.85,0.01l-8.04,-2.94l-2.55,-3.17l1.12,-1.71l2.04,2.34Z", name: "Somaliland" }, _1: { path: "M472.77,172.64l-1.08,-1.29l0.96,-0.77l0.29,-0.83l1.98,1.64l-0.36,0.67l-1.79,0.58Z", name: "Kosovo" }, _0: { path: "M504.91,192.87l0.34,0.01l0.27,-0.07l-0.29,0.26l-0.31,-0.2Z", name: "N. Cyprus" }, JO: { path: "M518.64,201.38l-5.14,1.56l-0.19,0.65l2.16,2.39l-0.89,1.14l-1.71,0.34l-1.71,1.8l-2.34,-0.37l1.21,-4.32l0.56,-4.07l2.8,0.94l4.46,-2.71l0.79,2.66Z", name: "Jordan" }, HR: { path: "M455.59,162.84l1.09,0.07l-0.82,0.94l-0.27,-1.01ZM456.96,162.92l0.62,-0.41l1.73,0.45l0.42,-0.4l-0.01,-0.59l0.86,-0.52l0.2,-1.05l1.63,-0.68l2.57,1.68l2.07,0.6l0.87,-0.31l1.05,1.57l-0.52,0.63l-1.05,-0.56l-1.68,0.04l-2.1,-0.5l-1.29,0.06l-0.57,0.49l-0.59,-0.47l-0.62,0.16l-0.46,1.7l1.79,2.42l2.79,2.75l-1.18,-0.87l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.42,-0.43Z", name: "Croatia" }, HT: { path: "M237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.16,0.45l0.02,1.84l-0.48,0.34l-0.08,0.58l0.54,0.72l-1.78,-0.26Z", name: "Haiti" }, HU: { path: "M462.08,157.89l0.65,-1.59l-0.09,-0.44l0.64,-0.0l0.39,-0.34l0.1,-0.69l1.75,0.87l2.32,-0.37l0.43,-0.66l3.49,-0.78l0.69,-0.78l0.57,-0.14l2.57,0.93l0.67,-0.23l1.03,0.65l0.08,0.37l-1.42,0.71l-2.59,4.14l-1.8,0.53l-1.68,-0.1l-2.74,1.23l-1.85,-0.54l-2.54,-1.66l-0.66,-1.1Z", name: "Hungary" }, HN: { path: "M199.6,249.52l-1.7,-1.21l0.06,-0.94l3.04,-2.14l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.23,1.37l-2.36,0.93l-1.23,-0.39l-0.88,1.3l-1.28,0.99l-0.98,-0.22l-0.42,0.52l-0.96,0.05l-0.36,0.41l0.04,0.88l-0.52,0.6l-0.3,0.04l-0.3,-0.55l-0.66,-0.31l0.11,-0.67l-0.48,-0.65l-0.87,-0.26l-0.73,0.2Z", name: "Honduras" }, PR: { path: "M256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33Z", name: "Puerto Rico" }, PS: { path: "M509.21,203.07l0.1,-0.06l-0.02,0.03l-0.09,0.03ZM509.36,202.91l-0.02,-0.63l-0.33,-0.16l0.31,-1.09l0.24,0.1l-0.2,1.78Z", name: "Palestine" }, PT: { path: "M401.84,187.38l-0.64,0.47l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.69,-2.92l-0.04,-1.39l-0.59,-1.9l1.3,-0.85l0.84,1.35l3.1,-0.3l0.46,0.99l-1.05,0.94l-0.03,2.16l-0.41,0.57l-0.08,1.1l-0.79,0.18l-0.26,0.59l0.91,1.6l-0.63,1.75l0.76,1.09l-1.1,1.52l0.07,1.05Z", name: "Portugal" }, PY: { path: "M274.9,336.12l0.74,1.52l-0.16,3.45l0.32,0.41l2.64,0.5l1.11,-0.47l1.4,0.59l0.36,0.6l0.53,3.42l1.27,0.4l0.98,-0.38l0.51,0.27l-0.0,1.18l-1.21,5.32l-2.09,1.9l-1.8,0.4l-4.71,-0.98l2.2,-3.63l-0.32,-1.5l-2.78,-1.28l-3.03,-1.94l-2.07,-0.44l-4.34,-4.06l0.91,-2.9l0.08,-1.42l1.07,-2.04l4.13,-0.72l2.18,0.03l2.05,1.17l0.03,0.59Z", name: "Paraguay" }, PA: { path: "M213.8,263.68l0.26,-1.52l-0.36,-0.26l-0.01,-0.49l0.44,-0.1l0.93,1.4l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-0.47,-0.13l-0.54,-0.84l-1.5,-0.75l-1.1,0.16l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-2.59,-0.46Z", name: "Panama" }, PG: { path: "M808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68Z", name: "Papua New Guinea" }, PE: { path: "M244.96,295.21l-1.26,-0.07l-0.57,0.42l-1.93,0.45l-2.98,1.75l-0.36,1.36l-0.58,0.8l0.12,1.37l-1.24,0.59l-0.22,1.22l-0.62,0.84l1.04,2.27l1.28,1.44l-0.41,0.84l0.32,0.57l1.48,0.13l1.16,1.37l2.21,0.07l1.63,-1.08l-0.13,3.02l0.3,0.4l1.14,0.29l1.31,-0.34l1.9,3.59l-0.48,0.85l-0.17,3.85l-0.94,1.59l0.35,0.75l-0.47,1.07l0.98,1.97l-2.1,3.82l-0.98,0.5l-2.17,-1.28l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.45,-1.15l-0.6,0.98l0.07,0.92l0.47,0.36l1.74,0.03l0.97,1.17l0.54,0.07l1.42,-1.03l0.6,-1.84l1.42,-2.02l3.04,-1.04l2.73,-2.62l0.86,-1.74l-0.1,-1.87l1.44,1.02l0.9,1.25l1.06,0.59l1.7,2.73l1.86,0.31l1.45,-0.61l0.96,0.39l1.36,-0.19l1.45,0.89l-1.4,2.21l0.31,0.61l0.59,0.05l0.47,0.5Z", name: "Peru" }, PK: { path: "M615.09,192.34l-1.83,1.81l-2.6,0.39l-3.73,-0.68l-1.58,1.33l-0.09,0.42l1.77,4.39l1.7,1.23l-1.69,1.27l-0.12,2.14l-2.33,2.64l-1.6,2.8l-2.46,2.67l-3.03,-0.07l-2.76,2.83l0.05,0.6l1.5,1.11l0.26,1.9l1.44,1.5l0.37,1.68l-5.01,-0.01l-1.78,1.7l-1.42,-0.52l-0.76,-1.87l-2.27,-2.15l-11.61,0.86l0.71,-2.34l3.43,-1.32l0.25,-0.44l-0.21,-1.24l-1.2,-0.65l-0.28,-2.46l-2.29,-1.14l-1.28,-1.94l2.82,0.94l2.62,-0.38l1.42,0.33l0.76,-0.56l1.71,0.19l3.25,-1.14l0.27,-0.36l0.08,-2.19l1.18,-1.32l1.68,0.0l0.58,-0.82l1.6,-0.3l1.19,0.16l0.98,-0.78l0.02,-1.88l0.93,-1.47l1.48,-0.66l0.19,-0.55l-0.66,-1.25l2.04,-0.11l0.69,-1.01l-0.02,-1.16l1.11,-1.06l-0.17,-1.78l-0.49,-1.03l1.15,-0.98l5.42,-0.91l2.6,-0.82l1.6,1.16l0.97,2.34l3.45,0.97Z", name: "Pakistan" }, PH: { path: "M737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84Z", name: "Philippines" }, PL: { path: "M468.44,149.42l-1.11,-1.54l-1.86,-0.33l-0.48,-1.05l-1.72,-0.37l-0.65,0.69l-0.72,-0.36l0.11,-0.61l-0.33,-0.46l-1.75,-0.27l-1.04,-0.93l-0.94,-1.94l0.16,-1.22l-0.62,-1.8l-0.78,-1.07l0.57,-1.04l-0.48,-1.43l1.41,-0.83l6.91,-2.71l2.14,0.5l0.52,0.91l5.51,0.44l4.55,-0.05l1.07,0.31l0.48,0.84l0.15,1.58l0.65,1.2l-0.01,0.99l-1.27,0.58l-0.19,0.54l0.73,1.48l0.08,1.55l1.2,2.76l-0.17,0.58l-1.23,0.44l-2.27,2.72l0.18,0.95l-1.97,-1.03l-1.98,0.4l-1.36,-0.28l-1.24,0.58l-1.07,-0.97l-1.16,0.24Z", name: "Poland" }, ZM: { path: "M481.47,313.3l0.39,0.31l2.52,0.14l0.99,1.17l2.01,0.35l1.4,-0.64l0.69,1.17l1.78,0.33l1.84,2.35l2.23,0.18l0.4,-0.43l-0.21,-2.74l-0.62,-0.3l-0.48,0.32l-1.98,-1.17l0.72,-5.29l-0.51,-1.18l0.57,-1.3l3.68,-0.62l0.26,0.63l1.21,0.63l0.9,-0.22l2.16,0.67l1.33,0.71l1.07,1.02l0.56,1.87l-0.88,2.7l0.43,2.09l-0.73,0.87l-0.76,2.37l0.59,0.68l-6.6,1.83l-0.29,0.44l0.19,1.45l-1.68,0.35l-1.43,1.02l-0.38,0.87l-0.87,0.26l-3.48,3.69l-4.16,-0.53l-1.52,-1.0l-1.77,-0.13l-1.83,0.52l-3.04,-3.4l0.11,-7.59l4.82,0.03l0.39,-0.49l-0.18,-0.76l0.33,-0.83l-0.4,-1.36l0.24,-1.05Z", name: "Zambia" }, EH: { path: "M384.42,230.28l0.25,-0.79l1.06,-1.29l0.8,-3.51l3.38,-2.78l0.7,-1.81l0.06,4.84l-1.98,0.2l-0.94,1.59l0.39,3.56l-3.7,-0.01ZM392.01,218.1l0.7,-1.8l1.77,-0.24l2.09,0.34l0.95,-0.62l1.28,-0.07l-0.0,2.51l-6.79,-0.12Z", name: "W. Sahara" }, EE: { path: "M485.71,115.04l2.64,0.6l2.56,0.11l-1.6,1.91l0.61,3.54l-0.81,0.87l-1.78,-0.01l-3.22,-1.76l-1.8,0.45l0.21,-1.53l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52Z", name: "Estonia" }, EG: { path: "M492.06,205.03l1.46,0.42l2.95,-1.64l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-2.03,4.54l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.44,6.95l1.78,3.04l2.03,2.65l-0.36,0.53l0.23,2.01l2.7,2.19l-28.41,0.0l0.0,-18.96l-0.73,-2.2l0.59,-1.56l-0.32,-1.26l0.68,-0.99l3.06,-0.04l4.82,1.52Z", name: "Egypt" }, ZA: { path: "M467.14,373.21l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.56,-8.19l0.77,-0.86l0.6,0.45l0.69,1.31l2.83,0.72l1.5,-0.26l2.24,-1.39l0.19,-9.55l1.35,2.3l-0.21,1.5l0.61,1.2l0.4,0.19l1.79,-0.27l2.6,-2.07l0.69,-1.32l0.96,-0.48l2.19,1.04l2.04,0.13l1.77,-0.65l0.85,-2.12l1.38,-0.33l1.59,-2.76l2.15,-1.89l3.41,-1.87l2.0,0.45l1.02,-0.28l0.99,0.2l1.75,5.29l-0.38,3.25l-0.81,-0.23l-1.0,0.46l-0.87,1.68l-0.05,1.16l1.97,1.84l1.47,-0.29l0.69,-1.18l1.09,0.01l-0.76,3.69l-0.58,1.09l-2.2,1.79l-3.17,4.76l-2.8,2.83l-3.57,2.88l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05ZM491.45,364.19l0.62,-0.93l1.48,-0.59l1.18,-2.19l-0.07,-0.49l-1.99,-1.69l-1.66,0.56l-1.43,1.14l-1.34,1.73l0.02,0.51l1.88,2.11l1.31,-0.16Z", name: "South Africa" }, EC: { path: "M231.86,285.53l0.29,1.59l-0.69,1.45l-2.61,2.51l-3.13,1.11l-1.53,2.18l-0.49,1.68l-1.0,0.73l-1.02,-1.11l-1.78,-0.16l0.67,-1.15l-0.24,-0.86l1.25,-2.13l-0.54,-1.09l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.65,-1.33l2.75,1.35l0.77,1.05l2.12,0.35l0.76,-0.32l1.96,1.21Z", name: "Ecuador" }, AL: { path: "M470.32,171.8l0.74,0.03l0.92,0.89l-0.17,1.95l0.36,1.28l1.01,0.82l-1.82,2.83l-0.19,-0.61l-1.25,-0.89l-0.18,-1.2l0.53,-2.82l-0.54,-1.47l0.6,-0.83Z", name: "Albania" }, AO: { path: "M461.55,300.03l1.26,3.15l1.94,2.36l2.47,-0.53l1.25,0.32l0.44,-0.18l0.93,-1.92l1.31,-0.08l0.41,-0.44l0.47,-0.0l-0.1,0.41l0.39,0.49l2.65,-0.02l0.03,1.19l0.48,1.01l-0.34,1.52l0.18,1.55l0.83,1.04l-0.13,2.85l0.54,0.39l3.96,-0.41l-0.1,1.79l0.39,1.05l-0.24,1.43l-4.7,-0.03l-0.4,0.39l-0.12,8.13l2.92,3.49l-3.83,0.88l-5.89,-0.36l-1.88,-1.24l-10.47,0.22l-1.3,-1.01l-1.85,-0.16l-2.4,0.77l-0.15,-1.06l0.33,-2.16l1.0,-3.45l1.35,-3.2l2.24,-2.8l0.33,-2.06l-0.13,-1.53l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l2.47,-0.63l7.03,0.03ZM451.71,298.87l-0.47,-1.25l1.25,-1.11l0.32,0.3l-0.99,1.03l-0.12,1.03Z", name: "Angola" }, KZ: { path: "M552.8,172.89l0.46,-1.27l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.02,1.52l-1.6,1.81l-1.93,0.28l-0.34,0.38l-0.11,3.05l-1.13,1.16l-4.75,-1.0l-0.46,0.27l-1.76,5.47l-1.1,0.59l-4.91,1.23l-0.27,0.54l2.1,4.97l-1.37,0.63l-0.23,0.41l0.13,1.13l-0.88,-0.25l-1.42,-1.13l-7.89,-0.4l-0.92,0.31l-3.73,-1.22l-1.42,0.63l-0.53,1.66l-3.72,-0.94l-1.85,0.43l-0.76,1.4l-4.65,2.62l-1.13,2.08l-0.44,0.01l-0.92,-1.4l-2.87,-0.09l-0.45,-2.14l-0.38,-0.32l-0.8,-0.01l0.0,-2.96l-3.0,-2.22l-7.31,0.58l-2.35,-2.68l-6.71,-3.69l-6.45,1.83l-0.29,0.39l0.1,10.85l-0.7,0.08l-1.62,-2.17l-1.83,-0.96l-3.11,0.59l-0.64,0.51Z", name: "Kazakhstan" }, ET: { path: "M516.04,247.79l1.1,0.84l1.63,-0.45l0.68,0.47l1.63,0.03l2.01,0.94l1.73,1.66l1.64,2.07l-1.52,2.04l0.16,1.72l0.39,0.38l2.05,0.0l-0.36,1.03l2.86,3.58l8.32,3.08l1.31,0.02l-6.32,6.75l-3.1,0.11l-2.36,1.77l-1.47,0.04l-0.86,0.79l-1.38,-0.0l-1.32,-0.81l-2.29,1.05l-0.76,0.98l-3.29,-0.41l-3.07,-2.07l-1.8,-0.07l-0.62,-0.6l0.0,-1.24l-0.28,-0.38l-1.15,-0.37l-1.4,-2.59l-1.19,-0.68l-0.47,-1.0l-1.27,-1.23l-1.16,-0.22l0.43,-0.72l1.45,-0.28l0.41,-0.95l-0.03,-2.21l0.68,-2.44l1.05,-0.63l1.43,-3.06l1.57,-1.37l1.02,-2.51l0.35,-1.88l2.52,0.46l0.44,-0.24l0.58,-1.43Z", name: "Ethiopia" }, ZW: { path: "M498.91,341.09l-1.11,-0.22l-0.92,0.28l-2.09,-0.44l-1.5,-1.11l-1.89,-0.43l-0.62,-1.4l-0.01,-0.84l-0.3,-0.38l-0.97,-0.25l-2.71,-2.74l-1.92,-3.32l3.83,0.45l3.73,-3.82l1.08,-0.44l0.26,-0.77l1.25,-0.9l1.41,-0.26l0.5,0.89l1.99,-0.05l1.72,1.17l1.11,0.17l1.05,0.66l0.01,2.99l-0.59,3.76l0.38,0.86l-0.23,1.23l-0.39,0.35l-0.63,1.81l-2.43,2.75Z", name: "Zimbabwe" }, ES: { path: "M416.0,169.21l1.07,1.17l4.61,1.38l1.06,-0.57l2.6,1.26l2.71,-0.3l0.09,1.12l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.68,-1.59l-2.37,-0.63l-0.11,-0.5l1.21,-1.82l-0.77,-1.13l0.61,-1.68l-0.76,-1.62l0.87,-0.49l0.09,-1.25l0.42,-0.6l0.03,-2.11l0.99,-0.69l0.13,-0.5l-1.03,-1.73l-1.46,-0.11l-0.61,0.38l-1.06,0.0l-0.52,-1.23l-0.53,-0.21l-1.32,0.67l-0.01,-1.49l-0.75,-0.96l3.03,-1.88l2.99,0.53l3.32,-0.02l2.63,0.51l6.01,-0.06Z", name: "Spain" }, ER: { path: "M520.38,246.23l3.42,2.43l3.5,3.77l0.84,0.54l-0.95,-0.01l-3.51,-3.89l-2.33,-1.15l-1.73,-0.07l-0.91,-0.51l-1.26,0.51l-1.34,-1.02l-0.61,0.17l-0.66,1.61l-2.35,-0.43l-0.17,-0.67l1.29,-5.29l0.61,-0.61l1.95,-0.53l0.87,-1.01l1.17,2.41l0.68,2.33l1.49,1.43Z", name: "Eritrea" }, ME: { path: "M468.91,172.53l-1.22,-1.02l0.47,-1.81l0.89,-0.72l2.26,1.51l-0.5,0.57l-0.75,-0.27l-1.14,1.73Z", name: "Montenegro" }, MD: { path: "M488.41,153.73l1.4,-0.27l1.72,0.93l1.07,0.15l0.85,0.65l-0.14,0.84l0.96,0.85l1.12,2.47l-1.15,-0.07l-0.66,-0.41l-0.52,0.25l-0.09,0.86l-1.08,1.89l-0.27,-0.86l0.25,-1.34l-0.16,-1.6l-3.29,-4.34Z", name: "Moldova" }, MG: { path: "M545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z", name: "Madagascar" }, MA: { path: "M378.78,230.02l0.06,-0.59l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.47,0.65l0.8,1.54l0.16,1.71l0.86,2.96l0.56,0.59l-0.26,0.61l-3.05,0.44l-1.26,1.05l-1.33,0.22l-0.33,0.37l-0.09,1.78l-2.68,1.0l-1.07,1.42l-4.47,1.13l-4.04,2.01l-0.54,4.64l-1.15,0.06l-0.92,0.61l-1.96,-0.35l-2.42,0.54l-0.74,1.9l-0.86,0.4l-1.14,3.26l-3.53,3.01l-0.8,3.55l-0.96,1.1l-0.29,0.82l-4.95,0.18Z", name: "Morocco" }, UZ: { path: "M598.64,172.75l-1.63,1.52l0.06,0.64l1.85,1.12l1.97,-0.64l2.21,1.17l-2.52,1.68l-2.59,-0.22l-0.18,-0.41l0.46,-1.23l-0.45,-0.53l-3.35,0.69l-2.1,3.51l-1.87,-0.12l-1.03,1.51l0.22,0.55l1.64,0.62l0.46,1.83l-1.19,2.49l-2.66,-0.53l0.05,-1.36l-0.26,-0.39l-3.3,-1.23l-2.56,-1.4l-4.4,-3.34l-1.34,-3.14l-1.08,-0.6l-2.58,0.13l-0.69,-0.44l-0.47,-2.52l-3.37,-1.6l-0.43,0.05l-2.07,1.72l-2.1,1.01l-0.21,0.47l0.28,1.01l-1.91,0.03l-0.09,-10.5l5.99,-1.7l6.19,3.54l2.71,2.84l7.05,-0.67l2.71,2.01l-0.17,2.81l0.39,0.42l0.9,0.02l0.44,2.14l0.38,0.32l2.94,0.09l0.95,1.42l1.28,-0.24l1.05,-2.04l4.43,-2.5Z", name: "Uzbekistan" }, MM: { path: "M673.9,230.21l-1.97,1.57l-0.57,0.96l-1.4,0.6l-1.36,1.05l-1.99,0.36l-1.08,2.66l-0.91,0.4l-0.19,0.55l1.21,2.27l2.52,3.43l-0.79,1.91l-0.74,0.41l-0.17,0.52l0.65,1.37l1.61,1.95l0.25,2.58l0.9,2.13l-1.92,3.57l0.68,-2.25l-0.81,-1.74l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.52,-2.61l-1.91,-2.96l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.61,-1.93l-0.1,-1.3l0.82,-0.24l0.04,-1.64l1.02,-0.52l0.21,-0.45l-0.23,-0.95l0.54,-0.96l0.08,-2.22l1.46,0.45l0.47,-0.2l1.12,-2.19l0.16,-1.35l1.33,-2.16l-0.0,-1.52l2.89,-1.66l1.63,0.44l0.5,-0.44l-0.17,-1.4l0.64,-0.36l0.08,-1.04l0.77,-0.11l0.71,1.35l1.06,0.69l-0.03,3.86l-2.38,2.37l-0.3,3.15l0.46,0.43l2.28,-0.38l0.51,2.08l1.47,0.67l-0.6,1.8l0.19,0.48l2.97,1.48l1.64,-0.55l0.02,0.32Z", name: "Myanmar" }, ML: { path: "M392.61,254.08l-0.19,-2.37l-0.99,-0.87l-0.44,-1.3l-0.09,-1.28l0.81,-0.58l0.35,-1.24l2.37,0.65l1.31,-0.47l0.86,0.15l0.66,-0.56l9.83,-0.04l0.38,-0.28l0.56,-1.8l-0.44,-0.65l-2.35,-21.95l3.27,-0.04l16.7,11.38l0.74,1.31l2.5,1.09l0.02,1.38l0.44,0.39l2.34,-0.21l0.01,5.38l-1.28,1.61l-0.26,1.49l-5.31,0.57l-1.07,0.92l-2.9,0.1l-0.86,-0.48l-1.38,0.36l-2.4,1.08l-0.6,0.87l-1.85,1.09l-0.43,0.7l-0.79,0.39l-1.44,-0.21l-0.81,0.84l-0.34,1.64l-1.91,2.02l-0.06,1.03l-0.67,1.22l0.13,1.16l-0.97,0.39l-0.23,-0.64l-0.52,-0.24l-1.35,0.4l-0.34,0.55l-2.69,-0.28l-0.37,-0.35l-0.02,-0.9l-0.65,-0.35l0.45,-0.64l-0.03,-0.53l-2.12,-2.44l-0.76,-0.01l-2.0,1.16l-0.78,-0.15l-0.8,-0.67l-1.21,0.23Z", name: "Mali" }, MN: { path: "M676.61,146.48l3.81,1.68l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.12,0.52l2.47,-0.81l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.27,-0.21l-2.66,5.01l0.64,1.68l0.47,0.21l1.32,-0.38l2.38,0.48l2.02,-1.11l1.76,0.89l2.06,2.02l-0.13,0.53l-1.72,-0.29l-3.77,0.46l-1.88,0.99l-1.76,1.99l-3.71,1.17l-2.45,1.6l-3.83,-0.87l-0.41,0.17l-1.31,1.99l1.04,2.24l-1.52,0.9l-1.74,1.57l-2.79,1.02l-3.78,0.13l-4.05,1.05l-2.77,1.52l-1.16,-0.85l-2.94,0.0l-3.62,-1.79l-2.58,-0.49l-3.4,0.41l-5.12,-0.67l-2.63,0.06l-1.31,-1.6l-1.4,-3.0l-1.48,-0.33l-3.13,-1.94l-6.16,-0.93l-0.71,-1.06l0.86,-3.82l-1.93,-2.71l-3.5,-1.18l-1.95,-1.58l-0.5,-1.72l2.34,-0.52l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.43,2.24Z", name: "Mongolia" }, MK: { path: "M472.8,173.98l0.49,-0.71l3.57,-0.71l1.0,0.77l0.13,1.45l-0.65,0.53l-1.15,-0.05l-1.12,0.67l-1.39,0.22l-0.79,-0.55l-0.29,-1.03l0.19,-0.6Z", name: "Macedonia" }, MW: { path: "M505.5,309.31l0.85,1.95l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.21l0.34,0.6l0.19,2.94l-1.04,0.62l-0.54,1.25l-1.11,-1.08l-0.16,-1.56l0.51,-1.31l-0.32,-1.3l-0.99,-0.65l-0.82,0.12l-2.36,-1.64l0.63,-1.96l0.82,-1.18l-0.46,-2.01l0.9,-2.86l-0.94,-2.51l0.96,0.18l0.29,0.4Z", name: "Malawi" }, MR: { path: "M407.36,220.66l-2.58,0.03l-0.39,0.44l2.42,22.56l0.36,0.43l-0.39,1.24l-9.75,0.04l-0.56,0.53l-0.91,-0.11l-1.27,0.45l-1.61,-0.66l-0.97,0.03l-0.36,0.29l-0.38,1.35l-0.42,0.23l-2.93,-3.4l-2.96,-1.52l-1.62,-0.03l-1.27,0.54l-1.12,-0.2l-0.65,0.4l-0.08,-0.49l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.23,-1.21l-0.69,-1.5l-1.15,-1.02l0.25,-0.39l9.58,0.02l0.4,-0.45l-0.46,-3.68l0.47,-1.04l2.12,-0.21l0.36,-0.4l-0.08,-6.4l7.81,0.13l0.41,-0.4l0.01,-3.31l7.76,5.35Z", name: "Mauritania" }, UG: { path: "M498.55,276.32l0.7,-0.46l1.65,0.5l1.96,-0.57l1.7,0.01l1.45,-0.98l0.91,1.33l1.33,3.95l-2.57,4.03l-1.46,-0.4l-2.54,0.91l-1.37,1.61l-0.01,0.81l-2.42,-0.01l-2.26,1.01l-0.17,-1.59l0.58,-1.04l0.14,-1.94l1.37,-2.28l1.78,-1.58l-0.17,-0.65l-0.72,-0.24l0.13,-2.43Z", name: "Uganda" }, MY: { path: "M717.47,273.46l-1.39,0.65l-2.12,-0.41l-2.88,-0.0l-0.38,0.28l-0.84,2.75l-0.99,0.96l-1.21,3.29l-1.73,0.45l-2.45,-0.68l-1.39,0.31l-1.33,1.15l-1.59,-0.14l-1.41,0.44l-1.44,-1.19l-0.18,-0.73l1.34,0.53l1.93,-0.47l0.75,-2.22l4.02,-1.03l2.75,-3.21l0.82,0.94l0.64,-0.05l0.4,-0.65l0.96,0.06l0.42,-0.36l0.24,-2.68l1.81,-1.64l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88ZM673.68,269.59l0.17,1.09l0.47,0.33l1.65,-0.3l0.87,-0.94l1.61,1.52l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.46,-1.05l1.63,0.84Z", name: "Malaysia" }, MX: { path: "M133.12,200.41l0.2,0.47l9.63,3.33l6.96,-0.02l0.4,-0.4l0.0,-0.74l3.77,0.0l3.55,2.93l1.39,2.83l1.52,1.04l2.08,0.82l0.47,-0.14l1.46,-2.0l1.73,-0.04l1.59,0.98l2.05,3.35l1.47,1.56l1.26,3.14l2.18,1.02l2.26,0.58l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l1.2,1.42l2.55,0.66l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-0.49,-0.3l-1.0,0.08l-1.0,1.39l-0.47,-0.11l-0.53,0.47l-4.26,-0.02l-0.4,0.4l-0.0,1.06l-1.1,0.26l0.1,0.44l1.82,1.44l0.56,0.91l-3.19,0.21l-1.21,2.09l0.24,0.72l-0.2,0.44l-2.24,-2.18l-1.45,-0.93l-2.22,-0.69l-1.52,0.22l-3.07,1.16l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-3.75,-7.56l4.88,-0.42Z", name: "Mexico" }, VU: { path: "M839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27Z", name: "Vanuatu" }, FR: { path: "M444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM429.64,147.1l1.78,1.58l1.46,-0.13l2.1,1.42l1.35,0.27l1.23,0.83l3.04,0.5l-1.03,1.85l-0.3,2.12l-0.41,0.32l-0.95,-0.24l-0.5,0.43l0.06,0.61l-1.81,1.92l-0.04,1.42l0.55,0.38l0.88,-0.36l0.61,0.97l-0.03,1.0l0.57,0.91l-0.75,1.09l0.65,2.39l1.27,0.57l-0.18,0.82l-2.01,1.53l-4.77,-0.8l-3.82,1.0l-0.53,1.85l-2.49,0.34l-2.71,-1.31l-1.16,0.57l-4.31,-1.29l-0.72,-0.86l1.19,-1.78l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l1.6,-0.49l0.24,0.78l1.36,0.33l1.05,1.19ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z", name: "France" }, FI: { path: "M492.17,76.39l-0.23,3.5l3.52,2.63l-2.08,2.88l-0.02,0.44l2.8,4.56l-1.59,3.31l2.16,3.24l-0.94,2.39l0.14,0.47l3.44,2.51l-0.77,1.62l-7.52,6.95l-4.5,0.31l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.38,-1.89l-0.75,-1.43l-0.22,-6.74l-6.79,-4.8l0.8,-0.62l2.54,2.12l3.46,-0.12l3.0,0.96l2.51,-2.11l1.17,-3.08l3.55,-1.38l2.76,1.53l-0.95,2.79Z", name: "Finland" }, FJ: { path: "M871.53,326.34l-2.8,1.05l-0.08,-0.23l2.97,-1.21l-0.1,0.39ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31Z", name: "Fiji" }, FK: { path: "M274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19Z", name: "Falkland Is." }, NI: { path: "M202.33,252.67l0.81,-0.18l1.03,-1.02l-0.04,-0.88l0.68,-0.0l0.63,-0.54l0.97,0.22l1.53,-1.26l0.58,-0.99l1.17,0.34l2.41,-0.94l0.13,1.32l-0.81,1.94l0.1,2.74l-0.36,0.37l-0.11,1.75l-0.47,0.81l0.18,1.14l-1.73,-0.85l-0.71,0.27l-1.47,-0.6l-0.52,0.16l-4.01,-3.81Z", name: "Nicaragua" }, NL: { path: "M430.31,143.39l0.6,-0.5l2.13,-4.8l3.2,-1.33l1.74,0.08l0.33,0.8l-0.59,2.92l-0.5,0.99l-1.26,0.0l-0.4,0.45l0.33,2.7l-2.2,-1.78l-2.62,0.58l-0.75,-0.11Z", name: "Netherlands" }, NO: { path: "M491.44,67.41l6.8,2.89l-2.29,0.86l-0.15,0.65l2.33,2.38l-4.98,1.79l0.84,-2.45l-0.18,-0.48l-3.55,-1.8l-3.89,1.52l-1.42,3.38l-2.12,1.72l-2.64,-1.0l-3.11,0.21l-2.66,-2.22l-0.5,-0.01l-1.41,1.1l-1.44,0.17l-0.35,0.35l-0.32,2.47l-4.32,-0.64l-0.44,0.29l-0.58,2.11l-2.45,0.2l-4.15,7.68l-3.88,5.76l0.78,1.62l-0.64,1.16l-2.24,-0.06l-0.38,0.24l-1.66,3.89l0.15,5.17l1.57,2.04l-0.78,4.16l-2.02,2.48l-0.85,1.63l-1.3,-1.75l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92Z", name: "Norway" }, NA: { path: "M474.26,330.66l-0.97,0.04l-0.38,0.4l-0.07,8.9l-2.09,0.08l-0.39,0.4l-0.0,17.42l-1.98,1.23l-1.17,0.17l-2.44,-0.66l-0.48,-1.13l-0.99,-0.74l-0.54,0.05l-0.9,1.01l-1.53,-1.68l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.12,-1.57l2.33,-0.79l1.43,0.07l1.81,1.13l10.23,-0.25l1.84,1.23l5.87,0.35ZM474.66,330.64l6.51,-1.6l1.9,0.39l-1.69,0.4l-1.31,0.83l-1.12,-0.94l-4.29,0.92Z", name: "Namibia" }, NC: { path: "M838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07Z", name: "New Caledonia" }, NE: { path: "M454.75,226.53l1.33,1.37l0.48,0.07l1.27,-0.7l0.53,3.52l0.94,0.83l0.17,0.92l0.81,0.69l-0.44,0.95l-0.96,5.26l-0.13,3.22l-3.04,2.31l-1.22,3.57l1.02,1.24l-0.0,1.46l0.39,0.4l1.13,0.04l-0.9,1.25l-1.47,-2.42l-0.86,-0.29l-2.09,1.37l-1.74,-0.67l-1.45,-0.17l-0.85,0.35l-1.36,-0.07l-1.64,1.09l-1.06,0.05l-2.94,-1.28l-1.44,0.59l-1.01,-0.03l-0.97,-0.94l-2.7,-0.98l-2.69,0.3l-0.87,0.64l-0.47,1.6l-0.75,1.16l-0.12,1.53l-1.57,-1.1l-1.31,0.24l0.03,-0.81l-0.32,-0.41l-2.59,-0.52l-0.15,-1.16l-1.35,-1.6l-0.29,-1.0l0.13,-0.84l1.29,-0.08l1.08,-0.92l3.31,-0.22l2.22,-0.41l0.32,-0.34l0.2,-1.47l1.39,-1.88l-0.01,-5.66l3.36,-1.12l7.24,-5.12l8.42,-4.92l3.69,1.06Z", name: "Niger" }, NG: { path: "M456.32,253.89l0.64,0.65l-0.28,1.04l-2.11,2.01l-2.03,5.18l-1.37,1.16l-1.15,3.18l-1.33,0.66l-1.46,-0.97l-1.21,0.16l-1.38,1.36l-0.91,0.24l-1.79,4.06l-2.33,0.81l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-3.95,-0.08l0.07,-5.21l0.42,-1.43l1.95,-2.3l-0.14,-0.91l0.43,-1.18l-0.53,-1.41l0.25,-2.92l0.72,-1.07l0.32,-1.34l0.46,-0.39l2.47,-0.28l2.34,0.89l1.15,1.02l1.28,0.04l1.22,-0.58l3.03,1.27l1.49,-0.14l1.36,-1.0l1.33,0.07l0.82,-0.35l3.45,0.8l1.82,-1.32l1.84,2.67l0.66,0.16Z", name: "Nigeria" }, NZ: { path: "M857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79Z", name: "New Zealand" }, NP: { path: "M641.14,213.62l0.01,3.19l-1.74,0.04l-4.8,-0.86l-1.58,-1.39l-3.37,-0.34l-7.65,-3.7l0.8,-2.09l2.33,-1.7l1.77,0.75l2.49,1.76l1.38,0.41l0.99,1.35l1.9,0.52l1.99,1.17l5.49,0.9Z", name: "Nepal" }, CI: { path: "M407.4,259.27l0.86,0.42l0.56,0.9l1.13,0.53l1.19,-0.61l0.97,-0.08l1.42,0.54l0.6,3.24l-1.03,2.08l-0.65,2.84l1.06,2.33l-0.06,0.53l-2.54,-0.47l-1.66,0.03l-3.06,0.46l-4.11,1.6l0.32,-3.06l-1.18,-1.31l-1.32,-0.66l0.42,-0.85l-0.2,-1.4l0.5,-0.67l0.01,-1.59l0.84,-0.32l0.26,-0.5l-1.15,-3.01l0.12,-0.5l0.51,-0.25l0.66,0.31l1.93,0.02l0.67,-0.71l0.71,-0.14l0.25,0.69l0.57,0.22l1.4,-0.61Z", name: "C\xF4te d'Ivoire" }, CH: { path: "M444.62,156.35l-0.29,0.87l0.18,0.53l1.13,0.58l1.0,0.1l-0.1,0.65l-0.79,0.38l-1.72,-0.37l-0.45,0.23l-0.45,1.04l-0.75,0.06l-0.84,-0.4l-1.32,1.0l-0.96,0.12l-0.88,-0.55l-0.81,-1.3l-0.49,-0.16l-0.63,0.26l0.02,-0.65l1.71,-1.66l0.1,-0.56l0.93,0.08l0.58,-0.46l1.99,0.02l0.66,-0.61l2.19,0.79Z", name: "Switzerland" }, CO: { path: "M242.07,254.93l-1.7,0.59l-0.59,1.18l-1.7,1.69l-0.38,1.93l-0.67,1.43l0.31,0.57l1.03,0.13l0.25,0.9l0.57,0.64l-0.04,2.34l1.64,1.42l3.16,-0.24l1.26,0.28l1.67,2.06l0.41,0.13l4.09,-0.39l0.45,0.22l-0.92,1.95l-0.2,1.8l0.52,1.83l0.75,1.05l-1.12,1.1l0.07,0.63l0.84,0.51l0.74,1.29l-0.39,-0.45l-0.59,-0.01l-0.71,0.74l-4.71,-0.05l-0.4,0.41l0.03,1.57l0.33,0.39l1.11,0.2l-1.68,0.4l-0.29,0.38l-0.01,1.82l1.16,1.14l0.34,1.25l-1.05,7.05l-1.04,-0.87l1.26,-1.99l-0.13,-0.56l-2.18,-1.23l-1.38,0.2l-1.14,-0.38l-1.27,0.61l-1.55,-0.26l-1.38,-2.46l-1.23,-0.75l-0.85,-1.2l-1.67,-1.19l-0.86,0.13l-2.11,-1.32l-1.01,0.31l-1.8,-0.29l-0.52,-0.91l-3.09,-1.68l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.25,0.45Z", name: "Colombia" }, CN: { path: "M740.23,148.97l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.89l-0.91,-1.01l-0.64,0.07l-0.92,1.57l-3.73,1.25l-0.26,0.48l0.26,1.06l-1.5,-0.08l-1.09,-0.86l-0.56,0.06l-1.67,2.06l-2.7,1.56l-2.03,1.88l-3.4,0.83l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.89,3.82l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.36,-0.84l-1.3,0.4l-2.31,-0.62l-0.94,-0.84l0.33,-1.28l-0.3,-0.49l-2.19,-0.46l-1.13,-0.93l-0.47,-0.02l-2.06,1.36l-4.29,0.28l-2.76,1.05l-0.28,0.43l0.32,2.53l-0.59,-0.03l-0.19,-1.34l-0.55,-0.34l-1.68,0.7l-2.46,-1.23l0.62,-1.87l-0.26,-0.51l-1.37,-0.44l-0.54,-2.22l-0.45,-0.3l-2.13,0.35l0.24,-2.48l2.39,-2.4l0.03,-4.31l-1.19,-0.92l-0.78,-1.49l-0.41,-0.21l-1.41,0.19l-1.98,-0.3l0.46,-1.07l-1.17,-1.7l-0.55,-0.11l-1.63,1.05l-2.25,-0.57l-2.89,1.73l-2.25,1.98l-1.75,0.29l-1.17,-0.71l-3.31,-0.65l-1.48,0.79l-1.04,1.27l-0.12,-1.17l-0.54,-0.34l-1.44,0.54l-5.55,-0.86l-1.98,-1.16l-1.89,-0.54l-0.99,-1.35l-1.34,-0.37l-2.55,-1.79l-2.01,-0.84l-1.21,0.56l-5.57,-3.45l-0.53,-2.31l1.19,0.25l0.48,-0.37l0.08,-1.42l-0.98,-1.56l0.15,-2.44l-2.69,-3.32l-4.12,-1.23l-0.67,-2.0l-1.92,-1.48l-0.38,-0.7l-0.51,-3.01l-1.52,-0.66l-0.7,0.13l-0.48,-2.05l0.55,-0.51l-0.09,-0.82l2.03,-1.19l1.6,-0.54l2.56,0.38l0.42,-0.22l0.85,-1.7l3.0,-0.33l1.1,-1.26l4.05,-1.77l0.39,-0.91l-0.17,-1.44l1.45,-0.67l0.2,-0.52l-2.07,-4.9l4.51,-1.12l1.37,-0.73l1.89,-5.51l4.98,0.86l1.51,-1.7l0.11,-2.87l1.99,-0.38l1.83,-2.06l0.49,-0.13l0.68,2.08l2.23,1.77l3.44,1.16l1.55,2.29l-0.92,3.49l0.96,1.67l6.54,1.13l2.95,1.87l1.47,0.35l1.06,2.62l1.53,1.91l3.05,0.08l5.14,0.67l3.37,-0.41l2.36,0.43l3.65,1.8l3.06,0.04l1.45,0.88l2.87,-1.59l3.95,-1.02l3.83,-0.14l3.06,-1.14l1.77,-1.6l1.72,-1.01l0.17,-0.49l-1.1,-2.05l1.02,-1.54l4.02,0.8l2.45,-1.61l3.76,-1.19l1.96,-2.13l1.63,-0.83l3.51,-0.4l1.92,0.34l0.46,-0.3l0.17,-1.5l-2.27,-2.22l-2.11,-1.09l-2.18,1.11l-2.32,-0.47l-1.29,0.32l-0.4,-0.82l2.73,-5.16l3.02,1.06l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.49,-1.35l-0.03,-1.85l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37Z", name: "China" }, CM: { path: "M457.92,257.49l1.05,1.91l-1.4,0.16l-1.05,-0.23l-0.45,0.22l-0.54,1.19l0.08,0.45l1.48,1.47l1.05,0.45l1.01,2.46l-1.52,2.99l-0.68,0.68l-0.13,3.69l2.38,3.84l1.09,0.8l0.24,2.48l-3.67,-1.14l-11.27,-0.13l0.23,-1.79l-0.98,-1.66l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l1.71,-4.27l0.75,-0.13l1.38,-1.36l0.65,-0.03l1.71,0.99l1.93,-1.12l1.14,-3.18l1.38,-1.17l2.0,-5.14l2.17,-2.13l0.3,-1.64l-0.86,-0.88l0.03,-0.33l0.94,1.28l0.07,3.22Z", name: "Cameroon" }, CL: { path: "M246.5,429.18l-3.14,1.83l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.66,-7.76l1.03,-0.53l0.54,-0.9l0.79,1.14l0.32,1.78l1.25,1.16l-0.69,2.55l1.33,2.9l0.97,3.59l0.46,0.29l1.5,-0.3l0.11,0.23l-0.76,2.44l-2.57,1.23l-0.23,0.37l0.08,4.33l-0.46,0.77l0.56,1.21l-1.58,1.51l-1.68,2.62l-0.89,2.47l0.2,2.7l-1.48,2.73l1.12,5.09l0.64,0.61l-0.01,2.29l-1.38,2.68l0.01,2.4l-1.89,2.04l0.02,2.75l0.69,2.57l-1.43,1.13l-1.26,5.68l0.39,3.51l-0.97,0.89l0.58,3.5l1.02,1.14l-0.65,1.02l0.15,0.57l1.0,0.53l0.16,0.69l-1.03,0.85l0.26,1.75l-0.89,4.03l-1.31,2.66l0.24,1.75l-0.71,1.83l-1.99,1.7l0.3,3.67l0.88,1.19l1.58,0.01l0.01,2.21l1.04,1.95l5.98,0.63ZM248.69,430.79l0.0,7.33l0.4,0.4l3.52,0.05l-0.44,0.75l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-5.59,-3.71l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.31,0.29Z", name: "Chile" }, CA: { path: "M280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM68.32,74.16l4.13,0.95l4.02,2.14l2.61,0.4l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-6.39,0.2l-2.3,2.41l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-6.63,0.45l-1.39,-1.49l-0.14,-4.43l-1.11,-0.91l-1.82,0.39l-0.66,-0.66l-0.6,0.03l-1.91,2.39l-0.82,2.52l-0.8,1.27l-1.67,0.56l-0.46,0.76l-8.31,0.07l-1.21,0.62l-2.35,1.97l-0.71,-0.14l-1.37,0.96l-1.12,-0.48l-4.74,1.26l-0.9,1.17l0.21,0.62l1.73,0.3l-1.81,0.31l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-0.69,-0.09l1.39,-2.1l1.73,-1.21l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.94,-0.66l-4.31,-0.65l-1.13,1.19l-1.48,0.59l-0.85,1.06l-2.83,-0.76l-2.09,0.39l-2.39,-0.97l-4.24,-0.7l-0.57,-0.4l-0.41,-1.63l-0.4,-0.3l-0.85,0.02l-0.39,0.4l-0.01,0.85l-69.13,-0.01l-6.51,-4.52l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.04,-1.45l1.39,-1.83l-0.28,-2.55l-4.16,-2.2l-4.07,-6.6l-4.02,-3.22l-1.3,-1.88l-0.5,-0.13l-2.51,1.21l-2.23,1.87l-3.85,-3.88l-2.44,-1.04l-2.22,-0.13l0.03,-37.49ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82Z", name: "Canada" }, CG: { path: "M466.72,276.48l-0.1,1.03l-1.25,2.97l-0.19,3.62l-0.46,1.78l-0.23,0.63l-1.61,1.19l-1.21,1.39l-1.09,2.43l0.04,2.09l-3.25,3.24l-0.5,-0.24l-0.5,-0.83l-1.36,-0.02l-0.98,0.89l-1.68,-0.99l-1.54,1.24l-1.52,-1.96l1.57,-1.14l0.11,-0.52l-0.77,-1.35l2.1,-0.66l0.39,-0.73l1.05,0.82l2.21,0.11l1.12,-1.37l0.37,-1.81l-0.27,-2.09l-1.13,-1.5l1.0,-2.69l-0.13,-0.45l-0.92,-0.58l-1.6,0.17l-0.51,-0.94l0.1,-0.61l2.75,0.09l3.97,1.24l0.51,-0.33l0.17,-1.28l1.24,-2.21l1.28,-1.14l2.76,0.49Z", name: "Congo" }, CF: { path: "M461.16,278.2l-0.26,-1.19l-1.09,-0.77l-0.84,-1.17l-0.29,-1.0l-1.04,-1.15l0.08,-3.43l0.58,-0.49l1.16,-2.35l1.85,-0.17l0.61,-0.62l0.97,0.58l3.15,-0.96l2.48,-1.92l0.02,-0.96l2.81,0.02l2.36,-1.17l1.93,-2.85l1.16,-0.93l1.11,-0.3l0.27,0.86l1.34,1.47l-0.39,2.01l0.3,1.01l4.01,2.75l0.17,0.93l2.63,2.31l0.6,1.44l2.08,1.4l-3.84,-0.21l-1.94,0.88l-1.23,-0.49l-2.67,1.2l-1.29,-0.18l-0.51,0.36l-0.6,1.22l-3.35,-0.65l-1.57,-0.91l-2.42,-0.83l-1.45,0.91l-0.97,1.27l-0.26,1.56l-3.22,-0.43l-1.49,1.33l-0.94,1.62Z", name: "Central African Rep." }, CD: { path: "M487.01,272.38l2.34,-0.14l1.35,1.84l1.34,0.45l0.86,-0.39l1.21,0.12l1.07,-0.41l0.54,0.89l2.04,1.54l-0.14,2.72l0.7,0.54l-1.38,1.13l-1.53,2.54l-0.17,2.05l-0.59,1.08l-0.02,1.72l-0.72,0.84l-0.66,3.01l0.63,1.32l-0.44,4.26l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.44,0.5l-4.08,0.75l-0.92,1.81l0.51,1.34l-0.74,5.43l0.17,0.38l2.45,1.46l0.54,-0.1l0.12,1.62l-1.28,-0.01l-1.85,-2.35l-1.94,-0.45l-0.48,-1.13l-0.55,-0.2l-1.41,0.74l-1.71,-0.3l-1.01,-1.18l-2.49,-0.19l-0.44,-0.77l-1.98,-0.21l-2.88,0.36l0.11,-2.41l-0.85,-1.13l-0.16,-1.36l0.32,-1.73l-0.46,-0.89l-0.04,-1.49l-0.4,-0.39l-2.53,0.02l0.1,-0.41l-0.39,-0.49l-1.28,0.01l-0.43,0.45l-1.62,0.32l-0.83,1.79l-1.09,-0.28l-2.4,0.52l-1.37,-1.91l-1.3,-3.3l-0.38,-0.27l-7.39,-0.03l-2.46,0.42l0.5,-0.45l0.37,-1.47l0.66,-0.38l0.92,0.08l0.73,-0.82l0.87,0.02l0.31,0.68l1.4,0.36l3.59,-3.63l0.01,-2.23l1.02,-2.29l2.69,-2.39l0.43,-0.99l0.49,-1.96l0.17,-3.51l1.25,-2.95l0.36,-3.14l0.86,-1.13l1.1,-0.66l3.57,1.73l3.65,0.73l0.46,-0.21l0.8,-1.46l1.24,0.19l2.61,-1.17l0.81,0.44l1.04,-0.03l0.59,-0.66l0.7,-0.16l1.81,0.25Z", name: "Dem. Rep. Congo" }, CZ: { path: "M458.46,144.88l1.22,1.01l1.47,0.23l0.13,0.93l1.36,0.68l0.54,-0.2l0.24,-0.55l1.15,0.25l0.53,1.09l1.68,0.18l0.6,0.84l-1.04,0.73l-0.96,1.28l-1.6,0.17l-0.55,0.56l-1.04,-0.46l-1.05,0.15l-2.12,-0.96l-1.05,0.34l-1.2,1.12l-1.56,-0.87l-2.57,-2.1l-0.53,-1.88l4.7,-2.52l0.71,0.26l0.9,-0.28Z", name: "Czech Rep." }, CY: { path: "M504.36,193.47l0.43,0.28l-1.28,0.57l-0.92,-0.28l-0.24,-0.46l2.01,-0.13Z", name: "Cyprus" }, CR: { path: "M211.34,258.05l0.48,0.99l1.6,1.6l-0.54,0.45l0.29,1.42l-0.25,1.19l-1.09,-0.59l-0.05,-1.25l-2.46,-1.42l-0.28,-0.77l-0.66,-0.45l-0.45,-0.0l-0.11,1.04l-1.32,-0.95l0.31,-1.3l-0.36,-0.6l0.31,-0.27l1.42,0.58l1.29,-0.14l0.56,0.56l0.74,0.17l0.55,-0.27Z", name: "Costa Rica" }, CU: { path: "M221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84Z", name: "Cuba" }, SZ: { path: "M500.35,351.36l0.5,2.04l-0.38,0.89l-1.05,0.21l-1.23,-1.2l-0.02,-0.64l0.83,-1.57l1.34,0.27Z", name: "Swaziland" }, SY: { path: "M511.0,199.79l0.05,-1.33l0.54,-1.36l1.28,-0.99l0.13,-0.45l-0.41,-1.11l-1.14,-0.36l-0.19,-1.74l0.52,-1.0l1.29,-1.21l0.2,-1.18l0.59,0.23l2.62,-0.76l1.36,0.52l2.06,-0.01l2.95,-1.08l3.25,-0.26l-0.67,0.94l-1.28,0.66l-0.21,0.4l0.23,2.01l-0.88,3.19l-10.15,5.73l-2.15,-0.85Z", name: "Syria" }, KG: { path: "M621.35,172.32l-3.87,1.69l-0.96,1.18l-3.04,0.34l-1.13,1.86l-2.36,-0.35l-1.99,0.63l-2.39,1.4l0.06,0.95l-0.4,0.37l-4.52,0.43l-3.02,-0.93l-2.37,0.17l0.11,-0.79l2.32,0.42l1.13,-0.88l1.99,0.2l3.21,-2.14l-0.03,-0.69l-2.97,-1.57l-1.94,0.65l-1.22,-0.74l1.71,-1.58l-0.12,-0.67l-0.36,-0.15l0.32,-0.77l1.36,-0.35l4.02,1.02l0.49,-0.3l0.35,-1.59l1.09,-0.48l3.42,1.22l1.11,-0.31l7.64,0.39l1.16,1.0l1.23,0.39Z", name: "Kyrgyzstan" }, KE: { path: "M506.26,284.69l1.87,-2.56l0.93,-2.15l-1.38,-4.08l-1.06,-1.6l2.82,-2.75l0.79,0.26l0.12,1.41l0.86,0.83l1.9,0.11l3.28,2.13l3.57,0.44l1.05,-1.12l1.96,-0.9l0.82,0.68l1.16,0.09l-1.78,2.45l0.03,9.12l1.3,1.94l-1.37,0.78l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-0.68,0.56l-3.2,-2.23l-0.35,-1.58l-8.86,-4.98l0.14,-1.6l-0.57,-1.04Z", name: "Kenya" }, SS: { path: "M481.71,263.34l1.07,-0.72l1.2,-3.18l1.36,-0.26l1.61,1.99l0.87,0.34l1.1,-0.41l1.5,0.07l0.57,0.53l2.49,0.0l0.44,-0.63l1.07,-0.4l0.45,-0.84l0.59,-0.33l1.9,1.33l1.6,-0.2l2.83,-3.33l-0.32,-2.21l1.59,-0.52l-0.24,1.6l0.3,1.83l1.35,1.18l0.2,1.87l0.35,0.41l0.02,1.53l-0.23,0.47l-1.42,0.25l-0.85,1.44l0.3,0.6l1.4,0.16l1.11,1.08l0.59,1.13l1.03,0.53l1.28,2.36l-4.41,3.98l-1.74,0.01l-1.89,0.55l-1.47,-0.52l-1.15,0.57l-2.96,-2.62l-1.3,0.49l-1.06,-0.15l-0.79,0.39l-0.82,-0.22l-1.8,-2.7l-1.91,-1.1l-0.66,-1.5l-2.62,-2.32l-0.18,-0.94l-2.37,-1.6Z", name: "S. Sudan" }, SR: { path: "M283.12,270.19l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-0.59,2.03l-0.43,0.71l-1.12,-0.42l-1.32,0.22l-0.93,-0.2l-0.46,0.26l-0.25,0.73l0.33,0.7l-0.89,-0.13l-1.39,-1.97l-0.31,-1.34l-0.97,-0.31l-0.89,-1.47l0.35,-1.61l1.45,-0.82l0.33,-1.87l2.61,0.44l0.57,-0.47l1.75,-0.16Z", name: "Suriname" }, KH: { path: "M689.52,249.39l0.49,1.45l-0.28,2.74l-4.0,1.86l-0.16,0.6l0.68,0.95l-2.06,0.17l-2.05,0.97l-1.82,-0.32l-2.12,-3.7l-0.55,-2.85l1.4,-1.85l3.02,-0.45l2.23,0.35l2.01,0.98l0.51,-0.14l0.95,-1.48l1.74,0.74Z", name: "Cambodia" }, SV: { path: "M195.8,250.13l1.4,-1.19l2.24,1.45l0.98,-0.27l0.44,0.2l-0.27,1.05l-1.14,-0.03l-3.64,-1.21Z", name: "El Salvador" }, SK: { path: "M476.82,151.17l-1.14,1.9l-2.73,-0.92l-0.82,0.2l-0.74,0.8l-3.46,0.73l-0.47,0.69l-1.76,0.33l-1.88,-1.0l-0.18,-0.81l0.38,-0.75l1.87,-0.32l1.74,-1.89l0.83,0.16l0.79,-0.34l1.51,1.04l1.34,-0.63l1.25,0.3l1.65,-0.42l1.81,0.95Z", name: "Slovakia" }, KR: { path: "M737.51,185.84l0.98,-0.1l0.87,-1.17l2.69,-0.32l0.33,-0.29l1.76,2.79l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.43,-2.06Z", name: "Korea" }, SI: { path: "M456.18,162.07l-0.51,-1.32l0.18,-1.05l1.69,0.2l1.42,-0.71l2.09,-0.07l0.62,-0.51l0.21,0.47l-1.61,0.67l-0.44,1.34l-0.66,0.24l-0.26,0.82l-1.22,-0.49l-0.84,0.46l-0.69,-0.04Z", name: "Slovenia" }, KP: { path: "M736.77,185.16l-0.92,-0.42l-0.88,0.62l-1.21,-0.88l0.96,-1.15l0.59,-2.59l-0.46,-0.74l-2.09,-0.77l1.64,-1.52l2.72,-1.58l1.58,-1.91l1.11,0.78l2.17,0.11l0.41,-0.5l-0.3,-1.22l3.52,-1.18l0.94,-1.4l0.98,1.08l-2.19,2.18l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l0.94,0.45l1.15,1.04l-0.13,0.26l-2.6,0.29l-1.13,1.29l-1.22,0.08Z", name: "Dem. Rep. Korea" }, SO: { path: "M525.13,288.48l-1.13,-1.57l-0.03,-8.86l2.66,-3.38l1.67,-0.13l2.13,-1.69l3.41,-0.23l7.08,-7.55l2.91,-3.69l0.08,-4.82l2.98,-0.67l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-0.8,1.56Z", name: "Somalia" }, SN: { path: "M390.09,248.21l0.12,1.55l0.49,1.46l0.96,0.82l0.05,1.28l-1.26,-0.19l-0.75,0.33l-1.84,-0.61l-5.84,-0.13l-2.54,0.51l-0.22,-1.03l1.77,0.04l2.01,-0.91l1.03,0.48l1.09,0.04l1.29,-0.62l0.14,-0.58l-0.51,-0.74l-1.81,0.25l-1.13,-0.63l-0.79,0.04l-0.72,0.61l-2.31,0.06l-0.92,-1.77l-0.81,-0.64l0.64,-0.35l2.46,-3.74l1.04,0.19l1.38,-0.56l1.19,-0.02l2.72,1.37l3.03,3.48Z", name: "Senegal" }, SL: { path: "M394.46,264.11l-1.73,1.98l-0.58,1.33l-2.07,-1.06l-1.22,-1.26l-0.65,-2.39l1.16,-0.96l0.67,-1.17l1.21,-0.52l1.66,0.0l1.03,1.64l0.52,2.41Z", name: "Sierra Leone" }, SB: { path: "M826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23Z", name: "Solomon Is." }, SA: { path: "M537.53,210.34l2.0,0.24l0.9,1.32l1.49,-0.06l0.87,2.08l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l0.32,0.9l1.58,2.47l0.76,0.53l0.7,-0.04l1.68,4.23l7.53,1.33l0.51,-0.29l0.77,1.25l-1.55,4.87l-7.29,2.52l-7.3,1.03l-2.34,1.17l-1.88,2.74l-0.76,0.28l-0.82,-0.78l-0.91,0.12l-2.88,-0.51l-3.51,0.25l-0.86,-0.56l-0.57,0.15l-0.66,1.27l0.16,1.11l-0.43,0.32l-0.93,-1.4l-0.33,-1.16l-1.23,-0.88l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.37,-1.96l0.2,-0.72l2.74,0.3l1.08,-0.84l0.6,-0.94l1.74,-0.35l0.65,-1.03l0.71,-0.4l0.1,-0.62l-2.06,-2.28l4.39,-1.22l0.48,-0.37l2.77,0.69l3.66,1.9l7.03,5.5l4.87,0.3Z", name: "Saudi Arabia" }, SE: { path: "M480.22,89.3l-4.03,1.17l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.83,-4.96l1.0,-1.93l2.14,-2.7l0.83,-4.45l-1.6,-2.17l-0.15,-4.94l1.48,-3.39l2.58,-0.15l0.87,-1.59l-0.78,-1.57l3.76,-5.59l4.04,-7.48l2.17,0.01l0.39,-0.29l0.57,-2.07l4.37,0.64l0.46,-0.34l0.33,-2.56l1.1,-0.13l6.94,4.87l0.06,6.32l0.66,1.36Z", name: "Sweden" }, SD: { path: "M505.98,259.4l-0.34,-0.77l-1.17,-0.9l-0.26,-1.61l0.29,-1.81l-0.34,-0.46l-1.16,-0.17l-0.54,0.59l-1.23,0.11l-0.28,0.65l0.53,0.65l0.17,1.22l-2.44,3.0l-0.96,0.19l-2.39,-1.4l-0.95,0.52l-0.38,0.78l-1.11,0.41l-0.29,0.5l-1.94,0.0l-0.54,-0.52l-1.81,-0.09l-0.95,0.4l-2.45,-2.35l-2.07,0.54l-0.73,1.26l-0.6,2.1l-1.25,0.58l-0.75,-0.62l0.27,-2.65l-1.48,-1.78l-0.22,-1.48l-0.92,-0.96l-0.02,-1.29l-0.57,-1.16l-0.68,-0.16l0.69,-1.29l-0.18,-1.14l0.65,-0.62l0.03,-0.55l-0.36,-0.41l1.55,-2.97l1.91,0.16l0.43,-0.4l-0.1,-10.94l2.49,-0.01l0.4,-0.4l-0.0,-4.82l29.02,0.0l0.64,2.04l-0.49,0.66l0.36,2.69l0.93,3.16l2.12,1.55l-0.89,1.04l-1.72,0.39l-0.98,0.9l-1.43,5.65l0.24,1.15l-0.38,2.06l-0.96,2.38l-1.53,1.31l-1.32,2.91l-1.22,0.86l-0.37,1.34Z", name: "Sudan" }, DO: { path: "M241.8,239.2l0.05,-0.65l-0.46,-0.73l0.42,-0.44l0.19,-1.0l-0.09,-1.53l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.23,-0.61Z", name: "Dominican Rep." }, DJ: { path: "M528.43,256.18l-0.45,0.66l-0.58,-0.25l-1.51,0.13l-0.18,-1.01l1.45,-1.95l0.83,0.17l0.77,-0.44l0.2,1.0l-1.2,0.51l-0.06,0.7l0.73,0.47Z", name: "Djibouti" }, DK: { path: "M452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM447.74,126.31l-0.26,0.57l-0.88,-0.07l-1.8,2.53l0.48,1.69l-1.09,0.36l-1.61,-0.39l-0.89,-1.69l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64Z", name: "Denmark" }, DE: { path: "M453.14,155.55l-0.55,-0.36l-1.2,-0.1l-1.87,0.57l-2.13,-0.13l-0.56,0.63l-0.86,-0.6l-0.96,0.09l-2.57,-0.93l-0.85,0.67l-1.47,-0.02l0.24,-1.75l1.23,-2.14l-0.28,-0.59l-3.52,-0.58l-0.92,-0.66l0.12,-1.2l-0.48,-0.88l0.27,-2.17l-0.37,-3.03l1.41,-0.22l0.63,-1.26l0.66,-3.19l-0.41,-1.18l0.26,-0.39l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l-0.54,-3.02l1.37,0.33l1.31,-0.37l0.31,1.18l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l2.57,1.24l1.06,0.98l0.48,1.44l-0.57,0.74l-0.0,0.48l0.87,1.15l0.57,1.64l-0.14,1.29l0.82,1.7l-1.5,-0.07l-0.56,0.57l-4.47,2.15l-0.22,0.54l0.68,2.26l2.58,2.16l-0.66,1.11l-0.79,0.36l-0.23,0.43l0.32,1.87Z", name: "Germany" }, YE: { path: "M528.27,246.72l0.26,-0.42l-0.22,-1.01l0.19,-1.5l0.92,-0.69l-0.07,-1.35l0.39,-0.75l1.01,0.47l3.34,-0.27l3.76,0.41l0.95,0.81l1.36,-0.58l1.74,-2.62l2.18,-1.09l6.86,-0.94l2.48,5.41l-1.64,0.76l-0.56,1.9l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29Z", name: "Yemen" }, AT: { path: "M462.89,152.8l0.04,2.25l-1.07,0.0l-0.33,0.63l0.36,0.51l-1.04,2.13l-2.02,0.07l-1.33,0.7l-5.29,-0.99l-0.47,-0.93l-0.44,-0.21l-2.47,0.55l-0.42,0.51l-3.18,-0.81l0.43,-0.91l1.12,0.78l0.6,-0.17l0.25,-0.58l1.93,0.12l1.86,-0.56l1.0,0.08l0.68,0.57l0.62,-0.15l0.26,-0.77l-0.3,-1.78l0.8,-0.44l0.68,-1.15l1.52,0.85l0.47,-0.06l1.34,-1.25l0.64,-0.17l1.81,0.92l1.28,-0.11l0.7,0.37Z", name: "Austria" }, DZ: { path: "M441.46,188.44l-0.32,1.07l0.39,2.64l-0.54,2.16l-1.58,1.82l0.37,2.39l1.91,1.55l0.18,0.8l1.42,1.03l1.84,7.23l0.12,1.16l-0.57,5.0l0.2,1.51l-0.87,0.99l-0.02,0.51l1.41,1.86l0.14,1.2l0.89,1.48l0.5,0.16l0.98,-0.41l1.73,1.08l0.82,1.23l-8.22,4.81l-7.23,5.11l-3.43,1.13l-2.3,0.21l-0.28,-1.59l-2.56,-1.09l-0.67,-1.25l-26.12,-17.86l0.01,-3.47l3.77,-1.88l2.44,-0.41l2.12,-0.75l1.08,-1.42l2.81,-1.05l0.35,-2.08l1.33,-0.29l1.04,-0.94l3.47,-0.69l0.46,-1.08l-0.1,-0.45l-0.58,-0.52l-0.82,-2.81l-0.19,-1.83l-0.78,-1.49l2.03,-1.31l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l0.92,0.6l1.35,-0.05Z", name: "Algeria" }, US: { path: "M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM183.22,150.47l0.37,1.47l1.12,0.85l4.23,0.7l2.39,0.98l2.17,-0.38l1.85,0.5l-1.55,0.65l-3.49,2.61l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l1.31,0.21l0.58,0.58l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l0.67,1.58l0.61,0.45l1.77,-0.44l1.6,-1.96l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.5,2.6l-2.49,3.75l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.72,-2.15l2.16,-1.8l-0.05,-1.24l0.75,-0.22l3.92,0.36l2.12,-1.05l0.21,-0.4l-0.28,-1.48l3.27,-2.4l8.32,-0.02l0.56,-0.82l1.9,-0.77l0.93,-1.51l0.74,-2.37l1.58,-1.98l0.92,0.62l1.47,-0.47l0.8,0.66l-0.0,4.09l1.96,2.6l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-2.64,3.03l-0.45,2.12l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.48,-1.68l-0.72,-1.78l-2.01,-2.38l-1.12,-0.53l-2.72,1.18l-1.47,-1.35l-1.57,-0.68l-2.99,0.31l-2.17,-0.3l-2.0,0.19l-1.15,0.46l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.45,1.41l-0.61,1.38l0.34,3.71l-0.29,0.02l-3.5,-1.33l-1.25,-3.11l-1.44,-1.5l-2.24,-3.56l-1.76,-1.09l-2.27,-0.01l-1.71,2.07l-1.76,-0.69l-1.16,-0.74l-1.52,-2.98l-3.93,-3.16l-4.34,-0.0l-0.4,0.4l-0.0,0.74l-6.5,0.02l-9.02,-3.14l-0.34,-0.71l-5.7,0.49l-0.43,-1.29l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-1.1,-4.79l68.76,-0.0l0.4,-0.4l0.14,-0.86ZM32.44,67.52l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l6.14,1.87l-0.03,38.06l0.38,0.4l2.39,0.11l2.31,0.98l3.9,3.99l0.55,0.04l2.4,-2.03l2.16,-1.04l1.2,1.71l3.95,3.14l4.09,6.63l4.2,2.29l0.06,1.83l-1.02,1.23l-1.16,-1.08l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.23,-0.14l3.36,-2.07l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z", name: "United States" }, LV: { path: "M489.16,122.85l0.96,0.66l0.22,1.65l0.68,1.76l-3.65,1.7l-2.23,-1.58l-1.29,-0.26l-0.68,-0.77l-2.42,0.34l-4.16,-0.23l-2.47,0.9l0.06,-1.98l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.44,-2.52l1.76,-0.53l3.06,1.7l2.15,0.07Z", name: "Latvia" }, UY: { path: "M286.85,372.74l-0.92,1.5l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.39,-1.19l-1.52,0.08l-1.27,-1.3l0.16,-1.5l0.56,-0.79l-0.02,-2.73l1.21,-4.74l1.19,-0.21l2.37,2.0l1.08,0.03l4.36,3.17l1.22,1.6l-0.96,1.5l0.61,1.4Z", name: "Uruguay" }, LB: { path: "M510.37,198.01l-0.88,0.51l1.82,-3.54l0.62,0.08l0.22,0.61l-1.13,0.88l-0.65,1.47Z", name: "Lebanon" }, LA: { path: "M689.54,248.53l-1.76,-0.74l-0.49,0.15l-0.94,1.46l-1.32,-0.64l0.62,-0.98l0.11,-2.17l-2.04,-2.42l-0.25,-2.65l-1.9,-2.1l-2.15,-0.31l-0.78,0.91l-1.12,0.06l-1.05,-0.4l-2.06,1.2l-0.04,-1.59l0.61,-2.68l-0.36,-0.49l-1.35,-0.1l-0.11,-1.23l-0.96,-0.88l1.96,-1.89l0.39,0.36l1.33,0.07l0.42,-0.45l-0.34,-2.66l0.7,-0.21l1.28,1.81l1.11,2.35l0.36,0.23l2.82,0.02l0.71,1.67l-1.39,0.65l-0.72,0.93l0.13,0.6l2.91,1.51l3.6,5.25l1.88,1.78l0.56,1.62l-0.35,1.96Z", name: "Lao PDR" }, TW: { path: "M724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52Z", name: "Taiwan" }, TT: { path: "M266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18Z", name: "Trinidad and Tobago" }, TR: { path: "M513.21,175.47l3.64,1.17l3.05,-0.44l2.1,0.26l3.11,-1.56l2.46,-0.13l2.19,1.33l0.33,0.82l-0.22,1.33l0.25,0.44l2.28,1.13l-1.17,0.57l-0.21,0.45l0.75,3.2l-0.41,1.16l1.13,1.92l-0.55,0.22l-0.9,-0.67l-2.91,-0.37l-1.24,0.46l-4.23,0.41l-2.81,1.05l-1.91,0.01l-1.52,-0.53l-2.58,0.75l-0.66,-0.45l-0.62,0.3l-0.12,1.45l-0.89,0.84l-0.47,-0.67l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z", name: "Turkey" }, LK: { path: "M624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58Z", name: "Sri Lanka" }, TN: { path: "M448.1,188.24l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l0.9,0.52l-0.11,1.67l-3.54,2.64l-0.1,2.38l-0.58,0.3l-0.96,-4.45l-1.54,-1.25l-0.16,-0.78l-1.92,-1.56l-0.18,-1.76l1.51,-1.62l0.59,-2.34l-0.38,-2.78l0.42,-1.21l2.45,-1.05l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73Z", name: "Tunisia" }, TL: { path: "M734.55,307.93l-0.1,-0.97l4.5,-0.86l-2.82,1.28l-1.59,0.55Z", name: "Timor-Leste" }, TM: { path: "M553.03,173.76l-0.04,0.34l-0.09,-0.22l0.13,-0.12ZM555.87,172.66l0.45,-0.1l1.48,0.74l2.06,2.43l4.07,-0.18l0.38,-0.51l-0.32,-1.19l1.92,-0.94l1.91,-1.59l2.94,1.39l0.43,2.47l1.19,0.67l2.58,-0.13l0.62,0.4l1.32,3.12l4.54,3.44l2.67,1.45l3.06,1.14l-0.04,1.05l-1.33,-0.75l-0.59,0.19l-0.32,0.84l-2.2,0.81l-0.46,2.13l-1.21,0.74l-1.91,0.42l-0.73,1.33l-1.56,0.31l-2.22,-0.94l-0.2,-2.17l-0.38,-0.36l-1.73,-0.09l-2.76,-2.46l-2.14,-0.4l-2.84,-1.48l-1.78,-0.27l-1.24,0.53l-1.57,-0.08l-2.0,1.69l-1.7,0.43l-0.36,-1.58l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.66,-1.57Z", name: "Turkmenistan" }, TJ: { path: "M597.75,178.82l-2.54,-0.44l-0.47,0.34l-0.24,1.7l0.43,0.45l2.64,-0.22l3.18,0.95l4.39,-0.41l0.56,2.37l0.52,0.29l0.67,-0.24l1.11,0.49l0.21,2.13l-3.76,-0.21l-1.8,1.32l-1.76,0.74l-0.61,-0.58l0.21,-2.23l-0.64,-0.49l-0.07,-0.93l-1.36,-0.66l-0.45,0.07l-1.08,1.01l-0.55,1.48l-1.31,-0.05l-0.95,1.16l-0.9,-0.35l-1.86,0.74l1.26,-2.83l-0.54,-2.17l-1.67,-0.82l0.33,-0.66l2.18,-0.04l1.19,-1.63l0.76,-1.79l2.43,-0.5l-0.26,1.0l0.73,1.05Z", name: "Tajikistan" }, LS: { path: "M491.06,363.48l-0.49,0.15l-1.49,-1.67l1.1,-1.43l2.19,-1.44l1.51,1.27l-0.98,1.82l-1.23,0.38l-0.62,0.93Z", name: "Lesotho" }, TH: { path: "M670.27,255.86l-1.41,3.87l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.55,2.34l1.4,1.44l1.61,0.38l0.96,0.97l-0.5,0.64l-1.1,0.2l-0.34,-1.18l-2.04,-1.1l-0.63,0.23l-0.63,-0.62l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.95,-3.89l2.16,-4.22ZM670.67,254.77l-0.92,-2.18l-0.26,-2.61l-2.14,-3.06l0.71,-0.49l0.89,-2.59l-3.61,-5.45l0.87,-0.51l1.05,-2.58l1.74,-0.18l2.6,-1.59l0.76,0.56l0.13,1.39l0.37,0.36l1.23,0.09l-0.51,2.28l0.05,2.42l0.6,0.34l2.43,-1.42l0.77,0.39l1.47,-0.07l0.71,-0.88l1.48,0.14l1.71,1.88l0.25,2.65l1.92,2.11l-0.1,1.89l-0.61,0.86l-2.22,-0.33l-3.5,0.64l-1.6,2.12l0.36,2.58l-1.51,-0.79l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-0.34,0.93Z", name: "Thailand" }, TF: { path: "M596.68,420.38l-3.2,0.18l-0.05,-1.26l0.39,-1.41l1.3,0.78l2.08,0.35l-0.52,1.36Z", name: "Fr. S. Antarctic Lands" }, TG: { path: "M422.7,257.63l-0.09,1.23l1.53,1.52l0.08,1.09l0.5,0.65l-0.11,5.62l0.49,1.47l-1.31,0.35l-1.02,-2.13l-0.18,-1.12l0.53,-2.19l-0.63,-1.16l-0.22,-3.68l-1.01,-1.4l0.07,-0.28l1.37,0.03Z", name: "Togo" }, TD: { path: "M480.25,235.49l0.12,9.57l-2.1,0.05l-1.14,1.89l-0.69,1.63l0.34,0.73l-0.66,0.91l0.24,0.89l-0.86,1.95l0.45,0.5l0.6,-0.1l0.34,0.64l0.03,1.38l0.9,1.04l-1.45,0.43l-1.27,1.03l-1.83,2.76l-2.16,1.07l-2.31,-0.15l-0.86,0.25l-0.26,0.49l0.17,0.61l-2.11,1.68l-2.85,0.87l-1.09,-0.57l-0.73,0.66l-1.12,0.1l-1.1,-3.12l-1.25,-0.64l-1.22,-1.22l0.29,-0.64l3.01,0.04l0.35,-0.6l-1.3,-2.2l-0.08,-3.31l-0.97,-1.66l0.22,-1.04l-0.38,-0.48l-1.22,-0.04l0.0,-1.25l-0.98,-1.07l0.96,-3.01l3.25,-2.65l0.13,-3.33l0.95,-5.18l0.52,-1.07l-0.1,-0.48l-0.91,-0.78l-0.2,-0.96l-0.8,-0.58l-0.55,-3.65l2.1,-1.2l19.57,9.83Z", name: "Chad" }, LY: { path: "M483.48,203.15l-0.75,1.1l0.29,1.39l-0.6,1.83l0.73,2.14l0.0,24.12l-2.48,0.01l-0.41,0.85l-19.41,-9.76l-4.41,2.28l-1.37,-1.33l-3.82,-1.1l-1.14,-1.65l-1.98,-1.23l-1.22,0.32l-0.66,-1.11l-0.17,-1.26l-1.28,-1.69l0.87,-1.19l-0.07,-4.34l0.43,-2.27l-0.86,-3.45l1.13,-0.76l0.22,-1.16l-0.2,-1.03l3.48,-2.61l0.29,-1.94l2.45,0.8l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.36,0.54Z", name: "Libya" }, AE: { path: "M550.76,223.97l1.88,-0.4l3.84,0.02l4.78,-4.75l0.19,0.36l0.26,1.58l-0.81,0.01l-0.39,0.35l-0.08,2.04l-0.81,0.63l-0.01,0.96l-0.66,0.99l-0.39,1.41l-7.08,-1.25l-0.7,-1.96Z", name: "United Arab Emirates" }, VE: { path: "M240.68,256.69l0.53,0.75l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.55,0.17l-1.66,1.35l-0.22,0.92l0.65,0.97l-1.67,0.54l-0.3,0.4l0.04,0.99l-0.56,0.57l-0.01,0.55l1.85,2.27l-0.66,0.69l-4.47,1.29l-0.72,0.54l-3.69,-0.9l-0.71,0.27l-0.02,0.7l0.91,0.53l-0.08,1.54l0.35,1.58l0.35,0.31l1.66,0.17l-1.3,0.52l-0.48,1.13l-2.68,0.91l-0.6,0.77l-1.57,0.13l-1.17,-1.13l-0.8,-2.52l-1.25,-1.26l1.02,-1.23l-1.29,-2.95l0.18,-1.62l1.0,-2.21l-0.2,-0.49l-1.14,-0.46l-4.02,0.36l-1.82,-2.1l-1.57,-0.33l-2.99,0.22l-1.06,-0.97l0.25,-1.23l-0.2,-1.01l-0.59,-0.69l-0.29,-1.06l-1.08,-0.39l0.78,-2.79l1.9,-2.11Z", name: "Venezuela" }, AF: { path: "M600.7,188.88l-1.57,1.3l-0.1,0.48l0.8,2.31l-1.09,1.04l-0.03,1.27l-0.48,0.71l-2.16,-0.08l-0.37,0.59l0.78,1.48l-1.38,0.69l-1.06,1.69l0.06,1.7l-0.65,0.52l-0.91,-0.21l-1.91,0.36l-0.48,0.77l-1.88,0.13l-1.4,1.56l-0.18,2.32l-2.91,1.02l-1.65,-0.23l-0.71,0.55l-1.41,-0.3l-2.41,0.39l-3.52,-1.17l1.96,-2.35l-0.21,-1.78l-0.3,-0.34l-1.63,-0.4l-0.19,-1.58l-0.75,-2.03l0.95,-1.36l-0.19,-0.6l-0.73,-0.28l1.47,-4.8l2.14,0.9l2.12,-0.36l0.74,-1.34l1.77,-0.39l1.54,-0.92l0.63,-2.31l1.87,-0.5l0.49,-0.81l0.94,0.56l2.13,0.11l2.55,0.92l1.95,-0.83l0.65,0.43l0.56,-0.13l0.69,-1.12l1.57,-0.08l0.72,-1.66l0.79,-0.74l0.8,0.39l-0.17,0.56l0.71,0.58l-0.08,2.39l1.11,0.95ZM601.37,188.71l1.73,-0.71l1.43,-1.18l4.03,0.35l-2.23,0.74l-4.95,0.8Z", name: "Afghanistan" }, IQ: { path: "M530.82,187.47l0.79,0.66l1.26,-0.28l1.46,3.08l1.63,0.94l0.14,1.23l-1.22,1.05l-0.53,2.52l1.73,2.67l3.12,1.62l1.15,1.88l-0.38,1.85l0.39,0.48l0.41,-0.0l0.02,1.07l0.76,0.94l-2.47,-0.1l-1.71,2.44l-4.31,-0.2l-7.02,-5.48l-3.73,-1.94l-2.88,-0.73l-0.85,-2.87l5.45,-3.02l0.95,-3.43l-0.19,-1.96l1.27,-0.7l1.22,-1.7l0.87,-0.36l2.69,0.34Z", name: "Iraq" }, IS: { path: "M384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26Z", name: "Iceland" }, IR: { path: "M533.43,187.16l-1.27,-2.15l0.42,-0.98l-0.71,-3.04l1.03,-0.5l0.33,0.83l1.26,1.35l2.05,0.51l1.11,-0.16l2.89,-2.11l0.62,-0.14l0.39,0.46l-0.72,1.2l0.06,0.49l1.56,1.53l0.65,0.04l0.67,1.81l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.47,-0.73l2.17,-0.6l1.66,-1.54l1.51,0.08l1.18,-0.53l1.59,0.24l2.83,1.48l1.88,0.3l2.77,2.47l1.77,0.18l0.18,1.99l-1.68,5.49l0.24,0.5l0.61,0.23l-0.82,1.48l0.8,2.18l0.19,1.71l0.3,0.34l1.63,0.4l0.15,1.32l-2.15,2.35l-0.01,0.53l2.21,3.03l2.34,1.24l0.06,2.14l1.24,0.72l0.11,0.69l-3.31,1.27l-1.08,3.03l-9.68,-1.68l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.65,0.74l-0.97,-1.01l-0.02,-1.31l-0.71,-0.39l0.26,-1.81l-1.29,-2.11l-3.13,-1.63l-1.58,-2.43l0.5,-1.9l1.31,-1.26l-0.19,-1.66l-1.74,-1.1l-1.57,-3.3Z", name: "Iran" }, AM: { path: "M536.99,182.33l-0.28,0.03l-1.23,-2.13l-0.93,0.01l-0.62,-0.66l-0.69,-0.07l-0.96,-0.81l-1.56,-0.62l0.19,-1.12l-0.26,-0.79l2.72,-0.36l1.09,1.01l-0.17,0.92l1.02,0.78l-0.47,0.62l0.08,0.56l2.04,1.23l0.04,1.4Z", name: "Armenia" }, IT: { path: "M451.59,158.63l3.48,0.94l-0.21,1.17l0.3,0.83l-1.49,-0.24l-2.04,1.1l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.88,-1.33l-1.51,-0.51l-1.27,-1.25l-1.75,-0.18l-4.12,-3.21l-1.62,-1.65l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.69,1.41l0.16,-0.72l-0.28,-0.47l-1.14,-0.33l-0.53,-1.96l0.72,-0.78l0.04,-0.48l-0.65,-1.17l0.8,0.39l1.4,-0.23l1.11,-0.84l0.52,0.35l1.19,-0.1l0.75,-1.2l1.53,0.33l1.36,-0.56l0.35,-1.14l1.08,0.32l0.68,-0.64l1.98,-0.44l0.42,0.82ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68Z", name: "Italy" }, VN: { path: "M690.56,230.25l-2.7,1.82l-2.09,2.46l-0.63,1.95l4.31,6.45l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.34,-1.04l1.51,-0.71l2.55,-0.18l0.3,-0.63l-0.82,-1.14l4.0,-2.07l0.31,-3.05l-0.57,-1.77l0.42,-2.66l-0.73,-1.97l-1.86,-1.76l-3.63,-5.29l-2.72,-1.46l0.36,-0.47l1.5,-0.64l0.21,-0.52l-0.97,-2.27l-0.37,-0.24l-2.83,-0.02l-2.24,-3.9l0.83,-0.4l4.39,-0.29l2.06,-1.31l1.15,0.89l1.88,0.4l-0.17,1.51l1.35,1.16l1.67,0.45Z", name: "Vietnam" }, AR: { path: "M249.29,428.93l-2.33,-0.52l-5.83,-0.43l-0.89,-1.66l0.05,-2.37l-0.45,-0.4l-1.43,0.18l-0.67,-0.91l-0.2,-3.13l1.88,-1.47l0.79,-2.04l-0.25,-1.7l1.3,-2.68l0.91,-4.15l-0.22,-1.69l0.85,-0.45l0.2,-0.44l-0.27,-1.16l-0.98,-0.68l0.59,-0.92l-0.05,-0.5l-1.04,-1.07l-0.52,-3.1l0.97,-0.86l-0.42,-3.58l1.2,-5.43l1.38,-0.98l0.16,-0.43l-0.75,-2.79l-0.01,-2.43l1.78,-1.75l0.06,-2.57l1.43,-2.85l0.01,-2.58l-0.69,-0.74l-1.09,-4.52l1.47,-2.7l-0.18,-2.79l0.85,-2.35l1.59,-2.46l1.73,-1.64l0.05,-0.52l-0.6,-0.84l0.44,-0.85l-0.07,-4.19l2.7,-1.44l0.86,-2.75l-0.21,-0.71l1.76,-2.01l2.9,0.57l1.38,1.78l0.68,-0.08l0.87,-1.87l2.39,0.09l4.95,4.77l2.17,0.49l3.0,1.92l2.47,1.0l0.25,0.82l-2.37,3.93l0.23,0.59l5.39,1.16l2.12,-0.44l2.45,-2.16l0.5,-2.38l0.76,-0.31l0.98,1.2l-0.04,1.8l-3.67,2.51l-2.85,2.66l-3.43,3.88l-1.3,5.07l0.01,2.72l-0.54,0.73l-0.36,3.28l3.14,2.64l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM256.71,438.88l-2.0,0.15l-1.4,-1.22l-3.82,-0.1l-0.0,-5.83l1.6,3.05l3.26,2.07l3.08,0.78l-0.71,1.1Z", name: "Argentina" }, AU: { path: "M705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z", name: "Australia" }, IL: { path: "M507.76,203.05l0.4,-0.78l0.18,0.4l-0.33,1.03l0.52,0.44l0.68,-0.22l-0.86,3.6l-1.16,-3.32l0.59,-0.74l-0.03,-0.41ZM508.73,200.34l0.37,-1.02l0.64,0.0l0.52,-0.51l-0.49,1.53l-0.56,-0.24l-0.48,0.23Z", name: "Israel" }, IN: { path: "M623.34,207.03l-1.24,1.04l-0.97,2.55l0.22,0.51l8.04,3.87l3.42,0.37l1.57,1.38l4.92,0.88l2.18,-0.04l0.38,-0.3l0.29,-1.24l-0.32,-1.64l0.14,-0.87l0.82,-0.31l0.45,2.48l2.28,1.02l1.77,-0.38l4.14,0.1l0.38,-0.36l0.18,-1.66l-0.5,-0.65l1.37,-0.29l2.25,-1.99l2.7,-1.62l1.93,0.62l1.8,-0.98l0.79,1.14l-0.68,0.91l0.26,0.63l2.42,0.36l0.09,0.47l-0.83,0.75l0.13,1.07l-1.52,-0.29l-3.24,1.86l-0.13,1.78l-1.32,2.14l-0.18,1.39l-0.93,1.82l-1.64,-0.5l-0.52,0.37l-0.09,2.63l-0.56,1.11l0.19,0.81l-0.53,0.27l-1.18,-3.73l-1.08,-0.27l-0.38,0.31l-0.24,1.0l-0.66,-0.66l0.54,-1.06l1.22,-0.34l1.15,-2.25l-0.24,-0.56l-1.57,-0.47l-4.34,-0.28l-0.18,-1.56l-0.35,-0.35l-1.11,-0.12l-1.91,-1.12l-0.56,0.17l-0.88,1.82l0.11,0.49l1.36,1.07l-1.09,0.69l-0.69,1.11l0.18,0.56l1.24,0.57l-0.32,1.54l0.85,1.94l0.36,2.01l-0.22,0.59l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-2.67,-2.06l1.24,-1.32l5.34,0.01l0.39,-0.49l-0.5,-2.29l-1.42,-1.46l-0.27,-1.93l-1.43,-1.2l2.31,-2.37l3.05,0.06l2.62,-2.85l1.6,-2.81l2.4,-2.73l0.07,-2.04l1.97,-1.48l-0.02,-0.65l-1.93,-1.31l-0.82,-1.78l-0.8,-2.21l0.9,-0.89l3.59,0.65l2.92,-0.42l2.33,-2.19l2.31,2.85l-0.24,2.13l0.99,1.59l-0.05,0.82l-1.34,-0.28l-0.47,0.48l0.7,3.06l2.62,1.99l2.99,1.65Z", name: "India" }, TZ: { path: "M495.56,296.42l2.8,-3.12l-0.02,-0.81l-0.64,-1.3l0.68,-0.52l0.14,-1.47l-0.76,-1.25l0.31,-0.11l2.26,0.03l-0.51,2.76l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.57,-1.7l8.65,4.86l0.32,1.53l3.34,2.33l-1.05,2.8l0.13,1.61l1.63,1.12l-0.6,1.76l-0.01,2.33l1.89,4.03l0.57,0.43l-1.46,1.08l-2.61,0.94l-1.43,-0.04l-1.06,0.77l-2.29,0.36l-2.87,-0.68l-0.83,0.07l-0.63,-0.75l-0.31,-2.78l-1.32,-1.35l-3.25,-0.77l-3.96,-1.58l-1.18,-2.41l-0.32,-1.75l-1.76,-1.49l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.06,-0.56Z", name: "Tanzania" }, AZ: { path: "M539.29,175.73l1.33,0.32l1.94,-1.8l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.05,1.11l-1.26,-1.13l0.7,-1.18l-0.04,-0.47l-0.74,-0.86l-1.48,0.15l-2.34,1.71l-0.03,-1.27l-2.03,-1.35l0.47,-0.62l-0.08,-0.56l-1.03,-0.79l0.29,-0.43l-0.14,-0.58l-1.13,-0.86l1.89,0.68l1.69,0.06l0.37,-0.87l-0.81,-1.37l0.42,0.06l1.63,1.72ZM533.78,180.57l0.61,0.46l0.69,-0.0l0.59,1.15l-0.68,-0.15l-1.21,-1.45Z", name: "Azerbaijan" }, IE: { path: "M405.08,135.42l0.35,2.06l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.6,-3.74l0.32,1.15l-0.49,1.74l0.4,0.51l1.47,-0.04l1.6,0.6Z", name: "Ireland" }, ID: { path: "M756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM730.55,310.47l1.11,-1.93l2.03,-0.82l0.08,0.62l-1.45,1.67l-1.77,0.46ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l0.9,-1.01l0.37,1.15l2.09,1.49l1.53,-0.48l1.82,0.08l1.38,-1.19l1.0,-0.18l2.28,0.67l2.26,-0.53l1.52,-3.64l1.01,-0.99l0.78,-2.57l4.1,0.3l-1.11,1.77l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5Z", name: "Indonesia" }, UA: { path: "M492.5,162.44l1.28,-2.49l1.82,0.19l0.66,-0.23l0.09,-0.71l-0.25,-0.75l-0.79,-0.72l-0.33,-1.21l-0.86,-0.62l-0.02,-1.19l-1.13,-0.86l-1.15,-0.19l-2.04,-1.0l-1.66,0.32l-0.66,0.47l-0.92,-0.0l-0.84,0.78l-2.48,0.7l-1.18,-0.71l-3.07,-0.36l-0.89,0.43l-0.24,-0.55l-1.11,-0.7l0.35,-0.93l1.26,-1.02l-0.54,-1.23l2.04,-2.43l1.4,-0.62l0.25,-1.19l-1.04,-2.39l0.83,-0.13l1.28,-0.84l1.8,-0.07l2.47,0.26l2.86,0.81l1.88,0.06l0.86,0.44l1.04,-0.41l0.77,0.66l2.18,-0.15l0.92,0.3l0.52,-0.34l0.15,-1.53l0.56,-0.54l2.85,-0.05l0.84,-0.72l3.04,-0.18l1.23,1.46l-0.48,0.77l0.21,1.03l0.36,0.32l1.8,0.14l0.93,2.08l3.18,1.15l1.94,-0.45l1.67,1.49l1.4,-0.03l3.35,0.96l0.02,0.54l-0.96,1.59l0.47,1.97l-0.26,0.7l-2.36,0.28l-1.29,0.89l-0.23,1.38l-1.83,0.27l-1.58,0.97l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.23,0.75l2.13,-0.08l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.93,-0.82l-3.62,-0.74l-0.13,-0.89l-0.46,-0.34l-2.61,0.59l-0.91,1.69l-1.71,2.04l-0.86,-0.4l-1.62,0.27Z", name: "Ukraine" }, QA: { path: "M549.33,221.64l-0.76,-0.23l-0.14,-1.64l0.84,-1.29l0.47,0.52l0.04,1.34l-0.45,1.3Z", name: "Qatar" }, MZ: { path: "M508.58,318.75l-0.34,-2.57l0.51,-2.05l3.55,0.63l2.5,-0.38l1.02,-0.76l1.49,0.01l2.74,-0.98l1.66,-1.2l0.5,9.24l0.41,1.23l-0.68,1.67l-0.93,1.71l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.12,2.39l-1.22,1.36l0.21,1.13l0.58,0.39l-0.11,0.72l-1.22,-0.01l-0.73,-2.97l0.42,-3.09l-1.78,-5.37l2.49,-2.81l0.69,-1.89l0.44,-0.43l0.28,-1.53l-0.39,-0.93l0.59,-3.65l-0.01,-3.26l-1.49,-1.16l-1.2,-0.22l-1.74,-1.17l-1.92,0.01l-0.29,-2.08l7.06,-1.96l1.28,1.09l0.89,-0.1l0.67,0.44l0.1,0.73l-0.51,1.29l0.19,1.81l1.75,1.83l0.65,-0.13l0.71,-1.65l1.17,-0.86l-0.26,-3.47l-1.05,-1.85l-1.04,-0.94Z", name: "Mozambique" } }, height: 440.70631074413296, width: 900, projection: { type: "mill", centralMeridian: 11.5 } });
    }, 1296: function(t2, e2, n2) {
      var i = /^\s+|\s+$/g, a = /^[-+]0x[0-9a-f]+$/i, r = /^0b[01]+$/i, o = /^0o[0-7]+$/i, s = parseInt, l = typeof n2.g == "object" && n2.g && n2.g.Object === Object && n2.g, c = typeof self == "object" && self && self.Object === Object && self, d = l || c || Function("return this")(), u = Object.prototype.toString, h = Math.max, p = Math.min, f = function() {
        return d.Date.now();
      };
      function g(t3) {
        var e3 = typeof t3;
        return !!t3 && (e3 == "object" || e3 == "function");
      }
      function m(t3) {
        if (typeof t3 == "number")
          return t3;
        if (function(t4) {
          return typeof t4 == "symbol" || function(t5) {
            return !!t5 && typeof t5 == "object";
          }(t4) && u.call(t4) == "[object Symbol]";
        }(t3))
          return NaN;
        if (g(t3)) {
          var e3 = typeof t3.valueOf == "function" ? t3.valueOf() : t3;
          t3 = g(e3) ? e3 + "" : e3;
        }
        if (typeof t3 != "string")
          return t3 === 0 ? t3 : +t3;
        t3 = t3.replace(i, "");
        var n3 = r.test(t3);
        return n3 || o.test(t3) ? s(t3.slice(2), n3 ? 2 : 8) : a.test(t3) ? NaN : +t3;
      }
      t2.exports = function(t3, e3, n3) {
        var i2, a2, r2, o2, s2, l2, c2 = 0, d2 = false, u2 = false, v = true;
        if (typeof t3 != "function")
          throw new TypeError("Expected a function");
        function b(e4) {
          var n4 = i2, r3 = a2;
          return i2 = a2 = void 0, c2 = e4, o2 = t3.apply(r3, n4);
        }
        function y(t4) {
          return c2 = t4, s2 = setTimeout(_, e3), d2 ? b(t4) : o2;
        }
        function x(t4) {
          var n4 = t4 - l2;
          return l2 === void 0 || n4 >= e3 || n4 < 0 || u2 && t4 - c2 >= r2;
        }
        function _() {
          var t4 = f();
          if (x(t4))
            return w(t4);
          s2 = setTimeout(_, function(t5) {
            var n4 = e3 - (t5 - l2);
            return u2 ? p(n4, r2 - (t5 - c2)) : n4;
          }(t4));
        }
        function w(t4) {
          return s2 = void 0, v && i2 ? b(t4) : (i2 = a2 = void 0, o2);
        }
        function S() {
          var t4 = f(), n4 = x(t4);
          if (i2 = arguments, a2 = this, l2 = t4, n4) {
            if (s2 === void 0)
              return y(l2);
            if (u2)
              return s2 = setTimeout(_, e3), b(l2);
          }
          return s2 === void 0 && (s2 = setTimeout(_, e3)), o2;
        }
        return e3 = m(e3) || 0, g(n3) && (d2 = !!n3.leading, r2 = (u2 = "maxWait" in n3) ? h(m(n3.maxWait) || 0, e3) : r2, v = "trailing" in n3 ? !!n3.trailing : v), S.cancel = function() {
          s2 !== void 0 && clearTimeout(s2), c2 = 0, i2 = l2 = a2 = s2 = void 0;
        }, S.flush = function() {
          return s2 === void 0 ? o2 : w(f());
        }, S;
      };
    }, 773: function(t2, e2, n2) {
      var i = "__lodash_hash_undefined__", a = "[object Function]", r = "[object GeneratorFunction]", o = /^\[object .+?Constructor\]$/, s = typeof n2.g == "object" && n2.g && n2.g.Object === Object && n2.g, l = typeof self == "object" && self && self.Object === Object && self, c = s || l || Function("return this")();
      var d, u = Array.prototype, h = Function.prototype, p = Object.prototype, f = c["__core-js_shared__"], g = (d = /[^.]+$/.exec(f && f.keys && f.keys.IE_PROTO || "")) ? "Symbol(src)_1." + d : "", m = h.toString, v = p.hasOwnProperty, b = p.toString, y = RegExp("^" + m.call(v).replace(/[\\^$.*+?()[\]{}|]/g, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), x = u.splice, _ = A(c, "Map"), w = A(Object, "create");
      function S(t3) {
        var e3 = -1, n3 = t3 ? t3.length : 0;
        for (this.clear(); ++e3 < n3; ) {
          var i2 = t3[e3];
          this.set(i2[0], i2[1]);
        }
      }
      function C(t3) {
        var e3 = -1, n3 = t3 ? t3.length : 0;
        for (this.clear(); ++e3 < n3; ) {
          var i2 = t3[e3];
          this.set(i2[0], i2[1]);
        }
      }
      function k(t3) {
        var e3 = -1, n3 = t3 ? t3.length : 0;
        for (this.clear(); ++e3 < n3; ) {
          var i2 = t3[e3];
          this.set(i2[0], i2[1]);
        }
      }
      function D(t3, e3) {
        for (var n3, i2, a2 = t3.length; a2--; )
          if ((n3 = t3[a2][0]) === (i2 = e3) || n3 != n3 && i2 != i2)
            return a2;
        return -1;
      }
      function T(t3) {
        if (!M(t3) || (e3 = t3, g && g in e3))
          return false;
        var e3, n3 = function(t4) {
          var e4 = M(t4) ? b.call(t4) : "";
          return e4 == a || e4 == r;
        }(t3) || function(t4) {
          var e4 = false;
          if (t4 != null && typeof t4.toString != "function")
            try {
              e4 = !!(t4 + "");
            } catch (t5) {
            }
          return e4;
        }(t3) ? y : o;
        return n3.test(function(t4) {
          if (t4 != null) {
            try {
              return m.call(t4);
            } catch (t5) {
            }
            try {
              return t4 + "";
            } catch (t5) {
            }
          }
          return "";
        }(t3));
      }
      function E(t3, e3) {
        var n3, i2, a2 = t3.__data__;
        return ((i2 = typeof (n3 = e3)) == "string" || i2 == "number" || i2 == "symbol" || i2 == "boolean" ? n3 !== "__proto__" : n3 === null) ? a2[typeof e3 == "string" ? "string" : "hash"] : a2.map;
      }
      function A(t3, e3) {
        var n3 = function(t4, e4) {
          return t4 == null ? void 0 : t4[e4];
        }(t3, e3);
        return T(n3) ? n3 : void 0;
      }
      function I(t3, e3) {
        if (typeof t3 != "function" || e3 && typeof e3 != "function")
          throw new TypeError("Expected a function");
        var n3 = function() {
          var i2 = arguments, a2 = e3 ? e3.apply(this, i2) : i2[0], r2 = n3.cache;
          if (r2.has(a2))
            return r2.get(a2);
          var o2 = t3.apply(this, i2);
          return n3.cache = r2.set(a2, o2), o2;
        };
        return n3.cache = new (I.Cache || k)(), n3;
      }
      function M(t3) {
        var e3 = typeof t3;
        return !!t3 && (e3 == "object" || e3 == "function");
      }
      S.prototype.clear = function() {
        this.__data__ = w ? w(null) : {};
      }, S.prototype.delete = function(t3) {
        return this.has(t3) && delete this.__data__[t3];
      }, S.prototype.get = function(t3) {
        var e3 = this.__data__;
        if (w) {
          var n3 = e3[t3];
          return n3 === i ? void 0 : n3;
        }
        return v.call(e3, t3) ? e3[t3] : void 0;
      }, S.prototype.has = function(t3) {
        var e3 = this.__data__;
        return w ? e3[t3] !== void 0 : v.call(e3, t3);
      }, S.prototype.set = function(t3, e3) {
        return this.__data__[t3] = w && e3 === void 0 ? i : e3, this;
      }, C.prototype.clear = function() {
        this.__data__ = [];
      }, C.prototype.delete = function(t3) {
        var e3 = this.__data__, n3 = D(e3, t3);
        return !(n3 < 0) && (n3 == e3.length - 1 ? e3.pop() : x.call(e3, n3, 1), true);
      }, C.prototype.get = function(t3) {
        var e3 = this.__data__, n3 = D(e3, t3);
        return n3 < 0 ? void 0 : e3[n3][1];
      }, C.prototype.has = function(t3) {
        return D(this.__data__, t3) > -1;
      }, C.prototype.set = function(t3, e3) {
        var n3 = this.__data__, i2 = D(n3, t3);
        return i2 < 0 ? n3.push([t3, e3]) : n3[i2][1] = e3, this;
      }, k.prototype.clear = function() {
        this.__data__ = { hash: new S(), map: new (_ || C)(), string: new S() };
      }, k.prototype.delete = function(t3) {
        return E(this, t3).delete(t3);
      }, k.prototype.get = function(t3) {
        return E(this, t3).get(t3);
      }, k.prototype.has = function(t3) {
        return E(this, t3).has(t3);
      }, k.prototype.set = function(t3, e3) {
        return E(this, t3).set(t3, e3), this;
      }, I.Cache = k, t2.exports = I;
    }, 3096: function(t2, e2, n2) {
      var i = "Expected a function", a = /^\s+|\s+$/g, r = /^[-+]0x[0-9a-f]+$/i, o = /^0b[01]+$/i, s = /^0o[0-7]+$/i, l = parseInt, c = typeof n2.g == "object" && n2.g && n2.g.Object === Object && n2.g, d = typeof self == "object" && self && self.Object === Object && self, u = c || d || Function("return this")(), h = Object.prototype.toString, p = Math.max, f = Math.min, g = function() {
        return u.Date.now();
      };
      function m(t3, e3, n3) {
        var a2, r2, o2, s2, l2, c2, d2 = 0, u2 = false, h2 = false, m2 = true;
        if (typeof t3 != "function")
          throw new TypeError(i);
        function y(e4) {
          var n4 = a2, i2 = r2;
          return a2 = r2 = void 0, d2 = e4, s2 = t3.apply(i2, n4);
        }
        function x(t4) {
          return d2 = t4, l2 = setTimeout(w, e3), u2 ? y(t4) : s2;
        }
        function _(t4) {
          var n4 = t4 - c2;
          return c2 === void 0 || n4 >= e3 || n4 < 0 || h2 && t4 - d2 >= o2;
        }
        function w() {
          var t4 = g();
          if (_(t4))
            return S(t4);
          l2 = setTimeout(w, function(t5) {
            var n4 = e3 - (t5 - c2);
            return h2 ? f(n4, o2 - (t5 - d2)) : n4;
          }(t4));
        }
        function S(t4) {
          return l2 = void 0, m2 && a2 ? y(t4) : (a2 = r2 = void 0, s2);
        }
        function C() {
          var t4 = g(), n4 = _(t4);
          if (a2 = arguments, r2 = this, c2 = t4, n4) {
            if (l2 === void 0)
              return x(c2);
            if (h2)
              return l2 = setTimeout(w, e3), y(c2);
          }
          return l2 === void 0 && (l2 = setTimeout(w, e3)), s2;
        }
        return e3 = b(e3) || 0, v(n3) && (u2 = !!n3.leading, o2 = (h2 = "maxWait" in n3) ? p(b(n3.maxWait) || 0, e3) : o2, m2 = "trailing" in n3 ? !!n3.trailing : m2), C.cancel = function() {
          l2 !== void 0 && clearTimeout(l2), d2 = 0, a2 = c2 = r2 = l2 = void 0;
        }, C.flush = function() {
          return l2 === void 0 ? s2 : S(g());
        }, C;
      }
      function v(t3) {
        var e3 = typeof t3;
        return !!t3 && (e3 == "object" || e3 == "function");
      }
      function b(t3) {
        if (typeof t3 == "number")
          return t3;
        if (function(t4) {
          return typeof t4 == "symbol" || function(t5) {
            return !!t5 && typeof t5 == "object";
          }(t4) && h.call(t4) == "[object Symbol]";
        }(t3))
          return NaN;
        if (v(t3)) {
          var e3 = typeof t3.valueOf == "function" ? t3.valueOf() : t3;
          t3 = v(e3) ? e3 + "" : e3;
        }
        if (typeof t3 != "string")
          return t3 === 0 ? t3 : +t3;
        t3 = t3.replace(a, "");
        var n3 = o.test(t3);
        return n3 || s.test(t3) ? l(t3.slice(2), n3 ? 2 : 8) : r.test(t3) ? NaN : +t3;
      }
      t2.exports = function(t3, e3, n3) {
        var a2 = true, r2 = true;
        if (typeof t3 != "function")
          throw new TypeError(i);
        return v(n3) && (a2 = "leading" in n3 ? !!n3.leading : a2, r2 = "trailing" in n3 ? !!n3.trailing : r2), m(t3, e3, { leading: a2, maxWait: e3, trailing: r2 });
      };
    }, 381: function(t2, e2, n2) {
      (t2 = n2.nmd(t2)).exports = function() {
        "use strict";
        var e3, n3;
        function i() {
          return e3.apply(null, arguments);
        }
        function a(t3) {
          e3 = t3;
        }
        function r(t3) {
          return t3 instanceof Array || Object.prototype.toString.call(t3) === "[object Array]";
        }
        function o(t3) {
          return t3 != null && Object.prototype.toString.call(t3) === "[object Object]";
        }
        function s(t3, e4) {
          return Object.prototype.hasOwnProperty.call(t3, e4);
        }
        function l(t3) {
          if (Object.getOwnPropertyNames)
            return Object.getOwnPropertyNames(t3).length === 0;
          var e4;
          for (e4 in t3)
            if (s(t3, e4))
              return false;
          return true;
        }
        function c(t3) {
          return t3 === void 0;
        }
        function d(t3) {
          return typeof t3 == "number" || Object.prototype.toString.call(t3) === "[object Number]";
        }
        function u(t3) {
          return t3 instanceof Date || Object.prototype.toString.call(t3) === "[object Date]";
        }
        function h(t3, e4) {
          var n4, i2 = [];
          for (n4 = 0; n4 < t3.length; ++n4)
            i2.push(e4(t3[n4], n4));
          return i2;
        }
        function p(t3, e4) {
          for (var n4 in e4)
            s(e4, n4) && (t3[n4] = e4[n4]);
          return s(e4, "toString") && (t3.toString = e4.toString), s(e4, "valueOf") && (t3.valueOf = e4.valueOf), t3;
        }
        function f(t3, e4, n4, i2) {
          return Un(t3, e4, n4, i2, true).utc();
        }
        function g() {
          return { empty: false, unusedTokens: [], unusedInput: [], overflow: -2, charsLeftOver: 0, nullInput: false, invalidEra: null, invalidMonth: null, invalidFormat: false, userInvalidated: false, iso: false, parsedDateParts: [], era: null, meridiem: null, rfc2822: false, weekdayMismatch: false };
        }
        function m(t3) {
          return t3._pf == null && (t3._pf = g()), t3._pf;
        }
        function v(t3) {
          if (t3._isValid == null) {
            var e4 = m(t3), i2 = n3.call(e4.parsedDateParts, function(t4) {
              return t4 != null;
            }), a2 = !isNaN(t3._d.getTime()) && e4.overflow < 0 && !e4.empty && !e4.invalidEra && !e4.invalidMonth && !e4.invalidWeekday && !e4.weekdayMismatch && !e4.nullInput && !e4.invalidFormat && !e4.userInvalidated && (!e4.meridiem || e4.meridiem && i2);
            if (t3._strict && (a2 = a2 && e4.charsLeftOver === 0 && e4.unusedTokens.length === 0 && e4.bigHour === void 0), Object.isFrozen != null && Object.isFrozen(t3))
              return a2;
            t3._isValid = a2;
          }
          return t3._isValid;
        }
        function b(t3) {
          var e4 = f(NaN);
          return t3 != null ? p(m(e4), t3) : m(e4).userInvalidated = true, e4;
        }
        n3 = Array.prototype.some ? Array.prototype.some : function(t3) {
          var e4, n4 = Object(this), i2 = n4.length >>> 0;
          for (e4 = 0; e4 < i2; e4++)
            if (e4 in n4 && t3.call(this, n4[e4], e4, n4))
              return true;
          return false;
        };
        var y = i.momentProperties = [], x = false;
        function _(t3, e4) {
          var n4, i2, a2;
          if (c(e4._isAMomentObject) || (t3._isAMomentObject = e4._isAMomentObject), c(e4._i) || (t3._i = e4._i), c(e4._f) || (t3._f = e4._f), c(e4._l) || (t3._l = e4._l), c(e4._strict) || (t3._strict = e4._strict), c(e4._tzm) || (t3._tzm = e4._tzm), c(e4._isUTC) || (t3._isUTC = e4._isUTC), c(e4._offset) || (t3._offset = e4._offset), c(e4._pf) || (t3._pf = m(e4)), c(e4._locale) || (t3._locale = e4._locale), y.length > 0)
            for (n4 = 0; n4 < y.length; n4++)
              c(a2 = e4[i2 = y[n4]]) || (t3[i2] = a2);
          return t3;
        }
        function w(t3) {
          _(this, t3), this._d = new Date(t3._d != null ? t3._d.getTime() : NaN), this.isValid() || (this._d = new Date(NaN)), x === false && (x = true, i.updateOffset(this), x = false);
        }
        function S(t3) {
          return t3 instanceof w || t3 != null && t3._isAMomentObject != null;
        }
        function C(t3) {
          i.suppressDeprecationWarnings === false && typeof console != "undefined" && console.warn && console.warn("Deprecation warning: " + t3);
        }
        function k(t3, e4) {
          var n4 = true;
          return p(function() {
            if (i.deprecationHandler != null && i.deprecationHandler(null, t3), n4) {
              var a2, r2, o2, l2 = [];
              for (r2 = 0; r2 < arguments.length; r2++) {
                if (a2 = "", typeof arguments[r2] == "object") {
                  for (o2 in a2 += "\n[" + r2 + "] ", arguments[0])
                    s(arguments[0], o2) && (a2 += o2 + ": " + arguments[0][o2] + ", ");
                  a2 = a2.slice(0, -2);
                } else
                  a2 = arguments[r2];
                l2.push(a2);
              }
              C(t3 + "\nArguments: " + Array.prototype.slice.call(l2).join("") + "\n" + new Error().stack), n4 = false;
            }
            return e4.apply(this, arguments);
          }, e4);
        }
        var D, T = {};
        function E(t3, e4) {
          i.deprecationHandler != null && i.deprecationHandler(t3, e4), T[t3] || (C(e4), T[t3] = true);
        }
        function A(t3) {
          return typeof Function != "undefined" && t3 instanceof Function || Object.prototype.toString.call(t3) === "[object Function]";
        }
        function I(t3) {
          var e4, n4;
          for (n4 in t3)
            s(t3, n4) && (A(e4 = t3[n4]) ? this[n4] = e4 : this["_" + n4] = e4);
          this._config = t3, this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
        }
        function M(t3, e4) {
          var n4, i2 = p({}, t3);
          for (n4 in e4)
            s(e4, n4) && (o(t3[n4]) && o(e4[n4]) ? (i2[n4] = {}, p(i2[n4], t3[n4]), p(i2[n4], e4[n4])) : e4[n4] != null ? i2[n4] = e4[n4] : delete i2[n4]);
          for (n4 in t3)
            s(t3, n4) && !s(e4, n4) && o(t3[n4]) && (i2[n4] = p({}, i2[n4]));
          return i2;
        }
        function R(t3) {
          t3 != null && this.set(t3);
        }
        i.suppressDeprecationWarnings = false, i.deprecationHandler = null, D = Object.keys ? Object.keys : function(t3) {
          var e4, n4 = [];
          for (e4 in t3)
            s(t3, e4) && n4.push(e4);
          return n4;
        };
        var P = { sameDay: "[Today at] LT", nextDay: "[Tomorrow at] LT", nextWeek: "dddd [at] LT", lastDay: "[Yesterday at] LT", lastWeek: "[Last] dddd [at] LT", sameElse: "L" };
        function O(t3, e4, n4) {
          var i2 = this._calendar[t3] || this._calendar.sameElse;
          return A(i2) ? i2.call(e4, n4) : i2;
        }
        function j(t3, e4, n4) {
          var i2 = "" + Math.abs(t3), a2 = e4 - i2.length;
          return (t3 >= 0 ? n4 ? "+" : "" : "-") + Math.pow(10, Math.max(0, a2)).toString().substr(1) + i2;
        }
        var N = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, L = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, F = {}, H = {};
        function B(t3, e4, n4, i2) {
          var a2 = i2;
          typeof i2 == "string" && (a2 = function() {
            return this[i2]();
          }), t3 && (H[t3] = a2), e4 && (H[e4[0]] = function() {
            return j(a2.apply(this, arguments), e4[1], e4[2]);
          }), n4 && (H[n4] = function() {
            return this.localeData().ordinal(a2.apply(this, arguments), t3);
          });
        }
        function q(t3) {
          return t3.match(/\[[\s\S]/) ? t3.replace(/^\[|\]$/g, "") : t3.replace(/\\/g, "");
        }
        function z(t3) {
          var e4, n4, i2 = t3.match(N);
          for (e4 = 0, n4 = i2.length; e4 < n4; e4++)
            H[i2[e4]] ? i2[e4] = H[i2[e4]] : i2[e4] = q(i2[e4]);
          return function(e5) {
            var a2, r2 = "";
            for (a2 = 0; a2 < n4; a2++)
              r2 += A(i2[a2]) ? i2[a2].call(e5, t3) : i2[a2];
            return r2;
          };
        }
        function W(t3, e4) {
          return t3.isValid() ? (e4 = $(e4, t3.localeData()), F[e4] = F[e4] || z(e4), F[e4](t3)) : t3.localeData().invalidDate();
        }
        function $(t3, e4) {
          var n4 = 5;
          function i2(t4) {
            return e4.longDateFormat(t4) || t4;
          }
          for (L.lastIndex = 0; n4 >= 0 && L.test(t3); )
            t3 = t3.replace(L, i2), L.lastIndex = 0, n4 -= 1;
          return t3;
        }
        var V = { LTS: "h:mm:ss A", LT: "h:mm A", L: "MM/DD/YYYY", LL: "MMMM D, YYYY", LLL: "MMMM D, YYYY h:mm A", LLLL: "dddd, MMMM D, YYYY h:mm A" };
        function Y(t3) {
          var e4 = this._longDateFormat[t3], n4 = this._longDateFormat[t3.toUpperCase()];
          return e4 || !n4 ? e4 : (this._longDateFormat[t3] = n4.match(N).map(function(t4) {
            return t4 === "MMMM" || t4 === "MM" || t4 === "DD" || t4 === "dddd" ? t4.slice(1) : t4;
          }).join(""), this._longDateFormat[t3]);
        }
        var U = "Invalid date";
        function G() {
          return this._invalidDate;
        }
        var X = "%d", Z = /\d{1,2}/;
        function K(t3) {
          return this._ordinal.replace("%d", t3);
        }
        var Q = { future: "in %s", past: "%s ago", s: "a few seconds", ss: "%d seconds", m: "a minute", mm: "%d minutes", h: "an hour", hh: "%d hours", d: "a day", dd: "%d days", w: "a week", ww: "%d weeks", M: "a month", MM: "%d months", y: "a year", yy: "%d years" };
        function J(t3, e4, n4, i2) {
          var a2 = this._relativeTime[n4];
          return A(a2) ? a2(t3, e4, n4, i2) : a2.replace(/%d/i, t3);
        }
        function tt(t3, e4) {
          var n4 = this._relativeTime[t3 > 0 ? "future" : "past"];
          return A(n4) ? n4(e4) : n4.replace(/%s/i, e4);
        }
        var et = {};
        function nt(t3, e4) {
          var n4 = t3.toLowerCase();
          et[n4] = et[n4 + "s"] = et[e4] = t3;
        }
        function it(t3) {
          return typeof t3 == "string" ? et[t3] || et[t3.toLowerCase()] : void 0;
        }
        function at(t3) {
          var e4, n4, i2 = {};
          for (n4 in t3)
            s(t3, n4) && (e4 = it(n4)) && (i2[e4] = t3[n4]);
          return i2;
        }
        var rt = {};
        function ot(t3, e4) {
          rt[t3] = e4;
        }
        function st(t3) {
          var e4, n4 = [];
          for (e4 in t3)
            s(t3, e4) && n4.push({ unit: e4, priority: rt[e4] });
          return n4.sort(function(t4, e5) {
            return t4.priority - e5.priority;
          }), n4;
        }
        function lt(t3) {
          return t3 % 4 == 0 && t3 % 100 != 0 || t3 % 400 == 0;
        }
        function ct(t3) {
          return t3 < 0 ? Math.ceil(t3) || 0 : Math.floor(t3);
        }
        function dt(t3) {
          var e4 = +t3, n4 = 0;
          return e4 !== 0 && isFinite(e4) && (n4 = ct(e4)), n4;
        }
        function ut(t3, e4) {
          return function(n4) {
            return n4 != null ? (pt(this, t3, n4), i.updateOffset(this, e4), this) : ht(this, t3);
          };
        }
        function ht(t3, e4) {
          return t3.isValid() ? t3._d["get" + (t3._isUTC ? "UTC" : "") + e4]() : NaN;
        }
        function pt(t3, e4, n4) {
          t3.isValid() && !isNaN(n4) && (e4 === "FullYear" && lt(t3.year()) && t3.month() === 1 && t3.date() === 29 ? (n4 = dt(n4), t3._d["set" + (t3._isUTC ? "UTC" : "") + e4](n4, t3.month(), Jt(n4, t3.month()))) : t3._d["set" + (t3._isUTC ? "UTC" : "") + e4](n4));
        }
        function ft(t3) {
          return A(this[t3 = it(t3)]) ? this[t3]() : this;
        }
        function gt(t3, e4) {
          if (typeof t3 == "object") {
            var n4, i2 = st(t3 = at(t3));
            for (n4 = 0; n4 < i2.length; n4++)
              this[i2[n4].unit](t3[i2[n4].unit]);
          } else if (A(this[t3 = it(t3)]))
            return this[t3](e4);
          return this;
        }
        var mt, vt = /\d/, bt = /\d\d/, yt = /\d{3}/, xt = /\d{4}/, _t = /[+-]?\d{6}/, wt = /\d\d?/, St = /\d\d\d\d?/, Ct = /\d\d\d\d\d\d?/, kt = /\d{1,3}/, Dt = /\d{1,4}/, Tt = /[+-]?\d{1,6}/, Et = /\d+/, At = /[+-]?\d+/, It = /Z|[+-]\d\d:?\d\d/gi, Mt = /Z|[+-]\d\d(?::?\d\d)?/gi, Rt = /[+-]?\d+(\.\d{1,3})?/, Pt = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
        function Ot(t3, e4, n4) {
          mt[t3] = A(e4) ? e4 : function(t4, i2) {
            return t4 && n4 ? n4 : e4;
          };
        }
        function jt(t3, e4) {
          return s(mt, t3) ? mt[t3](e4._strict, e4._locale) : new RegExp(Nt(t3));
        }
        function Nt(t3) {
          return Lt(t3.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(t4, e4, n4, i2, a2) {
            return e4 || n4 || i2 || a2;
          }));
        }
        function Lt(t3) {
          return t3.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
        }
        mt = {};
        var Ft = {};
        function Ht(t3, e4) {
          var n4, i2 = e4;
          for (typeof t3 == "string" && (t3 = [t3]), d(e4) && (i2 = function(t4, n5) {
            n5[e4] = dt(t4);
          }), n4 = 0; n4 < t3.length; n4++)
            Ft[t3[n4]] = i2;
        }
        function Bt(t3, e4) {
          Ht(t3, function(t4, n4, i2, a2) {
            i2._w = i2._w || {}, e4(t4, i2._w, i2, a2);
          });
        }
        function qt(t3, e4, n4) {
          e4 != null && s(Ft, t3) && Ft[t3](e4, n4._a, n4, t3);
        }
        var zt, Wt = 0, $t = 1, Vt = 2, Yt = 3, Ut = 4, Gt = 5, Xt = 6, Zt = 7, Kt = 8;
        function Qt(t3, e4) {
          return (t3 % e4 + e4) % e4;
        }
        function Jt(t3, e4) {
          if (isNaN(t3) || isNaN(e4))
            return NaN;
          var n4 = Qt(e4, 12);
          return t3 += (e4 - n4) / 12, n4 === 1 ? lt(t3) ? 29 : 28 : 31 - n4 % 7 % 2;
        }
        zt = Array.prototype.indexOf ? Array.prototype.indexOf : function(t3) {
          var e4;
          for (e4 = 0; e4 < this.length; ++e4)
            if (this[e4] === t3)
              return e4;
          return -1;
        }, B("M", ["MM", 2], "Mo", function() {
          return this.month() + 1;
        }), B("MMM", 0, 0, function(t3) {
          return this.localeData().monthsShort(this, t3);
        }), B("MMMM", 0, 0, function(t3) {
          return this.localeData().months(this, t3);
        }), nt("month", "M"), ot("month", 8), Ot("M", wt), Ot("MM", wt, bt), Ot("MMM", function(t3, e4) {
          return e4.monthsShortRegex(t3);
        }), Ot("MMMM", function(t3, e4) {
          return e4.monthsRegex(t3);
        }), Ht(["M", "MM"], function(t3, e4) {
          e4[$t] = dt(t3) - 1;
        }), Ht(["MMM", "MMMM"], function(t3, e4, n4, i2) {
          var a2 = n4._locale.monthsParse(t3, i2, n4._strict);
          a2 != null ? e4[$t] = a2 : m(n4).invalidMonth = t3;
        });
        var te = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), ee = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), ne = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, ie = Pt, ae = Pt;
        function re(t3, e4) {
          return t3 ? r(this._months) ? this._months[t3.month()] : this._months[(this._months.isFormat || ne).test(e4) ? "format" : "standalone"][t3.month()] : r(this._months) ? this._months : this._months.standalone;
        }
        function oe(t3, e4) {
          return t3 ? r(this._monthsShort) ? this._monthsShort[t3.month()] : this._monthsShort[ne.test(e4) ? "format" : "standalone"][t3.month()] : r(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;
        }
        function se(t3, e4, n4) {
          var i2, a2, r2, o2 = t3.toLocaleLowerCase();
          if (!this._monthsParse)
            for (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = [], i2 = 0; i2 < 12; ++i2)
              r2 = f([2e3, i2]), this._shortMonthsParse[i2] = this.monthsShort(r2, "").toLocaleLowerCase(), this._longMonthsParse[i2] = this.months(r2, "").toLocaleLowerCase();
          return n4 ? e4 === "MMM" ? (a2 = zt.call(this._shortMonthsParse, o2)) !== -1 ? a2 : null : (a2 = zt.call(this._longMonthsParse, o2)) !== -1 ? a2 : null : e4 === "MMM" ? (a2 = zt.call(this._shortMonthsParse, o2)) !== -1 || (a2 = zt.call(this._longMonthsParse, o2)) !== -1 ? a2 : null : (a2 = zt.call(this._longMonthsParse, o2)) !== -1 || (a2 = zt.call(this._shortMonthsParse, o2)) !== -1 ? a2 : null;
        }
        function le(t3, e4, n4) {
          var i2, a2, r2;
          if (this._monthsParseExact)
            return se.call(this, t3, e4, n4);
          for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), i2 = 0; i2 < 12; i2++) {
            if (a2 = f([2e3, i2]), n4 && !this._longMonthsParse[i2] && (this._longMonthsParse[i2] = new RegExp("^" + this.months(a2, "").replace(".", "") + "$", "i"), this._shortMonthsParse[i2] = new RegExp("^" + this.monthsShort(a2, "").replace(".", "") + "$", "i")), n4 || this._monthsParse[i2] || (r2 = "^" + this.months(a2, "") + "|^" + this.monthsShort(a2, ""), this._monthsParse[i2] = new RegExp(r2.replace(".", ""), "i")), n4 && e4 === "MMMM" && this._longMonthsParse[i2].test(t3))
              return i2;
            if (n4 && e4 === "MMM" && this._shortMonthsParse[i2].test(t3))
              return i2;
            if (!n4 && this._monthsParse[i2].test(t3))
              return i2;
          }
        }
        function ce(t3, e4) {
          var n4;
          if (!t3.isValid())
            return t3;
          if (typeof e4 == "string") {
            if (/^\d+$/.test(e4))
              e4 = dt(e4);
            else if (!d(e4 = t3.localeData().monthsParse(e4)))
              return t3;
          }
          return n4 = Math.min(t3.date(), Jt(t3.year(), e4)), t3._d["set" + (t3._isUTC ? "UTC" : "") + "Month"](e4, n4), t3;
        }
        function de(t3) {
          return t3 != null ? (ce(this, t3), i.updateOffset(this, true), this) : ht(this, "Month");
        }
        function ue() {
          return Jt(this.year(), this.month());
        }
        function he(t3) {
          return this._monthsParseExact ? (s(this, "_monthsRegex") || fe.call(this), t3 ? this._monthsShortStrictRegex : this._monthsShortRegex) : (s(this, "_monthsShortRegex") || (this._monthsShortRegex = ie), this._monthsShortStrictRegex && t3 ? this._monthsShortStrictRegex : this._monthsShortRegex);
        }
        function pe(t3) {
          return this._monthsParseExact ? (s(this, "_monthsRegex") || fe.call(this), t3 ? this._monthsStrictRegex : this._monthsRegex) : (s(this, "_monthsRegex") || (this._monthsRegex = ae), this._monthsStrictRegex && t3 ? this._monthsStrictRegex : this._monthsRegex);
        }
        function fe() {
          function t3(t4, e5) {
            return e5.length - t4.length;
          }
          var e4, n4, i2 = [], a2 = [], r2 = [];
          for (e4 = 0; e4 < 12; e4++)
            n4 = f([2e3, e4]), i2.push(this.monthsShort(n4, "")), a2.push(this.months(n4, "")), r2.push(this.months(n4, "")), r2.push(this.monthsShort(n4, ""));
          for (i2.sort(t3), a2.sort(t3), r2.sort(t3), e4 = 0; e4 < 12; e4++)
            i2[e4] = Lt(i2[e4]), a2[e4] = Lt(a2[e4]);
          for (e4 = 0; e4 < 24; e4++)
            r2[e4] = Lt(r2[e4]);
          this._monthsRegex = new RegExp("^(" + r2.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, this._monthsStrictRegex = new RegExp("^(" + a2.join("|") + ")", "i"), this._monthsShortStrictRegex = new RegExp("^(" + i2.join("|") + ")", "i");
        }
        function ge(t3) {
          return lt(t3) ? 366 : 365;
        }
        B("Y", 0, 0, function() {
          var t3 = this.year();
          return t3 <= 9999 ? j(t3, 4) : "+" + t3;
        }), B(0, ["YY", 2], 0, function() {
          return this.year() % 100;
        }), B(0, ["YYYY", 4], 0, "year"), B(0, ["YYYYY", 5], 0, "year"), B(0, ["YYYYYY", 6, true], 0, "year"), nt("year", "y"), ot("year", 1), Ot("Y", At), Ot("YY", wt, bt), Ot("YYYY", Dt, xt), Ot("YYYYY", Tt, _t), Ot("YYYYYY", Tt, _t), Ht(["YYYYY", "YYYYYY"], Wt), Ht("YYYY", function(t3, e4) {
          e4[Wt] = t3.length === 2 ? i.parseTwoDigitYear(t3) : dt(t3);
        }), Ht("YY", function(t3, e4) {
          e4[Wt] = i.parseTwoDigitYear(t3);
        }), Ht("Y", function(t3, e4) {
          e4[Wt] = parseInt(t3, 10);
        }), i.parseTwoDigitYear = function(t3) {
          return dt(t3) + (dt(t3) > 68 ? 1900 : 2e3);
        };
        var me = ut("FullYear", true);
        function ve() {
          return lt(this.year());
        }
        function be(t3, e4, n4, i2, a2, r2, o2) {
          var s2;
          return t3 < 100 && t3 >= 0 ? (s2 = new Date(t3 + 400, e4, n4, i2, a2, r2, o2), isFinite(s2.getFullYear()) && s2.setFullYear(t3)) : s2 = new Date(t3, e4, n4, i2, a2, r2, o2), s2;
        }
        function ye(t3) {
          var e4, n4;
          return t3 < 100 && t3 >= 0 ? ((n4 = Array.prototype.slice.call(arguments))[0] = t3 + 400, e4 = new Date(Date.UTC.apply(null, n4)), isFinite(e4.getUTCFullYear()) && e4.setUTCFullYear(t3)) : e4 = new Date(Date.UTC.apply(null, arguments)), e4;
        }
        function xe(t3, e4, n4) {
          var i2 = 7 + e4 - n4;
          return -(7 + ye(t3, 0, i2).getUTCDay() - e4) % 7 + i2 - 1;
        }
        function _e(t3, e4, n4, i2, a2) {
          var r2, o2, s2 = 1 + 7 * (e4 - 1) + (7 + n4 - i2) % 7 + xe(t3, i2, a2);
          return s2 <= 0 ? o2 = ge(r2 = t3 - 1) + s2 : s2 > ge(t3) ? (r2 = t3 + 1, o2 = s2 - ge(t3)) : (r2 = t3, o2 = s2), { year: r2, dayOfYear: o2 };
        }
        function we(t3, e4, n4) {
          var i2, a2, r2 = xe(t3.year(), e4, n4), o2 = Math.floor((t3.dayOfYear() - r2 - 1) / 7) + 1;
          return o2 < 1 ? i2 = o2 + Se(a2 = t3.year() - 1, e4, n4) : o2 > Se(t3.year(), e4, n4) ? (i2 = o2 - Se(t3.year(), e4, n4), a2 = t3.year() + 1) : (a2 = t3.year(), i2 = o2), { week: i2, year: a2 };
        }
        function Se(t3, e4, n4) {
          var i2 = xe(t3, e4, n4), a2 = xe(t3 + 1, e4, n4);
          return (ge(t3) - i2 + a2) / 7;
        }
        function Ce(t3) {
          return we(t3, this._week.dow, this._week.doy).week;
        }
        B("w", ["ww", 2], "wo", "week"), B("W", ["WW", 2], "Wo", "isoWeek"), nt("week", "w"), nt("isoWeek", "W"), ot("week", 5), ot("isoWeek", 5), Ot("w", wt), Ot("ww", wt, bt), Ot("W", wt), Ot("WW", wt, bt), Bt(["w", "ww", "W", "WW"], function(t3, e4, n4, i2) {
          e4[i2.substr(0, 1)] = dt(t3);
        });
        var ke = { dow: 0, doy: 6 };
        function De() {
          return this._week.dow;
        }
        function Te() {
          return this._week.doy;
        }
        function Ee(t3) {
          var e4 = this.localeData().week(this);
          return t3 == null ? e4 : this.add(7 * (t3 - e4), "d");
        }
        function Ae(t3) {
          var e4 = we(this, 1, 4).week;
          return t3 == null ? e4 : this.add(7 * (t3 - e4), "d");
        }
        function Ie(t3, e4) {
          return typeof t3 != "string" ? t3 : isNaN(t3) ? typeof (t3 = e4.weekdaysParse(t3)) == "number" ? t3 : null : parseInt(t3, 10);
        }
        function Me(t3, e4) {
          return typeof t3 == "string" ? e4.weekdaysParse(t3) % 7 || 7 : isNaN(t3) ? null : t3;
        }
        function Re(t3, e4) {
          return t3.slice(e4, 7).concat(t3.slice(0, e4));
        }
        B("d", 0, "do", "day"), B("dd", 0, 0, function(t3) {
          return this.localeData().weekdaysMin(this, t3);
        }), B("ddd", 0, 0, function(t3) {
          return this.localeData().weekdaysShort(this, t3);
        }), B("dddd", 0, 0, function(t3) {
          return this.localeData().weekdays(this, t3);
        }), B("e", 0, 0, "weekday"), B("E", 0, 0, "isoWeekday"), nt("day", "d"), nt("weekday", "e"), nt("isoWeekday", "E"), ot("day", 11), ot("weekday", 11), ot("isoWeekday", 11), Ot("d", wt), Ot("e", wt), Ot("E", wt), Ot("dd", function(t3, e4) {
          return e4.weekdaysMinRegex(t3);
        }), Ot("ddd", function(t3, e4) {
          return e4.weekdaysShortRegex(t3);
        }), Ot("dddd", function(t3, e4) {
          return e4.weekdaysRegex(t3);
        }), Bt(["dd", "ddd", "dddd"], function(t3, e4, n4, i2) {
          var a2 = n4._locale.weekdaysParse(t3, i2, n4._strict);
          a2 != null ? e4.d = a2 : m(n4).invalidWeekday = t3;
        }), Bt(["d", "e", "E"], function(t3, e4, n4, i2) {
          e4[i2] = dt(t3);
        });
        var Pe = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), Oe = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), je = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), Ne = Pt, Le = Pt, Fe = Pt;
        function He(t3, e4) {
          var n4 = r(this._weekdays) ? this._weekdays : this._weekdays[t3 && t3 !== true && this._weekdays.isFormat.test(e4) ? "format" : "standalone"];
          return t3 === true ? Re(n4, this._week.dow) : t3 ? n4[t3.day()] : n4;
        }
        function Be(t3) {
          return t3 === true ? Re(this._weekdaysShort, this._week.dow) : t3 ? this._weekdaysShort[t3.day()] : this._weekdaysShort;
        }
        function qe(t3) {
          return t3 === true ? Re(this._weekdaysMin, this._week.dow) : t3 ? this._weekdaysMin[t3.day()] : this._weekdaysMin;
        }
        function ze(t3, e4, n4) {
          var i2, a2, r2, o2 = t3.toLocaleLowerCase();
          if (!this._weekdaysParse)
            for (this._weekdaysParse = [], this._shortWeekdaysParse = [], this._minWeekdaysParse = [], i2 = 0; i2 < 7; ++i2)
              r2 = f([2e3, 1]).day(i2), this._minWeekdaysParse[i2] = this.weekdaysMin(r2, "").toLocaleLowerCase(), this._shortWeekdaysParse[i2] = this.weekdaysShort(r2, "").toLocaleLowerCase(), this._weekdaysParse[i2] = this.weekdays(r2, "").toLocaleLowerCase();
          return n4 ? e4 === "dddd" ? (a2 = zt.call(this._weekdaysParse, o2)) !== -1 ? a2 : null : e4 === "ddd" ? (a2 = zt.call(this._shortWeekdaysParse, o2)) !== -1 ? a2 : null : (a2 = zt.call(this._minWeekdaysParse, o2)) !== -1 ? a2 : null : e4 === "dddd" ? (a2 = zt.call(this._weekdaysParse, o2)) !== -1 || (a2 = zt.call(this._shortWeekdaysParse, o2)) !== -1 || (a2 = zt.call(this._minWeekdaysParse, o2)) !== -1 ? a2 : null : e4 === "ddd" ? (a2 = zt.call(this._shortWeekdaysParse, o2)) !== -1 || (a2 = zt.call(this._weekdaysParse, o2)) !== -1 || (a2 = zt.call(this._minWeekdaysParse, o2)) !== -1 ? a2 : null : (a2 = zt.call(this._minWeekdaysParse, o2)) !== -1 || (a2 = zt.call(this._weekdaysParse, o2)) !== -1 || (a2 = zt.call(this._shortWeekdaysParse, o2)) !== -1 ? a2 : null;
        }
        function We(t3, e4, n4) {
          var i2, a2, r2;
          if (this._weekdaysParseExact)
            return ze.call(this, t3, e4, n4);
          for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), i2 = 0; i2 < 7; i2++) {
            if (a2 = f([2e3, 1]).day(i2), n4 && !this._fullWeekdaysParse[i2] && (this._fullWeekdaysParse[i2] = new RegExp("^" + this.weekdays(a2, "").replace(".", "\\.?") + "$", "i"), this._shortWeekdaysParse[i2] = new RegExp("^" + this.weekdaysShort(a2, "").replace(".", "\\.?") + "$", "i"), this._minWeekdaysParse[i2] = new RegExp("^" + this.weekdaysMin(a2, "").replace(".", "\\.?") + "$", "i")), this._weekdaysParse[i2] || (r2 = "^" + this.weekdays(a2, "") + "|^" + this.weekdaysShort(a2, "") + "|^" + this.weekdaysMin(a2, ""), this._weekdaysParse[i2] = new RegExp(r2.replace(".", ""), "i")), n4 && e4 === "dddd" && this._fullWeekdaysParse[i2].test(t3))
              return i2;
            if (n4 && e4 === "ddd" && this._shortWeekdaysParse[i2].test(t3))
              return i2;
            if (n4 && e4 === "dd" && this._minWeekdaysParse[i2].test(t3))
              return i2;
            if (!n4 && this._weekdaysParse[i2].test(t3))
              return i2;
          }
        }
        function $e(t3) {
          if (!this.isValid())
            return t3 != null ? this : NaN;
          var e4 = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
          return t3 != null ? (t3 = Ie(t3, this.localeData()), this.add(t3 - e4, "d")) : e4;
        }
        function Ve(t3) {
          if (!this.isValid())
            return t3 != null ? this : NaN;
          var e4 = (this.day() + 7 - this.localeData()._week.dow) % 7;
          return t3 == null ? e4 : this.add(t3 - e4, "d");
        }
        function Ye(t3) {
          if (!this.isValid())
            return t3 != null ? this : NaN;
          if (t3 != null) {
            var e4 = Me(t3, this.localeData());
            return this.day(this.day() % 7 ? e4 : e4 - 7);
          }
          return this.day() || 7;
        }
        function Ue(t3) {
          return this._weekdaysParseExact ? (s(this, "_weekdaysRegex") || Ze.call(this), t3 ? this._weekdaysStrictRegex : this._weekdaysRegex) : (s(this, "_weekdaysRegex") || (this._weekdaysRegex = Ne), this._weekdaysStrictRegex && t3 ? this._weekdaysStrictRegex : this._weekdaysRegex);
        }
        function Ge(t3) {
          return this._weekdaysParseExact ? (s(this, "_weekdaysRegex") || Ze.call(this), t3 ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (s(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = Le), this._weekdaysShortStrictRegex && t3 ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
        }
        function Xe(t3) {
          return this._weekdaysParseExact ? (s(this, "_weekdaysRegex") || Ze.call(this), t3 ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (s(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Fe), this._weekdaysMinStrictRegex && t3 ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
        }
        function Ze() {
          function t3(t4, e5) {
            return e5.length - t4.length;
          }
          var e4, n4, i2, a2, r2, o2 = [], s2 = [], l2 = [], c2 = [];
          for (e4 = 0; e4 < 7; e4++)
            n4 = f([2e3, 1]).day(e4), i2 = Lt(this.weekdaysMin(n4, "")), a2 = Lt(this.weekdaysShort(n4, "")), r2 = Lt(this.weekdays(n4, "")), o2.push(i2), s2.push(a2), l2.push(r2), c2.push(i2), c2.push(a2), c2.push(r2);
          o2.sort(t3), s2.sort(t3), l2.sort(t3), c2.sort(t3), this._weekdaysRegex = new RegExp("^(" + c2.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp("^(" + l2.join("|") + ")", "i"), this._weekdaysShortStrictRegex = new RegExp("^(" + s2.join("|") + ")", "i"), this._weekdaysMinStrictRegex = new RegExp("^(" + o2.join("|") + ")", "i");
        }
        function Ke() {
          return this.hours() % 12 || 12;
        }
        function Qe() {
          return this.hours() || 24;
        }
        function Je(t3, e4) {
          B(t3, 0, 0, function() {
            return this.localeData().meridiem(this.hours(), this.minutes(), e4);
          });
        }
        function tn(t3, e4) {
          return e4._meridiemParse;
        }
        function en(t3) {
          return (t3 + "").toLowerCase().charAt(0) === "p";
        }
        B("H", ["HH", 2], 0, "hour"), B("h", ["hh", 2], 0, Ke), B("k", ["kk", 2], 0, Qe), B("hmm", 0, 0, function() {
          return "" + Ke.apply(this) + j(this.minutes(), 2);
        }), B("hmmss", 0, 0, function() {
          return "" + Ke.apply(this) + j(this.minutes(), 2) + j(this.seconds(), 2);
        }), B("Hmm", 0, 0, function() {
          return "" + this.hours() + j(this.minutes(), 2);
        }), B("Hmmss", 0, 0, function() {
          return "" + this.hours() + j(this.minutes(), 2) + j(this.seconds(), 2);
        }), Je("a", true), Je("A", false), nt("hour", "h"), ot("hour", 13), Ot("a", tn), Ot("A", tn), Ot("H", wt), Ot("h", wt), Ot("k", wt), Ot("HH", wt, bt), Ot("hh", wt, bt), Ot("kk", wt, bt), Ot("hmm", St), Ot("hmmss", Ct), Ot("Hmm", St), Ot("Hmmss", Ct), Ht(["H", "HH"], Yt), Ht(["k", "kk"], function(t3, e4, n4) {
          var i2 = dt(t3);
          e4[Yt] = i2 === 24 ? 0 : i2;
        }), Ht(["a", "A"], function(t3, e4, n4) {
          n4._isPm = n4._locale.isPM(t3), n4._meridiem = t3;
        }), Ht(["h", "hh"], function(t3, e4, n4) {
          e4[Yt] = dt(t3), m(n4).bigHour = true;
        }), Ht("hmm", function(t3, e4, n4) {
          var i2 = t3.length - 2;
          e4[Yt] = dt(t3.substr(0, i2)), e4[Ut] = dt(t3.substr(i2)), m(n4).bigHour = true;
        }), Ht("hmmss", function(t3, e4, n4) {
          var i2 = t3.length - 4, a2 = t3.length - 2;
          e4[Yt] = dt(t3.substr(0, i2)), e4[Ut] = dt(t3.substr(i2, 2)), e4[Gt] = dt(t3.substr(a2)), m(n4).bigHour = true;
        }), Ht("Hmm", function(t3, e4, n4) {
          var i2 = t3.length - 2;
          e4[Yt] = dt(t3.substr(0, i2)), e4[Ut] = dt(t3.substr(i2));
        }), Ht("Hmmss", function(t3, e4, n4) {
          var i2 = t3.length - 4, a2 = t3.length - 2;
          e4[Yt] = dt(t3.substr(0, i2)), e4[Ut] = dt(t3.substr(i2, 2)), e4[Gt] = dt(t3.substr(a2));
        });
        var nn = /[ap]\.?m?\.?/i, an = ut("Hours", true);
        function rn(t3, e4, n4) {
          return t3 > 11 ? n4 ? "pm" : "PM" : n4 ? "am" : "AM";
        }
        var on, sn = { calendar: P, longDateFormat: V, invalidDate: U, ordinal: X, dayOfMonthOrdinalParse: Z, relativeTime: Q, months: te, monthsShort: ee, week: ke, weekdays: Pe, weekdaysMin: je, weekdaysShort: Oe, meridiemParse: nn }, ln = {}, cn = {};
        function dn(t3, e4) {
          var n4, i2 = Math.min(t3.length, e4.length);
          for (n4 = 0; n4 < i2; n4 += 1)
            if (t3[n4] !== e4[n4])
              return n4;
          return i2;
        }
        function un(t3) {
          return t3 ? t3.toLowerCase().replace("_", "-") : t3;
        }
        function hn(t3) {
          for (var e4, n4, i2, a2, r2 = 0; r2 < t3.length; ) {
            for (e4 = (a2 = un(t3[r2]).split("-")).length, n4 = (n4 = un(t3[r2 + 1])) ? n4.split("-") : null; e4 > 0; ) {
              if (i2 = pn(a2.slice(0, e4).join("-")))
                return i2;
              if (n4 && n4.length >= e4 && dn(a2, n4) >= e4 - 1)
                break;
              e4--;
            }
            r2++;
          }
          return on;
        }
        function pn(e4) {
          var n4 = null;
          if (ln[e4] === void 0 && t2 && t2.exports)
            try {
              n4 = on._abbr, Object(function() {
                var t3 = new Error("Cannot find module 'undefined'");
                throw t3.code = "MODULE_NOT_FOUND", t3;
              }()), fn(n4);
            } catch (t3) {
              ln[e4] = null;
            }
          return ln[e4];
        }
        function fn(t3, e4) {
          var n4;
          return t3 && ((n4 = c(e4) ? vn(t3) : gn(t3, e4)) ? on = n4 : typeof console != "undefined" && console.warn && console.warn("Locale " + t3 + " not found. Did you forget to load it?")), on._abbr;
        }
        function gn(t3, e4) {
          if (e4 !== null) {
            var n4, i2 = sn;
            if (e4.abbr = t3, ln[t3] != null)
              E("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."), i2 = ln[t3]._config;
            else if (e4.parentLocale != null)
              if (ln[e4.parentLocale] != null)
                i2 = ln[e4.parentLocale]._config;
              else {
                if ((n4 = pn(e4.parentLocale)) == null)
                  return cn[e4.parentLocale] || (cn[e4.parentLocale] = []), cn[e4.parentLocale].push({ name: t3, config: e4 }), null;
                i2 = n4._config;
              }
            return ln[t3] = new R(M(i2, e4)), cn[t3] && cn[t3].forEach(function(t4) {
              gn(t4.name, t4.config);
            }), fn(t3), ln[t3];
          }
          return delete ln[t3], null;
        }
        function mn(t3, e4) {
          if (e4 != null) {
            var n4, i2, a2 = sn;
            ln[t3] != null && ln[t3].parentLocale != null ? ln[t3].set(M(ln[t3]._config, e4)) : ((i2 = pn(t3)) != null && (a2 = i2._config), e4 = M(a2, e4), i2 == null && (e4.abbr = t3), (n4 = new R(e4)).parentLocale = ln[t3], ln[t3] = n4), fn(t3);
          } else
            ln[t3] != null && (ln[t3].parentLocale != null ? (ln[t3] = ln[t3].parentLocale, t3 === fn() && fn(t3)) : ln[t3] != null && delete ln[t3]);
          return ln[t3];
        }
        function vn(t3) {
          var e4;
          if (t3 && t3._locale && t3._locale._abbr && (t3 = t3._locale._abbr), !t3)
            return on;
          if (!r(t3)) {
            if (e4 = pn(t3))
              return e4;
            t3 = [t3];
          }
          return hn(t3);
        }
        function bn() {
          return D(ln);
        }
        function yn(t3) {
          var e4, n4 = t3._a;
          return n4 && m(t3).overflow === -2 && (e4 = n4[$t] < 0 || n4[$t] > 11 ? $t : n4[Vt] < 1 || n4[Vt] > Jt(n4[Wt], n4[$t]) ? Vt : n4[Yt] < 0 || n4[Yt] > 24 || n4[Yt] === 24 && (n4[Ut] !== 0 || n4[Gt] !== 0 || n4[Xt] !== 0) ? Yt : n4[Ut] < 0 || n4[Ut] > 59 ? Ut : n4[Gt] < 0 || n4[Gt] > 59 ? Gt : n4[Xt] < 0 || n4[Xt] > 999 ? Xt : -1, m(t3)._overflowDayOfYear && (e4 < Wt || e4 > Vt) && (e4 = Vt), m(t3)._overflowWeeks && e4 === -1 && (e4 = Zt), m(t3)._overflowWeekday && e4 === -1 && (e4 = Kt), m(t3).overflow = e4), t3;
        }
        var xn = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, _n = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d|))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([+-]\d\d(?::?\d\d)?|\s*Z)?)?$/, wn = /Z|[+-]\d\d(?::?\d\d)?/, Sn = [["YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/], ["YYYY-MM-DD", /\d{4}-\d\d-\d\d/], ["GGGG-[W]WW-E", /\d{4}-W\d\d-\d/], ["GGGG-[W]WW", /\d{4}-W\d\d/, false], ["YYYY-DDD", /\d{4}-\d{3}/], ["YYYY-MM", /\d{4}-\d\d/, false], ["YYYYYYMMDD", /[+-]\d{10}/], ["YYYYMMDD", /\d{8}/], ["GGGG[W]WWE", /\d{4}W\d{3}/], ["GGGG[W]WW", /\d{4}W\d{2}/, false], ["YYYYDDD", /\d{7}/], ["YYYYMM", /\d{6}/, false], ["YYYY", /\d{4}/, false]], Cn = [["HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/], ["HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/], ["HH:mm:ss", /\d\d:\d\d:\d\d/], ["HH:mm", /\d\d:\d\d/], ["HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/], ["HHmmss,SSSS", /\d\d\d\d\d\d,\d+/], ["HHmmss", /\d\d\d\d\d\d/], ["HHmm", /\d\d\d\d/], ["HH", /\d\d/]], kn = /^\/?Date\((-?\d+)/i, Dn = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, Tn = { UT: 0, GMT: 0, EDT: -240, EST: -300, CDT: -300, CST: -360, MDT: -360, MST: -420, PDT: -420, PST: -480 };
        function En(t3) {
          var e4, n4, i2, a2, r2, o2, s2 = t3._i, l2 = xn.exec(s2) || _n.exec(s2);
          if (l2) {
            for (m(t3).iso = true, e4 = 0, n4 = Sn.length; e4 < n4; e4++)
              if (Sn[e4][1].exec(l2[1])) {
                a2 = Sn[e4][0], i2 = Sn[e4][2] !== false;
                break;
              }
            if (a2 == null)
              return void (t3._isValid = false);
            if (l2[3]) {
              for (e4 = 0, n4 = Cn.length; e4 < n4; e4++)
                if (Cn[e4][1].exec(l2[3])) {
                  r2 = (l2[2] || " ") + Cn[e4][0];
                  break;
                }
              if (r2 == null)
                return void (t3._isValid = false);
            }
            if (!i2 && r2 != null)
              return void (t3._isValid = false);
            if (l2[4]) {
              if (!wn.exec(l2[4]))
                return void (t3._isValid = false);
              o2 = "Z";
            }
            t3._f = a2 + (r2 || "") + (o2 || ""), Bn(t3);
          } else
            t3._isValid = false;
        }
        function An(t3, e4, n4, i2, a2, r2) {
          var o2 = [In(t3), ee.indexOf(e4), parseInt(n4, 10), parseInt(i2, 10), parseInt(a2, 10)];
          return r2 && o2.push(parseInt(r2, 10)), o2;
        }
        function In(t3) {
          var e4 = parseInt(t3, 10);
          return e4 <= 49 ? 2e3 + e4 : e4 <= 999 ? 1900 + e4 : e4;
        }
        function Mn(t3) {
          return t3.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
        }
        function Rn(t3, e4, n4) {
          return !t3 || Oe.indexOf(t3) === new Date(e4[0], e4[1], e4[2]).getDay() || (m(n4).weekdayMismatch = true, n4._isValid = false, false);
        }
        function Pn(t3, e4, n4) {
          if (t3)
            return Tn[t3];
          if (e4)
            return 0;
          var i2 = parseInt(n4, 10), a2 = i2 % 100;
          return (i2 - a2) / 100 * 60 + a2;
        }
        function On(t3) {
          var e4, n4 = Dn.exec(Mn(t3._i));
          if (n4) {
            if (e4 = An(n4[4], n4[3], n4[2], n4[5], n4[6], n4[7]), !Rn(n4[1], e4, t3))
              return;
            t3._a = e4, t3._tzm = Pn(n4[8], n4[9], n4[10]), t3._d = ye.apply(null, t3._a), t3._d.setUTCMinutes(t3._d.getUTCMinutes() - t3._tzm), m(t3).rfc2822 = true;
          } else
            t3._isValid = false;
        }
        function jn(t3) {
          var e4 = kn.exec(t3._i);
          e4 === null ? (En(t3), t3._isValid === false && (delete t3._isValid, On(t3), t3._isValid === false && (delete t3._isValid, t3._strict ? t3._isValid = false : i.createFromInputFallback(t3)))) : t3._d = new Date(+e4[1]);
        }
        function Nn(t3, e4, n4) {
          return t3 != null ? t3 : e4 != null ? e4 : n4;
        }
        function Ln(t3) {
          var e4 = new Date(i.now());
          return t3._useUTC ? [e4.getUTCFullYear(), e4.getUTCMonth(), e4.getUTCDate()] : [e4.getFullYear(), e4.getMonth(), e4.getDate()];
        }
        function Fn(t3) {
          var e4, n4, i2, a2, r2, o2 = [];
          if (!t3._d) {
            for (i2 = Ln(t3), t3._w && t3._a[Vt] == null && t3._a[$t] == null && Hn(t3), t3._dayOfYear != null && (r2 = Nn(t3._a[Wt], i2[Wt]), (t3._dayOfYear > ge(r2) || t3._dayOfYear === 0) && (m(t3)._overflowDayOfYear = true), n4 = ye(r2, 0, t3._dayOfYear), t3._a[$t] = n4.getUTCMonth(), t3._a[Vt] = n4.getUTCDate()), e4 = 0; e4 < 3 && t3._a[e4] == null; ++e4)
              t3._a[e4] = o2[e4] = i2[e4];
            for (; e4 < 7; e4++)
              t3._a[e4] = o2[e4] = t3._a[e4] == null ? e4 === 2 ? 1 : 0 : t3._a[e4];
            t3._a[Yt] === 24 && t3._a[Ut] === 0 && t3._a[Gt] === 0 && t3._a[Xt] === 0 && (t3._nextDay = true, t3._a[Yt] = 0), t3._d = (t3._useUTC ? ye : be).apply(null, o2), a2 = t3._useUTC ? t3._d.getUTCDay() : t3._d.getDay(), t3._tzm != null && t3._d.setUTCMinutes(t3._d.getUTCMinutes() - t3._tzm), t3._nextDay && (t3._a[Yt] = 24), t3._w && t3._w.d !== void 0 && t3._w.d !== a2 && (m(t3).weekdayMismatch = true);
          }
        }
        function Hn(t3) {
          var e4, n4, i2, a2, r2, o2, s2, l2, c2;
          (e4 = t3._w).GG != null || e4.W != null || e4.E != null ? (r2 = 1, o2 = 4, n4 = Nn(e4.GG, t3._a[Wt], we(Gn(), 1, 4).year), i2 = Nn(e4.W, 1), ((a2 = Nn(e4.E, 1)) < 1 || a2 > 7) && (l2 = true)) : (r2 = t3._locale._week.dow, o2 = t3._locale._week.doy, c2 = we(Gn(), r2, o2), n4 = Nn(e4.gg, t3._a[Wt], c2.year), i2 = Nn(e4.w, c2.week), e4.d != null ? ((a2 = e4.d) < 0 || a2 > 6) && (l2 = true) : e4.e != null ? (a2 = e4.e + r2, (e4.e < 0 || e4.e > 6) && (l2 = true)) : a2 = r2), i2 < 1 || i2 > Se(n4, r2, o2) ? m(t3)._overflowWeeks = true : l2 != null ? m(t3)._overflowWeekday = true : (s2 = _e(n4, i2, a2, r2, o2), t3._a[Wt] = s2.year, t3._dayOfYear = s2.dayOfYear);
        }
        function Bn(t3) {
          if (t3._f !== i.ISO_8601)
            if (t3._f !== i.RFC_2822) {
              t3._a = [], m(t3).empty = true;
              var e4, n4, a2, r2, o2, s2, l2 = "" + t3._i, c2 = l2.length, d2 = 0;
              for (a2 = $(t3._f, t3._locale).match(N) || [], e4 = 0; e4 < a2.length; e4++)
                r2 = a2[e4], (n4 = (l2.match(jt(r2, t3)) || [])[0]) && ((o2 = l2.substr(0, l2.indexOf(n4))).length > 0 && m(t3).unusedInput.push(o2), l2 = l2.slice(l2.indexOf(n4) + n4.length), d2 += n4.length), H[r2] ? (n4 ? m(t3).empty = false : m(t3).unusedTokens.push(r2), qt(r2, n4, t3)) : t3._strict && !n4 && m(t3).unusedTokens.push(r2);
              m(t3).charsLeftOver = c2 - d2, l2.length > 0 && m(t3).unusedInput.push(l2), t3._a[Yt] <= 12 && m(t3).bigHour === true && t3._a[Yt] > 0 && (m(t3).bigHour = void 0), m(t3).parsedDateParts = t3._a.slice(0), m(t3).meridiem = t3._meridiem, t3._a[Yt] = qn(t3._locale, t3._a[Yt], t3._meridiem), (s2 = m(t3).era) !== null && (t3._a[Wt] = t3._locale.erasConvertYear(s2, t3._a[Wt])), Fn(t3), yn(t3);
            } else
              On(t3);
          else
            En(t3);
        }
        function qn(t3, e4, n4) {
          var i2;
          return n4 == null ? e4 : t3.meridiemHour != null ? t3.meridiemHour(e4, n4) : t3.isPM != null ? ((i2 = t3.isPM(n4)) && e4 < 12 && (e4 += 12), i2 || e4 !== 12 || (e4 = 0), e4) : e4;
        }
        function zn(t3) {
          var e4, n4, i2, a2, r2, o2, s2 = false;
          if (t3._f.length === 0)
            return m(t3).invalidFormat = true, void (t3._d = new Date(NaN));
          for (a2 = 0; a2 < t3._f.length; a2++)
            r2 = 0, o2 = false, e4 = _({}, t3), t3._useUTC != null && (e4._useUTC = t3._useUTC), e4._f = t3._f[a2], Bn(e4), v(e4) && (o2 = true), r2 += m(e4).charsLeftOver, r2 += 10 * m(e4).unusedTokens.length, m(e4).score = r2, s2 ? r2 < i2 && (i2 = r2, n4 = e4) : (i2 == null || r2 < i2 || o2) && (i2 = r2, n4 = e4, o2 && (s2 = true));
          p(t3, n4 || e4);
        }
        function Wn(t3) {
          if (!t3._d) {
            var e4 = at(t3._i), n4 = e4.day === void 0 ? e4.date : e4.day;
            t3._a = h([e4.year, e4.month, n4, e4.hour, e4.minute, e4.second, e4.millisecond], function(t4) {
              return t4 && parseInt(t4, 10);
            }), Fn(t3);
          }
        }
        function $n(t3) {
          var e4 = new w(yn(Vn(t3)));
          return e4._nextDay && (e4.add(1, "d"), e4._nextDay = void 0), e4;
        }
        function Vn(t3) {
          var e4 = t3._i, n4 = t3._f;
          return t3._locale = t3._locale || vn(t3._l), e4 === null || n4 === void 0 && e4 === "" ? b({ nullInput: true }) : (typeof e4 == "string" && (t3._i = e4 = t3._locale.preparse(e4)), S(e4) ? new w(yn(e4)) : (u(e4) ? t3._d = e4 : r(n4) ? zn(t3) : n4 ? Bn(t3) : Yn(t3), v(t3) || (t3._d = null), t3));
        }
        function Yn(t3) {
          var e4 = t3._i;
          c(e4) ? t3._d = new Date(i.now()) : u(e4) ? t3._d = new Date(e4.valueOf()) : typeof e4 == "string" ? jn(t3) : r(e4) ? (t3._a = h(e4.slice(0), function(t4) {
            return parseInt(t4, 10);
          }), Fn(t3)) : o(e4) ? Wn(t3) : d(e4) ? t3._d = new Date(e4) : i.createFromInputFallback(t3);
        }
        function Un(t3, e4, n4, i2, a2) {
          var s2 = {};
          return e4 !== true && e4 !== false || (i2 = e4, e4 = void 0), n4 !== true && n4 !== false || (i2 = n4, n4 = void 0), (o(t3) && l(t3) || r(t3) && t3.length === 0) && (t3 = void 0), s2._isAMomentObject = true, s2._useUTC = s2._isUTC = a2, s2._l = n4, s2._i = t3, s2._f = e4, s2._strict = i2, $n(s2);
        }
        function Gn(t3, e4, n4, i2) {
          return Un(t3, e4, n4, i2, false);
        }
        i.createFromInputFallback = k("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(t3) {
          t3._d = new Date(t3._i + (t3._useUTC ? " UTC" : ""));
        }), i.ISO_8601 = function() {
        }, i.RFC_2822 = function() {
        };
        var Xn = k("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
          var t3 = Gn.apply(null, arguments);
          return this.isValid() && t3.isValid() ? t3 < this ? this : t3 : b();
        }), Zn = k("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
          var t3 = Gn.apply(null, arguments);
          return this.isValid() && t3.isValid() ? t3 > this ? this : t3 : b();
        });
        function Kn(t3, e4) {
          var n4, i2;
          if (e4.length === 1 && r(e4[0]) && (e4 = e4[0]), !e4.length)
            return Gn();
          for (n4 = e4[0], i2 = 1; i2 < e4.length; ++i2)
            e4[i2].isValid() && !e4[i2][t3](n4) || (n4 = e4[i2]);
          return n4;
        }
        function Qn() {
          return Kn("isBefore", [].slice.call(arguments, 0));
        }
        function Jn() {
          return Kn("isAfter", [].slice.call(arguments, 0));
        }
        var ti = function() {
          return Date.now ? Date.now() : +new Date();
        }, ei = ["year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond"];
        function ni(t3) {
          var e4, n4, i2 = false;
          for (e4 in t3)
            if (s(t3, e4) && (zt.call(ei, e4) === -1 || t3[e4] != null && isNaN(t3[e4])))
              return false;
          for (n4 = 0; n4 < ei.length; ++n4)
            if (t3[ei[n4]]) {
              if (i2)
                return false;
              parseFloat(t3[ei[n4]]) !== dt(t3[ei[n4]]) && (i2 = true);
            }
          return true;
        }
        function ii() {
          return this._isValid;
        }
        function ai() {
          return Ti(NaN);
        }
        function ri(t3) {
          var e4 = at(t3), n4 = e4.year || 0, i2 = e4.quarter || 0, a2 = e4.month || 0, r2 = e4.week || e4.isoWeek || 0, o2 = e4.day || 0, s2 = e4.hour || 0, l2 = e4.minute || 0, c2 = e4.second || 0, d2 = e4.millisecond || 0;
          this._isValid = ni(e4), this._milliseconds = +d2 + 1e3 * c2 + 6e4 * l2 + 1e3 * s2 * 60 * 60, this._days = +o2 + 7 * r2, this._months = +a2 + 3 * i2 + 12 * n4, this._data = {}, this._locale = vn(), this._bubble();
        }
        function oi(t3) {
          return t3 instanceof ri;
        }
        function si(t3) {
          return t3 < 0 ? -1 * Math.round(-1 * t3) : Math.round(t3);
        }
        function li(t3, e4, n4) {
          var i2, a2 = Math.min(t3.length, e4.length), r2 = Math.abs(t3.length - e4.length), o2 = 0;
          for (i2 = 0; i2 < a2; i2++)
            (n4 && t3[i2] !== e4[i2] || !n4 && dt(t3[i2]) !== dt(e4[i2])) && o2++;
          return o2 + r2;
        }
        function ci(t3, e4) {
          B(t3, 0, 0, function() {
            var t4 = this.utcOffset(), n4 = "+";
            return t4 < 0 && (t4 = -t4, n4 = "-"), n4 + j(~~(t4 / 60), 2) + e4 + j(~~t4 % 60, 2);
          });
        }
        ci("Z", ":"), ci("ZZ", ""), Ot("Z", Mt), Ot("ZZ", Mt), Ht(["Z", "ZZ"], function(t3, e4, n4) {
          n4._useUTC = true, n4._tzm = ui(Mt, t3);
        });
        var di = /([\+\-]|\d\d)/gi;
        function ui(t3, e4) {
          var n4, i2, a2 = (e4 || "").match(t3);
          return a2 === null ? null : (i2 = 60 * (n4 = ((a2[a2.length - 1] || []) + "").match(di) || ["-", 0, 0])[1] + dt(n4[2])) === 0 ? 0 : n4[0] === "+" ? i2 : -i2;
        }
        function hi(t3, e4) {
          var n4, a2;
          return e4._isUTC ? (n4 = e4.clone(), a2 = (S(t3) || u(t3) ? t3.valueOf() : Gn(t3).valueOf()) - n4.valueOf(), n4._d.setTime(n4._d.valueOf() + a2), i.updateOffset(n4, false), n4) : Gn(t3).local();
        }
        function pi(t3) {
          return -Math.round(t3._d.getTimezoneOffset());
        }
        function fi(t3, e4, n4) {
          var a2, r2 = this._offset || 0;
          if (!this.isValid())
            return t3 != null ? this : NaN;
          if (t3 != null) {
            if (typeof t3 == "string") {
              if ((t3 = ui(Mt, t3)) === null)
                return this;
            } else
              Math.abs(t3) < 16 && !n4 && (t3 *= 60);
            return !this._isUTC && e4 && (a2 = pi(this)), this._offset = t3, this._isUTC = true, a2 != null && this.add(a2, "m"), r2 !== t3 && (!e4 || this._changeInProgress ? Ri(this, Ti(t3 - r2, "m"), 1, false) : this._changeInProgress || (this._changeInProgress = true, i.updateOffset(this, true), this._changeInProgress = null)), this;
          }
          return this._isUTC ? r2 : pi(this);
        }
        function gi(t3, e4) {
          return t3 != null ? (typeof t3 != "string" && (t3 = -t3), this.utcOffset(t3, e4), this) : -this.utcOffset();
        }
        function mi(t3) {
          return this.utcOffset(0, t3);
        }
        function vi(t3) {
          return this._isUTC && (this.utcOffset(0, t3), this._isUTC = false, t3 && this.subtract(pi(this), "m")), this;
        }
        function bi() {
          if (this._tzm != null)
            this.utcOffset(this._tzm, false, true);
          else if (typeof this._i == "string") {
            var t3 = ui(It, this._i);
            t3 != null ? this.utcOffset(t3) : this.utcOffset(0, true);
          }
          return this;
        }
        function yi(t3) {
          return !!this.isValid() && (t3 = t3 ? Gn(t3).utcOffset() : 0, (this.utcOffset() - t3) % 60 == 0);
        }
        function xi() {
          return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
        }
        function _i() {
          if (!c(this._isDSTShifted))
            return this._isDSTShifted;
          var t3, e4 = {};
          return _(e4, this), (e4 = Vn(e4))._a ? (t3 = e4._isUTC ? f(e4._a) : Gn(e4._a), this._isDSTShifted = this.isValid() && li(e4._a, t3.toArray()) > 0) : this._isDSTShifted = false, this._isDSTShifted;
        }
        function wi() {
          return !!this.isValid() && !this._isUTC;
        }
        function Si() {
          return !!this.isValid() && this._isUTC;
        }
        function Ci() {
          return !!this.isValid() && this._isUTC && this._offset === 0;
        }
        i.updateOffset = function() {
        };
        var ki = /^(-|\+)?(?:(\d*)[. ])?(\d+):(\d+)(?::(\d+)(\.\d*)?)?$/, Di = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
        function Ti(t3, e4) {
          var n4, i2, a2, r2 = t3, o2 = null;
          return oi(t3) ? r2 = { ms: t3._milliseconds, d: t3._days, M: t3._months } : d(t3) || !isNaN(+t3) ? (r2 = {}, e4 ? r2[e4] = +t3 : r2.milliseconds = +t3) : (o2 = ki.exec(t3)) ? (n4 = o2[1] === "-" ? -1 : 1, r2 = { y: 0, d: dt(o2[Vt]) * n4, h: dt(o2[Yt]) * n4, m: dt(o2[Ut]) * n4, s: dt(o2[Gt]) * n4, ms: dt(si(1e3 * o2[Xt])) * n4 }) : (o2 = Di.exec(t3)) ? (n4 = o2[1] === "-" ? -1 : 1, r2 = { y: Ei(o2[2], n4), M: Ei(o2[3], n4), w: Ei(o2[4], n4), d: Ei(o2[5], n4), h: Ei(o2[6], n4), m: Ei(o2[7], n4), s: Ei(o2[8], n4) }) : r2 == null ? r2 = {} : typeof r2 == "object" && ("from" in r2 || "to" in r2) && (a2 = Ii(Gn(r2.from), Gn(r2.to)), (r2 = {}).ms = a2.milliseconds, r2.M = a2.months), i2 = new ri(r2), oi(t3) && s(t3, "_locale") && (i2._locale = t3._locale), oi(t3) && s(t3, "_isValid") && (i2._isValid = t3._isValid), i2;
        }
        function Ei(t3, e4) {
          var n4 = t3 && parseFloat(t3.replace(",", "."));
          return (isNaN(n4) ? 0 : n4) * e4;
        }
        function Ai(t3, e4) {
          var n4 = {};
          return n4.months = e4.month() - t3.month() + 12 * (e4.year() - t3.year()), t3.clone().add(n4.months, "M").isAfter(e4) && --n4.months, n4.milliseconds = +e4 - +t3.clone().add(n4.months, "M"), n4;
        }
        function Ii(t3, e4) {
          var n4;
          return t3.isValid() && e4.isValid() ? (e4 = hi(e4, t3), t3.isBefore(e4) ? n4 = Ai(t3, e4) : ((n4 = Ai(e4, t3)).milliseconds = -n4.milliseconds, n4.months = -n4.months), n4) : { milliseconds: 0, months: 0 };
        }
        function Mi(t3, e4) {
          return function(n4, i2) {
            var a2;
            return i2 === null || isNaN(+i2) || (E(e4, "moment()." + e4 + "(period, number) is deprecated. Please use moment()." + e4 + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."), a2 = n4, n4 = i2, i2 = a2), Ri(this, Ti(n4, i2), t3), this;
          };
        }
        function Ri(t3, e4, n4, a2) {
          var r2 = e4._milliseconds, o2 = si(e4._days), s2 = si(e4._months);
          t3.isValid() && (a2 = a2 == null || a2, s2 && ce(t3, ht(t3, "Month") + s2 * n4), o2 && pt(t3, "Date", ht(t3, "Date") + o2 * n4), r2 && t3._d.setTime(t3._d.valueOf() + r2 * n4), a2 && i.updateOffset(t3, o2 || s2));
        }
        Ti.fn = ri.prototype, Ti.invalid = ai;
        var Pi = Mi(1, "add"), Oi = Mi(-1, "subtract");
        function ji(t3) {
          return typeof t3 == "string" || t3 instanceof String;
        }
        function Ni(t3) {
          return S(t3) || u(t3) || ji(t3) || d(t3) || Fi(t3) || Li(t3) || t3 == null;
        }
        function Li(t3) {
          var e4, n4, i2 = o(t3) && !l(t3), a2 = false, r2 = ["years", "year", "y", "months", "month", "M", "days", "day", "d", "dates", "date", "D", "hours", "hour", "h", "minutes", "minute", "m", "seconds", "second", "s", "milliseconds", "millisecond", "ms"];
          for (e4 = 0; e4 < r2.length; e4 += 1)
            n4 = r2[e4], a2 = a2 || s(t3, n4);
          return i2 && a2;
        }
        function Fi(t3) {
          var e4 = r(t3), n4 = false;
          return e4 && (n4 = t3.filter(function(e5) {
            return !d(e5) && ji(t3);
          }).length === 0), e4 && n4;
        }
        function Hi(t3) {
          var e4, n4, i2 = o(t3) && !l(t3), a2 = false, r2 = ["sameDay", "nextDay", "lastDay", "nextWeek", "lastWeek", "sameElse"];
          for (e4 = 0; e4 < r2.length; e4 += 1)
            n4 = r2[e4], a2 = a2 || s(t3, n4);
          return i2 && a2;
        }
        function Bi(t3, e4) {
          var n4 = t3.diff(e4, "days", true);
          return n4 < -6 ? "sameElse" : n4 < -1 ? "lastWeek" : n4 < 0 ? "lastDay" : n4 < 1 ? "sameDay" : n4 < 2 ? "nextDay" : n4 < 7 ? "nextWeek" : "sameElse";
        }
        function qi(t3, e4) {
          arguments.length === 1 && (arguments[0] ? Ni(arguments[0]) ? (t3 = arguments[0], e4 = void 0) : Hi(arguments[0]) && (e4 = arguments[0], t3 = void 0) : (t3 = void 0, e4 = void 0));
          var n4 = t3 || Gn(), a2 = hi(n4, this).startOf("day"), r2 = i.calendarFormat(this, a2) || "sameElse", o2 = e4 && (A(e4[r2]) ? e4[r2].call(this, n4) : e4[r2]);
          return this.format(o2 || this.localeData().calendar(r2, this, Gn(n4)));
        }
        function zi() {
          return new w(this);
        }
        function Wi(t3, e4) {
          var n4 = S(t3) ? t3 : Gn(t3);
          return !(!this.isValid() || !n4.isValid()) && ((e4 = it(e4) || "millisecond") === "millisecond" ? this.valueOf() > n4.valueOf() : n4.valueOf() < this.clone().startOf(e4).valueOf());
        }
        function $i(t3, e4) {
          var n4 = S(t3) ? t3 : Gn(t3);
          return !(!this.isValid() || !n4.isValid()) && ((e4 = it(e4) || "millisecond") === "millisecond" ? this.valueOf() < n4.valueOf() : this.clone().endOf(e4).valueOf() < n4.valueOf());
        }
        function Vi(t3, e4, n4, i2) {
          var a2 = S(t3) ? t3 : Gn(t3), r2 = S(e4) ? e4 : Gn(e4);
          return !!(this.isValid() && a2.isValid() && r2.isValid()) && ((i2 = i2 || "()")[0] === "(" ? this.isAfter(a2, n4) : !this.isBefore(a2, n4)) && (i2[1] === ")" ? this.isBefore(r2, n4) : !this.isAfter(r2, n4));
        }
        function Yi(t3, e4) {
          var n4, i2 = S(t3) ? t3 : Gn(t3);
          return !(!this.isValid() || !i2.isValid()) && ((e4 = it(e4) || "millisecond") === "millisecond" ? this.valueOf() === i2.valueOf() : (n4 = i2.valueOf(), this.clone().startOf(e4).valueOf() <= n4 && n4 <= this.clone().endOf(e4).valueOf()));
        }
        function Ui(t3, e4) {
          return this.isSame(t3, e4) || this.isAfter(t3, e4);
        }
        function Gi(t3, e4) {
          return this.isSame(t3, e4) || this.isBefore(t3, e4);
        }
        function Xi(t3, e4, n4) {
          var i2, a2, r2;
          if (!this.isValid())
            return NaN;
          if (!(i2 = hi(t3, this)).isValid())
            return NaN;
          switch (a2 = 6e4 * (i2.utcOffset() - this.utcOffset()), e4 = it(e4)) {
            case "year":
              r2 = Zi(this, i2) / 12;
              break;
            case "month":
              r2 = Zi(this, i2);
              break;
            case "quarter":
              r2 = Zi(this, i2) / 3;
              break;
            case "second":
              r2 = (this - i2) / 1e3;
              break;
            case "minute":
              r2 = (this - i2) / 6e4;
              break;
            case "hour":
              r2 = (this - i2) / 36e5;
              break;
            case "day":
              r2 = (this - i2 - a2) / 864e5;
              break;
            case "week":
              r2 = (this - i2 - a2) / 6048e5;
              break;
            default:
              r2 = this - i2;
          }
          return n4 ? r2 : ct(r2);
        }
        function Zi(t3, e4) {
          if (t3.date() < e4.date())
            return -Zi(e4, t3);
          var n4 = 12 * (e4.year() - t3.year()) + (e4.month() - t3.month()), i2 = t3.clone().add(n4, "months");
          return -(n4 + (e4 - i2 < 0 ? (e4 - i2) / (i2 - t3.clone().add(n4 - 1, "months")) : (e4 - i2) / (t3.clone().add(n4 + 1, "months") - i2))) || 0;
        }
        function Ki() {
          return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
        }
        function Qi(t3) {
          if (!this.isValid())
            return null;
          var e4 = t3 !== true, n4 = e4 ? this.clone().utc() : this;
          return n4.year() < 0 || n4.year() > 9999 ? W(n4, e4 ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ") : A(Date.prototype.toISOString) ? e4 ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", W(n4, "Z")) : W(n4, e4 ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
        }
        function Ji() {
          if (!this.isValid())
            return "moment.invalid(/* " + this._i + " */)";
          var t3, e4, n4, i2, a2 = "moment", r2 = "";
          return this.isLocal() || (a2 = this.utcOffset() === 0 ? "moment.utc" : "moment.parseZone", r2 = "Z"), t3 = "[" + a2 + '("]', e4 = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", n4 = "-MM-DD[T]HH:mm:ss.SSS", i2 = r2 + '[")]', this.format(t3 + e4 + n4 + i2);
        }
        function ta(t3) {
          t3 || (t3 = this.isUtc() ? i.defaultFormatUtc : i.defaultFormat);
          var e4 = W(this, t3);
          return this.localeData().postformat(e4);
        }
        function ea(t3, e4) {
          return this.isValid() && (S(t3) && t3.isValid() || Gn(t3).isValid()) ? Ti({ to: this, from: t3 }).locale(this.locale()).humanize(!e4) : this.localeData().invalidDate();
        }
        function na(t3) {
          return this.from(Gn(), t3);
        }
        function ia(t3, e4) {
          return this.isValid() && (S(t3) && t3.isValid() || Gn(t3).isValid()) ? Ti({ from: this, to: t3 }).locale(this.locale()).humanize(!e4) : this.localeData().invalidDate();
        }
        function aa(t3) {
          return this.to(Gn(), t3);
        }
        function ra(t3) {
          var e4;
          return t3 === void 0 ? this._locale._abbr : ((e4 = vn(t3)) != null && (this._locale = e4), this);
        }
        i.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ", i.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
        var oa = k("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(t3) {
          return t3 === void 0 ? this.localeData() : this.locale(t3);
        });
        function sa() {
          return this._locale;
        }
        var la = 1e3, ca = 60 * la, da = 60 * ca, ua = 3506328 * da;
        function ha(t3, e4) {
          return (t3 % e4 + e4) % e4;
        }
        function pa(t3, e4, n4) {
          return t3 < 100 && t3 >= 0 ? new Date(t3 + 400, e4, n4) - ua : new Date(t3, e4, n4).valueOf();
        }
        function fa(t3, e4, n4) {
          return t3 < 100 && t3 >= 0 ? Date.UTC(t3 + 400, e4, n4) - ua : Date.UTC(t3, e4, n4);
        }
        function ga(t3) {
          var e4, n4;
          if ((t3 = it(t3)) === void 0 || t3 === "millisecond" || !this.isValid())
            return this;
          switch (n4 = this._isUTC ? fa : pa, t3) {
            case "year":
              e4 = n4(this.year(), 0, 1);
              break;
            case "quarter":
              e4 = n4(this.year(), this.month() - this.month() % 3, 1);
              break;
            case "month":
              e4 = n4(this.year(), this.month(), 1);
              break;
            case "week":
              e4 = n4(this.year(), this.month(), this.date() - this.weekday());
              break;
            case "isoWeek":
              e4 = n4(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));
              break;
            case "day":
            case "date":
              e4 = n4(this.year(), this.month(), this.date());
              break;
            case "hour":
              e4 = this._d.valueOf(), e4 -= ha(e4 + (this._isUTC ? 0 : this.utcOffset() * ca), da);
              break;
            case "minute":
              e4 = this._d.valueOf(), e4 -= ha(e4, ca);
              break;
            case "second":
              e4 = this._d.valueOf(), e4 -= ha(e4, la);
          }
          return this._d.setTime(e4), i.updateOffset(this, true), this;
        }
        function ma(t3) {
          var e4, n4;
          if ((t3 = it(t3)) === void 0 || t3 === "millisecond" || !this.isValid())
            return this;
          switch (n4 = this._isUTC ? fa : pa, t3) {
            case "year":
              e4 = n4(this.year() + 1, 0, 1) - 1;
              break;
            case "quarter":
              e4 = n4(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;
              break;
            case "month":
              e4 = n4(this.year(), this.month() + 1, 1) - 1;
              break;
            case "week":
              e4 = n4(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;
              break;
            case "isoWeek":
              e4 = n4(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;
              break;
            case "day":
            case "date":
              e4 = n4(this.year(), this.month(), this.date() + 1) - 1;
              break;
            case "hour":
              e4 = this._d.valueOf(), e4 += da - ha(e4 + (this._isUTC ? 0 : this.utcOffset() * ca), da) - 1;
              break;
            case "minute":
              e4 = this._d.valueOf(), e4 += ca - ha(e4, ca) - 1;
              break;
            case "second":
              e4 = this._d.valueOf(), e4 += la - ha(e4, la) - 1;
          }
          return this._d.setTime(e4), i.updateOffset(this, true), this;
        }
        function va() {
          return this._d.valueOf() - 6e4 * (this._offset || 0);
        }
        function ba() {
          return Math.floor(this.valueOf() / 1e3);
        }
        function ya() {
          return new Date(this.valueOf());
        }
        function xa() {
          var t3 = this;
          return [t3.year(), t3.month(), t3.date(), t3.hour(), t3.minute(), t3.second(), t3.millisecond()];
        }
        function _a() {
          var t3 = this;
          return { years: t3.year(), months: t3.month(), date: t3.date(), hours: t3.hours(), minutes: t3.minutes(), seconds: t3.seconds(), milliseconds: t3.milliseconds() };
        }
        function wa() {
          return this.isValid() ? this.toISOString() : null;
        }
        function Sa() {
          return v(this);
        }
        function Ca() {
          return p({}, m(this));
        }
        function ka() {
          return m(this).overflow;
        }
        function Da() {
          return { input: this._i, format: this._f, locale: this._locale, isUTC: this._isUTC, strict: this._strict };
        }
        function Ta(t3, e4) {
          var n4, a2, r2, o2 = this._eras || vn("en")._eras;
          for (n4 = 0, a2 = o2.length; n4 < a2; ++n4)
            switch (typeof o2[n4].since == "string" && (r2 = i(o2[n4].since).startOf("day"), o2[n4].since = r2.valueOf()), typeof o2[n4].until) {
              case "undefined":
                o2[n4].until = 1 / 0;
                break;
              case "string":
                r2 = i(o2[n4].until).startOf("day").valueOf(), o2[n4].until = r2.valueOf();
            }
          return o2;
        }
        function Ea(t3, e4, n4) {
          var i2, a2, r2, o2, s2, l2 = this.eras();
          for (t3 = t3.toUpperCase(), i2 = 0, a2 = l2.length; i2 < a2; ++i2)
            if (r2 = l2[i2].name.toUpperCase(), o2 = l2[i2].abbr.toUpperCase(), s2 = l2[i2].narrow.toUpperCase(), n4)
              switch (e4) {
                case "N":
                case "NN":
                case "NNN":
                  if (o2 === t3)
                    return l2[i2];
                  break;
                case "NNNN":
                  if (r2 === t3)
                    return l2[i2];
                  break;
                case "NNNNN":
                  if (s2 === t3)
                    return l2[i2];
              }
            else if ([r2, o2, s2].indexOf(t3) >= 0)
              return l2[i2];
        }
        function Aa(t3, e4) {
          var n4 = t3.since <= t3.until ? 1 : -1;
          return e4 === void 0 ? i(t3.since).year() : i(t3.since).year() + (e4 - t3.offset) * n4;
        }
        function Ia() {
          var t3, e4, n4, i2 = this.localeData().eras();
          for (t3 = 0, e4 = i2.length; t3 < e4; ++t3) {
            if (n4 = this.clone().startOf("day").valueOf(), i2[t3].since <= n4 && n4 <= i2[t3].until)
              return i2[t3].name;
            if (i2[t3].until <= n4 && n4 <= i2[t3].since)
              return i2[t3].name;
          }
          return "";
        }
        function Ma() {
          var t3, e4, n4, i2 = this.localeData().eras();
          for (t3 = 0, e4 = i2.length; t3 < e4; ++t3) {
            if (n4 = this.clone().startOf("day").valueOf(), i2[t3].since <= n4 && n4 <= i2[t3].until)
              return i2[t3].narrow;
            if (i2[t3].until <= n4 && n4 <= i2[t3].since)
              return i2[t3].narrow;
          }
          return "";
        }
        function Ra() {
          var t3, e4, n4, i2 = this.localeData().eras();
          for (t3 = 0, e4 = i2.length; t3 < e4; ++t3) {
            if (n4 = this.clone().startOf("day").valueOf(), i2[t3].since <= n4 && n4 <= i2[t3].until)
              return i2[t3].abbr;
            if (i2[t3].until <= n4 && n4 <= i2[t3].since)
              return i2[t3].abbr;
          }
          return "";
        }
        function Pa() {
          var t3, e4, n4, a2, r2 = this.localeData().eras();
          for (t3 = 0, e4 = r2.length; t3 < e4; ++t3)
            if (n4 = r2[t3].since <= r2[t3].until ? 1 : -1, a2 = this.clone().startOf("day").valueOf(), r2[t3].since <= a2 && a2 <= r2[t3].until || r2[t3].until <= a2 && a2 <= r2[t3].since)
              return (this.year() - i(r2[t3].since).year()) * n4 + r2[t3].offset;
          return this.year();
        }
        function Oa(t3) {
          return s(this, "_erasNameRegex") || qa.call(this), t3 ? this._erasNameRegex : this._erasRegex;
        }
        function ja(t3) {
          return s(this, "_erasAbbrRegex") || qa.call(this), t3 ? this._erasAbbrRegex : this._erasRegex;
        }
        function Na(t3) {
          return s(this, "_erasNarrowRegex") || qa.call(this), t3 ? this._erasNarrowRegex : this._erasRegex;
        }
        function La(t3, e4) {
          return e4.erasAbbrRegex(t3);
        }
        function Fa(t3, e4) {
          return e4.erasNameRegex(t3);
        }
        function Ha(t3, e4) {
          return e4.erasNarrowRegex(t3);
        }
        function Ba(t3, e4) {
          return e4._eraYearOrdinalRegex || Et;
        }
        function qa() {
          var t3, e4, n4 = [], i2 = [], a2 = [], r2 = [], o2 = this.eras();
          for (t3 = 0, e4 = o2.length; t3 < e4; ++t3)
            i2.push(Lt(o2[t3].name)), n4.push(Lt(o2[t3].abbr)), a2.push(Lt(o2[t3].narrow)), r2.push(Lt(o2[t3].name)), r2.push(Lt(o2[t3].abbr)), r2.push(Lt(o2[t3].narrow));
          this._erasRegex = new RegExp("^(" + r2.join("|") + ")", "i"), this._erasNameRegex = new RegExp("^(" + i2.join("|") + ")", "i"), this._erasAbbrRegex = new RegExp("^(" + n4.join("|") + ")", "i"), this._erasNarrowRegex = new RegExp("^(" + a2.join("|") + ")", "i");
        }
        function za(t3, e4) {
          B(0, [t3, t3.length], 0, e4);
        }
        function Wa(t3) {
          return Xa.call(this, t3, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
        }
        function $a(t3) {
          return Xa.call(this, t3, this.isoWeek(), this.isoWeekday(), 1, 4);
        }
        function Va() {
          return Se(this.year(), 1, 4);
        }
        function Ya() {
          return Se(this.isoWeekYear(), 1, 4);
        }
        function Ua() {
          var t3 = this.localeData()._week;
          return Se(this.year(), t3.dow, t3.doy);
        }
        function Ga() {
          var t3 = this.localeData()._week;
          return Se(this.weekYear(), t3.dow, t3.doy);
        }
        function Xa(t3, e4, n4, i2, a2) {
          var r2;
          return t3 == null ? we(this, i2, a2).year : (e4 > (r2 = Se(t3, i2, a2)) && (e4 = r2), Za.call(this, t3, e4, n4, i2, a2));
        }
        function Za(t3, e4, n4, i2, a2) {
          var r2 = _e(t3, e4, n4, i2, a2), o2 = ye(r2.year, 0, r2.dayOfYear);
          return this.year(o2.getUTCFullYear()), this.month(o2.getUTCMonth()), this.date(o2.getUTCDate()), this;
        }
        function Ka(t3) {
          return t3 == null ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (t3 - 1) + this.month() % 3);
        }
        B("N", 0, 0, "eraAbbr"), B("NN", 0, 0, "eraAbbr"), B("NNN", 0, 0, "eraAbbr"), B("NNNN", 0, 0, "eraName"), B("NNNNN", 0, 0, "eraNarrow"), B("y", ["y", 1], "yo", "eraYear"), B("y", ["yy", 2], 0, "eraYear"), B("y", ["yyy", 3], 0, "eraYear"), B("y", ["yyyy", 4], 0, "eraYear"), Ot("N", La), Ot("NN", La), Ot("NNN", La), Ot("NNNN", Fa), Ot("NNNNN", Ha), Ht(["N", "NN", "NNN", "NNNN", "NNNNN"], function(t3, e4, n4, i2) {
          var a2 = n4._locale.erasParse(t3, i2, n4._strict);
          a2 ? m(n4).era = a2 : m(n4).invalidEra = t3;
        }), Ot("y", Et), Ot("yy", Et), Ot("yyy", Et), Ot("yyyy", Et), Ot("yo", Ba), Ht(["y", "yy", "yyy", "yyyy"], Wt), Ht(["yo"], function(t3, e4, n4, i2) {
          var a2;
          n4._locale._eraYearOrdinalRegex && (a2 = t3.match(n4._locale._eraYearOrdinalRegex)), n4._locale.eraYearOrdinalParse ? e4[Wt] = n4._locale.eraYearOrdinalParse(t3, a2) : e4[Wt] = parseInt(t3, 10);
        }), B(0, ["gg", 2], 0, function() {
          return this.weekYear() % 100;
        }), B(0, ["GG", 2], 0, function() {
          return this.isoWeekYear() % 100;
        }), za("gggg", "weekYear"), za("ggggg", "weekYear"), za("GGGG", "isoWeekYear"), za("GGGGG", "isoWeekYear"), nt("weekYear", "gg"), nt("isoWeekYear", "GG"), ot("weekYear", 1), ot("isoWeekYear", 1), Ot("G", At), Ot("g", At), Ot("GG", wt, bt), Ot("gg", wt, bt), Ot("GGGG", Dt, xt), Ot("gggg", Dt, xt), Ot("GGGGG", Tt, _t), Ot("ggggg", Tt, _t), Bt(["gggg", "ggggg", "GGGG", "GGGGG"], function(t3, e4, n4, i2) {
          e4[i2.substr(0, 2)] = dt(t3);
        }), Bt(["gg", "GG"], function(t3, e4, n4, a2) {
          e4[a2] = i.parseTwoDigitYear(t3);
        }), B("Q", 0, "Qo", "quarter"), nt("quarter", "Q"), ot("quarter", 7), Ot("Q", vt), Ht("Q", function(t3, e4) {
          e4[$t] = 3 * (dt(t3) - 1);
        }), B("D", ["DD", 2], "Do", "date"), nt("date", "D"), ot("date", 9), Ot("D", wt), Ot("DD", wt, bt), Ot("Do", function(t3, e4) {
          return t3 ? e4._dayOfMonthOrdinalParse || e4._ordinalParse : e4._dayOfMonthOrdinalParseLenient;
        }), Ht(["D", "DD"], Vt), Ht("Do", function(t3, e4) {
          e4[Vt] = dt(t3.match(wt)[0]);
        });
        var Qa = ut("Date", true);
        function Ja(t3) {
          var e4 = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
          return t3 == null ? e4 : this.add(t3 - e4, "d");
        }
        B("DDD", ["DDDD", 3], "DDDo", "dayOfYear"), nt("dayOfYear", "DDD"), ot("dayOfYear", 4), Ot("DDD", kt), Ot("DDDD", yt), Ht(["DDD", "DDDD"], function(t3, e4, n4) {
          n4._dayOfYear = dt(t3);
        }), B("m", ["mm", 2], 0, "minute"), nt("minute", "m"), ot("minute", 14), Ot("m", wt), Ot("mm", wt, bt), Ht(["m", "mm"], Ut);
        var tr = ut("Minutes", false);
        B("s", ["ss", 2], 0, "second"), nt("second", "s"), ot("second", 15), Ot("s", wt), Ot("ss", wt, bt), Ht(["s", "ss"], Gt);
        var er, nr, ir = ut("Seconds", false);
        for (B("S", 0, 0, function() {
          return ~~(this.millisecond() / 100);
        }), B(0, ["SS", 2], 0, function() {
          return ~~(this.millisecond() / 10);
        }), B(0, ["SSS", 3], 0, "millisecond"), B(0, ["SSSS", 4], 0, function() {
          return 10 * this.millisecond();
        }), B(0, ["SSSSS", 5], 0, function() {
          return 100 * this.millisecond();
        }), B(0, ["SSSSSS", 6], 0, function() {
          return 1e3 * this.millisecond();
        }), B(0, ["SSSSSSS", 7], 0, function() {
          return 1e4 * this.millisecond();
        }), B(0, ["SSSSSSSS", 8], 0, function() {
          return 1e5 * this.millisecond();
        }), B(0, ["SSSSSSSSS", 9], 0, function() {
          return 1e6 * this.millisecond();
        }), nt("millisecond", "ms"), ot("millisecond", 16), Ot("S", kt, vt), Ot("SS", kt, bt), Ot("SSS", kt, yt), er = "SSSS"; er.length <= 9; er += "S")
          Ot(er, Et);
        function ar(t3, e4) {
          e4[Xt] = dt(1e3 * ("0." + t3));
        }
        for (er = "S"; er.length <= 9; er += "S")
          Ht(er, ar);
        function rr() {
          return this._isUTC ? "UTC" : "";
        }
        function or() {
          return this._isUTC ? "Coordinated Universal Time" : "";
        }
        nr = ut("Milliseconds", false), B("z", 0, 0, "zoneAbbr"), B("zz", 0, 0, "zoneName");
        var sr = w.prototype;
        function lr(t3) {
          return Gn(1e3 * t3);
        }
        function cr() {
          return Gn.apply(null, arguments).parseZone();
        }
        function dr(t3) {
          return t3;
        }
        sr.add = Pi, sr.calendar = qi, sr.clone = zi, sr.diff = Xi, sr.endOf = ma, sr.format = ta, sr.from = ea, sr.fromNow = na, sr.to = ia, sr.toNow = aa, sr.get = ft, sr.invalidAt = ka, sr.isAfter = Wi, sr.isBefore = $i, sr.isBetween = Vi, sr.isSame = Yi, sr.isSameOrAfter = Ui, sr.isSameOrBefore = Gi, sr.isValid = Sa, sr.lang = oa, sr.locale = ra, sr.localeData = sa, sr.max = Zn, sr.min = Xn, sr.parsingFlags = Ca, sr.set = gt, sr.startOf = ga, sr.subtract = Oi, sr.toArray = xa, sr.toObject = _a, sr.toDate = ya, sr.toISOString = Qi, sr.inspect = Ji, typeof Symbol != "undefined" && Symbol.for != null && (sr[Symbol.for("nodejs.util.inspect.custom")] = function() {
          return "Moment<" + this.format() + ">";
        }), sr.toJSON = wa, sr.toString = Ki, sr.unix = ba, sr.valueOf = va, sr.creationData = Da, sr.eraName = Ia, sr.eraNarrow = Ma, sr.eraAbbr = Ra, sr.eraYear = Pa, sr.year = me, sr.isLeapYear = ve, sr.weekYear = Wa, sr.isoWeekYear = $a, sr.quarter = sr.quarters = Ka, sr.month = de, sr.daysInMonth = ue, sr.week = sr.weeks = Ee, sr.isoWeek = sr.isoWeeks = Ae, sr.weeksInYear = Ua, sr.weeksInWeekYear = Ga, sr.isoWeeksInYear = Va, sr.isoWeeksInISOWeekYear = Ya, sr.date = Qa, sr.day = sr.days = $e, sr.weekday = Ve, sr.isoWeekday = Ye, sr.dayOfYear = Ja, sr.hour = sr.hours = an, sr.minute = sr.minutes = tr, sr.second = sr.seconds = ir, sr.millisecond = sr.milliseconds = nr, sr.utcOffset = fi, sr.utc = mi, sr.local = vi, sr.parseZone = bi, sr.hasAlignedHourOffset = yi, sr.isDST = xi, sr.isLocal = wi, sr.isUtcOffset = Si, sr.isUtc = Ci, sr.isUTC = Ci, sr.zoneAbbr = rr, sr.zoneName = or, sr.dates = k("dates accessor is deprecated. Use date instead.", Qa), sr.months = k("months accessor is deprecated. Use month instead", de), sr.years = k("years accessor is deprecated. Use year instead", me), sr.zone = k("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", gi), sr.isDSTShifted = k("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", _i);
        var ur = R.prototype;
        function hr(t3, e4, n4, i2) {
          var a2 = vn(), r2 = f().set(i2, e4);
          return a2[n4](r2, t3);
        }
        function pr(t3, e4, n4) {
          if (d(t3) && (e4 = t3, t3 = void 0), t3 = t3 || "", e4 != null)
            return hr(t3, e4, n4, "month");
          var i2, a2 = [];
          for (i2 = 0; i2 < 12; i2++)
            a2[i2] = hr(t3, i2, n4, "month");
          return a2;
        }
        function fr(t3, e4, n4, i2) {
          typeof t3 == "boolean" ? (d(e4) && (n4 = e4, e4 = void 0), e4 = e4 || "") : (n4 = e4 = t3, t3 = false, d(e4) && (n4 = e4, e4 = void 0), e4 = e4 || "");
          var a2, r2 = vn(), o2 = t3 ? r2._week.dow : 0, s2 = [];
          if (n4 != null)
            return hr(e4, (n4 + o2) % 7, i2, "day");
          for (a2 = 0; a2 < 7; a2++)
            s2[a2] = hr(e4, (a2 + o2) % 7, i2, "day");
          return s2;
        }
        function gr(t3, e4) {
          return pr(t3, e4, "months");
        }
        function mr(t3, e4) {
          return pr(t3, e4, "monthsShort");
        }
        function vr(t3, e4, n4) {
          return fr(t3, e4, n4, "weekdays");
        }
        function br(t3, e4, n4) {
          return fr(t3, e4, n4, "weekdaysShort");
        }
        function yr(t3, e4, n4) {
          return fr(t3, e4, n4, "weekdaysMin");
        }
        ur.calendar = O, ur.longDateFormat = Y, ur.invalidDate = G, ur.ordinal = K, ur.preparse = dr, ur.postformat = dr, ur.relativeTime = J, ur.pastFuture = tt, ur.set = I, ur.eras = Ta, ur.erasParse = Ea, ur.erasConvertYear = Aa, ur.erasAbbrRegex = ja, ur.erasNameRegex = Oa, ur.erasNarrowRegex = Na, ur.months = re, ur.monthsShort = oe, ur.monthsParse = le, ur.monthsRegex = pe, ur.monthsShortRegex = he, ur.week = Ce, ur.firstDayOfYear = Te, ur.firstDayOfWeek = De, ur.weekdays = He, ur.weekdaysMin = qe, ur.weekdaysShort = Be, ur.weekdaysParse = We, ur.weekdaysRegex = Ue, ur.weekdaysShortRegex = Ge, ur.weekdaysMinRegex = Xe, ur.isPM = en, ur.meridiem = rn, fn("en", { eras: [{ since: "0001-01-01", until: 1 / 0, offset: 1, name: "Anno Domini", narrow: "AD", abbr: "AD" }, { since: "0000-12-31", until: -1 / 0, offset: 1, name: "Before Christ", narrow: "BC", abbr: "BC" }], dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/, ordinal: function(t3) {
          var e4 = t3 % 10;
          return t3 + (dt(t3 % 100 / 10) === 1 ? "th" : e4 === 1 ? "st" : e4 === 2 ? "nd" : e4 === 3 ? "rd" : "th");
        } }), i.lang = k("moment.lang is deprecated. Use moment.locale instead.", fn), i.langData = k("moment.langData is deprecated. Use moment.localeData instead.", vn);
        var xr = Math.abs;
        function _r() {
          var t3 = this._data;
          return this._milliseconds = xr(this._milliseconds), this._days = xr(this._days), this._months = xr(this._months), t3.milliseconds = xr(t3.milliseconds), t3.seconds = xr(t3.seconds), t3.minutes = xr(t3.minutes), t3.hours = xr(t3.hours), t3.months = xr(t3.months), t3.years = xr(t3.years), this;
        }
        function wr(t3, e4, n4, i2) {
          var a2 = Ti(e4, n4);
          return t3._milliseconds += i2 * a2._milliseconds, t3._days += i2 * a2._days, t3._months += i2 * a2._months, t3._bubble();
        }
        function Sr(t3, e4) {
          return wr(this, t3, e4, 1);
        }
        function Cr(t3, e4) {
          return wr(this, t3, e4, -1);
        }
        function kr(t3) {
          return t3 < 0 ? Math.floor(t3) : Math.ceil(t3);
        }
        function Dr() {
          var t3, e4, n4, i2, a2, r2 = this._milliseconds, o2 = this._days, s2 = this._months, l2 = this._data;
          return r2 >= 0 && o2 >= 0 && s2 >= 0 || r2 <= 0 && o2 <= 0 && s2 <= 0 || (r2 += 864e5 * kr(Er(s2) + o2), o2 = 0, s2 = 0), l2.milliseconds = r2 % 1e3, t3 = ct(r2 / 1e3), l2.seconds = t3 % 60, e4 = ct(t3 / 60), l2.minutes = e4 % 60, n4 = ct(e4 / 60), l2.hours = n4 % 24, o2 += ct(n4 / 24), s2 += a2 = ct(Tr(o2)), o2 -= kr(Er(a2)), i2 = ct(s2 / 12), s2 %= 12, l2.days = o2, l2.months = s2, l2.years = i2, this;
        }
        function Tr(t3) {
          return 4800 * t3 / 146097;
        }
        function Er(t3) {
          return 146097 * t3 / 4800;
        }
        function Ar(t3) {
          if (!this.isValid())
            return NaN;
          var e4, n4, i2 = this._milliseconds;
          if ((t3 = it(t3)) === "month" || t3 === "quarter" || t3 === "year")
            switch (e4 = this._days + i2 / 864e5, n4 = this._months + Tr(e4), t3) {
              case "month":
                return n4;
              case "quarter":
                return n4 / 3;
              case "year":
                return n4 / 12;
            }
          else
            switch (e4 = this._days + Math.round(Er(this._months)), t3) {
              case "week":
                return e4 / 7 + i2 / 6048e5;
              case "day":
                return e4 + i2 / 864e5;
              case "hour":
                return 24 * e4 + i2 / 36e5;
              case "minute":
                return 1440 * e4 + i2 / 6e4;
              case "second":
                return 86400 * e4 + i2 / 1e3;
              case "millisecond":
                return Math.floor(864e5 * e4) + i2;
              default:
                throw new Error("Unknown unit " + t3);
            }
        }
        function Ir() {
          return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * dt(this._months / 12) : NaN;
        }
        function Mr(t3) {
          return function() {
            return this.as(t3);
          };
        }
        var Rr = Mr("ms"), Pr = Mr("s"), Or = Mr("m"), jr = Mr("h"), Nr = Mr("d"), Lr = Mr("w"), Fr = Mr("M"), Hr = Mr("Q"), Br = Mr("y");
        function qr() {
          return Ti(this);
        }
        function zr(t3) {
          return t3 = it(t3), this.isValid() ? this[t3 + "s"]() : NaN;
        }
        function Wr(t3) {
          return function() {
            return this.isValid() ? this._data[t3] : NaN;
          };
        }
        var $r = Wr("milliseconds"), Vr = Wr("seconds"), Yr = Wr("minutes"), Ur = Wr("hours"), Gr = Wr("days"), Xr = Wr("months"), Zr = Wr("years");
        function Kr() {
          return ct(this.days() / 7);
        }
        var Qr = Math.round, Jr = { ss: 44, s: 45, m: 45, h: 22, d: 26, w: null, M: 11 };
        function to(t3, e4, n4, i2, a2) {
          return a2.relativeTime(e4 || 1, !!n4, t3, i2);
        }
        function eo(t3, e4, n4, i2) {
          var a2 = Ti(t3).abs(), r2 = Qr(a2.as("s")), o2 = Qr(a2.as("m")), s2 = Qr(a2.as("h")), l2 = Qr(a2.as("d")), c2 = Qr(a2.as("M")), d2 = Qr(a2.as("w")), u2 = Qr(a2.as("y")), h2 = r2 <= n4.ss && ["s", r2] || r2 < n4.s && ["ss", r2] || o2 <= 1 && ["m"] || o2 < n4.m && ["mm", o2] || s2 <= 1 && ["h"] || s2 < n4.h && ["hh", s2] || l2 <= 1 && ["d"] || l2 < n4.d && ["dd", l2];
          return n4.w != null && (h2 = h2 || d2 <= 1 && ["w"] || d2 < n4.w && ["ww", d2]), (h2 = h2 || c2 <= 1 && ["M"] || c2 < n4.M && ["MM", c2] || u2 <= 1 && ["y"] || ["yy", u2])[2] = e4, h2[3] = +t3 > 0, h2[4] = i2, to.apply(null, h2);
        }
        function no(t3) {
          return t3 === void 0 ? Qr : typeof t3 == "function" && (Qr = t3, true);
        }
        function io(t3, e4) {
          return Jr[t3] !== void 0 && (e4 === void 0 ? Jr[t3] : (Jr[t3] = e4, t3 === "s" && (Jr.ss = e4 - 1), true));
        }
        function ao(t3, e4) {
          if (!this.isValid())
            return this.localeData().invalidDate();
          var n4, i2, a2 = false, r2 = Jr;
          return typeof t3 == "object" && (e4 = t3, t3 = false), typeof t3 == "boolean" && (a2 = t3), typeof e4 == "object" && (r2 = Object.assign({}, Jr, e4), e4.s != null && e4.ss == null && (r2.ss = e4.s - 1)), i2 = eo(this, !a2, r2, n4 = this.localeData()), a2 && (i2 = n4.pastFuture(+this, i2)), n4.postformat(i2);
        }
        var ro = Math.abs;
        function oo(t3) {
          return (t3 > 0) - (t3 < 0) || +t3;
        }
        function so() {
          if (!this.isValid())
            return this.localeData().invalidDate();
          var t3, e4, n4, i2, a2, r2, o2, s2, l2 = ro(this._milliseconds) / 1e3, c2 = ro(this._days), d2 = ro(this._months), u2 = this.asSeconds();
          return u2 ? (t3 = ct(l2 / 60), e4 = ct(t3 / 60), l2 %= 60, t3 %= 60, n4 = ct(d2 / 12), d2 %= 12, i2 = l2 ? l2.toFixed(3).replace(/\.?0+$/, "") : "", a2 = u2 < 0 ? "-" : "", r2 = oo(this._months) !== oo(u2) ? "-" : "", o2 = oo(this._days) !== oo(u2) ? "-" : "", s2 = oo(this._milliseconds) !== oo(u2) ? "-" : "", a2 + "P" + (n4 ? r2 + n4 + "Y" : "") + (d2 ? r2 + d2 + "M" : "") + (c2 ? o2 + c2 + "D" : "") + (e4 || t3 || l2 ? "T" : "") + (e4 ? s2 + e4 + "H" : "") + (t3 ? s2 + t3 + "M" : "") + (l2 ? s2 + i2 + "S" : "")) : "P0D";
        }
        var lo = ri.prototype;
        return lo.isValid = ii, lo.abs = _r, lo.add = Sr, lo.subtract = Cr, lo.as = Ar, lo.asMilliseconds = Rr, lo.asSeconds = Pr, lo.asMinutes = Or, lo.asHours = jr, lo.asDays = Nr, lo.asWeeks = Lr, lo.asMonths = Fr, lo.asQuarters = Hr, lo.asYears = Br, lo.valueOf = Ir, lo._bubble = Dr, lo.clone = qr, lo.get = zr, lo.milliseconds = $r, lo.seconds = Vr, lo.minutes = Yr, lo.hours = Ur, lo.days = Gr, lo.weeks = Kr, lo.months = Xr, lo.years = Zr, lo.humanize = ao, lo.toISOString = so, lo.toString = so, lo.toJSON = so, lo.locale = ra, lo.localeData = sa, lo.toIsoString = k("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", so), lo.lang = oa, B("X", 0, 0, "unix"), B("x", 0, 0, "valueOf"), Ot("x", At), Ot("X", Rt), Ht("X", function(t3, e4, n4) {
          n4._d = new Date(1e3 * parseFloat(t3));
        }), Ht("x", function(t3, e4, n4) {
          n4._d = new Date(dt(t3));
        }), i.version = "2.29.1", a(Gn), i.fn = sr, i.min = Qn, i.max = Jn, i.now = ti, i.utc = f, i.unix = lr, i.months = gr, i.isDate = u, i.locale = fn, i.invalid = b, i.duration = Ti, i.isMoment = S, i.weekdays = vr, i.parseZone = cr, i.localeData = vn, i.isDuration = oi, i.monthsShort = mr, i.weekdaysMin = yr, i.defineLocale = gn, i.updateLocale = mn, i.locales = bn, i.weekdaysShort = br, i.normalizeUnits = it, i.relativeTimeRounding = no, i.relativeTimeThreshold = io, i.calendarFormat = Bi, i.prototype = sr, i.HTML5_FMT = { DATETIME_LOCAL: "YYYY-MM-DDTHH:mm", DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss", DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS", DATE: "YYYY-MM-DD", TIME: "HH:mm", TIME_SECONDS: "HH:mm:ss", TIME_MS: "HH:mm:ss.SSS", WEEK: "GGGG-[W]WW", MONTH: "YYYY-MM" }, i;
      }();
    }, 6748: function(t2) {
      t2.exports = `/*! DataTables Bootstrap 5 integration
 * 2020 SpryMedia Ltd - datatables.net/license
 */

/**
 * DataTables integration for Bootstrap 4. This requires Bootstrap 5 and
 * DataTables 1.10 or newer.
 *
 * This file sets the defaults and adds options to DataTables to style its
 * controls using Bootstrap. See http://datatables.net/manual/styling/bootstrap
 * for further information.
 */
(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				// Require DataTables, which attaches to jQuery, including
				// jQuery if needed and have a $ property so we can access the
				// jQuery object that is used
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/* Set the defaults for DataTables initialisation */
$.extend( true, DataTable.defaults, {
	dom:
		"<'row'<'col-sm-12 col-md-6'l><'col-sm-12 col-md-6'f>>" +
		"<'row'<'col-sm-12'tr>>" +
		"<'row'<'col-sm-12 col-md-5'i><'col-sm-12 col-md-7'p>>",
	renderer: 'bootstrap'
} );


/* Default class modification */
$.extend( DataTable.ext.classes, {
	sWrapper:      "dataTables_wrapper dt-bootstrap5",
	sFilterInput:  "form-control form-control-sm",
	sLengthSelect: "form-select form-select-sm",
	sProcessing:   "dataTables_processing card",
	sPageButton:   "paginate_button page-item"
} );


/* Bootstrap paging button renderer */
DataTable.ext.renderer.pageButton.bootstrap = function ( settings, host, idx, buttons, page, pages ) {
	var api     = new DataTable.Api( settings );
	var classes = settings.oClasses;
	var lang    = settings.oLanguage.oPaginate;
	var aria = settings.oLanguage.oAria.paginate || {};
	var btnDisplay, btnClass, counter=0;

	var attach = function( container, buttons ) {
		var i, ien, node, button;
		var clickHandler = function ( e ) {
			e.preventDefault();
			if ( !$(e.currentTarget).hasClass('disabled') && api.page() != e.data.action ) {
				api.page( e.data.action ).draw( 'page' );
			}
		};

		for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
			button = buttons[i];

			if ( Array.isArray( button ) ) {
				attach( container, button );
			}
			else {
				btnDisplay = '';
				btnClass = '';

				switch ( button ) {
					case 'ellipsis':
						btnDisplay = '&#x2026;';
						btnClass = 'disabled';
						break;

					case 'first':
						btnDisplay = lang.sFirst;
						btnClass = button + (page > 0 ?
							'' : ' disabled');
						break;

					case 'previous':
						btnDisplay = lang.sPrevious;
						btnClass = button + (page > 0 ?
							'' : ' disabled');
						break;

					case 'next':
						btnDisplay = lang.sNext;
						btnClass = button + (page < pages-1 ?
							'' : ' disabled');
						break;

					case 'last':
						btnDisplay = lang.sLast;
						btnClass = button + (page < pages-1 ?
							'' : ' disabled');
						break;

					default:
						btnDisplay = button + 1;
						btnClass = page === button ?
							'active' : '';
						break;
				}

				if ( btnDisplay ) {
					node = $('<li>', {
							'class': classes.sPageButton+' '+btnClass,
							'id': idx === 0 && typeof button === 'string' ?
								settings.sTableId +'_'+ button :
								null
						} )
						.append( $('<a>', {
								'href': '#',
								'aria-controls': settings.sTableId,
								'aria-label': aria[ button ],
								'data-dt-idx': counter,
								'tabindex': settings.iTabIndex,
								'class': 'page-link'
							} )
							.html( btnDisplay )
						)
						.appendTo( container );

					settings.oApi._fnBindAction(
						node, {action: button}, clickHandler
					);

					counter++;
				}
			}
		}
	};

	// IE9 throws an 'unknown error' if document.activeElement is used
	// inside an iframe or frame. 
	var activeEl;

	try {
		// Because this approach is destroying and recreating the paging
		// elements, focus is lost on the select button which is bad for
		// accessibility. So we want to restore focus once the draw has
		// completed
		activeEl = $(host).find(document.activeElement).data('dt-idx');
	}
	catch (e) {}

	attach(
		$(host).empty().html('<ul class="pagination"/>').children('ul'),
		buttons
	);

	if ( activeEl !== undefined ) {
		$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');
	}
};


return DataTable;
}));
`;
    }, 8792: function(t2) {
      t2.exports = `/*! Bootstrap integration for DataTables' Buttons
 * \xA92016 SpryMedia Ltd - datatables.net/license
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net-bs5', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net-bs5')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;

$.extend( true, DataTable.Buttons.defaults, {
	dom: {
		container: {
			className: 'dt-buttons btn-group flex-wrap'
		},
		button: {
			className: 'btn btn-secondary'
		},
		collection: {
			tag: 'div',
			className: 'dropdown-menu',
			button: {
				tag: 'a',
				className: 'dt-button dropdown-item',
				active: 'active',
				disabled: 'disabled'
			}
		}
	},
	buttonCreated: function ( config, button ) {
		return config.buttons ?
			$('<div class="btn-group"/>').append(button) :
			button;
	}
} );

DataTable.ext.buttons.collection.className += ' dropdown-toggle';
DataTable.ext.buttons.collection.rightAlignClassName = 'dropdown-menu-right';

return DataTable.Buttons;
}));
`;
    }, 2899: function(t2) {
      t2.exports = `/*!
 * HTML5 export buttons for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 *
 * FileSaver.js (1.3.3) - MIT license
 * Copyright \xA9 2016 Eli Grey - http://eligrey.com
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $, jszip, pdfmake) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document, jszip, pdfmake );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, jszip, pdfmake, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;

// Allow the constructor to pass in JSZip and PDFMake from external requires.
// Otherwise, use globally defined variables, if they are available.
function _jsZip () {
	return jszip || window.JSZip;
}
function _pdfMake () {
	return pdfmake || window.pdfMake;
}

DataTable.Buttons.pdfMake = function (_) {
	if ( ! _ ) {
		return _pdfMake();
	}
	pdfmake = _;
}

DataTable.Buttons.jszip = function (_) {
	if ( ! _ ) {
		return _jsZip();
	}
	jszip = _;
}


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * FileSaver.js dependency
 */

/*jslint bitwise: true, indent: 4, laxbreak: true, laxcomma: true, smarttabs: true, plusplus: true */

var _saveAs = (function(view) {
	"use strict";
	// IE <10 is explicitly unsupported
	if (typeof view === "undefined" || typeof navigator !== "undefined" && /MSIE [1-9]\\./.test(navigator.userAgent)) {
		return;
	}
	var
		  doc = view.document
		  // only get URL when necessary in case Blob.js hasn't overridden it yet
		, get_URL = function() {
			return view.URL || view.webkitURL || view;
		}
		, save_link = doc.createElementNS("http://www.w3.org/1999/xhtml", "a")
		, can_use_save_link = "download" in save_link
		, click = function(node) {
			var event = new MouseEvent("click");
			node.dispatchEvent(event);
		}
		, is_safari = /constructor/i.test(view.HTMLElement) || view.safari
		, is_chrome_ios =/CriOS\\/[\\d]+/.test(navigator.userAgent)
		, throw_outside = function(ex) {
			(view.setImmediate || view.setTimeout)(function() {
				throw ex;
			}, 0);
		}
		, force_saveable_type = "application/octet-stream"
		// the Blob API is fundamentally broken as there is no "downloadfinished" event to subscribe to
		, arbitrary_revoke_timeout = 1000 * 40 // in ms
		, revoke = function(file) {
			var revoker = function() {
				if (typeof file === "string") { // file is an object URL
					get_URL().revokeObjectURL(file);
				} else { // file is a File
					file.remove();
				}
			};
			setTimeout(revoker, arbitrary_revoke_timeout);
		}
		, dispatch = function(filesaver, event_types, event) {
			event_types = [].concat(event_types);
			var i = event_types.length;
			while (i--) {
				var listener = filesaver["on" + event_types[i]];
				if (typeof listener === "function") {
					try {
						listener.call(filesaver, event || filesaver);
					} catch (ex) {
						throw_outside(ex);
					}
				}
			}
		}
		, auto_bom = function(blob) {
			// prepend BOM for UTF-8 XML and text/* types (including HTML)
			// note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF
			if (/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {
				return new Blob([String.fromCharCode(0xFEFF), blob], {type: blob.type});
			}
			return blob;
		}
		, FileSaver = function(blob, name, no_auto_bom) {
			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			// First try a.download, then web filesystem, then object URLs
			var
				  filesaver = this
				, type = blob.type
				, force = type === force_saveable_type
				, object_url
				, dispatch_all = function() {
					dispatch(filesaver, "writestart progress write writeend".split(" "));
				}
				// on any filesys errors revert to saving with object URLs
				, fs_error = function() {
					if ((is_chrome_ios || (force && is_safari)) && view.FileReader) {
						// Safari doesn't allow downloading of blob urls
						var reader = new FileReader();
						reader.onloadend = function() {
							var url = is_chrome_ios ? reader.result : reader.result.replace(/^data:[^;]*;/, 'data:attachment/file;');
							var popup = view.open(url, '_blank');
							if(!popup) view.location.href = url;
							url=undefined; // release reference before dispatching
							filesaver.readyState = filesaver.DONE;
							dispatch_all();
						};
						reader.readAsDataURL(blob);
						filesaver.readyState = filesaver.INIT;
						return;
					}
					// don't create more object URLs than needed
					if (!object_url) {
						object_url = get_URL().createObjectURL(blob);
					}
					if (force) {
						view.location.href = object_url;
					} else {
						var opened = view.open(object_url, "_blank");
						if (!opened) {
							// Apple does not allow window.open, see https://developer.apple.com/library/safari/documentation/Tools/Conceptual/SafariExtensionGuide/WorkingwithWindowsandTabs/WorkingwithWindowsandTabs.html
							view.location.href = object_url;
						}
					}
					filesaver.readyState = filesaver.DONE;
					dispatch_all();
					revoke(object_url);
				}
			;
			filesaver.readyState = filesaver.INIT;

			if (can_use_save_link) {
				object_url = get_URL().createObjectURL(blob);
				setTimeout(function() {
					save_link.href = object_url;
					save_link.download = name;
					click(save_link);
					dispatch_all();
					revoke(object_url);
					filesaver.readyState = filesaver.DONE;
				});
				return;
			}

			fs_error();
		}
		, FS_proto = FileSaver.prototype
		, saveAs = function(blob, name, no_auto_bom) {
			return new FileSaver(blob, name || blob.name || "download", no_auto_bom);
		}
	;
	// IE 10+ (native saveAs)
	if (typeof navigator !== "undefined" && navigator.msSaveOrOpenBlob) {
		return function(blob, name, no_auto_bom) {
			name = name || blob.name || "download";

			if (!no_auto_bom) {
				blob = auto_bom(blob);
			}
			return navigator.msSaveOrOpenBlob(blob, name);
		};
	}

	FS_proto.abort = function(){};
	FS_proto.readyState = FS_proto.INIT = 0;
	FS_proto.WRITING = 1;
	FS_proto.DONE = 2;

	FS_proto.error =
	FS_proto.onwritestart =
	FS_proto.onprogress =
	FS_proto.onwrite =
	FS_proto.onabort =
	FS_proto.onerror =
	FS_proto.onwriteend =
		null;

	return saveAs;
}(
	   typeof self !== "undefined" && self
	|| typeof window !== "undefined" && window
	|| this.content
));


// Expose file saver on the DataTables API. Can't attach to \`DataTables.Buttons\`
// since this file can be loaded before Button's core!
DataTable.fileSave = _saveAs;


/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Local (private) functions
 */

/**
 * Get the sheet name for Excel exports.
 *
 * @param {object}	config Button configuration
 */
var _sheetname = function ( config )
{
	var sheetName = 'Sheet1';

	if ( config.sheetName ) {
		sheetName = config.sheetName.replace(/[\\[\\]\\*\\/\\\\\\?\\:]/g, '');
	}

	return sheetName;
};

/**
 * Get the newline character(s)
 *
 * @param {object}	config Button configuration
 * @return {string}				Newline character
 */
var _newLine = function ( config )
{
	return config.newline ?
		config.newline :
		navigator.userAgent.match(/Windows/) ?
			'\\r\\n' :
			'\\n';
};

/**
 * Combine the data from the \`buttons.exportData\` method into a string that
 * will be used in the export file.
 *
 * @param	{DataTable.Api} dt		 DataTables API instance
 * @param	{object}				config Button configuration
 * @return {object}							 The data to export
 */
var _exportData = function ( dt, config )
{
	var newLine = _newLine( config );
	var data = dt.buttons.exportData( config.exportOptions );
	var boundary = config.fieldBoundary;
	var separator = config.fieldSeparator;
	var reBoundary = new RegExp( boundary, 'g' );
	var escapeChar = config.escapeChar !== undefined ?
		config.escapeChar :
		'\\\\';
	var join = function ( a ) {
		var s = '';

		// If there is a field boundary, then we might need to escape it in
		// the source data
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( i > 0 ) {
				s += separator;
			}

			s += boundary ?
				boundary + ('' + a[i]).replace( reBoundary, escapeChar+boundary ) + boundary :
				a[i];
		}

		return s;
	};

	var header = config.header ? join( data.header )+newLine : '';
	var footer = config.footer && data.footer ? newLine+join( data.footer ) : '';
	var body = [];

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		body.push( join( data.body[i] ) );
	}

	return {
		str: header + body.join( newLine ) + footer,
		rows: body.length
	};
};

/**
 * Older versions of Safari (prior to tech preview 18) don't support the
 * download option required.
 *
 * @return {Boolean} \`true\` if old Safari
 */
var _isDuffSafari = function ()
{
	var safari = navigator.userAgent.indexOf('Safari') !== -1 &&
		navigator.userAgent.indexOf('Chrome') === -1 &&
		navigator.userAgent.indexOf('Opera') === -1;

	if ( ! safari ) {
		return false;
	}

	var version = navigator.userAgent.match( /AppleWebKit\\/(\\d+\\.\\d+)/ );
	if ( version && version.length > 1 && version[1]*1 < 603.1 ) {
		return true;
	}

	return false;
};

/**
 * Convert from numeric position to letter for column names in Excel
 * @param  {int} n Column number
 * @return {string} Column letter(s) name
 */
function createCellPos( n ){
	var ordA = 'A'.charCodeAt(0);
	var ordZ = 'Z'.charCodeAt(0);
	var len = ordZ - ordA + 1;
	var s = "";

	while( n >= 0 ) {
		s = String.fromCharCode(n % len + ordA) + s;
		n = Math.floor(n / len) - 1;
	}

	return s;
}

try {
	var _serialiser = new XMLSerializer();
	var _ieExcel;
}
catch (t) {}

/**
 * Recursively add XML files from an object's structure to a ZIP file. This
 * allows the XSLX file to be easily defined with an object's structure matching
 * the files structure.
 *
 * @param {JSZip} zip ZIP package
 * @param {object} obj Object to add (recursive)
 */
function _addToZip( zip, obj ) {
	if ( _ieExcel === undefined ) {
		// Detect if we are dealing with IE's _awful_ serialiser by seeing if it
		// drop attributes
		_ieExcel = _serialiser
			.serializeToString(
				( new window.DOMParser() ).parseFromString( excelStrings['xl/worksheets/sheet1.xml'], 'text/xml' )
			)
			.indexOf( 'xmlns:r' ) === -1;
	}

	$.each( obj, function ( name, val ) {
		if ( $.isPlainObject( val ) ) {
			var newDir = zip.folder( name );
			_addToZip( newDir, val );
		}
		else {
			if ( _ieExcel ) {
				// IE's XML serialiser will drop some name space attributes from
				// from the root node, so we need to save them. Do this by
				// replacing the namespace nodes with a regular attribute that
				// we convert back when serialised. Edge does not have this
				// issue
				var worksheet = val.childNodes[0];
				var i, ien;
				var attrs = [];

				for ( i=worksheet.attributes.length-1 ; i>=0 ; i-- ) {
					var attrName = worksheet.attributes[i].nodeName;
					var attrValue = worksheet.attributes[i].nodeValue;

					if ( attrName.indexOf( ':' ) !== -1 ) {
						attrs.push( { name: attrName, value: attrValue } );

						worksheet.removeAttribute( attrName );
					}
				}

				for ( i=0, ien=attrs.length ; i<ien ; i++ ) {
					var attr = val.createAttribute( attrs[i].name.replace( ':', '_dt_b_namespace_token_' ) );
					attr.value = attrs[i].value;
					worksheet.setAttributeNode( attr );
				}
			}

			var str = _serialiser.serializeToString(val);

			// Fix IE's XML
			if ( _ieExcel ) {
				// IE doesn't include the XML declaration
				if ( str.indexOf( '<?xml' ) === -1 ) {
					str = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+str;
				}

				// Return namespace attributes to being as such
				str = str.replace( /_dt_b_namespace_token_/g, ':' );

				// Remove testing name space that IE puts into the space preserve attr
				str = str.replace( /xmlns:NS[\\d]+="" NS[\\d]+:/g, '' );
			}

			// Safari, IE and Edge will put empty name space attributes onto
			// various elements making them useless. This strips them out
			str = str.replace( /<([^<>]*?) xmlns=""([^<>]*?)>/g, '<$1 $2>' );

			zip.file( name, str );
		}
	} );
}

/**
 * Create an XML node and add any children, attributes, etc without needing to
 * be verbose in the DOM.
 *
 * @param  {object} doc      XML document
 * @param  {string} nodeName Node name
 * @param  {object} opts     Options - can be \`attr\` (attributes), \`children\`
 *   (child nodes) and \`text\` (text content)
 * @return {node}            Created node
 */
function _createNode( doc, nodeName, opts ) {
	var tempNode = doc.createElement( nodeName );

	if ( opts ) {
		if ( opts.attr ) {
			$(tempNode).attr( opts.attr );
		}

		if ( opts.children ) {
			$.each( opts.children, function ( key, value ) {
				tempNode.appendChild( value );
			} );
		}

		if ( opts.text !== null && opts.text !== undefined ) {
			tempNode.appendChild( doc.createTextNode( opts.text ) );
		}
	}

	return tempNode;
}

/**
 * Get the width for an Excel column based on the contents of that column
 * @param  {object} data Data for export
 * @param  {int}    col  Column index
 * @return {int}         Column width
 */
function _excelColWidth( data, col ) {
	var max = data.header[col].length;
	var len, lineSplit, str;

	if ( data.footer && data.footer[col].length > max ) {
		max = data.footer[col].length;
	}

	for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
		var point = data.body[i][col];
		str = point !== null && point !== undefined ?
			point.toString() :
			'';

		// If there is a newline character, workout the width of the column
		// based on the longest line in the string
		if ( str.indexOf('\\n') !== -1 ) {
			lineSplit = str.split('\\n');
			lineSplit.sort( function (a, b) {
				return b.length - a.length;
			} );

			len = lineSplit[0].length;
		}
		else {
			len = str.length;
		}

		if ( len > max ) {
			max = len;
		}

		// Max width rather than having potentially massive column widths
		if ( max > 40 ) {
			return 54; // 40 * 1.35
		}
	}

	max *= 1.35;

	// And a min width
	return max > 6 ? max : 6;
}

// Excel - Pre-defined strings to build a basic XLSX file
var excelStrings = {
	"_rels/.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/>'+
		'</Relationships>',

	"xl/_rels/workbook.xml.rels":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships">'+
			'<Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/>'+
			'<Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/>'+
		'</Relationships>',

	"[Content_Types].xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types">'+
			'<Default Extension="xml" ContentType="application/xml" />'+
			'<Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" />'+
			'<Default Extension="jpeg" ContentType="image/jpeg" />'+
			'<Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" />'+
			'<Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" />'+
			'<Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" />'+
		'</Types>',

	"xl/workbook.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships">'+
			'<fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/>'+
			'<workbookPr showInkAnnotation="0" autoCompressPictures="0"/>'+
			'<bookViews>'+
				'<workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/>'+
			'</bookViews>'+
			'<sheets>'+
				'<sheet name="Sheet1" sheetId="1" r:id="rId1"/>'+
			'</sheets>'+
			'<definedNames/>'+
		'</workbook>',

	"xl/worksheets/sheet1.xml":
		'<?xml version="1.0" encoding="UTF-8" standalone="yes"?>'+
		'<worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<sheetData/>'+
			'<mergeCells count="0"/>'+
		'</worksheet>',

	"xl/styles.xml":
		'<?xml version="1.0" encoding="UTF-8"?>'+
		'<styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac">'+
			'<numFmts count="6">'+
				'<numFmt numFmtId="164" formatCode="#,##0.00_-\\ [$$-45C]"/>'+
				'<numFmt numFmtId="165" formatCode="&quot;\xA3&quot;#,##0.00"/>'+
				'<numFmt numFmtId="166" formatCode="[$\u20AC-2]\\ #,##0.00"/>'+
				'<numFmt numFmtId="167" formatCode="0.0%"/>'+
				'<numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/>'+
				'<numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/>'+
			'</numFmts>'+
			'<fonts count="5" x14ac:knownFonts="1">'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<color rgb="FFFFFFFF" />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<b />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<i />'+
				'</font>'+
				'<font>'+
					'<sz val="11" />'+
					'<name val="Calibri" />'+
					'<u />'+
				'</font>'+
			'</fonts>'+
			'<fills count="6">'+
				'<fill>'+
					'<patternFill patternType="none" />'+
				'</fill>'+
				'<fill>'+ // Excel appears to use this as a dotted background regardless of values but
					'<patternFill patternType="none" />'+ // to be valid to the schema, use a patternFill
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD9D9D9" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="FFD99795" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6efce" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
				'<fill>'+
					'<patternFill patternType="solid">'+
						'<fgColor rgb="ffc6cfef" />'+
						'<bgColor indexed="64" />'+
					'</patternFill>'+
				'</fill>'+
			'</fills>'+
			'<borders count="2">'+
				'<border>'+
					'<left />'+
					'<right />'+
					'<top />'+
					'<bottom />'+
					'<diagonal />'+
				'</border>'+
				'<border diagonalUp="false" diagonalDown="false">'+
					'<left style="thin">'+
						'<color auto="1" />'+
					'</left>'+
					'<right style="thin">'+
						'<color auto="1" />'+
					'</right>'+
					'<top style="thin">'+
						'<color auto="1" />'+
					'</top>'+
					'<bottom style="thin">'+
						'<color auto="1" />'+
					'</bottom>'+
					'<diagonal />'+
				'</border>'+
			'</borders>'+
			'<cellStyleXfs count="1">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" />'+
			'</cellStyleXfs>'+
			'<cellXfs count="68">'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="left"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="center"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="right"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment horizontal="fill"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment textRotation="90"/>'+
				'</xf>'+
				'<xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1">'+
					'<alignment wrapText="1"/>'+
				'</xf>'+
				'<xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
				'<xf numFmtId="14" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/>'+
			'</cellXfs>'+
			'<cellStyles count="1">'+
				'<cellStyle name="Normal" xfId="0" builtinId="0" />'+
			'</cellStyles>'+
			'<dxfs count="0" />'+
			'<tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" />'+
		'</styleSheet>'
};
// Note we could use 3 \`for\` loops for the styles, but when gzipped there is
// virtually no difference in size, since the above can be easily compressed

// Pattern matching for special number formats. Perhaps this should be exposed
// via an API in future?
// Ref: section 3.8.30 - built in formatters in open spreadsheet
//   https://www.ecma-international.org/news/TC45_current_work/Office%20Open%20XML%20Part%204%20-%20Markup%20Language%20Reference.pdf
var _excelSpecials = [
	{ match: /^\\-?\\d+\\.\\d%$/,               style: 60, fmt: function (d) { return d/100; } }, // Precent with d.p.
	{ match: /^\\-?\\d+\\.?\\d*%$/,             style: 56, fmt: function (d) { return d/100; } }, // Percent
	{ match: /^\\-?\\$[\\d,]+.?\\d*$/,          style: 57 }, // Dollars
	{ match: /^\\-?\xA3[\\d,]+.?\\d*$/,           style: 58 }, // Pounds
	{ match: /^\\-?\u20AC[\\d,]+.?\\d*$/,           style: 59 }, // Euros
	{ match: /^\\-?\\d+$/,                    style: 65 }, // Numbers without thousand separators
	{ match: /^\\-?\\d+\\.\\d{2}$/,             style: 66 }, // Numbers 2 d.p. without thousands separators
	{ match: /^\\([\\d,]+\\)$/,                style: 61, fmt: function (d) { return -1 * d.replace(/[\\(\\)]/g, ''); } },  // Negative numbers indicated by brackets
	{ match: /^\\([\\d,]+\\.\\d{2}\\)$/,         style: 62, fmt: function (d) { return -1 * d.replace(/[\\(\\)]/g, ''); } },  // Negative numbers indicated by brackets - 2d.p.
	{ match: /^\\-?[\\d,]+$/,                 style: 63 }, // Numbers with thousand separators
	{ match: /^\\-?[\\d,]+\\.\\d{2}$/,          style: 64 },
	{ match: /^[\\d]{4}\\-[\\d]{2}\\-[\\d]{2}$/, style: 67, fmt: function (d) {return Math.round(25569 + (Date.parse(d) / (86400 * 1000)));}} //Date yyyy-mm-dd
];



/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * Buttons
 */

//
// Copy to clipboard
//
DataTable.ext.buttons.copyHtml5 = {
	className: 'buttons-copy buttons-html5',

	text: function ( dt ) {
		return dt.i18n( 'buttons.copy', 'Copy' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		var that = this;
		var exportData = _exportData( dt, config );
		var info = dt.buttons.exportInfo( config );
		var newline = _newLine(config);
		var output = exportData.str;
		var hiddenDiv = $('<div/>')
			.css( {
				height: 1,
				width: 1,
				overflow: 'hidden',
				position: 'fixed',
				top: 0,
				left: 0
			} );

		if ( info.title ) {
			output = info.title + newline + newline + output;
		}

		if ( info.messageTop ) {
			output = info.messageTop + newline + newline + output;
		}

		if ( info.messageBottom ) {
			output = output + newline + newline + info.messageBottom;
		}

		if ( config.customize ) {
			output = config.customize( output, config, dt );
		}

		var textarea = $('<textarea readonly/>')
			.val( output )
			.appendTo( hiddenDiv );

		// For browsers that support the copy execCommand, try to use it
		if ( document.queryCommandSupported('copy') ) {
			hiddenDiv.appendTo( dt.table().container() );
			textarea[0].focus();
			textarea[0].select();

			try {
				var successful = document.execCommand( 'copy' );
				hiddenDiv.remove();

				if (successful) {
					dt.buttons.info(
						dt.i18n( 'buttons.copyTitle', 'Copy to clipboard' ),
						dt.i18n( 'buttons.copySuccess', {
							1: 'Copied one row to clipboard',
							_: 'Copied %d rows to clipboard'
						}, exportData.rows ),
						2000
					);

					this.processing( false );
					return;
				}
			}
			catch (t) {}
		}

		// Otherwise we show the text box and instruct the user to use it
		var message = $('<span>'+dt.i18n( 'buttons.copyKeys',
				'Press <i>ctrl</i> or <i>\\u2318</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>'+
				'To cancel, click this message or press escape.' )+'</span>'
			)
			.append( hiddenDiv );

		dt.buttons.info( dt.i18n( 'buttons.copyTitle', 'Copy to clipboard' ), message, 0 );

		// Select the text so when the user activates their system clipboard
		// it will copy that text
		textarea[0].focus();
		textarea[0].select();

		// Event to hide the message when the user is done
		var container = $(message).closest('.dt-button-info');
		var close = function () {
			container.off( 'click.buttons-copy' );
			$(document).off( '.buttons-copy' );
			dt.buttons.info( false );
		};

		container.on( 'click.buttons-copy', close );
		$(document)
			.on( 'keydown.buttons-copy', function (e) {
				if ( e.keyCode === 27 ) { // esc
					close();
					that.processing( false );
				}
			} )
			.on( 'copy.buttons-copy cut.buttons-copy', function () {
				close();
				that.processing( false );
			} );
	},

	exportOptions: {},

	fieldSeparator: '\\t',

	fieldBoundary: '',

	header: true,

	footer: false,

	title: '*',

	messageTop: '*',

	messageBottom: '*'
};

//
// CSV export
//
DataTable.ext.buttons.csvHtml5 = {
	bom: false,

	className: 'buttons-csv buttons-html5',

	available: function () {
		return window.FileReader !== undefined && window.Blob;
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.csv', 'CSV' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		// Set the text
		var output = _exportData( dt, config ).str;
		var info = dt.buttons.exportInfo(config);
		var charset = config.charset;

		if ( config.customize ) {
			output = config.customize( output, config, dt );
		}

		if ( charset !== false ) {
			if ( ! charset ) {
				charset = document.characterSet || document.charset;
			}

			if ( charset ) {
				charset = ';charset='+charset;
			}
		}
		else {
			charset = '';
		}

		if ( config.bom ) {
			output = String.fromCharCode(0xFEFF) + output;
		}

		_saveAs(
			new Blob( [output], {type: 'text/csv'+charset} ),
			info.filename,
			true
		);

		this.processing( false );
	},

	filename: '*',

	extension: '.csv',

	exportOptions: {},

	fieldSeparator: ',',

	fieldBoundary: '"',

	escapeChar: '"',

	charset: null,

	header: true,

	footer: false
};

//
// Excel (xlsx) export
//
DataTable.ext.buttons.excelHtml5 = {
	className: 'buttons-excel buttons-html5',

	available: function () {
		return window.FileReader !== undefined && _jsZip() !== undefined && ! _isDuffSafari() && _serialiser;
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.excel', 'Excel' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		var that = this;
		var rowPos = 0;
		var dataStartRow, dataEndRow;
		var getXml = function ( type ) {
			var str = excelStrings[ type ];

			//str = str.replace( /xmlns:/g, 'xmlns_' ).replace( /mc:/g, 'mc_' );

			return $.parseXML( str );
		};
		var rels = getXml('xl/worksheets/sheet1.xml');
		var relsGet = rels.getElementsByTagName( "sheetData" )[0];

		var xlsx = {
			_rels: {
				".rels": getXml('_rels/.rels')
			},
			xl: {
				_rels: {
					"workbook.xml.rels": getXml('xl/_rels/workbook.xml.rels')
				},
				"workbook.xml": getXml('xl/workbook.xml'),
				"styles.xml": getXml('xl/styles.xml'),
				"worksheets": {
					"sheet1.xml": rels
				}

			},
			"[Content_Types].xml": getXml('[Content_Types].xml')
		};

		var data = dt.buttons.exportData( config.exportOptions );
		var currentRow, rowNode;
		var addRow = function ( row ) {
			currentRow = rowPos+1;
			rowNode = _createNode( rels, "row", { attr: {r:currentRow} } );

			for ( var i=0, ien=row.length ; i<ien ; i++ ) {
				// Concat both the Cell Columns as a letter and the Row of the cell.
				var cellId = createCellPos(i) + '' + currentRow;
				var cell = null;

				// For null, undefined of blank cell, continue so it doesn't create the _createNode
				if ( row[i] === null || row[i] === undefined || row[i] === '' ) {
					if ( config.createEmptyCells === true ) {
						row[i] = '';
					}
					else {
						continue;
					}
				}

				var originalContent = row[i];
				row[i] = typeof row[i].trim === 'function'
					? row[i].trim()
					: row[i];

				// Special number formatting options
				for ( var j=0, jen=_excelSpecials.length ; j<jen ; j++ ) {
					var special = _excelSpecials[j];

					// TODO Need to provide the ability for the specials to say
					// if they are returning a string, since at the moment it is
					// assumed to be a number
					if ( row[i].match && ! row[i].match(/^0\\d+/) && row[i].match( special.match ) ) {
						var val = row[i].replace(/[^\\d\\.\\-]/g, '');

						if ( special.fmt ) {
							val = special.fmt( val );
						}

						cell = _createNode( rels, 'c', {
							attr: {
								r: cellId,
								s: special.style
							},
							children: [
								_createNode( rels, 'v', { text: val } )
							]
						} );

						break;
					}
				}

				if ( ! cell ) {
					if ( typeof row[i] === 'number' || (
						row[i].match &&
						row[i].match(/^-?\\d+(\\.\\d+)?$/) &&
						! row[i].match(/^0\\d+/) )
					) {
						// Detect numbers - don't match numbers with leading zeros
						// or a negative anywhere but the start
						cell = _createNode( rels, 'c', {
							attr: {
								t: 'n',
								r: cellId
							},
							children: [
								_createNode( rels, 'v', { text: row[i] } )
							]
						} );
					}
					else {
						// String output - replace non standard characters for text output
						var text = ! originalContent.replace ?
							originalContent :
							originalContent.replace(/[\\x00-\\x09\\x0B\\x0C\\x0E-\\x1F\\x7F-\\x9F]/g, '');

						cell = _createNode( rels, 'c', {
							attr: {
								t: 'inlineStr',
								r: cellId
							},
							children:{
								row: _createNode( rels, 'is', {
									children: {
										row: _createNode( rels, 't', {
											text: text,
											attr: {
												'xml:space': 'preserve'
											}
										} )
									}
								} )
							}
						} );
					}
				}

				rowNode.appendChild( cell );
			}

			relsGet.appendChild(rowNode);
			rowPos++;
		};

		if ( config.customizeData ) {
			config.customizeData( data );
		}

		var mergeCells = function ( row, colspan ) {
			var mergeCells = $('mergeCells', rels);

			mergeCells[0].appendChild( _createNode( rels, 'mergeCell', {
				attr: {
					ref: 'A'+row+':'+createCellPos(colspan)+row
				}
			} ) );
			mergeCells.attr( 'count', parseFloat(mergeCells.attr( 'count' ))+1 );
			$('row:eq('+(row-1)+') c', rels).attr( 's', '51' ); // centre
		};

		// Title and top messages
		var exportInfo = dt.buttons.exportInfo( config );
		if ( exportInfo.title ) {
			addRow( [exportInfo.title], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}

		if ( exportInfo.messageTop ) {
			addRow( [exportInfo.messageTop], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}


		// Table itself
		if ( config.header ) {
			addRow( data.header, rowPos );
			$('row:last c', rels).attr( 's', '2' ); // bold
		}
	
		dataStartRow = rowPos;

		for ( var n=0, ie=data.body.length ; n<ie ; n++ ) {
			addRow( data.body[n], rowPos );
		}
	
		dataEndRow = rowPos;

		if ( config.footer && data.footer ) {
			addRow( data.footer, rowPos);
			$('row:last c', rels).attr( 's', '2' ); // bold
		}

		// Below the table
		if ( exportInfo.messageBottom ) {
			addRow( [exportInfo.messageBottom], rowPos );
			mergeCells( rowPos, data.header.length-1 );
		}

		// Set column widths
		var cols = _createNode( rels, 'cols' );
		$('worksheet', rels).prepend( cols );

		for ( var i=0, ien=data.header.length ; i<ien ; i++ ) {
			cols.appendChild( _createNode( rels, 'col', {
				attr: {
					min: i+1,
					max: i+1,
					width: _excelColWidth( data, i ),
					customWidth: 1
				}
			} ) );
		}

		// Workbook modifications
		var workbook = xlsx.xl['workbook.xml'];

		$( 'sheets sheet', workbook ).attr( 'name', _sheetname( config ) );

		// Auto filter for columns
		if ( config.autoFilter ) {
			$('mergeCells', rels).before( _createNode( rels, 'autoFilter', {
				attr: {
					ref: 'A'+dataStartRow+':'+createCellPos(data.header.length-1)+dataEndRow
				}
			} ) );

			$('definedNames', workbook).append( _createNode( workbook, 'definedName', {
				attr: {
					name: '_xlnm._FilterDatabase',
					localSheetId: '0',
					hidden: 1
				},
				text: _sheetname(config)+'!$A$'+dataStartRow+':'+createCellPos(data.header.length-1)+dataEndRow
			} ) );
		}

		// Let the developer customise the document if they want to
		if ( config.customize ) {
			config.customize( xlsx, config, dt );
		}

		// Excel doesn't like an empty mergeCells tag
		if ( $('mergeCells', rels).children().length === 0 ) {
			$('mergeCells', rels).remove();
		}

		var jszip = _jsZip();
		var zip = new jszip();
		var zipConfig = {
			type: 'blob',
			mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
		};

		_addToZip( zip, xlsx );

		if ( zip.generateAsync ) {
			// JSZip 3+
			zip
				.generateAsync( zipConfig )
				.then( function ( blob ) {
					_saveAs( blob, exportInfo.filename );
					that.processing( false );
				} );
		}
		else {
			// JSZip 2.5
			_saveAs(
				zip.generate( zipConfig ),
				exportInfo.filename
			);
			this.processing( false );
		}
	},

	filename: '*',

	extension: '.xlsx',

	exportOptions: {},

	header: true,

	footer: false,

	title: '*',

	messageTop: '*',

	messageBottom: '*',

	createEmptyCells: false,

	autoFilter: false,

	sheetName: ''
};

//
// PDF export - using pdfMake - http://pdfmake.org
//
DataTable.ext.buttons.pdfHtml5 = {
	className: 'buttons-pdf buttons-html5',

	available: function () {
		return window.FileReader !== undefined && _pdfMake();
	},

	text: function ( dt ) {
		return dt.i18n( 'buttons.pdf', 'PDF' );
	},

	action: function ( e, dt, button, config ) {
		this.processing( true );

		var that = this;
		var data = dt.buttons.exportData( config.exportOptions );
		var info = dt.buttons.exportInfo( config );
		var rows = [];

		if ( config.header ) {
			rows.push( $.map( data.header, function ( d ) {
				return {
					text: typeof d === 'string' ? d : d+'',
					style: 'tableHeader'
				};
			} ) );
		}

		for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
			rows.push( $.map( data.body[i], function ( d ) {
				if ( d === null || d === undefined ) {
					d = '';
				}
				return {
					text: typeof d === 'string' ? d : d+'',
					style: i % 2 ? 'tableBodyEven' : 'tableBodyOdd'
				};
			} ) );
		}

		if ( config.footer && data.footer) {
			rows.push( $.map( data.footer, function ( d ) {
				return {
					text: typeof d === 'string' ? d : d+'',
					style: 'tableFooter'
				};
			} ) );
		}

		var doc = {
			pageSize: config.pageSize,
			pageOrientation: config.orientation,
			content: [
				{
					table: {
						headerRows: 1,
						body: rows
					},
					layout: 'noBorders'
				}
			],
			styles: {
				tableHeader: {
					bold: true,
					fontSize: 11,
					color: 'white',
					fillColor: '#2d4154',
					alignment: 'center'
				},
				tableBodyEven: {},
				tableBodyOdd: {
					fillColor: '#f3f3f3'
				},
				tableFooter: {
					bold: true,
					fontSize: 11,
					color: 'white',
					fillColor: '#2d4154'
				},
				title: {
					alignment: 'center',
					fontSize: 15
				},
				message: {}
			},
			defaultStyle: {
				fontSize: 10
			}
		};

		if ( info.messageTop ) {
			doc.content.unshift( {
				text: info.messageTop,
				style: 'message',
				margin: [ 0, 0, 0, 12 ]
			} );
		}

		if ( info.messageBottom ) {
			doc.content.push( {
				text: info.messageBottom,
				style: 'message',
				margin: [ 0, 0, 0, 12 ]
			} );
		}

		if ( info.title ) {
			doc.content.unshift( {
				text: info.title,
				style: 'title',
				margin: [ 0, 0, 0, 12 ]
			} );
		}

		if ( config.customize ) {
			config.customize( doc, config, dt );
		}

		var pdf = _pdfMake().createPdf( doc );

		if ( config.download === 'open' && ! _isDuffSafari() ) {
			pdf.open();
		}
		else {
			pdf.download( info.filename );
		}

		this.processing( false );
	},

	title: '*',

	filename: '*',

	extension: '.pdf',

	exportOptions: {},

	orientation: 'portrait',

	pageSize: 'A4',

	header: true,

	footer: false,

	messageTop: '*',

	messageBottom: '*',

	customize: null,

	download: 'download'
};


return DataTable.Buttons;
}));
`;
    }, 8908: function(t2) {
      t2.exports = `/*!
 * Print button for Buttons and DataTables.
 * 2016 SpryMedia Ltd - datatables.net/license
 */

(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net', 'datatables.net-buttons'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			if ( ! $.fn.dataTable.Buttons ) {
				require('datatables.net-buttons')(root, $);
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


var _link = document.createElement( 'a' );

/**
 * Clone link and style tags, taking into account the need to change the source
 * path.
 *
 * @param  {node}     el Element to convert
 */
var _styleToAbs = function( el ) {
	var url;
	var clone = $(el).clone()[0];
	var linkHost;

	if ( clone.nodeName.toLowerCase() === 'link' ) {
		clone.href = _relToAbs( clone.href );
	}

	return clone.outerHTML;
};

/**
 * Convert a URL from a relative to an absolute address so it will work
 * correctly in the popup window which has no base URL.
 *
 * @param  {string} href URL
 */
var _relToAbs = function( href ) {
	// Assign to a link on the original page so the browser will do all the
	// hard work of figuring out where the file actually is
	_link.href = href;
	var linkHost = _link.host;

	// IE doesn't have a trailing slash on the host
	// Chrome has it on the pathname
	if ( linkHost.indexOf('/') === -1 && _link.pathname.indexOf('/') !== 0) {
		linkHost += '/';
	}

	return _link.protocol+"//"+linkHost+_link.pathname+_link.search;
};


DataTable.ext.buttons.print = {
	className: 'buttons-print',

	text: function ( dt ) {
		return dt.i18n( 'buttons.print', 'Print' );
	},

	action: function ( e, dt, button, config ) {
		var data = dt.buttons.exportData(
			$.extend( {decodeEntities: false}, config.exportOptions ) // XSS protection
		);
		var exportInfo = dt.buttons.exportInfo( config );
		var columnClasses = dt
			.columns( config.exportOptions.columns )
			.flatten()
			.map( function (idx) {
				return dt.settings()[0].aoColumns[dt.column(idx).index()].sClass;
			} )
			.toArray();

		var addRow = function ( d, tag ) {
			var str = '<tr>';

			for ( var i=0, ien=d.length ; i<ien ; i++ ) {
				// null and undefined aren't useful in the print output
				var dataOut = d[i] === null || d[i] === undefined ?
					'' :
					d[i];
				var classAttr = columnClasses[i] ?
					'class="'+columnClasses[i]+'"' :
					'';

				str += '<'+tag+' '+classAttr+'>'+dataOut+'</'+tag+'>';
			}

			return str + '</tr>';
		};

		// Construct a table for printing
		var html = '<table class="'+dt.table().node().className+'">';

		if ( config.header ) {
			html += '<thead>'+ addRow( data.header, 'th' ) +'</thead>';
		}

		html += '<tbody>';
		for ( var i=0, ien=data.body.length ; i<ien ; i++ ) {
			html += addRow( data.body[i], 'td' );
		}
		html += '</tbody>';

		if ( config.footer && data.footer ) {
			html += '<tfoot>'+ addRow( data.footer, 'th' ) +'</tfoot>';
		}
		html += '</table>';

		// Open a new window for the printable table
		var win = window.open( '', '' );

		if (! win) {
			dt.buttons.info(
				dt.i18n( 'buttons.printErrorTitle', 'Unable to open print view' ),
				dt.i18n( 'buttons.printErrorMsg', 'Please allow popups in your browser for this site to be able to view the print view.' ),
				5000
			);

			return;
		}

		win.document.close();

		// Inject the title and also a copy of the style and link tags from this
		// document so the table can retain its base styling. Note that we have
		// to use string manipulation as IE won't allow elements to be created
		// in the host document and then appended to the new window.
		var head = '<title>'+exportInfo.title+'</title>';
		$('style, link').each( function () {
			head += _styleToAbs( this );
		} );

		try {
			win.document.head.innerHTML = head; // Work around for Edge
		}
		catch (e) {
			$(win.document.head).html( head ); // Old IE
		}

		// Inject the table and other surrounding information
		win.document.body.innerHTML =
			'<h1>'+exportInfo.title+'</h1>'+
			'<div>'+(exportInfo.messageTop || '')+'</div>'+
			html+
			'<div>'+(exportInfo.messageBottom || '')+'</div>';

		$(win.document.body).addClass('dt-print-view');

		$('img', win.document.body).each( function ( i, img ) {
			img.setAttribute( 'src', _relToAbs( img.getAttribute('src') ) );
		} );

		if ( config.customize ) {
			config.customize( win, config, dt );
		}

		// Allow stylesheets time to load
		var autoPrint = function () {
			if ( config.autoPrint ) {
				win.print(); // blocking - so close will not
				win.close(); // execute until this is done
			}
		};

		if ( navigator.userAgent.match(/Trident\\/\\d.\\d/) ) { // IE needs to call this without a setTimeout
			autoPrint();
		}
		else {
			win.setTimeout( autoPrint, 1000 );
		}
	},

	title: '*',

	messageTop: '*',

	messageBottom: '*',

	exportOptions: {},

	header: true,

	footer: false,

	autoPrint: true,

	customize: null
};


return DataTable.Buttons;
}));
`;
    }, 1617: function(t2) {
      t2.exports = "/*! Buttons for DataTables 1.7.1\n * \xA92016-2021 SpryMedia Ltd - datatables.net/license\n */\n\n(function( factory ){\n	if ( typeof define === 'function' && define.amd ) {\n		// AMD\n		define( ['jquery', 'datatables.net'], function ( $ ) {\n			return factory( $, window, document );\n		} );\n	}\n	else if ( typeof exports === 'object' ) {\n		// CommonJS\n		module.exports = function (root, $) {\n			if ( ! root ) {\n				root = window;\n			}\n\n			if ( ! $ || ! $.fn.dataTable ) {\n				$ = require('datatables.net')(root, $).$;\n			}\n\n			return factory( $, root, root.document );\n		};\n	}\n	else {\n		// Browser\n		factory( jQuery, window, document );\n	}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Used for namespacing events added to the document by each instance, so they\n// can be removed on destroy\nvar _instCounter = 0;\n\n// Button namespacing counter for namespacing events on individual buttons\nvar _buttonCounter = 0;\n\nvar _dtButtons = DataTable.ext.buttons;\n\n// Allow for jQuery slim\nfunction _fadeIn(el, duration, fn) {\n	if ($.fn.animate) {\n		el\n			.stop()\n			.fadeIn( duration, fn );\n	}\n	else {\n		el.css('display', 'block');\n\n		if (fn) {\n			fn.call(el);\n		}\n	}\n}\n\nfunction _fadeOut(el, duration, fn) {\n	if ($.fn.animate) {\n		el\n			.stop()\n			.fadeOut( duration, fn );\n	}\n	else {\n		el.css('display', 'none');\n		\n		if (fn) {\n			fn.call(el);\n		}\n	}\n}\n\n/**\n * [Buttons description]\n * @param {[type]}\n * @param {[type]}\n */\nvar Buttons = function( dt, config )\n{\n	// If not created with a `new` keyword then we return a wrapper function that\n	// will take the settings object for a DT. This allows easy use of new instances\n	// with the `layout` option - e.g. `topLeft: $.fn.dataTable.Buttons( ... )`.\n	if ( !(this instanceof Buttons) ) {\n		return function (settings) {\n			return new Buttons( settings, dt ).container();\n		};\n	}\n\n	// If there is no config set it to an empty object\n	if ( typeof( config ) === 'undefined' ) {\n		config = {};	\n	}\n	\n	// Allow a boolean true for defaults\n	if ( config === true ) {\n		config = {};\n	}\n\n	// For easy configuration of buttons an array can be given\n	if ( Array.isArray( config ) ) {\n		config = { buttons: config };\n	}\n\n	this.c = $.extend( true, {}, Buttons.defaults, config );\n\n	// Don't want a deep copy for the buttons\n	if ( config.buttons ) {\n		this.c.buttons = config.buttons;\n	}\n\n	this.s = {\n		dt: new DataTable.Api( dt ),\n		buttons: [],\n		listenKeys: '',\n		namespace: 'dtb'+(_instCounter++)\n	};\n\n	this.dom = {\n		container: $('<'+this.c.dom.container.tag+'/>')\n			.addClass( this.c.dom.container.className )\n	};\n\n	this._constructor();\n};\n\n\n$.extend( Buttons.prototype, {\n	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n	 * Public methods\n	 */\n\n	/**\n	 * Get the action of a button\n	 * @param  {int|string} Button index\n	 * @return {function}\n	 *//**\n	 * Set the action of a button\n	 * @param  {node} node Button element\n	 * @param  {function} action Function to set\n	 * @return {Buttons} Self for chaining\n	 */\n	action: function ( node, action )\n	{\n		var button = this._nodeToButton( node );\n\n		if ( action === undefined ) {\n			return button.conf.action;\n		}\n\n		button.conf.action = action;\n\n		return this;\n	},\n\n	/**\n	 * Add an active class to the button to make to look active or get current\n	 * active state.\n	 * @param  {node} node Button element\n	 * @param  {boolean} [flag] Enable / disable flag\n	 * @return {Buttons} Self for chaining or boolean for getter\n	 */\n	active: function ( node, flag ) {\n		var button = this._nodeToButton( node );\n		var klass = this.c.dom.button.active;\n		var jqNode = $(button.node);\n\n		if ( flag === undefined ) {\n			return jqNode.hasClass( klass );\n		}\n\n		jqNode.toggleClass( klass, flag === undefined ? true : flag );\n\n		return this;\n	},\n\n	/**\n	 * Add a new button\n	 * @param {object} config Button configuration object, base string name or function\n	 * @param {int|string} [idx] Button index for where to insert the button\n	 * @return {Buttons} Self for chaining\n	 */\n	add: function ( config, idx )\n	{\n		var buttons = this.s.buttons;\n\n		if ( typeof idx === 'string' ) {\n			var split = idx.split('-');\n			var base = this.s;\n\n			for ( var i=0, ien=split.length-1 ; i<ien ; i++ ) {\n				base = base.buttons[ split[i]*1 ];\n			}\n\n			buttons = base.buttons;\n			idx = split[ split.length-1 ]*1;\n		}\n\n		this._expandButton( buttons, config, base !== undefined, idx );\n		this._draw();\n\n		return this;\n	},\n\n	/**\n	 * Get the container node for the buttons\n	 * @return {jQuery} Buttons node\n	 */\n	container: function ()\n	{\n		return this.dom.container;\n	},\n\n	/**\n	 * Disable a button\n	 * @param  {node} node Button node\n	 * @return {Buttons} Self for chaining\n	 */\n	disable: function ( node ) {\n		var button = this._nodeToButton( node );\n\n		$(button.node)\n			.addClass( this.c.dom.button.disabled )\n			.attr('disabled', true);\n\n		return this;\n	},\n\n	/**\n	 * Destroy the instance, cleaning up event handlers and removing DOM\n	 * elements\n	 * @return {Buttons} Self for chaining\n	 */\n	destroy: function ()\n	{\n		// Key event listener\n		$('body').off( 'keyup.'+this.s.namespace );\n\n		// Individual button destroy (so they can remove their own events if\n		// needed). Take a copy as the array is modified by `remove`\n		var buttons = this.s.buttons.slice();\n		var i, ien;\n		\n		for ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n			this.remove( buttons[i].node );\n		}\n\n		// Container\n		this.dom.container.remove();\n\n		// Remove from the settings object collection\n		var buttonInsts = this.s.dt.settings()[0];\n\n		for ( i=0, ien=buttonInsts.length ; i<ien ; i++ ) {\n			if ( buttonInsts.inst === this ) {\n				buttonInsts.splice( i, 1 );\n				break;\n			}\n		}\n\n		return this;\n	},\n\n	/**\n	 * Enable / disable a button\n	 * @param  {node} node Button node\n	 * @param  {boolean} [flag=true] Enable / disable flag\n	 * @return {Buttons} Self for chaining\n	 */\n	enable: function ( node, flag )\n	{\n		if ( flag === false ) {\n			return this.disable( node );\n		}\n\n		var button = this._nodeToButton( node );\n		$(button.node)\n			.removeClass( this.c.dom.button.disabled )\n			.removeAttr('disabled');\n\n		return this;\n	},\n\n	/**\n	 * Get the instance name for the button set selector\n	 * @return {string} Instance name\n	 */\n	name: function ()\n	{\n		return this.c.name;\n	},\n\n	/**\n	 * Get a button's node of the buttons container if no button is given\n	 * @param  {node} [node] Button node\n	 * @return {jQuery} Button element, or container\n	 */\n	node: function ( node )\n	{\n		if ( ! node ) {\n			return this.dom.container;\n		}\n\n		var button = this._nodeToButton( node );\n		return $(button.node);\n	},\n\n	/**\n	 * Set / get a processing class on the selected button\n	 * @param {element} node Triggering button node\n	 * @param  {boolean} flag true to add, false to remove, undefined to get\n	 * @return {boolean|Buttons} Getter value or this if a setter.\n	 */\n	processing: function ( node, flag )\n	{\n		var dt = this.s.dt;\n		var button = this._nodeToButton( node );\n\n		if ( flag === undefined ) {\n			return $(button.node).hasClass( 'processing' );\n		}\n\n		$(button.node).toggleClass( 'processing', flag );\n\n		$(dt.table().node()).triggerHandler( 'buttons-processing.dt', [\n			flag, dt.button( node ), dt, $(node), button.conf\n		] );\n\n		return this;\n	},\n\n	/**\n	 * Remove a button.\n	 * @param  {node} node Button node\n	 * @return {Buttons} Self for chaining\n	 */\n	remove: function ( node )\n	{\n		var button = this._nodeToButton( node );\n		var host = this._nodeToHost( node );\n		var dt = this.s.dt;\n\n		// Remove any child buttons first\n		if ( button.buttons.length ) {\n			for ( var i=button.buttons.length-1 ; i>=0 ; i-- ) {\n				this.remove( button.buttons[i].node );\n			}\n		}\n\n		// Allow the button to remove event handlers, etc\n		if ( button.conf.destroy ) {\n			button.conf.destroy.call( dt.button(node), dt, $(node), button.conf );\n		}\n\n		this._removeKey( button.conf );\n\n		$(button.node).remove();\n\n		var idx = $.inArray( button, host );\n		host.splice( idx, 1 );\n\n		return this;\n	},\n\n	/**\n	 * Get the text for a button\n	 * @param  {int|string} node Button index\n	 * @return {string} Button text\n	 *//**\n	 * Set the text for a button\n	 * @param  {int|string|function} node Button index\n	 * @param  {string} label Text\n	 * @return {Buttons} Self for chaining\n	 */\n	text: function ( node, label )\n	{\n		var button = this._nodeToButton( node );\n		var buttonLiner = this.c.dom.collection.buttonLiner;\n		var linerTag = button.inCollection && buttonLiner && buttonLiner.tag ?\n			buttonLiner.tag :\n			this.c.dom.buttonLiner.tag;\n		var dt = this.s.dt;\n		var jqNode = $(button.node);\n		var text = function ( opt ) {\n			return typeof opt === 'function' ?\n				opt( dt, jqNode, button.conf ) :\n				opt;\n		};\n\n		if ( label === undefined ) {\n			return text( button.conf.text );\n		}\n\n		button.conf.text = label;\n\n		if ( linerTag ) {\n			jqNode.children( linerTag ).html( text(label) );\n		}\n		else {\n			jqNode.html( text(label) );\n		}\n\n		return this;\n	},\n\n\n	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n	 * Constructor\n	 */\n\n	/**\n	 * Buttons constructor\n	 * @private\n	 */\n	_constructor: function ()\n	{\n		var that = this;\n		var dt = this.s.dt;\n		var dtSettings = dt.settings()[0];\n		var buttons =  this.c.buttons;\n\n		if ( ! dtSettings._buttons ) {\n			dtSettings._buttons = [];\n		}\n\n		dtSettings._buttons.push( {\n			inst: this,\n			name: this.c.name\n		} );\n\n		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n			this.add( buttons[i] );\n		}\n\n		dt.on( 'destroy', function ( e, settings ) {\n			if ( settings === dtSettings ) {\n				that.destroy();\n			}\n		} );\n\n		// Global key event binding to listen for button keys\n		$('body').on( 'keyup.'+this.s.namespace, function ( e ) {\n			if ( ! document.activeElement || document.activeElement === document.body ) {\n				// SUse a string of characters for fast lookup of if we need to\n				// handle this\n				var character = String.fromCharCode(e.keyCode).toLowerCase();\n\n				if ( that.s.listenKeys.toLowerCase().indexOf( character ) !== -1 ) {\n					that._keypress( character, e );\n				}\n			}\n		} );\n	},\n\n\n	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n	 * Private methods\n	 */\n\n	/**\n	 * Add a new button to the key press listener\n	 * @param {object} conf Resolved button configuration object\n	 * @private\n	 */\n	_addKey: function ( conf )\n	{\n		if ( conf.key ) {\n			this.s.listenKeys += $.isPlainObject( conf.key ) ?\n				conf.key.key :\n				conf.key;\n		}\n	},\n\n	/**\n	 * Insert the buttons into the container. Call without parameters!\n	 * @param  {node} [container] Recursive only - Insert point\n	 * @param  {array} [buttons] Recursive only - Buttons array\n	 * @private\n	 */\n	_draw: function ( container, buttons )\n	{\n		if ( ! container ) {\n			container = this.dom.container;\n			buttons = this.s.buttons;\n		}\n\n		container.children().detach();\n\n		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n			container.append( buttons[i].inserter );\n			container.append( ' ' );\n\n			if ( buttons[i].buttons && buttons[i].buttons.length ) {\n				this._draw( buttons[i].collection, buttons[i].buttons );\n			}\n		}\n	},\n\n	/**\n	 * Create buttons from an array of buttons\n	 * @param  {array} attachTo Buttons array to attach to\n	 * @param  {object} button Button definition\n	 * @param  {boolean} inCollection true if the button is in a collection\n	 * @private\n	 */\n	_expandButton: function ( attachTo, button, inCollection, attachPoint )\n	{\n		var dt = this.s.dt;\n		var buttonCounter = 0;\n		var buttons = ! Array.isArray( button ) ?\n			[ button ] :\n			button;\n\n		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n			var conf = this._resolveExtends( buttons[i] );\n\n			if ( ! conf ) {\n				continue;\n			}\n\n			// If the configuration is an array, then expand the buttons at this\n			// point\n			if ( Array.isArray( conf ) ) {\n				this._expandButton( attachTo, conf, inCollection, attachPoint );\n				continue;\n			}\n\n			var built = this._buildButton( conf, inCollection );\n			if ( ! built ) {\n				continue;\n			}\n\n			if ( attachPoint !== undefined && attachPoint !== null ) {\n				attachTo.splice( attachPoint, 0, built );\n				attachPoint++;\n			}\n			else {\n				attachTo.push( built );\n			}\n\n			if ( built.conf.buttons ) {\n				built.collection = $('<'+this.c.dom.collection.tag+'/>');\n\n				built.conf._collection = built.collection;\n\n				this._expandButton( built.buttons, built.conf.buttons, true, attachPoint );\n			}\n\n			// init call is made here, rather than buildButton as it needs to\n			// be selectable, and for that it needs to be in the buttons array\n			if ( conf.init ) {\n				conf.init.call( dt.button( built.node ), dt, $(built.node), conf );\n			}\n\n			buttonCounter++;\n		}\n	},\n\n	/**\n	 * Create an individual button\n	 * @param  {object} config            Resolved button configuration\n	 * @param  {boolean} inCollection `true` if a collection button\n	 * @return {jQuery} Created button node (jQuery)\n	 * @private\n	 */\n	_buildButton: function ( config, inCollection )\n	{\n		var buttonDom = this.c.dom.button;\n		var linerDom = this.c.dom.buttonLiner;\n		var collectionDom = this.c.dom.collection;\n		var dt = this.s.dt;\n		var text = function ( opt ) {\n			return typeof opt === 'function' ?\n				opt( dt, button, config ) :\n				opt;\n		};\n\n		if ( inCollection && collectionDom.button ) {\n			buttonDom = collectionDom.button;\n		}\n\n		if ( inCollection && collectionDom.buttonLiner ) {\n			linerDom = collectionDom.buttonLiner;\n		}\n\n		// Make sure that the button is available based on whatever requirements\n		// it has. For example, PDF button require pdfmake\n		if ( config.available && ! config.available( dt, config ) ) {\n			return false;\n		}\n\n		var action = function ( e, dt, button, config ) {\n			config.action.call( dt.button( button ), e, dt, button, config );\n\n			$(dt.table().node()).triggerHandler( 'buttons-action.dt', [\n				dt.button( button ), dt, button, config \n			] );\n		};\n\n		var tag = config.tag || buttonDom.tag;\n		var clickBlurs = config.clickBlurs === undefined ? true : config.clickBlurs\n		var button = $('<'+tag+'/>')\n			.addClass( buttonDom.className )\n			.attr( 'tabindex', this.s.dt.settings()[0].iTabIndex )\n			.attr( 'aria-controls', this.s.dt.table().node().id )\n			.on( 'click.dtb', function (e) {\n				e.preventDefault();\n\n				if ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n					action( e, dt, button, config );\n				}\n				if( clickBlurs ) {\n					button.trigger('blur');\n				}\n			} )\n			.on( 'keyup.dtb', function (e) {\n				if ( e.keyCode === 13 ) {\n					if ( ! button.hasClass( buttonDom.disabled ) && config.action ) {\n						action( e, dt, button, config );\n					}\n				}\n			} );\n\n		// Make `a` tags act like a link\n		if ( tag.toLowerCase() === 'a' ) {\n			button.attr( 'href', '#' );\n		}\n\n		// Button tags should have `type=button` so they don't have any default behaviour\n		if ( tag.toLowerCase() === 'button' ) {\n			button.attr( 'type', 'button' );\n		}\n\n		if ( linerDom.tag ) {\n			var liner = $('<'+linerDom.tag+'/>')\n				.html( text( config.text ) )\n				.addClass( linerDom.className );\n\n			if ( linerDom.tag.toLowerCase() === 'a' ) {\n				liner.attr( 'href', '#' );\n			}\n\n			button.append( liner );\n		}\n		else {\n			button.html( text( config.text ) );\n		}\n\n		if ( config.enabled === false ) {\n			button.addClass( buttonDom.disabled );\n		}\n\n		if ( config.className ) {\n			button.addClass( config.className );\n		}\n\n		if ( config.titleAttr ) {\n			button.attr( 'title', text( config.titleAttr ) );\n		}\n\n		if ( config.attr ) {\n			button.attr( config.attr );\n		}\n\n		if ( ! config.namespace ) {\n			config.namespace = '.dt-button-'+(_buttonCounter++);\n		}\n\n		var buttonContainer = this.c.dom.buttonContainer;\n		var inserter;\n		if ( buttonContainer && buttonContainer.tag ) {\n			inserter = $('<'+buttonContainer.tag+'/>')\n				.addClass( buttonContainer.className )\n				.append( button );\n		}\n		else {\n			inserter = button;\n		}\n\n		this._addKey( config );\n\n		// Style integration callback for DOM manipulation\n		// Note that this is _not_ documented. It is currently\n		// for style integration only\n		if( this.c.buttonCreated ) {\n			inserter = this.c.buttonCreated( config, inserter );\n		}\n\n		return {\n			conf:         config,\n			node:         button.get(0),\n			inserter:     inserter,\n			buttons:      [],\n			inCollection: inCollection,\n			collection:   null\n		};\n	},\n\n	/**\n	 * Get the button object from a node (recursive)\n	 * @param  {node} node Button node\n	 * @param  {array} [buttons] Button array, uses base if not defined\n	 * @return {object} Button object\n	 * @private\n	 */\n	_nodeToButton: function ( node, buttons )\n	{\n		if ( ! buttons ) {\n			buttons = this.s.buttons;\n		}\n\n		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n			if ( buttons[i].node === node ) {\n				return buttons[i];\n			}\n\n			if ( buttons[i].buttons.length ) {\n				var ret = this._nodeToButton( node, buttons[i].buttons );\n\n				if ( ret ) {\n					return ret;\n				}\n			}\n		}\n	},\n\n	/**\n	 * Get container array for a button from a button node (recursive)\n	 * @param  {node} node Button node\n	 * @param  {array} [buttons] Button array, uses base if not defined\n	 * @return {array} Button's host array\n	 * @private\n	 */\n	_nodeToHost: function ( node, buttons )\n	{\n		if ( ! buttons ) {\n			buttons = this.s.buttons;\n		}\n\n		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n			if ( buttons[i].node === node ) {\n				return buttons;\n			}\n\n			if ( buttons[i].buttons.length ) {\n				var ret = this._nodeToHost( node, buttons[i].buttons );\n\n				if ( ret ) {\n					return ret;\n				}\n			}\n		}\n	},\n\n	/**\n	 * Handle a key press - determine if any button's key configured matches\n	 * what was typed and trigger the action if so.\n	 * @param  {string} character The character pressed\n	 * @param  {object} e Key event that triggered this call\n	 * @private\n	 */\n	_keypress: function ( character, e )\n	{\n		// Check if this button press already activated on another instance of Buttons\n		if ( e._buttonsHandled ) {\n			return;\n		}\n\n		var run = function ( conf, node ) {\n			if ( ! conf.key ) {\n				return;\n			}\n\n			if ( conf.key === character ) {\n				e._buttonsHandled = true;\n				$(node).click();\n			}\n			else if ( $.isPlainObject( conf.key ) ) {\n				if ( conf.key.key !== character ) {\n					return;\n				}\n\n				if ( conf.key.shiftKey && ! e.shiftKey ) {\n					return;\n				}\n\n				if ( conf.key.altKey && ! e.altKey ) {\n					return;\n				}\n\n				if ( conf.key.ctrlKey && ! e.ctrlKey ) {\n					return;\n				}\n\n				if ( conf.key.metaKey && ! e.metaKey ) {\n					return;\n				}\n\n				// Made it this far - it is good\n				e._buttonsHandled = true;\n				$(node).click();\n			}\n		};\n\n		var recurse = function ( a ) {\n			for ( var i=0, ien=a.length ; i<ien ; i++ ) {\n				run( a[i].conf, a[i].node );\n\n				if ( a[i].buttons.length ) {\n					recurse( a[i].buttons );\n				}\n			}\n		};\n\n		recurse( this.s.buttons );\n	},\n\n	/**\n	 * Remove a key from the key listener for this instance (to be used when a\n	 * button is removed)\n	 * @param  {object} conf Button configuration\n	 * @private\n	 */\n	_removeKey: function ( conf )\n	{\n		if ( conf.key ) {\n			var character = $.isPlainObject( conf.key ) ?\n				conf.key.key :\n				conf.key;\n\n			// Remove only one character, as multiple buttons could have the\n			// same listening key\n			var a = this.s.listenKeys.split('');\n			var idx = $.inArray( character, a );\n			a.splice( idx, 1 );\n			this.s.listenKeys = a.join('');\n		}\n	},\n\n	/**\n	 * Resolve a button configuration\n	 * @param  {string|function|object} conf Button config to resolve\n	 * @return {object} Button configuration\n	 * @private\n	 */\n	_resolveExtends: function ( conf )\n	{\n		var dt = this.s.dt;\n		var i, ien;\n		var toConfObject = function ( base ) {\n			var loop = 0;\n\n			// Loop until we have resolved to a button configuration, or an\n			// array of button configurations (which will be iterated\n			// separately)\n			while ( ! $.isPlainObject(base) && ! Array.isArray(base) ) {\n				if ( base === undefined ) {\n					return;\n				}\n\n				if ( typeof base === 'function' ) {\n					base = base( dt, conf );\n\n					if ( ! base ) {\n						return false;\n					}\n				}\n				else if ( typeof base === 'string' ) {\n					if ( ! _dtButtons[ base ] ) {\n						throw 'Unknown button type: '+base;\n					}\n\n					base = _dtButtons[ base ];\n				}\n\n				loop++;\n				if ( loop > 30 ) {\n					// Protect against misconfiguration killing the browser\n					throw 'Buttons: Too many iterations';\n				}\n			}\n\n			return Array.isArray( base ) ?\n				base :\n				$.extend( {}, base );\n		};\n\n		conf = toConfObject( conf );\n\n		while ( conf && conf.extend ) {\n			// Use `toConfObject` in case the button definition being extended\n			// is itself a string or a function\n			if ( ! _dtButtons[ conf.extend ] ) {\n				throw 'Cannot extend unknown button type: '+conf.extend;\n			}\n\n			var objArray = toConfObject( _dtButtons[ conf.extend ] );\n			if ( Array.isArray( objArray ) ) {\n				return objArray;\n			}\n			else if ( ! objArray ) {\n				// This is a little brutal as it might be possible to have a\n				// valid button without the extend, but if there is no extend\n				// then the host button would be acting in an undefined state\n				return false;\n			}\n\n			// Stash the current class name\n			var originalClassName = objArray.className;\n\n			conf = $.extend( {}, objArray, conf );\n\n			// The extend will have overwritten the original class name if the\n			// `conf` object also assigned a class, but we want to concatenate\n			// them so they are list that is combined from all extended buttons\n			if ( originalClassName && conf.className !== originalClassName ) {\n				conf.className = originalClassName+' '+conf.className;\n			}\n\n			// Buttons to be added to a collection  -gives the ability to define\n			// if buttons should be added to the start or end of a collection\n			var postfixButtons = conf.postfixButtons;\n			if ( postfixButtons ) {\n				if ( ! conf.buttons ) {\n					conf.buttons = [];\n				}\n\n				for ( i=0, ien=postfixButtons.length ; i<ien ; i++ ) {\n					conf.buttons.push( postfixButtons[i] );\n				}\n\n				conf.postfixButtons = null;\n			}\n\n			var prefixButtons = conf.prefixButtons;\n			if ( prefixButtons ) {\n				if ( ! conf.buttons ) {\n					conf.buttons = [];\n				}\n\n				for ( i=0, ien=prefixButtons.length ; i<ien ; i++ ) {\n					conf.buttons.splice( i, 0, prefixButtons[i] );\n				}\n\n				conf.prefixButtons = null;\n			}\n\n			// Although we want the `conf` object to overwrite almost all of\n			// the properties of the object being extended, the `extend`\n			// property should come from the object being extended\n			conf.extend = objArray.extend;\n		}\n\n		return conf;\n	},\n\n	/**\n	 * Display (and replace if there is an existing one) a popover attached to a button\n	 * @param {string|node} content Content to show\n	 * @param {DataTable.Api} hostButton DT API instance of the button\n	 * @param {object} inOpts Options (see object below for all options)\n	 */\n	_popover: function ( content, hostButton, inOpts ) {\n		var dt = hostButton;\n		var buttonsSettings = this.c;\n		var options = $.extend( {\n			align: 'button-left', // button-right, dt-container\n			autoClose: false,\n			background: true,\n			backgroundClassName: 'dt-button-background',\n			contentClassName: buttonsSettings.dom.collection.className,\n			collectionLayout: '',\n			collectionTitle: '',\n			dropup: false,\n			fade: 400,\n			rightAlignClassName: 'dt-button-right',\n			tag: buttonsSettings.dom.collection.tag\n		}, inOpts );\n		var hostNode = hostButton.node();\n\n		var close = function () {\n			_fadeOut(\n				$('.dt-button-collection'),\n				options.fade,\n				function () {\n					$(this).detach();\n				}\n			);\n\n			$(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes())\n				.attr('aria-expanded', 'false');\n\n			$('div.dt-button-background').off( 'click.dtb-collection' );\n			Buttons.background( false, options.backgroundClassName, options.fade, hostNode );\n\n			$('body').off( '.dtb-collection' );\n			dt.off( 'buttons-action.b-internal' );\n		};\n\n		if (content === false) {\n			close();\n		}\n\n		var existingExpanded = $(dt.buttons( '[aria-haspopup=\"true\"][aria-expanded=\"true\"]' ).nodes());\n		if ( existingExpanded.length ) {\n			hostNode = existingExpanded.eq(0);\n\n			close();\n		}\n\n		var display = $('<div/>')\n			.addClass('dt-button-collection')\n			.addClass(options.collectionLayout)\n			.css('display', 'none');\n\n		content = $(content)\n			.addClass(options.contentClassName)\n			.attr('role', 'menu')\n			.appendTo(display);\n\n		hostNode.attr( 'aria-expanded', 'true' );\n\n		if ( hostNode.parents('body')[0] !== document.body ) {\n			hostNode = document.body.lastChild;\n		}\n\n		if ( options.collectionTitle ) {\n			display.prepend('<div class=\"dt-button-collection-title\">'+options.collectionTitle+'</div>');\n		}\n\n		_fadeIn( display.insertAfter( hostNode ), options.fade );\n\n		var tableContainer = $( hostButton.table().container() );\n		var position = display.css( 'position' );\n\n		if ( options.align === 'dt-container' ) {\n			hostNode = hostNode.parent();\n			display.css('width', tableContainer.width());\n		}\n\n		// Align the popover relative to the DataTables container\n		// Useful for wide popovers such as SearchPanes\n		if (position === 'absolute') {\n			// Align relative to the host button\n			var hostPosition = hostNode.position();\n			var buttonPosition = $(hostButton.node()).position();\n\n			display.css( {\n				top: buttonPosition.top + hostNode.outerHeight(),\n				left: hostPosition.left\n			} );\n\n			// calculate overflow when positioned beneath\n			var collectionHeight = display.outerHeight();\n			var tableBottom = tableContainer.offset().top + tableContainer.height();\n			var listBottom = buttonPosition.top + hostNode.outerHeight() + collectionHeight;\n			var bottomOverflow = listBottom - tableBottom;\n\n			// calculate overflow when positioned above\n			var listTop = buttonPosition.top - collectionHeight;\n			var tableTop = tableContainer.offset().top;\n			var topOverflow = tableTop - listTop;\n\n			// if bottom overflow is larger, move to the top because it fits better, or if dropup is requested\n			var moveTop = buttonPosition.top - collectionHeight - 5;\n			if ( (bottomOverflow > topOverflow || options.dropup) && -moveTop < tableTop ) {\n				display.css( 'top', moveTop);\n			}\n\n			// Get the size of the container (left and width - and thus also right)\n			var tableLeft = tableContainer.offset().left;\n			var tableWidth = tableContainer.width();\n			var tableRight = tableLeft + tableWidth;\n\n			// Get the size of the popover (left and width - and ...)\n			var popoverLeft = display.offset().left;\n			var popoverWidth = display.width();\n			var popoverRight = popoverLeft + popoverWidth;\n\n			// Get the size of the host buttons (left and width - and ...)\n			var buttonsLeft = hostNode.offset().left;\n			var buttonsWidth = hostNode.outerWidth()\n			var buttonsRight = buttonsLeft + buttonsWidth;\n\n			if (\n				display.hasClass( options.rightAlignClassName ) ||\n				display.hasClass( options.leftAlignClassName ) ||\n				options.align === 'dt-container'\n			){\n				// You've then got all the numbers you need to do some calculations and if statements,\n				//  so we can do some quick JS maths and apply it only once\n				// If it has the right align class OR the buttons are right aligned OR the button container is floated right,\n				//  then calculate left position for the popover to align the popover to the right hand\n				//  side of the button - check to see if the left of the popover is inside the table container.\n				// If not, move the popover so it is, but not more than it means that the popover is to the right of the table container\n				var popoverShuffle = 0;\n				if ( display.hasClass( options.rightAlignClassName )) {\n					popoverShuffle = buttonsRight - popoverRight;\n					if(tableLeft > (popoverLeft + popoverShuffle)){\n						var leftGap = tableLeft - (popoverLeft + popoverShuffle);\n						var rightGap = tableRight - (popoverRight + popoverShuffle);\n		\n						if(leftGap > rightGap){\n							popoverShuffle += rightGap; \n						}\n						else {\n							popoverShuffle += leftGap;\n						}\n					}\n				}\n				// else attempt to left align the popover to the button. Similar to above, if the popover's right goes past the table container's right,\n				//  then move it back, but not so much that it goes past the left of the table container\n				else {\n					popoverShuffle = tableLeft - popoverLeft;\n	\n					if(tableRight < (popoverRight + popoverShuffle)){\n						var leftGap = tableLeft - (popoverLeft + popoverShuffle);\n						var rightGap = tableRight - (popoverRight + popoverShuffle);\n	\n						if(leftGap > rightGap ){\n							popoverShuffle += rightGap;\n						}\n						else {\n							popoverShuffle += leftGap;\n						}\n	\n					}\n				}\n	\n				display.css('left', display.position().left + popoverShuffle);\n			}\n			else {\n				var top = hostNode.offset().top\n				var popoverShuffle = 0;\n\n				popoverShuffle = options.align === 'button-right'\n					? buttonsRight - popoverRight\n					: buttonsLeft - popoverLeft;\n\n				display.css('left', display.position().left + popoverShuffle);\n			}\n			\n			\n		}\n		else {\n			// Fix position - centre on screen\n			var top = display.height() / 2;\n			if ( top > $(window).height() / 2 ) {\n				top = $(window).height() / 2;\n			}\n\n			display.css( 'marginTop', top*-1 );\n		}\n\n		if ( options.background ) {\n			Buttons.background( true, options.backgroundClassName, options.fade, hostNode );\n		}\n\n		// This is bonkers, but if we don't have a click listener on the\n		// background element, iOS Safari will ignore the body click\n		// listener below. An empty function here is all that is\n		// required to make it work...\n		$('div.dt-button-background').on( 'click.dtb-collection', function () {} );\n\n		$('body')\n			.on( 'click.dtb-collection', function (e) {\n				// andSelf is deprecated in jQ1.8, but we want 1.7 compat\n				var back = $.fn.addBack ? 'addBack' : 'andSelf';\n				var parent = $(e.target).parent()[0];\n\n				if (( ! $(e.target).parents()[back]().filter( content ).length  && !$(parent).hasClass('dt-buttons')) || $(e.target).hasClass('dt-button-background')) {\n					close();\n				}\n			} )\n			.on( 'keyup.dtb-collection', function (e) {\n				if ( e.keyCode === 27 ) {\n					close();\n				}\n			} );\n\n		if ( options.autoClose ) {\n			setTimeout( function () {\n				dt.on( 'buttons-action.b-internal', function (e, btn, dt, node) {\n					if ( node[0] === hostNode[0] ) {\n						return;\n					}\n					close();\n				} );\n			}, 0);\n		}\n\n		$(display).trigger('buttons-popover.dt');\n	}\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Statics\n */\n\n/**\n * Show / hide a background layer behind a collection\n * @param  {boolean} Flag to indicate if the background should be shown or\n *   hidden \n * @param  {string} Class to assign to the background\n * @static\n */\nButtons.background = function ( show, className, fade, insertPoint ) {\n	if ( fade === undefined ) {\n		fade = 400;\n	}\n	if ( ! insertPoint ) {\n		insertPoint = document.body;\n	}\n\n	if ( show ) {\n		_fadeIn(\n			$('<div/>')\n				.addClass( className )\n				.css( 'display', 'none' )\n				.insertAfter( insertPoint ),\n			fade\n		);\n	}\n	else {\n		_fadeOut(\n			$('div.'+className),\n			fade,\n			function () {\n				$(this)\n					.removeClass( className )\n					.remove();\n			}\n		);\n	}\n};\n\n/**\n * Instance selector - select Buttons instances based on an instance selector\n * value from the buttons assigned to a DataTable. This is only useful if\n * multiple instances are attached to a DataTable.\n * @param  {string|int|array} Instance selector - see `instance-selector`\n *   documentation on the DataTables site\n * @param  {array} Button instance array that was attached to the DataTables\n *   settings object\n * @return {array} Buttons instances\n * @static\n */\nButtons.instanceSelector = function ( group, buttons )\n{\n	if ( group === undefined || group === null ) {\n		return $.map( buttons, function ( v ) {\n			return v.inst;\n		} );\n	}\n\n	var ret = [];\n	var names = $.map( buttons, function ( v ) {\n		return v.name;\n	} );\n\n	// Flatten the group selector into an array of single options\n	var process = function ( input ) {\n		if ( Array.isArray( input ) ) {\n			for ( var i=0, ien=input.length ; i<ien ; i++ ) {\n				process( input[i] );\n			}\n			return;\n		}\n\n		if ( typeof input === 'string' ) {\n			if ( input.indexOf( ',' ) !== -1 ) {\n				// String selector, list of names\n				process( input.split(',') );\n			}\n			else {\n				// String selector individual name\n				var idx = $.inArray( input.trim(), names );\n\n				if ( idx !== -1 ) {\n					ret.push( buttons[ idx ].inst );\n				}\n			}\n		}\n		else if ( typeof input === 'number' ) {\n			// Index selector\n			ret.push( buttons[ input ].inst );\n		}\n	};\n	\n	process( group );\n\n	return ret;\n};\n\n/**\n * Button selector - select one or more buttons from a selector input so some\n * operation can be performed on them.\n * @param  {array} Button instances array that the selector should operate on\n * @param  {string|int|node|jQuery|array} Button selector - see\n *   `button-selector` documentation on the DataTables site\n * @return {array} Array of objects containing `inst` and `idx` properties of\n *   the selected buttons so you know which instance each button belongs to.\n * @static\n */\nButtons.buttonSelector = function ( insts, selector )\n{\n	var ret = [];\n	var nodeBuilder = function ( a, buttons, baseIdx ) {\n		var button;\n		var idx;\n\n		for ( var i=0, ien=buttons.length ; i<ien ; i++ ) {\n			button = buttons[i];\n\n			if ( button ) {\n				idx = baseIdx !== undefined ?\n					baseIdx+i :\n					i+'';\n\n				a.push( {\n					node: button.node,\n					name: button.conf.name,\n					idx:  idx\n				} );\n\n				if ( button.buttons ) {\n					nodeBuilder( a, button.buttons, idx+'-' );\n				}\n			}\n		}\n	};\n\n	var run = function ( selector, inst ) {\n		var i, ien;\n		var buttons = [];\n		nodeBuilder( buttons, inst.s.buttons );\n\n		var nodes = $.map( buttons, function (v) {\n			return v.node;\n		} );\n\n		if ( Array.isArray( selector ) || selector instanceof $ ) {\n			for ( i=0, ien=selector.length ; i<ien ; i++ ) {\n				run( selector[i], inst );\n			}\n			return;\n		}\n\n		if ( selector === null || selector === undefined || selector === '*' ) {\n			// Select all\n			for ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n				ret.push( {\n					inst: inst,\n					node: buttons[i].node\n				} );\n			}\n		}\n		else if ( typeof selector === 'number' ) {\n			// Main button index selector\n			ret.push( {\n				inst: inst,\n				node: inst.s.buttons[ selector ].node\n			} );\n		}\n		else if ( typeof selector === 'string' ) {\n			if ( selector.indexOf( ',' ) !== -1 ) {\n				// Split\n				var a = selector.split(',');\n\n				for ( i=0, ien=a.length ; i<ien ; i++ ) {\n					run( a[i].trim(), inst );\n				}\n			}\n			else if ( selector.match( /^\\d+(\\-\\d+)*$/ ) ) {\n				// Sub-button index selector\n				var indexes = $.map( buttons, function (v) {\n					return v.idx;\n				} );\n\n				ret.push( {\n					inst: inst,\n					node: buttons[ $.inArray( selector, indexes ) ].node\n				} );\n			}\n			else if ( selector.indexOf( ':name' ) !== -1 ) {\n				// Button name selector\n				var name = selector.replace( ':name', '' );\n\n				for ( i=0, ien=buttons.length ; i<ien ; i++ ) {\n					if ( buttons[i].name === name ) {\n						ret.push( {\n							inst: inst,\n							node: buttons[i].node\n						} );\n					}\n				}\n			}\n			else {\n				// jQuery selector on the nodes\n				$( nodes ).filter( selector ).each( function () {\n					ret.push( {\n						inst: inst,\n						node: this\n					} );\n				} );\n			}\n		}\n		else if ( typeof selector === 'object' && selector.nodeName ) {\n			// Node selector\n			var idx = $.inArray( selector, nodes );\n\n			if ( idx !== -1 ) {\n				ret.push( {\n					inst: inst,\n					node: nodes[ idx ]\n				} );\n			}\n		}\n	};\n\n\n	for ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n		var inst = insts[i];\n\n		run( selector, inst );\n	}\n\n	return ret;\n};\n\n/**\n * Default function used for formatting output data.\n * @param {*} str Data to strip\n */\nButtons.stripData = function ( str, config ) {\n	if ( typeof str !== 'string' ) {\n		return str;\n	}\n\n	// Always remove script tags\n	str = str.replace( /<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, '' );\n\n	// Always remove comments\n	str = str.replace( /<!\\-\\-.*?\\-\\->/g, '' );\n\n	if ( ! config || config.stripHtml ) {\n		str = str.replace( /<[^>]*>/g, '' );\n	}\n\n	if ( ! config || config.trim ) {\n		str = str.replace( /^\\s+|\\s+$/g, '' );\n	}\n\n	if ( ! config || config.stripNewlines ) {\n		str = str.replace( /\\n/g, ' ' );\n	}\n\n	if ( ! config || config.decodeEntities ) {\n		_exportTextarea.innerHTML = str;\n		str = _exportTextarea.value;\n	}\n\n	return str;\n};\n\n\n/**\n * Buttons defaults. For full documentation, please refer to the docs/option\n * directory or the DataTables site.\n * @type {Object}\n * @static\n */\nButtons.defaults = {\n	buttons: [ 'copy', 'excel', 'csv', 'pdf', 'print' ],\n	name: 'main',\n	tabIndex: 0,\n	dom: {\n		container: {\n			tag: 'div',\n			className: 'dt-buttons'\n		},\n		collection: {\n			tag: 'div',\n			className: ''\n		},\n		button: {\n			tag: 'button',\n			className: 'dt-button',\n			active: 'active',\n			disabled: 'disabled'\n		},\n		buttonLiner: {\n			tag: 'span',\n			className: ''\n		}\n	}\n};\n\n/**\n * Version information\n * @type {string}\n * @static\n */\nButtons.version = '1.7.1';\n\n\n$.extend( _dtButtons, {\n	collection: {\n		text: function ( dt ) {\n			return dt.i18n( 'buttons.collection', 'Collection' );\n		},\n		className: 'buttons-collection',\n		init: function ( dt, button, config ) {\n			button.attr( 'aria-expanded', false );\n		},\n		action: function ( e, dt, button, config ) {\n			e.stopPropagation();\n\n			if ( config._collection.parents('body').length ) {\n				this.popover(false, config);\n			}\n			else {\n				this.popover(config._collection, config);\n			}\n		},\n		attr: {\n			'aria-haspopup': true\n		}\n		// Also the popover options, defined in Buttons.popover\n	},\n	copy: function ( dt, conf ) {\n		if ( _dtButtons.copyHtml5 ) {\n			return 'copyHtml5';\n		}\n	},\n	csv: function ( dt, conf ) {\n		if ( _dtButtons.csvHtml5 && _dtButtons.csvHtml5.available( dt, conf ) ) {\n			return 'csvHtml5';\n		}\n	},\n	excel: function ( dt, conf ) {\n		if ( _dtButtons.excelHtml5 && _dtButtons.excelHtml5.available( dt, conf ) ) {\n			return 'excelHtml5';\n		}\n	},\n	pdf: function ( dt, conf ) {\n		if ( _dtButtons.pdfHtml5 && _dtButtons.pdfHtml5.available( dt, conf ) ) {\n			return 'pdfHtml5';\n		}\n	},\n	pageLength: function ( dt ) {\n		var lengthMenu = dt.settings()[0].aLengthMenu;\n		var vals = [];\n		var lang = [];\n		var text = function ( dt ) {\n			return dt.i18n( 'buttons.pageLength', {\n				\"-1\": 'Show all rows',\n				_:    'Show %d rows'\n			}, dt.page.len() );\n		};\n\n		// Support for DataTables 1.x 2D array\n		if (Array.isArray( lengthMenu[0] )) {\n			vals = lengthMenu[0];\n			lang = lengthMenu[1];\n		}\n		else {\n			for (var i=0 ; i<lengthMenu.length ; i++) {\n				var option = lengthMenu[i];\n\n				// Support for DataTables 2 object in the array\n				if ($.isPlainObject(option)) {\n					vals.push(option.value);\n					lang.push(option.label);\n				}\n				else {\n					vals.push(option);\n					lang.push(option);\n				}\n			}\n		}\n\n		return {\n			extend: 'collection',\n			text: text,\n			className: 'buttons-page-length',\n			autoClose: true,\n			buttons: $.map( vals, function ( val, i ) {\n				return {\n					text: lang[i],\n					className: 'button-page-length',\n					action: function ( e, dt ) {\n						dt.page.len( val ).draw();\n					},\n					init: function ( dt, node, conf ) {\n						var that = this;\n						var fn = function () {\n							that.active( dt.page.len() === val );\n						};\n\n						dt.on( 'length.dt'+conf.namespace, fn );\n						fn();\n					},\n					destroy: function ( dt, node, conf ) {\n						dt.off( 'length.dt'+conf.namespace );\n					}\n				};\n			} ),\n			init: function ( dt, node, conf ) {\n				var that = this;\n				dt.on( 'length.dt'+conf.namespace, function () {\n					that.text( conf.text );\n				} );\n			},\n			destroy: function ( dt, node, conf ) {\n				dt.off( 'length.dt'+conf.namespace );\n			}\n		};\n	}\n} );\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Buttons group and individual button selector\nDataTable.Api.register( 'buttons()', function ( group, selector ) {\n	// Argument shifting\n	if ( selector === undefined ) {\n		selector = group;\n		group = undefined;\n	}\n\n	this.selector.buttonGroup = group;\n\n	var res = this.iterator( true, 'table', function ( ctx ) {\n		if ( ctx._buttons ) {\n			return Buttons.buttonSelector(\n				Buttons.instanceSelector( group, ctx._buttons ),\n				selector\n			);\n		}\n	}, true );\n\n	res._groupSelector = group;\n	return res;\n} );\n\n// Individual button selector\nDataTable.Api.register( 'button()', function ( group, selector ) {\n	// just run buttons() and truncate\n	var buttons = this.buttons( group, selector );\n\n	if ( buttons.length > 1 ) {\n		buttons.splice( 1, buttons.length );\n	}\n\n	return buttons;\n} );\n\n// Active buttons\nDataTable.Api.registerPlural( 'buttons().active()', 'button().active()', function ( flag ) {\n	if ( flag === undefined ) {\n		return this.map( function ( set ) {\n			return set.inst.active( set.node );\n		} );\n	}\n\n	return this.each( function ( set ) {\n		set.inst.active( set.node, flag );\n	} );\n} );\n\n// Get / set button action\nDataTable.Api.registerPlural( 'buttons().action()', 'button().action()', function ( action ) {\n	if ( action === undefined ) {\n		return this.map( function ( set ) {\n			return set.inst.action( set.node );\n		} );\n	}\n\n	return this.each( function ( set ) {\n		set.inst.action( set.node, action );\n	} );\n} );\n\n// Enable / disable buttons\nDataTable.Api.register( ['buttons().enable()', 'button().enable()'], function ( flag ) {\n	return this.each( function ( set ) {\n		set.inst.enable( set.node, flag );\n	} );\n} );\n\n// Disable buttons\nDataTable.Api.register( ['buttons().disable()', 'button().disable()'], function () {\n	return this.each( function ( set ) {\n		set.inst.disable( set.node );\n	} );\n} );\n\n// Get button nodes\nDataTable.Api.registerPlural( 'buttons().nodes()', 'button().node()', function () {\n	var jq = $();\n\n	// jQuery will automatically reduce duplicates to a single entry\n	$( this.each( function ( set ) {\n		jq = jq.add( set.inst.node( set.node ) );\n	} ) );\n\n	return jq;\n} );\n\n// Get / set button processing state\nDataTable.Api.registerPlural( 'buttons().processing()', 'button().processing()', function ( flag ) {\n	if ( flag === undefined ) {\n		return this.map( function ( set ) {\n			return set.inst.processing( set.node );\n		} );\n	}\n\n	return this.each( function ( set ) {\n		set.inst.processing( set.node, flag );\n	} );\n} );\n\n// Get / set button text (i.e. the button labels)\nDataTable.Api.registerPlural( 'buttons().text()', 'button().text()', function ( label ) {\n	if ( label === undefined ) {\n		return this.map( function ( set ) {\n			return set.inst.text( set.node );\n		} );\n	}\n\n	return this.each( function ( set ) {\n		set.inst.text( set.node, label );\n	} );\n} );\n\n// Trigger a button's action\nDataTable.Api.registerPlural( 'buttons().trigger()', 'button().trigger()', function () {\n	return this.each( function ( set ) {\n		set.inst.node( set.node ).trigger( 'click' );\n	} );\n} );\n\n// Button resolver to the popover\nDataTable.Api.register( 'button().popover()', function (content, options) {\n	return this.map( function ( set ) {\n		return set.inst._popover( content, this.button(this[0].node), options );\n	} );\n} );\n\n// Get the container elements\nDataTable.Api.register( 'buttons().containers()', function () {\n	var jq = $();\n	var groupSelector = this._groupSelector;\n\n	// We need to use the group selector directly, since if there are no buttons\n	// the result set will be empty\n	this.iterator( true, 'table', function ( ctx ) {\n		if ( ctx._buttons ) {\n			var insts = Buttons.instanceSelector( groupSelector, ctx._buttons );\n\n			for ( var i=0, ien=insts.length ; i<ien ; i++ ) {\n				jq = jq.add( insts[i].container() );\n			}\n		}\n	} );\n\n	return jq;\n} );\n\nDataTable.Api.register( 'buttons().container()', function () {\n	// API level of nesting is `buttons()` so we can zip into the containers method\n	return this.containers().eq(0);\n} );\n\n// Add a new button\nDataTable.Api.register( 'button().add()', function ( idx, conf ) {\n	var ctx = this.context;\n\n	// Don't use `this` as it could be empty - select the instances directly\n	if ( ctx.length ) {\n		var inst = Buttons.instanceSelector( this._groupSelector, ctx[0]._buttons );\n\n		if ( inst.length ) {\n			inst[0].add( conf, idx );\n		}\n	}\n\n	return this.button( this._groupSelector, idx );\n} );\n\n// Destroy the button sets selected\nDataTable.Api.register( 'buttons().destroy()', function () {\n	this.pluck( 'inst' ).unique().each( function ( inst ) {\n		inst.destroy();\n	} );\n\n	return this;\n} );\n\n// Remove a button\nDataTable.Api.registerPlural( 'buttons().remove()', 'buttons().remove()', function () {\n	this.each( function ( set ) {\n		set.inst.remove( set.node );\n	} );\n\n	return this;\n} );\n\n// Information box that can be used by buttons\nvar _infoTimer;\nDataTable.Api.register( 'buttons.info()', function ( title, message, time ) {\n	var that = this;\n\n	if ( title === false ) {\n		this.off('destroy.btn-info');\n		_fadeOut(\n			$('#datatables_buttons_info'),\n			400,\n			function () {\n				$(this).remove();\n			}\n		);\n		clearTimeout( _infoTimer );\n		_infoTimer = null;\n\n		return this;\n	}\n\n	if ( _infoTimer ) {\n		clearTimeout( _infoTimer );\n	}\n\n	if ( $('#datatables_buttons_info').length ) {\n		$('#datatables_buttons_info').remove();\n	}\n\n	title = title ? '<h2>'+title+'</h2>' : '';\n\n	_fadeIn(\n		$('<div id=\"datatables_buttons_info\" class=\"dt-button-info\"/>')\n			.html( title )\n			.append( $('<div/>')[ typeof message === 'string' ? 'html' : 'append' ]( message ) )\n			.css( 'display', 'none' )\n			.appendTo( 'body' )\n	);\n\n	if ( time !== undefined && time !== 0 ) {\n		_infoTimer = setTimeout( function () {\n			that.buttons.info( false );\n		}, time );\n	}\n\n	this.on('destroy.btn-info', function () {\n		that.buttons.info(false);\n	});\n\n	return this;\n} );\n\n// Get data from the table for export - this is common to a number of plug-in\n// buttons so it is included in the Buttons core library\nDataTable.Api.register( 'buttons.exportData()', function ( options ) {\n	if ( this.context.length ) {\n		return _exportData( new DataTable.Api( this.context[0] ), options );\n	}\n} );\n\n// Get information about the export that is common to many of the export data\n// types (DRY)\nDataTable.Api.register( 'buttons.exportInfo()', function ( conf ) {\n	if ( ! conf ) {\n		conf = {};\n	}\n\n	return {\n		filename: _filename( conf ),\n		title: _title( conf ),\n		messageTop: _message(this, conf.message || conf.messageTop, 'top'),\n		messageBottom: _message(this, conf.messageBottom, 'bottom')\n	};\n} );\n\n\n\n/**\n * Get the file name for an exported file.\n *\n * @param {object}	config Button configuration\n * @param {boolean} incExtension Include the file name extension\n */\nvar _filename = function ( config )\n{\n	// Backwards compatibility\n	var filename = config.filename === '*' && config.title !== '*' && config.title !== undefined && config.title !== null && config.title !== '' ?\n		config.title :\n		config.filename;\n\n	if ( typeof filename === 'function' ) {\n		filename = filename();\n	}\n\n	if ( filename === undefined || filename === null ) {\n		return null;\n	}\n\n	if ( filename.indexOf( '*' ) !== -1 ) {\n		filename = filename.replace( '*', $('head > title').text() ).trim();\n	}\n\n	// Strip characters which the OS will object to\n	filename = filename.replace(/[^a-zA-Z0-9_\\u00A1-\\uFFFF\\.,\\-_ !\\(\\)]/g, \"\");\n\n	var extension = _stringOrFunction( config.extension );\n	if ( ! extension ) {\n		extension = '';\n	}\n\n	return filename + extension;\n};\n\n/**\n * Simply utility method to allow parameters to be given as a function\n *\n * @param {undefined|string|function} option Option\n * @return {null|string} Resolved value\n */\nvar _stringOrFunction = function ( option )\n{\n	if ( option === null || option === undefined ) {\n		return null;\n	}\n	else if ( typeof option === 'function' ) {\n		return option();\n	}\n	return option;\n};\n\n/**\n * Get the title for an exported file.\n *\n * @param {object} config	Button configuration\n */\nvar _title = function ( config )\n{\n	var title = _stringOrFunction( config.title );\n\n	return title === null ?\n		null : title.indexOf( '*' ) !== -1 ?\n			title.replace( '*', $('head > title').text() || 'Exported data' ) :\n			title;\n};\n\nvar _message = function ( dt, option, position )\n{\n	var message = _stringOrFunction( option );\n	if ( message === null ) {\n		return null;\n	}\n\n	var caption = $('caption', dt.table().container()).eq(0);\n	if ( message === '*' ) {\n		var side = caption.css( 'caption-side' );\n		if ( side !== position ) {\n			return null;\n		}\n\n		return caption.length ?\n			caption.text() :\n			'';\n	}\n\n	return message;\n};\n\n\n\n\nvar _exportTextarea = $('<textarea/>')[0];\nvar _exportData = function ( dt, inOpts )\n{\n	var config = $.extend( true, {}, {\n		rows:           null,\n		columns:        '',\n		modifier:       {\n			search: 'applied',\n			order:  'applied'\n		},\n		orthogonal:     'display',\n		stripHtml:      true,\n		stripNewlines:  true,\n		decodeEntities: true,\n		trim:           true,\n		format:         {\n			header: function ( d ) {\n				return Buttons.stripData( d, config );\n			},\n			footer: function ( d ) {\n				return Buttons.stripData( d, config );\n			},\n			body: function ( d ) {\n				return Buttons.stripData( d, config );\n			}\n		},\n		customizeData: null\n	}, inOpts );\n\n	var header = dt.columns( config.columns ).indexes().map( function (idx) {\n		var el = dt.column( idx ).header();\n		return config.format.header( el.innerHTML, idx, el );\n	} ).toArray();\n\n	var footer = dt.table().footer() ?\n		dt.columns( config.columns ).indexes().map( function (idx) {\n			var el = dt.column( idx ).footer();\n			return config.format.footer( el ? el.innerHTML : '', idx, el );\n		} ).toArray() :\n		null;\n	\n	// If Select is available on this table, and any rows are selected, limit the export\n	// to the selected rows. If no rows are selected, all rows will be exported. Specify\n	// a `selected` modifier to control directly.\n	var modifier = $.extend( {}, config.modifier );\n	if ( dt.select && typeof dt.select.info === 'function' && modifier.selected === undefined ) {\n		if ( dt.rows( config.rows, $.extend( { selected: true }, modifier ) ).any() ) {\n			$.extend( modifier, { selected: true } )\n		}\n	}\n\n	var rowIndexes = dt.rows( config.rows, modifier ).indexes().toArray();\n	var selectedCells = dt.cells( rowIndexes, config.columns );\n	var cells = selectedCells\n		.render( config.orthogonal )\n		.toArray();\n	var cellNodes = selectedCells\n		.nodes()\n		.toArray();\n\n	var columns = header.length;\n	var rows = columns > 0 ? cells.length / columns : 0;\n	var body = [];\n	var cellCounter = 0;\n\n	for ( var i=0, ien=rows ; i<ien ; i++ ) {\n		var row = [ columns ];\n\n		for ( var j=0 ; j<columns ; j++ ) {\n			row[j] = config.format.body( cells[ cellCounter ], i, j, cellNodes[ cellCounter ] );\n			cellCounter++;\n		}\n\n		body[i] = row;\n	}\n\n	var data = {\n		header: header,\n		footer: footer,\n		body:   body\n	};\n\n	if ( config.customizeData ) {\n		config.customizeData( data );\n	}\n\n	return data;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interface\n */\n\n// Attach to DataTables objects for global access\n$.fn.dataTable.Buttons = Buttons;\n$.fn.DataTable.Buttons = Buttons;\n\n\n\n// DataTables creation - check if the buttons have been defined for this table,\n// they will have been if the `B` option was used in `dom`, otherwise we should\n// create the buttons instance here so they can be inserted into the document\n// using the API. Listen for `init` for compatibility with pre 1.10.10, but to\n// be removed in future.\n$(document).on( 'init.dt plugin-init.dt', function (e, settings) {\n	if ( e.namespace !== 'dt' ) {\n		return;\n	}\n\n	var opts = settings.oInit.buttons || DataTable.defaults.buttons;\n\n	if ( opts && ! settings._buttons ) {\n		new Buttons( settings, opts ).container();\n	}\n} );\n\nfunction _init ( settings, options ) {\n	var api = new DataTable.Api( settings );\n	var opts = options\n		? options\n		: api.init().buttons || DataTable.defaults.buttons;\n\n	return new Buttons( api, opts ).container();\n}\n\n// DataTables `dom` feature option\nDataTable.ext.feature.push( {\n	fnInit: _init,\n	cFeature: \"B\"\n} );\n\n// DataTables 2 layout feature\nif ( DataTable.ext.features ) {\n	DataTable.ext.features.register( 'buttons', _init );\n}\n\n\nreturn Buttons;\n}));\n";
    }, 4392: function(t2) {
      t2.exports = "/*! FixedHeader 3.2.0\n * \xA92009-2021 SpryMedia Ltd - datatables.net/license\n */\n\n/**\n * @summary     FixedHeader\n * @description Fix a table's header or footer, so it is always visible while\n *              scrolling\n * @version     3.2.0\n * @file        dataTables.fixedHeader.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     www.sprymedia.co.uk/contact\n * @copyright   Copyright 2009-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net\n */\n\n(function( factory ){\n	if ( typeof define === 'function' && define.amd ) {\n		// AMD\n		define( ['jquery', 'datatables.net'], function ( $ ) {\n			return factory( $, window, document );\n		} );\n	}\n	else if ( typeof exports === 'object' ) {\n		// CommonJS\n		module.exports = function (root, $) {\n			if ( ! root ) {\n				root = window;\n			}\n\n			if ( ! $ || ! $.fn.dataTable ) {\n				$ = require('datatables.net')(root, $).$;\n			}\n\n			return factory( $, root, root.document );\n		};\n	}\n	else {\n		// Browser\n		factory( jQuery, window, document );\n	}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\nvar _instCounter = 0;\n\nvar FixedHeader = function ( dt, config ) {\n	// Sanity check - you just know it will happen\n	if ( ! (this instanceof FixedHeader) ) {\n		throw \"FixedHeader must be initialised with the 'new' keyword.\";\n	}\n\n	// Allow a boolean true for defaults\n	if ( config === true ) {\n		config = {};\n	}\n\n	dt = new DataTable.Api( dt );\n\n	this.c = $.extend( true, {}, FixedHeader.defaults, config );\n\n	this.s = {\n		dt: dt,\n		position: {\n			theadTop: 0,\n			tbodyTop: 0,\n			tfootTop: 0,\n			tfootBottom: 0,\n			width: 0,\n			left: 0,\n			tfootHeight: 0,\n			theadHeight: 0,\n			windowHeight: $(window).height(),\n			visible: true\n		},\n		headerMode: null,\n		footerMode: null,\n		autoWidth: dt.settings()[0].oFeatures.bAutoWidth,\n		namespace: '.dtfc'+(_instCounter++),\n		scrollLeft: {\n			header: -1,\n			footer: -1\n		},\n		enable: true\n	};\n\n	this.dom = {\n		floatingHeader: null,\n		thead: $(dt.table().header()),\n		tbody: $(dt.table().body()),\n		tfoot: $(dt.table().footer()),\n		header: {\n			host: null,\n			floating: null,\n			floatingParent: $('<div class=\"dtfh-floatingparent\">'),\n			placeholder: null\n		},\n		footer: {\n			host: null,\n			floating: null,\n			floatingParent: $('<div class=\"dtfh-floatingparent\">'),\n			placeholder: null\n		}\n	};\n\n	this.dom.header.host = this.dom.thead.parent();\n	this.dom.footer.host = this.dom.tfoot.parent();\n\n	var dtSettings = dt.settings()[0];\n	if ( dtSettings._fixedHeader ) {\n		throw \"FixedHeader already initialised on table \"+dtSettings.nTable.id;\n	}\n\n	dtSettings._fixedHeader = this;\n\n	this._constructor();\n};\n\n\n/*\n * Variable: FixedHeader\n * Purpose:  Prototype for FixedHeader\n * Scope:    global\n */\n$.extend( FixedHeader.prototype, {\n	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n	 * API methods\n	 */\n\n	/**\n	 * Kill off FH and any events\n	 */\n	destroy: function () {\n		this.s.dt.off( '.dtfc' );\n		$(window).off( this.s.namespace );\n\n		if ( this.c.header ) {\n			this._modeChange( 'in-place', 'header', true );\n		}\n\n		if ( this.c.footer && this.dom.tfoot.length ) {\n			this._modeChange( 'in-place', 'footer', true );\n		}\n	},\n\n	/**\n	 * Enable / disable the fixed elements\n	 *\n	 * @param  {boolean} enable `true` to enable, `false` to disable\n	 */\n	enable: function ( enable, update )\n	{\n		this.s.enable = enable;\n\n		if ( update || update === undefined ) {\n			this._positions();\n			this._scroll( true );\n		}\n	},\n\n	/**\n	 * Get enabled status\n	 */\n	enabled: function ()\n	{\n		return this.s.enable;\n	},\n	\n	/**\n	 * Set header offset \n	 *\n	 * @param  {int} new value for headerOffset\n	 */\n	headerOffset: function ( offset )\n	{\n		if ( offset !== undefined ) {\n			this.c.headerOffset = offset;\n			this.update();\n		}\n\n		return this.c.headerOffset;\n	},\n	\n	/**\n	 * Set footer offset\n	 *\n	 * @param  {int} new value for footerOffset\n	 */\n	footerOffset: function ( offset )\n	{\n		if ( offset !== undefined ) {\n			this.c.footerOffset = offset;\n			this.update();\n		}\n\n		return this.c.footerOffset;\n	},\n\n	\n	/**\n	 * Recalculate the position of the fixed elements and force them into place\n	 */\n	update: function (force)\n	{\n		var table = this.s.dt.table().node();\n\n		if ( $(table).is(':visible') ) {\n			this.enable( true, false );\n		}\n		else {\n			this.enable( false, false );\n		}\n\n		// Don't update if header is not in the document atm (due to\n		// async events)\n		if ($(table).children('thead').length === 0) {\n			return;\n		}\n\n		this._positions();\n		this._scroll( force !== undefined ? force : true );\n	},\n\n\n	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n	 * Constructor\n	 */\n	\n	/**\n	 * FixedHeader constructor - adding the required event listeners and\n	 * simple initialisation\n	 *\n	 * @private\n	 */\n	_constructor: function ()\n	{\n		var that = this;\n		var dt = this.s.dt;\n\n		$(window)\n			.on( 'scroll'+this.s.namespace, function () {\n				that._scroll();\n			} )\n			.on( 'resize'+this.s.namespace, DataTable.util.throttle( function () {\n				that.s.position.windowHeight = $(window).height();\n				that.update();\n			}, 50 ) );\n\n		var autoHeader = $('.fh-fixedHeader');\n		if ( ! this.c.headerOffset && autoHeader.length ) {\n			this.c.headerOffset = autoHeader.outerHeight();\n		}\n\n		var autoFooter = $('.fh-fixedFooter');\n		if ( ! this.c.footerOffset && autoFooter.length ) {\n			this.c.footerOffset = autoFooter.outerHeight();\n		}\n\n		dt\n			.on( 'column-reorder.dt.dtfc column-visibility.dt.dtfc column-sizing.dt.dtfc responsive-display.dt.dtfc', function (e, ctx) {\n				that.update();\n			} )\n			.on( 'draw.dt.dtfc', function (e, ctx) {\n				// For updates from our own table, don't reclone, but for all others, do\n				that.update(ctx === dt.settings()[0] ? false : true);\n			} );\n\n		dt.on( 'destroy.dtfc', function () {\n			that.destroy();\n		} );\n\n		this._positions();\n		$('div.dataTables_scrollHeadInner').height(this.s.position.theadHeight);\n		this._scroll();\n	},\n\n\n	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n	 * Private methods\n	 */\n\n	/**\n	 * Clone a fixed item to act as a place holder for the original element\n	 * which is moved into a clone of the table element, and moved around the\n	 * document to give the fixed effect.\n	 *\n	 * @param  {string}  item  'header' or 'footer'\n	 * @param  {boolean} force Force the clone to happen, or allow automatic\n	 *   decision (reuse existing if available)\n	 * @private\n	 */\n	_clone: function ( item, force )\n	{\n		var dt = this.s.dt;\n		var itemDom = this.dom[ item ];\n		var itemElement = item === 'header' ?\n			this.dom.thead :\n			this.dom.tfoot;\n\n		// If footer and scrolling is enabled then we don't clone\n		// Instead the table's height is decreased accordingly - see `_scroll()`\n		if (item === 'footer' && this._scrollEnabled()) {\n			return;\n		}	\n\n		if ( ! force && itemDom.floating ) {\n			// existing floating element - reuse it\n			itemDom.floating.removeClass( 'fixedHeader-floating fixedHeader-locked' );\n		}\n		else {\n			if ( itemDom.floating ) {\n				if(itemDom.placeholder !== null) {\n					itemDom.placeholder.remove();\n				}\n				this._unsize( item );\n				itemDom.floating.children().detach();\n				itemDom.floating.remove();\n			}\n\n			var tableNode = $(dt.table().node()); \n			var scrollBody = $(tableNode.parent());\n			var scrollEnabled = this._scrollEnabled();\n\n			itemDom.floating = $( dt.table().node().cloneNode( false ) )\n				.attr( 'aria-hidden', 'true' )\n				.css({\n					'table-layout': 'fixed',\n					top: 0,\n					left: 0\n				})\n				.removeAttr( 'id' )\n				.append( itemElement );\n\n			itemDom.floatingParent\n				.css({\n					width: scrollBody.width(),\n					overflow: 'hidden',\n					height: 'fit-content',\n					position: 'fixed',\n					left: scrollEnabled ? tableNode.offset().left + scrollBody.scrollLeft() : 0\n				})\n				.css(\n					item === 'header' ?\n						{\n							top: this.c.headerOffset,\n							bottom: ''\n						} :\n						{\n							top: '',\n							bottom: this.c.footerOffset\n						}\n				)\n				.addClass(item === 'footer' ? 'dtfh-floatingparentfoot' : 'dtfh-floatingparenthead')\n				.append(itemDom.floating)\n				.appendTo( 'body' );\n\n			this._stickyPosition(itemDom.floating, '-');\n\n			var scrollLeftUpdate = () => {\n				var scrollLeft = scrollBody.scrollLeft()\n				this.s.scrollLeft = {footer: scrollLeft, header: scrollLeft};\n				itemDom.floatingParent.scrollLeft(this.s.scrollLeft.header);\n			}\n\n			scrollLeftUpdate();\n			scrollBody.scroll(scrollLeftUpdate)\n\n			// Insert a fake thead/tfoot into the DataTable to stop it jumping around\n			itemDom.placeholder = itemElement.clone( false );\n			itemDom.placeholder\n				.find( '*[id]' )\n				.removeAttr( 'id' );\n\n			itemDom.host.prepend( itemDom.placeholder );\n\n			// Clone widths\n			this._matchWidths( itemDom.placeholder, itemDom.floating );\n		}\n	},\n\n	/**\n	 * This method sets the sticky position of the header elements to match fixed columns\n	 * @param {JQuery<HTMLElement>} el \n	 * @param {string} sign \n	 */\n	_stickyPosition(el, sign) {\n		if (this._scrollEnabled()) {\n			var that = this\n			var rtl = $(that.s.dt.table().node()).css('direction') === 'rtl';\n\n			el.find('th').each(function() {\n				// Find out if fixed header has previously set this column\n				if ($(this).css('position') === 'sticky') {\n					var right = $(this).css('right');\n					var left = $(this).css('left');\n					if (right !== 'auto' && !rtl) {\n						// New position either adds or dismisses the barWidth\n						var potential = +right.replace(/px/g, '') + (sign === '-' ? -1 : 1) * that.s.dt.settings()[0].oBrowser.barWidth;\n						$(this).css('right', potential > 0 ? potential : 0);\n					}\n					else if(left !== 'auto' && rtl) {\n						var potential = +left.replace(/px/g, '') + (sign === '-' ? -1 : 1) * that.s.dt.settings()[0].oBrowser.barWidth;\n						$(this).css('left', potential > 0 ? potential : 0);\n					}\n				}\n			});\n		}\n	},\n\n	/**\n	 * Copy widths from the cells in one element to another. This is required\n	 * for the footer as the footer in the main table takes its sizes from the\n	 * header columns. That isn't present in the footer so to have it still\n	 * align correctly, the sizes need to be copied over. It is also required\n	 * for the header when auto width is not enabled\n	 *\n	 * @param  {jQuery} from Copy widths from\n	 * @param  {jQuery} to   Copy widths to\n	 * @private\n	 */\n	_matchWidths: function ( from, to ) {\n		var get = function ( name ) {\n			return $(name, from)\n				.map( function () {\n					return $(this).css('width').replace(/[^\\d\\.]/g, '') * 1;\n				} ).toArray();\n		};\n\n		var set = function ( name, toWidths ) {\n			$(name, to).each( function ( i ) {\n				$(this).css( {\n					width: toWidths[i],\n					minWidth: toWidths[i]\n				} );\n			} );\n		};\n\n		var thWidths = get( 'th' );\n		var tdWidths = get( 'td' );\n\n		set( 'th', thWidths );\n		set( 'td', tdWidths );\n	},\n\n	/**\n	 * Remove assigned widths from the cells in an element. This is required\n	 * when inserting the footer back into the main table so the size is defined\n	 * by the header columns and also when auto width is disabled in the\n	 * DataTable.\n	 *\n	 * @param  {string} item The `header` or `footer`\n	 * @private\n	 */\n	_unsize: function ( item ) {\n		var el = this.dom[ item ].floating;\n\n		if ( el && (item === 'footer' || (item === 'header' && ! this.s.autoWidth)) ) {\n			$('th, td', el).css( {\n				width: '',\n				minWidth: ''\n			} );\n		}\n		else if ( el && item === 'header' ) {\n			$('th, td', el).css( 'min-width', '' );\n		}\n	},\n\n	/**\n	 * Reposition the floating elements to take account of horizontal page\n	 * scroll\n	 *\n	 * @param  {string} item       The `header` or `footer`\n	 * @param  {int}    scrollLeft Document scrollLeft\n	 * @private\n	 */\n	_horizontal: function ( item, scrollLeft )\n	{\n		var itemDom = this.dom[ item ];\n		var position = this.s.position;\n		var lastScrollLeft = this.s.scrollLeft;\n\n		if ( itemDom.floating && lastScrollLeft[ item ] !== scrollLeft ) {\n			// If scrolling is enabled we need to match the floating header to the body\n			if (this._scrollEnabled()) {\n				var newScrollLeft = $($(this.s.dt.table().node()).parent()).scrollLeft()\n				itemDom.floating.scrollLeft(newScrollLeft);\n				itemDom.floatingParent.scrollLeft(newScrollLeft);\n			}\n\n			lastScrollLeft[ item ] = scrollLeft;\n		}\n	},\n\n	/**\n	 * Change from one display mode to another. Each fixed item can be in one\n	 * of:\n	 *\n	 * * `in-place` - In the main DataTable\n	 * * `in` - Floating over the DataTable\n	 * * `below` - (Header only) Fixed to the bottom of the table body\n	 * * `above` - (Footer only) Fixed to the top of the table body\n	 * \n	 * @param  {string}  mode        Mode that the item should be shown in\n	 * @param  {string}  item        'header' or 'footer'\n	 * @param  {boolean} forceChange Force a redraw of the mode, even if already\n	 *     in that mode.\n	 * @private\n	 */\n	_modeChange: function ( mode, item, forceChange )\n	{\n		var dt = this.s.dt;\n		var itemDom = this.dom[ item ];\n		var position = this.s.position;\n\n		// Just determine if scroll is enabled once\n		var scrollEnabled = this._scrollEnabled();\n\n		// If footer and scrolling is enabled then we don't clone\n		// Instead the table's height is decreased accordingly - see `_scroll()`\n		if (item === 'footer' && scrollEnabled) {\n			return;\n		}		\n\n		// It isn't trivial to add a !important css attribute...\n		var importantWidth = function (w) {\n			itemDom.floating.attr('style', function(i,s) {\n				return (s || '') + 'width: '+w+'px !important;';\n			});\n\n			// If not scrolling also have to update the floatingParent\n			if (!scrollEnabled) {\n				itemDom.floatingParent.attr('style', function(i,s) {\n					return (s || '') + 'width: '+w+'px !important;';\n				});\n			}\n		};\n\n		// Record focus. Browser's will cause input elements to loose focus if\n		// they are inserted else where in the doc\n		var tablePart = this.dom[ item==='footer' ? 'tfoot' : 'thead' ];\n		var focus = $.contains( tablePart[0], document.activeElement ) ?\n			document.activeElement :\n			null;\n		var scrollBody = $($(this.s.dt.table().node()).parent());\n\n		if ( mode === 'in-place' ) {\n			// Insert the header back into the table's real header\n			if ( itemDom.placeholder ) {\n				itemDom.placeholder.remove();\n				itemDom.placeholder = null;\n			}\n\n			this._unsize( item );\n\n			if ( item === 'header' ) {\n				itemDom.host.prepend( tablePart );\n			}\n			else {\n				itemDom.host.append( tablePart );\n			}\n\n			if ( itemDom.floating ) {\n				itemDom.floating.remove();\n				itemDom.floating = null;\n				this._stickyPosition(itemDom.host, '+');\n			}\n\n			if ( itemDom.floatingParent ) {\n				itemDom.floatingParent.remove();\n			}\n\n			$($(itemDom.host.parent()).parent()).scrollLeft(scrollBody.scrollLeft())\n		}\n		else if ( mode === 'in' ) {\n			// Remove the header from the read header and insert into a fixed\n			// positioned floating table clone\n			this._clone( item, forceChange );\n\n			// Get useful position values\n			var scrollOffset = scrollBody.offset();\n			var windowTop = $(document).scrollTop();\n			var windowHeight = $(window).height();\n			var windowBottom = windowTop + windowHeight;\n			var bodyTop = scrollEnabled ? scrollOffset.top : position.tbodyTop;\n			var bodyBottom = scrollEnabled ? scrollOffset.top + scrollBody.outerHeight() : position.tfootTop\n\n			// Calculate the amount that the footer or header needs to be shuffled\n			var shuffle = item === 'footer' ?\n				// footer and top of body isn't on screen\n				bodyTop > windowBottom ?\n					// Yes - push the footer below\n					position.tfootHeight :\n					// No - bottom set to the gap between the top of the body and the bottom of the window\n					bodyTop + position.tfootHeight - windowBottom :\n				// Otherwise must be a header so get the difference from the bottom of the\n				//  desired floating header and the bottom of the table body\n				windowTop + this.c.headerOffset + position.theadHeight - bodyBottom\n				\n			// Set the top or bottom based off of the offset and the shuffle value\n			var prop = item === 'header' ? 'top' : 'bottom';\n			var val = this.c[item+'Offset'] - (shuffle > 0 ? shuffle : 0);\n\n			itemDom.floating.addClass( 'fixedHeader-floating' );\n			itemDom.floatingParent\n				.css(prop, val)\n				.css( {\n					'left': position.left,\n					'height': item === 'header' ? position.theadHeight : position.tfootHeight,\n					'z-index': 2\n				})\n				.append(itemDom.floating);\n\n			importantWidth(position.width);\n\n			if ( item === 'footer' ) {\n				itemDom.floating.css( 'top', '' );\n			}\n		}\n		else if ( mode === 'below' ) { // only used for the header\n			// Fix the position of the floating header at base of the table body\n			this._clone( item, forceChange );\n\n			itemDom.floating.addClass( 'fixedHeader-locked' );\n			itemDom.floatingParent.css({\n				position: 'absolute',\n				top: position.tfootTop - position.theadHeight,\n				left: position.left+'px'\n			});\n\n			importantWidth(position.width);\n		}\n		else if ( mode === 'above' ) { // only used for the footer\n			// Fix the position of the floating footer at top of the table body\n			this._clone( item, forceChange );\n\n			itemDom.floating.addClass( 'fixedHeader-locked' );\n			itemDom.floatingParent.css({\n				position: 'absolute',\n				top: position.tbodyTop,\n				left: position.left+'px'\n			});\n\n			importantWidth(position.width);\n		}\n\n		// Restore focus if it was lost\n		if ( focus && focus !== document.activeElement ) {\n			setTimeout( function () {\n				focus.focus();\n			}, 10 );\n		}\n\n		this.s.scrollLeft.header = -1;\n		this.s.scrollLeft.footer = -1;\n		this.s[item+'Mode'] = mode;\n	},\n\n	/**\n	 * Cache the positional information that is required for the mode\n	 * calculations that FixedHeader performs.\n	 *\n	 * @private\n	 */\n	_positions: function ()\n	{\n		var dt = this.s.dt;\n		var table = dt.table();\n		var position = this.s.position;\n		var dom = this.dom;\n		var tableNode = $(table.node());\n		var scrollEnabled = this._scrollEnabled();\n\n		// Need to use the header and footer that are in the main table,\n		// regardless of if they are clones, since they hold the positions we\n		// want to measure from\n		var thead = $(dt.table().header());\n		var tfoot = $(dt.table().footer());\n		var tbody = dom.tbody;\n		var scrollBody = tableNode.parent();\n\n		position.visible = tableNode.is(':visible');\n		position.width = tableNode.outerWidth();\n		position.left = tableNode.offset().left;\n		position.theadTop = thead.offset().top;\n		position.tbodyTop = scrollEnabled ? scrollBody.offset().top : tbody.offset().top;\n		position.tbodyHeight = scrollEnabled ? scrollBody.outerHeight() : tbody.outerHeight();\n		position.theadHeight = thead.outerHeight();\n		position.theadBottom = position.theadTop + position.theadHeight;\n\n		if ( tfoot.length ) {\n			position.tfootTop = position.tbodyTop + position.tbodyHeight; //tfoot.offset().top;\n			position.tfootBottom = position.tfootTop + tfoot.outerHeight();\n			position.tfootHeight = tfoot.outerHeight();\n		}\n		else {\n			position.tfootTop = position.tbodyTop + tbody.outerHeight();\n			position.tfootBottom = position.tfootTop;\n			position.tfootHeight = position.tfootTop;\n		}\n	},\n\n\n	/**\n	 * Mode calculation - determine what mode the fixed items should be placed\n	 * into.\n	 *\n	 * @param  {boolean} forceChange Force a redraw of the mode, even if already\n	 *     in that mode.\n	 * @private\n	 */\n	_scroll: function ( forceChange )\n	{\n		// ScrollBody details\n		var scrollEnabled = this._scrollEnabled();\n		var scrollBody = $(this.s.dt.table().node()).parent();\n		var scrollOffset =  scrollBody.offset();\n		var scrollHeight =  scrollBody.outerHeight();\n\n		// Window details\n		var windowLeft = $(document).scrollLeft();\n		var windowTop = $(document).scrollTop();\n		var windowHeight = $(window).height();\n		var windowBottom = windowHeight + windowTop\n\n\n		var position = this.s.position;\n		var headerMode, footerMode;\n\n		// Body Details\n		var bodyTop = (scrollEnabled ? scrollOffset.top : position.tbodyTop);\n		var bodyLeft = (scrollEnabled ? scrollOffset.left : position.left);\n		var bodyBottom = (scrollEnabled ? scrollOffset.top + scrollHeight : position.tfootTop);\n		var bodyWidth = (scrollEnabled ? scrollBody.outerWidth() : position.tbodyWidth);\n\n		var windowBottom = windowTop + windowHeight;\n\n		if ( this.c.header ) {\n			if ( ! this.s.enable ) {\n				headerMode = 'in-place';\n			}\n			// The header is in it's normal place if the body top is lower than\n			//  the scroll of the window plus the headerOffset and the height of the header\n			else if ( ! position.visible || windowTop + this.c.headerOffset + position.theadHeight <= bodyTop) {\n				headerMode = 'in-place';\n			}\n			// The header should be floated if\n			else if (\n				// The scrolling plus the header offset plus the height of the header is lower than the top of the body\n				windowTop + this.c.headerOffset + position.theadHeight > bodyTop &&\n				// And the scrolling at the top plus the header offset is above the bottom of the body\n				windowTop + this.c.headerOffset < bodyBottom\n			) {\n				headerMode = 'in';\n				var scrollBody = $($(this.s.dt.table().node()).parent());\n\n				// Further to the above, If the scrolling plus the header offset plus the header height is lower\n				// than the bottom of the table a shuffle is required so have to force the calculation\n				if(windowTop + this.c.headerOffset + position.theadHeight > bodyBottom || this.dom.header.floatingParent === undefined){\n					forceChange = true;\n				}\n				else {\n					this.dom.header.floatingParent\n						.css({\n							'top': this.c.headerOffset,\n							'position': 'fixed'\n						})\n						.append(this.dom.header.floating);\n				}\n			}\n			// Anything else and the view is below the table\n			else {\n				headerMode = 'below';\n			}\n\n			if ( forceChange || headerMode !== this.s.headerMode ) {\n				this._modeChange( headerMode, 'header', forceChange );\n			}\n\n			this._horizontal( 'header', windowLeft );\n		}\n\n		var header = {\n			offset: {top: 0, left: 0},\n			height: 0\n		}\n		var footer = {\n			offset: {top: 0, left: 0},\n			height: 0\n		}\n\n		if ( this.c.footer && this.dom.tfoot.length ) {\n			if ( ! this.s.enable ) {\n				footerMode = 'in-place';\n			}\n			else if ( ! position.visible || position.tfootBottom + this.c.footerOffset <= windowBottom ) {\n				footerMode = 'in-place';\n			}\n			else if (\n				bodyBottom + position.tfootHeight + this.c.footerOffset > windowBottom &&\n				bodyTop + this.c.footerOffset < windowBottom\n			) {\n				footerMode = 'in';\n				forceChange = true;\n			}\n			else {\n				footerMode = 'above';\n			}\n			\n			if ( forceChange || footerMode !== this.s.footerMode ) {\n				this._modeChange( footerMode, 'footer', forceChange );\n			}\n\n			this._horizontal( 'footer', windowLeft );\n			\n			var getOffsetHeight = (el) => {\n				return {\n					offset: el.offset(),\n					height: el.outerHeight()\n				}\n			}\n		\n			header = this.dom.header.floating ? getOffsetHeight(this.dom.header.floating) : getOffsetHeight(this.dom.thead);\n			footer = this.dom.footer.floating ? getOffsetHeight(this.dom.footer.floating) : getOffsetHeight(this.dom.tfoot);\n\n			// If scrolling is enabled and the footer is off the screen\n			if (scrollEnabled && footer.offset.top > windowTop){// && footer.offset.top >= windowBottom) {\n				// Calculate the gap between the top of the scrollBody and the top of the window\n				var overlap = windowTop - scrollOffset.top;\n				// The new height is the bottom of the window\n				var newHeight = windowBottom +\n					// If the gap between the top of the scrollbody and the window is more than\n					//  the height of the header then the top of the table is still visible so add that gap\n					// Doing this has effectively calculated the height from the top of the table to the bottom of the current page\n					(overlap > -header.height ? overlap : 0) -\n					// Take from that\n					(\n						// The top of the header plus\n						header.offset.top +\n						// The header height if the standard header is present\n						(overlap < -header.height ? header.height : 0) +\n						// And the height of the footer\n						footer.height\n					)\n\n					// Don't want a negative height\n				if (newHeight < 0) {\n					newHeight = 0;\n				}\n\n				// At the end of the above calculation the space between the header (top of the page if floating)\n				// and the point just above the footer should be the new value for the height of the table.\n				scrollBody.outerHeight(newHeight);\n				\n				// Need some rounding here as sometimes very small decimal places are encountered\n				// If the actual height is bigger or equal to the height we just applied then the footer is \"Floating\"\n				if(Math.round(scrollBody.outerHeight()) >= Math.round(newHeight)) {\n					$(this.dom.tfoot.parent()).addClass(\"fixedHeader-floating\");\n				}\n				// Otherwise max-width has kicked in so it is not floating\n				else {\n					$(this.dom.tfoot.parent()).removeClass(\"fixedHeader-floating\");\n				}\n			}\n		}\n\n		if(this.dom.header.floating){\n			this.dom.header.floatingParent.css('left', bodyLeft-windowLeft);\n		}\n		if(this.dom.footer.floating){\n			this.dom.footer.floatingParent.css('left', bodyLeft-windowLeft);\n		}\n\n		// If fixed columns is being used on this table then the blockers need to be copied across\n		// Cloning these is cleaner than creating as our own as it will keep consistency with fixedColumns automatically\n		// ASSUMING that the class remains the same\n		if (this.s.dt.settings()[0]._fixedColumns !== undefined) {\n			var adjustBlocker = (side, end, el) => {\n				if (el === undefined) {\n					let blocker = $('div.dtfc-'+side+'-'+end+'-blocker');\n					el = blocker.length === 0 ?\n						null :\n						blocker.clone().appendTo('body').css('z-index', 1);\n				}\n				if(el !== null) {\n					el.css({\n						top: end === 'top' ? header.offset.top : footer.offset.top,\n						left: side === 'right' ? bodyLeft + bodyWidth - el.width() : bodyLeft\n					});\n				}\n\n				return el;\n			}\n\n			// Adjust all blockers\n			this.dom.header.rightBlocker = adjustBlocker('right', 'top', this.dom.header.rightBlocker);\n			this.dom.header.leftBlocker = adjustBlocker('left', 'top', this.dom.header.leftBlocker);\n			this.dom.footer.rightBlocker = adjustBlocker('right', 'bottom', this.dom.footer.rightBlocker);\n			this.dom.footer.leftBlocker = adjustBlocker('left', 'bottom', this.dom.footer.leftBlocker);\n		}\n	},\n\n	/**\n	 * Function to check if scrolling is enabled on the table or not\n	 * @returns Boolean value indicating if scrolling on the table is enabled or not\n	 */\n	_scrollEnabled: function() {\n		var oScroll = this.s.dt.settings()[0].oScroll;\n		if(oScroll.sY !== \"\" || oScroll.sX !== \"\") {\n			return true;\n		}\n		return false\n	}\n} );\n\n\n/**\n * Version\n * @type {String}\n * @static\n */\nFixedHeader.version = \"3.2.0\";\n\n/**\n * Defaults\n * @type {Object}\n * @static\n */\nFixedHeader.defaults = {\n	header: true,\n	footer: false,\n	headerOffset: 0,\n	footerOffset: 0\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables interfaces\n */\n\n// Attach for constructor access\n$.fn.dataTable.FixedHeader = FixedHeader;\n$.fn.DataTable.FixedHeader = FixedHeader;\n\n\n// DataTables creation - check if the FixedHeader option has been defined on the\n// table and if so, initialise\n$(document).on( 'init.dt.dtfh', function (e, settings, json) {\n	if ( e.namespace !== 'dt' ) {\n		return;\n	}\n\n	var init = settings.oInit.fixedHeader;\n	var defaults = DataTable.defaults.fixedHeader;\n\n	if ( (init || defaults) && ! settings._fixedHeader ) {\n		var opts = $.extend( {}, defaults, init );\n\n		if ( init !== false ) {\n			new FixedHeader( settings, opts );\n		}\n	}\n} );\n\n// DataTables API methods\nDataTable.Api.register( 'fixedHeader()', function () {} );\n\nDataTable.Api.register( 'fixedHeader.adjust()', function () {\n	return this.iterator( 'table', function ( ctx ) {\n		var fh = ctx._fixedHeader;\n\n		if ( fh ) {\n			fh.update();\n		}\n	} );\n} );\n\nDataTable.Api.register( 'fixedHeader.enable()', function ( flag ) {\n	return this.iterator( 'table', function ( ctx ) {\n		var fh = ctx._fixedHeader;\n\n		flag = ( flag !== undefined ? flag : true );\n		if ( fh && flag !== fh.enabled() ) {\n			fh.enable( flag );\n		}\n	} );\n} );\n\nDataTable.Api.register( 'fixedHeader.enabled()', function () {\n	if ( this.context.length ) {\n		var fh = this.context[0]._fixedHeader;\n\n		if ( fh ) {\n			return fh.enabled();\n		}\n	}\n\n	return false;\n} );\n\nDataTable.Api.register( 'fixedHeader.disable()', function ( ) {\n	return this.iterator( 'table', function ( ctx ) {\n		var fh = ctx._fixedHeader;\n\n		if ( fh && fh.enabled() ) {\n			fh.enable( false );\n		}\n	} );\n} );\n\n$.each( ['header', 'footer'], function ( i, el ) {\n	DataTable.Api.register( 'fixedHeader.'+el+'Offset()', function ( offset ) {\n		var ctx = this.context;\n\n		if ( offset === undefined ) {\n			return ctx.length && ctx[0]._fixedHeader ?\n				ctx[0]._fixedHeader[el +'Offset']() :\n				undefined;\n		}\n\n		return this.iterator( 'table', function ( ctx ) {\n			var fh = ctx._fixedHeader;\n\n			if ( fh ) {\n				fh[ el +'Offset' ]( offset );\n			}\n		} );\n	} );\n} );\n\n\nreturn FixedHeader;\n}));\n";
    }, 7158: function(t2) {
      t2.exports = `/*! Responsive 2.2.9
 * 2014-2021 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     Responsive
 * @description Responsive tables plug-in for DataTables
 * @version     2.2.9
 * @file        dataTables.responsive.js
 * @author      SpryMedia Ltd (www.sprymedia.co.uk)
 * @contact     www.sprymedia.co.uk/contact
 * @copyright   Copyright 2014-2021 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license/mit
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */
(function( factory ){
	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery', 'datatables.net'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				root = window;
			}

			if ( ! $ || ! $.fn.dataTable ) {
				$ = require('datatables.net')(root, $).$;
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		factory( jQuery, window, document );
	}
}(function( $, window, document, undefined ) {
'use strict';
var DataTable = $.fn.dataTable;


/**
 * Responsive is a plug-in for the DataTables library that makes use of
 * DataTables' ability to change the visibility of columns, changing the
 * visibility of columns so the displayed columns fit into the table container.
 * The end result is that complex tables will be dynamically adjusted to fit
 * into the viewport, be it on a desktop, tablet or mobile browser.
 *
 * Responsive for DataTables has two modes of operation, which can used
 * individually or combined:
 *
 * * Class name based control - columns assigned class names that match the
 *   breakpoint logic can be shown / hidden as required for each breakpoint.
 * * Automatic control - columns are automatically hidden when there is no
 *   room left to display them. Columns removed from the right.
 *
 * In additional to column visibility control, Responsive also has built into
 * options to use DataTables' child row display to show / hide the information
 * from the table that has been hidden. There are also two modes of operation
 * for this child row display:
 *
 * * Inline - when the control element that the user can use to show / hide
 *   child rows is displayed inside the first column of the table.
 * * Column - where a whole column is dedicated to be the show / hide control.
 *
 * Initialisation of Responsive is performed by:
 *
 * * Adding the class \`responsive\` or \`dt-responsive\` to the table. In this case
 *   Responsive will automatically be initialised with the default configuration
 *   options when the DataTable is created.
 * * Using the \`responsive\` option in the DataTables configuration options. This
 *   can also be used to specify the configuration options, or simply set to
 *   \`true\` to use the defaults.
 *
 *  @class
 *  @param {object} settings DataTables settings object for the host table
 *  @param {object} [opts] Configuration options
 *  @requires jQuery 1.7+
 *  @requires DataTables 1.10.3+
 *
 *  @example
 *      $('#example').DataTable( {
 *        responsive: true
 *      } );
 *    } );
 */
var Responsive = function ( settings, opts ) {
	// Sanity check that we are using DataTables 1.10 or newer
	if ( ! DataTable.versionCheck || ! DataTable.versionCheck( '1.10.10' ) ) {
		throw 'DataTables Responsive requires DataTables 1.10.10 or newer';
	}

	this.s = {
		dt: new DataTable.Api( settings ),
		columns: [],
		current: []
	};

	// Check if responsive has already been initialised on this table
	if ( this.s.dt.settings()[0].responsive ) {
		return;
	}

	// details is an object, but for simplicity the user can give it as a string
	// or a boolean
	if ( opts && typeof opts.details === 'string' ) {
		opts.details = { type: opts.details };
	}
	else if ( opts && opts.details === false ) {
		opts.details = { type: false };
	}
	else if ( opts && opts.details === true ) {
		opts.details = { type: 'inline' };
	}

	this.c = $.extend( true, {}, Responsive.defaults, DataTable.defaults.responsive, opts );
	settings.responsive = this;
	this._constructor();
};

$.extend( Responsive.prototype, {
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Constructor
	 */

	/**
	 * Initialise the Responsive instance
	 *
	 * @private
	 */
	_constructor: function ()
	{
		var that = this;
		var dt = this.s.dt;
		var dtPrivateSettings = dt.settings()[0];
		var oldWindowWidth = $(window).innerWidth();

		dt.settings()[0]._responsive = this;

		// Use DataTables' throttle function to avoid processor thrashing on
		// resize
		$(window).on( 'resize.dtr orientationchange.dtr', DataTable.util.throttle( function () {
			// iOS has a bug whereby resize can fire when only scrolling
			// See: http://stackoverflow.com/questions/8898412
			var width = $(window).innerWidth();

			if ( width !== oldWindowWidth ) {
				that._resize();
				oldWindowWidth = width;
			}
		} ) );

		// DataTables doesn't currently trigger an event when a row is added, so
		// we need to hook into its private API to enforce the hidden rows when
		// new data is added
		dtPrivateSettings.oApi._fnCallbackReg( dtPrivateSettings, 'aoRowCreatedCallback', function (tr, data, idx) {
			if ( $.inArray( false, that.s.current ) !== -1 ) {
				$('>td, >th', tr).each( function ( i ) {
					var idx = dt.column.index( 'toData', i );

					if ( that.s.current[idx] === false ) {
						$(this).css('display', 'none');
					}
				} );
			}
		} );

		// Destroy event handler
		dt.on( 'destroy.dtr', function () {
			dt.off( '.dtr' );
			$( dt.table().body() ).off( '.dtr' );
			$(window).off( 'resize.dtr orientationchange.dtr' );
			dt.cells('.dtr-control').nodes().to$().removeClass('dtr-control');

			// Restore the columns that we've hidden
			$.each( that.s.current, function ( i, val ) {
				if ( val === false ) {
					that._setColumnVis( i, true );
				}
			} );
		} );

		// Reorder the breakpoints array here in case they have been added out
		// of order
		this.c.breakpoints.sort( function (a, b) {
			return a.width < b.width ? 1 :
				a.width > b.width ? -1 : 0;
		} );

		this._classLogic();
		this._resizeAuto();

		// Details handler
		var details = this.c.details;

		if ( details.type !== false ) {
			that._detailsInit();

			// DataTables will trigger this event on every column it shows and
			// hides individually
			dt.on( 'column-visibility.dtr', function () {
				// Use a small debounce to allow multiple columns to be set together
				if ( that._timer ) {
					clearTimeout( that._timer );
				}

				that._timer = setTimeout( function () {
					that._timer = null;

					that._classLogic();
					that._resizeAuto();
					that._resize(true);

					that._redrawChildren();
				}, 100 );
			} );

			// Redraw the details box on each draw which will happen if the data
			// has changed. This is used until DataTables implements a native
			// \`updated\` event for rows
			dt.on( 'draw.dtr', function () {
				that._redrawChildren();
			} );

			$(dt.table().node()).addClass( 'dtr-'+details.type );
		}

		dt.on( 'column-reorder.dtr', function (e, settings, details) {
			that._classLogic();
			that._resizeAuto();
			that._resize(true);
		} );

		// Change in column sizes means we need to calc
		dt.on( 'column-sizing.dtr', function () {
			that._resizeAuto();
			that._resize();
		});

		// On Ajax reload we want to reopen any child rows which are displayed
		// by responsive
		dt.on( 'preXhr.dtr', function () {
			var rowIds = [];
			dt.rows().every( function () {
				if ( this.child.isShown() ) {
					rowIds.push( this.id(true) );
				}
			} );

			dt.one( 'draw.dtr', function () {
				that._resizeAuto();
				that._resize();

				dt.rows( rowIds ).every( function () {
					that._detailsDisplay( this, false );
				} );
			} );
		});

		dt
			.on( 'draw.dtr', function () {
				that._controlClass();
			})
			.on( 'init.dtr', function (e, settings, details) {
				if ( e.namespace !== 'dt' ) {
					return;
				}

				that._resizeAuto();
				that._resize();

				// If columns were hidden, then DataTables needs to adjust the
				// column sizing
				if ( $.inArray( false, that.s.current ) ) {
					dt.columns.adjust();
				}
			} );

		// First pass - draw the table for the current viewport size
		this._resize();
	},


	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Private methods
	 */

	/**
	 * Calculate the visibility for the columns in a table for a given
	 * breakpoint. The result is pre-determined based on the class logic if
	 * class names are used to control all columns, but the width of the table
	 * is also used if there are columns which are to be automatically shown
	 * and hidden.
	 *
	 * @param  {string} breakpoint Breakpoint name to use for the calculation
	 * @return {array} Array of boolean values initiating the visibility of each
	 *   column.
	 *  @private
	 */
	_columnsVisiblity: function ( breakpoint )
	{
		var dt = this.s.dt;
		var columns = this.s.columns;
		var i, ien;

		// Create an array that defines the column ordering based first on the
		// column's priority, and secondly the column index. This allows the
		// columns to be removed from the right if the priority matches
		var order = columns
			.map( function ( col, idx ) {
				return {
					columnIdx: idx,
					priority: col.priority
				};
			} )
			.sort( function ( a, b ) {
				if ( a.priority !== b.priority ) {
					return a.priority - b.priority;
				}
				return a.columnIdx - b.columnIdx;
			} );

		// Class logic - determine which columns are in this breakpoint based
		// on the classes. If no class control (i.e. \`auto\`) then \`-\` is used
		// to indicate this to the rest of the function
		var display = $.map( columns, function ( col, i ) {
			if ( dt.column(i).visible() === false ) {
				return 'not-visible';
			}
			return col.auto && col.minWidth === null ?
				false :
				col.auto === true ?
					'-' :
					$.inArray( breakpoint, col.includeIn ) !== -1;
		} );

		// Auto column control - first pass: how much width is taken by the
		// ones that must be included from the non-auto columns
		var requiredWidth = 0;
		for ( i=0, ien=display.length ; i<ien ; i++ ) {
			if ( display[i] === true ) {
				requiredWidth += columns[i].minWidth;
			}
		}

		// Second pass, use up any remaining width for other columns. For
		// scrolling tables we need to subtract the width of the scrollbar. It
		// may not be requires which makes this sub-optimal, but it would
		// require another full redraw to make complete use of those extra few
		// pixels
		var scrolling = dt.settings()[0].oScroll;
		var bar = scrolling.sY || scrolling.sX ? scrolling.iBarWidth : 0;
		var widthAvailable = dt.table().container().offsetWidth - bar;
		var usedWidth = widthAvailable - requiredWidth;

		// Control column needs to always be included. This makes it sub-
		// optimal in terms of using the available with, but to stop layout
		// thrashing or overflow. Also we need to account for the control column
		// width first so we know how much width is available for the other
		// columns, since the control column might not be the first one shown
		for ( i=0, ien=display.length ; i<ien ; i++ ) {
			if ( columns[i].control ) {
				usedWidth -= columns[i].minWidth;
			}
		}

		// Allow columns to be shown (counting by priority and then right to
		// left) until we run out of room
		var empty = false;
		for ( i=0, ien=order.length ; i<ien ; i++ ) {
			var colIdx = order[i].columnIdx;

			if ( display[colIdx] === '-' && ! columns[colIdx].control && columns[colIdx].minWidth ) {
				// Once we've found a column that won't fit we don't let any
				// others display either, or columns might disappear in the
				// middle of the table
				if ( empty || usedWidth - columns[colIdx].minWidth < 0 ) {
					empty = true;
					display[colIdx] = false;
				}
				else {
					display[colIdx] = true;
				}

				usedWidth -= columns[colIdx].minWidth;
			}
		}

		// Determine if the 'control' column should be shown (if there is one).
		// This is the case when there is a hidden column (that is not the
		// control column). The two loops look inefficient here, but they are
		// trivial and will fly through. We need to know the outcome from the
		// first , before the action in the second can be taken
		var showControl = false;

		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( ! columns[i].control && ! columns[i].never && display[i] === false ) {
				showControl = true;
				break;
			}
		}

		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( columns[i].control ) {
				display[i] = showControl;
			}

			// Replace not visible string with false from the control column detection above
			if ( display[i] === 'not-visible' ) {
				display[i] = false;
			}
		}

		// Finally we need to make sure that there is at least one column that
		// is visible
		if ( $.inArray( true, display ) === -1 ) {
			display[0] = true;
		}

		return display;
	},


	/**
	 * Create the internal \`columns\` array with information about the columns
	 * for the table. This includes determining which breakpoints the column
	 * will appear in, based upon class names in the column, which makes up the
	 * vast majority of this method.
	 *
	 * @private
	 */
	_classLogic: function ()
	{
		var that = this;
		var calc = {};
		var breakpoints = this.c.breakpoints;
		var dt = this.s.dt;
		var columns = dt.columns().eq(0).map( function (i) {
			var column = this.column(i);
			var className = column.header().className;
			var priority = dt.settings()[0].aoColumns[i].responsivePriority;
			var dataPriority = column.header().getAttribute('data-priority');

			if ( priority === undefined ) {
				priority = dataPriority === undefined || dataPriority === null?
					10000 :
					dataPriority * 1;
			}

			return {
				className: className,
				includeIn: [],
				auto:      false,
				control:   false,
				never:     className.match(/\\bnever\\b/) ? true : false,
				priority:  priority
			};
		} );

		// Simply add a breakpoint to \`includeIn\` array, ensuring that there are
		// no duplicates
		var add = function ( colIdx, name ) {
			var includeIn = columns[ colIdx ].includeIn;

			if ( $.inArray( name, includeIn ) === -1 ) {
				includeIn.push( name );
			}
		};

		var column = function ( colIdx, name, operator, matched ) {
			var size, i, ien;

			if ( ! operator ) {
				columns[ colIdx ].includeIn.push( name );
			}
			else if ( operator === 'max-' ) {
				// Add this breakpoint and all smaller
				size = that._find( name ).width;

				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].width <= size ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
			else if ( operator === 'min-' ) {
				// Add this breakpoint and all larger
				size = that._find( name ).width;

				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].width >= size ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
			else if ( operator === 'not-' ) {
				// Add all but this breakpoint
				for ( i=0, ien=breakpoints.length ; i<ien ; i++ ) {
					if ( breakpoints[i].name.indexOf( matched ) === -1 ) {
						add( colIdx, breakpoints[i].name );
					}
				}
			}
		};

		// Loop over each column and determine if it has a responsive control
		// class
		columns.each( function ( col, i ) {
			var classNames = col.className.split(' ');
			var hasClass = false;

			// Split the class name up so multiple rules can be applied if needed
			for ( var k=0, ken=classNames.length ; k<ken ; k++ ) {
				var className = classNames[k].trim();

				if ( className === 'all' ) {
					// Include in all
					hasClass = true;
					col.includeIn = $.map( breakpoints, function (a) {
						return a.name;
					} );
					return;
				}
				else if ( className === 'none' || col.never ) {
					// Include in none (default) and no auto
					hasClass = true;
					return;
				}
				else if ( className === 'control' || className === 'dtr-control' ) {
					// Special column that is only visible, when one of the other
					// columns is hidden. This is used for the details control
					hasClass = true;
					col.control = true;
					return;
				}

				$.each( breakpoints, function ( j, breakpoint ) {
					// Does this column have a class that matches this breakpoint?
					var brokenPoint = breakpoint.name.split('-');
					var re = new RegExp( '(min\\\\-|max\\\\-|not\\\\-)?('+brokenPoint[0]+')(\\\\-[_a-zA-Z0-9])?' );
					var match = className.match( re );

					if ( match ) {
						hasClass = true;

						if ( match[2] === brokenPoint[0] && match[3] === '-'+brokenPoint[1] ) {
							// Class name matches breakpoint name fully
							column( i, breakpoint.name, match[1], match[2]+match[3] );
						}
						else if ( match[2] === brokenPoint[0] && ! match[3] ) {
							// Class name matched primary breakpoint name with no qualifier
							column( i, breakpoint.name, match[1], match[2] );
						}
					}
				} );
			}

			// If there was no control class, then automatic sizing is used
			if ( ! hasClass ) {
				col.auto = true;
			}
		} );

		this.s.columns = columns;
	},

	/**
	 * Update the cells to show the correct control class / button
	 * @private
	 */
	_controlClass: function ()
	{
		if ( this.c.details.type === 'inline' ) {
			var dt = this.s.dt;
			var columnsVis = this.s.current;
			var firstVisible = $.inArray(true, columnsVis);

			// Remove from any cells which shouldn't have it
			dt.cells(
				null,
				function(idx) {
					return idx !== firstVisible;
				},
				{page: 'current'}
			)
				.nodes()
				.to$()
				.filter('.dtr-control')
				.removeClass('dtr-control');

			dt.cells(null, firstVisible, {page: 'current'})
				.nodes()
				.to$()
				.addClass('dtr-control');
		}
	},

	/**
	 * Show the details for the child row
	 *
	 * @param  {DataTables.Api} row    API instance for the row
	 * @param  {boolean}        update Update flag
	 * @private
	 */
	_detailsDisplay: function ( row, update )
	{
		var that = this;
		var dt = this.s.dt;
		var details = this.c.details;

		if ( details && details.type !== false ) {
			var res = details.display( row, update, function () {
				return details.renderer(
					dt, row[0], that._detailsObj(row[0])
				);
			} );

			if ( res === true || res === false ) {
				$(dt.table().node()).triggerHandler( 'responsive-display.dt', [dt, row, res, update] );
			}
		}
	},


	/**
	 * Initialisation for the details handler
	 *
	 * @private
	 */
	_detailsInit: function ()
	{
		var that    = this;
		var dt      = this.s.dt;
		var details = this.c.details;

		// The inline type always uses the first child as the target
		if ( details.type === 'inline' ) {
			details.target = 'td.dtr-control, th.dtr-control';
		}

		// Keyboard accessibility
		dt.on( 'draw.dtr', function () {
			that._tabIndexes();
		} );
		that._tabIndexes(); // Initial draw has already happened

		$( dt.table().body() ).on( 'keyup.dtr', 'td, th', function (e) {
			if ( e.keyCode === 13 && $(this).data('dtr-keyboard') ) {
				$(this).click();
			}
		} );

		// type.target can be a string jQuery selector or a column index
		var target   = details.target;
		var selector = typeof target === 'string' ? target : 'td, th';

		if ( target !== undefined || target !== null ) {
			// Click handler to show / hide the details rows when they are available
			$( dt.table().body() )
				.on( 'click.dtr mousedown.dtr mouseup.dtr', selector, function (e) {
					// If the table is not collapsed (i.e. there is no hidden columns)
					// then take no action
					if ( ! $(dt.table().node()).hasClass('collapsed' ) ) {
						return;
					}

					// Check that the row is actually a DataTable's controlled node
					if ( $.inArray( $(this).closest('tr').get(0), dt.rows().nodes().toArray() ) === -1 ) {
						return;
					}

					// For column index, we determine if we should act or not in the
					// handler - otherwise it is already okay
					if ( typeof target === 'number' ) {
						var targetIdx = target < 0 ?
							dt.columns().eq(0).length + target :
							target;

						if ( dt.cell( this ).index().column !== targetIdx ) {
							return;
						}
					}

					// $().closest() includes itself in its check
					var row = dt.row( $(this).closest('tr') );

					// Check event type to do an action
					if ( e.type === 'click' ) {
						// The renderer is given as a function so the caller can execute it
						// only when they need (i.e. if hiding there is no point is running
						// the renderer)
						that._detailsDisplay( row, false );
					}
					else if ( e.type === 'mousedown' ) {
						// For mouse users, prevent the focus ring from showing
						$(this).css('outline', 'none');
					}
					else if ( e.type === 'mouseup' ) {
						// And then re-allow at the end of the click
						$(this).trigger('blur').css('outline', '');
					}
				} );
		}
	},


	/**
	 * Get the details to pass to a renderer for a row
	 * @param  {int} rowIdx Row index
	 * @private
	 */
	_detailsObj: function ( rowIdx )
	{
		var that = this;
		var dt = this.s.dt;

		return $.map( this.s.columns, function( col, i ) {
			// Never and control columns should not be passed to the renderer
			if ( col.never || col.control ) {
				return;
			}

			var dtCol = dt.settings()[0].aoColumns[ i ];

			return {
				className:   dtCol.sClass,
				columnIndex: i,
				data:        dt.cell( rowIdx, i ).render( that.c.orthogonal ),
				hidden:      dt.column( i ).visible() && !that.s.current[ i ],
				rowIndex:    rowIdx,
				title:       dtCol.sTitle !== null ?
					dtCol.sTitle :
					$(dt.column(i).header()).text()
			};
		} );
	},


	/**
	 * Find a breakpoint object from a name
	 *
	 * @param  {string} name Breakpoint name to find
	 * @return {object}      Breakpoint description object
	 * @private
	 */
	_find: function ( name )
	{
		var breakpoints = this.c.breakpoints;

		for ( var i=0, ien=breakpoints.length ; i<ien ; i++ ) {
			if ( breakpoints[i].name === name ) {
				return breakpoints[i];
			}
		}
	},


	/**
	 * Re-create the contents of the child rows as the display has changed in
	 * some way.
	 *
	 * @private
	 */
	_redrawChildren: function ()
	{
		var that = this;
		var dt = this.s.dt;

		dt.rows( {page: 'current'} ).iterator( 'row', function ( settings, idx ) {
			var row = dt.row( idx );

			that._detailsDisplay( dt.row( idx ), true );
		} );
	},


	/**
	 * Alter the table display for a resized viewport. This involves first
	 * determining what breakpoint the window currently is in, getting the
	 * column visibilities to apply and then setting them.
	 *
	 * @param  {boolean} forceRedraw Force a redraw
	 * @private
	 */
	_resize: function (forceRedraw)
	{
		var that = this;
		var dt = this.s.dt;
		var width = $(window).innerWidth();
		var breakpoints = this.c.breakpoints;
		var breakpoint = breakpoints[0].name;
		var columns = this.s.columns;
		var i, ien;
		var oldVis = this.s.current.slice();

		// Determine what breakpoint we are currently at
		for ( i=breakpoints.length-1 ; i>=0 ; i-- ) {
			if ( width <= breakpoints[i].width ) {
				breakpoint = breakpoints[i].name;
				break;
			}
		}
		
		// Show the columns for that break point
		var columnsVis = this._columnsVisiblity( breakpoint );
		this.s.current = columnsVis;

		// Set the class before the column visibility is changed so event
		// listeners know what the state is. Need to determine if there are
		// any columns that are not visible but can be shown
		var collapsedClass = false;
	
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			if ( columnsVis[i] === false && ! columns[i].never && ! columns[i].control && ! dt.column(i).visible() === false ) {
				collapsedClass = true;
				break;
			}
		}

		$( dt.table().node() ).toggleClass( 'collapsed', collapsedClass );

		var changed = false;
		var visible = 0;

		dt.columns().eq(0).each( function ( colIdx, i ) {
			if ( columnsVis[i] === true ) {
				visible++;
			}

			if ( forceRedraw || columnsVis[i] !== oldVis[i] ) {
				changed = true;
				that._setColumnVis( colIdx, columnsVis[i] );
			}
		} );

		if ( changed ) {
			this._redrawChildren();

			// Inform listeners of the change
			$(dt.table().node()).trigger( 'responsive-resize.dt', [dt, this.s.current] );

			// If no records, update the "No records" display element
			if ( dt.page.info().recordsDisplay === 0 ) {
				$('td', dt.table().body()).eq(0).attr('colspan', visible);
			}
		}

		that._controlClass();
	},


	/**
	 * Determine the width of each column in the table so the auto column hiding
	 * has that information to work with. This method is never going to be 100%
	 * perfect since column widths can change slightly per page, but without
	 * seriously compromising performance this is quite effective.
	 *
	 * @private
	 */
	_resizeAuto: function ()
	{
		var dt = this.s.dt;
		var columns = this.s.columns;

		// Are we allowed to do auto sizing?
		if ( ! this.c.auto ) {
			return;
		}

		// Are there any columns that actually need auto-sizing, or do they all
		// have classes defined
		if ( $.inArray( true, $.map( columns, function (c) { return c.auto; } ) ) === -1 ) {
			return;
		}

		// Need to restore all children. They will be reinstated by a re-render
		if ( ! $.isEmptyObject( _childNodeStore ) ) {
			$.each( _childNodeStore, function ( key ) {
				var idx = key.split('-');

				_childNodesRestore( dt, idx[0]*1, idx[1]*1 );
			} );
		}

		// Clone the table with the current data in it
		var tableWidth   = dt.table().node().offsetWidth;
		var columnWidths = dt.columns;
		var clonedTable  = dt.table().node().cloneNode( false );
		var clonedHeader = $( dt.table().header().cloneNode( false ) ).appendTo( clonedTable );
		var clonedBody   = $( dt.table().body() ).clone( false, false ).empty().appendTo( clonedTable ); // use jQuery because of IE8

		clonedTable.style.width = 'auto';

		// Header
		var headerCells = dt.columns()
			.header()
			.filter( function (idx) {
				return dt.column(idx).visible();
			} )
			.to$()
			.clone( false )
			.css( 'display', 'table-cell' )
			.css( 'width', 'auto' )
			.css( 'min-width', 0 );

		// Body rows - we don't need to take account of DataTables' column
		// visibility since we implement our own here (hence the \`display\` set)
		$(clonedBody)
			.append( $(dt.rows( { page: 'current' } ).nodes()).clone( false ) )
			.find( 'th, td' ).css( 'display', '' );

		// Footer
		var footer = dt.table().footer();
		if ( footer ) {
			var clonedFooter = $( footer.cloneNode( false ) ).appendTo( clonedTable );
			var footerCells = dt.columns()
				.footer()
				.filter( function (idx) {
					return dt.column(idx).visible();
				} )
				.to$()
				.clone( false )
				.css( 'display', 'table-cell' );

			$('<tr/>')
				.append( footerCells )
				.appendTo( clonedFooter );
		}

		$('<tr/>')
			.append( headerCells )
			.appendTo( clonedHeader );

		// In the inline case extra padding is applied to the first column to
		// give space for the show / hide icon. We need to use this in the
		// calculation
		if ( this.c.details.type === 'inline' ) {
			$(clonedTable).addClass( 'dtr-inline collapsed' );
		}
		
		// It is unsafe to insert elements with the same name into the DOM
		// multiple times. For example, cloning and inserting a checked radio
		// clears the chcecked state of the original radio.
		$( clonedTable ).find( '[name]' ).removeAttr( 'name' );

		// A position absolute table would take the table out of the flow of
		// our container element, bypassing the height and width (Scroller)
		$( clonedTable ).css( 'position', 'relative' )
		
		var inserted = $('<div/>')
			.css( {
				width: 1,
				height: 1,
				overflow: 'hidden',
				clear: 'both'
			} )
			.append( clonedTable );

		inserted.insertBefore( dt.table().node() );

		// The cloned header now contains the smallest that each column can be
		headerCells.each( function (i) {
			var idx = dt.column.index( 'fromVisible', i );
			columns[ idx ].minWidth =  this.offsetWidth || 0;
		} );

		inserted.remove();
	},

	/**
	 * Get the state of the current hidden columns - controlled by Responsive only
	 */
	_responsiveOnlyHidden: function ()
	{
		var dt = this.s.dt;

		return $.map( this.s.current, function (v, i) {
			// If the column is hidden by DataTables then it can't be hidden by
			// Responsive!
			if ( dt.column(i).visible() === false ) {
				return true;
			}
			return v;
		} );
	},

	/**
	 * Set a column's visibility.
	 *
	 * We don't use DataTables' column visibility controls in order to ensure
	 * that column visibility can Responsive can no-exist. Since only IE8+ is
	 * supported (and all evergreen browsers of course) the control of the
	 * display attribute works well.
	 *
	 * @param {integer} col      Column index
	 * @param {boolean} showHide Show or hide (true or false)
	 * @private
	 */
	_setColumnVis: function ( col, showHide )
	{
		var dt = this.s.dt;
		var display = showHide ? '' : 'none'; // empty string will remove the attr

		$( dt.column( col ).header() ).css( 'display', display );
		$( dt.column( col ).footer() ).css( 'display', display );
		dt.column( col ).nodes().to$().css( 'display', display );

		// If the are child nodes stored, we might need to reinsert them
		if ( ! $.isEmptyObject( _childNodeStore ) ) {
			dt.cells( null, col ).indexes().each( function (idx) {
				_childNodesRestore( dt, idx.row, idx.column );
			} );
		}
	},


	/**
	 * Update the cell tab indexes for keyboard accessibility. This is called on
	 * every table draw - that is potentially inefficient, but also the least
	 * complex option given that column visibility can change on the fly. Its a
	 * shame user-focus was removed from CSS 3 UI, as it would have solved this
	 * issue with a single CSS statement.
	 *
	 * @private
	 */
	_tabIndexes: function ()
	{
		var dt = this.s.dt;
		var cells = dt.cells( { page: 'current' } ).nodes().to$();
		var ctx = dt.settings()[0];
		var target = this.c.details.target;

		cells.filter( '[data-dtr-keyboard]' ).removeData( '[data-dtr-keyboard]' );

		if ( typeof target === 'number' ) {
			dt.cells( null, target, { page: 'current' } ).nodes().to$()
				.attr( 'tabIndex', ctx.iTabIndex )
				.data( 'dtr-keyboard', 1 );
		}
		else {
			// This is a bit of a hack - we need to limit the selected nodes to just
			// those of this table
			if ( target === 'td:first-child, th:first-child' ) {
				target = '>td:first-child, >th:first-child';
			}

			$( target, dt.rows( { page: 'current' } ).nodes() )
				.attr( 'tabIndex', ctx.iTabIndex )
				.data( 'dtr-keyboard', 1 );
		}
	}
} );


/**
 * List of default breakpoints. Each item in the array is an object with two
 * properties:
 *
 * * \`name\` - the breakpoint name.
 * * \`width\` - the breakpoint width
 *
 * @name Responsive.breakpoints
 * @static
 */
Responsive.breakpoints = [
	{ name: 'desktop',  width: Infinity },
	{ name: 'tablet-l', width: 1024 },
	{ name: 'tablet-p', width: 768 },
	{ name: 'mobile-l', width: 480 },
	{ name: 'mobile-p', width: 320 }
];


/**
 * Display methods - functions which define how the hidden data should be shown
 * in the table.
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.display = {
	childRow: function ( row, update, render ) {
		if ( update ) {
			if ( $(row.node()).hasClass('parent') ) {
				row.child( render(), 'child' ).show();

				return true;
			}
		}
		else {
			if ( ! row.child.isShown()  ) {
				row.child( render(), 'child' ).show();
				$( row.node() ).addClass( 'parent' );

				return true;
			}
			else {
				row.child( false );
				$( row.node() ).removeClass( 'parent' );

				return false;
			}
		}
	},

	childRowImmediate: function ( row, update, render ) {
		if ( (! update && row.child.isShown()) || ! row.responsive.hasHidden() ) {
			// User interaction and the row is show, or nothing to show
			row.child( false );
			$( row.node() ).removeClass( 'parent' );

			return false;
		}
		else {
			// Display
			row.child( render(), 'child' ).show();
			$( row.node() ).addClass( 'parent' );

			return true;
		}
	},

	// This is a wrapper so the modal options for Bootstrap and jQuery UI can
	// have options passed into them. This specific one doesn't need to be a
	// function but it is for consistency in the \`modal\` name
	modal: function ( options ) {
		return function ( row, update, render ) {
			if ( ! update ) {
				// Show a modal
				var close = function () {
					modal.remove(); // will tidy events for us
					$(document).off( 'keypress.dtr' );
				};

				var modal = $('<div class="dtr-modal"/>')
					.append( $('<div class="dtr-modal-display"/>')
						.append( $('<div class="dtr-modal-content"/>')
							.append( render() )
						)
						.append( $('<div class="dtr-modal-close">&times;</div>' )
							.click( function () {
								close();
							} )
						)
					)
					.append( $('<div class="dtr-modal-background"/>')
						.click( function () {
							close();
						} )
					)
					.appendTo( 'body' );

				$(document).on( 'keyup.dtr', function (e) {
					if ( e.keyCode === 27 ) {
						e.stopPropagation();

						close();
					}
				} );
			}
			else {
				$('div.dtr-modal-content')
					.empty()
					.append( render() );
			}

			if ( options && options.header ) {
				$('div.dtr-modal-content').prepend(
					'<h2>'+options.header( row )+'</h2>'
				);
			}
		};
	}
};


var _childNodeStore = {};

function _childNodes( dt, row, col ) {
	var name = row+'-'+col;

	if ( _childNodeStore[ name ] ) {
		return _childNodeStore[ name ];
	}

	// https://jsperf.com/childnodes-array-slice-vs-loop
	var nodes = [];
	var children = dt.cell( row, col ).node().childNodes;
	for ( var i=0, ien=children.length ; i<ien ; i++ ) {
		nodes.push( children[i] );
	}

	_childNodeStore[ name ] = nodes;

	return nodes;
}

function _childNodesRestore( dt, row, col ) {
	var name = row+'-'+col;

	if ( ! _childNodeStore[ name ] ) {
		return;
	}

	var node = dt.cell( row, col ).node();
	var store = _childNodeStore[ name ];
	var parent = store[0].parentNode;
	var parentChildren = parent.childNodes;
	var a = [];

	for ( var i=0, ien=parentChildren.length ; i<ien ; i++ ) {
		a.push( parentChildren[i] );
	}

	for ( var j=0, jen=a.length ; j<jen ; j++ ) {
		node.appendChild( a[j] );
	}

	_childNodeStore[ name ] = undefined;
}


/**
 * Display methods - functions which define how the hidden data should be shown
 * in the table.
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.renderer = {
	listHiddenNodes: function () {
		return function ( api, rowIdx, columns ) {
			var ul = $('<ul data-dtr-index="'+rowIdx+'" class="dtr-details"/>');
			var found = false;

			var data = $.each( columns, function ( i, col ) {
				if ( col.hidden ) {
					var klass = col.className ?
						'class="'+ col.className +'"' :
						'';
	
					$(
						'<li '+klass+' data-dtr-index="'+col.columnIndex+'" data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
							'<span class="dtr-title">'+
								col.title+
							'</span> '+
						'</li>'
					)
						.append( $('<span class="dtr-data"/>').append( _childNodes( api, col.rowIndex, col.columnIndex ) ) )// api.cell( col.rowIndex, col.columnIndex ).node().childNodes ) )
						.appendTo( ul );

					found = true;
				}
			} );

			return found ?
				ul :
				false;
		};
	},

	listHidden: function () {
		return function ( api, rowIdx, columns ) {
			var data = $.map( columns, function ( col ) {
				var klass = col.className ?
					'class="'+ col.className +'"' :
					'';

				return col.hidden ?
					'<li '+klass+' data-dtr-index="'+col.columnIndex+'" data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
						'<span class="dtr-title">'+
							col.title+
						'</span> '+
						'<span class="dtr-data">'+
							col.data+
						'</span>'+
					'</li>' :
					'';
			} ).join('');

			return data ?
				$('<ul data-dtr-index="'+rowIdx+'" class="dtr-details"/>').append( data ) :
				false;
		}
	},

	tableAll: function ( options ) {
		options = $.extend( {
			tableClass: ''
		}, options );

		return function ( api, rowIdx, columns ) {
			var data = $.map( columns, function ( col ) {
				var klass = col.className ?
					'class="'+ col.className +'"' :
					'';

				return '<tr '+klass+' data-dt-row="'+col.rowIndex+'" data-dt-column="'+col.columnIndex+'">'+
						'<td>'+col.title+':'+'</td> '+
						'<td>'+col.data+'</td>'+
					'</tr>';
			} ).join('');

			return $('<table class="'+options.tableClass+' dtr-details" width="100%"/>').append( data );
		}
	}
};

/**
 * Responsive default settings for initialisation
 *
 * @namespace
 * @name Responsive.defaults
 * @static
 */
Responsive.defaults = {
	/**
	 * List of breakpoints for the instance. Note that this means that each
	 * instance can have its own breakpoints. Additionally, the breakpoints
	 * cannot be changed once an instance has been creased.
	 *
	 * @type {Array}
	 * @default Takes the value of \`Responsive.breakpoints\`
	 */
	breakpoints: Responsive.breakpoints,

	/**
	 * Enable / disable auto hiding calculations. It can help to increase
	 * performance slightly if you disable this option, but all columns would
	 * need to have breakpoint classes assigned to them
	 *
	 * @type {Boolean}
	 * @default  \`true\`
	 */
	auto: true,

	/**
	 * Details control. If given as a string value, the \`type\` property of the
	 * default object is set to that value, and the defaults used for the rest
	 * of the object - this is for ease of implementation.
	 *
	 * The object consists of the following properties:
	 *
	 * * \`display\` - A function that is used to show and hide the hidden details
	 * * \`renderer\` - function that is called for display of the child row data.
	 *   The default function will show the data from the hidden columns
	 * * \`target\` - Used as the selector for what objects to attach the child
	 *   open / close to
	 * * \`type\` - \`false\` to disable the details display, \`inline\` or \`column\`
	 *   for the two control types
	 *
	 * @type {Object|string}
	 */
	details: {
		display: Responsive.display.childRow,

		renderer: Responsive.renderer.listHidden(),

		target: 0,

		type: 'inline'
	},

	/**
	 * Orthogonal data request option. This is used to define the data type
	 * requested when Responsive gets the data to show in the child row.
	 *
	 * @type {String}
	 */
	orthogonal: 'display'
};


/*
 * API
 */
var Api = $.fn.dataTable.Api;

// Doesn't do anything - work around for a bug in DT... Not documented
Api.register( 'responsive()', function () {
	return this;
} );

Api.register( 'responsive.index()', function ( li ) {
	li = $(li);

	return {
		column: li.data('dtr-index'),
		row:    li.parent().data('dtr-index')
	};
} );

Api.register( 'responsive.rebuild()', function () {
	return this.iterator( 'table', function ( ctx ) {
		if ( ctx._responsive ) {
			ctx._responsive._classLogic();
		}
	} );
} );

Api.register( 'responsive.recalc()', function () {
	return this.iterator( 'table', function ( ctx ) {
		if ( ctx._responsive ) {
			ctx._responsive._resizeAuto();
			ctx._responsive._resize();
		}
	} );
} );

Api.register( 'responsive.hasHidden()', function () {
	var ctx = this.context[0];

	return ctx._responsive ?
		$.inArray( false, ctx._responsive._responsiveOnlyHidden() ) !== -1 :
		false;
} );

Api.registerPlural( 'columns().responsiveHidden()', 'column().responsiveHidden()', function () {
	return this.iterator( 'column', function ( settings, column ) {
		return settings._responsive ?
			settings._responsive._responsiveOnlyHidden()[ column ] :
			false;
	}, 1 );
} );


/**
 * Version information
 *
 * @name Responsive.version
 * @static
 */
Responsive.version = '2.2.9';


$.fn.dataTable.Responsive = Responsive;
$.fn.DataTable.Responsive = Responsive;

// Attach a listener to the document which listens for DataTables initialisation
// events so we can automatically initialise
$(document).on( 'preInit.dt.dtr', function (e, settings, json) {
	if ( e.namespace !== 'dt' ) {
		return;
	}

	if ( $(settings.nTable).hasClass( 'responsive' ) ||
		 $(settings.nTable).hasClass( 'dt-responsive' ) ||
		 settings.oInit.responsive ||
		 DataTable.defaults.responsive
	) {
		var init = settings.oInit.responsive;

		if ( init !== false ) {
			new Responsive( settings, $.isPlainObject( init ) ? init : {}  );
		}
	}
} );


return Responsive;
}));
`;
    }, 8329: function(t2) {
      t2.exports = "/*! Select for DataTables 1.3.3\n * 2015-2021 SpryMedia Ltd - datatables.net/license/mit\n */\n\n/**\n * @summary     Select for DataTables\n * @description A collection of API methods, events and buttons for DataTables\n *   that provides selection options of the items in a DataTable\n * @version     1.3.3\n * @file        dataTables.select.js\n * @author      SpryMedia Ltd (www.sprymedia.co.uk)\n * @contact     datatables.net/forums\n * @copyright   Copyright 2015-2021 SpryMedia Ltd.\n *\n * This source file is free software, available under the following license:\n *   MIT license - http://datatables.net/license/mit\n *\n * This source file is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY\n * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.\n *\n * For details please refer to: http://www.datatables.net/extensions/select\n */\n(function( factory ){\n	if ( typeof define === 'function' && define.amd ) {\n		// AMD\n		define( ['jquery', 'datatables.net'], function ( $ ) {\n			return factory( $, window, document );\n		} );\n	}\n	else if ( typeof exports === 'object' ) {\n		// CommonJS\n		module.exports = function (root, $) {\n			if ( ! root ) {\n				root = window;\n			}\n\n			if ( ! $ || ! $.fn.dataTable ) {\n				$ = require('datatables.net')(root, $).$;\n			}\n\n			return factory( $, root, root.document );\n		};\n	}\n	else {\n		// Browser\n		factory( jQuery, window, document );\n	}\n}(function( $, window, document, undefined ) {\n'use strict';\nvar DataTable = $.fn.dataTable;\n\n\n// Version information for debugger\nDataTable.select = {};\n\nDataTable.select.version = '1.3.3';\n\nDataTable.select.init = function ( dt ) {\n	var ctx = dt.settings()[0];\n	var init = ctx.oInit.select;\n	var defaults = DataTable.defaults.select;\n	var opts = init === undefined ?\n		defaults :\n		init;\n\n	// Set defaults\n	var items = 'row';\n	var style = 'api';\n	var blurable = false;\n	var toggleable = true;\n	var info = true;\n	var selector = 'td, th';\n	var className = 'selected';\n	var setStyle = false;\n\n	ctx._select = {};\n\n	// Initialisation customisations\n	if ( opts === true ) {\n		style = 'os';\n		setStyle = true;\n	}\n	else if ( typeof opts === 'string' ) {\n		style = opts;\n		setStyle = true;\n	}\n	else if ( $.isPlainObject( opts ) ) {\n		if ( opts.blurable !== undefined ) {\n			blurable = opts.blurable;\n		}\n		\n		if ( opts.toggleable !== undefined ) {\n			toggleable = opts.toggleable;\n		}\n\n		if ( opts.info !== undefined ) {\n			info = opts.info;\n		}\n\n		if ( opts.items !== undefined ) {\n			items = opts.items;\n		}\n\n		if ( opts.style !== undefined ) {\n			style = opts.style;\n			setStyle = true;\n		}\n		else {\n			style = 'os';\n			setStyle = true;\n		}\n\n		if ( opts.selector !== undefined ) {\n			selector = opts.selector;\n		}\n\n		if ( opts.className !== undefined ) {\n			className = opts.className;\n		}\n	}\n\n	dt.select.selector( selector );\n	dt.select.items( items );\n	dt.select.style( style );\n	dt.select.blurable( blurable );\n	dt.select.toggleable( toggleable );\n	dt.select.info( info );\n	ctx._select.className = className;\n\n\n	// Sort table based on selected rows. Requires Select Datatables extension\n	$.fn.dataTable.ext.order['select-checkbox'] = function ( settings, col ) {\n		return this.api().column( col, {order: 'index'} ).nodes().map( function ( td ) {\n			if ( settings._select.items === 'row' ) {\n				return $( td ).parent().hasClass( settings._select.className );\n			} else if ( settings._select.items === 'cell' ) {\n				return $( td ).hasClass( settings._select.className );\n			}\n			return false;\n		});\n	};\n\n	// If the init options haven't enabled select, but there is a selectable\n	// class name, then enable\n	if ( ! setStyle && $( dt.table().node() ).hasClass( 'selectable' ) ) {\n		dt.select.style( 'os' );\n	}\n};\n\n/*\n\nSelect is a collection of API methods, event handlers, event emitters and\nbuttons (for the `Buttons` extension) for DataTables. It provides the following\nfeatures, with an overview of how they are implemented:\n\n## Selection of rows, columns and cells. Whether an item is selected or not is\n   stored in:\n\n* rows: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoData` object for each row\n* columns: a `_select_selected` property which contains a boolean value of the\n  DataTables' `aoColumns` object for each column\n* cells: a `_selected_cells` property which contains an array of boolean values\n  of the `aoData` object for each row. The array is the same length as the\n  columns array, with each element of it representing a cell.\n\nThis method of using boolean flags allows Select to operate when nodes have not\nbeen created for rows / cells (DataTables' defer rendering feature).\n\n## API methods\n\nA range of API methods are available for triggering selection and de-selection\nof rows. Methods are also available to configure the selection events that can\nbe triggered by an end user (such as which items are to be selected). To a large\nextent, these of API methods *is* Select. It is basically a collection of helper\nfunctions that can be used to select items in a DataTable.\n\nConfiguration of select is held in the object `_select` which is attached to the\nDataTables settings object on initialisation. Select being available on a table\nis not optional when Select is loaded, but its default is for selection only to\nbe available via the API - so the end user wouldn't be able to select rows\nwithout additional configuration.\n\nThe `_select` object contains the following properties:\n\n```\n{\n	items:string       - Can be `rows`, `columns` or `cells`. Defines what item \n	                     will be selected if the user is allowed to activate row\n	                     selection using the mouse.\n	style:string       - Can be `none`, `single`, `multi` or `os`. Defines the\n	                     interaction style when selecting items\n	blurable:boolean   - If row selection can be cleared by clicking outside of\n	                     the table\n	toggleable:boolean - If row selection can be cancelled by repeated clicking\n	                     on the row\n	info:boolean       - If the selection summary should be shown in the table\n	                     information elements\n}\n```\n\nIn addition to the API methods, Select also extends the DataTables selector\noptions for rows, columns and cells adding a `selected` option to the selector\noptions object, allowing the developer to select only selected items or\nunselected items.\n\n## Mouse selection of items\n\nClicking on items can be used to select items. This is done by a simple event\nhandler that will select the items using the API methods.\n\n */\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Local functions\n */\n\n/**\n * Add one or more cells to the selection when shift clicking in OS selection\n * style cell selection.\n *\n * Cell range is more complicated than row and column as we want to select\n * in the visible grid rather than by index in sequence. For example, if you\n * click first in cell 1-1 and then shift click in 2-2 - cells 1-2 and 2-1\n * should also be selected (and not 1-3, 1-4. etc)\n * \n * @param  {DataTable.Api} dt   DataTable\n * @param  {object}        idx  Cell index to select to\n * @param  {object}        last Cell index to select from\n * @private\n */\nfunction cellRange( dt, idx, last )\n{\n	var indexes;\n	var columnIndexes;\n	var rowIndexes;\n	var selectColumns = function ( start, end ) {\n		if ( start > end ) {\n			var tmp = end;\n			end = start;\n			start = tmp;\n		}\n		\n		var record = false;\n		return dt.columns( ':visible' ).indexes().filter( function (i) {\n			if ( i === start ) {\n				record = true;\n			}\n			\n			if ( i === end ) { // not else if, as start might === end\n				record = false;\n				return true;\n			}\n\n			return record;\n		} );\n	};\n\n	var selectRows = function ( start, end ) {\n		var indexes = dt.rows( { search: 'applied' } ).indexes();\n\n		// Which comes first - might need to swap\n		if ( indexes.indexOf( start ) > indexes.indexOf( end ) ) {\n			var tmp = end;\n			end = start;\n			start = tmp;\n		}\n\n		var record = false;\n		return indexes.filter( function (i) {\n			if ( i === start ) {\n				record = true;\n			}\n			\n			if ( i === end ) {\n				record = false;\n				return true;\n			}\n\n			return record;\n		} );\n	};\n\n	if ( ! dt.cells( { selected: true } ).any() && ! last ) {\n		// select from the top left cell to this one\n		columnIndexes = selectColumns( 0, idx.column );\n		rowIndexes = selectRows( 0 , idx.row );\n	}\n	else {\n		// Get column indexes between old and new\n		columnIndexes = selectColumns( last.column, idx.column );\n		rowIndexes = selectRows( last.row , idx.row );\n	}\n\n	indexes = dt.cells( rowIndexes, columnIndexes ).flatten();\n\n	if ( ! dt.cells( idx, { selected: true } ).any() ) {\n		// Select range\n		dt.cells( indexes ).select();\n	}\n	else {\n		// Deselect range\n		dt.cells( indexes ).deselect();\n	}\n}\n\n/**\n * Disable mouse selection by removing the selectors\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction disableMouseSelection( dt )\n{\n	var ctx = dt.settings()[0];\n	var selector = ctx._select.selector;\n\n	$( dt.table().container() )\n		.off( 'mousedown.dtSelect', selector )\n		.off( 'mouseup.dtSelect', selector )\n		.off( 'click.dtSelect', selector );\n\n	$('body').off( 'click.dtSelect' + _safeId(dt.table().node()) );\n}\n\n/**\n * Attach mouse listeners to the table to allow mouse selection of items\n *\n * @param {DataTable.Api} dt DataTable to remove events from\n * @private\n */\nfunction enableMouseSelection ( dt )\n{\n	var container = $( dt.table().container() );\n	var ctx = dt.settings()[0];\n	var selector = ctx._select.selector;\n	var matchSelection;\n\n	container\n		.on( 'mousedown.dtSelect', selector, function(e) {\n			// Disallow text selection for shift clicking on the table so multi\n			// element selection doesn't look terrible!\n			if ( e.shiftKey || e.metaKey || e.ctrlKey ) {\n				container\n					.css( '-moz-user-select', 'none' )\n					.one('selectstart.dtSelect', selector, function () {\n						return false;\n					} );\n			}\n\n			if ( window.getSelection ) {\n				matchSelection = window.getSelection();\n			}\n		} )\n		.on( 'mouseup.dtSelect', selector, function() {\n			// Allow text selection to occur again, Mozilla style (tested in FF\n			// 35.0.1 - still required)\n			container.css( '-moz-user-select', '' );\n		} )\n		.on( 'click.dtSelect', selector, function ( e ) {\n			var items = dt.select.items();\n			var idx;\n\n			// If text was selected (click and drag), then we shouldn't change\n			// the row's selected state\n			if ( matchSelection ) {\n				var selection = window.getSelection();\n\n				// If the element that contains the selection is not in the table, we can ignore it\n				// This can happen if the developer selects text from the click event\n				if ( ! selection.anchorNode || $(selection.anchorNode).closest('table')[0] === dt.table().node() ) {\n					if ( selection !== matchSelection ) {\n						return;\n					}\n				}\n			}\n\n			var ctx = dt.settings()[0];\n			var wrapperClass = dt.settings()[0].oClasses.sWrapper.trim().replace(/ +/g, '.');\n\n			// Ignore clicks inside a sub-table\n			if ( $(e.target).closest('div.'+wrapperClass)[0] != dt.table().container() ) {\n				return;\n			}\n\n			var cell = dt.cell( $(e.target).closest('td, th') );\n\n			// Check the cell actually belongs to the host DataTable (so child\n			// rows, etc, are ignored)\n			if ( ! cell.any() ) {\n				return;\n			}\n\n			var event = $.Event('user-select.dt');\n			eventTrigger( dt, event, [ items, cell, e ] );\n\n			if ( event.isDefaultPrevented() ) {\n				return;\n			}\n\n			var cellIndex = cell.index();\n			if ( items === 'row' ) {\n				idx = cellIndex.row;\n				typeSelect( e, dt, ctx, 'row', idx );\n			}\n			else if ( items === 'column' ) {\n				idx = cell.index().column;\n				typeSelect( e, dt, ctx, 'column', idx );\n			}\n			else if ( items === 'cell' ) {\n				idx = cell.index();\n				typeSelect( e, dt, ctx, 'cell', idx );\n			}\n\n			ctx._select_lastCell = cellIndex;\n		} );\n\n	// Blurable\n	$('body').on( 'click.dtSelect' + _safeId(dt.table().node()), function ( e ) {\n		if ( ctx._select.blurable ) {\n			// If the click was inside the DataTables container, don't blur\n			if ( $(e.target).parents().filter( dt.table().container() ).length ) {\n				return;\n			}\n\n			// Ignore elements which have been removed from the DOM (i.e. paging\n			// buttons)\n			if ( $(e.target).parents('html').length === 0 ) {\n			 	return;\n			}\n\n			// Don't blur in Editor form\n			if ( $(e.target).parents('div.DTE').length ) {\n				return;\n			}\n\n			clear( ctx, true );\n		}\n	} );\n}\n\n/**\n * Trigger an event on a DataTable\n *\n * @param {DataTable.Api} api      DataTable to trigger events on\n * @param  {boolean}      selected true if selected, false if deselected\n * @param  {string}       type     Item type acting on\n * @param  {boolean}      any      Require that there are values before\n *     triggering\n * @private\n */\nfunction eventTrigger ( api, type, args, any )\n{\n	if ( any && ! api.flatten().length ) {\n		return;\n	}\n\n	if ( typeof type === 'string' ) {\n		type = type +'.dt';\n	}\n\n	args.unshift( api );\n\n	$(api.table().node()).trigger( type, args );\n}\n\n/**\n * Update the information element of the DataTable showing information about the\n * items selected. This is done by adding tags to the existing text\n * \n * @param {DataTable.Api} api DataTable to update\n * @private\n */\nfunction info ( api )\n{\n	var ctx = api.settings()[0];\n\n	if ( ! ctx._select.info || ! ctx.aanFeatures.i ) {\n		return;\n	}\n\n	if ( api.select.style() === 'api' ) {\n		return;\n	}\n\n	var rows    = api.rows( { selected: true } ).flatten().length;\n	var columns = api.columns( { selected: true } ).flatten().length;\n	var cells   = api.cells( { selected: true } ).flatten().length;\n\n	var add = function ( el, name, num ) {\n		el.append( $('<span class=\"select-item\"/>').append( api.i18n(\n			'select.'+name+'s',\n			{ _: '%d '+name+'s selected', 0: '', 1: '1 '+name+' selected' },\n			num\n		) ) );\n	};\n\n	// Internal knowledge of DataTables to loop over all information elements\n	$.each( ctx.aanFeatures.i, function ( i, el ) {\n		el = $(el);\n\n		var output  = $('<span class=\"select-info\"/>');\n		add( output, 'row', rows );\n		add( output, 'column', columns );\n		add( output, 'cell', cells  );\n\n		var exisiting = el.children('span.select-info');\n		if ( exisiting.length ) {\n			exisiting.remove();\n		}\n\n		if ( output.text() !== '' ) {\n			el.append( output );\n		}\n	} );\n}\n\n/**\n * Initialisation of a new table. Attach event handlers and callbacks to allow\n * Select to operate correctly.\n *\n * This will occur _after_ the initial DataTables initialisation, although\n * before Ajax data is rendered, if there is ajax data\n *\n * @param  {DataTable.settings} ctx Settings object to operate on\n * @private\n */\nfunction init ( ctx ) {\n	var api = new DataTable.Api( ctx );\n\n	// Row callback so that classes can be added to rows and cells if the item\n	// was selected before the element was created. This will happen with the\n	// `deferRender` option enabled.\n	// \n	// This method of attaching to `aoRowCreatedCallback` is a hack until\n	// DataTables has proper events for row manipulation If you are reviewing\n	// this code to create your own plug-ins, please do not do this!\n	ctx.aoRowCreatedCallback.push( {\n		fn: function ( row, data, index ) {\n			var i, ien;\n			var d = ctx.aoData[ index ];\n\n			// Row\n			if ( d._select_selected ) {\n				$( row ).addClass( ctx._select.className );\n			}\n\n			// Cells and columns - if separated out, we would need to do two\n			// loops, so it makes sense to combine them into a single one\n			for ( i=0, ien=ctx.aoColumns.length ; i<ien ; i++ ) {\n				if ( ctx.aoColumns[i]._select_selected || (d._selected_cells && d._selected_cells[i]) ) {\n					$(d.anCells[i]).addClass( ctx._select.className );\n				}\n			}\n		},\n		sName: 'select-deferRender'\n	} );\n\n	// On Ajax reload we want to reselect all rows which are currently selected,\n	// if there is an rowId (i.e. a unique value to identify each row with)\n	api.on( 'preXhr.dt.dtSelect', function (e, settings) {\n		if (settings !== api.settings()[0]) {\n			// Not triggered by our DataTable!\n			return;\n		}\n\n		// note that column selection doesn't need to be cached and then\n		// reselected, as they are already selected\n		var rows = api.rows( { selected: true } ).ids( true ).filter( function ( d ) {\n			return d !== undefined;\n		} );\n\n		var cells = api.cells( { selected: true } ).eq(0).map( function ( cellIdx ) {\n			var id = api.row( cellIdx.row ).id( true );\n			return id ?\n				{ row: id, column: cellIdx.column } :\n				undefined;\n		} ).filter( function ( d ) {\n			return d !== undefined;\n		} );\n\n		// On the next draw, reselect the currently selected items\n		api.one( 'draw.dt.dtSelect', function () {\n			api.rows( rows ).select();\n\n			// `cells` is not a cell index selector, so it needs a loop\n			if ( cells.any() ) {\n				cells.each( function ( id ) {\n					api.cells( id.row, id.column ).select();\n				} );\n			}\n		} );\n	} );\n\n	// Update the table information element with selected item summary\n	api.on( 'draw.dtSelect.dt select.dtSelect.dt deselect.dtSelect.dt info.dt', function () {\n		info( api );\n	} );\n\n	// Clean up and release\n	api.on( 'destroy.dtSelect', function () {\n		api.rows({selected: true}).deselect();\n\n		disableMouseSelection( api );\n		api.off( '.dtSelect' );\n	} );\n}\n\n/**\n * Add one or more items (rows or columns) to the selection when shift clicking\n * in OS selection style\n *\n * @param  {DataTable.Api} dt   DataTable\n * @param  {string}        type Row or column range selector\n * @param  {object}        idx  Item index to select to\n * @param  {object}        last Item index to select from\n * @private\n */\nfunction rowColumnRange( dt, type, idx, last )\n{\n	// Add a range of rows from the last selected row to this one\n	var indexes = dt[type+'s']( { search: 'applied' } ).indexes();\n	var idx1 = $.inArray( last, indexes );\n	var idx2 = $.inArray( idx, indexes );\n\n	if ( ! dt[type+'s']( { selected: true } ).any() && idx1 === -1 ) {\n		// select from top to here - slightly odd, but both Windows and Mac OS\n		// do this\n		indexes.splice( $.inArray( idx, indexes )+1, indexes.length );\n	}\n	else {\n		// reverse so we can shift click 'up' as well as down\n		if ( idx1 > idx2 ) {\n			var tmp = idx2;\n			idx2 = idx1;\n			idx1 = tmp;\n		}\n\n		indexes.splice( idx2+1, indexes.length );\n		indexes.splice( 0, idx1 );\n	}\n\n	if ( ! dt[type]( idx, { selected: true } ).any() ) {\n		// Select range\n		dt[type+'s']( indexes ).select();\n	}\n	else {\n		// Deselect range - need to keep the clicked on row selected\n		indexes.splice( $.inArray( idx, indexes ), 1 );\n		dt[type+'s']( indexes ).deselect();\n	}\n}\n\n/**\n * Clear all selected items\n *\n * @param  {DataTable.settings} ctx Settings object of the host DataTable\n * @param  {boolean} [force=false] Force the de-selection to happen, regardless\n *     of selection style\n * @private\n */\nfunction clear( ctx, force )\n{\n	if ( force || ctx._select.style === 'single' ) {\n		var api = new DataTable.Api( ctx );\n		\n		api.rows( { selected: true } ).deselect();\n		api.columns( { selected: true } ).deselect();\n		api.cells( { selected: true } ).deselect();\n	}\n}\n\n/**\n * Select items based on the current configuration for style and items.\n *\n * @param  {object}             e    Mouse event object\n * @param  {DataTables.Api}     dt   DataTable\n * @param  {DataTable.settings} ctx  Settings object of the host DataTable\n * @param  {string}             type Items to select\n * @param  {int|object}         idx  Index of the item to select\n * @private\n */\nfunction typeSelect ( e, dt, ctx, type, idx )\n{\n	var style = dt.select.style();\n	var toggleable = dt.select.toggleable();\n	var isSelected = dt[type]( idx, { selected: true } ).any();\n	\n	if ( isSelected && ! toggleable ) {\n		return;\n	}\n\n	if ( style === 'os' ) {\n		if ( e.ctrlKey || e.metaKey ) {\n			// Add or remove from the selection\n			dt[type]( idx ).select( ! isSelected );\n		}\n		else if ( e.shiftKey ) {\n			if ( type === 'cell' ) {\n				cellRange( dt, idx, ctx._select_lastCell || null );\n			}\n			else {\n				rowColumnRange( dt, type, idx, ctx._select_lastCell ?\n					ctx._select_lastCell[type] :\n					null\n				);\n			}\n		}\n		else {\n			// No cmd or shift click - deselect if selected, or select\n			// this row only\n			var selected = dt[type+'s']( { selected: true } );\n\n			if ( isSelected && selected.flatten().length === 1 ) {\n				dt[type]( idx ).deselect();\n			}\n			else {\n				selected.deselect();\n				dt[type]( idx ).select();\n			}\n		}\n	} else if ( style == 'multi+shift' ) {\n		if ( e.shiftKey ) {\n			if ( type === 'cell' ) {\n				cellRange( dt, idx, ctx._select_lastCell || null );\n			}\n			else {\n				rowColumnRange( dt, type, idx, ctx._select_lastCell ?\n					ctx._select_lastCell[type] :\n					null\n				);\n			}\n		}\n		else {\n			dt[ type ]( idx ).select( ! isSelected );\n		}\n	}\n	else {\n		dt[ type ]( idx ).select( ! isSelected );\n	}\n}\n\nfunction _safeId( node ) {\n	return node.id.replace(/[^a-zA-Z0-9\\-\\_]/g, '-');\n}\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables selectors\n */\n\n// row and column are basically identical just assigned to different properties\n// and checking a different array, so we can dynamically create the functions to\n// reduce the code size\n$.each( [\n	{ type: 'row', prop: 'aoData' },\n	{ type: 'column', prop: 'aoColumns' }\n], function ( i, o ) {\n	DataTable.ext.selector[ o.type ].push( function ( settings, opts, indexes ) {\n		var selected = opts.selected;\n		var data;\n		var out = [];\n\n		if ( selected !== true && selected !== false ) {\n			return indexes;\n		}\n\n		for ( var i=0, ien=indexes.length ; i<ien ; i++ ) {\n			data = settings[ o.prop ][ indexes[i] ];\n\n			if ( (selected === true && data._select_selected === true) ||\n			     (selected === false && ! data._select_selected )\n			) {\n				out.push( indexes[i] );\n			}\n		}\n\n		return out;\n	} );\n} );\n\nDataTable.ext.selector.cell.push( function ( settings, opts, cells ) {\n	var selected = opts.selected;\n	var rowData;\n	var out = [];\n\n	if ( selected === undefined ) {\n		return cells;\n	}\n\n	for ( var i=0, ien=cells.length ; i<ien ; i++ ) {\n		rowData = settings.aoData[ cells[i].row ];\n\n		if ( (selected === true && rowData._selected_cells && rowData._selected_cells[ cells[i].column ] === true) ||\n		     (selected === false && ( ! rowData._selected_cells || ! rowData._selected_cells[ cells[i].column ] ) )\n		) {\n			out.push( cells[i] );\n		}\n	}\n\n	return out;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * DataTables API\n *\n * For complete documentation, please refer to the docs/api directory or the\n * DataTables site\n */\n\n// Local variables to improve compression\nvar apiRegister = DataTable.Api.register;\nvar apiRegisterPlural = DataTable.Api.registerPlural;\n\napiRegister( 'select()', function () {\n	return this.iterator( 'table', function ( ctx ) {\n		DataTable.select.init( new DataTable.Api( ctx ) );\n	} );\n} );\n\napiRegister( 'select.blurable()', function ( flag ) {\n	if ( flag === undefined ) {\n		return this.context[0]._select.blurable;\n	}\n\n	return this.iterator( 'table', function ( ctx ) {\n		ctx._select.blurable = flag;\n	} );\n} );\n\napiRegister( 'select.toggleable()', function ( flag ) {\n	if ( flag === undefined ) {\n		return this.context[0]._select.toggleable;\n	}\n\n	return this.iterator( 'table', function ( ctx ) {\n		ctx._select.toggleable = flag;\n	} );\n} );\n\napiRegister( 'select.info()', function ( flag ) {\n	if ( flag === undefined ) {\n		return this.context[0]._select.info;\n	}\n\n	return this.iterator( 'table', function ( ctx ) {\n		ctx._select.info = flag;\n	} );\n} );\n\napiRegister( 'select.items()', function ( items ) {\n	if ( items === undefined ) {\n		return this.context[0]._select.items;\n	}\n\n	return this.iterator( 'table', function ( ctx ) {\n		ctx._select.items = items;\n\n		eventTrigger( new DataTable.Api( ctx ), 'selectItems', [ items ] );\n	} );\n} );\n\n// Takes effect from the _next_ selection. None disables future selection, but\n// does not clear the current selection. Use the `deselect` methods for that\napiRegister( 'select.style()', function ( style ) {\n	if ( style === undefined ) {\n		return this.context[0]._select.style;\n	}\n\n	return this.iterator( 'table', function ( ctx ) {\n		ctx._select.style = style;\n\n		if ( ! ctx._select_init ) {\n			init( ctx );\n		}\n\n		// Add / remove mouse event handlers. They aren't required when only\n		// API selection is available\n		var dt = new DataTable.Api( ctx );\n		disableMouseSelection( dt );\n		\n		if ( style !== 'api' ) {\n			enableMouseSelection( dt );\n		}\n\n		eventTrigger( new DataTable.Api( ctx ), 'selectStyle', [ style ] );\n	} );\n} );\n\napiRegister( 'select.selector()', function ( selector ) {\n	if ( selector === undefined ) {\n		return this.context[0]._select.selector;\n	}\n\n	return this.iterator( 'table', function ( ctx ) {\n		disableMouseSelection( new DataTable.Api( ctx ) );\n\n		ctx._select.selector = selector;\n\n		if ( ctx._select.style !== 'api' ) {\n			enableMouseSelection( new DataTable.Api( ctx ) );\n		}\n	} );\n} );\n\n\n\napiRegisterPlural( 'rows().select()', 'row().select()', function ( select ) {\n	var api = this;\n\n	if ( select === false ) {\n		return this.deselect();\n	}\n\n	this.iterator( 'row', function ( ctx, idx ) {\n		clear( ctx );\n\n		ctx.aoData[ idx ]._select_selected = true;\n		$( ctx.aoData[ idx ].nTr ).addClass( ctx._select.className );\n	} );\n\n	this.iterator( 'table', function ( ctx, i ) {\n		eventTrigger( api, 'select', [ 'row', api[i] ], true );\n	} );\n\n	return this;\n} );\n\napiRegisterPlural( 'columns().select()', 'column().select()', function ( select ) {\n	var api = this;\n\n	if ( select === false ) {\n		return this.deselect();\n	}\n\n	this.iterator( 'column', function ( ctx, idx ) {\n		clear( ctx );\n\n		ctx.aoColumns[ idx ]._select_selected = true;\n\n		var column = new DataTable.Api( ctx ).column( idx );\n\n		$( column.header() ).addClass( ctx._select.className );\n		$( column.footer() ).addClass( ctx._select.className );\n\n		column.nodes().to$().addClass( ctx._select.className );\n	} );\n\n	this.iterator( 'table', function ( ctx, i ) {\n		eventTrigger( api, 'select', [ 'column', api[i] ], true );\n	} );\n\n	return this;\n} );\n\napiRegisterPlural( 'cells().select()', 'cell().select()', function ( select ) {\n	var api = this;\n\n	if ( select === false ) {\n		return this.deselect();\n	}\n\n	this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\n		clear( ctx );\n\n		var data = ctx.aoData[ rowIdx ];\n\n		if ( data._selected_cells === undefined ) {\n			data._selected_cells = [];\n		}\n\n		data._selected_cells[ colIdx ] = true;\n\n		if ( data.anCells ) {\n			$( data.anCells[ colIdx ] ).addClass( ctx._select.className );\n		}\n	} );\n\n	this.iterator( 'table', function ( ctx, i ) {\n		eventTrigger( api, 'select', [ 'cell', api.cells(api[i]).indexes().toArray() ], true );\n	} );\n\n	return this;\n} );\n\n\napiRegisterPlural( 'rows().deselect()', 'row().deselect()', function () {\n	var api = this;\n\n	this.iterator( 'row', function ( ctx, idx ) {\n		ctx.aoData[ idx ]._select_selected = false;\n		ctx._select_lastCell = null;\n		$( ctx.aoData[ idx ].nTr ).removeClass( ctx._select.className );\n	} );\n\n	this.iterator( 'table', function ( ctx, i ) {\n		eventTrigger( api, 'deselect', [ 'row', api[i] ], true );\n	} );\n\n	return this;\n} );\n\napiRegisterPlural( 'columns().deselect()', 'column().deselect()', function () {\n	var api = this;\n\n	this.iterator( 'column', function ( ctx, idx ) {\n		ctx.aoColumns[ idx ]._select_selected = false;\n\n		var api = new DataTable.Api( ctx );\n		var column = api.column( idx );\n\n		$( column.header() ).removeClass( ctx._select.className );\n		$( column.footer() ).removeClass( ctx._select.className );\n\n		// Need to loop over each cell, rather than just using\n		// `column().nodes()` as cells which are individually selected should\n		// not have the `selected` class removed from them\n		api.cells( null, idx ).indexes().each( function (cellIdx) {\n			var data = ctx.aoData[ cellIdx.row ];\n			var cellSelected = data._selected_cells;\n\n			if ( data.anCells && (! cellSelected || ! cellSelected[ cellIdx.column ]) ) {\n				$( data.anCells[ cellIdx.column  ] ).removeClass( ctx._select.className );\n			}\n		} );\n	} );\n\n	this.iterator( 'table', function ( ctx, i ) {\n		eventTrigger( api, 'deselect', [ 'column', api[i] ], true );\n	} );\n\n	return this;\n} );\n\napiRegisterPlural( 'cells().deselect()', 'cell().deselect()', function () {\n	var api = this;\n\n	this.iterator( 'cell', function ( ctx, rowIdx, colIdx ) {\n		var data = ctx.aoData[ rowIdx ];\n\n		data._selected_cells[ colIdx ] = false;\n\n		// Remove class only if the cells exist, and the cell is not column\n		// selected, in which case the class should remain (since it is selected\n		// in the column)\n		if ( data.anCells && ! ctx.aoColumns[ colIdx ]._select_selected ) {\n			$( data.anCells[ colIdx ] ).removeClass( ctx._select.className );\n		}\n	} );\n\n	this.iterator( 'table', function ( ctx, i ) {\n		eventTrigger( api, 'deselect', [ 'cell', api[i] ], true );\n	} );\n\n	return this;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Buttons\n */\nfunction i18n( label, def ) {\n	return function (dt) {\n		return dt.i18n( 'buttons.'+label, def );\n	};\n}\n\n// Common events with suitable namespaces\nfunction namespacedEvents ( config ) {\n	var unique = config._eventNamespace;\n\n	return 'draw.dt.DT'+unique+' select.dt.DT'+unique+' deselect.dt.DT'+unique;\n}\n\nfunction enabled ( dt, config ) {\n	if ( $.inArray( 'rows', config.limitTo ) !== -1 && dt.rows( { selected: true } ).any() ) {\n		return true;\n	}\n\n	if ( $.inArray( 'columns', config.limitTo ) !== -1 && dt.columns( { selected: true } ).any() ) {\n		return true;\n	}\n\n	if ( $.inArray( 'cells', config.limitTo ) !== -1 && dt.cells( { selected: true } ).any() ) {\n		return true;\n	}\n\n	return false;\n}\n\nvar _buttonNamespace = 0;\n\n$.extend( DataTable.ext.buttons, {\n	selected: {\n		text: i18n( 'selected', 'Selected' ),\n		className: 'buttons-selected',\n		limitTo: [ 'rows', 'columns', 'cells' ],\n		init: function ( dt, node, config ) {\n			var that = this;\n			config._eventNamespace = '.select'+(_buttonNamespace++);\n\n			// .DT namespace listeners are removed by DataTables automatically\n			// on table destroy\n			dt.on( namespacedEvents(config), function () {\n				that.enable( enabled(dt, config) );\n			} );\n\n			this.disable();\n		},\n		destroy: function ( dt, node, config ) {\n			dt.off( config._eventNamespace );\n		}\n	},\n	selectedSingle: {\n		text: i18n( 'selectedSingle', 'Selected single' ),\n		className: 'buttons-selected-single',\n		init: function ( dt, node, config ) {\n			var that = this;\n			config._eventNamespace = '.select'+(_buttonNamespace++);\n\n			dt.on( namespacedEvents(config), function () {\n				var count = dt.rows( { selected: true } ).flatten().length +\n				            dt.columns( { selected: true } ).flatten().length +\n				            dt.cells( { selected: true } ).flatten().length;\n\n				that.enable( count === 1 );\n			} );\n\n			this.disable();\n		},\n		destroy: function ( dt, node, config ) {\n			dt.off( config._eventNamespace );\n		}\n	},\n	selectAll: {\n		text: i18n( 'selectAll', 'Select all' ),\n		className: 'buttons-select-all',\n		action: function () {\n			var items = this.select.items();\n			this[ items+'s' ]().select();\n		}\n	},\n	selectNone: {\n		text: i18n( 'selectNone', 'Deselect all' ),\n		className: 'buttons-select-none',\n		action: function () {\n			clear( this.settings()[0], true );\n		},\n		init: function ( dt, node, config ) {\n			var that = this;\n			config._eventNamespace = '.select'+(_buttonNamespace++);\n\n			dt.on( namespacedEvents(config), function () {\n				var count = dt.rows( { selected: true } ).flatten().length +\n				            dt.columns( { selected: true } ).flatten().length +\n				            dt.cells( { selected: true } ).flatten().length;\n\n				that.enable( count > 0 );\n			} );\n\n			this.disable();\n		},\n		destroy: function ( dt, node, config ) {\n			dt.off( config._eventNamespace );\n		}\n	}\n} );\n\n$.each( [ 'Row', 'Column', 'Cell' ], function ( i, item ) {\n	var lc = item.toLowerCase();\n\n	DataTable.ext.buttons[ 'select'+item+'s' ] = {\n		text: i18n( 'select'+item+'s', 'Select '+lc+'s' ),\n		className: 'buttons-select-'+lc+'s',\n		action: function () {\n			this.select.items( lc );\n		},\n		init: function ( dt ) {\n			var that = this;\n\n			dt.on( 'selectItems.dt.DT', function ( e, ctx, items ) {\n				that.active( items === lc );\n			} );\n		}\n	};\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Initialisation\n */\n\n// DataTables creation - check if select has been defined in the options. Note\n// this required that the table be in the document! If it isn't then something\n// needs to trigger this method unfortunately. The next major release of\n// DataTables will rework the events and address this.\n$(document).on( 'preInit.dt.dtSelect', function (e, ctx) {\n	if ( e.namespace !== 'dt' ) {\n		return;\n	}\n\n	DataTable.select.init( new DataTable.Api( ctx ) );\n} );\n\n\nreturn DataTable.select;\n}));\n";
    }, 4668: function(t2) {
      t2.exports = `/*! DataTables 1.11.3
 * \xA92008-2021 SpryMedia Ltd - datatables.net/license
 */

/**
 * @summary     DataTables
 * @description Paginate, search and order HTML tables
 * @version     1.11.3
 * @file        jquery.dataTables.js
 * @author      SpryMedia Ltd
 * @contact     www.datatables.net
 * @copyright   Copyright 2008-2021 SpryMedia Ltd.
 *
 * This source file is free software, available under the following license:
 *   MIT license - http://datatables.net/license
 *
 * This source file is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
 * or FITNESS FOR A PARTICULAR PURPOSE. See the license files for details.
 *
 * For details please refer to: http://www.datatables.net
 */

/*jslint evil: true, undef: true, browser: true */
/*globals $,require,jQuery,define,_selector_run,_selector_opts,_selector_first,_selector_row_indexes,_ext,_Api,_api_register,_api_registerPlural,_re_new_lines,_re_html,_re_formatted_numeric,_re_escape_regex,_empty,_intVal,_numToDecimal,_isNumber,_isHtml,_htmlNumeric,_pluck,_pluck_order,_range,_stripHtml,_unique,_fnBuildAjax,_fnAjaxUpdate,_fnAjaxParameters,_fnAjaxUpdateDraw,_fnAjaxDataSrc,_fnAddColumn,_fnColumnOptions,_fnAdjustColumnSizing,_fnVisibleToColumnIndex,_fnColumnIndexToVisible,_fnVisbleColumns,_fnGetColumns,_fnColumnTypes,_fnApplyColumnDefs,_fnHungarianMap,_fnCamelToHungarian,_fnLanguageCompat,_fnBrowserDetect,_fnAddData,_fnAddTr,_fnNodeToDataIndex,_fnNodeToColumnIndex,_fnGetCellData,_fnSetCellData,_fnSplitObjNotation,_fnGetObjectDataFn,_fnSetObjectDataFn,_fnGetDataMaster,_fnClearTable,_fnDeleteIndex,_fnInvalidate,_fnGetRowElements,_fnCreateTr,_fnBuildHead,_fnDrawHead,_fnDraw,_fnReDraw,_fnAddOptionsHtml,_fnDetectHeader,_fnGetUniqueThs,_fnFeatureHtmlFilter,_fnFilterComplete,_fnFilterCustom,_fnFilterColumn,_fnFilter,_fnFilterCreateSearch,_fnEscapeRegex,_fnFilterData,_fnFeatureHtmlInfo,_fnUpdateInfo,_fnInfoMacros,_fnInitialise,_fnInitComplete,_fnLengthChange,_fnFeatureHtmlLength,_fnFeatureHtmlPaginate,_fnPageChange,_fnFeatureHtmlProcessing,_fnProcessingDisplay,_fnFeatureHtmlTable,_fnScrollDraw,_fnApplyToChildren,_fnCalculateColumnWidths,_fnThrottle,_fnConvertToWidth,_fnGetWidestNode,_fnGetMaxLenString,_fnStringToCss,_fnSortFlatten,_fnSort,_fnSortAria,_fnSortListener,_fnSortAttachListener,_fnSortingClasses,_fnSortData,_fnSaveState,_fnLoadState,_fnSettingsFromNode,_fnLog,_fnMap,_fnBindAction,_fnCallbackReg,_fnCallbackFire,_fnLengthOverflow,_fnRenderer,_fnDataSource,_fnRowAttributes*/

(function( factory ) {
	"use strict";

	if ( typeof define === 'function' && define.amd ) {
		// AMD
		define( ['jquery'], function ( $ ) {
			return factory( $, window, document );
		} );
	}
	else if ( typeof exports === 'object' ) {
		// CommonJS
		module.exports = function (root, $) {
			if ( ! root ) {
				// CommonJS environments without a window global must pass a
				// root. This will give an error otherwise
				root = window;
			}

			if ( ! $ ) {
				$ = typeof window !== 'undefined' ? // jQuery's factory checks for a global window
					require('jquery') :
					require('jquery')( root );
			}

			return factory( $, root, root.document );
		};
	}
	else {
		// Browser
		window.DataTable = factory( jQuery, window, document );
	}
}
(function( $, window, document, undefined ) {
	"use strict";

	/**
	 * DataTables is a plug-in for the jQuery Javascript library. It is a highly
	 * flexible tool, based upon the foundations of progressive enhancement,
	 * which will add advanced interaction controls to any HTML table. For a
	 * full list of features please refer to
	 * [DataTables.net](href="http://datatables.net).
	 *
	 * Note that the \`DataTable\` object is not a global variable but is aliased
	 * to \`jQuery.fn.DataTable\` and \`jQuery.fn.dataTable\` through which it may
	 * be  accessed.
	 *
	 *  @class
	 *  @param {object} [init={}] Configuration object for DataTables. Options
	 *    are defined by {@link DataTable.defaults}
	 *  @requires jQuery 1.7+
	 *
	 *  @example
	 *    // Basic initialisation
	 *    $(document).ready( function {
	 *      $('#example').dataTable();
	 *    } );
	 *
	 *  @example
	 *    // Initialisation with configuration options - in this case, disable
	 *    // pagination and sorting.
	 *    $(document).ready( function {
	 *      $('#example').dataTable( {
	 *        "paginate": false,
	 *        "sort": false
	 *      } );
	 *    } );
	 */
	var DataTable = function ( selector, options )
	{
		// When creating with \`new\`, create a new DataTable, returning the API instance
		if (this instanceof DataTable) {
			return $(selector).DataTable(options);
		}
		else {
			// Argument switching
			options = selector;
		}

		/**
		 * Perform a jQuery selector action on the table's TR elements (from the tbody) and
		 * return the resulting jQuery object.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select TR elements that meet the current filter
		 *    criterion ("applied") or all TR elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the TR elements in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {object} jQuery object, filtered by the given selector.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Highlight every second row
		 *      oTable.$('tr:odd').css('backgroundColor', 'blue');
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to rows with 'Webkit' in them, add a background colour and then
		 *      // remove the filter, thus highlighting the 'Webkit' rows only.
		 *      oTable.fnFilter('Webkit');
		 *      oTable.$('tr', {"search": "applied"}).css('backgroundColor', 'blue');
		 *      oTable.fnFilter('');
		 *    } );
		 */
		this.$ = function ( sSelector, oOpts )
		{
			return this.api(true).$( sSelector, oOpts );
		};
		
		
		/**
		 * Almost identical to $ in operation, but in this case returns the data for the matched
		 * rows - as such, the jQuery selector used should match TR row nodes or TD/TH cell nodes
		 * rather than any descendants, so the data can be obtained for the row/cell. If matching
		 * rows are found, the data returned is the original data array/object that was used to
		 * create the row (or a generated array if from a DOM source).
		 *
		 * This method is often useful in-combination with $ where both functions are given the
		 * same parameters and the array indexes will match identically.
		 *  @param {string|node|jQuery} sSelector jQuery selector or node collection to act on
		 *  @param {object} [oOpts] Optional parameters for modifying the rows to be included
		 *  @param {string} [oOpts.filter=none] Select elements that meet the current filter
		 *    criterion ("applied") or all elements (i.e. no filter).
		 *  @param {string} [oOpts.order=current] Order of the data in the processed array.
		 *    Can be either 'current', whereby the current sorting of the table is used, or
		 *    'original' whereby the original order the data was read into the table is used.
		 *  @param {string} [oOpts.page=all] Limit the selection to the currently displayed page
		 *    ("current") or not ("all"). If 'current' is given, then order is assumed to be
		 *    'current' and filter is 'applied', regardless of what they might be given as.
		 *  @returns {array} Data for the matched elements. If any elements, as a result of the
		 *    selector, were not TR, TD or TH elements in the DataTable, they will have a null
		 *    entry in the array.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the data from the first row in the table
		 *      var data = oTable._('tr:first');
		 *
		 *      // Do something useful with the data
		 *      alert( "First cell is: "+data[0] );
		 *    } );
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Filter to 'Webkit' and get all data for
		 *      oTable.fnFilter('Webkit');
		 *      var data = oTable._('tr', {"search": "applied"});
		 *
		 *      // Do something with the data
		 *      alert( data.length+" rows matched the search" );
		 *    } );
		 */
		this._ = function ( sSelector, oOpts )
		{
			return this.api(true).rows( sSelector, oOpts ).data();
		};
		
		
		/**
		 * Create a DataTables Api instance, with the currently selected tables for
		 * the Api's context.
		 * @param {boolean} [traditional=false] Set the API instance's context to be
		 *   only the table referred to by the \`DataTable.ext.iApiIndex\` option, as was
		 *   used in the API presented by DataTables 1.9- (i.e. the traditional mode),
		 *   or if all tables captured in the jQuery object should be used.
		 * @return {DataTables.Api}
		 */
		this.api = function ( traditional )
		{
			return traditional ?
				new _Api(
					_fnSettingsFromNode( this[ _ext.iApiIndex ] )
				) :
				new _Api( this );
		};
		
		
		/**
		 * Add a single new row or multiple rows of data to the table. Please note
		 * that this is suitable for client-side processing only - if you are using
		 * server-side processing (i.e. "bServerSide": true), then to add data, you
		 * must add it to the data source, i.e. the server-side, through an Ajax call.
		 *  @param {array|object} data The data to be added to the table. This can be:
		 *    <ul>
		 *      <li>1D array of data - add a single row with the data provided</li>
		 *      <li>2D array of arrays - add multiple rows in a single call</li>
		 *      <li>object - data object when using <i>mData</i></li>
		 *      <li>array of objects - multiple data objects when using <i>mData</i></li>
		 *    </ul>
		 *  @param {bool} [redraw=true] redraw the table or not
		 *  @returns {array} An array of integers, representing the list of indexes in
		 *    <i>aoData</i> ({@link DataTable.models.oSettings}) that have been added to
		 *    the table.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Global var for counter
		 *    var giCount = 2;
		 *
		 *    $(document).ready(function() {
		 *      $('#example').dataTable();
		 *    } );
		 *
		 *    function fnClickAddRow() {
		 *      $('#example').dataTable().fnAddData( [
		 *        giCount+".1",
		 *        giCount+".2",
		 *        giCount+".3",
		 *        giCount+".4" ]
		 *      );
		 *
		 *      giCount++;
		 *    }
		 */
		this.fnAddData = function( data, redraw )
		{
			var api = this.api( true );
		
			/* Check if we want to add multiple rows or not */
			var rows = Array.isArray(data) && ( Array.isArray(data[0]) || $.isPlainObject(data[0]) ) ?
				api.rows.add( data ) :
				api.row.add( data );
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return rows.flatten().toArray();
		};
		
		
		/**
		 * This function will make DataTables recalculate the column sizes, based on the data
		 * contained in the table and the sizes applied to the columns (in the DOM, CSS or
		 * through the sWidth parameter). This can be useful when the width of the table's
		 * parent element changes (for example a window resize).
		 *  @param {boolean} [bRedraw=true] Redraw the table or not, you will typically want to
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable( {
		 *        "sScrollY": "200px",
		 *        "bPaginate": false
		 *      } );
		 *
		 *      $(window).on('resize', function () {
		 *        oTable.fnAdjustColumnSizing();
		 *      } );
		 *    } );
		 */
		this.fnAdjustColumnSizing = function ( bRedraw )
		{
			var api = this.api( true ).columns.adjust();
			var settings = api.settings()[0];
			var scroll = settings.oScroll;
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw( false );
			}
			else if ( scroll.sX !== "" || scroll.sY !== "" ) {
				/* If not redrawing, but scrolling, we want to apply the new column sizes anyway */
				_fnScrollDraw( settings );
			}
		};
		
		
		/**
		 * Quickly and simply clear a table
		 *  @param {bool} [bRedraw=true] redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately 'nuke' the current rows (perhaps waiting for an Ajax callback...)
		 *      oTable.fnClearTable();
		 *    } );
		 */
		this.fnClearTable = function( bRedraw )
		{
			var api = this.api( true ).clear();
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
		};
		
		
		/**
		 * The exact opposite of 'opening' a row, this function will close any rows which
		 * are currently 'open'.
		 *  @param {node} nTr the table row to 'close'
		 *  @returns {int} 0 on success, or 1 if failed (can't find the row)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnClose = function( nTr )
		{
			this.api( true ).row( nTr ).child.hide();
		};
		
		
		/**
		 * Remove a row for the table
		 *  @param {mixed} target The index of the row from aoData to be deleted, or
		 *    the TR element you want to delete
		 *  @param {function|null} [callBack] Callback function
		 *  @param {bool} [redraw=true] Redraw the table or not
		 *  @returns {array} The row that was deleted
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Immediately remove the first row
		 *      oTable.fnDeleteRow( 0 );
		 *    } );
		 */
		this.fnDeleteRow = function( target, callback, redraw )
		{
			var api = this.api( true );
			var rows = api.rows( target );
			var settings = rows.settings()[0];
			var data = settings.aoData[ rows[0][0] ];
		
			rows.remove();
		
			if ( callback ) {
				callback.call( this, settings, data );
			}
		
			if ( redraw === undefined || redraw ) {
				api.draw();
			}
		
			return data;
		};
		
		
		/**
		 * Restore the table to it's original state in the DOM by removing all of DataTables
		 * enhancements, alterations to the DOM structure of the table and event listeners.
		 *  @param {boolean} [remove=false] Completely remove the table from the DOM
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      // This example is fairly pointless in reality, but shows how fnDestroy can be used
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnDestroy();
		 *    } );
		 */
		this.fnDestroy = function ( remove )
		{
			this.api( true ).destroy( remove );
		};
		
		
		/**
		 * Redraw the table
		 *  @param {bool} [complete=true] Re-filter and resort (if enabled) the table before the draw.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Re-draw the table - you wouldn't want to do it here, but it's an example :-)
		 *      oTable.fnDraw();
		 *    } );
		 */
		this.fnDraw = function( complete )
		{
			// Note that this isn't an exact match to the old call to _fnDraw - it takes
			// into account the new data, but can hold position.
			this.api( true ).draw( complete );
		};
		
		
		/**
		 * Filter the input based on data
		 *  @param {string} sInput String to filter the table on
		 *  @param {int|null} [iColumn] Column to limit filtering to
		 *  @param {bool} [bRegex=false] Treat as regular expression or not
		 *  @param {bool} [bSmart=true] Perform smart filtering or not
		 *  @param {bool} [bShowGlobal=true] Show the input global filter in it's input box(es)
		 *  @param {bool} [bCaseInsensitive=true] Do case-insensitive matching (true) or not (false)
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sometime later - filter...
		 *      oTable.fnFilter( 'test string' );
		 *    } );
		 */
		this.fnFilter = function( sInput, iColumn, bRegex, bSmart, bShowGlobal, bCaseInsensitive )
		{
			var api = this.api( true );
		
			if ( iColumn === null || iColumn === undefined ) {
				api.search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
			else {
				api.column( iColumn ).search( sInput, bRegex, bSmart, bCaseInsensitive );
			}
		
			api.draw();
		};
		
		
		/**
		 * Get the data for the whole table, an individual row or an individual cell based on the
		 * provided parameters.
		 *  @param {int|node} [src] A TR row node, TD/TH cell node or an integer. If given as
		 *    a TR node then the data source for the whole row will be returned. If given as a
		 *    TD/TH cell node then iCol will be automatically calculated and the data for the
		 *    cell returned. If given as an integer, then this is treated as the aoData internal
		 *    data index for the row (see fnGetPosition) and the data for that row used.
		 *  @param {int} [col] Optional column index that you want the data of.
		 *  @returns {array|object|string} If mRow is undefined, then the data for all rows is
		 *    returned. If mRow is defined, just data for that row, and is iCol is
		 *    defined, only data for the designated cell is returned.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    // Row data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('tr').click( function () {
		 *        var data = oTable.fnGetData( this );
		 *        // ... do something with the array / object of data for the row
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Individual cell data
		 *    $(document).ready(function() {
		 *      oTable = $('#example').dataTable();
		 *
		 *      oTable.$('td').click( function () {
		 *        var sData = oTable.fnGetData( this );
		 *        alert( 'The cell clicked on had the value of '+sData );
		 *      } );
		 *    } );
		 */
		this.fnGetData = function( src, col )
		{
			var api = this.api( true );
		
			if ( src !== undefined ) {
				var type = src.nodeName ? src.nodeName.toLowerCase() : '';
		
				return col !== undefined || type == 'td' || type == 'th' ?
					api.cell( src, col ).data() :
					api.row( src ).data() || null;
			}
		
			return api.data().toArray();
		};
		
		
		/**
		 * Get an array of the TR nodes that are used in the table's body. Note that you will
		 * typically want to use the '$' API method in preference to this as it is more
		 * flexible.
		 *  @param {int} [iRow] Optional row index for the TR element you want
		 *  @returns {array|node} If iRow is undefined, returns an array of all TR elements
		 *    in the table's body, or iRow is defined, just the TR element requested.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Get the nodes from the table
		 *      var nNodes = oTable.fnGetNodes( );
		 *    } );
		 */
		this.fnGetNodes = function( iRow )
		{
			var api = this.api( true );
		
			return iRow !== undefined ?
				api.row( iRow ).node() :
				api.rows().nodes().flatten().toArray();
		};
		
		
		/**
		 * Get the array indexes of a particular cell from it's DOM element
		 * and column index including hidden columns
		 *  @param {node} node this can either be a TR, TD or TH in the table's body
		 *  @returns {int} If nNode is given as a TR, then a single index is returned, or
		 *    if given as a cell, an array of [row index, column index (visible),
		 *    column index (all)] is given.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      $('#example tbody td').click( function () {
		 *        // Get the position of the current data from the node
		 *        var aPos = oTable.fnGetPosition( this );
		 *
		 *        // Get the data array for this row
		 *        var aData = oTable.fnGetData( aPos[0] );
		 *
		 *        // Update the data array and return the value
		 *        aData[ aPos[1] ] = 'clicked';
		 *        this.innerHTML = 'clicked';
		 *      } );
		 *
		 *      // Init DataTables
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnGetPosition = function( node )
		{
			var api = this.api( true );
			var nodeName = node.nodeName.toUpperCase();
		
			if ( nodeName == 'TR' ) {
				return api.row( node ).index();
			}
			else if ( nodeName == 'TD' || nodeName == 'TH' ) {
				var cell = api.cell( node ).index();
		
				return [
					cell.row,
					cell.columnVisible,
					cell.column
				];
			}
			return null;
		};
		
		
		/**
		 * Check to see if a row is 'open' or not.
		 *  @param {node} nTr the table row to check
		 *  @returns {boolean} true if the row is currently open, false otherwise
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnIsOpen = function( nTr )
		{
			return this.api( true ).row( nTr ).child.isShown();
		};
		
		
		/**
		 * This function will place a new row directly after a row which is currently
		 * on display on the page, with the HTML contents that is passed into the
		 * function. This can be used, for example, to ask for confirmation that a
		 * particular record should be deleted.
		 *  @param {node} nTr The table row to 'open'
		 *  @param {string|node|jQuery} mHtml The HTML to put into the row
		 *  @param {string} sClass Class to give the new TD cell
		 *  @returns {node} The row opened. Note that if the table row passed in as the
		 *    first parameter, is not found in the table, this method will silently
		 *    return.
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable;
		 *
		 *      // 'open' an information row when a row is clicked on
		 *      $('#example tbody tr').click( function () {
		 *        if ( oTable.fnIsOpen(this) ) {
		 *          oTable.fnClose( this );
		 *        } else {
		 *          oTable.fnOpen( this, "Temporary row opened", "info_row" );
		 *        }
		 *      } );
		 *
		 *      oTable = $('#example').dataTable();
		 *    } );
		 */
		this.fnOpen = function( nTr, mHtml, sClass )
		{
			return this.api( true )
				.row( nTr )
				.child( mHtml, sClass )
				.show()
				.child()[0];
		};
		
		
		/**
		 * Change the pagination - provides the internal logic for pagination in a simple API
		 * function. With this function you can have a DataTables table go to the next,
		 * previous, first or last pages.
		 *  @param {string|int} mAction Paging action to take: "first", "previous", "next" or "last"
		 *    or page number to jump to (integer), note that page 0 is the first page.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnPageChange( 'next' );
		 *    } );
		 */
		this.fnPageChange = function ( mAction, bRedraw )
		{
			var api = this.api( true ).page( mAction );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw(false);
			}
		};
		
		
		/**
		 * Show a particular column
		 *  @param {int} iCol The column whose display should be changed
		 *  @param {bool} bShow Show (true) or hide (false) the column
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Hide the second column after initialisation
		 *      oTable.fnSetColumnVis( 1, false );
		 *    } );
		 */
		this.fnSetColumnVis = function ( iCol, bShow, bRedraw )
		{
			var api = this.api( true ).column( iCol ).visible( bShow );
		
			if ( bRedraw === undefined || bRedraw ) {
				api.columns.adjust().draw();
			}
		};
		
		
		/**
		 * Get the settings for a particular table for external manipulation
		 *  @returns {object} DataTables settings object. See
		 *    {@link DataTable.models.oSettings}
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      var oSettings = oTable.fnSettings();
		 *
		 *      // Show an example parameter from the settings
		 *      alert( oSettings._iDisplayStart );
		 *    } );
		 */
		this.fnSettings = function()
		{
			return _fnSettingsFromNode( this[_ext.iApiIndex] );
		};
		
		
		/**
		 * Sort the table by a particular column
		 *  @param {int} iCol the data index to sort on. Note that this will not match the
		 *    'display index' if you have hidden data entries
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort immediately with columns 0 and 1
		 *      oTable.fnSort( [ [0,'asc'], [1,'asc'] ] );
		 *    } );
		 */
		this.fnSort = function( aaSort )
		{
			this.api( true ).order( aaSort ).draw();
		};
		
		
		/**
		 * Attach a sort listener to an element for a given column
		 *  @param {node} nNode the element to attach the sort listener to
		 *  @param {int} iColumn the column that a click on this node will sort on
		 *  @param {function} [fnCallback] callback function when sort is run
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *
		 *      // Sort on column 1, when 'sorter' is clicked on
		 *      oTable.fnSortListener( document.getElementById('sorter'), 1 );
		 *    } );
		 */
		this.fnSortListener = function( nNode, iColumn, fnCallback )
		{
			this.api( true ).order.listener( nNode, iColumn, fnCallback );
		};
		
		
		/**
		 * Update a table cell or row - this method will accept either a single value to
		 * update the cell with, an array of values with one element for each column or
		 * an object in the same format as the original data source. The function is
		 * self-referencing in order to make the multi column updates easier.
		 *  @param {object|array|string} mData Data to update the cell/row with
		 *  @param {node|int} mRow TR element you want to update or the aoData index
		 *  @param {int} [iColumn] The column to update, give as null or undefined to
		 *    update a whole row.
		 *  @param {bool} [bRedraw=true] Redraw the table or not
		 *  @param {bool} [bAction=true] Perform pre-draw actions or not
		 *  @returns {int} 0 on success, 1 on error
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      oTable.fnUpdate( 'Example update', 0, 0 ); // Single cell
		 *      oTable.fnUpdate( ['a', 'b', 'c', 'd', 'e'], $('tbody tr')[0] ); // Row
		 *    } );
		 */
		this.fnUpdate = function( mData, mRow, iColumn, bRedraw, bAction )
		{
			var api = this.api( true );
		
			if ( iColumn === undefined || iColumn === null ) {
				api.row( mRow ).data( mData );
			}
			else {
				api.cell( mRow, iColumn ).data( mData );
			}
		
			if ( bAction === undefined || bAction ) {
				api.columns.adjust();
			}
		
			if ( bRedraw === undefined || bRedraw ) {
				api.draw();
			}
			return 0;
		};
		
		
		/**
		 * Provide a common method for plug-ins to check the version of DataTables being used, in order
		 * to ensure compatibility.
		 *  @param {string} sVersion Version string to check for, in the format "X.Y.Z". Note that the
		 *    formats "X" and "X.Y" are also acceptable.
		 *  @returns {boolean} true if this version of DataTables is greater or equal to the required
		 *    version, or false if this version of DataTales is not suitable
		 *  @method
		 *  @dtopt API
		 *  @deprecated Since v1.10
		 *
		 *  @example
		 *    $(document).ready(function() {
		 *      var oTable = $('#example').dataTable();
		 *      alert( oTable.fnVersionCheck( '1.9.0' ) );
		 *    } );
		 */
		this.fnVersionCheck = _ext.fnVersionCheck;
		

		var _that = this;
		var emptyInit = options === undefined;
		var len = this.length;

		if ( emptyInit ) {
			options = {};
		}

		this.oApi = this.internal = _ext.internal;

		// Extend with old style plug-in API methods
		for ( var fn in DataTable.ext.internal ) {
			if ( fn ) {
				this[fn] = _fnExternApiFunc(fn);
			}
		}

		this.each(function() {
			// For each initialisation we want to give it a clean initialisation
			// object that can be bashed around
			var o = {};
			var oInit = len > 1 ? // optimisation for single table case
				_fnExtend( o, options, true ) :
				options;

			/*global oInit,_that,emptyInit*/
			var i=0, iLen, j, jLen, k, kLen;
			var sId = this.getAttribute( 'id' );
			var bInitHandedOff = false;
			var defaults = DataTable.defaults;
			var $this = $(this);
			
			
			/* Sanity check */
			if ( this.nodeName.toLowerCase() != 'table' )
			{
				_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );
				return;
			}
			
			/* Backwards compatibility for the defaults */
			_fnCompatOpts( defaults );
			_fnCompatCols( defaults.column );
			
			/* Convert the camel-case defaults to Hungarian */
			_fnCamelToHungarian( defaults, defaults, true );
			_fnCamelToHungarian( defaults.column, defaults.column, true );
			
			/* Setting up the initialisation object */
			_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );
			
			
			
			/* Check to see if we are re-initialising a table */
			var allSettings = DataTable.settings;
			for ( i=0, iLen=allSettings.length ; i<iLen ; i++ )
			{
				var s = allSettings[i];
			
				/* Base check on table node */
				if (
					s.nTable == this ||
					(s.nTHead && s.nTHead.parentNode == this) ||
					(s.nTFoot && s.nTFoot.parentNode == this)
				) {
					var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;
					var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;
			
					if ( emptyInit || bRetrieve )
					{
						return s.oInstance;
					}
					else if ( bDestroy )
					{
						s.oInstance.fnDestroy();
						break;
					}
					else
					{
						_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );
						return;
					}
				}
			
				/* If the element we are initialising has the same ID as a table which was previously
				 * initialised, but the table nodes don't match (from before) then we destroy the old
				 * instance by simply deleting it. This is under the assumption that the table has been
				 * destroyed by other methods. Anyone using non-id selectors will need to do this manually
				 */
				if ( s.sTableId == this.id )
				{
					allSettings.splice( i, 1 );
					break;
				}
			}
			
			/* Ensure the table has an ID - required for accessibility */
			if ( sId === null || sId === "" )
			{
				sId = "DataTables_Table_"+(DataTable.ext._unique++);
				this.id = sId;
			}
			
			/* Create the settings object for this table and set some of the default parameters */
			var oSettings = $.extend( true, {}, DataTable.models.oSettings, {
				"sDestroyWidth": $this[0].style.width,
				"sInstance":     sId,
				"sTableId":      sId
			} );
			oSettings.nTable = this;
			oSettings.oApi   = _that.internal;
			oSettings.oInit  = oInit;
			
			allSettings.push( oSettings );
			
			// Need to add the instance after the instance after the settings object has been added
			// to the settings array, so we can self reference the table instance if more than one
			oSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();
			
			// Backwards compatibility, before we apply all the defaults
			_fnCompatOpts( oInit );
			_fnLanguageCompat( oInit.oLanguage );
			
			// If the length menu is given, but the init display length is not, use the length menu
			if ( oInit.aLengthMenu && ! oInit.iDisplayLength )
			{
				oInit.iDisplayLength = Array.isArray( oInit.aLengthMenu[0] ) ?
					oInit.aLengthMenu[0][0] : oInit.aLengthMenu[0];
			}
			
			// Apply the defaults and init options to make a single init object will all
			// options defined from defaults and instance options.
			oInit = _fnExtend( $.extend( true, {}, defaults ), oInit );
			
			
			// Map the initialisation options onto the settings object
			_fnMap( oSettings.oFeatures, oInit, [
				"bPaginate",
				"bLengthChange",
				"bFilter",
				"bSort",
				"bSortMulti",
				"bInfo",
				"bProcessing",
				"bAutoWidth",
				"bSortClasses",
				"bServerSide",
				"bDeferRender"
			] );
			_fnMap( oSettings, oInit, [
				"asStripeClasses",
				"ajax",
				"fnServerData",
				"fnFormatNumber",
				"sServerMethod",
				"aaSorting",
				"aaSortingFixed",
				"aLengthMenu",
				"sPaginationType",
				"sAjaxSource",
				"sAjaxDataProp",
				"iStateDuration",
				"sDom",
				"bSortCellsTop",
				"iTabIndex",
				"fnStateLoadCallback",
				"fnStateSaveCallback",
				"renderer",
				"searchDelay",
				"rowId",
				[ "iCookieDuration", "iStateDuration" ], // backwards compat
				[ "oSearch", "oPreviousSearch" ],
				[ "aoSearchCols", "aoPreSearchCols" ],
				[ "iDisplayLength", "_iDisplayLength" ]
			] );
			_fnMap( oSettings.oScroll, oInit, [
				[ "sScrollX", "sX" ],
				[ "sScrollXInner", "sXInner" ],
				[ "sScrollY", "sY" ],
				[ "bScrollCollapse", "bCollapse" ]
			] );
			_fnMap( oSettings.oLanguage, oInit, "fnInfoCallback" );
			
			/* Callback functions which are array driven */
			_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback,      'user' );
			_fnCallbackReg( oSettings, 'aoServerParams',       oInit.fnServerParams,      'user' );
			_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams,   'user' );
			_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback,       'user' );
			_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow,        'user' );
			_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback,    'user' );
			_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete,      'user' );
			_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback,   'user' );
			
			oSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );
			
			/* Browser support detection */
			_fnBrowserDetect( oSettings );
			
			var oClasses = oSettings.oClasses;
			
			$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );
			$this.addClass( oClasses.sTable );
			
			
			if ( oSettings.iInitDisplayStart === undefined )
			{
				/* Display start point, taking into account the save saving */
				oSettings.iInitDisplayStart = oInit.iDisplayStart;
				oSettings._iDisplayStart = oInit.iDisplayStart;
			}
			
			if ( oInit.iDeferLoading !== null )
			{
				oSettings.bDeferLoading = true;
				var tmp = Array.isArray( oInit.iDeferLoading );
				oSettings._iRecordsDisplay = tmp ? oInit.iDeferLoading[0] : oInit.iDeferLoading;
				oSettings._iRecordsTotal = tmp ? oInit.iDeferLoading[1] : oInit.iDeferLoading;
			}
			
			/* Language definitions */
			var oLanguage = oSettings.oLanguage;
			$.extend( true, oLanguage, oInit.oLanguage );
			
			if ( oLanguage.sUrl )
			{
				/* Get the language definitions from a file - because this Ajax call makes the language
				 * get async to the remainder of this function we use bInitHandedOff to indicate that
				 * _fnInitialise will be fired by the returned Ajax handler, rather than the constructor
				 */
				$.ajax( {
					dataType: 'json',
					url: oLanguage.sUrl,
					success: function ( json ) {
						_fnCamelToHungarian( defaults.oLanguage, json );
						_fnLanguageCompat( json );
						$.extend( true, oLanguage, json );
			
						_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);
						_fnInitialise( oSettings );
					},
					error: function () {
						// Error occurred loading language file, continue on as best we can
						_fnInitialise( oSettings );
					}
				} );
				bInitHandedOff = true;
			}
			else {
				_fnCallbackFire( oSettings, null, 'i18n', [oSettings]);
			}
			
			/*
			 * Stripes
			 */
			if ( oInit.asStripeClasses === null )
			{
				oSettings.asStripeClasses =[
					oClasses.sStripeOdd,
					oClasses.sStripeEven
				];
			}
			
			/* Remove row stripe classes if they are already on the table row */
			var stripeClasses = oSettings.asStripeClasses;
			var rowOne = $this.children('tbody').find('tr').eq(0);
			if ( $.inArray( true, $.map( stripeClasses, function(el, i) {
				return rowOne.hasClass(el);
			} ) ) !== -1 ) {
				$('tbody tr', this).removeClass( stripeClasses.join(' ') );
				oSettings.asDestroyStripes = stripeClasses.slice();
			}
			
			/*
			 * Columns
			 * See if we should load columns automatically or use defined ones
			 */
			var anThs = [];
			var aoColumnsInit;
			var nThead = this.getElementsByTagName('thead');
			if ( nThead.length !== 0 )
			{
				_fnDetectHeader( oSettings.aoHeader, nThead[0] );
				anThs = _fnGetUniqueThs( oSettings );
			}
			
			/* If not given a column array, generate one with nulls */
			if ( oInit.aoColumns === null )
			{
				aoColumnsInit = [];
				for ( i=0, iLen=anThs.length ; i<iLen ; i++ )
				{
					aoColumnsInit.push( null );
				}
			}
			else
			{
				aoColumnsInit = oInit.aoColumns;
			}
			
			/* Add the columns */
			for ( i=0, iLen=aoColumnsInit.length ; i<iLen ; i++ )
			{
				_fnAddColumn( oSettings, anThs ? anThs[i] : null );
			}
			
			/* Apply the column definitions */
			_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, aoColumnsInit, function (iCol, oDef) {
				_fnColumnOptions( oSettings, iCol, oDef );
			} );
			
			/* HTML5 attribute detection - build an mData object automatically if the
			 * attributes are found
			 */
			if ( rowOne.length ) {
				var a = function ( cell, name ) {
					return cell.getAttribute( 'data-'+name ) !== null ? name : null;
				};
			
				$( rowOne[0] ).children('th, td').each( function (i, cell) {
					var col = oSettings.aoColumns[i];
			
					if ( col.mData === i ) {
						var sort = a( cell, 'sort' ) || a( cell, 'order' );
						var filter = a( cell, 'filter' ) || a( cell, 'search' );
			
						if ( sort !== null || filter !== null ) {
							col.mData = {
								_:      i+'.display',
								sort:   sort !== null   ? i+'.@data-'+sort   : undefined,
								type:   sort !== null   ? i+'.@data-'+sort   : undefined,
								filter: filter !== null ? i+'.@data-'+filter : undefined
							};
			
							_fnColumnOptions( oSettings, i );
						}
					}
				} );
			}
			
			var features = oSettings.oFeatures;
			var loadedInit = function () {
				/*
				 * Sorting
				 * @todo For modularisation (1.11) this needs to do into a sort start up handler
				 */
			
				// If aaSorting is not defined, then we use the first indicator in asSorting
				// in case that has been altered, so the default sort reflects that option
				if ( oInit.aaSorting === undefined ) {
					var sorting = oSettings.aaSorting;
					for ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {
						sorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];
					}
				}
			
				/* Do a first pass on the sorting classes (allows any size changes to be taken into
				 * account, and also will apply sorting disabled classes if disabled
				 */
				_fnSortingClasses( oSettings );
			
				if ( features.bSort ) {
					_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
						if ( oSettings.bSorted ) {
							var aSort = _fnSortFlatten( oSettings );
							var sortedColumns = {};
			
							$.each( aSort, function (i, val) {
								sortedColumns[ val.src ] = val.dir;
							} );
			
							_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort, sortedColumns] );
							_fnSortAria( oSettings );
						}
					} );
				}
			
				_fnCallbackReg( oSettings, 'aoDrawCallback', function () {
					if ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {
						_fnSortingClasses( oSettings );
					}
				}, 'sc' );
			
			
				/*
				 * Final init
				 * Cache the header, body and footer as required, creating them if needed
				 */
			
				// Work around for Webkit bug 83867 - store the caption-side before removing from doc
				var captions = $this.children('caption').each( function () {
					this._captionSide = $(this).css('caption-side');
				} );
			
				var thead = $this.children('thead');
				if ( thead.length === 0 ) {
					thead = $('<thead/>').appendTo($this);
				}
				oSettings.nTHead = thead[0];
			
				var tbody = $this.children('tbody');
				if ( tbody.length === 0 ) {
					tbody = $('<tbody/>').insertAfter(thead);
				}
				oSettings.nTBody = tbody[0];
			
				var tfoot = $this.children('tfoot');
				if ( tfoot.length === 0 && captions.length > 0 && (oSettings.oScroll.sX !== "" || oSettings.oScroll.sY !== "") ) {
					// If we are a scrolling table, and no footer has been given, then we need to create
					// a tfoot element for the caption element to be appended to
					tfoot = $('<tfoot/>').appendTo($this);
				}
			
				if ( tfoot.length === 0 || tfoot.children().length === 0 ) {
					$this.addClass( oClasses.sNoFooter );
				}
				else if ( tfoot.length > 0 ) {
					oSettings.nTFoot = tfoot[0];
					_fnDetectHeader( oSettings.aoFooter, oSettings.nTFoot );
				}
			
				/* Check if there is data passing into the constructor */
				if ( oInit.aaData ) {
					for ( i=0 ; i<oInit.aaData.length ; i++ ) {
						_fnAddData( oSettings, oInit.aaData[ i ] );
					}
				}
				else if ( oSettings.bDeferLoading || _fnDataSource( oSettings ) == 'dom' ) {
					/* Grab the data from the page - only do this when deferred loading or no Ajax
					 * source since there is no point in reading the DOM data if we are then going
					 * to replace it with Ajax data
					 */
					_fnAddTr( oSettings, $(oSettings.nTBody).children('tr') );
				}
			
				/* Copy the data index array */
				oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();
			
				/* Initialisation complete - table can be drawn */
				oSettings.bInitialised = true;
			
				/* Check if we need to initialise the table (it might not have been handed off to the
				 * language processor)
				 */
				if ( bInitHandedOff === false ) {
					_fnInitialise( oSettings );
				}
			};
			
			/* Must be done after everything which can be overridden by the state saving! */
			_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState, 'state_save' );
			
			if ( oInit.bStateSave )
			{
				features.bStateSave = true;
				_fnLoadState( oSettings, oInit, loadedInit );
			}
			else {
				loadedInit();
			}
			
		} );
		_that = null;
		return this;
	};

	
	/*
	 * It is useful to have variables which are scoped locally so only the
	 * DataTables functions can access them and they don't leak into global space.
	 * At the same time these functions are often useful over multiple files in the
	 * core and API, so we list, or at least document, all variables which are used
	 * by DataTables as private variables here. This also ensures that there is no
	 * clashing of variable names and that they can easily referenced for reuse.
	 */
	
	
	// Defined else where
	//  _selector_run
	//  _selector_opts
	//  _selector_first
	//  _selector_row_indexes
	
	var _ext; // DataTable.ext
	var _Api; // DataTable.Api
	var _api_register; // DataTable.Api.register
	var _api_registerPlural; // DataTable.Api.registerPlural
	
	var _re_dic = {};
	var _re_new_lines = /[\\r\\n\\u2028]/g;
	var _re_html = /<.*?>/g;
	
	// This is not strict ISO8601 - Date.parse() is quite lax, although
	// implementations differ between browsers.
	var _re_date = /^\\d{2,4}[\\.\\/\\-]\\d{1,2}[\\.\\/\\-]\\d{1,2}([T ]{1}\\d{1,2}[:\\.]\\d{2}([\\.:]\\d{2})?)?$/;
	
	// Escape regular expression special characters
	var _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );
	
	// http://en.wikipedia.org/wiki/Foreign_exchange_market
	// - \\u20BD - Russian ruble.
	// - \\u20a9 - South Korean Won
	// - \\u20BA - Turkish Lira
	// - \\u20B9 - Indian Rupee
	// - R - Brazil (R$) and South Africa
	// - fr - Swiss Franc
	// - kr - Swedish krona, Norwegian krone and Danish krone
	// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many
	// - \u0243 - Bitcoin
	// - \u039E - Ethereum
	//   standards as thousands separators.
	var _re_formatted_numeric = /['\\u00A0,$\xA3\u20AC\xA5%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfk\u0243\u039E]/gi;
	
	
	var _empty = function ( d ) {
		return !d || d === true || d === '-' ? true : false;
	};
	
	
	var _intVal = function ( s ) {
		var integer = parseInt( s, 10 );
		return !isNaN(integer) && isFinite(s) ? integer : null;
	};
	
	// Convert from a formatted number with characters other than \`.\` as the
	// decimal place, to a Javascript number
	var _numToDecimal = function ( num, decimalPoint ) {
		// Cache created regular expressions for speed as this function is called often
		if ( ! _re_dic[ decimalPoint ] ) {
			_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );
		}
		return typeof num === 'string' && decimalPoint !== '.' ?
			num.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :
			num;
	};
	
	
	var _isNumber = function ( d, decimalPoint, formatted ) {
		var strType = typeof d === 'string';
	
		// If empty return immediately so there must be a number if it is a
		// formatted string (this stops the string "k", or "kr", etc being detected
		// as a formatted number for currency
		if ( _empty( d ) ) {
			return true;
		}
	
		if ( decimalPoint && strType ) {
			d = _numToDecimal( d, decimalPoint );
		}
	
		if ( formatted && strType ) {
			d = d.replace( _re_formatted_numeric, '' );
		}
	
		return !isNaN( parseFloat(d) ) && isFinite( d );
	};
	
	
	// A string without HTML in it can be considered to be HTML still
	var _isHtml = function ( d ) {
		return _empty( d ) || typeof d === 'string';
	};
	
	
	var _htmlNumeric = function ( d, decimalPoint, formatted ) {
		if ( _empty( d ) ) {
			return true;
		}
	
		var html = _isHtml( d );
		return ! html ?
			null :
			_isNumber( _stripHtml( d ), decimalPoint, formatted ) ?
				true :
				null;
	};
	
	
	var _pluck = function ( a, prop, prop2 ) {
		var out = [];
		var i=0, ien=a.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[i] && a[i][ prop ] ) {
					out.push( a[i][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				if ( a[i] ) {
					out.push( a[i][ prop ] );
				}
			}
		}
	
		return out;
	};
	
	
	// Basically the same as _pluck, but rather than looping over \`a\` we use \`order\`
	// as the indexes to pick from \`a\`
	var _pluck_order = function ( a, order, prop, prop2 )
	{
		var out = [];
		var i=0, ien=order.length;
	
		// Could have the test in the loop for slightly smaller code, but speed
		// is essential here
		if ( prop2 !== undefined ) {
			for ( ; i<ien ; i++ ) {
				if ( a[ order[i] ][ prop ] ) {
					out.push( a[ order[i] ][ prop ][ prop2 ] );
				}
			}
		}
		else {
			for ( ; i<ien ; i++ ) {
				out.push( a[ order[i] ][ prop ] );
			}
		}
	
		return out;
	};
	
	
	var _range = function ( len, start )
	{
		var out = [];
		var end;
	
		if ( start === undefined ) {
			start = 0;
			end = len;
		}
		else {
			end = start;
			start = len;
		}
	
		for ( var i=start ; i<end ; i++ ) {
			out.push( i );
		}
	
		return out;
	};
	
	
	var _removeEmpty = function ( a )
	{
		var out = [];
	
		for ( var i=0, ien=a.length ; i<ien ; i++ ) {
			if ( a[i] ) { // careful - will remove all falsy values!
				out.push( a[i] );
			}
		}
	
		return out;
	};
	
	
	var _stripHtml = function ( d ) {
		return d.replace( _re_html, '' );
	};
	
	
	/**
	 * Determine if all values in the array are unique. This means we can short
	 * cut the _unique method at the cost of a single loop. A sorted array is used
	 * to easily check the values.
	 *
	 * @param  {array} src Source array
	 * @return {boolean} true if all unique, false otherwise
	 * @ignore
	 */
	var _areAllUnique = function ( src ) {
		if ( src.length < 2 ) {
			return true;
		}
	
		var sorted = src.slice().sort();
		var last = sorted[0];
	
		for ( var i=1, ien=sorted.length ; i<ien ; i++ ) {
			if ( sorted[i] === last ) {
				return false;
			}
	
			last = sorted[i];
		}
	
		return true;
	};
	
	
	/**
	 * Find the unique elements in a source array.
	 *
	 * @param  {array} src Source array
	 * @return {array} Array of unique items
	 * @ignore
	 */
	var _unique = function ( src )
	{
		if ( _areAllUnique( src ) ) {
			return src.slice();
		}
	
		// A faster unique method is to use object keys to identify used values,
		// but this doesn't work with arrays or objects, which we must also
		// consider. See jsperf.com/compare-array-unique-versions/4 for more
		// information.
		var
			out = [],
			val,
			i, ien=src.length,
			j, k=0;
	
		again: for ( i=0 ; i<ien ; i++ ) {
			val = src[i];
	
			for ( j=0 ; j<k ; j++ ) {
				if ( out[j] === val ) {
					continue again;
				}
			}
	
			out.push( val );
			k++;
		}
	
		return out;
	};
	
	// Surprisingly this is faster than [].concat.apply
	// https://jsperf.com/flatten-an-array-loop-vs-reduce/2
	var _flatten = function (out, val) {
		if (Array.isArray(val)) {
			for (var i=0 ; i<val.length ; i++) {
				_flatten(out, val[i]);
			}
		}
		else {
			out.push(val);
		}
	  
		return out;
	}
	
	var _includes = function (search, start) {
		if (start === undefined) {
			start = 0;
		}
	
		return this.indexOf(search, start) !== -1;	
	};
	
	// Array.isArray polyfill.
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray
	if (! Array.isArray) {
	    Array.isArray = function(arg) {
	        return Object.prototype.toString.call(arg) === '[object Array]';
	    };
	}
	
	if (! Array.prototype.includes) {
		Array.prototype.includes = _includes;
	}
	
	// .trim() polyfill
	// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim
	if (!String.prototype.trim) {
	  String.prototype.trim = function () {
	    return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');
	  };
	}
	
	if (! String.prototype.includes) {
		String.prototype.includes = _includes;
	}
	
	/**
	 * DataTables utility methods
	 * 
	 * This namespace provides helper methods that DataTables uses internally to
	 * create a DataTable, but which are not exclusively used only for DataTables.
	 * These methods can be used by extension authors to save the duplication of
	 * code.
	 *
	 *  @namespace
	 */
	DataTable.util = {
		/**
		 * Throttle the calls to a function. Arguments and context are maintained
		 * for the throttled function.
		 *
		 * @param {function} fn Function to be called
		 * @param {integer} freq Call frequency in mS
		 * @return {function} Wrapped function
		 */
		throttle: function ( fn, freq ) {
			var
				frequency = freq !== undefined ? freq : 200,
				last,
				timer;
	
			return function () {
				var
					that = this,
					now  = +new Date(),
					args = arguments;
	
				if ( last && now < last + frequency ) {
					clearTimeout( timer );
	
					timer = setTimeout( function () {
						last = undefined;
						fn.apply( that, args );
					}, frequency );
				}
				else {
					last = now;
					fn.apply( that, args );
				}
			};
		},
	
	
		/**
		 * Escape a string such that it can be used in a regular expression
		 *
		 *  @param {string} val string to escape
		 *  @returns {string} escaped string
		 */
		escapeRegex: function ( val ) {
			return val.replace( _re_escape_regex, '\\\\$1' );
		},
	
		/**
		 * Create a function that will write to a nested object or array
		 * @param {*} source JSON notation string
		 * @returns Write function
		 */
		set: function ( source ) {
			if ( $.isPlainObject( source ) ) {
				/* Unlike get, only the underscore (global) option is used for for
				 * setting data since we don't know the type here. This is why an object
				 * option is not documented for \`mData\` (which is read/write), but it is
				 * for \`mRender\` which is read only.
				 */
				return DataTable.util.set( source._ );
			}
			else if ( source === null ) {
				// Nothing to do when the data source is null
				return function () {};
			}
			else if ( typeof source === 'function' ) {
				return function (data, val, meta) {
					source( data, 'set', val, meta );
				};
			}
			else if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||
					  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )
			{
				// Like the get, we need to get data from a nested object
				var setData = function (data, val, src) {
					var a = _fnSplitObjNotation( src ), b;
					var aLast = a[a.length-1];
					var arrayNotation, funcNotation, o, innerSrc;
		
					for ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {
						// Protect against prototype pollution
						if (a[i] === '__proto__' || a[i] === 'constructor') {
							throw new Error('Cannot set prototype values');
						}
		
						// Check if we are dealing with an array notation request
						arrayNotation = a[i].match(__reArray);
						funcNotation = a[i].match(__reFn);
		
						if ( arrayNotation ) {
							a[i] = a[i].replace(__reArray, '');
							data[ a[i] ] = [];
		
							// Get the remainder of the nested object to set so we can recurse
							b = a.slice();
							b.splice( 0, i+1 );
							innerSrc = b.join('.');
		
							// Traverse each entry in the array setting the properties requested
							if ( Array.isArray( val ) ) {
								for ( var j=0, jLen=val.length ; j<jLen ; j++ ) {
									o = {};
									setData( o, val[j], innerSrc );
									data[ a[i] ].push( o );
								}
							}
							else {
								// We've been asked to save data to an array, but it
								// isn't array data to be saved. Best that can be done
								// is to just save the value.
								data[ a[i] ] = val;
							}
		
							// The inner call to setData has already traversed through the remainder
							// of the source and has set the data, thus we can exit here
							return;
						}
						else if ( funcNotation ) {
							// Function call
							a[i] = a[i].replace(__reFn, '');
							data = data[ a[i] ]( val );
						}
		
						// If the nested object doesn't currently exist - since we are
						// trying to set the value - create it
						if ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {
							data[ a[i] ] = {};
						}
						data = data[ a[i] ];
					}
		
					// Last item in the input - i.e, the actual set
					if ( aLast.match(__reFn ) ) {
						// Function call
						data = data[ aLast.replace(__reFn, '') ]( val );
					}
					else {
						// If array notation is used, we just want to strip it and use the property name
						// and assign the value. If it isn't used, then we get the result we want anyway
						data[ aLast.replace(__reArray, '') ] = val;
					}
				};
		
				return function (data, val) { // meta is also passed in, but not used
					return setData( data, val, source );
				};
			}
			else {
				// Array or flat object mapping
				return function (data, val) { // meta is also passed in, but not used
					data[source] = val;
				};
			}
		},
	
		/**
		 * Create a function that will read nested objects from arrays, based on JSON notation
		 * @param {*} source JSON notation string
		 * @returns Value read
		 */
		get: function ( source ) {
			if ( $.isPlainObject( source ) ) {
				// Build an object of get functions, and wrap them in a single call
				var o = {};
				$.each( source, function (key, val) {
					if ( val ) {
						o[key] = DataTable.util.get( val );
					}
				} );
		
				return function (data, type, row, meta) {
					var t = o[type] || o._;
					return t !== undefined ?
						t(data, type, row, meta) :
						data;
				};
			}
			else if ( source === null ) {
				// Give an empty string for rendering / sorting etc
				return function (data) { // type, row and meta also passed, but not used
					return data;
				};
			}
			else if ( typeof source === 'function' ) {
				return function (data, type, row, meta) {
					return source( data, type, row, meta );
				};
			}
			else if ( typeof source === 'string' && (source.indexOf('.') !== -1 ||
					  source.indexOf('[') !== -1 || source.indexOf('(') !== -1) )
			{
				/* If there is a . in the source string then the data source is in a
				 * nested object so we loop over the data for each level to get the next
				 * level down. On each loop we test for undefined, and if found immediately
				 * return. This allows entire objects to be missing and sDefaultContent to
				 * be used if defined, rather than throwing an error
				 */
				var fetchData = function (data, type, src) {
					var arrayNotation, funcNotation, out, innerSrc;
		
					if ( src !== "" ) {
						var a = _fnSplitObjNotation( src );
		
						for ( var i=0, iLen=a.length ; i<iLen ; i++ ) {
							// Check if we are dealing with special notation
							arrayNotation = a[i].match(__reArray);
							funcNotation = a[i].match(__reFn);
		
							if ( arrayNotation ) {
								// Array notation
								a[i] = a[i].replace(__reArray, '');
		
								// Condition allows simply [] to be passed in
								if ( a[i] !== "" ) {
									data = data[ a[i] ];
								}
								out = [];
		
								// Get the remainder of the nested object to get
								a.splice( 0, i+1 );
								innerSrc = a.join('.');
		
								// Traverse each entry in the array getting the properties requested
								if ( Array.isArray( data ) ) {
									for ( var j=0, jLen=data.length ; j<jLen ; j++ ) {
										out.push( fetchData( data[j], type, innerSrc ) );
									}
								}
		
								// If a string is given in between the array notation indicators, that
								// is used to join the strings together, otherwise an array is returned
								var join = arrayNotation[0].substring(1, arrayNotation[0].length-1);
								data = (join==="") ? out : out.join(join);
		
								// The inner call to fetchData has already traversed through the remainder
								// of the source requested, so we exit from the loop
								break;
							}
							else if ( funcNotation ) {
								// Function call
								a[i] = a[i].replace(__reFn, '');
								data = data[ a[i] ]();
								continue;
							}
		
							if ( data === null || data[ a[i] ] === undefined ) {
								return undefined;
							}
	
							data = data[ a[i] ];
						}
					}
		
					return data;
				};
		
				return function (data, type) { // row and meta also passed, but not used
					return fetchData( data, type, source );
				};
			}
			else {
				// Array or flat object mapping
				return function (data, type) { // row and meta also passed, but not used
					return data[source];
				};
			}
		}
	};
	
	
	
	/**
	 * Create a mapping object that allows camel case parameters to be looked up
	 * for their Hungarian counterparts. The mapping is stored in a private
	 * parameter called \`_hungarianMap\` which can be accessed on the source object.
	 *  @param {object} o
	 *  @memberof DataTable#oApi
	 */
	function _fnHungarianMap ( o )
	{
		var
			hungarian = 'a aa ai ao as b fn i m o s ',
			match,
			newKey,
			map = {};
	
		$.each( o, function (key, val) {
			match = key.match(/^([^A-Z]+?)([A-Z])/);
	
			if ( match && hungarian.indexOf(match[1]+' ') !== -1 )
			{
				newKey = key.replace( match[0], match[2].toLowerCase() );
				map[ newKey ] = key;
	
				if ( match[1] === 'o' )
				{
					_fnHungarianMap( o[key] );
				}
			}
		} );
	
		o._hungarianMap = map;
	}
	
	
	/**
	 * Convert from camel case parameters to Hungarian, based on a Hungarian map
	 * created by _fnHungarianMap.
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to \`true\`, properties which already have a
	 *    Hungarian value in the \`user\` object will be overwritten. Otherwise they
	 *    won't be.
	 *  @memberof DataTable#oApi
	 */
	function _fnCamelToHungarian ( src, user, force )
	{
		if ( ! src._hungarianMap ) {
			_fnHungarianMap( src );
		}
	
		var hungarianKey;
	
		$.each( user, function (key, val) {
			hungarianKey = src._hungarianMap[ key ];
	
			if ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )
			{
				// For objects, we need to buzz down into the object to copy parameters
				if ( hungarianKey.charAt(0) === 'o' )
				{
					// Copy the camelCase options over to the hungarian
					if ( ! user[ hungarianKey ] ) {
						user[ hungarianKey ] = {};
					}
					$.extend( true, user[hungarianKey], user[key] );
	
					_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );
				}
				else {
					user[hungarianKey] = user[ key ];
				}
			}
		} );
	}
	
	
	/**
	 * Language compatibility - when certain options are given, and others aren't, we
	 * need to duplicate the values over, in order to provide backwards compatibility
	 * with older language files.
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnLanguageCompat( lang )
	{
		// Note the use of the Hungarian notation for the parameters in this method as
		// this is called after the mapping of camelCase to Hungarian
		var defaults = DataTable.defaults.oLanguage;
	
		// Default mapping
		var defaultDecimal = defaults.sDecimal;
		if ( defaultDecimal ) {
			_addNumericSort( defaultDecimal );
		}
	
		if ( lang ) {
			var zeroRecords = lang.sZeroRecords;
	
			// Backwards compatibility - if there is no sEmptyTable given, then use the same as
			// sZeroRecords - assuming that is given.
			if ( ! lang.sEmptyTable && zeroRecords &&
				defaults.sEmptyTable === "No data available in table" )
			{
				_fnMap( lang, lang, 'sZeroRecords', 'sEmptyTable' );
			}
	
			// Likewise with loading records
			if ( ! lang.sLoadingRecords && zeroRecords &&
				defaults.sLoadingRecords === "Loading..." )
			{
				_fnMap( lang, lang, 'sZeroRecords', 'sLoadingRecords' );
			}
	
			// Old parameter name of the thousands separator mapped onto the new
			if ( lang.sInfoThousands ) {
				lang.sThousands = lang.sInfoThousands;
			}
	
			var decimal = lang.sDecimal;
			if ( decimal && defaultDecimal !== decimal ) {
				_addNumericSort( decimal );
			}
		}
	}
	
	
	/**
	 * Map one parameter onto another
	 *  @param {object} o Object to map
	 *  @param {*} knew The new parameter name
	 *  @param {*} old The old parameter name
	 */
	var _fnCompatMap = function ( o, knew, old ) {
		if ( o[ knew ] !== undefined ) {
			o[ old ] = o[ knew ];
		}
	};
	
	
	/**
	 * Provide backwards compatibility for the main DT options. Note that the new
	 * options are mapped onto the old parameters, so this is an external interface
	 * change only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatOpts ( init )
	{
		_fnCompatMap( init, 'ordering',      'bSort' );
		_fnCompatMap( init, 'orderMulti',    'bSortMulti' );
		_fnCompatMap( init, 'orderClasses',  'bSortClasses' );
		_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );
		_fnCompatMap( init, 'order',         'aaSorting' );
		_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );
		_fnCompatMap( init, 'paging',        'bPaginate' );
		_fnCompatMap( init, 'pagingType',    'sPaginationType' );
		_fnCompatMap( init, 'pageLength',    'iDisplayLength' );
		_fnCompatMap( init, 'searching',     'bFilter' );
	
		// Boolean initialisation of x-scrolling
		if ( typeof init.sScrollX === 'boolean' ) {
			init.sScrollX = init.sScrollX ? '100%' : '';
		}
		if ( typeof init.scrollX === 'boolean' ) {
			init.scrollX = init.scrollX ? '100%' : '';
		}
	
		// Column search objects are in an array, so it needs to be converted
		// element by element
		var searchCols = init.aoSearchCols;
	
		if ( searchCols ) {
			for ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {
				if ( searchCols[i] ) {
					_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );
				}
			}
		}
	}
	
	
	/**
	 * Provide backwards compatibility for column options. Note that the new options
	 * are mapped onto the old parameters, so this is an external interface change
	 * only.
	 *  @param {object} init Object to map
	 */
	function _fnCompatCols ( init )
	{
		_fnCompatMap( init, 'orderable',     'bSortable' );
		_fnCompatMap( init, 'orderData',     'aDataSort' );
		_fnCompatMap( init, 'orderSequence', 'asSorting' );
		_fnCompatMap( init, 'orderDataType', 'sortDataType' );
	
		// orderData can be given as an integer
		var dataSort = init.aDataSort;
		if ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {
			init.aDataSort = [ dataSort ];
		}
	}
	
	
	/**
	 * Browser feature detection for capabilities, quirks
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBrowserDetect( settings )
	{
		// We don't need to do this every time DataTables is constructed, the values
		// calculated are specific to the browser and OS configuration which we
		// don't expect to change between initialisations
		if ( ! DataTable.__browser ) {
			var browser = {};
			DataTable.__browser = browser;
	
			// Scrolling feature / quirks detection
			var n = $('<div/>')
				.css( {
					position: 'fixed',
					top: 0,
					left: $(window).scrollLeft()*-1, // allow for scrolling
					height: 1,
					width: 1,
					overflow: 'hidden'
				} )
				.append(
					$('<div/>')
						.css( {
							position: 'absolute',
							top: 1,
							left: 1,
							width: 100,
							overflow: 'scroll'
						} )
						.append(
							$('<div/>')
								.css( {
									width: '100%',
									height: 10
								} )
						)
				)
				.appendTo( 'body' );
	
			var outer = n.children();
			var inner = outer.children();
	
			// Numbers below, in order, are:
			// inner.offsetWidth, inner.clientWidth, outer.offsetWidth, outer.clientWidth
			//
			// IE6 XP:                           100 100 100  83
			// IE7 Vista:                        100 100 100  83
			// IE 8+ Windows:                     83  83 100  83
			// Evergreen Windows:                 83  83 100  83
			// Evergreen Mac with scrollbars:     85  85 100  85
			// Evergreen Mac without scrollbars: 100 100 100 100
	
			// Get scrollbar width
			browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;
	
			// IE6/7 will oversize a width 100% element inside a scrolling element, to
			// include the width of the scrollbar, while other browsers ensure the inner
			// element is contained without forcing scrolling
			browser.bScrollOversize = inner[0].offsetWidth === 100 && outer[0].clientWidth !== 100;
	
			// In rtl text layout, some browsers (most, but not all) will place the
			// scrollbar on the left, rather than the right.
			browser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;
	
			// IE8- don't provide height and width for getBoundingClientRect
			browser.bBounding = n[0].getBoundingClientRect().width ? true : false;
	
			n.remove();
		}
	
		$.extend( settings.oBrowser, DataTable.__browser );
		settings.oScroll.iBarWidth = DataTable.__browser.barWidth;
	}
	
	
	/**
	 * Array.prototype reduce[Right] method, used for browsers which don't support
	 * JS 1.6. Done this way to reduce code size, since we iterate either way
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnReduce ( that, fn, init, start, end, inc )
	{
		var
			i = start,
			value,
			isSet = false;
	
		if ( init !== undefined ) {
			value = init;
			isSet = true;
		}
	
		while ( i !== end ) {
			if ( ! that.hasOwnProperty(i) ) {
				continue;
			}
	
			value = isSet ?
				fn( value, that[i], i, that ) :
				that[i];
	
			isSet = true;
			i += inc;
		}
	
		return value;
	}
	
	/**
	 * Add a column to the list used for the table with default values
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nTh The th element for this column
	 *  @memberof DataTable#oApi
	 */
	function _fnAddColumn( oSettings, nTh )
	{
		// Add column to aoColumns array
		var oDefaults = DataTable.defaults.column;
		var iCol = oSettings.aoColumns.length;
		var oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {
			"nTh": nTh ? nTh : document.createElement('th'),
			"sTitle":    oDefaults.sTitle    ? oDefaults.sTitle    : nTh ? nTh.innerHTML : '',
			"aDataSort": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],
			"mData": oDefaults.mData ? oDefaults.mData : iCol,
			idx: iCol
		} );
		oSettings.aoColumns.push( oCol );
	
		// Add search object for column specific search. Note that the \`searchCols[ iCol ]\`
		// passed into extend can be undefined. This allows the user to give a default
		// with only some of the parameters defined, and also not give a default
		var searchCols = oSettings.aoPreSearchCols;
		searchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );
	
		// Use the default column options function to initialise classes etc
		_fnColumnOptions( oSettings, iCol, $(nTh).data() );
	}
	
	
	/**
	 * Apply options for a column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iCol column index to consider
	 *  @param {object} oOptions object with sType, bVisible and bSearchable etc
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnOptions( oSettings, iCol, oOptions )
	{
		var oCol = oSettings.aoColumns[ iCol ];
		var oClasses = oSettings.oClasses;
		var th = $(oCol.nTh);
	
		// Try to get width information from the DOM. We can't get it from CSS
		// as we'd need to parse the CSS stylesheet. \`width\` option can override
		if ( ! oCol.sWidthOrig ) {
			// Width attribute
			oCol.sWidthOrig = th.attr('width') || null;
	
			// Style attribute
			var t = (th.attr('style') || '').match(/width:\\s*(\\d+[pxem%]+)/);
			if ( t ) {
				oCol.sWidthOrig = t[1];
			}
		}
	
		/* User specified column options */
		if ( oOptions !== undefined && oOptions !== null )
		{
			// Backwards compatibility
			_fnCompatCols( oOptions );
	
			// Map camel case parameters to their Hungarian counterparts
			_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );
	
			/* Backwards compatibility for mDataProp */
			if ( oOptions.mDataProp !== undefined && !oOptions.mData )
			{
				oOptions.mData = oOptions.mDataProp;
			}
	
			if ( oOptions.sType )
			{
				oCol._sManualType = oOptions.sType;
			}
	
			// \`class\` is a reserved word in Javascript, so we need to provide
			// the ability to use a valid name for the camel case input
			if ( oOptions.className && ! oOptions.sClass )
			{
				oOptions.sClass = oOptions.className;
			}
			if ( oOptions.sClass ) {
				th.addClass( oOptions.sClass );
			}
	
			$.extend( oCol, oOptions );
			_fnMap( oCol, oOptions, "sWidth", "sWidthOrig" );
	
			/* iDataSort to be applied (backwards compatibility), but aDataSort will take
			 * priority if defined
			 */
			if ( oOptions.iDataSort !== undefined )
			{
				oCol.aDataSort = [ oOptions.iDataSort ];
			}
			_fnMap( oCol, oOptions, "aDataSort" );
		}
	
		/* Cache the data get and set functions for speed */
		var mDataSrc = oCol.mData;
		var mData = _fnGetObjectDataFn( mDataSrc );
		var mRender = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;
	
		var attrTest = function( src ) {
			return typeof src === 'string' && src.indexOf('@') !== -1;
		};
		oCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (
			attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)
		);
		oCol._setter = null;
	
		oCol.fnGetData = function (rowData, type, meta) {
			var innerData = mData( rowData, type, undefined, meta );
	
			return mRender && type ?
				mRender( innerData, type, rowData, meta ) :
				innerData;
		};
		oCol.fnSetData = function ( rowData, val, meta ) {
			return _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );
		};
	
		// Indicate if DataTables should read DOM data as an object or array
		// Used in _fnGetRowElements
		if ( typeof mDataSrc !== 'number' ) {
			oSettings._rowReadObject = true;
		}
	
		/* Feature sorting overrides column specific when off */
		if ( !oSettings.oFeatures.bSort )
		{
			oCol.bSortable = false;
			th.addClass( oClasses.sSortableNone ); // Have to add class here as order event isn't called
		}
	
		/* Check that the class assignment is correct for sorting */
		var bAsc = $.inArray('asc', oCol.asSorting) !== -1;
		var bDesc = $.inArray('desc', oCol.asSorting) !== -1;
		if ( !oCol.bSortable || (!bAsc && !bDesc) )
		{
			oCol.sSortingClass = oClasses.sSortableNone;
			oCol.sSortingClassJUI = "";
		}
		else if ( bAsc && !bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableAsc;
			oCol.sSortingClassJUI = oClasses.sSortJUIAscAllowed;
		}
		else if ( !bAsc && bDesc )
		{
			oCol.sSortingClass = oClasses.sSortableDesc;
			oCol.sSortingClassJUI = oClasses.sSortJUIDescAllowed;
		}
		else
		{
			oCol.sSortingClass = oClasses.sSortable;
			oCol.sSortingClassJUI = oClasses.sSortJUI;
		}
	}
	
	
	/**
	 * Adjust the table column widths for new data. Note: you would probably want to
	 * do a redraw after calling this function!
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAdjustColumnSizing ( settings )
	{
		/* Not interested in doing column width calculation if auto-width is disabled */
		if ( settings.oFeatures.bAutoWidth !== false )
		{
			var columns = settings.aoColumns;
	
			_fnCalculateColumnWidths( settings );
			for ( var i=0 , iLen=columns.length ; i<iLen ; i++ )
			{
				columns[i].nTh.style.width = columns[i].sWidth;
			}
		}
	
		var scroll = settings.oScroll;
		if ( scroll.sY !== '' || scroll.sX !== '')
		{
			_fnScrollDraw( settings );
		}
	
		_fnCallbackFire( settings, null, 'column-sizing', [settings] );
	}
	
	
	/**
	 * Convert the index of a visible column to the index in the data array (take account
	 * of hidden columns)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iMatch Visible column index to lookup
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnVisibleToColumnIndex( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
	
		return typeof aiVis[iMatch] === 'number' ?
			aiVis[iMatch] :
			null;
	}
	
	
	/**
	 * Convert the index of an index in the data array and convert it to the visible
	 *   column index (take account of hidden columns)
	 *  @param {int} iMatch Column index to lookup
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the data index
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnIndexToVisible( oSettings, iMatch )
	{
		var aiVis = _fnGetColumns( oSettings, 'bVisible' );
		var iPos = $.inArray( iMatch, aiVis );
	
		return iPos !== -1 ? iPos : null;
	}
	
	
	/**
	 * Get the number of visible columns
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {int} i the number of visible columns
	 *  @memberof DataTable#oApi
	 */
	function _fnVisbleColumns( oSettings )
	{
		var vis = 0;
	
		// No reduce in IE8, use a loop for now
		$.each( oSettings.aoColumns, function ( i, col ) {
			if ( col.bVisible && $(col.nTh).css('display') !== 'none' ) {
				vis++;
			}
		} );
	
		return vis;
	}
	
	
	/**
	 * Get an array of column indexes that match a given property
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sParam Parameter in aoColumns to look for - typically
	 *    bVisible or bSearchable
	 *  @returns {array} Array of indexes with matched properties
	 *  @memberof DataTable#oApi
	 */
	function _fnGetColumns( oSettings, sParam )
	{
		var a = [];
	
		$.map( oSettings.aoColumns, function(val, i) {
			if ( val[sParam] ) {
				a.push( i );
			}
		} );
	
		return a;
	}
	
	
	/**
	 * Calculate the 'type' of a column
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnColumnTypes ( settings )
	{
		var columns = settings.aoColumns;
		var data = settings.aoData;
		var types = DataTable.ext.type.detect;
		var i, ien, j, jen, k, ken;
		var col, cell, detectedType, cache;
	
		// For each column, spin over the 
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			col = columns[i];
			cache = [];
	
			if ( ! col.sType && col._sManualType ) {
				col.sType = col._sManualType;
			}
			else if ( ! col.sType ) {
				for ( j=0, jen=types.length ; j<jen ; j++ ) {
					for ( k=0, ken=data.length ; k<ken ; k++ ) {
						// Use a cache array so we only need to get the type data
						// from the formatter once (when using multiple detectors)
						if ( cache[k] === undefined ) {
							cache[k] = _fnGetCellData( settings, k, i, 'type' );
						}
	
						detectedType = types[j]( cache[k], settings );
	
						// If null, then this type can't apply to this column, so
						// rather than testing all cells, break out. There is an
						// exception for the last type which is \`html\`. We need to
						// scan all rows since it is possible to mix string and HTML
						// types
						if ( ! detectedType && j !== types.length-1 ) {
							break;
						}
	
						// Only a single match is needed for html type since it is
						// bottom of the pile and very similar to string - but it
						// must not be empty
						if ( detectedType === 'html' && ! _empty(cache[k]) ) {
							break;
						}
					}
	
					// Type is valid for all data points in the column - use this
					// type
					if ( detectedType ) {
						col.sType = detectedType;
						break;
					}
				}
	
				// Fall back - if no type was detected, always use string
				if ( ! col.sType ) {
					col.sType = 'string';
				}
			}
		}
	}
	
	
	/**
	 * Take the column definitions and static columns arrays and calculate how
	 * they relate to column indexes. The callback function will then apply the
	 * definition found for a column to a suitable configuration object.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aoColDefs The aoColumnDefs array that is to be applied
	 *  @param {array} aoCols The aoColumns array that defines columns individually
	 *  @param {function} fn Callback function - takes two parameters, the calculated
	 *    column index and the definition for that column.
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, fn )
	{
		var i, iLen, j, jLen, k, kLen, def;
		var columns = oSettings.aoColumns;
	
		// Column definitions with aTargets
		if ( aoColDefs )
		{
			/* Loop over the definitions array - loop in reverse so first instance has priority */
			for ( i=aoColDefs.length-1 ; i>=0 ; i-- )
			{
				def = aoColDefs[i];
	
				/* Each definition can target multiple columns, as it is an array */
				var aTargets = def.targets !== undefined ?
					def.targets :
					def.aTargets;
	
				if ( ! Array.isArray( aTargets ) )
				{
					aTargets = [ aTargets ];
				}
	
				for ( j=0, jLen=aTargets.length ; j<jLen ; j++ )
				{
					if ( typeof aTargets[j] === 'number' && aTargets[j] >= 0 )
					{
						/* Add columns that we don't yet know about */
						while( columns.length <= aTargets[j] )
						{
							_fnAddColumn( oSettings );
						}
	
						/* Integer, basic index */
						fn( aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'number' && aTargets[j] < 0 )
					{
						/* Negative integer, right to left column counting */
						fn( columns.length+aTargets[j], def );
					}
					else if ( typeof aTargets[j] === 'string' )
					{
						/* Class name matching on TH element */
						for ( k=0, kLen=columns.length ; k<kLen ; k++ )
						{
							if ( aTargets[j] == "_all" ||
							     $(columns[k].nTh).hasClass( aTargets[j] ) )
							{
								fn( k, def );
							}
						}
					}
				}
			}
		}
	
		// Statically defined columns array
		if ( aoCols )
		{
			for ( i=0, iLen=aoCols.length ; i<iLen ; i++ )
			{
				fn( i, aoCols[i] );
			}
		}
	}
	
	/**
	 * Add a data array to the table, creating DOM node etc. This is the parallel to
	 * _fnGatherData, but for adding rows from a Javascript source, rather than a
	 * DOM source.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {array} aData data array to be added
	 *  @param {node} [nTr] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed
	 *  @memberof DataTable#oApi
	 */
	function _fnAddData ( oSettings, aDataIn, nTr, anTds )
	{
		/* Create the object for storing information about this new row */
		var iRow = oSettings.aoData.length;
		var oData = $.extend( true, {}, DataTable.models.oRow, {
			src: nTr ? 'dom' : 'data',
			idx: iRow
		} );
	
		oData._aData = aDataIn;
		oSettings.aoData.push( oData );
	
		/* Create the cells */
		var nTd, sThisType;
		var columns = oSettings.aoColumns;
	
		// Invalidate the column types as the new data needs to be revalidated
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			columns[i].sType = null;
		}
	
		/* Add to the display array */
		oSettings.aiDisplayMaster.push( iRow );
	
		var id = oSettings.rowIdFn( aDataIn );
		if ( id !== undefined ) {
			oSettings.aIds[ id ] = oData;
		}
	
		/* Create the DOM information, or register it if already present */
		if ( nTr || ! oSettings.oFeatures.bDeferRender )
		{
			_fnCreateTr( oSettings, iRow, nTr, anTds );
		}
	
		return iRow;
	}
	
	
	/**
	 * Add one or more TR elements to the table. Generally we'd expect to
	 * use this for reading data from a DOM sourced table, but it could be
	 * used for an TR element. Note that if a TR is given, it is used (i.e.
	 * it is not cloned).
	 *  @param {object} settings dataTables settings object
	 *  @param {array|node|jQuery} trs The TR element(s) to add to the table
	 *  @returns {array} Array of indexes for the added rows
	 *  @memberof DataTable#oApi
	 */
	function _fnAddTr( settings, trs )
	{
		var row;
	
		// Allow an individual node to be passed in
		if ( ! (trs instanceof $) ) {
			trs = $(trs);
		}
	
		return trs.map( function (i, el) {
			row = _fnGetRowElements( settings, el );
			return _fnAddData( settings, row.data, el, row.cells );
		} );
	}
	
	
	/**
	 * Take a TR element and convert it to an index in aoData
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} n the TR element to find
	 *  @returns {int} index if the node is found, null if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToDataIndex( oSettings, n )
	{
		return (n._DT_RowIndex!==undefined) ? n._DT_RowIndex : null;
	}
	
	
	/**
	 * Take a TD element and convert it into a column data index (not the visible index)
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow The row number the TD/TH can be found in
	 *  @param {node} n The TD/TH element to find
	 *  @returns {int} index if the node is found, -1 if not
	 *  @memberof DataTable#oApi
	 */
	function _fnNodeToColumnIndex( oSettings, iRow, n )
	{
		return $.inArray( n, oSettings.aoData[ iRow ].anCells );
	}
	
	
	/**
	 * Get the data for a given cell from the internal cache, taking into account data mapping
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')
	 *  @returns {*} Cell data
	 *  @memberof DataTable#oApi
	 */
	function _fnGetCellData( settings, rowIdx, colIdx, type )
	{
		if (type === 'search') {
			type = 'filter';
		}
		else if (type === 'order') {
			type = 'sort';
		}
	
		var draw           = settings.iDraw;
		var col            = settings.aoColumns[colIdx];
		var rowData        = settings.aoData[rowIdx]._aData;
		var defaultContent = col.sDefaultContent;
		var cellData       = col.fnGetData( rowData, type, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		} );
	
		if ( cellData === undefined ) {
			if ( settings.iDrawError != draw && defaultContent === null ) {
				_fnLog( settings, 0, "Requested unknown parameter "+
					(typeof col.mData=='function' ? '{function}' : "'"+col.mData+"'")+
					" for row "+rowIdx+", column "+colIdx, 4 );
				settings.iDrawError = draw;
			}
			return defaultContent;
		}
	
		// When the data source is null and a specific data type is requested (i.e.
		// not the original data), we can use default column data
		if ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {
			cellData = defaultContent;
		}
		else if ( typeof cellData === 'function' ) {
			// If the data source is a function, then we run it and use the return,
			// executing in the scope of the data object (for instances)
			return cellData.call( rowData );
		}
	
		if ( cellData === null && type === 'display' ) {
			return '';
		}
	
		if ( type === 'filter' ) {
			var fomatters = DataTable.ext.type.search;
	
			if ( fomatters[ col.sType ] ) {
				cellData = fomatters[ col.sType ]( cellData );
			}
		}
	
		return cellData;
	}
	
	
	/**
	 * Set the value for a specific cell, into the internal data cache
	 *  @param {object} settings dataTables settings object
	 *  @param {int} rowIdx aoData row id
	 *  @param {int} colIdx Column index
	 *  @param {*} val Value to set
	 *  @memberof DataTable#oApi
	 */
	function _fnSetCellData( settings, rowIdx, colIdx, val )
	{
		var col     = settings.aoColumns[colIdx];
		var rowData = settings.aoData[rowIdx]._aData;
	
		col.fnSetData( rowData, val, {
			settings: settings,
			row:      rowIdx,
			col:      colIdx
		}  );
	}
	
	
	// Private variable that is used to match action syntax in the data property object
	var __reArray = /\\[.*?\\]$/;
	var __reFn = /\\(\\)$/;
	
	/**
	 * Split string on periods, taking into account escaped periods
	 * @param  {string} str String to split
	 * @return {array} Split string
	 */
	function _fnSplitObjNotation( str )
	{
		return $.map( str.match(/(\\\\.|[^\\.])+/g) || [''], function ( s ) {
			return s.replace(/\\\\\\./g, '.');
		} );
	}
	
	
	/**
	 * Return a function that can be used to get data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data get function
	 *  @memberof DataTable#oApi
	 */
	var _fnGetObjectDataFn = DataTable.util.get;
	
	
	/**
	 * Return a function that can be used to set data from a source object, taking
	 * into account the ability to use nested objects as a source
	 *  @param {string|int|function} mSource The data source for the object
	 *  @returns {function} Data set function
	 *  @memberof DataTable#oApi
	 */
	var _fnSetObjectDataFn = DataTable.util.set;
	
	
	/**
	 * Return an array with the full table data
	 *  @param {object} oSettings dataTables settings object
	 *  @returns array {array} aData Master data array
	 *  @memberof DataTable#oApi
	 */
	function _fnGetDataMaster ( settings )
	{
		return _pluck( settings.aoData, '_aData' );
	}
	
	
	/**
	 * Nuke the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnClearTable( settings )
	{
		settings.aoData.length = 0;
		settings.aiDisplayMaster.length = 0;
		settings.aiDisplay.length = 0;
		settings.aIds = {};
	}
	
	
	 /**
	 * Take an array of integers (index array) and remove a target integer (value - not
	 * the key!)
	 *  @param {array} a Index array to target
	 *  @param {int} iTarget value to find
	 *  @memberof DataTable#oApi
	 */
	function _fnDeleteIndex( a, iTarget, splice )
	{
		var iTargetIndex = -1;
	
		for ( var i=0, iLen=a.length ; i<iLen ; i++ )
		{
			if ( a[i] == iTarget )
			{
				iTargetIndex = i;
			}
			else if ( a[i] > iTarget )
			{
				a[i]--;
			}
		}
	
		if ( iTargetIndex != -1 && splice === undefined )
		{
			a.splice( iTargetIndex, 1 );
		}
	}
	
	
	/**
	 * Mark cached data as invalid such that a re-read of the data will occur when
	 * the cached data is next requested. Also update from the data source object.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {int}    rowIdx   Row index to invalidate
	 * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'
	 *     or 'data'
	 * @param {int}    [colIdx] Column index to invalidate. If undefined the whole
	 *     row will be invalidated
	 * @memberof DataTable#oApi
	 *
	 * @todo For the modularisation of v1.11 this will need to become a callback, so
	 *   the sort and filter methods can subscribe to it. That will required
	 *   initialisation options for sorting, which is why it is not already baked in
	 */
	function _fnInvalidate( settings, rowIdx, src, colIdx )
	{
		var row = settings.aoData[ rowIdx ];
		var i, ien;
		var cellWrite = function ( cell, col ) {
			// This is very frustrating, but in IE if you just write directly
			// to innerHTML, and elements that are overwritten are GC'ed,
			// even if there is a reference to them elsewhere
			while ( cell.childNodes.length ) {
				cell.removeChild( cell.firstChild );
			}
	
			cell.innerHTML = _fnGetCellData( settings, rowIdx, col, 'display' );
		};
	
		// Are we reading last data from DOM or the data object?
		if ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {
			// Read the data from the DOM
			row._aData = _fnGetRowElements(
					settings, row, colIdx, colIdx === undefined ? undefined : row._aData
				)
				.data;
		}
		else {
			// Reading from data object, update the DOM
			var cells = row.anCells;
	
			if ( cells ) {
				if ( colIdx !== undefined ) {
					cellWrite( cells[colIdx], colIdx );
				}
				else {
					for ( i=0, ien=cells.length ; i<ien ; i++ ) {
						cellWrite( cells[i], i );
					}
				}
			}
		}
	
		// For both row and cell invalidation, the cached data for sorting and
		// filtering is nulled out
		row._aSortData = null;
		row._aFilterData = null;
	
		// Invalidate the type for a specific column (if given) or all columns since
		// the data might have changed
		var cols = settings.aoColumns;
		if ( colIdx !== undefined ) {
			cols[ colIdx ].sType = null;
		}
		else {
			for ( i=0, ien=cols.length ; i<ien ; i++ ) {
				cols[i].sType = null;
			}
	
			// Update DataTables special \`DT_*\` attributes for the row
			_fnRowAttributes( settings, row );
		}
	}
	
	
	/**
	 * Build a data source object from an HTML row, reading the contents of the
	 * cells that are in the row.
	 *
	 * @param {object} settings DataTables settings object
	 * @param {node|object} TR element from which to read data or existing row
	 *   object from which to re-read the data from the cells
	 * @param {int} [colIdx] Optional column index
	 * @param {array|object} [d] Data source object. If \`colIdx\` is given then this
	 *   parameter should also be given and will be used to write the data into.
	 *   Only the column in question will be written
	 * @returns {object} Object with two parameters: \`data\` the data read, in
	 *   document order, and \`cells\` and array of nodes (they can be useful to the
	 *   caller, so rather than needing a second traversal to get them, just return
	 *   them from here).
	 * @memberof DataTable#oApi
	 */
	function _fnGetRowElements( settings, row, colIdx, d )
	{
		var
			tds = [],
			td = row.firstChild,
			name, col, o, i=0, contents,
			columns = settings.aoColumns,
			objectRead = settings._rowReadObject;
	
		// Allow the data object to be passed in, or construct
		d = d !== undefined ?
			d :
			objectRead ?
				{} :
				[];
	
		var attr = function ( str, td  ) {
			if ( typeof str === 'string' ) {
				var idx = str.indexOf('@');
	
				if ( idx !== -1 ) {
					var attr = str.substring( idx+1 );
					var setter = _fnSetObjectDataFn( str );
					setter( d, td.getAttribute( attr ) );
				}
			}
		};
	
		// Read data from a cell and store into the data object
		var cellProcess = function ( cell ) {
			if ( colIdx === undefined || colIdx === i ) {
				col = columns[i];
				contents = (cell.innerHTML).trim();
	
				if ( col && col._bAttrSrc ) {
					var setter = _fnSetObjectDataFn( col.mData._ );
					setter( d, contents );
	
					attr( col.mData.sort, cell );
					attr( col.mData.type, cell );
					attr( col.mData.filter, cell );
				}
				else {
					// Depending on the \`data\` option for the columns the data can
					// be read to either an object or an array.
					if ( objectRead ) {
						if ( ! col._setter ) {
							// Cache the setter function
							col._setter = _fnSetObjectDataFn( col.mData );
						}
						col._setter( d, contents );
					}
					else {
						d[i] = contents;
					}
				}
			}
	
			i++;
		};
	
		if ( td ) {
			// \`tr\` element was passed in
			while ( td ) {
				name = td.nodeName.toUpperCase();
	
				if ( name == "TD" || name == "TH" ) {
					cellProcess( td );
					tds.push( td );
				}
	
				td = td.nextSibling;
			}
		}
		else {
			// Existing row object passed in
			tds = row.anCells;
	
			for ( var j=0, jen=tds.length ; j<jen ; j++ ) {
				cellProcess( tds[j] );
			}
		}
	
		// Read the ID from the DOM if present
		var rowNode = row.firstChild ? row : row.nTr;
	
		if ( rowNode ) {
			var id = rowNode.getAttribute( 'id' );
	
			if ( id ) {
				_fnSetObjectDataFn( settings.rowId )( d, id );
			}
		}
	
		return {
			data: d,
			cells: tds
		};
	}
	/**
	 * Create a new TR element (and it's TD children) for a row
	 *  @param {object} oSettings dataTables settings object
	 *  @param {int} iRow Row to consider
	 *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,
	 *    DataTables will create a row automatically
	 *  @param {array} [anTds] Array of TD|TH elements for the row - must be given
	 *    if nTr is.
	 *  @memberof DataTable#oApi
	 */
	function _fnCreateTr ( oSettings, iRow, nTrIn, anTds )
	{
		var
			row = oSettings.aoData[iRow],
			rowData = row._aData,
			cells = [],
			nTr, nTd, oCol,
			i, iLen, create;
	
		if ( row.nTr === null )
		{
			nTr = nTrIn || document.createElement('tr');
	
			row.nTr = nTr;
			row.anCells = cells;
	
			/* Use a private property on the node to allow reserve mapping from the node
			 * to the aoData array for fast look up
			 */
			nTr._DT_RowIndex = iRow;
	
			/* Special parameters can be given by the data source to be used on the row */
			_fnRowAttributes( oSettings, row );
	
			/* Process each column */
			for ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )
			{
				oCol = oSettings.aoColumns[i];
				create = nTrIn ? false : true;
	
				nTd = create ? document.createElement( oCol.sCellType ) : anTds[i];
				nTd._DT_CellIndex = {
					row: iRow,
					column: i
				};
				
				cells.push( nTd );
	
				// Need to create the HTML if new, or if a rendering function is defined
				if ( create || ((oCol.mRender || oCol.mData !== i) &&
					 (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')
				)) {
					nTd.innerHTML = _fnGetCellData( oSettings, iRow, i, 'display' );
				}
	
				/* Add user defined class */
				if ( oCol.sClass )
				{
					nTd.className += ' '+oCol.sClass;
				}
	
				// Visibility - add or remove as required
				if ( oCol.bVisible && ! nTrIn )
				{
					nTr.appendChild( nTd );
				}
				else if ( ! oCol.bVisible && nTrIn )
				{
					nTd.parentNode.removeChild( nTd );
				}
	
				if ( oCol.fnCreatedCell )
				{
					oCol.fnCreatedCell.call( oSettings.oInstance,
						nTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i
					);
				}
			}
	
			_fnCallbackFire( oSettings, 'aoRowCreatedCallback', null, [nTr, rowData, iRow, cells] );
		}
	}
	
	
	/**
	 * Add attributes to a row based on the special \`DT_*\` parameters in a data
	 * source object.
	 *  @param {object} settings DataTables settings object
	 *  @param {object} DataTables row object for the row to be modified
	 *  @memberof DataTable#oApi
	 */
	function _fnRowAttributes( settings, row )
	{
		var tr = row.nTr;
		var data = row._aData;
	
		if ( tr ) {
			var id = settings.rowIdFn( data );
	
			if ( id ) {
				tr.id = id;
			}
	
			if ( data.DT_RowClass ) {
				// Remove any classes added by DT_RowClass before
				var a = data.DT_RowClass.split(' ');
				row.__rowc = row.__rowc ?
					_unique( row.__rowc.concat( a ) ) :
					a;
	
				$(tr)
					.removeClass( row.__rowc.join(' ') )
					.addClass( data.DT_RowClass );
			}
	
			if ( data.DT_RowAttr ) {
				$(tr).attr( data.DT_RowAttr );
			}
	
			if ( data.DT_RowData ) {
				$(tr).data( data.DT_RowData );
			}
		}
	}
	
	
	/**
	 * Create the HTML header for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnBuildHead( oSettings )
	{
		var i, ien, cell, row, column;
		var thead = oSettings.nTHead;
		var tfoot = oSettings.nTFoot;
		var createHeader = $('th, td', thead).length === 0;
		var classes = oSettings.oClasses;
		var columns = oSettings.aoColumns;
	
		if ( createHeader ) {
			row = $('<tr/>').appendTo( thead );
		}
	
		for ( i=0, ien=columns.length ; i<ien ; i++ ) {
			column = columns[i];
			cell = $( column.nTh ).addClass( column.sClass );
	
			if ( createHeader ) {
				cell.appendTo( row );
			}
	
			// 1.11 move into sorting
			if ( oSettings.oFeatures.bSort ) {
				cell.addClass( column.sSortingClass );
	
				if ( column.bSortable !== false ) {
					cell
						.attr( 'tabindex', oSettings.iTabIndex )
						.attr( 'aria-controls', oSettings.sTableId );
	
					_fnSortAttachListener( oSettings, column.nTh, i );
				}
			}
	
			if ( column.sTitle != cell[0].innerHTML ) {
				cell.html( column.sTitle );
			}
	
			_fnRenderer( oSettings, 'header' )(
				oSettings, cell, column, classes
			);
		}
	
		if ( createHeader ) {
			_fnDetectHeader( oSettings.aoHeader, thead );
		}
	
		/* Deal with the footer - add classes if required */
		$(thead).children('tr').children('th, td').addClass( classes.sHeaderTH );
		$(tfoot).children('tr').children('th, td').addClass( classes.sFooterTH );
	
		// Cache the footer cells. Note that we only take the cells from the first
		// row in the footer. If there is more than one row the user wants to
		// interact with, they need to use the table().foot() method. Note also this
		// allows cells to be used for multiple columns using colspan
		if ( tfoot !== null ) {
			var cells = oSettings.aoFooter[0];
	
			for ( i=0, ien=cells.length ; i<ien ; i++ ) {
				column = columns[i];
				column.nTf = cells[i].cell;
	
				if ( column.sClass ) {
					$(column.nTf).addClass( column.sClass );
				}
			}
		}
	}
	
	
	/**
	 * Draw the header (or footer) element based on the column visibility states. The
	 * methodology here is to use the layout array from _fnDetectHeader, modified for
	 * the instantaneous column visibility, to construct the new layout. The grid is
	 * traversed over cell at a time in a rows x columns grid fashion, although each
	 * cell insert can cover multiple elements in the grid - which is tracks using the
	 * aApplied array. Cell inserts in the grid will only occur where there isn't
	 * already a cell in that position.
	 *  @param {object} oSettings dataTables settings object
	 *  @param array {objects} aoSource Layout array from _fnDetectHeader
	 *  @param {boolean} [bIncludeHidden=false] If true then include the hidden columns in the calc,
	 *  @memberof DataTable#oApi
	 */
	function _fnDrawHead( oSettings, aoSource, bIncludeHidden )
	{
		var i, iLen, j, jLen, k, kLen, n, nLocalTr;
		var aoLocal = [];
		var aApplied = [];
		var iColumns = oSettings.aoColumns.length;
		var iRowspan, iColspan;
	
		if ( ! aoSource )
		{
			return;
		}
	
		if (  bIncludeHidden === undefined )
		{
			bIncludeHidden = false;
		}
	
		/* Make a copy of the master layout array, but without the visible columns in it */
		for ( i=0, iLen=aoSource.length ; i<iLen ; i++ )
		{
			aoLocal[i] = aoSource[i].slice();
			aoLocal[i].nTr = aoSource[i].nTr;
	
			/* Remove any columns which are currently hidden */
			for ( j=iColumns-1 ; j>=0 ; j-- )
			{
				if ( !oSettings.aoColumns[j].bVisible && !bIncludeHidden )
				{
					aoLocal[i].splice( j, 1 );
				}
			}
	
			/* Prep the applied array - it needs an element for each row */
			aApplied.push( [] );
		}
	
		for ( i=0, iLen=aoLocal.length ; i<iLen ; i++ )
		{
			nLocalTr = aoLocal[i].nTr;
	
			/* All cells are going to be replaced, so empty out the row */
			if ( nLocalTr )
			{
				while( (n = nLocalTr.firstChild) )
				{
					nLocalTr.removeChild( n );
				}
			}
	
			for ( j=0, jLen=aoLocal[i].length ; j<jLen ; j++ )
			{
				iRowspan = 1;
				iColspan = 1;
	
				/* Check to see if there is already a cell (row/colspan) covering our target
				 * insert point. If there is, then there is nothing to do.
				 */
				if ( aApplied[i][j] === undefined )
				{
					nLocalTr.appendChild( aoLocal[i][j].cell );
					aApplied[i][j] = 1;
	
					/* Expand the cell to cover as many rows as needed */
					while ( aoLocal[i+iRowspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i+iRowspan][j].cell )
					{
						aApplied[i+iRowspan][j] = 1;
						iRowspan++;
					}
	
					/* Expand the cell to cover as many columns as needed */
					while ( aoLocal[i][j+iColspan] !== undefined &&
					        aoLocal[i][j].cell == aoLocal[i][j+iColspan].cell )
					{
						/* Must update the applied array over the rows for the columns */
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aApplied[i+k][j+iColspan] = 1;
						}
						iColspan++;
					}
	
					/* Do the actual expansion in the DOM */
					$(aoLocal[i][j].cell)
						.attr('rowspan', iRowspan)
						.attr('colspan', iColspan);
				}
			}
		}
	}
	
	
	/**
	 * Insert the required TR nodes into the table for display
	 *  @param {object} oSettings dataTables settings object
	 *  @param ajaxComplete true after ajax call to complete rendering
	 *  @memberof DataTable#oApi
	 */
	function _fnDraw( oSettings, ajaxComplete )
	{
		/* Provide a pre-callback function which can be used to cancel the draw is false is returned */
		var aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );
		if ( $.inArray( false, aPreDraw ) !== -1 )
		{
			_fnProcessingDisplay( oSettings, false );
			return;
		}
	
		var i, iLen, n;
		var anRows = [];
		var iRowCount = 0;
		var asStripeClasses = oSettings.asStripeClasses;
		var iStripes = asStripeClasses.length;
		var iOpenRows = oSettings.aoOpenRows.length;
		var oLang = oSettings.oLanguage;
		var iInitDisplayStart = oSettings.iInitDisplayStart;
		var bServerSide = _fnDataSource( oSettings ) == 'ssp';
		var aiDisplay = oSettings.aiDisplay;
	
		oSettings.bDrawing = true;
	
		/* Check and see if we have an initial draw position from state saving */
		if ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )
		{
			oSettings._iDisplayStart = bServerSide ?
				iInitDisplayStart :
				iInitDisplayStart >= oSettings.fnRecordsDisplay() ?
					0 :
					iInitDisplayStart;
	
			oSettings.iInitDisplayStart = -1;
		}
	
		var iDisplayStart = oSettings._iDisplayStart;
		var iDisplayEnd = oSettings.fnDisplayEnd();
	
		/* Server-side processing draw intercept */
		if ( oSettings.bDeferLoading )
		{
			oSettings.bDeferLoading = false;
			oSettings.iDraw++;
			_fnProcessingDisplay( oSettings, false );
		}
		else if ( !bServerSide )
		{
			oSettings.iDraw++;
		}
		else if ( !oSettings.bDestroying && !ajaxComplete)
		{
			_fnAjaxUpdate( oSettings );
			return;
		}
	
		if ( aiDisplay.length !== 0 )
		{
			var iStart = bServerSide ? 0 : iDisplayStart;
			var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;
	
			for ( var j=iStart ; j<iEnd ; j++ )
			{
				var iDataIndex = aiDisplay[j];
				var aoData = oSettings.aoData[ iDataIndex ];
				if ( aoData.nTr === null )
				{
					_fnCreateTr( oSettings, iDataIndex );
				}
	
				var nRow = aoData.nTr;
	
				/* Remove the old striping classes and then add the new one */
				if ( iStripes !== 0 )
				{
					var sStripe = asStripeClasses[ iRowCount % iStripes ];
					if ( aoData._sRowStripe != sStripe )
					{
						$(nRow).removeClass( aoData._sRowStripe ).addClass( sStripe );
						aoData._sRowStripe = sStripe;
					}
				}
	
				// Row callback functions - might want to manipulate the row
				// iRowCount and j are not currently documented. Are they at all
				// useful?
				_fnCallbackFire( oSettings, 'aoRowCallback', null,
					[nRow, aoData._aData, iRowCount, j, iDataIndex] );
	
				anRows.push( nRow );
				iRowCount++;
			}
		}
		else
		{
			/* Table is empty - create a row with an empty message in it */
			var sZero = oLang.sZeroRecords;
			if ( oSettings.iDraw == 1 &&  _fnDataSource( oSettings ) == 'ajax' )
			{
				sZero = oLang.sLoadingRecords;
			}
			else if ( oLang.sEmptyTable && oSettings.fnRecordsTotal() === 0 )
			{
				sZero = oLang.sEmptyTable;
			}
	
			anRows[ 0 ] = $( '<tr/>', { 'class': iStripes ? asStripeClasses[0] : '' } )
				.append( $('<td />', {
					'valign':  'top',
					'colSpan': _fnVisbleColumns( oSettings ),
					'class':   oSettings.oClasses.sRowEmpty
				} ).html( sZero ) )[0];
		}
	
		/* Header and footer callbacks */
		_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],
			_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );
	
		var body = $(oSettings.nTBody);
	
		body.children().detach();
		body.append( $(anRows) );
	
		/* Call all required callback functions for the end of a draw */
		_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings] );
	
		/* Draw is complete, sorting and filtering must be as well */
		oSettings.bSorted = false;
		oSettings.bFiltered = false;
		oSettings.bDrawing = false;
	}
	
	
	/**
	 * Redraw the table - taking account of the various features which are enabled
	 *  @param {object} oSettings dataTables settings object
	 *  @param {boolean} [holdPosition] Keep the current paging position. By default
	 *    the paging is reset to the first page
	 *  @memberof DataTable#oApi
	 */
	function _fnReDraw( settings, holdPosition )
	{
		var
			features = settings.oFeatures,
			sort     = features.bSort,
			filter   = features.bFilter;
	
		if ( sort ) {
			_fnSort( settings );
		}
	
		if ( filter ) {
			_fnFilterComplete( settings, settings.oPreviousSearch );
		}
		else {
			// No filtering, so we want to just use the display master
			settings.aiDisplay = settings.aiDisplayMaster.slice();
		}
	
		if ( holdPosition !== true ) {
			settings._iDisplayStart = 0;
		}
	
		// Let any modules know about the draw hold position state (used by
		// scrolling internally)
		settings._drawHold = holdPosition;
	
		_fnDraw( settings );
	
		settings._drawHold = false;
	}
	
	
	/**
	 * Add the options to the page HTML for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnAddOptionsHtml ( oSettings )
	{
		var classes = oSettings.oClasses;
		var table = $(oSettings.nTable);
		var holding = $('<div/>').insertBefore( table ); // Holding element for speed
		var features = oSettings.oFeatures;
	
		// All DataTables are wrapped in a div
		var insert = $('<div/>', {
			id:      oSettings.sTableId+'_wrapper',
			'class': classes.sWrapper + (oSettings.nTFoot ? '' : ' '+classes.sNoFooter)
		} );
	
		oSettings.nHolding = holding[0];
		oSettings.nTableWrapper = insert[0];
		oSettings.nTableReinsertBefore = oSettings.nTable.nextSibling;
	
		/* Loop over the user set positioning and place the elements as needed */
		var aDom = oSettings.sDom.split('');
		var featureNode, cOption, nNewNode, cNext, sAttr, j;
		for ( var i=0 ; i<aDom.length ; i++ )
		{
			featureNode = null;
			cOption = aDom[i];
	
			if ( cOption == '<' )
			{
				/* New container div */
				nNewNode = $('<div/>')[0];
	
				/* Check to see if we should append an id and/or a class name to the container */
				cNext = aDom[i+1];
				if ( cNext == "'" || cNext == '"' )
				{
					sAttr = "";
					j = 2;
					while ( aDom[i+j] != cNext )
					{
						sAttr += aDom[i+j];
						j++;
					}
	
					/* Replace jQuery UI constants @todo depreciated */
					if ( sAttr == "H" )
					{
						sAttr = classes.sJUIHeader;
					}
					else if ( sAttr == "F" )
					{
						sAttr = classes.sJUIFooter;
					}
	
					/* The attribute can be in the format of "#id.class", "#id" or "class" This logic
					 * breaks the string into parts and applies them as needed
					 */
					if ( sAttr.indexOf('.') != -1 )
					{
						var aSplit = sAttr.split('.');
						nNewNode.id = aSplit[0].substr(1, aSplit[0].length-1);
						nNewNode.className = aSplit[1];
					}
					else if ( sAttr.charAt(0) == "#" )
					{
						nNewNode.id = sAttr.substr(1, sAttr.length-1);
					}
					else
					{
						nNewNode.className = sAttr;
					}
	
					i += j; /* Move along the position array */
				}
	
				insert.append( nNewNode );
				insert = $(nNewNode);
			}
			else if ( cOption == '>' )
			{
				/* End container div */
				insert = insert.parent();
			}
			// @todo Move options into their own plugins?
			else if ( cOption == 'l' && features.bPaginate && features.bLengthChange )
			{
				/* Length */
				featureNode = _fnFeatureHtmlLength( oSettings );
			}
			else if ( cOption == 'f' && features.bFilter )
			{
				/* Filter */
				featureNode = _fnFeatureHtmlFilter( oSettings );
			}
			else if ( cOption == 'r' && features.bProcessing )
			{
				/* pRocessing */
				featureNode = _fnFeatureHtmlProcessing( oSettings );
			}
			else if ( cOption == 't' )
			{
				/* Table */
				featureNode = _fnFeatureHtmlTable( oSettings );
			}
			else if ( cOption ==  'i' && features.bInfo )
			{
				/* Info */
				featureNode = _fnFeatureHtmlInfo( oSettings );
			}
			else if ( cOption == 'p' && features.bPaginate )
			{
				/* Pagination */
				featureNode = _fnFeatureHtmlPaginate( oSettings );
			}
			else if ( DataTable.ext.feature.length !== 0 )
			{
				/* Plug-in features */
				var aoFeatures = DataTable.ext.feature;
				for ( var k=0, kLen=aoFeatures.length ; k<kLen ; k++ )
				{
					if ( cOption == aoFeatures[k].cFeature )
					{
						featureNode = aoFeatures[k].fnInit( oSettings );
						break;
					}
				}
			}
	
			/* Add to the 2D features array */
			if ( featureNode )
			{
				var aanFeatures = oSettings.aanFeatures;
	
				if ( ! aanFeatures[cOption] )
				{
					aanFeatures[cOption] = [];
				}
	
				aanFeatures[cOption].push( featureNode );
				insert.append( featureNode );
			}
		}
	
		/* Built our DOM structure - replace the holding div with what we want */
		holding.replaceWith( insert );
		oSettings.nHolding = null;
	}
	
	
	/**
	 * Use the DOM source to create up an array of header cells. The idea here is to
	 * create a layout grid (array) of rows x columns, which contains a reference
	 * to the cell that that point in the grid (regardless of col/rowspan), such that
	 * any column / row could be removed and the new grid constructed
	 *  @param array {object} aLayout Array to store the calculated layout in
	 *  @param {node} nThead The header/footer element for the table
	 *  @memberof DataTable#oApi
	 */
	function _fnDetectHeader ( aLayout, nThead )
	{
		var nTrs = $(nThead).children('tr');
		var nTr, nCell;
		var i, k, l, iLen, jLen, iColShifted, iColumn, iColspan, iRowspan;
		var bUnique;
		var fnShiftCol = function ( a, i, j ) {
			var k = a[i];
	                while ( k[j] ) {
				j++;
			}
			return j;
		};
	
		aLayout.splice( 0, aLayout.length );
	
		/* We know how many rows there are in the layout - so prep it */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			aLayout.push( [] );
		}
	
		/* Calculate a layout array */
		for ( i=0, iLen=nTrs.length ; i<iLen ; i++ )
		{
			nTr = nTrs[i];
			iColumn = 0;
	
			/* For every cell in the row... */
			nCell = nTr.firstChild;
			while ( nCell ) {
				if ( nCell.nodeName.toUpperCase() == "TD" ||
				     nCell.nodeName.toUpperCase() == "TH" )
				{
					/* Get the col and rowspan attributes from the DOM and sanitise them */
					iColspan = nCell.getAttribute('colspan') * 1;
					iRowspan = nCell.getAttribute('rowspan') * 1;
					iColspan = (!iColspan || iColspan===0 || iColspan===1) ? 1 : iColspan;
					iRowspan = (!iRowspan || iRowspan===0 || iRowspan===1) ? 1 : iRowspan;
	
					/* There might be colspan cells already in this row, so shift our target
					 * accordingly
					 */
					iColShifted = fnShiftCol( aLayout, i, iColumn );
	
					/* Cache calculation for unique columns */
					bUnique = iColspan === 1 ? true : false;
	
					/* If there is col / rowspan, copy the information into the layout grid */
					for ( l=0 ; l<iColspan ; l++ )
					{
						for ( k=0 ; k<iRowspan ; k++ )
						{
							aLayout[i+k][iColShifted+l] = {
								"cell": nCell,
								"unique": bUnique
							};
							aLayout[i+k].nTr = nTr;
						}
					}
				}
				nCell = nCell.nextSibling;
			}
		}
	}
	
	
	/**
	 * Get an array of unique th elements, one for each column
	 *  @param {object} oSettings dataTables settings object
	 *  @param {node} nHeader automatically detect the layout from this node - optional
	 *  @param {array} aLayout thead/tfoot layout from _fnDetectHeader - optional
	 *  @returns array {node} aReturn list of unique th's
	 *  @memberof DataTable#oApi
	 */
	function _fnGetUniqueThs ( oSettings, nHeader, aLayout )
	{
		var aReturn = [];
		if ( !aLayout )
		{
			aLayout = oSettings.aoHeader;
			if ( nHeader )
			{
				aLayout = [];
				_fnDetectHeader( aLayout, nHeader );
			}
		}
	
		for ( var i=0, iLen=aLayout.length ; i<iLen ; i++ )
		{
			for ( var j=0, jLen=aLayout[i].length ; j<jLen ; j++ )
			{
				if ( aLayout[i][j].unique &&
					 (!aReturn[j] || !oSettings.bSortCellsTop) )
				{
					aReturn[j] = aLayout[i][j].cell;
				}
			}
		}
	
		return aReturn;
	}
	
	/**
	 * Create an Ajax call based on the table's settings, taking into account that
	 * parameters can have multiple forms, and backwards compatibility.
	 *
	 * @param {object} oSettings dataTables settings object
	 * @param {array} data Data to send to the server, required by
	 *     DataTables - may be augmented by developer callbacks
	 * @param {function} fn Callback function to run when data is obtained
	 */
	function _fnBuildAjax( oSettings, data, fn )
	{
		// Compatibility with 1.9-, allow fnServerData and event to manipulate
		_fnCallbackFire( oSettings, 'aoServerParams', 'serverParams', [data] );
	
		// Convert to object based for 1.10+ if using the old array scheme which can
		// come from server-side processing or serverParams
		if ( data && Array.isArray(data) ) {
			var tmp = {};
			var rbracket = /(.*?)\\[\\]$/;
	
			$.each( data, function (key, val) {
				var match = val.name.match(rbracket);
	
				if ( match ) {
					// Support for arrays
					var name = match[0];
	
					if ( ! tmp[ name ] ) {
						tmp[ name ] = [];
					}
					tmp[ name ].push( val.value );
				}
				else {
					tmp[val.name] = val.value;
				}
			} );
			data = tmp;
		}
	
		var ajaxData;
		var ajax = oSettings.ajax;
		var instance = oSettings.oInstance;
		var callback = function ( json ) {
			var status = oSettings.jqXhr
				? oSettings.jqXhr.status
				: null;
	
			if ( json === null || (typeof status === 'number' && status == 204 ) ) {
				json = {};
				_fnAjaxDataSrc( oSettings, json, [] );
			}
	
			var error = json.error || json.sError;
			if ( error ) {
				_fnLog( oSettings, 0, error );
			}
	
			oSettings.json = json;
	
			_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR] );
			fn( json );
		};
	
		if ( $.isPlainObject( ajax ) && ajax.data )
		{
			ajaxData = ajax.data;
	
			var newData = typeof ajaxData === 'function' ?
				ajaxData( data, oSettings ) :  // fn can manipulate data or return
				ajaxData;                      // an object object or array to merge
	
			// If the function returned something, use that alone
			data = typeof ajaxData === 'function' && newData ?
				newData :
				$.extend( true, data, newData );
	
			// Remove the data property as we've resolved it already and don't want
			// jQuery to do it again (it is restored at the end of the function)
			delete ajax.data;
		}
	
		var baseAjax = {
			"data": data,
			"success": callback,
			"dataType": "json",
			"cache": false,
			"type": oSettings.sServerMethod,
			"error": function (xhr, error, thrown) {
				var ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR] );
	
				if ( $.inArray( true, ret ) === -1 ) {
					if ( error == "parsererror" ) {
						_fnLog( oSettings, 0, 'Invalid JSON response', 1 );
					}
					else if ( xhr.readyState === 4 ) {
						_fnLog( oSettings, 0, 'Ajax error', 7 );
					}
				}
	
				_fnProcessingDisplay( oSettings, false );
			}
		};
	
		// Store the data submitted for the API
		oSettings.oAjaxData = data;
	
		// Allow plug-ins and external processes to modify the data
		_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data] );
	
		if ( oSettings.fnServerData )
		{
			// DataTables 1.9- compatibility
			oSettings.fnServerData.call( instance,
				oSettings.sAjaxSource,
				$.map( data, function (val, key) { // Need to convert back to 1.9 trad format
					return { name: key, value: val };
				} ),
				callback,
				oSettings
			);
		}
		else if ( oSettings.sAjaxSource || typeof ajax === 'string' )
		{
			// DataTables 1.9- compatibility
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, {
				url: ajax || oSettings.sAjaxSource
			} ) );
		}
		else if ( typeof ajax === 'function' )
		{
			// Is a function - let the caller define what needs to be done
			oSettings.jqXHR = ajax.call( instance, data, callback, oSettings );
		}
		else
		{
			// Object to extend the base settings
			oSettings.jqXHR = $.ajax( $.extend( baseAjax, ajax ) );
	
			// Restore for next time around
			ajax.data = ajaxData;
		}
	}
	
	
	/**
	 * Update the table using an Ajax call
	 *  @param {object} settings dataTables settings object
	 *  @returns {boolean} Block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdate( settings )
	{
		settings.iDraw++;
		_fnProcessingDisplay( settings, true );
	
		_fnBuildAjax(
			settings,
			_fnAjaxParameters( settings ),
			function(json) {
				_fnAjaxUpdateDraw( settings, json );
			}
		);
	}
	
	
	/**
	 * Build up the parameters in an object needed for a server-side processing
	 * request. Note that this is basically done twice, is different ways - a modern
	 * method which is used by default in DataTables 1.10 which uses objects and
	 * arrays, or the 1.9- method with is name / value pairs. 1.9 method is used if
	 * the sAjaxSource option is used in the initialisation, or the legacyAjax
	 * option is set.
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {bool} block the table drawing or not
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxParameters( settings )
	{
		var
			columns = settings.aoColumns,
			columnCount = columns.length,
			features = settings.oFeatures,
			preSearch = settings.oPreviousSearch,
			preColSearch = settings.aoPreSearchCols,
			i, data = [], dataProp, column, columnSearch,
			sort = _fnSortFlatten( settings ),
			displayStart = settings._iDisplayStart,
			displayLength = features.bPaginate !== false ?
				settings._iDisplayLength :
				-1;
	
		var param = function ( name, value ) {
			data.push( { 'name': name, 'value': value } );
		};
	
		// DataTables 1.9- compatible method
		param( 'sEcho',          settings.iDraw );
		param( 'iColumns',       columnCount );
		param( 'sColumns',       _pluck( columns, 'sName' ).join(',') );
		param( 'iDisplayStart',  displayStart );
		param( 'iDisplayLength', displayLength );
	
		// DataTables 1.10+ method
		var d = {
			draw:    settings.iDraw,
			columns: [],
			order:   [],
			start:   displayStart,
			length:  displayLength,
			search:  {
				value: preSearch.sSearch,
				regex: preSearch.bRegex
			}
		};
	
		for ( i=0 ; i<columnCount ; i++ ) {
			column = columns[i];
			columnSearch = preColSearch[i];
			dataProp = typeof column.mData=="function" ? 'function' : column.mData ;
	
			d.columns.push( {
				data:       dataProp,
				name:       column.sName,
				searchable: column.bSearchable,
				orderable:  column.bSortable,
				search:     {
					value: columnSearch.sSearch,
					regex: columnSearch.bRegex
				}
			} );
	
			param( "mDataProp_"+i, dataProp );
	
			if ( features.bFilter ) {
				param( 'sSearch_'+i,     columnSearch.sSearch );
				param( 'bRegex_'+i,      columnSearch.bRegex );
				param( 'bSearchable_'+i, column.bSearchable );
			}
	
			if ( features.bSort ) {
				param( 'bSortable_'+i, column.bSortable );
			}
		}
	
		if ( features.bFilter ) {
			param( 'sSearch', preSearch.sSearch );
			param( 'bRegex', preSearch.bRegex );
		}
	
		if ( features.bSort ) {
			$.each( sort, function ( i, val ) {
				d.order.push( { column: val.col, dir: val.dir } );
	
				param( 'iSortCol_'+i, val.col );
				param( 'sSortDir_'+i, val.dir );
			} );
	
			param( 'iSortingCols', sort.length );
		}
	
		// If the legacy.ajax parameter is null, then we automatically decide which
		// form to use, based on sAjaxSource
		var legacy = DataTable.ext.legacy.ajax;
		if ( legacy === null ) {
			return settings.sAjaxSource ? data : d;
		}
	
		// Otherwise, if legacy has been specified then we use that to decide on the
		// form
		return legacy ? data : d;
	}
	
	
	/**
	 * Data the data from the server (nuking the old) and redraw the table
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} json json data return from the server.
	 *  @param {string} json.sEcho Tracking flag for DataTables to match requests
	 *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering
	 *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering
	 *  @param {array} json.aaData The data to display on this page
	 *  @param {string} [json.sColumns] Column ordering (sName, comma separated)
	 *  @memberof DataTable#oApi
	 */
	function _fnAjaxUpdateDraw ( settings, json )
	{
		// v1.10 uses camelCase variables, while 1.9 uses Hungarian notation.
		// Support both
		var compat = function ( old, modern ) {
			return json[old] !== undefined ? json[old] : json[modern];
		};
	
		var data = _fnAjaxDataSrc( settings, json );
		var draw            = compat( 'sEcho',                'draw' );
		var recordsTotal    = compat( 'iTotalRecords',        'recordsTotal' );
		var recordsFiltered = compat( 'iTotalDisplayRecords', 'recordsFiltered' );
	
		if ( draw !== undefined ) {
			// Protect against out of sequence returns
			if ( draw*1 < settings.iDraw ) {
				return;
			}
			settings.iDraw = draw * 1;
		}
	
		// No data in returned object, so rather than an array, we show an empty table
		if ( ! data ) {
			data = [];
		}
	
		_fnClearTable( settings );
		settings._iRecordsTotal   = parseInt(recordsTotal, 10);
		settings._iRecordsDisplay = parseInt(recordsFiltered, 10);
	
		for ( var i=0, ien=data.length ; i<ien ; i++ ) {
			_fnAddData( settings, data[i] );
		}
		settings.aiDisplay = settings.aiDisplayMaster.slice();
	
		_fnDraw( settings, true );
	
		if ( ! settings._bInitComplete ) {
			_fnInitComplete( settings, json );
		}
	
		_fnProcessingDisplay( settings, false );
	}
	
	
	/**
	 * Get the data from the JSON data source to use for drawing a table. Using
	 * \`_fnGetObjectDataFn\` allows the data to be sourced from a property of the
	 * source object, or from a processing function.
	 *  @param {object} oSettings dataTables settings object
	 *  @param  {object} json Data source object / array from the server
	 *  @return {array} Array of data to use
	 */
	 function _fnAjaxDataSrc ( oSettings, json, write )
	 {
		var dataSrc = $.isPlainObject( oSettings.ajax ) && oSettings.ajax.dataSrc !== undefined ?
			oSettings.ajax.dataSrc :
			oSettings.sAjaxDataProp; // Compatibility with 1.9-.
	
		if ( ! write ) {
			if ( dataSrc === 'data' ) {
				// If the default, then we still want to support the old style, and safely ignore
				// it if possible
				return json.aaData || json[dataSrc];
			}
	
			return dataSrc !== "" ?
				_fnGetObjectDataFn( dataSrc )( json ) :
				json;
		}
	
		// set
		_fnSetObjectDataFn( dataSrc )( json, write );
	}
	
	/**
	 * Generate the node required for filtering text
	 *  @returns {node} Filter control element
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlFilter ( settings )
	{
		var classes = settings.oClasses;
		var tableId = settings.sTableId;
		var language = settings.oLanguage;
		var previousSearch = settings.oPreviousSearch;
		var features = settings.aanFeatures;
		var input = '<input type="search" class="'+classes.sFilterInput+'"/>';
	
		var str = language.sSearch;
		str = str.match(/_INPUT_/) ?
			str.replace('_INPUT_', input) :
			str+input;
	
		var filter = $('<div/>', {
				'id': ! features.f ? tableId+'_filter' : null,
				'class': classes.sFilter
			} )
			.append( $('<label/>' ).append( str ) );
	
		var searchFn = function(event) {
			/* Update all other filter input elements for the new display */
			var n = features.f;
			var val = !this.value ? "" : this.value; // mental IE8 fix :-(
			if(previousSearch.return && event.key !== "Enter") {
				return;
			}
			/* Now do the filter */
			if ( val != previousSearch.sSearch ) {
				_fnFilterComplete( settings, {
					"sSearch": val,
					"bRegex": previousSearch.bRegex,
					"bSmart": previousSearch.bSmart ,
					"bCaseInsensitive": previousSearch.bCaseInsensitive,
					"return": previousSearch.return
				} );
	
				// Need to redraw, without resorting
				settings._iDisplayStart = 0;
				_fnDraw( settings );
			}
		};
	
		var searchDelay = settings.searchDelay !== null ?
			settings.searchDelay :
			_fnDataSource( settings ) === 'ssp' ?
				400 :
				0;
	
		var jqFilter = $('input', filter)
			.val( previousSearch.sSearch )
			.attr( 'placeholder', language.sSearchPlaceholder )
			.on(
				'keyup.DT search.DT input.DT paste.DT cut.DT',
				searchDelay ?
					_fnThrottle( searchFn, searchDelay ) :
					searchFn
			)
			.on( 'mouseup', function(e) {
				// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking
				// on the clear icon (Edge bug 17584515). This is safe in other browsers as \`searchFn\`
				// checks the value to see if it has changed. In other browsers it won't have.
				setTimeout( function () {
					searchFn.call(jqFilter[0], e);
				}, 10);
			} )
			.on( 'keypress.DT', function(e) {
				/* Prevent form submission */
				if ( e.keyCode == 13 ) {
					return false;
				}
			} )
			.attr('aria-controls', tableId);
	
		// Update the input elements whenever the table is filtered
		$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {
			if ( settings === s ) {
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame...
				try {
					if ( jqFilter[0] !== document.activeElement ) {
						jqFilter.val( previousSearch.sSearch );
					}
				}
				catch ( e ) {}
			}
		} );
	
		return filter[0];
	}
	
	
	/**
	 * Filter the table using both the global filter and column based filtering
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oSearch search information
	 *  @param {int} [iForce] force a research of the master array (1) or not (undefined or 0)
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterComplete ( oSettings, oInput, iForce )
	{
		var oPrevSearch = oSettings.oPreviousSearch;
		var aoPrevSearch = oSettings.aoPreSearchCols;
		var fnSaveFilter = function ( oFilter ) {
			/* Save the filtering values */
			oPrevSearch.sSearch = oFilter.sSearch;
			oPrevSearch.bRegex = oFilter.bRegex;
			oPrevSearch.bSmart = oFilter.bSmart;
			oPrevSearch.bCaseInsensitive = oFilter.bCaseInsensitive;
			oPrevSearch.return = oFilter.return;
		};
		var fnRegex = function ( o ) {
			// Backwards compatibility with the bEscapeRegex option
			return o.bEscapeRegex !== undefined ? !o.bEscapeRegex : o.bRegex;
		};
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo As per sort - can this be moved into an event handler?
		_fnColumnTypes( oSettings );
	
		/* In server-side processing all filtering is done by the server, so no point hanging around here */
		if ( _fnDataSource( oSettings ) != 'ssp' )
		{
			/* Global filter */
			_fnFilter( oSettings, oInput.sSearch, iForce, fnRegex(oInput), oInput.bSmart, oInput.bCaseInsensitive, oInput.return );
			fnSaveFilter( oInput );
	
			/* Now do the individual column filter */
			for ( var i=0 ; i<aoPrevSearch.length ; i++ )
			{
				_fnFilterColumn( oSettings, aoPrevSearch[i].sSearch, i, fnRegex(aoPrevSearch[i]),
					aoPrevSearch[i].bSmart, aoPrevSearch[i].bCaseInsensitive );
			}
	
			/* Custom filtering */
			_fnFilterCustom( oSettings );
		}
		else
		{
			fnSaveFilter( oInput );
		}
	
		/* Tell the draw function we have been filtering */
		oSettings.bFiltered = true;
		_fnCallbackFire( oSettings, null, 'search', [oSettings] );
	}
	
	
	/**
	 * Apply custom filtering functions
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCustom( settings )
	{
		var filters = DataTable.ext.search;
		var displayRows = settings.aiDisplay;
		var row, rowIdx;
	
		for ( var i=0, ien=filters.length ; i<ien ; i++ ) {
			var rows = [];
	
			// Loop over each row and see if it should be included
			for ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {
				rowIdx = displayRows[ j ];
				row = settings.aoData[ rowIdx ];
	
				if ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {
					rows.push( rowIdx );
				}
			}
	
			// So the array reference doesn't break set the results into the
			// existing array
			displayRows.length = 0;
			$.merge( displayRows, rows );
		}
	}
	
	
	/**
	 * Filter the table on a per-column basis
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sInput string to filter on
	 *  @param {int} iColumn column to filter
	 *  @param {bool} bRegex treat search string as a regular expression or not
	 *  @param {bool} bSmart use smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterColumn ( settings, searchStr, colIdx, regex, smart, caseInsensitive )
	{
		if ( searchStr === '' ) {
			return;
		}
	
		var data;
		var out = [];
		var display = settings.aiDisplay;
		var rpSearch = _fnFilterCreateSearch( searchStr, regex, smart, caseInsensitive );
	
		for ( var i=0 ; i<display.length ; i++ ) {
			data = settings.aoData[ display[i] ]._aFilterData[ colIdx ];
	
			if ( rpSearch.test( data ) ) {
				out.push( display[i] );
			}
		}
	
		settings.aiDisplay = out;
	}
	
	
	/**
	 * Filter the data table based on user input and draw the table
	 *  @param {object} settings dataTables settings object
	 *  @param {string} input string to filter on
	 *  @param {int} force optional - force a research of the master array (1) or not (undefined or 0)
	 *  @param {bool} regex treat as a regular expression or not
	 *  @param {bool} smart perform smart filtering or not
	 *  @param {bool} caseInsensitive Do case insensitive matching or not
	 *  @memberof DataTable#oApi
	 */
	function _fnFilter( settings, input, force, regex, smart, caseInsensitive )
	{
		var rpSearch = _fnFilterCreateSearch( input, regex, smart, caseInsensitive );
		var prevSearch = settings.oPreviousSearch.sSearch;
		var displayMaster = settings.aiDisplayMaster;
		var display, invalidated, i;
		var filtered = [];
	
		// Need to take account of custom filtering functions - always filter
		if ( DataTable.ext.search.length !== 0 ) {
			force = true;
		}
	
		// Check if any of the rows were invalidated
		invalidated = _fnFilterData( settings );
	
		// If the input is blank - we just want the full data set
		if ( input.length <= 0 ) {
			settings.aiDisplay = displayMaster.slice();
		}
		else {
			// New search - start from the master array
			if ( invalidated ||
				 force ||
				 regex ||
				 prevSearch.length > input.length ||
				 input.indexOf(prevSearch) !== 0 ||
				 settings.bSorted // On resort, the display master needs to be
				                  // re-filtered since indexes will have changed
			) {
				settings.aiDisplay = displayMaster.slice();
			}
	
			// Search the display array
			display = settings.aiDisplay;
	
			for ( i=0 ; i<display.length ; i++ ) {
				if ( rpSearch.test( settings.aoData[ display[i] ]._sFilterRow ) ) {
					filtered.push( display[i] );
				}
			}
	
			settings.aiDisplay = filtered;
		}
	}
	
	
	/**
	 * Build a regular expression object suitable for searching a table
	 *  @param {string} sSearch string to search for
	 *  @param {bool} bRegex treat as a regular expression or not
	 *  @param {bool} bSmart perform smart filtering or not
	 *  @param {bool} bCaseInsensitive Do case insensitive matching or not
	 *  @returns {RegExp} constructed object
	 *  @memberof DataTable#oApi
	 */
	function _fnFilterCreateSearch( search, regex, smart, caseInsensitive )
	{
		search = regex ?
			search :
			_fnEscapeRegex( search );
		
		if ( smart ) {
			/* For smart filtering we want to allow the search to work regardless of
			 * word order. We also want double quoted text to be preserved, so word
			 * order is important - a la google. So this is what we want to
			 * generate:
			 * 
			 * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$
			 */
			var a = $.map( search.match( /"[^"]+"|[^ ]+/g ) || [''], function ( word ) {
				if ( word.charAt(0) === '"' ) {
					var m = word.match( /^"(.*)"$/ );
					word = m ? m[1] : word;
				}
	
				return word.replace('"', '');
			} );
	
			search = '^(?=.*?'+a.join( ')(?=.*?' )+').*$';
		}
	
		return new RegExp( search, caseInsensitive ? 'i' : '' );
	}
	
	
	/**
	 * Escape a string such that it can be used in a regular expression
	 *  @param {string} sVal string to escape
	 *  @returns {string} escaped string
	 *  @memberof DataTable#oApi
	 */
	var _fnEscapeRegex = DataTable.util.escapeRegex;
	
	var __filter_div = $('<div>')[0];
	var __filter_div_textContent = __filter_div.textContent !== undefined;
	
	// Update the filtering data for each row if needed (by invalidation or first run)
	function _fnFilterData ( settings )
	{
		var columns = settings.aoColumns;
		var column;
		var i, j, ien, jen, filterData, cellData, row;
		var wasInvalidated = false;
	
		for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aFilterData ) {
				filterData = [];
	
				for ( j=0, jen=columns.length ; j<jen ; j++ ) {
					column = columns[j];
	
					if ( column.bSearchable ) {
						cellData = _fnGetCellData( settings, i, j, 'filter' );
	
						// Search in DataTables 1.10 is string based. In 1.11 this
						// should be altered to also allow strict type checking.
						if ( cellData === null ) {
							cellData = '';
						}
	
						if ( typeof cellData !== 'string' && cellData.toString ) {
							cellData = cellData.toString();
						}
					}
					else {
						cellData = '';
					}
	
					// If it looks like there is an HTML entity in the string,
					// attempt to decode it so sorting works as expected. Note that
					// we could use a single line of jQuery to do this, but the DOM
					// method used here is much faster http://jsperf.com/html-decode
					if ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {
						__filter_div.innerHTML = cellData;
						cellData = __filter_div_textContent ?
							__filter_div.textContent :
							__filter_div.innerText;
					}
	
					if ( cellData.replace ) {
						cellData = cellData.replace(/[\\r\\n\\u2028]/g, '');
					}
	
					filterData.push( cellData );
				}
	
				row._aFilterData = filterData;
				row._sFilterRow = filterData.join('  ');
				wasInvalidated = true;
			}
		}
	
		return wasInvalidated;
	}
	
	
	/**
	 * Convert from the internal Hungarian notation to camelCase for external
	 * interaction
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToCamel ( obj )
	{
		return {
			search:          obj.sSearch,
			smart:           obj.bSmart,
			regex:           obj.bRegex,
			caseInsensitive: obj.bCaseInsensitive
		};
	}
	
	
	
	/**
	 * Convert from camelCase notation to the internal Hungarian. We could use the
	 * Hungarian convert function here, but this is cleaner
	 *  @param {object} obj Object to convert
	 *  @returns {object} Inverted object
	 *  @memberof DataTable#oApi
	 */
	function _fnSearchToHung ( obj )
	{
		return {
			sSearch:          obj.search,
			bSmart:           obj.smart,
			bRegex:           obj.regex,
			bCaseInsensitive: obj.caseInsensitive
		};
	}
	
	/**
	 * Generate the node required for the info display
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Information element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlInfo ( settings )
	{
		var
			tid = settings.sTableId,
			nodes = settings.aanFeatures.i,
			n = $('<div/>', {
				'class': settings.oClasses.sInfo,
				'id': ! nodes ? tid+'_info' : null
			} );
	
		if ( ! nodes ) {
			// Update display on each draw
			settings.aoDrawCallback.push( {
				"fn": _fnUpdateInfo,
				"sName": "information"
			} );
	
			n
				.attr( 'role', 'status' )
				.attr( 'aria-live', 'polite' );
	
			// Table is described by our info div
			$(settings.nTable).attr( 'aria-describedby', tid+'_info' );
		}
	
		return n[0];
	}
	
	
	/**
	 * Update the information elements in the display
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnUpdateInfo ( settings )
	{
		/* Show information about the table */
		var nodes = settings.aanFeatures.i;
		if ( nodes.length === 0 ) {
			return;
		}
	
		var
			lang  = settings.oLanguage,
			start = settings._iDisplayStart+1,
			end   = settings.fnDisplayEnd(),
			max   = settings.fnRecordsTotal(),
			total = settings.fnRecordsDisplay(),
			out   = total ?
				lang.sInfo :
				lang.sInfoEmpty;
	
		if ( total !== max ) {
			/* Record set after filtering */
			out += ' ' + lang.sInfoFiltered;
		}
	
		// Convert the macros
		out += lang.sInfoPostFix;
		out = _fnInfoMacros( settings, out );
	
		var callback = lang.fnInfoCallback;
		if ( callback !== null ) {
			out = callback.call( settings.oInstance,
				settings, start, end, max, total, out
			);
		}
	
		$(nodes).html( out );
	}
	
	
	function _fnInfoMacros ( settings, str )
	{
		// When infinite scrolling, we are always starting at 1. _iDisplayStart is used only
		// internally
		var
			formatter  = settings.fnFormatNumber,
			start      = settings._iDisplayStart+1,
			len        = settings._iDisplayLength,
			vis        = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return str.
			replace(/_START_/g, formatter.call( settings, start ) ).
			replace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).
			replace(/_MAX_/g,   formatter.call( settings, settings.fnRecordsTotal() ) ).
			replace(/_TOTAL_/g, formatter.call( settings, vis ) ).
			replace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).
			replace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) );
	}
	
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnInitialise ( settings )
	{
		var i, iLen, iAjaxStart=settings.iInitDisplayStart;
		var columns = settings.aoColumns, column;
		var features = settings.oFeatures;
		var deferLoading = settings.bDeferLoading; // value modified by the draw
	
		/* Ensure that the table data is fully initialised */
		if ( ! settings.bInitialised ) {
			setTimeout( function(){ _fnInitialise( settings ); }, 200 );
			return;
		}
	
		/* Show the display HTML options */
		_fnAddOptionsHtml( settings );
	
		/* Build and draw the header / footer for the table */
		_fnBuildHead( settings );
		_fnDrawHead( settings, settings.aoHeader );
		_fnDrawHead( settings, settings.aoFooter );
	
		/* Okay to show that something is going on now */
		_fnProcessingDisplay( settings, true );
	
		/* Calculate sizes for columns */
		if ( features.bAutoWidth ) {
			_fnCalculateColumnWidths( settings );
		}
	
		for ( i=0, iLen=columns.length ; i<iLen ; i++ ) {
			column = columns[i];
	
			if ( column.sWidth ) {
				column.nTh.style.width = _fnStringToCss( column.sWidth );
			}
		}
	
		_fnCallbackFire( settings, null, 'preInit', [settings] );
	
		// If there is default sorting required - let's do it. The sort function
		// will do the drawing for us. Otherwise we draw the table regardless of the
		// Ajax source - this allows the table to look initialised for Ajax sourcing
		// data (show 'loading' message possibly)
		_fnReDraw( settings );
	
		// Server-side processing init complete is done by _fnAjaxUpdateDraw
		var dataSrc = _fnDataSource( settings );
		if ( dataSrc != 'ssp' || deferLoading ) {
			// if there is an ajax source load the data
			if ( dataSrc == 'ajax' ) {
				_fnBuildAjax( settings, [], function(json) {
					var aData = _fnAjaxDataSrc( settings, json );
	
					// Got the data - add it to the table
					for ( i=0 ; i<aData.length ; i++ ) {
						_fnAddData( settings, aData[i] );
					}
	
					// Reset the init display for cookie saving. We've already done
					// a filter, and therefore cleared it before. So we need to make
					// it appear 'fresh'
					settings.iInitDisplayStart = iAjaxStart;
	
					_fnReDraw( settings );
	
					_fnProcessingDisplay( settings, false );
					_fnInitComplete( settings, json );
				}, settings );
			}
			else {
				_fnProcessingDisplay( settings, false );
				_fnInitComplete( settings );
			}
		}
	}
	
	
	/**
	 * Draw the table for the first time, adding all required features
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} [json] JSON from the server that completed the table, if using Ajax source
	 *    with client-side processing (optional)
	 *  @memberof DataTable#oApi
	 */
	function _fnInitComplete ( settings, json )
	{
		settings._bInitComplete = true;
	
		// When data was added after the initialisation (data or Ajax) we need to
		// calculate the column sizing
		if ( json || settings.oInit.aaData ) {
			_fnAdjustColumnSizing( settings );
		}
	
		_fnCallbackFire( settings, null, 'plugin-init', [settings, json] );
		_fnCallbackFire( settings, 'aoInitComplete', 'init', [settings, json] );
	}
	
	
	function _fnLengthChange ( settings, val )
	{
		var len = parseInt( val, 10 );
		settings._iDisplayLength = len;
	
		_fnLengthOverflow( settings );
	
		// Fire length change event
		_fnCallbackFire( settings, null, 'length', [settings, len] );
	}
	
	
	/**
	 * Generate the node required for user display length changing
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Display length feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlLength ( settings )
	{
		var
			classes  = settings.oClasses,
			tableId  = settings.sTableId,
			menu     = settings.aLengthMenu,
			d2       = Array.isArray( menu[0] ),
			lengths  = d2 ? menu[0] : menu,
			language = d2 ? menu[1] : menu;
	
		var select = $('<select/>', {
			'name':          tableId+'_length',
			'aria-controls': tableId,
			'class':         classes.sLengthSelect
		} );
	
		for ( var i=0, ien=lengths.length ; i<ien ; i++ ) {
			select[0][ i ] = new Option(
				typeof language[i] === 'number' ?
					settings.fnFormatNumber( language[i] ) :
					language[i],
				lengths[i]
			);
		}
	
		var div = $('<div><label/></div>').addClass( classes.sLength );
		if ( ! settings.aanFeatures.l ) {
			div[0].id = tableId+'_length';
		}
	
		div.children().append(
			settings.oLanguage.sLengthMenu.replace( '_MENU_', select[0].outerHTML )
		);
	
		// Can't use \`select\` variable as user might provide their own and the
		// reference is broken by the use of outerHTML
		$('select', div)
			.val( settings._iDisplayLength )
			.on( 'change.DT', function(e) {
				_fnLengthChange( settings, $(this).val() );
				_fnDraw( settings );
			} );
	
		// Update node value whenever anything changes the table's length
		$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {
			if ( settings === s ) {
				$('select', div).val( len );
			}
		} );
	
		return div[0];
	}
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Note that most of the paging logic is done in
	 * DataTable.ext.pager
	 */
	
	/**
	 * Generate the node required for default pagination
	 *  @param {object} oSettings dataTables settings object
	 *  @returns {node} Pagination feature node
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlPaginate ( settings )
	{
		var
			type   = settings.sPaginationType,
			plugin = DataTable.ext.pager[ type ],
			modern = typeof plugin === 'function',
			redraw = function( settings ) {
				_fnDraw( settings );
			},
			node = $('<div/>').addClass( settings.oClasses.sPaging + type )[0],
			features = settings.aanFeatures;
	
		if ( ! modern ) {
			plugin.fnInit( settings, node, redraw );
		}
	
		/* Add a draw callback for the pagination on first instance, to update the paging display */
		if ( ! features.p )
		{
			node.id = settings.sTableId+'_paginate';
	
			settings.aoDrawCallback.push( {
				"fn": function( settings ) {
					if ( modern ) {
						var
							start      = settings._iDisplayStart,
							len        = settings._iDisplayLength,
							visRecords = settings.fnRecordsDisplay(),
							all        = len === -1,
							page = all ? 0 : Math.ceil( start / len ),
							pages = all ? 1 : Math.ceil( visRecords / len ),
							buttons = plugin(page, pages),
							i, ien;
	
						for ( i=0, ien=features.p.length ; i<ien ; i++ ) {
							_fnRenderer( settings, 'pageButton' )(
								settings, features.p[i], i, buttons, page, pages
							);
						}
					}
					else {
						plugin.fnUpdate( settings, redraw );
					}
				},
				"sName": "pagination"
			} );
		}
	
		return node;
	}
	
	
	/**
	 * Alter the display settings to change the page
	 *  @param {object} settings DataTables settings object
	 *  @param {string|int} action Paging action to take: "first", "previous",
	 *    "next" or "last" or page number to jump to (integer)
	 *  @param [bool] redraw Automatically draw the update or not
	 *  @returns {bool} true page has changed, false - no change
	 *  @memberof DataTable#oApi
	 */
	function _fnPageChange ( settings, action, redraw )
	{
		var
			start     = settings._iDisplayStart,
			len       = settings._iDisplayLength,
			records   = settings.fnRecordsDisplay();
	
		if ( records === 0 || len === -1 )
		{
			start = 0;
		}
		else if ( typeof action === "number" )
		{
			start = action * len;
	
			if ( start > records )
			{
				start = 0;
			}
		}
		else if ( action == "first" )
		{
			start = 0;
		}
		else if ( action == "previous" )
		{
			start = len >= 0 ?
				start - len :
				0;
	
			if ( start < 0 )
			{
			  start = 0;
			}
		}
		else if ( action == "next" )
		{
			if ( start + len < records )
			{
				start += len;
			}
		}
		else if ( action == "last" )
		{
			start = Math.floor( (records-1) / len) * len;
		}
		else
		{
			_fnLog( settings, 0, "Unknown paging action: "+action, 5 );
		}
	
		var changed = settings._iDisplayStart !== start;
		settings._iDisplayStart = start;
	
		if ( changed ) {
			_fnCallbackFire( settings, null, 'page', [settings] );
	
			if ( redraw ) {
				_fnDraw( settings );
			}
		}
	
		return changed;
	}
	
	
	
	/**
	 * Generate the node required for the processing node
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Processing element
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlProcessing ( settings )
	{
		return $('<div/>', {
				'id': ! settings.aanFeatures.r ? settings.sTableId+'_processing' : null,
				'class': settings.oClasses.sProcessing
			} )
			.html( settings.oLanguage.sProcessing )
			.insertBefore( settings.nTable )[0];
	}
	
	
	/**
	 * Display or hide the processing indicator
	 *  @param {object} settings dataTables settings object
	 *  @param {bool} show Show the processing indicator (true) or not (false)
	 *  @memberof DataTable#oApi
	 */
	function _fnProcessingDisplay ( settings, show )
	{
		if ( settings.oFeatures.bProcessing ) {
			$(settings.aanFeatures.r).css( 'display', show ? 'block' : 'none' );
		}
	
		_fnCallbackFire( settings, null, 'processing', [settings, show] );
	}
	
	/**
	 * Add any control elements for the table - specifically scrolling
	 *  @param {object} settings dataTables settings object
	 *  @returns {node} Node to add to the DOM
	 *  @memberof DataTable#oApi
	 */
	function _fnFeatureHtmlTable ( settings )
	{
		var table = $(settings.nTable);
	
		// Scrolling from here on in
		var scroll = settings.oScroll;
	
		if ( scroll.sX === '' && scroll.sY === '' ) {
			return settings.nTable;
		}
	
		var scrollX = scroll.sX;
		var scrollY = scroll.sY;
		var classes = settings.oClasses;
		var caption = table.children('caption');
		var captionSide = caption.length ? caption[0]._captionSide : null;
		var headerClone = $( table[0].cloneNode(false) );
		var footerClone = $( table[0].cloneNode(false) );
		var footer = table.children('tfoot');
		var _div = '<div/>';
		var size = function ( s ) {
			return !s ? null : _fnStringToCss( s );
		};
	
		if ( ! footer.length ) {
			footer = null;
		}
	
		/*
		 * The HTML structure that we want to generate in this function is:
		 *  div - scroller
		 *    div - scroll head
		 *      div - scroll head inner
		 *        table - scroll head table
		 *          thead - thead
		 *    div - scroll body
		 *      table - table (master table)
		 *        thead - thead clone for sizing
		 *        tbody - tbody
		 *    div - scroll foot
		 *      div - scroll foot inner
		 *        table - scroll foot table
		 *          tfoot - tfoot
		 */
		var scroller = $( _div, { 'class': classes.sScrollWrapper } )
			.append(
				$(_div, { 'class': classes.sScrollHead } )
					.css( {
						overflow: 'hidden',
						position: 'relative',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollHeadInner } )
							.css( {
								'box-sizing': 'content-box',
								width: scroll.sXInner || '100%'
							} )
							.append(
								headerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'top' ? caption : null )
									.append(
										table.children('thead')
									)
							)
					)
			)
			.append(
				$(_div, { 'class': classes.sScrollBody } )
					.css( {
						position: 'relative',
						overflow: 'auto',
						width: size( scrollX )
					} )
					.append( table )
			);
	
		if ( footer ) {
			scroller.append(
				$(_div, { 'class': classes.sScrollFoot } )
					.css( {
						overflow: 'hidden',
						border: 0,
						width: scrollX ? size(scrollX) : '100%'
					} )
					.append(
						$(_div, { 'class': classes.sScrollFootInner } )
							.append(
								footerClone
									.removeAttr('id')
									.css( 'margin-left', 0 )
									.append( captionSide === 'bottom' ? caption : null )
									.append(
										table.children('tfoot')
									)
							)
					)
			);
		}
	
		var children = scroller.children();
		var scrollHead = children[0];
		var scrollBody = children[1];
		var scrollFoot = footer ? children[2] : null;
	
		// When the body is scrolled, then we also want to scroll the headers
		if ( scrollX ) {
			$(scrollBody).on( 'scroll.DT', function (e) {
				var scrollLeft = this.scrollLeft;
	
				scrollHead.scrollLeft = scrollLeft;
	
				if ( footer ) {
					scrollFoot.scrollLeft = scrollLeft;
				}
			} );
		}
	
		$(scrollBody).css('max-height', scrollY);
		if (! scroll.bCollapse) {
			$(scrollBody).css('height', scrollY);
		}
	
		settings.nScrollHead = scrollHead;
		settings.nScrollBody = scrollBody;
		settings.nScrollFoot = scrollFoot;
	
		// On redraw - align columns
		settings.aoDrawCallback.push( {
			"fn": _fnScrollDraw,
			"sName": "scrolling"
		} );
	
		return scroller[0];
	}
	
	
	
	/**
	 * Update the header, footer and body tables for resizing - i.e. column
	 * alignment.
	 *
	 * Welcome to the most horrible function DataTables. The process that this
	 * function follows is basically:
	 *   1. Re-create the table inside the scrolling div
	 *   2. Take live measurements from the DOM
	 *   3. Apply the measurements to align the columns
	 *   4. Clean up
	 *
	 *  @param {object} settings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnScrollDraw ( settings )
	{
		// Given that this is such a monster function, a lot of variables are use
		// to try and keep the minimised size as small as possible
		var
			scroll         = settings.oScroll,
			scrollX        = scroll.sX,
			scrollXInner   = scroll.sXInner,
			scrollY        = scroll.sY,
			barWidth       = scroll.iBarWidth,
			divHeader      = $(settings.nScrollHead),
			divHeaderStyle = divHeader[0].style,
			divHeaderInner = divHeader.children('div'),
			divHeaderInnerStyle = divHeaderInner[0].style,
			divHeaderTable = divHeaderInner.children('table'),
			divBodyEl      = settings.nScrollBody,
			divBody        = $(divBodyEl),
			divBodyStyle   = divBodyEl.style,
			divFooter      = $(settings.nScrollFoot),
			divFooterInner = divFooter.children('div'),
			divFooterTable = divFooterInner.children('table'),
			header         = $(settings.nTHead),
			table          = $(settings.nTable),
			tableEl        = table[0],
			tableStyle     = tableEl.style,
			footer         = settings.nTFoot ? $(settings.nTFoot) : null,
			browser        = settings.oBrowser,
			ie67           = browser.bScrollOversize,
			dtHeaderCells  = _pluck( settings.aoColumns, 'nTh' ),
			headerTrgEls, footerTrgEls,
			headerSrcEls, footerSrcEls,
			headerCopy, footerCopy,
			headerWidths=[], footerWidths=[],
			headerContent=[], footerContent=[],
			idx, correction, sanityWidth,
			zeroOut = function(nSizer) {
				var style = nSizer.style;
				style.paddingTop = "0";
				style.paddingBottom = "0";
				style.borderTopWidth = "0";
				style.borderBottomWidth = "0";
				style.height = 0;
			};
	
		// If the scrollbar visibility has changed from the last draw, we need to
		// adjust the column sizes as the table width will have changed to account
		// for the scrollbar
		var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;
		
		if ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {
			settings.scrollBarVis = scrollBarVis;
			_fnAdjustColumnSizing( settings );
			return; // adjust column sizing will call this function again
		}
		else {
			settings.scrollBarVis = scrollBarVis;
		}
	
		/*
		 * 1. Re-create the table inside the scrolling div
		 */
	
		// Remove the old minimised thead and tfoot elements in the inner table
		table.children('thead, tfoot').remove();
	
		if ( footer ) {
			footerCopy = footer.clone().prependTo( table );
			footerTrgEls = footer.find('tr'); // the original tfoot is in its own table and must be sized
			footerSrcEls = footerCopy.find('tr');
		}
	
		// Clone the current header and footer elements and then place it into the inner table
		headerCopy = header.clone().prependTo( table );
		headerTrgEls = header.find('tr'); // original header is in its own table
		headerSrcEls = headerCopy.find('tr');
		headerCopy.find('th, td').removeAttr('tabindex');
	
	
		/*
		 * 2. Take live measurements from the DOM - do not alter the DOM itself!
		 */
	
		// Remove old sizing and apply the calculated column widths
		// Get the unique column headers in the newly created (cloned) header. We want to apply the
		// calculated sizes to this header
		if ( ! scrollX )
		{
			divBodyStyle.width = '100%';
			divHeader[0].style.width = '100%';
		}
	
		$.each( _fnGetUniqueThs( settings, headerCopy ), function ( i, el ) {
			idx = _fnVisibleToColumnIndex( settings, i );
			el.style.width = settings.aoColumns[idx].sWidth;
		} );
	
		if ( footer ) {
			_fnApplyToChildren( function(n) {
				n.style.width = "";
			}, footerSrcEls );
		}
	
		// Size the table as a whole
		sanityWidth = table.outerWidth();
		if ( scrollX === "" ) {
			// No x scrolling
			tableStyle.width = "100%";
	
			// IE7 will make the width of the table when 100% include the scrollbar
			// - which is shouldn't. When there is a scrollbar we need to take this
			// into account.
			if ( ie67 && (table.find('tbody').height() > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( table.outerWidth() - barWidth);
			}
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
		else if ( scrollXInner !== "" ) {
			// legacy x scroll inner has been given - use it
			tableStyle.width = _fnStringToCss(scrollXInner);
	
			// Recalculate the sanity width
			sanityWidth = table.outerWidth();
		}
	
		// Hidden header should have zero height, so remove padding and borders. Then
		// set the width based on the real headers
	
		// Apply all styles in one pass
		_fnApplyToChildren( zeroOut, headerSrcEls );
	
		// Read all widths in next pass
		_fnApplyToChildren( function(nSizer) {
			var style = window.getComputedStyle ?
				window.getComputedStyle(nSizer).width :
				_fnStringToCss( $(nSizer).width() );
	
			headerContent.push( nSizer.innerHTML );
			headerWidths.push( style );
		}, headerSrcEls );
	
		// Apply all widths in final pass
		_fnApplyToChildren( function(nToSize, i) {
			nToSize.style.width = headerWidths[i];
		}, headerTrgEls );
	
		$(headerSrcEls).height(0);
	
		/* Same again with the footer if we have one */
		if ( footer )
		{
			_fnApplyToChildren( zeroOut, footerSrcEls );
	
			_fnApplyToChildren( function(nSizer) {
				footerContent.push( nSizer.innerHTML );
				footerWidths.push( _fnStringToCss( $(nSizer).css('width') ) );
			}, footerSrcEls );
	
			_fnApplyToChildren( function(nToSize, i) {
				nToSize.style.width = footerWidths[i];
			}, footerTrgEls );
	
			$(footerSrcEls).height(0);
		}
	
	
		/*
		 * 3. Apply the measurements
		 */
	
		// "Hide" the header and footer that we used for the sizing. We need to keep
		// the content of the cell so that the width applied to the header and body
		// both match, but we want to hide it completely. We want to also fix their
		// width to what they currently are
		_fnApplyToChildren( function(nSizer, i) {
			nSizer.innerHTML = '<div class="dataTables_sizing">'+headerContent[i]+'</div>';
			nSizer.childNodes[0].style.height = "0";
			nSizer.childNodes[0].style.overflow = "hidden";
			nSizer.style.width = headerWidths[i];
		}, headerSrcEls );
	
		if ( footer )
		{
			_fnApplyToChildren( function(nSizer, i) {
				nSizer.innerHTML = '<div class="dataTables_sizing">'+footerContent[i]+'</div>';
				nSizer.childNodes[0].style.height = "0";
				nSizer.childNodes[0].style.overflow = "hidden";
				nSizer.style.width = footerWidths[i];
			}, footerSrcEls );
		}
	
		// Sanity check that the table is of a sensible width. If not then we are going to get
		// misalignment - try to prevent this by not allowing the table to shrink below its min width
		if ( table.outerWidth() < sanityWidth )
		{
			// The min width depends upon if we have a vertical scrollbar visible or not */
			correction = ((divBodyEl.scrollHeight > divBodyEl.offsetHeight ||
				divBody.css('overflow-y') == "scroll")) ?
					sanityWidth+barWidth :
					sanityWidth;
	
			// IE6/7 are a law unto themselves...
			if ( ie67 && (divBodyEl.scrollHeight >
				divBodyEl.offsetHeight || divBody.css('overflow-y') == "scroll")
			) {
				tableStyle.width = _fnStringToCss( correction-barWidth );
			}
	
			// And give the user a warning that we've stopped the table getting too small
			if ( scrollX === "" || scrollXInner !== "" ) {
				_fnLog( settings, 1, 'Possible column misalignment', 6 );
			}
		}
		else
		{
			correction = '100%';
		}
	
		// Apply to the container elements
		divBodyStyle.width = _fnStringToCss( correction );
		divHeaderStyle.width = _fnStringToCss( correction );
	
		if ( footer ) {
			settings.nScrollFoot.style.width = _fnStringToCss( correction );
		}
	
	
		/*
		 * 4. Clean up
		 */
		if ( ! scrollY ) {
			/* IE7< puts a vertical scrollbar in place (when it shouldn't be) due to subtracting
			 * the scrollbar height from the visible display, rather than adding it on. We need to
			 * set the height in order to sort this. Don't want to do it in any other browsers.
			 */
			if ( ie67 ) {
				divBodyStyle.height = _fnStringToCss( tableEl.offsetHeight+barWidth );
			}
		}
	
		/* Finally set the width's of the header and footer tables */
		var iOuterWidth = table.outerWidth();
		divHeaderTable[0].style.width = _fnStringToCss( iOuterWidth );
		divHeaderInnerStyle.width = _fnStringToCss( iOuterWidth );
	
		// Figure out if there are scrollbar present - if so then we need a the header and footer to
		// provide a bit more space to allow "overflow" scrolling (i.e. past the scrollbar)
		var bScrolling = table.height() > divBodyEl.clientHeight || divBody.css('overflow-y') == "scroll";
		var padding = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );
		divHeaderInnerStyle[ padding ] = bScrolling ? barWidth+"px" : "0px";
	
		if ( footer ) {
			divFooterTable[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style.width = _fnStringToCss( iOuterWidth );
			divFooterInner[0].style[padding] = bScrolling ? barWidth+"px" : "0px";
		}
	
		// Correct DOM ordering for colgroup - comes before the thead
		table.children('colgroup').insertBefore( table.children('thead') );
	
		/* Adjust the position of the header in case we loose the y-scrollbar */
		divBody.trigger('scroll');
	
		// If sorting or filtering has occurred, jump the scrolling back to the top
		// only if we aren't holding the position
		if ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {
			divBodyEl.scrollTop = 0;
		}
	}
	
	
	
	/**
	 * Apply a given function to the display child nodes of an element array (typically
	 * TD children of TR rows
	 *  @param {function} fn Method to apply to the objects
	 *  @param array {nodes} an1 List of elements to look through for display children
	 *  @param array {nodes} an2 Another list (identical structure to the first) - optional
	 *  @memberof DataTable#oApi
	 */
	function _fnApplyToChildren( fn, an1, an2 )
	{
		var index=0, i=0, iLen=an1.length;
		var nNode1, nNode2;
	
		while ( i < iLen ) {
			nNode1 = an1[i].firstChild;
			nNode2 = an2 ? an2[i].firstChild : null;
	
			while ( nNode1 ) {
				if ( nNode1.nodeType === 1 ) {
					if ( an2 ) {
						fn( nNode1, nNode2, index );
					}
					else {
						fn( nNode1, index );
					}
	
					index++;
				}
	
				nNode1 = nNode1.nextSibling;
				nNode2 = an2 ? nNode2.nextSibling : null;
			}
	
			i++;
		}
	}
	
	
	
	var __re_html_remove = /<.*?>/g;
	
	
	/**
	 * Calculate the width of columns for the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnCalculateColumnWidths ( oSettings )
	{
		var
			table = oSettings.nTable,
			columns = oSettings.aoColumns,
			scroll = oSettings.oScroll,
			scrollY = scroll.sY,
			scrollX = scroll.sX,
			scrollXInner = scroll.sXInner,
			columnCount = columns.length,
			visibleColumns = _fnGetColumns( oSettings, 'bVisible' ),
			headerCells = $('th', oSettings.nTHead),
			tableWidthAttr = table.getAttribute('width'), // from DOM element
			tableContainer = table.parentNode,
			userInputs = false,
			i, column, columnIdx, width, outerWidth,
			browser = oSettings.oBrowser,
			ie67 = browser.bScrollOversize;
	
		var styleWidth = table.style.width;
		if ( styleWidth && styleWidth.indexOf('%') !== -1 ) {
			tableWidthAttr = styleWidth;
		}
	
		/* Convert any user input sizes into pixel sizes */
		for ( i=0 ; i<visibleColumns.length ; i++ ) {
			column = columns[ visibleColumns[i] ];
	
			if ( column.sWidth !== null ) {
				column.sWidth = _fnConvertToWidth( column.sWidthOrig, tableContainer );
	
				userInputs = true;
			}
		}
	
		/* If the number of columns in the DOM equals the number that we have to
		 * process in DataTables, then we can use the offsets that are created by
		 * the web- browser. No custom sizes can be set in order for this to happen,
		 * nor scrolling used
		 */
		if ( ie67 || ! userInputs && ! scrollX && ! scrollY &&
		     columnCount == _fnVisbleColumns( oSettings ) &&
		     columnCount == headerCells.length
		) {
			for ( i=0 ; i<columnCount ; i++ ) {
				var colIdx = _fnVisibleToColumnIndex( oSettings, i );
	
				if ( colIdx !== null ) {
					columns[ colIdx ].sWidth = _fnStringToCss( headerCells.eq(i).width() );
				}
			}
		}
		else
		{
			// Otherwise construct a single row, worst case, table with the widest
			// node in the data, assign any user defined widths, then insert it into
			// the DOM and allow the browser to do all the hard work of calculating
			// table widths
			var tmpTable = $(table).clone() // don't use cloneNode - IE8 will remove events on the main table
				.css( 'visibility', 'hidden' )
				.removeAttr( 'id' );
	
			// Clean up the table body
			tmpTable.find('tbody tr').remove();
			var tr = $('<tr/>').appendTo( tmpTable.find('tbody') );
	
			// Clone the table header and footer - we can't use the header / footer
			// from the cloned table, since if scrolling is active, the table's
			// real header and footer are contained in different table tags
			tmpTable.find('thead, tfoot').remove();
			tmpTable
				.append( $(oSettings.nTHead).clone() )
				.append( $(oSettings.nTFoot).clone() );
	
			// Remove any assigned widths from the footer (from scrolling)
			tmpTable.find('tfoot th, tfoot td').css('width', '');
	
			// Apply custom sizing to the cloned header
			headerCells = _fnGetUniqueThs( oSettings, tmpTable.find('thead')[0] );
	
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				column = columns[ visibleColumns[i] ];
	
				headerCells[i].style.width = column.sWidthOrig !== null && column.sWidthOrig !== '' ?
					_fnStringToCss( column.sWidthOrig ) :
					'';
	
				// For scrollX we need to force the column width otherwise the
				// browser will collapse it. If this width is smaller than the
				// width the column requires, then it will have no effect
				if ( column.sWidthOrig && scrollX ) {
					$( headerCells[i] ).append( $('<div/>').css( {
						width: column.sWidthOrig,
						margin: 0,
						padding: 0,
						border: 0,
						height: 1
					} ) );
				}
			}
	
			// Find the widest cell for each column and put it into the table
			if ( oSettings.aoData.length ) {
				for ( i=0 ; i<visibleColumns.length ; i++ ) {
					columnIdx = visibleColumns[i];
					column = columns[ columnIdx ];
	
					$( _fnGetWidestNode( oSettings, columnIdx ) )
						.clone( false )
						.append( column.sContentPadding )
						.appendTo( tr );
				}
			}
	
			// Tidy the temporary table - remove name attributes so there aren't
			// duplicated in the dom (radio elements for example)
			$('[name]', tmpTable).removeAttr('name');
	
			// Table has been built, attach to the document so we can work with it.
			// A holding element is used, positioned at the top of the container
			// with minimal height, so it has no effect on if the container scrolls
			// or not. Otherwise it might trigger scrolling when it actually isn't
			// needed
			var holder = $('<div/>').css( scrollX || scrollY ?
					{
						position: 'absolute',
						top: 0,
						left: 0,
						height: 1,
						right: 0,
						overflow: 'hidden'
					} :
					{}
				)
				.append( tmpTable )
				.appendTo( tableContainer );
	
			// When scrolling (X or Y) we want to set the width of the table as 
			// appropriate. However, when not scrolling leave the table width as it
			// is. This results in slightly different, but I think correct behaviour
			if ( scrollX && scrollXInner ) {
				tmpTable.width( scrollXInner );
			}
			else if ( scrollX ) {
				tmpTable.css( 'width', 'auto' );
				tmpTable.removeAttr('width');
	
				// If there is no width attribute or style, then allow the table to
				// collapse
				if ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {
					tmpTable.width( tableContainer.clientWidth );
				}
			}
			else if ( scrollY ) {
				tmpTable.width( tableContainer.clientWidth );
			}
			else if ( tableWidthAttr ) {
				tmpTable.width( tableWidthAttr );
			}
	
			// Get the width of each column in the constructed table - we need to
			// know the inner width (so it can be assigned to the other table's
			// cells) and the outer width so we can calculate the full width of the
			// table. This is safe since DataTables requires a unique cell for each
			// column, but if ever a header can span multiple columns, this will
			// need to be modified.
			var total = 0;
			for ( i=0 ; i<visibleColumns.length ; i++ ) {
				var cell = $(headerCells[i]);
				var border = cell.outerWidth() - cell.width();
	
				// Use getBounding... where possible (not IE8-) because it can give
				// sub-pixel accuracy, which we then want to round up!
				var bounding = browser.bBounding ?
					Math.ceil( headerCells[i].getBoundingClientRect().width ) :
					cell.outerWidth();
	
				// Total is tracked to remove any sub-pixel errors as the outerWidth
				// of the table might not equal the total given here (IE!).
				total += bounding;
	
				// Width for each column to use
				columns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding - border );
			}
	
			table.style.width = _fnStringToCss( total );
	
			// Finished with the table - ditch it
			holder.remove();
		}
	
		// If there is a width attr, we want to attach an event listener which
		// allows the table sizing to automatically adjust when the window is
		// resized. Use the width attr rather than CSS, since we can't know if the
		// CSS is a relative value or absolute - DOM read is always px.
		if ( tableWidthAttr ) {
			table.style.width = _fnStringToCss( tableWidthAttr );
		}
	
		if ( (tableWidthAttr || scrollX) && ! oSettings._reszEvt ) {
			var bindResize = function () {
				$(window).on('resize.DT-'+oSettings.sInstance, _fnThrottle( function () {
					_fnAdjustColumnSizing( oSettings );
				} ) );
			};
	
			// IE6/7 will crash if we bind a resize event handler on page load.
			// To be removed in 1.11 which drops IE6/7 support
			if ( ie67 ) {
				setTimeout( bindResize, 1000 );
			}
			else {
				bindResize();
			}
	
			oSettings._reszEvt = true;
		}
	}
	
	
	/**
	 * Throttle the calls to a function. Arguments and context are maintained for
	 * the throttled function
	 *  @param {function} fn Function to be called
	 *  @param {int} [freq=200] call frequency in mS
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#oApi
	 */
	var _fnThrottle = DataTable.util.throttle;
	
	
	/**
	 * Convert a CSS unit width to pixels (e.g. 2em)
	 *  @param {string} width width to be converted
	 *  @param {node} parent parent to get the with for (required for relative widths) - optional
	 *  @returns {int} width in pixels
	 *  @memberof DataTable#oApi
	 */
	function _fnConvertToWidth ( width, parent )
	{
		if ( ! width ) {
			return 0;
		}
	
		var n = $('<div/>')
			.css( 'width', _fnStringToCss( width ) )
			.appendTo( parent || document.body );
	
		var val = n[0].offsetWidth;
		n.remove();
	
		return val;
	}
	
	
	/**
	 * Get the widest node
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {node} widest table node
	 *  @memberof DataTable#oApi
	 */
	function _fnGetWidestNode( settings, colIdx )
	{
		var idx = _fnGetMaxLenString( settings, colIdx );
		if ( idx < 0 ) {
			return null;
		}
	
		var data = settings.aoData[ idx ];
		return ! data.nTr ? // Might not have been created when deferred rendering
			$('<td/>').html( _fnGetCellData( settings, idx, colIdx, 'display' ) )[0] :
			data.anCells[ colIdx ];
	}
	
	
	/**
	 * Get the maximum strlen for each data column
	 *  @param {object} settings dataTables settings object
	 *  @param {int} colIdx column of interest
	 *  @returns {string} max string length for each column
	 *  @memberof DataTable#oApi
	 */
	function _fnGetMaxLenString( settings, colIdx )
	{
		var s, max=-1, maxIdx = -1;
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			s = _fnGetCellData( settings, i, colIdx, 'display' )+'';
			s = s.replace( __re_html_remove, '' );
			s = s.replace( /&nbsp;/g, ' ' );
	
			if ( s.length > max ) {
				max = s.length;
				maxIdx = i;
			}
		}
	
		return maxIdx;
	}
	
	
	/**
	 * Append a CSS unit (only if required) to a string
	 *  @param {string} value to css-ify
	 *  @returns {string} value with css unit
	 *  @memberof DataTable#oApi
	 */
	function _fnStringToCss( s )
	{
		if ( s === null ) {
			return '0px';
		}
	
		if ( typeof s == 'number' ) {
			return s < 0 ?
				'0px' :
				s+'px';
		}
	
		// Check it has a unit character already
		return s.match(/\\d$/) ?
			s+'px' :
			s;
	}
	
	
	
	function _fnSortFlatten ( settings )
	{
		var
			i, iLen, k, kLen,
			aSort = [],
			aiOrig = [],
			aoColumns = settings.aoColumns,
			aDataSort, iCol, sType, srcCol,
			fixed = settings.aaSortingFixed,
			fixedObj = $.isPlainObject( fixed ),
			nestedSort = [],
			add = function ( a ) {
				if ( a.length && ! Array.isArray( a[0] ) ) {
					// 1D array
					nestedSort.push( a );
				}
				else {
					// 2D array
					$.merge( nestedSort, a );
				}
			};
	
		// Build the sort array, with pre-fix and post-fix options if they have been
		// specified
		if ( Array.isArray( fixed ) ) {
			add( fixed );
		}
	
		if ( fixedObj && fixed.pre ) {
			add( fixed.pre );
		}
	
		add( settings.aaSorting );
	
		if (fixedObj && fixed.post ) {
			add( fixed.post );
		}
	
		for ( i=0 ; i<nestedSort.length ; i++ )
		{
			srcCol = nestedSort[i][0];
			aDataSort = aoColumns[ srcCol ].aDataSort;
	
			for ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )
			{
				iCol = aDataSort[k];
				sType = aoColumns[ iCol ].sType || 'string';
	
				if ( nestedSort[i]._idx === undefined ) {
					nestedSort[i]._idx = $.inArray( nestedSort[i][1], aoColumns[iCol].asSorting );
				}
	
				aSort.push( {
					src:       srcCol,
					col:       iCol,
					dir:       nestedSort[i][1],
					index:     nestedSort[i]._idx,
					type:      sType,
					formatter: DataTable.ext.type.order[ sType+"-pre" ]
				} );
			}
		}
	
		return aSort;
	}
	
	/**
	 * Change the order of the table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 *  @todo This really needs split up!
	 */
	function _fnSort ( oSettings )
	{
		var
			i, ien, iLen, j, jLen, k, kLen,
			sDataType, nTh,
			aiOrig = [],
			oExtSort = DataTable.ext.type.order,
			aoData = oSettings.aoData,
			aoColumns = oSettings.aoColumns,
			aDataSort, data, iCol, sType, oSort,
			formatters = 0,
			sortCol,
			displayMaster = oSettings.aiDisplayMaster,
			aSort;
	
		// Resolve any column types that are unknown due to addition or invalidation
		// @todo Can this be moved into a 'data-ready' handler which is called when
		//   data is going to be used in the table?
		_fnColumnTypes( oSettings );
	
		aSort = _fnSortFlatten( oSettings );
	
		for ( i=0, ien=aSort.length ; i<ien ; i++ ) {
			sortCol = aSort[i];
	
			// Track if we can use the fast sort algorithm
			if ( sortCol.formatter ) {
				formatters++;
			}
	
			// Load the data needed for the sort, for each cell
			_fnSortData( oSettings, sortCol.col );
		}
	
		/* No sorting required if server-side or no sorting array */
		if ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )
		{
			// Create a value - key array of the current row positions such that we can use their
			// current position during the sort, if values match, in order to perform stable sorting
			for ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {
				aiOrig[ displayMaster[i] ] = i;
			}
	
			/* Do the sort - here we want multi-column sorting based on a given data source (column)
			 * and sorting function (from oSort) in a certain direction. It's reasonably complex to
			 * follow on it's own, but this is what we want (example two column sorting):
			 *  fnLocalSorting = function(a,b){
			 *    var iTest;
			 *    iTest = oSort['string-asc']('data11', 'data12');
			 *      if (iTest !== 0)
			 *        return iTest;
			 *    iTest = oSort['numeric-desc']('data21', 'data22');
			 *    if (iTest !== 0)
			 *      return iTest;
			 *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );
			 *  }
			 * Basically we have a test for each sorting column, if the data in that column is equal,
			 * test the next column. If all columns match, then we use a numeric sort on the row
			 * positions in the original data array to provide a stable sort.
			 *
			 * Note - I know it seems excessive to have two sorting methods, but the first is around
			 * 15% faster, so the second is only maintained for backwards compatibility with sorting
			 * methods which do not have a pre-sort formatting function.
			 */
			if ( formatters === aSort.length ) {
				// All sort types have formatting functions
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, test, sort,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						test = x<y ? -1 : x>y ? 1 : 0;
						if ( test !== 0 ) {
							return sort.dir === 'asc' ? test : -test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
			else {
				// Depreciated - remove in 1.11 (providing a plug-in option)
				// Not all sort types have formatting methods, so we have to call their sorting
				// methods.
				displayMaster.sort( function ( a, b ) {
					var
						x, y, k, l, test, sort, fn,
						len=aSort.length,
						dataA = aoData[a]._aSortData,
						dataB = aoData[b]._aSortData;
	
					for ( k=0 ; k<len ; k++ ) {
						sort = aSort[k];
	
						x = dataA[ sort.col ];
						y = dataB[ sort.col ];
	
						fn = oExtSort[ sort.type+"-"+sort.dir ] || oExtSort[ "string-"+sort.dir ];
						test = fn( x, y );
						if ( test !== 0 ) {
							return test;
						}
					}
	
					x = aiOrig[a];
					y = aiOrig[b];
					return x<y ? -1 : x>y ? 1 : 0;
				} );
			}
		}
	
		/* Tell the draw function that we have sorted the data */
		oSettings.bSorted = true;
	}
	
	
	function _fnSortAria ( settings )
	{
		var label;
		var nextSort;
		var columns = settings.aoColumns;
		var aSort = _fnSortFlatten( settings );
		var oAria = settings.oLanguage.oAria;
	
		// ARIA attributes - need to loop all columns, to update all (removing old
		// attributes as needed)
		for ( var i=0, iLen=columns.length ; i<iLen ; i++ )
		{
			var col = columns[i];
			var asSorting = col.asSorting;
			var sTitle = col.ariaTitle || col.sTitle.replace( /<.*?>/g, "" );
			var th = col.nTh;
	
			// IE7 is throwing an error when setting these properties with jQuery's
			// attr() and removeAttr() methods...
			th.removeAttribute('aria-sort');
	
			/* In ARIA only the first sorting column can be marked as sorting - no multi-sort option */
			if ( col.bSortable ) {
				if ( aSort.length > 0 && aSort[0].col == i ) {
					th.setAttribute('aria-sort', aSort[0].dir=="asc" ? "ascending" : "descending" );
					nextSort = asSorting[ aSort[0].index+1 ] || asSorting[0];
				}
				else {
					nextSort = asSorting[0];
				}
	
				label = sTitle + ( nextSort === "asc" ?
					oAria.sSortAscending :
					oAria.sSortDescending
				);
			}
			else {
				label = sTitle;
			}
	
			th.setAttribute('aria-label', label);
		}
	}
	
	
	/**
	 * Function to run on user sort request
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {boolean} [append=false] Append the requested sort to the existing
	 *    sort if true (i.e. multi-column sort)
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortListener ( settings, colIdx, append, callback )
	{
		var col = settings.aoColumns[ colIdx ];
		var sorting = settings.aaSorting;
		var asSorting = col.asSorting;
		var nextSortIdx;
		var next = function ( a, overflow ) {
			var idx = a._idx;
			if ( idx === undefined ) {
				idx = $.inArray( a[1], asSorting );
			}
	
			return idx+1 < asSorting.length ?
				idx+1 :
				overflow ?
					null :
					0;
		};
	
		// Convert to 2D array if needed
		if ( typeof sorting[0] === 'number' ) {
			sorting = settings.aaSorting = [ sorting ];
		}
	
		// If appending the sort then we are multi-column sorting
		if ( append && settings.oFeatures.bSortMulti ) {
			// Are we already doing some kind of sort on this column?
			var sortIdx = $.inArray( colIdx, _pluck(sorting, '0') );
	
			if ( sortIdx !== -1 ) {
				// Yes, modify the sort
				nextSortIdx = next( sorting[sortIdx], true );
	
				if ( nextSortIdx === null && sorting.length === 1 ) {
					nextSortIdx = 0; // can't remove sorting completely
				}
	
				if ( nextSortIdx === null ) {
					sorting.splice( sortIdx, 1 );
				}
				else {
					sorting[sortIdx][1] = asSorting[ nextSortIdx ];
					sorting[sortIdx]._idx = nextSortIdx;
				}
			}
			else {
				// No sort on this column yet
				sorting.push( [ colIdx, asSorting[0], 0 ] );
				sorting[sorting.length-1]._idx = 0;
			}
		}
		else if ( sorting.length && sorting[0][0] == colIdx ) {
			// Single column - already sorting on this column, modify the sort
			nextSortIdx = next( sorting[0] );
	
			sorting.length = 1;
			sorting[0][1] = asSorting[ nextSortIdx ];
			sorting[0]._idx = nextSortIdx;
		}
		else {
			// Single column - sort only on this column
			sorting.length = 0;
			sorting.push( [ colIdx, asSorting[0] ] );
			sorting[0]._idx = 0;
		}
	
		// Run the sort by calling a full redraw
		_fnReDraw( settings );
	
		// callback used for async user interaction
		if ( typeof callback == 'function' ) {
			callback( settings );
		}
	}
	
	
	/**
	 * Attach a sort handler (click) to a node
	 *  @param {object} settings dataTables settings object
	 *  @param {node} attachTo node to attach the handler to
	 *  @param {int} colIdx column sorting index
	 *  @param {function} [callback] callback function
	 *  @memberof DataTable#oApi
	 */
	function _fnSortAttachListener ( settings, attachTo, colIdx, callback )
	{
		var col = settings.aoColumns[ colIdx ];
	
		_fnBindAction( attachTo, {}, function (e) {
			/* If the column is not sortable - don't to anything */
			if ( col.bSortable === false ) {
				return;
			}
	
			// If processing is enabled use a timeout to allow the processing
			// display to be shown - otherwise to it synchronously
			if ( settings.oFeatures.bProcessing ) {
				_fnProcessingDisplay( settings, true );
	
				setTimeout( function() {
					_fnSortListener( settings, colIdx, e.shiftKey, callback );
	
					// In server-side processing, the draw callback will remove the
					// processing display
					if ( _fnDataSource( settings ) !== 'ssp' ) {
						_fnProcessingDisplay( settings, false );
					}
				}, 0 );
			}
			else {
				_fnSortListener( settings, colIdx, e.shiftKey, callback );
			}
		} );
	}
	
	
	/**
	 * Set the sorting classes on table's body, Note: it is safe to call this function
	 * when bSort and bSortClasses are false
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSortingClasses( settings )
	{
		var oldSort = settings.aLastSort;
		var sortClass = settings.oClasses.sSortColumn;
		var sort = _fnSortFlatten( settings );
		var features = settings.oFeatures;
		var i, ien, colIdx;
	
		if ( features.bSort && features.bSortClasses ) {
			// Remove old sorting classes
			for ( i=0, ien=oldSort.length ; i<ien ; i++ ) {
				colIdx = oldSort[i].src;
	
				// Remove column sorting
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.removeClass( sortClass + (i<2 ? i+1 : 3) );
			}
	
			// Add new column sorting
			for ( i=0, ien=sort.length ; i<ien ; i++ ) {
				colIdx = sort[i].src;
	
				$( _pluck( settings.aoData, 'anCells', colIdx ) )
					.addClass( sortClass + (i<2 ? i+1 : 3) );
			}
		}
	
		settings.aLastSort = sort;
	}
	
	
	// Get the data to sort a column, be it from cache, fresh (populating the
	// cache), or from a sort formatter
	function _fnSortData( settings, idx )
	{
		// Custom sorting function - provided by the sort data type
		var column = settings.aoColumns[ idx ];
		var customSort = DataTable.ext.order[ column.sSortDataType ];
		var customData;
	
		if ( customSort ) {
			customData = customSort.call( settings.oInstance, settings, idx,
				_fnColumnIndexToVisible( settings, idx )
			);
		}
	
		// Use / populate cache
		var row, cellData;
		var formatter = DataTable.ext.type.order[ column.sType+"-pre" ];
	
		for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
			row = settings.aoData[i];
	
			if ( ! row._aSortData ) {
				row._aSortData = [];
			}
	
			if ( ! row._aSortData[idx] || customSort ) {
				cellData = customSort ?
					customData[i] : // If there was a custom sort function, use data from there
					_fnGetCellData( settings, i, idx, 'sort' );
	
				row._aSortData[ idx ] = formatter ?
					formatter( cellData ) :
					cellData;
			}
		}
	}
	
	
	
	/**
	 * Save the state of a table
	 *  @param {object} oSettings dataTables settings object
	 *  @memberof DataTable#oApi
	 */
	function _fnSaveState ( settings )
	{
		if (settings._bLoadingState) {
			return;
		}
	
		/* Store the interesting variables */
		var state = {
			time:    +new Date(),
			start:   settings._iDisplayStart,
			length:  settings._iDisplayLength,
			order:   $.extend( true, [], settings.aaSorting ),
			search:  _fnSearchToCamel( settings.oPreviousSearch ),
			columns: $.map( settings.aoColumns, function ( col, i ) {
				return {
					visible: col.bVisible,
					search: _fnSearchToCamel( settings.aoPreSearchCols[i] )
				};
			} )
		};
	
		settings.oSavedState = state;
		_fnCallbackFire( settings, "aoStateSaveParams", 'stateSaveParams', [settings, state] );
		
		if ( settings.oFeatures.bStateSave && !settings.bDestroying )
		{
			settings.fnStateSaveCallback.call( settings.oInstance, settings, state );
		}	
	}
	
	
	/**
	 * Attempt to load a saved table state
	 *  @param {object} oSettings dataTables settings object
	 *  @param {object} oInit DataTables init object so we can override settings
	 *  @param {function} callback Callback to execute when the state has been loaded
	 *  @memberof DataTable#oApi
	 */
	function _fnLoadState ( settings, oInit, callback )
	{
		if ( ! settings.oFeatures.bStateSave ) {
			callback();
			return;
		}
	
		var loaded = function(state) {
			_fnImplementState(settings, state, callback);
		}
	
		var state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );
	
		if ( state !== undefined ) {
			_fnImplementState( settings, state, callback );
		}
		// otherwise, wait for the loaded callback to be executed
	
		return true;
	}
	
	function _fnImplementState ( settings, s, callback) {
		var i, ien;
		var columns = settings.aoColumns;
		settings._bLoadingState = true;
	
		// When StateRestore was introduced the state could now be implemented at any time
		// Not just initialisation. To do this an api instance is required in some places
		var api = settings._bInitComplete ? new DataTable.Api(settings) : null;
	
		if ( ! s || ! s.time ) {
			settings._bLoadingState = false;
			callback();
			return;
		}
	
		// Allow custom and plug-in manipulation functions to alter the saved data set and
		// cancelling of loading by returning false
		var abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );
		if ( $.inArray( false, abStateLoad ) !== -1 ) {
			settings._bLoadingState = false;
			callback();
			return;
		}
	
		// Reject old data
		var duration = settings.iStateDuration;
		if ( duration > 0 && s.time < +new Date() - (duration*1000) ) {
			settings._bLoadingState = false;
			callback();
			return;
		}
	
		// Number of columns have changed - all bets are off, no restore of settings
		if ( s.columns && columns.length !== s.columns.length ) {
			settings._bLoadingState = false;
			callback();
			return;
		}
	
		// Store the saved state so it might be accessed at any time
		settings.oLoadedState = $.extend( true, {}, s );
	
		// Restore key features - todo - for 1.11 this needs to be done by
		// subscribed events
		if ( s.start !== undefined ) {
			settings._iDisplayStart    = s.start;
			if(api === null) {
				settings.iInitDisplayStart = s.start;
			}
		}
		if ( s.length !== undefined ) {
			settings._iDisplayLength   = s.length;
		}
	
		// Order
		if ( s.order !== undefined ) {
			settings.aaSorting = [];
			$.each( s.order, function ( i, col ) {
				settings.aaSorting.push( col[0] >= columns.length ?
					[ 0, col[1] ] :
					col
				);
			} );
		}
	
		// Search
		if ( s.search !== undefined ) {
			$.extend( settings.oPreviousSearch, _fnSearchToHung( s.search ) );
		}
	
		// Columns
		if ( s.columns ) {
			for ( i=0, ien=s.columns.length ; i<ien ; i++ ) {
				var col = s.columns[i];
	
				// Visibility
				if ( col.visible !== undefined ) {
					// If the api is defined, the table has been initialised so we need to use it rather than internal settings
					if (api) {
						// Don't redraw the columns on every iteration of this loop, we will do this at the end instead
						api.column(i).visible(col.visible, false);
					}
					else {
						columns[i].bVisible = col.visible;
					}
				}
	
				// Search
				if ( col.search !== undefined ) {
					$.extend( settings.aoPreSearchCols[i], _fnSearchToHung( col.search ) );
				}
			}
			
			// If the api is defined then we need to adjust the columns once the visibility has been changed
			if (api) {
				api.columns.adjust();
			}
		}
	
		settings._bLoadingState = false;
		_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );
		callback();
	};
	
	
	/**
	 * Return the settings object for a particular table
	 *  @param {node} table table we are using as a dataTable
	 *  @returns {object} Settings object - or null if not found
	 *  @memberof DataTable#oApi
	 */
	function _fnSettingsFromNode ( table )
	{
		var settings = DataTable.settings;
		var idx = $.inArray( table, _pluck( settings, 'nTable' ) );
	
		return idx !== -1 ?
			settings[ idx ] :
			null;
	}
	
	
	/**
	 * Log an error message
	 *  @param {object} settings dataTables settings object
	 *  @param {int} level log error messages, or display them to the user
	 *  @param {string} msg error message
	 *  @param {int} tn Technical note id to get more information about the error.
	 *  @memberof DataTable#oApi
	 */
	function _fnLog( settings, level, msg, tn )
	{
		msg = 'DataTables warning: '+
			(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;
	
		if ( tn ) {
			msg += '. For more information about this error, please see '+
			'http://datatables.net/tn/'+tn;
		}
	
		if ( ! level  ) {
			// Backwards compatibility pre 1.10
			var ext = DataTable.ext;
			var type = ext.sErrMode || ext.errMode;
	
			if ( settings ) {
				_fnCallbackFire( settings, null, 'error', [ settings, tn, msg ] );
			}
	
			if ( type == 'alert' ) {
				alert( msg );
			}
			else if ( type == 'throw' ) {
				throw new Error(msg);
			}
			else if ( typeof type == 'function' ) {
				type( settings, tn, msg );
			}
		}
		else if ( window.console && console.log ) {
			console.log( msg );
		}
	}
	
	
	/**
	 * See if a property is defined on one object, if so assign it to the other object
	 *  @param {object} ret target object
	 *  @param {object} src source object
	 *  @param {string} name property
	 *  @param {string} [mappedName] name to map too - optional, name used if not given
	 *  @memberof DataTable#oApi
	 */
	function _fnMap( ret, src, name, mappedName )
	{
		if ( Array.isArray( name ) ) {
			$.each( name, function (i, val) {
				if ( Array.isArray( val ) ) {
					_fnMap( ret, src, val[0], val[1] );
				}
				else {
					_fnMap( ret, src, val );
				}
			} );
	
			return;
		}
	
		if ( mappedName === undefined ) {
			mappedName = name;
		}
	
		if ( src[name] !== undefined ) {
			ret[mappedName] = src[name];
		}
	}
	
	
	/**
	 * Extend objects - very similar to jQuery.extend, but deep copy objects, and
	 * shallow copy arrays. The reason we need to do this, is that we don't want to
	 * deep copy array init values (such as aaSorting) since the dev wouldn't be
	 * able to override them, but we do want to deep copy arrays.
	 *  @param {object} out Object to extend
	 *  @param {object} extender Object from which the properties will be applied to
	 *      out
	 *  @param {boolean} breakRefs If true, then arrays will be sliced to take an
	 *      independent copy with the exception of the \`data\` or \`aaData\` parameters
	 *      if they are present. This is so you can pass in a collection to
	 *      DataTables and have that used as your data source without breaking the
	 *      references
	 *  @returns {object} out Reference, just for convenience - out === the return.
	 *  @memberof DataTable#oApi
	 *  @todo This doesn't take account of arrays inside the deep copied objects.
	 */
	function _fnExtend( out, extender, breakRefs )
	{
		var val;
	
		for ( var prop in extender ) {
			if ( extender.hasOwnProperty(prop) ) {
				val = extender[prop];
	
				if ( $.isPlainObject( val ) ) {
					if ( ! $.isPlainObject( out[prop] ) ) {
						out[prop] = {};
					}
					$.extend( true, out[prop], val );
				}
				else if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {
					out[prop] = val.slice();
				}
				else {
					out[prop] = val;
				}
			}
		}
	
		return out;
	}
	
	
	/**
	 * Bind an event handers to allow a click or return key to activate the callback.
	 * This is good for accessibility since a return on the keyboard will have the
	 * same effect as a click, if the element has focus.
	 *  @param {element} n Element to bind the action to
	 *  @param {object} oData Data object to pass to the triggered function
	 *  @param {function} fn Callback function for when the event is triggered
	 *  @memberof DataTable#oApi
	 */
	function _fnBindAction( n, oData, fn )
	{
		$(n)
			.on( 'click.DT', oData, function (e) {
					$(n).trigger('blur'); // Remove focus outline for mouse users
					fn(e);
				} )
			.on( 'keypress.DT', oData, function (e){
					if ( e.which === 13 ) {
						e.preventDefault();
						fn(e);
					}
				} )
			.on( 'selectstart.DT', function () {
					/* Take the brutal approach to cancelling text selection */
					return false;
				} );
	}
	
	
	/**
	 * Register a callback function. Easily allows a callback function to be added to
	 * an array store of callback functions that can then all be called together.
	 *  @param {object} oSettings dataTables settings object
	 *  @param {string} sStore Name of the array storage for the callbacks in oSettings
	 *  @param {function} fn Function to be called back
	 *  @param {string} sName Identifying name for the callback (i.e. a label)
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackReg( oSettings, sStore, fn, sName )
	{
		if ( fn )
		{
			oSettings[sStore].push( {
				"fn": fn,
				"sName": sName
			} );
		}
	}
	
	
	/**
	 * Fire callback functions and trigger events. Note that the loop over the
	 * callback array store is done backwards! Further note that you do not want to
	 * fire off triggers in time sensitive applications (for example cell creation)
	 * as its slow.
	 *  @param {object} settings dataTables settings object
	 *  @param {string} callbackArr Name of the array storage for the callbacks in
	 *      oSettings
	 *  @param {string} eventName Name of the jQuery custom event to trigger. If
	 *      null no trigger is fired
	 *  @param {array} args Array of arguments to pass to the callback function /
	 *      trigger
	 *  @memberof DataTable#oApi
	 */
	function _fnCallbackFire( settings, callbackArr, eventName, args )
	{
		var ret = [];
	
		if ( callbackArr ) {
			ret = $.map( settings[callbackArr].slice().reverse(), function (val, i) {
				return val.fn.apply( settings.oInstance, args );
			} );
		}
	
		if ( eventName !== null ) {
			var e = $.Event( eventName+'.dt' );
	
			$(settings.nTable).trigger( e, args );
	
			ret.push( e.result );
		}
	
		return ret;
	}
	
	
	function _fnLengthOverflow ( settings )
	{
		var
			start = settings._iDisplayStart,
			end = settings.fnDisplayEnd(),
			len = settings._iDisplayLength;
	
		/* If we have space to show extra rows (backing up from the end point - then do so */
		if ( start >= end )
		{
			start = end - len;
		}
	
		// Keep the start record on the current page
		start -= (start % len);
	
		if ( len === -1 || start < 0 )
		{
			start = 0;
		}
	
		settings._iDisplayStart = start;
	}
	
	
	function _fnRenderer( settings, type )
	{
		var renderer = settings.renderer;
		var host = DataTable.ext.renderer[type];
	
		if ( $.isPlainObject( renderer ) && renderer[type] ) {
			// Specific renderer for this type. If available use it, otherwise use
			// the default.
			return host[renderer[type]] || host._;
		}
		else if ( typeof renderer === 'string' ) {
			// Common renderer - if there is one available for this type use it,
			// otherwise use the default
			return host[renderer] || host._;
		}
	
		// Use the default
		return host._;
	}
	
	
	/**
	 * Detect the data source being used for the table. Used to simplify the code
	 * a little (ajax) and to make it compress a little smaller.
	 *
	 *  @param {object} settings dataTables settings object
	 *  @returns {string} Data source
	 *  @memberof DataTable#oApi
	 */
	function _fnDataSource ( settings )
	{
		if ( settings.oFeatures.bServerSide ) {
			return 'ssp';
		}
		else if ( settings.ajax || settings.sAjaxSource ) {
			return 'ajax';
		}
		return 'dom';
	}
	

	
	
	/**
	 * Computed structure of the DataTables API, defined by the options passed to
	 * \`DataTable.Api.register()\` when building the API.
	 *
	 * The structure is built in order to speed creation and extension of the Api
	 * objects since the extensions are effectively pre-parsed.
	 *
	 * The array is an array of objects with the following structure, where this
	 * base array represents the Api prototype base:
	 *
	 *     [
	 *       {
	 *         name:      'data'                -- string   - Property name
	 *         val:       function () {},       -- function - Api method (or undefined if just an object
	 *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	 *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	 *       },
	 *       {
	 *         name:     'row'
	 *         val:       {},
	 *         methodExt: [ ... ],
	 *         propExt:   [
	 *           {
	 *             name:      'data'
	 *             val:       function () {},
	 *             methodExt: [ ... ],
	 *             propExt:   [ ... ]
	 *           },
	 *           ...
	 *         ]
	 *       }
	 *     ]
	 *
	 * @type {Array}
	 * @ignore
	 */
	var __apiStruct = [];
	
	
	/**
	 * \`Array.prototype\` reference.
	 *
	 * @type object
	 * @ignore
	 */
	var __arrayProto = Array.prototype;
	
	
	/**
	 * Abstraction for \`context\` parameter of the \`Api\` constructor to allow it to
	 * take several different forms for ease of use.
	 *
	 * Each of the input parameter types will be converted to a DataTables settings
	 * object where possible.
	 *
	 * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one
	 *   of:
	 *
	 *   * \`string\` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * \`node\` - \`TABLE\` node which has already been formed into a DataTable.
	 *   * \`jQuery\` - A jQuery object of \`TABLE\` nodes.
	 *   * \`object\` - DataTables settings object
	 *   * \`DataTables.Api\` - API instance
	 * @return {array|null} Matching DataTables settings objects. \`null\` or
	 *   \`undefined\` is returned if no matching DataTable is found.
	 * @ignore
	 */
	var _toSettings = function ( mixed )
	{
		var idx, jq;
		var settings = DataTable.settings;
		var tables = $.map( settings, function (el, i) {
			return el.nTable;
		} );
	
		if ( ! mixed ) {
			return [];
		}
		else if ( mixed.nTable && mixed.oApi ) {
			// DataTables settings object
			return [ mixed ];
		}
		else if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {
			// Table node
			idx = $.inArray( mixed, tables );
			return idx !== -1 ? [ settings[idx] ] : null;
		}
		else if ( mixed && typeof mixed.settings === 'function' ) {
			return mixed.settings().toArray();
		}
		else if ( typeof mixed === 'string' ) {
			// jQuery selector
			jq = $(mixed);
		}
		else if ( mixed instanceof $ ) {
			// jQuery object (also DataTables instance)
			jq = mixed;
		}
	
		if ( jq ) {
			return jq.map( function(i) {
				idx = $.inArray( this, tables );
				return idx !== -1 ? settings[idx] : null;
			} ).toArray();
		}
	};
	
	
	/**
	 * DataTables API class - used to control and interface with  one or more
	 * DataTables enhanced tables.
	 *
	 * The API class is heavily based on jQuery, presenting a chainable interface
	 * that you can use to interact with tables. Each instance of the API class has
	 * a "context" - i.e. the tables that it will operate on. This could be a single
	 * table, all tables on a page or a sub-set thereof.
	 *
	 * Additionally the API is designed to allow you to easily work with the data in
	 * the tables, retrieving and manipulating it as required. This is done by
	 * presenting the API class as an array like interface. The contents of the
	 * array depend upon the actions requested by each method (for example
	 * \`rows().nodes()\` will return an array of nodes, while \`rows().data()\` will
	 * return an array of objects or arrays depending upon your table's
	 * configuration). The API object has a number of array like methods (\`push\`,
	 * \`pop\`, \`reverse\` etc) as well as additional helper methods (\`each\`, \`pluck\`,
	 * \`unique\` etc) to assist your working with the data held in a table.
	 *
	 * Most methods (those which return an Api instance) are chainable, which means
	 * the return from a method call also has all of the methods available that the
	 * top level object had. For example, these two calls are equivalent:
	 *
	 *     // Not chained
	 *     api.row.add( {...} );
	 *     api.draw();
	 *
	 *     // Chained
	 *     api.row.add( {...} ).draw();
	 *
	 * @class DataTable.Api
	 * @param {array|object|string|jQuery} context DataTable identifier. This is
	 *   used to define which DataTables enhanced tables this API will operate on.
	 *   Can be one of:
	 *
	 *   * \`string\` - jQuery selector. Any DataTables' matching the given selector
	 *     with be found and used.
	 *   * \`node\` - \`TABLE\` node which has already been formed into a DataTable.
	 *   * \`jQuery\` - A jQuery object of \`TABLE\` nodes.
	 *   * \`object\` - DataTables settings object
	 * @param {array} [data] Data to initialise the Api instance with.
	 *
	 * @example
	 *   // Direct initialisation during DataTables construction
	 *   var api = $('#example').DataTable();
	 *
	 * @example
	 *   // Initialisation using a DataTables jQuery object
	 *   var api = $('#example').dataTable().api();
	 *
	 * @example
	 *   // Initialisation as a constructor
	 *   var api = new $.fn.DataTable.Api( 'table.dataTable' );
	 */
	_Api = function ( context, data )
	{
		if ( ! (this instanceof _Api) ) {
			return new _Api( context, data );
		}
	
		var settings = [];
		var ctxSettings = function ( o ) {
			var a = _toSettings( o );
			if ( a ) {
				settings.push.apply( settings, a );
			}
		};
	
		if ( Array.isArray( context ) ) {
			for ( var i=0, ien=context.length ; i<ien ; i++ ) {
				ctxSettings( context[i] );
			}
		}
		else {
			ctxSettings( context );
		}
	
		// Remove duplicates
		this.context = _unique( settings );
	
		// Initial data
		if ( data ) {
			$.merge( this, data );
		}
	
		// selector
		this.selector = {
			rows: null,
			cols: null,
			opts: null
		};
	
		_Api.extend( this, this, __apiStruct );
	};
	
	DataTable.Api = _Api;
	
	// Don't destroy the existing prototype, just extend it. Required for jQuery 2's
	// isPlainObject.
	$.extend( _Api.prototype, {
		any: function ()
		{
			return this.count() !== 0;
		},
	
	
		concat:  __arrayProto.concat,
	
	
		context: [], // array of table settings objects
	
	
		count: function ()
		{
			return this.flatten().length;
		},
	
	
		each: function ( fn )
		{
			for ( var i=0, ien=this.length ; i<ien; i++ ) {
				fn.call( this, this[i], i, this );
			}
	
			return this;
		},
	
	
		eq: function ( idx )
		{
			var ctx = this.context;
	
			return ctx.length > idx ?
				new _Api( ctx[idx], this[idx] ) :
				null;
		},
	
	
		filter: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.filter ) {
				a = __arrayProto.filter.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					if ( fn.call( this, this[i], i, this ) ) {
						a.push( this[i] );
					}
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		flatten: function ()
		{
			var a = [];
			return new _Api( this.context, a.concat.apply( a, this.toArray() ) );
		},
	
	
		join:    __arrayProto.join,
	
	
		indexOf: __arrayProto.indexOf || function (obj, start)
		{
			for ( var i=(start || 0), ien=this.length ; i<ien ; i++ ) {
				if ( this[i] === obj ) {
					return i;
				}
			}
			return -1;
		},
	
		iterator: function ( flatten, type, fn, alwaysNew ) {
			var
				a = [], ret,
				i, ien, j, jen,
				context = this.context,
				rows, items, item,
				selector = this.selector;
	
			// Argument shifting
			if ( typeof flatten === 'string' ) {
				alwaysNew = fn;
				fn = type;
				type = flatten;
				flatten = false;
			}
	
			for ( i=0, ien=context.length ; i<ien ; i++ ) {
				var apiInst = new _Api( context[i] );
	
				if ( type === 'table' ) {
					ret = fn.call( apiInst, context[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'columns' || type === 'rows' ) {
					// this has same length as context - one entry for each table
					ret = fn.call( apiInst, context[i], this[i], i );
	
					if ( ret !== undefined ) {
						a.push( ret );
					}
				}
				else if ( type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {
					// columns and rows share the same structure.
					// 'this' is an array of column indexes for each context
					items = this[i];
	
					if ( type === 'column-rows' ) {
						rows = _selector_row_indexes( context[i], selector.opts );
					}
	
					for ( j=0, jen=items.length ; j<jen ; j++ ) {
						item = items[j];
	
						if ( type === 'cell' ) {
							ret = fn.call( apiInst, context[i], item.row, item.column, i, j );
						}
						else {
							ret = fn.call( apiInst, context[i], item, i, j, rows );
						}
	
						if ( ret !== undefined ) {
							a.push( ret );
						}
					}
				}
			}
	
			if ( a.length || alwaysNew ) {
				var api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );
				var apiSelector = api.selector;
				apiSelector.rows = selector.rows;
				apiSelector.cols = selector.cols;
				apiSelector.opts = selector.opts;
				return api;
			}
			return this;
		},
	
	
		lastIndexOf: __arrayProto.lastIndexOf || function (obj, start)
		{
			// Bit cheeky...
			return this.indexOf.apply( this.toArray.reverse(), arguments );
		},
	
	
		length:  0,
	
	
		map: function ( fn )
		{
			var a = [];
	
			if ( __arrayProto.map ) {
				a = __arrayProto.map.call( this, fn, this );
			}
			else {
				// Compatibility for browsers without EMCA-252-5 (JS 1.6)
				for ( var i=0, ien=this.length ; i<ien ; i++ ) {
					a.push( fn.call( this, this[i], i ) );
				}
			}
	
			return new _Api( this.context, a );
		},
	
	
		pluck: function ( prop )
		{
			return this.map( function ( el ) {
				return el[ prop ];
			} );
		},
	
		pop:     __arrayProto.pop,
	
	
		push:    __arrayProto.push,
	
	
		// Does not return an API instance
		reduce: __arrayProto.reduce || function ( fn, init )
		{
			return _fnReduce( this, fn, init, 0, this.length, 1 );
		},
	
	
		reduceRight: __arrayProto.reduceRight || function ( fn, init )
		{
			return _fnReduce( this, fn, init, this.length-1, -1, -1 );
		},
	
	
		reverse: __arrayProto.reverse,
	
	
		// Object with rows, columns and opts
		selector: null,
	
	
		shift:   __arrayProto.shift,
	
	
		slice: function () {
			return new _Api( this.context, this );
		},
	
	
		sort:    __arrayProto.sort, // ? name - order?
	
	
		splice:  __arrayProto.splice,
	
	
		toArray: function ()
		{
			return __arrayProto.slice.call( this );
		},
	
	
		to$: function ()
		{
			return $( this );
		},
	
	
		toJQuery: function ()
		{
			return $( this );
		},
	
	
		unique: function ()
		{
			return new _Api( this.context, _unique(this) );
		},
	
	
		unshift: __arrayProto.unshift
	} );
	
	
	_Api.extend = function ( scope, obj, ext )
	{
		// Only extend API instances and static properties of the API
		if ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {
			return;
		}
	
		var
			i, ien,
			struct,
			methodScoping = function ( scope, fn, struc ) {
				return function () {
					var ret = fn.apply( scope, arguments );
	
					// Method extension
					_Api.extend( ret, ret, struc.methodExt );
					return ret;
				};
			};
	
		for ( i=0, ien=ext.length ; i<ien ; i++ ) {
			struct = ext[i];
	
			// Value
			obj[ struct.name ] = struct.type === 'function' ?
				methodScoping( scope, struct.val, struct ) :
				struct.type === 'object' ?
					{} :
					struct.val;
	
			obj[ struct.name ].__dt_wrapper = true;
	
			// Property extension
			_Api.extend( scope, obj[ struct.name ], struct.propExt );
		}
	};
	
	
	// @todo - Is there need for an augment function?
	// _Api.augment = function ( inst, name )
	// {
	// 	// Find src object in the structure from the name
	// 	var parts = name.split('.');
	
	// 	_Api.extend( inst, obj );
	// };
	
	
	//     [
	//       {
	//         name:      'data'                -- string   - Property name
	//         val:       function () {},       -- function - Api method (or undefined if just an object
	//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result
	//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property
	//       },
	//       {
	//         name:     'row'
	//         val:       {},
	//         methodExt: [ ... ],
	//         propExt:   [
	//           {
	//             name:      'data'
	//             val:       function () {},
	//             methodExt: [ ... ],
	//             propExt:   [ ... ]
	//           },
	//           ...
	//         ]
	//       }
	//     ]
	
	_Api.register = _api_register = function ( name, val )
	{
		if ( Array.isArray( name ) ) {
			for ( var j=0, jen=name.length ; j<jen ; j++ ) {
				_Api.register( name[j], val );
			}
			return;
		}
	
		var
			i, ien,
			heir = name.split('.'),
			struct = __apiStruct,
			key, method;
	
		var find = function ( src, name ) {
			for ( var i=0, ien=src.length ; i<ien ; i++ ) {
				if ( src[i].name === name ) {
					return src[i];
				}
			}
			return null;
		};
	
		for ( i=0, ien=heir.length ; i<ien ; i++ ) {
			method = heir[i].indexOf('()') !== -1;
			key = method ?
				heir[i].replace('()', '') :
				heir[i];
	
			var src = find( struct, key );
			if ( ! src ) {
				src = {
					name:      key,
					val:       {},
					methodExt: [],
					propExt:   [],
					type:      'object'
				};
				struct.push( src );
			}
	
			if ( i === ien-1 ) {
				src.val = val;
				src.type = typeof val === 'function' ?
					'function' :
					$.isPlainObject( val ) ?
						'object' :
						'other';
			}
			else {
				struct = method ?
					src.methodExt :
					src.propExt;
			}
		}
	};
	
	_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {
		_Api.register( pluralName, val );
	
		_Api.register( singularName, function () {
			var ret = val.apply( this, arguments );
	
			if ( ret === this ) {
				// Returned item is the API instance that was passed in, return it
				return this;
			}
			else if ( ret instanceof _Api ) {
				// New API instance returned, want the value from the first item
				// in the returned array for the singular result.
				return ret.length ?
					Array.isArray( ret[0] ) ?
						new _Api( ret.context, ret[0] ) : // Array results are 'enhanced'
						ret[0] :
					undefined;
			}
	
			// Non-API return - just fire it back
			return ret;
		} );
	};
	
	
	/**
	 * Selector for HTML tables. Apply the given selector to the give array of
	 * DataTables settings objects.
	 *
	 * @param {string|integer} [selector] jQuery selector string or integer
	 * @param  {array} Array of DataTables settings objects to be filtered
	 * @return {array}
	 * @ignore
	 */
	var __table_selector = function ( selector, a )
	{
		if ( Array.isArray(selector) ) {
			return $.map( selector, function (item) {
				return __table_selector(item, a);
			} );
		}
	
		// Integer is used to pick out a table by index
		if ( typeof selector === 'number' ) {
			return [ a[ selector ] ];
		}
	
		// Perform a jQuery selector on the table nodes
		var nodes = $.map( a, function (el, i) {
			return el.nTable;
		} );
	
		return $(nodes)
			.filter( selector )
			.map( function (i) {
				// Need to translate back from the table node to the settings
				var idx = $.inArray( this, nodes );
				return a[ idx ];
			} )
			.toArray();
	};
	
	
	
	/**
	 * Context selector for the API's context (i.e. the tables the API instance
	 * refers to.
	 *
	 * @name    DataTable.Api#tables
	 * @param {string|integer} [selector] Selector to pick which tables the iterator
	 *   should operate on. If not given, all tables in the current context are
	 *   used. This can be given as a jQuery selector (for example \`':gt(0)'\`) to
	 *   select multiple tables or as an integer to select a single table.
	 * @returns {DataTable.Api} Returns a new API instance if a selector is given.
	 */
	_api_register( 'tables()', function ( selector ) {
		// A new instance is created if there was a selector specified
		return selector !== undefined && selector !== null ?
			new _Api( __table_selector( selector, this.context ) ) :
			this;
	} );
	
	
	_api_register( 'table()', function ( selector ) {
		var tables = this.tables( selector );
		var ctx = tables.context;
	
		// Truncate to the first matched table
		return ctx.length ?
			new _Api( ctx[0] ) :
			tables;
	} );
	
	
	_api_registerPlural( 'tables().nodes()', 'table().node()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTable;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().body()', 'table().body()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTBody;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().header()', 'table().header()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTHead;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().footer()', 'table().footer()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTFoot;
		}, 1 );
	} );
	
	
	_api_registerPlural( 'tables().containers()', 'table().container()' , function () {
		return this.iterator( 'table', function ( ctx ) {
			return ctx.nTableWrapper;
		}, 1 );
	} );
	
	
	
	/**
	 * Redraw the tables in the current context.
	 */
	_api_register( 'draw()', function ( paging ) {
		return this.iterator( 'table', function ( settings ) {
			if ( paging === 'page' ) {
				_fnDraw( settings );
			}
			else {
				if ( typeof paging === 'string' ) {
					paging = paging === 'full-hold' ?
						false :
						true;
				}
	
				_fnReDraw( settings, paging===false );
			}
		} );
	} );
	
	
	
	/**
	 * Get the current page index.
	 *
	 * @return {integer} Current page index (zero based)
	 *//**
	 * Set the current page.
	 *
	 * Note that if you attempt to show a page which does not exist, DataTables will
	 * not throw an error, but rather reset the paging.
	 *
	 * @param {integer|string} action The paging action to take. This can be one of:
	 *  * \`integer\` - The page index to jump to
	 *  * \`string\` - An action to take:
	 *    * \`first\` - Jump to first page.
	 *    * \`next\` - Jump to the next page
	 *    * \`previous\` - Jump to previous page
	 *    * \`last\` - Jump to the last page.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page()', function ( action ) {
		if ( action === undefined ) {
			return this.page.info().page; // not an expensive call
		}
	
		// else, have an action to take on all tables
		return this.iterator( 'table', function ( settings ) {
			_fnPageChange( settings, action );
		} );
	} );
	
	
	/**
	 * Paging information for the first table in the current context.
	 *
	 * If you require paging information for another table, use the \`table()\` method
	 * with a suitable selector.
	 *
	 * @return {object} Object with the following properties set:
	 *  * \`page\` - Current page index (zero based - i.e. the first page is \`0\`)
	 *  * \`pages\` - Total number of pages
	 *  * \`start\` - Display index for the first record shown on the current page
	 *  * \`end\` - Display index for the last record shown on the current page
	 *  * \`length\` - Display length (number of records). Note that generally \`start
	 *    + length = end\`, but this is not always true, for example if there are
	 *    only 2 records to show on the final page, with a length of 10.
	 *  * \`recordsTotal\` - Full data set length
	 *  * \`recordsDisplay\` - Data set length once the current filtering criterion
	 *    are applied.
	 */
	_api_register( 'page.info()', function ( action ) {
		if ( this.context.length === 0 ) {
			return undefined;
		}
	
		var
			settings   = this.context[0],
			start      = settings._iDisplayStart,
			len        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,
			visRecords = settings.fnRecordsDisplay(),
			all        = len === -1;
	
		return {
			"page":           all ? 0 : Math.floor( start / len ),
			"pages":          all ? 1 : Math.ceil( visRecords / len ),
			"start":          start,
			"end":            settings.fnDisplayEnd(),
			"length":         len,
			"recordsTotal":   settings.fnRecordsTotal(),
			"recordsDisplay": visRecords,
			"serverSide":     _fnDataSource( settings ) === 'ssp'
		};
	} );
	
	
	/**
	 * Get the current page length.
	 *
	 * @return {integer} Current page length. Note \`-1\` indicates that all records
	 *   are to be shown.
	 *//**
	 * Set the current page length.
	 *
	 * @param {integer} Page length to set. Use \`-1\` to show all records.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'page.len()', function ( len ) {
		// Note that we can't call this function 'length()' because \`length\`
		// is a Javascript property of functions which defines how many arguments
		// the function expects.
		if ( len === undefined ) {
			return this.context.length !== 0 ?
				this.context[0]._iDisplayLength :
				undefined;
		}
	
		// else, set the page length
		return this.iterator( 'table', function ( settings ) {
			_fnLengthChange( settings, len );
		} );
	} );
	
	
	
	var __reload = function ( settings, holdPosition, callback ) {
		// Use the draw event to trigger a callback
		if ( callback ) {
			var api = new _Api( settings );
	
			api.one( 'draw', function () {
				callback( api.ajax.json() );
			} );
		}
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			_fnReDraw( settings, holdPosition );
		}
		else {
			_fnProcessingDisplay( settings, true );
	
			// Cancel an existing request
			var xhr = settings.jqXHR;
			if ( xhr && xhr.readyState !== 4 ) {
				xhr.abort();
			}
	
			// Trigger xhr
			_fnBuildAjax( settings, [], function( json ) {
				_fnClearTable( settings );
	
				var data = _fnAjaxDataSrc( settings, json );
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					_fnAddData( settings, data[i] );
				}
	
				_fnReDraw( settings, holdPosition );
				_fnProcessingDisplay( settings, false );
			} );
		}
	};
	
	
	/**
	 * Get the JSON response from the last Ajax request that DataTables made to the
	 * server. Note that this returns the JSON from the first table in the current
	 * context.
	 *
	 * @return {object} JSON received from the server.
	 */
	_api_register( 'ajax.json()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].json;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Get the data submitted in the last Ajax request
	 */
	_api_register( 'ajax.params()', function () {
		var ctx = this.context;
	
		if ( ctx.length > 0 ) {
			return ctx[0].oAjaxData;
		}
	
		// else return undefined;
	} );
	
	
	/**
	 * Reload tables from the Ajax data source. Note that this function will
	 * automatically re-draw the table when the remote data has been loaded.
	 *
	 * @param {boolean} [reset=true] Reset (default) or hold the current paging
	 *   position. A full re-sort and re-filter is performed when this method is
	 *   called, which is why the pagination reset is the default action.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.reload()', function ( callback, resetPaging ) {
		return this.iterator( 'table', function (settings) {
			__reload( settings, resetPaging===false, callback );
		} );
	} );
	
	
	/**
	 * Get the current Ajax URL. Note that this returns the URL from the first
	 * table in the current context.
	 *
	 * @return {string} Current Ajax source URL
	 *//**
	 * Set the Ajax URL. Note that this will set the URL for all tables in the
	 * current context.
	 *
	 * @param {string} url URL to set.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url()', function ( url ) {
		var ctx = this.context;
	
		if ( url === undefined ) {
			// get
			if ( ctx.length === 0 ) {
				return undefined;
			}
			ctx = ctx[0];
	
			return ctx.ajax ?
				$.isPlainObject( ctx.ajax ) ?
					ctx.ajax.url :
					ctx.ajax :
				ctx.sAjaxSource;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( $.isPlainObject( settings.ajax ) ) {
				settings.ajax.url = url;
			}
			else {
				settings.ajax = url;
			}
			// No need to consider sAjaxSource here since DataTables gives priority
			// to \`ajax\` over \`sAjaxSource\`. So setting \`ajax\` here, renders any
			// value of \`sAjaxSource\` redundant.
		} );
	} );
	
	
	/**
	 * Load data from the newly set Ajax URL. Note that this method is only
	 * available when \`ajax.url()\` is used to set a URL. Additionally, this method
	 * has the same effect as calling \`ajax.reload()\` but is provided for
	 * convenience when setting a new URL. Like \`ajax.reload()\` it will
	 * automatically redraw the table once the remote data has been loaded.
	 *
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {
		// Same as a reload, but makes sense to present it for easy access after a
		// url change
		return this.iterator( 'table', function ( ctx ) {
			__reload( ctx, resetPaging===false, callback );
		} );
	} );
	
	
	
	
	var _selector_run = function ( type, selector, selectFn, settings, opts )
	{
		var
			out = [], res,
			a, i, ien, j, jen,
			selectorType = typeof selector;
	
		// Can't just check for isArray here, as an API or jQuery instance might be
		// given with their array like look
		if ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {
			selector = [ selector ];
		}
	
		for ( i=0, ien=selector.length ; i<ien ; i++ ) {
			// Only split on simple strings - complex expressions will be jQuery selectors
			a = selector[i] && selector[i].split && ! selector[i].match(/[\\[\\(:]/) ?
				selector[i].split(',') :
				[ selector[i] ];
	
			for ( j=0, jen=a.length ; j<jen ; j++ ) {
				res = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );
	
				if ( res && res.length ) {
					out = out.concat( res );
				}
			}
		}
	
		// selector extensions
		var ext = _ext.selector[ type ];
		if ( ext.length ) {
			for ( i=0, ien=ext.length ; i<ien ; i++ ) {
				out = ext[i]( settings, opts, out );
			}
		}
	
		return _unique( out );
	};
	
	
	var _selector_opts = function ( opts )
	{
		if ( ! opts ) {
			opts = {};
		}
	
		// Backwards compatibility for 1.9- which used the terminology filter rather
		// than search
		if ( opts.filter && opts.search === undefined ) {
			opts.search = opts.filter;
		}
	
		return $.extend( {
			search: 'none',
			order: 'current',
			page: 'all'
		}, opts );
	};
	
	
	var _selector_first = function ( inst )
	{
		// Reduce the API instance to the first item found
		for ( var i=0, ien=inst.length ; i<ien ; i++ ) {
			if ( inst[i].length > 0 ) {
				// Assign the first element to the first item in the instance
				// and truncate the instance and context
				inst[0] = inst[i];
				inst[0].length = 1;
				inst.length = 1;
				inst.context = [ inst.context[i] ];
	
				return inst;
			}
		}
	
		// Not found - return an empty instance
		inst.length = 0;
		return inst;
	};
	
	
	var _selector_row_indexes = function ( settings, opts )
	{
		var
			i, ien, tmp, a=[],
			displayFiltered = settings.aiDisplay,
			displayMaster = settings.aiDisplayMaster;
	
		var
			search = opts.search,  // none, applied, removed
			order  = opts.order,   // applied, current, index (original - compatibility with 1.9)
			page   = opts.page;    // all, current
	
		if ( _fnDataSource( settings ) == 'ssp' ) {
			// In server-side processing mode, most options are irrelevant since
			// rows not shown don't exist and the index order is the applied order
			// Removed is a special case - for consistency just return an empty
			// array
			return search === 'removed' ?
				[] :
				_range( 0, displayMaster.length );
		}
		else if ( page == 'current' ) {
			// Current page implies that order=current and filter=applied, since it is
			// fairly senseless otherwise, regardless of what order and search actually
			// are
			for ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {
				a.push( displayFiltered[i] );
			}
		}
		else if ( order == 'current' || order == 'applied' ) {
			if ( search == 'none') {
				a = displayMaster.slice();
			}
			else if ( search == 'applied' ) {
				a = displayFiltered.slice();
			}
			else if ( search == 'removed' ) {
				// O(n+m) solution by creating a hash map
				var displayFilteredMap = {};
	
				for ( var i=0, ien=displayFiltered.length ; i<ien ; i++ ) {
					displayFilteredMap[displayFiltered[i]] = null;
				}
	
				a = $.map( displayMaster, function (el) {
					return ! displayFilteredMap.hasOwnProperty(el) ?
						el :
						null;
				} );
			}
		}
		else if ( order == 'index' || order == 'original' ) {
			for ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				if ( search == 'none' ) {
					a.push( i );
				}
				else { // applied | removed
					tmp = $.inArray( i, displayFiltered );
	
					if ((tmp === -1 && search == 'removed') ||
						(tmp >= 0   && search == 'applied') )
					{
						a.push( i );
					}
				}
			}
		}
	
		return a;
	};
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Rows
	 *
	 * {}          - no selector - use all available rows
	 * {integer}   - row aoData index
	 * {node}      - TR node
	 * {string}    - jQuery selector to apply to the TR elements
	 * {array}     - jQuery array of nodes, or simply an array of TR nodes
	 *
	 */
	var __row_selector = function ( settings, selector, opts )
	{
		var rows;
		var run = function ( sel ) {
			var selInt = _intVal( sel );
			var i, ien;
			var aoData = settings.aoData;
	
			// Short cut - selector is a number and no options provided (default is
			// all records, so no need to check if the index is in there, since it
			// must be - dev error if the index doesn't exist).
			if ( selInt !== null && ! opts ) {
				return [ selInt ];
			}
	
			if ( ! rows ) {
				rows = _selector_row_indexes( settings, opts );
			}
	
			if ( selInt !== null && $.inArray( selInt, rows ) !== -1 ) {
				// Selector - integer
				return [ selInt ];
			}
			else if ( sel === null || sel === undefined || sel === '' ) {
				// Selector - none
				return rows;
			}
	
			// Selector - function
			if ( typeof sel === 'function' ) {
				return $.map( rows, function (idx) {
					var row = aoData[ idx ];
					return sel( idx, row._aData, row.nTr ) ? idx : null;
				} );
			}
	
			// Selector - node
			if ( sel.nodeName ) {
				var rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup
				var cellIdx = sel._DT_CellIndex;
	
				if ( rowIdx !== undefined ) {
					// Make sure that the row is actually still present in the table
					return aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?
						[ rowIdx ] :
						[];
				}
				else if ( cellIdx ) {
					return aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?
						[ cellIdx.row ] :
						[];
				}
				else {
					var host = $(sel).closest('*[data-dt-row]');
					return host.length ?
						[ host.data('dt-row') ] :
						[];
				}
			}
	
			// ID selector. Want to always be able to select rows by id, regardless
			// of if the tr element has been created or not, so can't rely upon
			// jQuery here - hence a custom implementation. This does not match
			// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,
			// but to select it using a CSS selector engine (like Sizzle or
			// querySelect) it would need to need to be escaped for some characters.
			// DataTables simplifies this for row selectors since you can select
			// only a row. A # indicates an id any anything that follows is the id -
			// unescaped.
			if ( typeof sel === 'string' && sel.charAt(0) === '#' ) {
				// get row index from id
				var rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];
				if ( rowObj !== undefined ) {
					return [ rowObj.idx ];
				}
	
				// need to fall through to jQuery in case there is DOM id that
				// matches
			}
			
			// Get nodes in the order from the \`rows\` array with null values removed
			var nodes = _removeEmpty(
				_pluck_order( settings.aoData, rows, 'nTr' )
			);
	
			// Selector - jQuery selector string, array of nodes or jQuery object/
			// As jQuery's .filter() allows jQuery objects to be passed in filter,
			// it also allows arrays, so this will cope with all three options
			return $(nodes)
				.filter( sel )
				.map( function () {
					return this._DT_RowIndex;
				} )
				.toArray();
		};
	
		return _selector_run( 'row', selector, run, settings, opts );
	};
	
	
	_api_register( 'rows()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __row_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in __row_selector?
		inst.selector.rows = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_register( 'rows().nodes()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return settings.aoData[ row ].nTr || undefined;
		}, 1 );
	} );
	
	_api_register( 'rows().data()', function () {
		return this.iterator( true, 'rows', function ( settings, rows ) {
			return _pluck_order( settings.aoData, rows, '_aData' );
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {
		return this.iterator( 'row', function ( settings, row ) {
			var r = settings.aoData[ row ];
			return type === 'search' ? r._aFilterData : r._aSortData;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {
		return this.iterator( 'row', function ( settings, row ) {
			_fnInvalidate( settings, row, src );
		} );
	} );
	
	_api_registerPlural( 'rows().indexes()', 'row().index()', function () {
		return this.iterator( 'row', function ( settings, row ) {
			return row;
		}, 1 );
	} );
	
	_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {
		var a = [];
		var context = this.context;
	
		// \`iterator\` will drop undefined values, but in this case we want them
		for ( var i=0, ien=context.length ; i<ien ; i++ ) {
			for ( var j=0, jen=this[i].length ; j<jen ; j++ ) {
				var id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );
				a.push( (hash === true ? '#' : '' )+ id );
			}
		}
	
		return new _Api( context, a );
	} );
	
	_api_registerPlural( 'rows().remove()', 'row().remove()', function () {
		var that = this;
	
		this.iterator( 'row', function ( settings, row, thatIdx ) {
			var data = settings.aoData;
			var rowData = data[ row ];
			var i, ien, j, jen;
			var loopRow, loopCells;
	
			data.splice( row, 1 );
	
			// Update the cached indexes
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				loopRow = data[i];
				loopCells = loopRow.anCells;
	
				// Rows
				if ( loopRow.nTr !== null ) {
					loopRow.nTr._DT_RowIndex = i;
				}
	
				// Cells
				if ( loopCells !== null ) {
					for ( j=0, jen=loopCells.length ; j<jen ; j++ ) {
						loopCells[j]._DT_CellIndex.row = i;
					}
				}
			}
	
			// Delete from the display arrays
			_fnDeleteIndex( settings.aiDisplayMaster, row );
			_fnDeleteIndex( settings.aiDisplay, row );
			_fnDeleteIndex( that[ thatIdx ], row, false ); // maintain local indexes
	
			// For server-side processing tables - subtract the deleted row from the count
			if ( settings._iRecordsDisplay > 0 ) {
				settings._iRecordsDisplay--;
			}
	
			// Check for an 'overflow' they case for displaying the table
			_fnLengthOverflow( settings );
	
			// Remove the row's ID reference if there is one
			var id = settings.rowIdFn( rowData._aData );
			if ( id !== undefined ) {
				delete settings.aIds[ id ];
			}
		} );
	
		this.iterator( 'table', function ( settings ) {
			for ( var i=0, ien=settings.aoData.length ; i<ien ; i++ ) {
				settings.aoData[i].idx = i;
			}
		} );
	
		return this;
	} );
	
	
	_api_register( 'rows.add()', function ( rows ) {
		var newRows = this.iterator( 'table', function ( settings ) {
				var row, i, ien;
				var out = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
						out.push( _fnAddTr( settings, row )[0] );
					}
					else {
						out.push( _fnAddData( settings, row ) );
					}
				}
	
				return out;
			}, 1 );
	
		// Return an Api.rows() extended instance, so rows().nodes() etc can be used
		var modRows = this.rows( -1 );
		modRows.pop();
		$.merge( modRows, newRows );
	
		return modRows;
	} );
	
	
	
	
	
	/**
	 *
	 */
	_api_register( 'row()', function ( selector, opts ) {
		return _selector_first( this.rows( selector, opts ) );
	} );
	
	
	_api_register( 'row().data()', function ( data ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// Get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._aData :
				undefined;
		}
	
		// Set
		var row = ctx[0].aoData[ this[0] ];
		row._aData = data;
	
		// If the DOM has an id, and the data source is an array
		if ( Array.isArray( data ) && row.nTr && row.nTr.id ) {
			_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );
		}
	
		// Automatically invalidate
		_fnInvalidate( ctx[0], this[0], 'data' );
	
		return this;
	} );
	
	
	_api_register( 'row().node()', function () {
		var ctx = this.context;
	
		return ctx.length && this.length ?
			ctx[0].aoData[ this[0] ].nTr || null :
			null;
	} );
	
	
	_api_register( 'row.add()', function ( row ) {
		// Allow a jQuery object to be passed in - only a single row is added from
		// it though - the first element in the set
		if ( row instanceof $ && row.length ) {
			row = row[0];
		}
	
		var rows = this.iterator( 'table', function ( settings ) {
			if ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {
				return _fnAddTr( settings, row )[0];
			}
			return _fnAddData( settings, row );
		} );
	
		// Return an Api.rows() extended instance, with the newly added row selected
		return this.row( rows[0] );
	} );
	
	
	$(document).on('plugin-init.dt', function (e, context) {
		var api = new _Api( context );
		api.on( 'stateSaveParams', function ( e, settings, data ) {
			var indexes = api.rows().iterator( 'row', function ( settings, idx ) {
				return settings.aoData[idx]._detailsShow ? idx : undefined;
			});
	
			data.childRows = api.rows( indexes ).ids( true ).toArray();
		})
	
		var loaded = api.state.loaded();
	
		if ( loaded && loaded.childRows ) {
			api.rows( loaded.childRows ).every( function () {
				_fnCallbackFire( context, null, 'requestChild', [ this ] )
			})
		}
	})
	
	var __details_add = function ( ctx, row, data, klass )
	{
		// Convert to array of TR elements
		var rows = [];
		var addRow = function ( r, k ) {
			// Recursion to allow for arrays of jQuery objects
			if ( Array.isArray( r ) || r instanceof $ ) {
				for ( var i=0, ien=r.length ; i<ien ; i++ ) {
					addRow( r[i], k );
				}
				return;
			}
	
			// If we get a TR element, then just add it directly - up to the dev
			// to add the correct number of columns etc
			if ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {
				rows.push( r );
			}
			else {
				// Otherwise create a row with a wrapper
				var created = $('<tr><td></td></tr>').addClass( k );
				$('td', created)
					.addClass( k )
					.html( r )
					[0].colSpan = _fnVisbleColumns( ctx );
	
				rows.push( created[0] );
			}
		};
	
		addRow( data, klass );
	
		if ( row._details ) {
			row._details.detach();
		}
	
		row._details = $(rows);
	
		// If the children were already shown, that state should be retained
		if ( row._detailsShow ) {
			row._details.insertAfter( row.nTr );
		}
	};
	
	
	var __details_remove = function ( api, idx )
	{
		var ctx = api.context;
	
		if ( ctx.length ) {
			var row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];
	
			if ( row && row._details ) {
				row._details.remove();
	
				row._detailsShow = undefined;
				row._details = undefined;
				$( row.nTr ).removeClass( 'dt-hasChild' );
				_fnSaveState( ctx[0] );
			}
		}
	};
	
	
	var __details_display = function ( api, show ) {
		var ctx = api.context;
	
		if ( ctx.length && api.length ) {
			var row = ctx[0].aoData[ api[0] ];
	
			if ( row._details ) {
				row._detailsShow = show;
	
				if ( show ) {
					row._details.insertAfter( row.nTr );
					$( row.nTr ).addClass( 'dt-hasChild' );
				}
				else {
					row._details.detach();
					$( row.nTr ).removeClass( 'dt-hasChild' );
				}
	
				_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )
	
				__details_events( ctx[0] );
				_fnSaveState( ctx[0] );
			}
		}
	};
	
	
	var __details_events = function ( settings )
	{
		var api = new _Api( settings );
		var namespace = '.dt.DT_details';
		var drawEvent = 'draw'+namespace;
		var colvisEvent = 'column-visibility'+namespace;
		var destroyEvent = 'destroy'+namespace;
		var data = settings.aoData;
	
		api.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );
	
		if ( _pluck( data, '_details' ).length > 0 ) {
			// On each draw, insert the required elements into the document
			api.on( drawEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				api.rows( {page:'current'} ).eq(0).each( function (idx) {
					// Internal data grab
					var row = data[ idx ];
	
					if ( row._detailsShow ) {
						row._details.insertAfter( row.nTr );
					}
				} );
			} );
	
			// Column visibility change - update the colspan
			api.on( colvisEvent, function ( e, ctx, idx, vis ) {
				if ( settings !== ctx ) {
					return;
				}
	
				// Update the colspan for the details rows (note, only if it already has
				// a colspan)
				var row, visible = _fnVisbleColumns( ctx );
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					row = data[i];
	
					if ( row._details ) {
						row._details.children('td[colspan]').attr('colspan', visible );
					}
				}
			} );
	
			// Table destroyed - nuke any child rows
			api.on( destroyEvent, function ( e, ctx ) {
				if ( settings !== ctx ) {
					return;
				}
	
				for ( var i=0, ien=data.length ; i<ien ; i++ ) {
					if ( data[i]._details ) {
						__details_remove( api, i );
					}
				}
			} );
		}
	};
	
	// Strings for the method names to help minification
	var _emp = '';
	var _child_obj = _emp+'row().child';
	var _child_mth = _child_obj+'()';
	
	// data can be:
	//  tr
	//  string
	//  jQuery or array of any of the above
	_api_register( _child_mth, function ( data, klass ) {
		var ctx = this.context;
	
		if ( data === undefined ) {
			// get
			return ctx.length && this.length ?
				ctx[0].aoData[ this[0] ]._details :
				undefined;
		}
		else if ( data === true ) {
			// show
			this.child.show();
		}
		else if ( data === false ) {
			// remove
			__details_remove( this );
		}
		else if ( ctx.length && this.length ) {
			// set
			__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );
		}
	
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.show()',
		_child_mth+'.show()' // only when \`child()\` was called with parameters (without
	], function ( show ) {   // it returns an object and this method is not executed)
		__details_display( this, true );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.hide()',
		_child_mth+'.hide()' // only when \`child()\` was called with parameters (without
	], function () {         // it returns an object and this method is not executed)
		__details_display( this, false );
		return this;
	} );
	
	
	_api_register( [
		_child_obj+'.remove()',
		_child_mth+'.remove()' // only when \`child()\` was called with parameters (without
	], function () {           // it returns an object and this method is not executed)
		__details_remove( this );
		return this;
	} );
	
	
	_api_register( _child_obj+'.isShown()', function () {
		var ctx = this.context;
	
		if ( ctx.length && this.length ) {
			// _detailsShown as false or undefined will fall through to return false
			return ctx[0].aoData[ this[0] ]._detailsShow || false;
		}
		return false;
	} );
	
	
	
	/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
	 * Columns
	 *
	 * {integer}           - column index (>=0 count from left, <0 count from right)
	 * "{integer}:visIdx"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)
	 * "{integer}:visible" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)
	 * "{string}:name"     - column name
	 * "{string}"          - jQuery selector on column header nodes
	 *
	 */
	
	// can be an array of these items, comma separated list, or an array of comma
	// separated lists
	
	var __re_column_selector = /^([^:]+):(name|visIdx|visible)$/;
	
	
	// r1 and r2 are redundant - but it means that the parameters match for the
	// iterator callback in columns().data()
	var __columnData = function ( settings, column, r1, r2, rows ) {
		var a = [];
		for ( var row=0, ien=rows.length ; row<ien ; row++ ) {
			a.push( _fnGetCellData( settings, rows[row], column ) );
		}
		return a;
	};
	
	
	var __column_selector = function ( settings, selector, opts )
	{
		var
			columns = settings.aoColumns,
			names = _pluck( columns, 'sName' ),
			nodes = _pluck( columns, 'nTh' );
	
		var run = function ( s ) {
			var selInt = _intVal( s );
	
			// Selector - all
			if ( s === '' ) {
				return _range( columns.length );
			}
	
			// Selector - index
			if ( selInt !== null ) {
				return [ selInt >= 0 ?
					selInt : // Count from left
					columns.length + selInt // Count from right (+ because its a negative value)
				];
			}
	
			// Selector = function
			if ( typeof s === 'function' ) {
				var rows = _selector_row_indexes( settings, opts );
	
				return $.map( columns, function (col, idx) {
					return s(
							idx,
							__columnData( settings, idx, 0, 0, rows ),
							nodes[ idx ]
						) ? idx : null;
				} );
			}
	
			// jQuery or string selector
			var match = typeof s === 'string' ?
				s.match( __re_column_selector ) :
				'';
	
			if ( match ) {
				switch( match[2] ) {
					case 'visIdx':
					case 'visible':
						var idx = parseInt( match[1], 10 );
						// Visible index given, convert to column index
						if ( idx < 0 ) {
							// Counting from the right
							var visColumns = $.map( columns, function (col,i) {
								return col.bVisible ? i : null;
							} );
							return [ visColumns[ visColumns.length + idx ] ];
						}
						// Counting from the left
						return [ _fnVisibleToColumnIndex( settings, idx ) ];
	
					case 'name':
						// match by name. \`names\` is column index complete and in order
						return $.map( names, function (name, i) {
							return name === match[1] ? i : null;
						} );
	
					default:
						return [];
				}
			}
	
			// Cell in the table body
			if ( s.nodeName && s._DT_CellIndex ) {
				return [ s._DT_CellIndex.column ];
			}
	
			// jQuery selector on the TH elements for the columns
			var jqResult = $( nodes )
				.filter( s )
				.map( function () {
					return $.inArray( this, nodes ); // \`nodes\` is column index complete and in order
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise a node which might have a \`dt-column\` data attribute, or be
			// a child or such an element
			var host = $(s).closest('*[data-dt-column]');
			return host.length ?
				[ host.data('dt-column') ] :
				[];
		};
	
		return _selector_run( 'column', selector, run, settings, opts );
	};
	
	
	var __setColumnVis = function ( settings, column, vis ) {
		var
			cols = settings.aoColumns,
			col  = cols[ column ],
			data = settings.aoData,
			row, cells, i, ien, tr;
	
		// Get
		if ( vis === undefined ) {
			return col.bVisible;
		}
	
		// Set
		// No change
		if ( col.bVisible === vis ) {
			return;
		}
	
		if ( vis ) {
			// Insert column
			// Need to decide if we should use appendChild or insertBefore
			var insertBefore = $.inArray( true, _pluck(cols, 'bVisible'), column+1 );
	
			for ( i=0, ien=data.length ; i<ien ; i++ ) {
				tr = data[i].nTr;
				cells = data[i].anCells;
	
				if ( tr ) {
					// insertBefore can act like appendChild if 2nd arg is null
					tr.insertBefore( cells[ column ], cells[ insertBefore ] || null );
				}
			}
		}
		else {
			// Remove column
			$( _pluck( settings.aoData, 'anCells', column ) ).detach();
		}
	
		// Common actions
		col.bVisible = vis;
	};
	
	
	_api_register( 'columns()', function ( selector, opts ) {
		// argument shifting
		if ( selector === undefined ) {
			selector = '';
		}
		else if ( $.isPlainObject( selector ) ) {
			opts = selector;
			selector = '';
		}
	
		opts = _selector_opts( opts );
	
		var inst = this.iterator( 'table', function ( settings ) {
			return __column_selector( settings, selector, opts );
		}, 1 );
	
		// Want argument shifting here and in _row_selector?
		inst.selector.cols = selector;
		inst.selector.opts = opts;
	
		return inst;
	} );
	
	_api_registerPlural( 'columns().header()', 'column().header()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTh;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().footer()', 'column().footer()', function ( selector, opts ) {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].nTf;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().data()', 'column().data()', function () {
		return this.iterator( 'column-rows', __columnData, 1 );
	} );
	
	_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {
		return this.iterator( 'column', function ( settings, column ) {
			return settings.aoColumns[column].mData;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows,
				type === 'search' ? '_aFilterData' : '_aSortData', column
			);
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {
		return this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {
			return _pluck_order( settings.aoData, rows, 'anCells', column ) ;
		}, 1 );
	} );
	
	_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {
		var that = this;
		var ret = this.iterator( 'column', function ( settings, column ) {
			if ( vis === undefined ) {
				return settings.aoColumns[ column ].bVisible;
			} // else
			__setColumnVis( settings, column, vis );
		} );
	
		// Group the column visibility changes
		if ( vis !== undefined ) {
			this.iterator( 'table', function ( settings ) {
				// Redraw the header after changes
				_fnDrawHead( settings, settings.aoHeader );
				_fnDrawHead( settings, settings.aoFooter );
		
				// Update colspan for no records display. Child rows and extensions will use their own
				// listeners to do this - only need to update the empty table item here
				if ( ! settings.aiDisplay.length ) {
					$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));
				}
		
				_fnSaveState( settings );
	
				// Second loop once the first is done for events
				that.iterator( 'column', function ( settings, column ) {
					_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );
				} );
	
				if ( calc === undefined || calc ) {
					that.columns.adjust();
				}
			});
		}
	
		return ret;
	} );
	
	_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {
		return this.iterator( 'column', function ( settings, column ) {
			return type === 'visible' ?
				_fnColumnIndexToVisible( settings, column ) :
				column;
		}, 1 );
	} );
	
	_api_register( 'columns.adjust()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnAdjustColumnSizing( settings );
		}, 1 );
	} );
	
	_api_register( 'column.index()', function ( type, idx ) {
		if ( this.context.length !== 0 ) {
			var ctx = this.context[0];
	
			if ( type === 'fromVisible' || type === 'toData' ) {
				return _fnVisibleToColumnIndex( ctx, idx );
			}
			else if ( type === 'fromData' || type === 'toVisible' ) {
				return _fnColumnIndexToVisible( ctx, idx );
			}
		}
	} );
	
	_api_register( 'column()', function ( selector, opts ) {
		return _selector_first( this.columns( selector, opts ) );
	} );
	
	var __cell_selector = function ( settings, selector, opts )
	{
		var data = settings.aoData;
		var rows = _selector_row_indexes( settings, opts );
		var cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );
		var allCells = $(_flatten( [], cells ));
		var row;
		var columns = settings.aoColumns.length;
		var a, i, ien, j, o, host;
	
		var run = function ( s ) {
			var fnSelector = typeof s === 'function';
	
			if ( s === null || s === undefined || fnSelector ) {
				// All cells and function selectors
				a = [];
	
				for ( i=0, ien=rows.length ; i<ien ; i++ ) {
					row = rows[i];
	
					for ( j=0 ; j<columns ; j++ ) {
						o = {
							row: row,
							column: j
						};
	
						if ( fnSelector ) {
							// Selector - function
							host = data[ row ];
	
							if ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {
								a.push( o );
							}
						}
						else {
							// Selector - all
							a.push( o );
						}
					}
				}
	
				return a;
			}
			
			// Selector - index
			if ( $.isPlainObject( s ) ) {
				// Valid cell index and its in the array of selectable rows
				return s.column !== undefined && s.row !== undefined && $.inArray( s.row, rows ) !== -1 ?
					[s] :
					[];
			}
	
			// Selector - jQuery filtered cells
			var jqResult = allCells
				.filter( s )
				.map( function (i, el) {
					return { // use a new object, in case someone changes the values
						row:    el._DT_CellIndex.row,
						column: el._DT_CellIndex.column
	 				};
				} )
				.toArray();
	
			if ( jqResult.length || ! s.nodeName ) {
				return jqResult;
			}
	
			// Otherwise the selector is a node, and there is one last option - the
			// element might be a child of an element which has dt-row and dt-column
			// data attributes
			host = $(s).closest('*[data-dt-row]');
			return host.length ?
				[ {
					row: host.data('dt-row'),
					column: host.data('dt-column')
				} ] :
				[];
		};
	
		return _selector_run( 'cell', selector, run, settings, opts );
	};
	
	
	
	
	_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {
		// Argument shifting
		if ( $.isPlainObject( rowSelector ) ) {
			// Indexes
			if ( rowSelector.row === undefined ) {
				// Selector options in first parameter
				opts = rowSelector;
				rowSelector = null;
			}
			else {
				// Cell index objects in first parameter
				opts = columnSelector;
				columnSelector = null;
			}
		}
		if ( $.isPlainObject( columnSelector ) ) {
			opts = columnSelector;
			columnSelector = null;
		}
	
		// Cell selector
		if ( columnSelector === null || columnSelector === undefined ) {
			return this.iterator( 'table', function ( settings ) {
				return __cell_selector( settings, rowSelector, _selector_opts( opts ) );
			} );
		}
	
		// The default built in options need to apply to row and columns
		var internalOpts = opts ? {
			page: opts.page,
			order: opts.order,
			search: opts.search
		} : {};
	
		// Row + column selector
		var columns = this.columns( columnSelector, internalOpts );
		var rows = this.rows( rowSelector, internalOpts );
		var i, ien, j, jen;
	
		var cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {
			var a = [];
	
			for ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {
				for ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {
					a.push( {
						row:    rows[idx][i],
						column: columns[idx][j]
					} );
				}
			}
	
			return a;
		}, 1 );
	
		// There is currently only one extension which uses a cell selector extension
		// It is a _major_ performance drag to run this if it isn't needed, so this is
		// an extension specific check at the moment
		var cells = opts && opts.selected ?
			this.cells( cellsNoOpts, opts ) :
			cellsNoOpts;
	
		$.extend( cells.selector, {
			cols: columnSelector,
			rows: rowSelector,
			opts: opts
		} );
	
		return cells;
	} );
	
	
	_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			var data = settings.aoData[ row ];
	
			return data && data.anCells ?
				data.anCells[ column ] :
				undefined;
		}, 1 );
	} );
	
	
	_api_register( 'cells().data()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {
		type = type === 'search' ? '_aFilterData' : '_aSortData';
	
		return this.iterator( 'cell', function ( settings, row, column ) {
			return settings.aoData[ row ][ type ][ column ];
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return _fnGetCellData( settings, row, column, type );
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {
		return this.iterator( 'cell', function ( settings, row, column ) {
			return {
				row: row,
				column: column,
				columnVisible: _fnColumnIndexToVisible( settings, column )
			};
		}, 1 );
	} );
	
	
	_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {
		return this.iterator( 'cell', function ( settings, row, column ) {
			_fnInvalidate( settings, row, src, column );
		} );
	} );
	
	
	
	_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {
		return _selector_first( this.cells( rowSelector, columnSelector, opts ) );
	} );
	
	
	_api_register( 'cell().data()', function ( data ) {
		var ctx = this.context;
		var cell = this[0];
	
		if ( data === undefined ) {
			// Get
			return ctx.length && cell.length ?
				_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :
				undefined;
		}
	
		// Set
		_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );
		_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );
	
		return this;
	} );
	
	
	
	/**
	 * Get current ordering (sorting) that has been applied to the table.
	 *
	 * @returns {array} 2D array containing the sorting information for the first
	 *   table in the current context. Each element in the parent array represents
	 *   a column being sorted upon (i.e. multi-sorting with two columns would have
	 *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is
	 *   the column index that the sorting condition applies to, the second is the
	 *   direction of the sort (\`desc\` or \`asc\`) and, optionally, the third is the
	 *   index of the sorting order from the \`column.sorting\` initialisation array.
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {integer} order Column index to sort upon.
	 * @param {string} direction Direction of the sort to be applied (\`asc\` or \`desc\`)
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 1D array of sorting information to be applied.
	 * @param {array} [...] Optional additional sorting conditions
	 * @returns {DataTables.Api} this
	 *//**
	 * Set the ordering for the table.
	 *
	 * @param {array} order 2D array of sorting information to be applied.
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order()', function ( order, dir ) {
		var ctx = this.context;
	
		if ( order === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].aaSorting :
				undefined;
		}
	
		// set
		if ( typeof order === 'number' ) {
			// Simple column / direction passed in
			order = [ [ order, dir ] ];
		}
		else if ( order.length && ! Array.isArray( order[0] ) ) {
			// Arguments passed in (list of 1D arrays)
			order = Array.prototype.slice.call( arguments );
		}
		// otherwise a 2D array was passed in
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSorting = order.slice();
		} );
	} );
	
	
	/**
	 * Attach a sort listener to an element for a given column
	 *
	 * @param {node|jQuery|string} node Identifier for the element(s) to attach the
	 *   listener to. This can take the form of a single DOM node, a jQuery
	 *   collection of nodes or a jQuery selector which will identify the node(s).
	 * @param {integer} column the column that a click on this node will sort on
	 * @param {function} [callback] callback function when sort is run
	 * @returns {DataTables.Api} this
	 */
	_api_register( 'order.listener()', function ( node, column, callback ) {
		return this.iterator( 'table', function ( settings ) {
			_fnSortAttachListener( settings, node, column, callback );
		} );
	} );
	
	
	_api_register( 'order.fixed()', function ( set ) {
		if ( ! set ) {
			var ctx = this.context;
			var fixed = ctx.length ?
				ctx[0].aaSortingFixed :
				undefined;
	
			return Array.isArray( fixed ) ?
				{ pre: fixed } :
				fixed;
		}
	
		return this.iterator( 'table', function ( settings ) {
			settings.aaSortingFixed = $.extend( true, {}, set );
		} );
	} );
	
	
	// Order by the selected column(s)
	_api_register( [
		'columns().order()',
		'column().order()'
	], function ( dir ) {
		var that = this;
	
		return this.iterator( 'table', function ( settings, i ) {
			var sort = [];
	
			$.each( that[i], function (j, col) {
				sort.push( [ col, dir ] );
			} );
	
			settings.aaSorting = sort;
		} );
	} );
	
	
	
	_api_register( 'search()', function ( input, regex, smart, caseInsen ) {
		var ctx = this.context;
	
		if ( input === undefined ) {
			// get
			return ctx.length !== 0 ?
				ctx[0].oPreviousSearch.sSearch :
				undefined;
		}
	
		// set
		return this.iterator( 'table', function ( settings ) {
			if ( ! settings.oFeatures.bFilter ) {
				return;
			}
	
			_fnFilterComplete( settings, $.extend( {}, settings.oPreviousSearch, {
				"sSearch": input+"",
				"bRegex":  regex === null ? false : regex,
				"bSmart":  smart === null ? true  : smart,
				"bCaseInsensitive": caseInsen === null ? true : caseInsen
			} ), 1 );
		} );
	} );
	
	
	_api_registerPlural(
		'columns().search()',
		'column().search()',
		function ( input, regex, smart, caseInsen ) {
			return this.iterator( 'column', function ( settings, column ) {
				var preSearch = settings.aoPreSearchCols;
	
				if ( input === undefined ) {
					// get
					return preSearch[ column ].sSearch;
				}
	
				// set
				if ( ! settings.oFeatures.bFilter ) {
					return;
				}
	
				$.extend( preSearch[ column ], {
					"sSearch": input+"",
					"bRegex":  regex === null ? false : regex,
					"bSmart":  smart === null ? true  : smart,
					"bCaseInsensitive": caseInsen === null ? true : caseInsen
				} );
	
				_fnFilterComplete( settings, settings.oPreviousSearch, 1 );
			} );
		}
	);
	
	/*
	 * State API methods
	 */
	
	_api_register( 'state()', function () {
		return this.context.length ?
			this.context[0].oSavedState :
			null;
	} );
	
	
	_api_register( 'state.clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			// Save an empty object
			settings.fnStateSaveCallback.call( settings.oInstance, settings, {} );
		} );
	} );
	
	
	_api_register( 'state.loaded()', function () {
		return this.context.length ?
			this.context[0].oLoadedState :
			null;
	} );
	
	
	_api_register( 'state.save()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnSaveState( settings );
		} );
	} );
	
	
	
	/**
	 * Provide a common method for plug-ins to check the version of DataTables being
	 * used, in order to ensure compatibility.
	 *
	 *  @param {string} version Version string to check for, in the format "X.Y.Z".
	 *    Note that the formats "X" and "X.Y" are also acceptable.
	 *  @returns {boolean} true if this version of DataTables is greater or equal to
	 *    the required version, or false if this version of DataTales is not
	 *    suitable
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );
	 */
	DataTable.versionCheck = DataTable.fnVersionCheck = function( version )
	{
		var aThis = DataTable.version.split('.');
		var aThat = version.split('.');
		var iThis, iThat;
	
		for ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {
			iThis = parseInt( aThis[i], 10 ) || 0;
			iThat = parseInt( aThat[i], 10 ) || 0;
	
			// Parts are the same, keep comparing
			if (iThis === iThat) {
				continue;
			}
	
			// Parts are different, return immediately
			return iThis > iThat;
		}
	
		return true;
	};
	
	
	/**
	 * Check if a \`<table>\` node is a DataTable table already or not.
	 *
	 *  @param {node|jquery|string} table Table node, jQuery object or jQuery
	 *      selector for the table to test. Note that if more than more than one
	 *      table is passed on, only the first will be checked
	 *  @returns {boolean} true the table given is a DataTable, or false otherwise
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {
	 *      $('#example').dataTable();
	 *    }
	 */
	DataTable.isDataTable = DataTable.fnIsDataTable = function ( table )
	{
		var t = $(table).get(0);
		var is = false;
	
		if ( table instanceof DataTable.Api ) {
			return true;
		}
	
		$.each( DataTable.settings, function (i, o) {
			var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;
			var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;
	
			if ( o.nTable === t || head === t || foot === t ) {
				is = true;
			}
		} );
	
		return is;
	};
	
	
	/**
	 * Get all DataTable tables that have been initialised - optionally you can
	 * select to get only currently visible tables.
	 *
	 *  @param {boolean} [visible=false] Flag to indicate if you want all (default)
	 *    or visible tables only.
	 *  @returns {array} Array of \`table\` nodes (not DataTable instances) which are
	 *    DataTables
	 *  @static
	 *  @dtopt API-Static
	 *
	 *  @example
	 *    $.each( $.fn.dataTable.tables(true), function () {
	 *      $(table).DataTable().columns.adjust();
	 *    } );
	 */
	DataTable.tables = DataTable.fnTables = function ( visible )
	{
		var api = false;
	
		if ( $.isPlainObject( visible ) ) {
			api = visible.api;
			visible = visible.visible;
		}
	
		var a = $.map( DataTable.settings, function (o) {
			if ( !visible || (visible && $(o.nTable).is(':visible')) ) {
				return o.nTable;
			}
		} );
	
		return api ?
			new _Api( a ) :
			a;
	};
	
	
	/**
	 * Convert from camel case parameters to Hungarian notation. This is made public
	 * for the extensions to provide the same ability as DataTables core to accept
	 * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase
	 * parameters.
	 *
	 *  @param {object} src The model object which holds all parameters that can be
	 *    mapped.
	 *  @param {object} user The object to convert from camel case to Hungarian.
	 *  @param {boolean} force When set to \`true\`, properties which already have a
	 *    Hungarian value in the \`user\` object will be overwritten. Otherwise they
	 *    won't be.
	 */
	DataTable.camelToHungarian = _fnCamelToHungarian;
	
	
	
	/**
	 *
	 */
	_api_register( '$()', function ( selector, opts ) {
		var
			rows   = this.rows( opts ).nodes(), // Get all rows
			jqRows = $(rows);
	
		return $( [].concat(
			jqRows.filter( selector ).toArray(),
			jqRows.find( selector ).toArray()
		) );
	} );
	
	
	// jQuery functions to operate on the tables
	$.each( [ 'on', 'one', 'off' ], function (i, key) {
		_api_register( key+'()', function ( /* event, handler */ ) {
			var args = Array.prototype.slice.call(arguments);
	
			// Add the \`dt\` namespace automatically if it isn't already present
			args[0] = $.map( args[0].split( /\\s/ ), function ( e ) {
				return ! e.match(/\\.dt\\b/) ?
					e+'.dt' :
					e;
				} ).join( ' ' );
	
			var inst = $( this.tables().nodes() );
			inst[key].apply( inst, args );
			return this;
		} );
	} );
	
	
	_api_register( 'clear()', function () {
		return this.iterator( 'table', function ( settings ) {
			_fnClearTable( settings );
		} );
	} );
	
	
	_api_register( 'settings()', function () {
		return new _Api( this.context, this.context );
	} );
	
	
	_api_register( 'init()', function () {
		var ctx = this.context;
		return ctx.length ? ctx[0].oInit : null;
	} );
	
	
	_api_register( 'data()', function () {
		return this.iterator( 'table', function ( settings ) {
			return _pluck( settings.aoData, '_aData' );
		} ).flatten();
	} );
	
	
	_api_register( 'destroy()', function ( remove ) {
		remove = remove || false;
	
		return this.iterator( 'table', function ( settings ) {
			var orig      = settings.nTableWrapper.parentNode;
			var classes   = settings.oClasses;
			var table     = settings.nTable;
			var tbody     = settings.nTBody;
			var thead     = settings.nTHead;
			var tfoot     = settings.nTFoot;
			var jqTable   = $(table);
			var jqTbody   = $(tbody);
			var jqWrapper = $(settings.nTableWrapper);
			var rows      = $.map( settings.aoData, function (r) { return r.nTr; } );
			var i, ien;
	
			// Flag to note that the table is currently being destroyed - no action
			// should be taken
			settings.bDestroying = true;
	
			// Fire off the destroy callbacks for plug-ins etc
			_fnCallbackFire( settings, "aoDestroyCallback", "destroy", [settings] );
	
			// If not being removed from the document, make all columns visible
			if ( ! remove ) {
				new _Api( settings ).columns().visible( true );
			}
	
			// Blitz all \`DT\` namespaced events (these are internal events, the
			// lowercase, \`dt\` events are user subscribed and they are responsible
			// for removing them
			jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');
			$(window).off('.DT-'+settings.sInstance);
	
			// When scrolling we had to break the table up - restore it
			if ( table != thead.parentNode ) {
				jqTable.children('thead').detach();
				jqTable.append( thead );
			}
	
			if ( tfoot && table != tfoot.parentNode ) {
				jqTable.children('tfoot').detach();
				jqTable.append( tfoot );
			}
	
			settings.aaSorting = [];
			settings.aaSortingFixed = [];
			_fnSortingClasses( settings );
	
			$( rows ).removeClass( settings.asStripeClasses.join(' ') );
	
			$('th, td', thead).removeClass( classes.sSortable+' '+
				classes.sSortableAsc+' '+classes.sSortableDesc+' '+classes.sSortableNone
			);
	
			// Add the TR elements back into the table in their original order
			jqTbody.children().detach();
			jqTbody.append( rows );
	
			// Remove the DataTables generated nodes, events and classes
			var removedMethod = remove ? 'remove' : 'detach';
			jqTable[ removedMethod ]();
			jqWrapper[ removedMethod ]();
	
			// If we need to reattach the table to the document
			if ( ! remove && orig ) {
				// insertBefore acts like appendChild if !arg[1]
				orig.insertBefore( table, settings.nTableReinsertBefore );
	
				// Restore the width of the original table - was read from the style property,
				// so we can restore directly to that
				jqTable
					.css( 'width', settings.sDestroyWidth )
					.removeClass( classes.sTable );
	
				// If the were originally stripe classes - then we add them back here.
				// Note this is not fool proof (for example if not all rows had stripe
				// classes - but it's a good effort without getting carried away
				ien = settings.asDestroyStripes.length;
	
				if ( ien ) {
					jqTbody.children().each( function (i) {
						$(this).addClass( settings.asDestroyStripes[i % ien] );
					} );
				}
			}
	
			/* Remove the settings object from the settings array */
			var idx = $.inArray( settings, DataTable.settings );
			if ( idx !== -1 ) {
				DataTable.settings.splice( idx, 1 );
			}
		} );
	} );
	
	
	// Add the \`every()\` method for rows, columns and cells in a compact form
	$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {
		_api_register( type+'s().every()', function ( fn ) {
			var opts = this.selector.opts;
			var api = this;
	
			return this.iterator( type, function ( settings, arg1, arg2, arg3, arg4 ) {
				// Rows and columns:
				//  arg1 - index
				//  arg2 - table counter
				//  arg3 - loop counter
				//  arg4 - undefined
				// Cells:
				//  arg1 - row index
				//  arg2 - column index
				//  arg3 - table counter
				//  arg4 - loop counter
				fn.call(
					api[ type ](
						arg1,
						type==='cell' ? arg2 : opts,
						type==='cell' ? opts : undefined
					),
					arg1, arg2, arg3, arg4
				);
			} );
		} );
	} );
	
	
	// i18n method for extensions to be able to use the language object from the
	// DataTable
	_api_register( 'i18n()', function ( token, def, plural ) {
		var ctx = this.context[0];
		var resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );
	
		if ( resolved === undefined ) {
			resolved = def;
		}
	
		if ( plural !== undefined && $.isPlainObject( resolved ) ) {
			resolved = resolved[ plural ] !== undefined ?
				resolved[ plural ] :
				resolved._;
		}
	
		return resolved.replace( '%d', plural ); // nb: plural might be undefined,
	} );
	/**
	 * Version string for plug-ins to check compatibility. Allowed format is
	 * \`a.b.c-d\` where: a:int, b:int, c:int, d:string(dev|beta|alpha). \`d\` is used
	 * only for non-release builds. See http://semver.org/ for more information.
	 *  @member
	 *  @type string
	 *  @default Version number
	 */
	DataTable.version = "1.11.3";

	/**
	 * Private data store, containing all of the settings objects that are
	 * created for the tables on a given page.
	 *
	 * Note that the \`DataTable.settings\` object is aliased to
	 * \`jQuery.fn.dataTableExt\` through which it may be accessed and
	 * manipulated, or \`jQuery.fn.dataTable.settings\`.
	 *  @member
	 *  @type array
	 *  @default []
	 *  @private
	 */
	DataTable.settings = [];

	/**
	 * Object models container, for the various models that DataTables has
	 * available to it. These models define the objects that are used to hold
	 * the active state and configuration of the table.
	 *  @namespace
	 */
	DataTable.models = {};
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * search information for the global filter and individual column filters.
	 *  @namespace
	 */
	DataTable.models.oSearch = {
		/**
		 * Flag to indicate if the filtering should be case insensitive or not
		 *  @type boolean
		 *  @default true
		 */
		"bCaseInsensitive": true,
	
		/**
		 * Applied search term
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sSearch": "",
	
		/**
		 * Flag to indicate if the search term should be interpreted as a
		 * regular expression (true) or not (false) and therefore and special
		 * regex characters escaped.
		 *  @type boolean
		 *  @default false
		 */
		"bRegex": false,
	
		/**
		 * Flag to indicate if DataTables is to use its smart filtering or not.
		 *  @type boolean
		 *  @default true
		 */
		"bSmart": true,
	
		/**
		 * Flag to indicate if DataTables should only trigger a search when
		 * the return key is pressed.
		 *  @type boolean
		 *  @default false
		 */
		"return": false
	};
	
	
	
	
	/**
	 * Template object for the way in which DataTables holds information about
	 * each individual row. This is the object format used for the settings
	 * aoData array.
	 *  @namespace
	 */
	DataTable.models.oRow = {
		/**
		 * TR element for the row
		 *  @type node
		 *  @default null
		 */
		"nTr": null,
	
		/**
		 * Array of TD elements for each row. This is null until the row has been
		 * created.
		 *  @type array nodes
		 *  @default []
		 */
		"anCells": null,
	
		/**
		 * Data object from the original data source for the row. This is either
		 * an array if using the traditional form of DataTables, or an object if
		 * using mData options. The exact type will depend on the passed in
		 * data from the data source, or will be an array if using DOM a data
		 * source.
		 *  @type array|object
		 *  @default []
		 */
		"_aData": [],
	
		/**
		 * Sorting data cache - this array is ostensibly the same length as the
		 * number of columns (although each index is generated only as it is
		 * needed), and holds the data that is used for sorting each column in the
		 * row. We do this cache generation at the start of the sort in order that
		 * the formatting of the sort data need be done only once for each cell
		 * per sort. This array should not be read from or written to by anything
		 * other than the master sorting methods.
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aSortData": null,
	
		/**
		 * Per cell filtering data cache. As per the sort data cache, used to
		 * increase the performance of the filtering in DataTables
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_aFilterData": null,
	
		/**
		 * Filtering data cache. This is the same as the cell filtering cache, but
		 * in this case a string rather than an array. This is easily computed with
		 * a join on \`_aFilterData\`, but is provided as a cache so the join isn't
		 * needed on every search (memory traded for performance)
		 *  @type array
		 *  @default null
		 *  @private
		 */
		"_sFilterRow": null,
	
		/**
		 * Cache of the class name that DataTables has applied to the row, so we
		 * can quickly look at this variable rather than needing to do a DOM check
		 * on className for the nTr property.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *  @private
		 */
		"_sRowStripe": "",
	
		/**
		 * Denote if the original data source was from the DOM, or the data source
		 * object. This is used for invalidating data, so DataTables can
		 * automatically read data from the original source, unless uninstructed
		 * otherwise.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"src": null,
	
		/**
		 * Index in the aoData array. This saves an indexOf lookup when we have the
		 * object, but want to know the index
		 *  @type integer
		 *  @default -1
		 *  @private
		 */
		"idx": -1
	};
	
	
	/**
	 * Template object for the column information object in DataTables. This object
	 * is held in the settings aoColumns array and contains all the information that
	 * DataTables needs about each individual column.
	 *
	 * Note that this object is related to {@link DataTable.defaults.column}
	 * but this one is the internal data store for DataTables's cache of columns.
	 * It should NOT be manipulated outside of DataTables. Any configuration should
	 * be done through the initialisation options.
	 *  @namespace
	 */
	DataTable.models.oColumn = {
		/**
		 * Column index. This could be worked out on-the-fly with $.inArray, but it
		 * is faster to just hold it as a variable
		 *  @type integer
		 *  @default null
		 */
		"idx": null,
	
		/**
		 * A list of the columns that sorting should occur on when this column
		 * is sorted. That this property is an array allows multi-column sorting
		 * to be defined for a column (for example first name / last name columns
		 * would benefit from this). The values are integers pointing to the
		 * columns to be sorted on (typically it will be a single integer pointing
		 * at itself, but that doesn't need to be the case).
		 *  @type array
		 */
		"aDataSort": null,
	
		/**
		 * Define the sorting directions that are applied to the column, in sequence
		 * as the column is repeatedly sorted upon - i.e. the first value is used
		 * as the sorting direction when the column if first sorted (clicked on).
		 * Sort it again (click again) and it will move on to the next index.
		 * Repeat until loop.
		 *  @type array
		 */
		"asSorting": null,
	
		/**
		 * Flag to indicate if the column is searchable, and thus should be included
		 * in the filtering or not.
		 *  @type boolean
		 */
		"bSearchable": null,
	
		/**
		 * Flag to indicate if the column is sortable or not.
		 *  @type boolean
		 */
		"bSortable": null,
	
		/**
		 * Flag to indicate if the column is currently visible in the table or not
		 *  @type boolean
		 */
		"bVisible": null,
	
		/**
		 * Store for manual type assignment using the \`column.type\` option. This
		 * is held in store so we can manipulate the column's \`sType\` property.
		 *  @type string
		 *  @default null
		 *  @private
		 */
		"_sManualType": null,
	
		/**
		 * Flag to indicate if HTML5 data attributes should be used as the data
		 * source for filtering or sorting. True is either are.
		 *  @type boolean
		 *  @default false
		 *  @private
		 */
		"_bAttrSrc": false,
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} nTd The TD node that has been created
		 *  @param {*} sData The Data for the cell
		 *  @param {array|object} oData The data for the whole row
		 *  @param {int} iRow The row index for the aoData data store
		 *  @default null
		 */
		"fnCreatedCell": null,
	
		/**
		 * Function to get data from a cell in a column. You should <b>never</b>
		 * access data directly through _aData internally in DataTables - always use
		 * the method attached to this property. It allows mData to function as
		 * required. This function is automatically assigned by the column
		 * initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {string} sSpecific The specific data type you want to get -
		 *    'display', 'type' 'filter' 'sort'
		 *  @returns {*} The data for the cell from the given row's data
		 *  @default null
		 */
		"fnGetData": null,
	
		/**
		 * Function to set data for a cell in the column. You should <b>never</b>
		 * set the data directly to _aData internally in DataTables - always use
		 * this method. It allows mData to function as required. This function
		 * is automatically assigned by the column initialisation method
		 *  @type function
		 *  @param {array|object} oData The data array/object for the array
		 *    (i.e. aoData[]._aData)
		 *  @param {*} sValue Value to set
		 *  @default null
		 */
		"fnSetData": null,
	
		/**
		 * Property to read the value for the cells in the column from the data
		 * source array / object. If null, then the default content is used, if a
		 * function is given then the return from the function is used.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mData": null,
	
		/**
		 * Partner property to mData which is used (only when defined) to get
		 * the data - i.e. it is basically the same as mData, but without the
		 * 'set' option, and also the data fed to it is the result from mData.
		 * This is the rendering method to match the data method of mData.
		 *  @type function|int|string|null
		 *  @default null
		 */
		"mRender": null,
	
		/**
		 * Unique header TH/TD element for this column - this is what the sorting
		 * listener is attached to (if sorting is enabled.)
		 *  @type node
		 *  @default null
		 */
		"nTh": null,
	
		/**
		 * Unique footer TH/TD element for this column (if there is one). Not used
		 * in DataTables as such, but can be used for plug-ins to reference the
		 * footer for each column.
		 *  @type node
		 *  @default null
		 */
		"nTf": null,
	
		/**
		 * The class to apply to all TD elements in the table's TBODY for the column
		 *  @type string
		 *  @default null
		 */
		"sClass": null,
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 *  @type string
		 */
		"sContentPadding": null,
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because mData
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 */
		"sDefaultContent": null,
	
		/**
		 * Name for the column, allowing reference to the column by name as well as
		 * by index (needs a lookup to work by name).
		 *  @type string
		 */
		"sName": null,
	
		/**
		 * Custom sorting data type - defines which of the available plug-ins in
		 * afnSortData the custom sorting will use - if any is defined.
		 *  @type string
		 *  @default std
		 */
		"sSortDataType": 'std',
	
		/**
		 * Class to be applied to the header element when sorting on this column
		 *  @type string
		 *  @default null
		 */
		"sSortingClass": null,
	
		/**
		 * Class to be applied to the header element when sorting on this column -
		 * when jQuery UI theming is used.
		 *  @type string
		 *  @default null
		 */
		"sSortingClassJUI": null,
	
		/**
		 * Title of the column - what is seen in the TH element (nTh).
		 *  @type string
		 */
		"sTitle": null,
	
		/**
		 * Column sorting and filtering type
		 *  @type string
		 *  @default null
		 */
		"sType": null,
	
		/**
		 * Width of the column
		 *  @type string
		 *  @default null
		 */
		"sWidth": null,
	
		/**
		 * Width of the column when it was first "encountered"
		 *  @type string
		 *  @default null
		 */
		"sWidthOrig": null
	};
	
	
	/*
	 * Developer note: The properties of the object below are given in Hungarian
	 * notation, that was used as the interface for DataTables prior to v1.10, however
	 * from v1.10 onwards the primary interface is camel case. In order to avoid
	 * breaking backwards compatibility utterly with this change, the Hungarian
	 * version is still, internally the primary interface, but is is not documented
	 * - hence the @name tags in each doc comment. This allows a Javascript function
	 * to create a map from Hungarian notation to camel case (going the other direction
	 * would require each property to be listed, which would add around 3K to the size
	 * of DataTables, while this method is about a 0.5K hit).
	 *
	 * Ultimately this does pave the way for Hungarian notation to be dropped
	 * completely, but that is a massive amount of work and will break current
	 * installs (therefore is on-hold until v2).
	 */
	
	/**
	 * Initialisation options that can be given to DataTables at initialisation
	 * time.
	 *  @namespace
	 */
	DataTable.defaults = {
		/**
		 * An array of data to use for the table, passed in at initialisation which
		 * will be used in preference to any data which is already in the DOM. This is
		 * particularly useful for constructing tables purely in Javascript, for
		 * example with a custom Ajax call.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.data
		 *
		 *  @example
		 *    // Using a 2D array data source
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          ['Trident', 'Internet Explorer 4.0', 'Win 95+', 4, 'X'],
		 *          ['Trident', 'Internet Explorer 5.0', 'Win 95+', 5, 'C'],
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine" },
		 *          { "title": "Browser" },
		 *          { "title": "Platform" },
		 *          { "title": "Version" },
		 *          { "title": "Grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using an array of objects as a data source (\`data\`)
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "data": [
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 4.0",
		 *            "platform": "Win 95+",
		 *            "version":  4,
		 *            "grade":    "X"
		 *          },
		 *          {
		 *            "engine":   "Trident",
		 *            "browser":  "Internet Explorer 5.0",
		 *            "platform": "Win 95+",
		 *            "version":  5,
		 *            "grade":    "C"
		 *          }
		 *        ],
		 *        "columns": [
		 *          { "title": "Engine",   "data": "engine" },
		 *          { "title": "Browser",  "data": "browser" },
		 *          { "title": "Platform", "data": "platform" },
		 *          { "title": "Version",  "data": "version" },
		 *          { "title": "Grade",    "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"aaData": null,
	
	
		/**
		 * If ordering is enabled, then DataTables will perform a first pass sort on
		 * initialisation. You can define which column(s) the sort is performed
		 * upon, and the sorting direction, with this variable. The \`sorting\` array
		 * should contain an array for each column to be sorted initially containing
		 * the column's index and a direction string ('asc' or 'desc').
		 *  @type array
		 *  @default [[0,'asc']]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.order
		 *
		 *  @example
		 *    // Sort by 3rd column first, and then 4th column
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": [[2,'asc'], [3,'desc']]
		 *      } );
		 *    } );
		 *
		 *    // No initial sorting
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "order": []
		 *      } );
		 *    } );
		 */
		"aaSorting": [[0,'asc']],
	
	
		/**
		 * This parameter is basically identical to the \`sorting\` parameter, but
		 * cannot be overridden by user interaction with the table. What this means
		 * is that you could have a column (visible or hidden) which the sorting
		 * will always be forced on first - any sorting after that (from the user)
		 * will then be performed as required. This can be useful for grouping rows
		 * together.
		 *  @type array
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.orderFixed
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderFixed": [[0,'asc']]
		 *      } );
		 *    } )
		 */
		"aaSortingFixed": [],
	
	
		/**
		 * DataTables can be instructed to load data to display in the table from a
		 * Ajax source. This option defines how that Ajax call is made and where to.
		 *
		 * The \`ajax\` property has three different modes of operation, depending on
		 * how it is defined. These are:
		 *
		 * * \`string\` - Set the URL from where the data should be loaded from.
		 * * \`object\` - Define properties for \`jQuery.ajax\`.
		 * * \`function\` - Custom data get function
		 *
		 * \`string\`
		 * --------
		 *
		 * As a string, the \`ajax\` property simply defines the URL from which
		 * DataTables will load data.
		 *
		 * \`object\`
		 * --------
		 *
		 * As an object, the parameters in the object are passed to
		 * [jQuery.ajax](http://api.jquery.com/jQuery.ajax/) allowing fine control
		 * of the Ajax request. DataTables has a number of default parameters which
		 * you can override using this option. Please refer to the jQuery
		 * documentation for a full description of the options available, although
		 * the following parameters provide additional options in DataTables or
		 * require special consideration:
		 *
		 * * \`data\` - As with jQuery, \`data\` can be provided as an object, but it
		 *   can also be used as a function to manipulate the data DataTables sends
		 *   to the server. The function takes a single parameter, an object of
		 *   parameters with the values that DataTables has readied for sending. An
		 *   object may be returned which will be merged into the DataTables
		 *   defaults, or you can add the items to the object that was passed in and
		 *   not return anything from the function. This supersedes \`fnServerParams\`
		 *   from DataTables 1.9-.
		 *
		 * * \`dataSrc\` - By default DataTables will look for the property \`data\` (or
		 *   \`aaData\` for compatibility with DataTables 1.9-) when obtaining data
		 *   from an Ajax source or for server-side processing - this parameter
		 *   allows that property to be changed. You can use Javascript dotted
		 *   object notation to get a data source for multiple levels of nesting, or
		 *   it my be used as a function. As a function it takes a single parameter,
		 *   the JSON returned from the server, which can be manipulated as
		 *   required, with the returned value being that used by DataTables as the
		 *   data source for the table. This supersedes \`sAjaxDataProp\` from
		 *   DataTables 1.9-.
		 *
		 * * \`success\` - Should not be overridden it is used internally in
		 *   DataTables. To manipulate / transform the data returned by the server
		 *   use \`ajax.dataSrc\`, or use \`ajax\` as a function (see below).
		 *
		 * \`function\`
		 * ----------
		 *
		 * As a function, making the Ajax call is left up to yourself allowing
		 * complete control of the Ajax request. Indeed, if desired, a method other
		 * than Ajax could be used to obtain the required data, such as Web storage
		 * or an AIR database.
		 *
		 * The function is given four parameters and no return is required. The
		 * parameters are:
		 *
		 * 1. _object_ - Data to send to the server
		 * 2. _function_ - Callback function that must be executed when the required
		 *    data has been obtained. That data should be passed into the callback
		 *    as the only parameter
		 * 3. _object_ - DataTables settings object for the table
		 *
		 * Note that this supersedes \`fnServerData\` from DataTables 1.9-.
		 *
		 *  @type string|object|function
		 *  @default null
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.ajax
		 *  @since 1.10.0
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax.
		 *   // Note DataTables expects data in the form \`{ data: [ ...data... ] }\` by default).
		 *   $('#example').dataTable( {
		 *     "ajax": "data.json"
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using \`dataSrc\` to change
		 *   // \`data\` to \`tableData\` (i.e. \`{ tableData: [ ...data... ] }\`)
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": "tableData"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get JSON data from a file via Ajax, using \`dataSrc\` to read data
		 *   // from a plain array rather than an array in an object
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": ""
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Manipulate the data returned from the server - add a link to data
		 *   // (note this can, should, be done using \`render\` for the column - this
		 *   // is just a simple example of how the data can be manipulated).
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "dataSrc": function ( json ) {
		 *         for ( var i=0, ien=json.length ; i<ien ; i++ ) {
		 *           json[i][0] = '<a href="/message/'+json[i][0]+'>View message</a>';
		 *         }
		 *         return json;
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Add data to the request
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "data": function ( d ) {
		 *         return {
		 *           "extra_search": $('#extra').val()
		 *         };
		 *       }
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Send request as POST
		 *   $('#example').dataTable( {
		 *     "ajax": {
		 *       "url": "data.json",
		 *       "type": "POST"
		 *     }
		 *   } );
		 *
		 * @example
		 *   // Get the data from localStorage (could interface with a form for
		 *   // adding, editing and removing rows).
		 *   $('#example').dataTable( {
		 *     "ajax": function (data, callback, settings) {
		 *       callback(
		 *         JSON.parse( localStorage.getItem('dataTablesData') )
		 *       );
		 *     }
		 *   } );
		 */
		"ajax": null,
	
	
		/**
		 * This parameter allows you to readily specify the entries in the length drop
		 * down menu that DataTables shows when pagination is enabled. It can be
		 * either a 1D array of options which will be used for both the displayed
		 * option and the value, or a 2D array which will use the array in the first
		 * position as the value, and the array in the second position as the
		 * displayed options (useful for language strings such as 'All').
		 *
		 * Note that the \`pageLength\` property will be automatically set to the
		 * first value given in this array, unless \`pageLength\` is also provided.
		 *  @type array
		 *  @default [ 10, 25, 50, 100 ]
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.lengthMenu
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "All"]]
		 *      } );
		 *    } );
		 */
		"aLengthMenu": [ 10, 25, 50, 100 ],
	
	
		/**
		 * The \`columns\` option in the initialisation parameter allows you to define
		 * details about the way individual columns behave. For a full list of
		 * column options that can be set, please see
		 * {@link DataTable.defaults.column}. Note that if you use \`columns\` to
		 * define your columns, you must have an entry in the array for every single
		 * column that you have in your table (these can be null if you don't which
		 * to specify any options).
		 *  @member
		 *
		 *  @name DataTable.defaults.column
		 */
		"aoColumns": null,
	
		/**
		 * Very similar to \`columns\`, \`columnDefs\` allows you to target a specific
		 * column, multiple columns, or all columns, using the \`targets\` property of
		 * each object in the array. This allows great flexibility when creating
		 * tables, as the \`columnDefs\` arrays can be of any length, targeting the
		 * columns you specifically want. \`columnDefs\` may use any of the column
		 * options available: {@link DataTable.defaults.column}, but it _must_
		 * have \`targets\` defined in each object in the array. Values in the \`targets\`
		 * array may be:
		 *   <ul>
		 *     <li>a string - class name will be matched on the TH for the column</li>
		 *     <li>0 or a positive integer - column index counting from the left</li>
		 *     <li>a negative integer - column index counting from the right</li>
		 *     <li>the string "_all" - all columns (i.e. assign a default)</li>
		 *   </ul>
		 *  @member
		 *
		 *  @name DataTable.defaults.columnDefs
		 */
		"aoColumnDefs": null,
	
	
		/**
		 * Basically the same as \`search\`, this parameter defines the individual column
		 * filtering state at initialisation time. The array must be of the same size
		 * as the number of columns, and each element be an object with the parameters
		 * \`search\` and \`escapeRegex\` (the latter is optional). 'null' is also
		 * accepted and the default will be used.
		 *  @type array
		 *  @default []
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.searchCols
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchCols": [
		 *          null,
		 *          { "search": "My filter" },
		 *          null,
		 *          { "search": "^[0-9]", "escapeRegex": false }
		 *        ]
		 *      } );
		 *    } )
		 */
		"aoSearchCols": [],
	
	
		/**
		 * An array of CSS classes that should be applied to displayed rows. This
		 * array may be of any length, and DataTables will apply each class
		 * sequentially, looping when required.
		 *  @type array
		 *  @default null <i>Will take the values determined by the \`oClasses.stripe*\`
		 *    options</i>
		 *
		 *  @dtopt Option
		 *  @name DataTable.defaults.stripeClasses
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stripeClasses": [ 'strip1', 'strip2', 'strip3' ]
		 *      } );
		 *    } )
		 */
		"asStripeClasses": null,
	
	
		/**
		 * Enable or disable automatic column width calculation. This can be disabled
		 * as an optimisation (it takes some time to calculate the widths) if the
		 * tables widths are passed in using \`columns\`.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.autoWidth
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "autoWidth": false
		 *      } );
		 *    } );
		 */
		"bAutoWidth": true,
	
	
		/**
		 * Deferred rendering can provide DataTables with a huge speed boost when you
		 * are using an Ajax or JS data source for the table. This option, when set to
		 * true, will cause DataTables to defer the creation of the table elements for
		 * each row until they are needed for a draw - saving a significant amount of
		 * time.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.deferRender
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajax": "sources/arrays.txt",
		 *        "deferRender": true
		 *      } );
		 *    } );
		 */
		"bDeferRender": false,
	
	
		/**
		 * Replace a DataTable which matches the given selector and replace it with
		 * one which has the properties of the new initialisation object passed. If no
		 * table matches the selector, then the new DataTable will be constructed as
		 * per normal.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.destroy
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "srollY": "200px",
		 *        "paginate": false
		 *      } );
		 *
		 *      // Some time later....
		 *      $('#example').dataTable( {
		 *        "filter": false,
		 *        "destroy": true
		 *      } );
		 *    } );
		 */
		"bDestroy": false,
	
	
		/**
		 * Enable or disable filtering of data. Filtering in DataTables is "smart" in
		 * that it allows the end user to input multiple words (space separated) and
		 * will match a row containing those words, even if not in the order that was
		 * specified (this allow matching across multiple columns). Note that if you
		 * wish to use filtering in DataTables this must remain 'true' - to remove the
		 * default filtering input box and retain filtering abilities, please use
		 * {@link DataTable.defaults.dom}.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.searching
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "searching": false
		 *      } );
		 *    } );
		 */
		"bFilter": true,
	
	
		/**
		 * Enable or disable the table information display. This shows information
		 * about the data that is currently visible on the page, including information
		 * about filtered data if that action is being performed.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.info
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "info": false
		 *      } );
		 *    } );
		 */
		"bInfo": true,
	
	
		/**
		 * Allows the end user to select the size of a formatted page from a select
		 * menu (sizes are 10, 25, 50 and 100). Requires pagination (\`paginate\`).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.lengthChange
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "lengthChange": false
		 *      } );
		 *    } );
		 */
		"bLengthChange": true,
	
	
		/**
		 * Enable or disable pagination.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.paging
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "paging": false
		 *      } );
		 *    } );
		 */
		"bPaginate": true,
	
	
		/**
		 * Enable or disable the display of a 'processing' indicator when the table is
		 * being processed (e.g. a sort). This is particularly useful for tables with
		 * large amounts of data where it can take a noticeable amount of time to sort
		 * the entries.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.processing
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "processing": true
		 *      } );
		 *    } );
		 */
		"bProcessing": false,
	
	
		/**
		 * Retrieve the DataTables object for the given selector. Note that if the
		 * table has already been initialised, this parameter will cause DataTables
		 * to simply return the object that has already been set up - it will not take
		 * account of any changes you might have made to the initialisation object
		 * passed to DataTables (setting this parameter to true is an acknowledgement
		 * that you understand this). \`destroy\` can be used to reinitialise a table if
		 * you need.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.retrieve
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      initTable();
		 *      tableActions();
		 *    } );
		 *
		 *    function initTable ()
		 *    {
		 *      return $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false,
		 *        "retrieve": true
		 *      } );
		 *    }
		 *
		 *    function tableActions ()
		 *    {
		 *      var table = initTable();
		 *      // perform API operations with oTable
		 *    }
		 */
		"bRetrieve": false,
	
	
		/**
		 * When vertical (y) scrolling is enabled, DataTables will force the height of
		 * the table's viewport to the given height at all times (useful for layout).
		 * However, this can look odd when filtering data down to a small data set,
		 * and the footer is left "floating" further down. This parameter (when
		 * enabled) will cause DataTables to collapse the table's viewport down when
		 * the result set will fit within the given Y height.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollCollapse
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200",
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"bScrollCollapse": false,
	
	
		/**
		 * Configure DataTables to use server-side processing. Note that the
		 * \`ajax\` parameter must also be given in order to give DataTables a
		 * source to obtain the required data for each draw.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverSide
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "xhr.php"
		 *      } );
		 *    } );
		 */
		"bServerSide": false,
	
	
		/**
		 * Enable or disable sorting of columns. Sorting of individual columns can be
		 * disabled by the \`sortable\` option for each column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.ordering
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "ordering": false
		 *      } );
		 *    } );
		 */
		"bSort": true,
	
	
		/**
		 * Enable or display DataTables' ability to sort multiple columns at the
		 * same time (activated by shift-click by the user).
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderMulti
		 *
		 *  @example
		 *    // Disable multiple column sorting ability
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderMulti": false
		 *      } );
		 *    } );
		 */
		"bSortMulti": true,
	
	
		/**
		 * Allows control over whether DataTables should use the top (true) unique
		 * cell that is found for a single column, or the bottom (false - default).
		 * This is useful when using complex headers.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.orderCellsTop
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "orderCellsTop": true
		 *      } );
		 *    } );
		 */
		"bSortCellsTop": false,
	
	
		/**
		 * Enable or disable the addition of the classes \`sorting\\_1\`, \`sorting\\_2\` and
		 * \`sorting\\_3\` to the columns which are currently being sorted on. This is
		 * presented as a feature switch as it can increase processing time (while
		 * classes are removed and added) so for large data sets you might want to
		 * turn this off.
		 *  @type boolean
		 *  @default true
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.orderClasses
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "orderClasses": false
		 *      } );
		 *    } );
		 */
		"bSortClasses": true,
	
	
		/**
		 * Enable or disable state saving. When enabled HTML5 \`localStorage\` will be
		 * used to save table display information such as pagination information,
		 * display length, filtering and sorting. As such when the end user reloads
		 * the page the display display will match what thy had previously set up.
		 *
		 * Due to the use of \`localStorage\` the default state saving is not supported
		 * in IE6 or 7. If state saving is required in those browsers, use
		 * \`stateSaveCallback\` to provide a storage solution such as cookies.
		 *  @type boolean
		 *  @default false
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.stateSave
		 *
		 *  @example
		 *    $(document).ready( function () {
		 *      $('#example').dataTable( {
		 *        "stateSave": true
		 *      } );
		 *    } );
		 */
		"bStateSave": false,
	
	
		/**
		 * This function is called when a TR element is created (and all TD child
		 * elements have been inserted), or registered if using a DOM source, allowing
		 * manipulation of the TR element (adding classes etc).
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} dataIndex The index of this row in the internal aoData array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.createdRow
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "createdRow": function( row, data, dataIndex ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" )
		 *          {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnCreatedRow": null,
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify any aspect you want about the created DOM.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.drawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "drawCallback": function( settings ) {
		 *          alert( 'DataTables has redrawn the table' );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnDrawCallback": null,
	
	
		/**
		 * Identical to fnHeaderCallback() but for the table footer this function
		 * allows you to modify the table footer on every 'draw' event.
		 *  @type function
		 *  @param {node} foot "TR" element for the footer
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.footerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "footerCallback": function( tfoot, data, start, end, display ) {
		 *          tfoot.getElementsByTagName('th')[0].innerHTML = "Starting index is "+start;
		 *        }
		 *      } );
		 *    } )
		 */
		"fnFooterCallback": null,
	
	
		/**
		 * When rendering large numbers in the information element for the table
		 * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
		 * to have a comma separator for the 'thousands' units (e.g. 1 million is
		 * rendered as "1,000,000") to help readability for the end user. This
		 * function will override the default method DataTables uses.
		 *  @type function
		 *  @member
		 *  @param {int} toFormat number to be formatted
		 *  @returns {string} formatted string for DataTables to show the number
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.formatNumber
		 *
		 *  @example
		 *    // Format a number using a single quote for the separator (note that
		 *    // this can also be done with the language.thousands option)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "formatNumber": function ( toFormat ) {
		 *          return toFormat.toString().replace(
		 *            /\\B(?=(\\d{3})+(?!\\d))/g, "'"
		 *          );
		 *        };
		 *      } );
		 *    } );
		 */
		"fnFormatNumber": function ( toFormat ) {
			return toFormat.toString().replace(
				/\\B(?=(\\d{3})+(?!\\d))/g,
				this.oLanguage.sThousands
			);
		},
	
	
		/**
		 * This function is called on every 'draw' event, and allows you to
		 * dynamically modify the header row. This can be used to calculate and
		 * display useful information about the table.
		 *  @type function
		 *  @param {node} head "TR" element for the header
		 *  @param {array} data Full table data (as derived from the original HTML)
		 *  @param {int} start Index for the current display starting point in the
		 *    display array
		 *  @param {int} end Index for the current display ending point in the
		 *    display array
		 *  @param {array int} display Index array to translate the visual position
		 *    to the full data array
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.headerCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "fheaderCallback": function( head, data, start, end, display ) {
		 *          head.getElementsByTagName('th')[0].innerHTML = "Displaying "+(end-start)+" records";
		 *        }
		 *      } );
		 *    } )
		 */
		"fnHeaderCallback": null,
	
	
		/**
		 * The information element can be used to convey information about the current
		 * state of the table. Although the internationalisation options presented by
		 * DataTables are quite capable of dealing with most customisations, there may
		 * be times where you wish to customise the string further. This callback
		 * allows you to do exactly that.
		 *  @type function
		 *  @param {object} oSettings DataTables settings object
		 *  @param {int} start Starting position in data for the draw
		 *  @param {int} end End position in data for the draw
		 *  @param {int} max Total number of rows in the table (regardless of
		 *    filtering)
		 *  @param {int} total Total number of rows in the data set, after filtering
		 *  @param {string} pre The string that DataTables has formatted using it's
		 *    own rules
		 *  @returns {string} The string to be displayed in the information element.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.infoCallback
		 *
		 *  @example
		 *    $('#example').dataTable( {
		 *      "infoCallback": function( settings, start, end, max, total, pre ) {
		 *        return start +" to "+ end;
		 *      }
		 *    } );
		 */
		"fnInfoCallback": null,
	
	
		/**
		 * Called when the table has been initialised. Normally DataTables will
		 * initialise sequentially and there will be no need for this function,
		 * however, this does not hold true when using external language information
		 * since that is obtained using an async XHR call.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} json The JSON object request from the server - only
		 *    present if client-side Ajax sourced data is used
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.initComplete
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "initComplete": function(settings, json) {
		 *          alert( 'DataTables has finished its initialisation.' );
		 *        }
		 *      } );
		 *    } )
		 */
		"fnInitComplete": null,
	
	
		/**
		 * Called at the very start of each table draw and can be used to cancel the
		 * draw by returning false, any other return (including undefined) results in
		 * the full draw occurring).
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @returns {boolean} False will cancel the draw, anything else (including no
		 *    return) will allow it to complete.
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.preDrawCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "preDrawCallback": function( settings ) {
		 *          if ( $('#test').val() == 1 ) {
		 *            return false;
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnPreDrawCallback": null,
	
	
		/**
		 * This function allows you to 'post process' each row after it have been
		 * generated for each table draw, but before it is rendered on screen. This
		 * function might be used for setting the row class name etc.
		 *  @type function
		 *  @param {node} row "TR" element for the current row
		 *  @param {array} data Raw data array for this row
		 *  @param {int} displayIndex The display index for the current table draw
		 *  @param {int} displayIndexFull The index of the data in the full list of
		 *    rows (after filtering)
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.rowCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "rowCallback": function( row, data, displayIndex, displayIndexFull ) {
		 *          // Bold the grade for all 'A' grade browsers
		 *          if ( data[4] == "A" ) {
		 *            $('td:eq(4)', row).html( '<b>A</b>' );
		 *          }
		 *        }
		 *      } );
		 *    } );
		 */
		"fnRowCallback": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through \`ajax\`, which should be used instead.
		 *
		 * This parameter allows you to override the default function which obtains
		 * the data from the server so something more suitable for your application.
		 * For example you could use POST data, or pull information from a Gears or
		 * AIR database.
		 *  @type function
		 *  @member
		 *  @param {string} source HTTP source to obtain the data from (\`ajax\`)
		 *  @param {array} data A key/value pair object containing the data to send
		 *    to the server
		 *  @param {function} callback to be called on completion of the data get
		 *    process that will draw the data on the page.
		 *  @param {object} settings DataTables settings object
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverData
		 *
		 *  @deprecated 1.10. Please use \`ajax\` for this functionality now.
		 */
		"fnServerData": null,
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through \`ajax\`, which should be used instead.
		 *
		 *  It is often useful to send extra data to the server when making an Ajax
		 * request - for example custom filtering information, and this callback
		 * function makes it trivial to send extra information to the server. The
		 * passed in parameter is the data set that has been constructed by
		 * DataTables, and you can add to this or modify it as you require.
		 *  @type function
		 *  @param {array} data Data array (array of objects which are name/value
		 *    pairs) that has been constructed by DataTables and will be sent to the
		 *    server. In the case of Ajax sourced data with server-side processing
		 *    this will be an empty array, for server-side processing there will be a
		 *    significant number of parameters!
		 *  @returns {undefined} Ensure that you modify the data array passed in,
		 *    as this is passed by reference.
		 *
		 *  @dtopt Callbacks
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverParams
		 *
		 *  @deprecated 1.10. Please use \`ajax\` for this functionality now.
		 */
		"fnServerParams": null,
	
	
		/**
		 * Load the table state. With this function you can define from where, and how, the
		 * state of a table is loaded. By default DataTables will load from \`localStorage\`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} callback Callback that can be executed when done. It
		 *    should be passed the loaded state object.
		 *  @return {object} The DataTables state object to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadCallback": function (settings, callback) {
		 *          $.ajax( {
		 *            "url": "/state_load",
		 *            "dataType": "json",
		 *            "success": function (json) {
		 *              callback( json );
		 *            }
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadCallback": function ( settings ) {
			try {
				return JSON.parse(
					(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
						'DataTables_'+settings.sInstance+'_'+location.pathname
					)
				);
			} catch (e) {
				return {};
			}
		},
	
	
		/**
		 * Callback which allows modification of the saved state prior to loading that state.
		 * This callback is called when the table is loading state from the stored data, but
		 * prior to the settings object being modified by the saved state. Note that for
		 * plug-in authors, you should use the \`stateLoadParams\` event to load parameters for
		 * a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that is to be loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoadParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never loaded
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Disallow state loading by returning false
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoadParams": function (settings, data) {
		 *          return false;
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoadParams": null,
	
	
		/**
		 * Callback that is called when the state has been loaded from the state saving method
		 * and the DataTables settings object has been modified as a result of the loaded state.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object that was loaded
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateLoaded
		 *
		 *  @example
		 *    // Show an alert with the filtering value that was saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateLoaded": function (settings, data) {
		 *          alert( 'Saved filter was: '+data.oSearch.sSearch );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateLoaded": null,
	
	
		/**
		 * Save the table state. This function allows you to define where and how the state
		 * information for the table is stored By default DataTables will use \`localStorage\`
		 * but you might wish to use a server-side database or cookies.
		 *  @type function
		 *  @member
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveCallback
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveCallback": function (settings, data) {
		 *          // Send an Ajax request to the server with the state object
		 *          $.ajax( {
		 *            "url": "/state_save",
		 *            "data": data,
		 *            "dataType": "json",
		 *            "method": "POST"
		 *            "success": function () {}
		 *          } );
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveCallback": function ( settings, data ) {
			try {
				(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
					'DataTables_'+settings.sInstance+'_'+location.pathname,
					JSON.stringify( data )
				);
			} catch (e) {}
		},
	
	
		/**
		 * Callback which allows modification of the state to be saved. Called when the table
		 * has changed state a new state save is required. This method allows modification of
		 * the state saving object prior to actually doing the save, including addition or
		 * other state properties or modification. Note that for plug-in authors, you should
		 * use the \`stateSaveParams\` event to save parameters for a plug-in.
		 *  @type function
		 *  @param {object} settings DataTables settings object
		 *  @param {object} data The state object to be saved
		 *
		 *  @dtopt Callbacks
		 *  @name DataTable.defaults.stateSaveParams
		 *
		 *  @example
		 *    // Remove a saved filter, so filtering is never saved
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateSave": true,
		 *        "stateSaveParams": function (settings, data) {
		 *          data.oSearch.sSearch = "";
		 *        }
		 *      } );
		 *    } );
		 */
		"fnStateSaveParams": null,
	
	
		/**
		 * Duration for which the saved state information is considered valid. After this period
		 * has elapsed the state will be returned to the default.
		 * Value is given in seconds.
		 *  @type int
		 *  @default 7200 <i>(2 hours)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.stateDuration
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "stateDuration": 60*60*24; // 1 day
		 *      } );
		 *    } )
		 */
		"iStateDuration": 7200,
	
	
		/**
		 * When enabled DataTables will not make a request to the server for the first
		 * page draw - rather it will use the data already on the page (no sorting etc
		 * will be applied to it), thus saving on an XHR at load time. \`deferLoading\`
		 * is used to indicate that deferred loading is required, but it is also used
		 * to tell DataTables how many records there are in the full table (allowing
		 * the information element and pagination to be displayed correctly). In the case
		 * where a filtering is applied to the table on initial load, this can be
		 * indicated by giving the parameter as an array, where the first element is
		 * the number of records available after filtering and the second element is the
		 * number of records without filtering (allowing the table information element
		 * to be shown correctly).
		 *  @type int | array
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.deferLoading
		 *
		 *  @example
		 *    // 57 records available in the table, no filtering applied
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": 57
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // 57 records after filtering, 100 without filtering (an initial filter applied)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "serverSide": true,
		 *        "ajax": "scripts/server_processing.php",
		 *        "deferLoading": [ 57, 100 ],
		 *        "search": {
		 *          "search": "my_filter"
		 *        }
		 *      } );
		 *    } );
		 */
		"iDeferLoading": null,
	
	
		/**
		 * Number of rows to display on a single page when using pagination. If
		 * feature enabled (\`lengthChange\`) then the end user will be able to override
		 * this to a custom setting using a pop-up menu.
		 *  @type int
		 *  @default 10
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pageLength
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pageLength": 50
		 *      } );
		 *    } )
		 */
		"iDisplayLength": 10,
	
	
		/**
		 * Define the starting point for data display when using DataTables with
		 * pagination. Note that this parameter is the number of records, rather than
		 * the page number, so if you have 10 records per page and want to start on
		 * the third page, it should be "20".
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.displayStart
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "displayStart": 20
		 *      } );
		 *    } )
		 */
		"iDisplayStart": 0,
	
	
		/**
		 * By default DataTables allows keyboard navigation of the table (sorting, paging,
		 * and filtering) by adding a \`tabindex\` attribute to the required elements. This
		 * allows you to tab through the controls and press the enter key to activate them.
		 * The tabindex is default 0, meaning that the tab follows the flow of the document.
		 * You can overrule this using this parameter if you wish. Use a value of -1 to
		 * disable built-in keyboard navigation.
		 *  @type int
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.tabIndex
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "tabIndex": 1
		 *      } );
		 *    } );
		 */
		"iTabIndex": 0,
	
	
		/**
		 * Classes that DataTables assigns to the various components and features
		 * that it adds to the HTML table. This allows classes to be configured
		 * during initialisation in addition to through the static
		 * {@link DataTable.ext.oStdClasses} object).
		 *  @namespace
		 *  @name DataTable.defaults.classes
		 */
		"oClasses": {},
	
	
		/**
		 * All strings that DataTables uses in the user interface that it creates
		 * are defined in this object, allowing you to modified them individually or
		 * completely replace them all as required.
		 *  @namespace
		 *  @name DataTable.defaults.language
		 */
		"oLanguage": {
			/**
			 * Strings that are used for WAI-ARIA labels and controls only (these are not
			 * actually visible on the page, but will be read by screenreaders, and thus
			 * must be internationalised as well).
			 *  @namespace
			 *  @name DataTable.defaults.language.aria
			 */
			"oAria": {
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted ascending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortAscending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortAscending": " - click/return to sort ascending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortAscending": ": activate to sort column ascending",
	
				/**
				 * ARIA label that is added to the table headers when the column may be
				 * sorted descending by activing the column (click or return when focused).
				 * Note that the column header is prefixed to this string.
				 *  @type string
				 *  @default : activate to sort column ascending
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.aria.sortDescending
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "aria": {
				 *            "sortDescending": " - click/return to sort descending"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sSortDescending": ": activate to sort column descending"
			},
	
			/**
			 * Pagination string used by DataTables for the built-in pagination
			 * control types.
			 *  @namespace
			 *  @name DataTable.defaults.language.paginate
			 */
			"oPaginate": {
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the first page.
				 *  @type string
				 *  @default First
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.first
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "first": "First page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sFirst": "First",
	
	
				/**
				 * Text to use when using the 'full_numbers' type of pagination for the
				 * button to take the user to the last page.
				 *  @type string
				 *  @default Last
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.last
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "last": "Last page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sLast": "Last",
	
	
				/**
				 * Text to use for the 'next' pagination button (to take the user to the
				 * next page).
				 *  @type string
				 *  @default Next
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.next
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "next": "Next page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sNext": "Next",
	
	
				/**
				 * Text to use for the 'previous' pagination button (to take the user to
				 * the previous page).
				 *  @type string
				 *  @default Previous
				 *
				 *  @dtopt Language
				 *  @name DataTable.defaults.language.paginate.previous
				 *
				 *  @example
				 *    $(document).ready( function() {
				 *      $('#example').dataTable( {
				 *        "language": {
				 *          "paginate": {
				 *            "previous": "Previous page"
				 *          }
				 *        }
				 *      } );
				 *    } );
				 */
				"sPrevious": "Previous"
			},
	
			/**
			 * This string is shown in preference to \`zeroRecords\` when the table is
			 * empty of data (regardless of filtering). Note that this is an optional
			 * parameter - if it is not given, the value of \`zeroRecords\` will be used
			 * instead (either the default or given value).
			 *  @type string
			 *  @default No data available in table
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.emptyTable
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "emptyTable": "No data available in table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sEmptyTable": "No data available in table",
	
	
			/**
			 * This string gives information to the end user about the information
			 * that is current on display on the page. The following tokens can be
			 * used in the string and will be dynamically replaced as the table
			 * display updates. This tokens can be placed anywhere in the string, or
			 * removed as needed by the language requires:
			 *
			 * * \`\\_START\\_\` - Display index of the first record on the current page
			 * * \`\\_END\\_\` - Display index of the last record on the current page
			 * * \`\\_TOTAL\\_\` - Number of records in the table after filtering
			 * * \`\\_MAX\\_\` - Number of records in the table without filtering
			 * * \`\\_PAGE\\_\` - Current page number
			 * * \`\\_PAGES\\_\` - Total number of pages of data in the table
			 *
			 *  @type string
			 *  @default Showing _START_ to _END_ of _TOTAL_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.info
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "info": "Showing page _PAGE_ of _PAGES_"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfo": "Showing _START_ to _END_ of _TOTAL_ entries",
	
	
			/**
			 * Display information string for when the table is empty. Typically the
			 * format of this string should match \`info\`.
			 *  @type string
			 *  @default Showing 0 to 0 of 0 entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoEmpty
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoEmpty": "No entries to show"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoEmpty": "Showing 0 to 0 of 0 entries",
	
	
			/**
			 * When a user filters the information in a table, this string is appended
			 * to the information (\`info\`) to give an idea of how strong the filtering
			 * is. The variable _MAX_ is dynamically updated.
			 *  @type string
			 *  @default (filtered from _MAX_ total entries)
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoFiltered
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoFiltered": " - filtering from _MAX_ records"
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoFiltered": "(filtered from _MAX_ total entries)",
	
	
			/**
			 * If can be useful to append extra information to the info string at times,
			 * and this variable does exactly that. This information will be appended to
			 * the \`info\` (\`infoEmpty\` and \`infoFiltered\` in whatever combination they are
			 * being used) at all times.
			 *  @type string
			 *  @default <i>Empty string</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.infoPostFix
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "infoPostFix": "All records shown are derived from real information."
			 *        }
			 *      } );
			 *    } );
			 */
			"sInfoPostFix": "",
	
	
			/**
			 * This decimal place operator is a little different from the other
			 * language options since DataTables doesn't output floating point
			 * numbers, so it won't ever use this for display of a number. Rather,
			 * what this parameter does is modify the sort methods of the table so
			 * that numbers which are in a format which has a character other than
			 * a period (\`.\`) as a decimal place will be sorted numerically.
			 *
			 * Note that numbers with different decimal places cannot be shown in
			 * the same table and still be sortable, the table must be consistent.
			 * However, multiple different tables on the page can use different
			 * decimal place characters.
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.decimal
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "decimal": ","
			 *          "thousands": "."
			 *        }
			 *      } );
			 *    } );
			 */
			"sDecimal": "",
	
	
			/**
			 * DataTables has a build in number formatter (\`formatNumber\`) which is
			 * used to format large numbers that are used in the table information.
			 * By default a comma is used, but this can be trivially changed to any
			 * character you wish with this parameter.
			 *  @type string
			 *  @default ,
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.thousands
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "thousands": "'"
			 *        }
			 *      } );
			 *    } );
			 */
			"sThousands": ",",
	
	
			/**
			 * Detail the action that will be taken when the drop down menu for the
			 * pagination length option is changed. The '_MENU_' variable is replaced
			 * with a default select list of 10, 25, 50 and 100, and can be replaced
			 * with a custom select box if required.
			 *  @type string
			 *  @default Show _MENU_ entries
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.lengthMenu
			 *
			 *  @example
			 *    // Language change only
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": "Display _MENU_ records"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Language and options change
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "lengthMenu": 'Display <select>'+
			 *            '<option value="10">10</option>'+
			 *            '<option value="20">20</option>'+
			 *            '<option value="30">30</option>'+
			 *            '<option value="40">40</option>'+
			 *            '<option value="50">50</option>'+
			 *            '<option value="-1">All</option>'+
			 *            '</select> records'
			 *        }
			 *      } );
			 *    } );
			 */
			"sLengthMenu": "Show _MENU_ entries",
	
	
			/**
			 * When using Ajax sourced data and during the first draw when DataTables is
			 * gathering the data, this message is shown in an empty row in the table to
			 * indicate to the end user the the data is being loaded. Note that this
			 * parameter is not used when loading data by server-side processing, just
			 * Ajax sourced data with client-side processing.
			 *  @type string
			 *  @default Loading...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.loadingRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "loadingRecords": "Please wait - loading..."
			 *        }
			 *      } );
			 *    } );
			 */
			"sLoadingRecords": "Loading...",
	
	
			/**
			 * Text which is displayed when the table is processing a user action
			 * (usually a sort command or similar).
			 *  @type string
			 *  @default Processing...
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.processing
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "processing": "DataTables is currently busy"
			 *        }
			 *      } );
			 *    } );
			 */
			"sProcessing": "Processing...",
	
	
			/**
			 * Details the actions that will be taken when the user types into the
			 * filtering input text box. The variable "_INPUT_", if used in the string,
			 * is replaced with the HTML text box for the filtering input allowing
			 * control over where it appears in the string. If "_INPUT_" is not given
			 * then the input box is appended to the string automatically.
			 *  @type string
			 *  @default Search:
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.search
			 *
			 *  @example
			 *    // Input text box will be appended at the end automatically
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Filter records:"
			 *        }
			 *      } );
			 *    } );
			 *
			 *  @example
			 *    // Specify where the filter should appear
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "search": "Apply filter _INPUT_ to table"
			 *        }
			 *      } );
			 *    } );
			 */
			"sSearch": "Search:",
	
	
			/**
			 * Assign a \`placeholder\` attribute to the search \`input\` element
			 *  @type string
			 *  @default 
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.searchPlaceholder
			 */
			"sSearchPlaceholder": "",
	
	
			/**
			 * All of the language information can be stored in a file on the
			 * server-side, which DataTables will look up if this parameter is passed.
			 * It must store the URL of the language file, which is in a JSON format,
			 * and the object has the same properties as the oLanguage object in the
			 * initialiser object (i.e. the above parameters). Please refer to one of
			 * the example language files to see how this works in action.
			 *  @type string
			 *  @default <i>Empty string - i.e. disabled</i>
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.url
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "url": "http://www.sprymedia.co.uk/dataTables/lang.txt"
			 *        }
			 *      } );
			 *    } );
			 */
			"sUrl": "",
	
	
			/**
			 * Text shown inside the table records when the is no information to be
			 * displayed after filtering. \`emptyTable\` is shown when there is simply no
			 * information in the table at all (regardless of filtering).
			 *  @type string
			 *  @default No matching records found
			 *
			 *  @dtopt Language
			 *  @name DataTable.defaults.language.zeroRecords
			 *
			 *  @example
			 *    $(document).ready( function() {
			 *      $('#example').dataTable( {
			 *        "language": {
			 *          "zeroRecords": "No records to display"
			 *        }
			 *      } );
			 *    } );
			 */
			"sZeroRecords": "No matching records found"
		},
	
	
		/**
		 * This parameter allows you to have define the global filtering state at
		 * initialisation time. As an object the \`search\` parameter must be
		 * defined, but all other parameters are optional. When \`regex\` is true,
		 * the search string will be treated as a regular expression, when false
		 * (default) it will be treated as a straight string. When \`smart\`
		 * DataTables will use it's smart filtering methods (to word match at
		 * any point in the data), when false this will not be done.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.search
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "search": {"search": "Initial search"}
		 *      } );
		 *    } )
		 */
		"oSearch": $.extend( {}, DataTable.models.oSearch ),
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through \`ajax\`, which should be used instead.
		 *
		 * By default DataTables will look for the property \`data\` (or \`aaData\` for
		 * compatibility with DataTables 1.9-) when obtaining data from an Ajax
		 * source or for server-side processing - this parameter allows that
		 * property to be changed. You can use Javascript dotted object notation to
		 * get a data source for multiple levels of nesting.
		 *  @type string
		 *  @default data
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxDataProp
		 *
		 *  @deprecated 1.10. Please use \`ajax\` for this functionality now.
		 */
		"sAjaxDataProp": "data",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through \`ajax\`, which should be used instead.
		 *
		 * You can instruct DataTables to load data from an external
		 * source using this parameter (use aData if you want to pass data in you
		 * already have). Simply provide a url a JSON object can be obtained from.
		 *  @type string
		 *  @default null
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.ajaxSource
		 *
		 *  @deprecated 1.10. Please use \`ajax\` for this functionality now.
		 */
		"sAjaxSource": null,
	
	
		/**
		 * This initialisation variable allows you to specify exactly where in the
		 * DOM you want DataTables to inject the various controls it adds to the page
		 * (for example you might want the pagination controls at the top of the
		 * table). DIV elements (with or without a custom class) can also be added to
		 * aid styling. The follow syntax is used:
		 *   <ul>
		 *     <li>The following options are allowed:
		 *       <ul>
		 *         <li>'l' - Length changing</li>
		 *         <li>'f' - Filtering input</li>
		 *         <li>'t' - The table!</li>
		 *         <li>'i' - Information</li>
		 *         <li>'p' - Pagination</li>
		 *         <li>'r' - pRocessing</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following constants are allowed:
		 *       <ul>
		 *         <li>'H' - jQueryUI theme "header" classes ('fg-toolbar ui-widget-header ui-corner-tl ui-corner-tr ui-helper-clearfix')</li>
		 *         <li>'F' - jQueryUI theme "footer" classes ('fg-toolbar ui-widget-header ui-corner-bl ui-corner-br ui-helper-clearfix')</li>
		 *       </ul>
		 *     </li>
		 *     <li>The following syntax is expected:
		 *       <ul>
		 *         <li>'&lt;' and '&gt;' - div elements</li>
		 *         <li>'&lt;"class" and '&gt;' - div with a class</li>
		 *         <li>'&lt;"#id" and '&gt;' - div with an ID</li>
		 *       </ul>
		 *     </li>
		 *     <li>Examples:
		 *       <ul>
		 *         <li>'&lt;"wrapper"flipt&gt;'</li>
		 *         <li>'&lt;lf&lt;t&gt;ip&gt;'</li>
		 *       </ul>
		 *     </li>
		 *   </ul>
		 *  @type string
		 *  @default lfrtip <i>(when \`jQueryUI\` is false)</i> <b>or</b>
		 *    <"H"lfr>t<"F"ip> <i>(when \`jQueryUI\` is true)</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.dom
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "dom": '&lt;"top"i&gt;rt&lt;"bottom"flp&gt;&lt;"clear"&gt;'
		 *      } );
		 *    } );
		 */
		"sDom": "lfrtip",
	
	
		/**
		 * Search delay option. This will throttle full table searches that use the
		 * DataTables provided search input element (it does not effect calls to
		 * \`dt-api search()\`, providing a delay before the search is made.
		 *  @type integer
		 *  @default 0
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.searchDelay
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "searchDelay": 200
		 *      } );
		 *    } )
		 */
		"searchDelay": null,
	
	
		/**
		 * DataTables features six different built-in options for the buttons to
		 * display for pagination control:
		 *
		 * * \`numbers\` - Page number buttons only
		 * * \`simple\` - 'Previous' and 'Next' buttons only
		 * * 'simple_numbers\` - 'Previous' and 'Next' buttons, plus page numbers
		 * * \`full\` - 'First', 'Previous', 'Next' and 'Last' buttons
		 * * \`full_numbers\` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
		 * * \`first_last_numbers\` - 'First' and 'Last' buttons, plus page numbers
		 *  
		 * Further methods can be added using {@link DataTable.ext.oPagination}.
		 *  @type string
		 *  @default simple_numbers
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.pagingType
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "pagingType": "full_numbers"
		 *      } );
		 *    } )
		 */
		"sPaginationType": "simple_numbers",
	
	
		/**
		 * Enable horizontal scrolling. When a table is too wide to fit into a
		 * certain layout, or you have a large number of columns in the table, you
		 * can enable x-scrolling to show the table in a viewport, which can be
		 * scrolled. This property can be \`true\` which will allow the table to
		 * scroll horizontally when needed, or any CSS unit, or a number (in which
		 * case it will be treated as a pixel measurement). Setting as simply \`true\`
		 * is recommended.
		 *  @type boolean|string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollX
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": true,
		 *        "scrollCollapse": true
		 *      } );
		 *    } );
		 */
		"sScrollX": "",
	
	
		/**
		 * This property can be used to force a DataTable to use more width than it
		 * might otherwise do when x-scrolling is enabled. For example if you have a
		 * table which requires to be well spaced, this parameter is useful for
		 * "over-sizing" the table, and thus forcing scrolling. This property can by
		 * any CSS unit, or a number (in which case it will be treated as a pixel
		 * measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Options
		 *  @name DataTable.defaults.scrollXInner
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollX": "100%",
		 *        "scrollXInner": "110%"
		 *      } );
		 *    } );
		 */
		"sScrollXInner": "",
	
	
		/**
		 * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
		 * to the given height, and enable scrolling for any data which overflows the
		 * current viewport. This can be used as an alternative to paging to display
		 * a lot of data in a small area (although paging and scrolling can both be
		 * enabled at the same time). This property can be any CSS unit, or a number
		 * (in which case it will be treated as a pixel measurement).
		 *  @type string
		 *  @default <i>blank string - i.e. disabled</i>
		 *
		 *  @dtopt Features
		 *  @name DataTable.defaults.scrollY
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "scrollY": "200px",
		 *        "paginate": false
		 *      } );
		 *    } );
		 */
		"sScrollY": "",
	
	
		/**
		 * __Deprecated__ The functionality provided by this parameter has now been
		 * superseded by that provided through \`ajax\`, which should be used instead.
		 *
		 * Set the HTTP method that is used to make the Ajax call for server-side
		 * processing or Ajax sourced data.
		 *  @type string
		 *  @default GET
		 *
		 *  @dtopt Options
		 *  @dtopt Server-side
		 *  @name DataTable.defaults.serverMethod
		 *
		 *  @deprecated 1.10. Please use \`ajax\` for this functionality now.
		 */
		"sServerMethod": "GET",
	
	
		/**
		 * DataTables makes use of renderers when displaying HTML elements for
		 * a table. These renderers can be added or modified by plug-ins to
		 * generate suitable mark-up for a site. For example the Bootstrap
		 * integration plug-in for DataTables uses a paging button renderer to
		 * display pagination buttons in the mark-up required by Bootstrap.
		 *
		 * For further information about the renderers available see
		 * DataTable.ext.renderer
		 *  @type string|object
		 *  @default null
		 *
		 *  @name DataTable.defaults.renderer
		 *
		 */
		"renderer": null,
	
	
		/**
		 * Set the data property name that DataTables should use to get a row's id
		 * to set as the \`id\` property in the node.
		 *  @type string
		 *  @default DT_RowId
		 *
		 *  @name DataTable.defaults.rowId
		 */
		"rowId": "DT_RowId"
	};
	
	_fnHungarianMap( DataTable.defaults );
	
	
	
	/*
	 * Developer note - See note in model.defaults.js about the use of Hungarian
	 * notation and camel case.
	 */
	
	/**
	 * Column options that can be given to DataTables at initialisation time.
	 *  @namespace
	 */
	DataTable.defaults.column = {
		/**
		 * Define which column(s) an order will occur on for this column. This
		 * allows a column's ordering to take multiple columns into account when
		 * doing a sort or use the data from a different column. For example first
		 * name / last name columns make sense to do a multi-column sort over the
		 * two columns.
		 *  @type array|int
		 *  @default null <i>Takes the value of the column index automatically</i>
		 *
		 *  @name DataTable.defaults.column.orderData
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderData": [ 0, 1 ], "targets": [ 0 ] },
		 *          { "orderData": [ 1, 0 ], "targets": [ 1 ] },
		 *          { "orderData": 2, "targets": [ 2 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderData": [ 0, 1 ] },
		 *          { "orderData": [ 1, 0 ] },
		 *          { "orderData": 2 },
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"aDataSort": null,
		"iDataSort": -1,
	
	
		/**
		 * You can control the default ordering direction, and even alter the
		 * behaviour of the sort handler (i.e. only allow ascending ordering etc)
		 * using this parameter.
		 *  @type array
		 *  @default [ 'asc', 'desc' ]
		 *
		 *  @name DataTable.defaults.column.orderSequence
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderSequence": [ "asc" ], "targets": [ 1 ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ], "targets": [ 2 ] },
		 *          { "orderSequence": [ "desc" ], "targets": [ 3 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          { "orderSequence": [ "asc" ] },
		 *          { "orderSequence": [ "desc", "asc", "asc" ] },
		 *          { "orderSequence": [ "desc" ] },
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"asSorting": [ 'asc', 'desc' ],
	
	
		/**
		 * Enable or disable filtering on the data in this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.searchable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "searchable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "searchable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSearchable": true,
	
	
		/**
		 * Enable or disable ordering on this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.orderable
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderable": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "orderable": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bSortable": true,
	
	
		/**
		 * Enable or disable the display of this column.
		 *  @type boolean
		 *  @default true
		 *
		 *  @name DataTable.defaults.column.visible
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "visible": false, "targets": [ 0 ] }
		 *        ] } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "visible": false },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ] } );
		 *    } );
		 */
		"bVisible": true,
	
	
		/**
		 * Developer definable function that is called whenever a cell is created (Ajax source,
		 * etc) or processed for input (DOM source). This can be used as a compliment to mRender
		 * allowing you to modify the DOM element (add background colour for example) when the
		 * element is available.
		 *  @type function
		 *  @param {element} td The TD node that has been created
		 *  @param {*} cellData The Data for the cell
		 *  @param {array|object} rowData The data for the whole row
		 *  @param {int} row The row index for the aoData data store
		 *  @param {int} col The column index for aoColumns
		 *
		 *  @name DataTable.defaults.column.createdCell
		 *  @dtopt Columns
		 *
		 *  @example
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [3],
		 *          "createdCell": function (td, cellData, rowData, row, col) {
		 *            if ( cellData == "1.7" ) {
		 *              $(td).css('color', 'blue')
		 *            }
		 *          }
		 *        } ]
		 *      });
		 *    } );
		 */
		"fnCreatedCell": null,
	
	
		/**
		 * This parameter has been replaced by \`data\` in DataTables to ensure naming
		 * consistency. \`dataProp\` can still be used, as there is backwards
		 * compatibility in DataTables for this option, but it is strongly
		 * recommended that you use \`data\` in preference to \`dataProp\`.
		 *  @name DataTable.defaults.column.dataProp
		 */
	
	
		/**
		 * This property can be used to read data from any data source property,
		 * including deeply nested objects / properties. \`data\` can be given in a
		 * number of different ways which effect its behaviour:
		 *
		 * * \`integer\` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * \`string\` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * \`.\` - Dotted Javascript notation. Just as you use a \`.\` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in \`data\`. For example: \`browser.version\` or
		 *      \`browser.name\`. If your object parameter name contains a period, use
		 *      \`\\\\\` to escape it - i.e. \`first\\\\.name\`.
		 *    * \`[]\` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: \`name[, ]\` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * \`()\` - Function notation. Adding \`()\` to the end of a parameter will
		 *      execute a function of the name given. For example: \`browser()\` for a
		 *      simple function on the data source, \`browser.version()\` for a
		 *      function in a nested property or even \`browser().version\` to get an
		 *      object property if the function called returns an object. Note that
		 *      function notation is recommended for use in \`render\` rather than
		 *      \`data\` as it is much simpler to use as a renderer.
		 * * \`null\` - use the original data source for the row rather than plucking
		 *   data directly from it. This action has effects on two other
		 *   initialisation options:
		 *    * \`defaultContent\` - When null is given as the \`data\` option and
		 *      \`defaultContent\` is specified for the column, the value defined by
		 *      \`defaultContent\` will be used for the cell.
		 *    * \`render\` - When null is used for the \`data\` option and the \`render\`
		 *      option is specified for the column, the whole data source for the
		 *      row is used for the renderer.
		 * * \`function\` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * \`{array|object}\` The data source for the row
		 *      * \`{string}\` The type call data requested - this will be 'set' when
		 *        setting data or 'filter', 'display', 'type', 'sort' or undefined
		 *        when gathering data. Note that when \`undefined\` is given for the
		 *        type DataTables expects to get the raw data for the object back<
		 *      * \`{*}\` Data to set when the second parameter is 'set'.
		 *    * Return:
		 *      * The return value from the function is not required when 'set' is
		 *        the type of call, but otherwise the return is what will be used
		 *        for the data requested.
		 *
		 * Note that \`data\` is a getter and setter option. If you just require
		 * formatting of data for output, you will likely want to use \`render\` which
		 * is simply a getter and thus simpler to use.
		 *
		 * Note that prior to DataTables 1.9.2 \`data\` was called \`mDataProp\`. The
		 * name change reflects the flexibility of this property and is consistent
		 * with the naming of mRender. If 'mDataProp' is given, then it will still
		 * be used by DataTables, as it automatically maps the old name to the new
		 * if required.
		 *
		 *  @type string|int|function|null
		 *  @default null <i>Use automatically calculated column index</i>
		 *
		 *  @name DataTable.defaults.column.data
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Read table data from objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {value},
		 *    //      "version": {value},
		 *    //      "grade": {value}
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/objects.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform" },
		 *          { "data": "version" },
		 *          { "data": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Read information from deeply nested objects
		 *    // JSON structure for each row:
		 *    //   {
		 *    //      "engine": {value},
		 *    //      "browser": {value},
		 *    //      "platform": {
		 *    //         "inner": {value}
		 *    //      },
		 *    //      "details": [
		 *    //         {value}, {value}
		 *    //      ]
		 *    //   }
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          { "data": "platform.inner" },
		 *          { "data": "details.0" },
		 *          { "data": "details.1" }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`data\` as a function to provide different information for
		 *    // sorting, filtering and display. In this case, currency (price)
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": function ( source, type, val ) {
		 *            if (type === 'set') {
		 *              source.price = val;
		 *              // Store the computed display and filter values for efficiency
		 *              source.price_display = val=="" ? "" : "$"+numberFormat(val);
		 *              source.price_filter  = val=="" ? "" : "$"+numberFormat(val)+" "+val;
		 *              return;
		 *            }
		 *            else if (type === 'display') {
		 *              return source.price_display;
		 *            }
		 *            else if (type === 'filter') {
		 *              return source.price_filter;
		 *            }
		 *            // 'sort', 'type' and undefined all just use the integer
		 *            return source.price;
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using default content
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null,
		 *          "defaultContent": "Click to edit"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using array notation - outputting a list from an array
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "name[, ]"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 */
		"mData": null,
	
	
		/**
		 * This property is the rendering partner to \`data\` and it is suggested that
		 * when you want to manipulate data for display (including filtering,
		 * sorting etc) without altering the underlying data for the table, use this
		 * property. \`render\` can be considered to be the the read only companion to
		 * \`data\` which is read / write (then as such more complex). Like \`data\`
		 * this option can be given in a number of different ways to effect its
		 * behaviour:
		 *
		 * * \`integer\` - treated as an array index for the data source. This is the
		 *   default that DataTables uses (incrementally increased for each column).
		 * * \`string\` - read an object property from the data source. There are
		 *   three 'special' options that can be used in the string to alter how
		 *   DataTables reads the data from the source object:
		 *    * \`.\` - Dotted Javascript notation. Just as you use a \`.\` in
		 *      Javascript to read from nested objects, so to can the options
		 *      specified in \`data\`. For example: \`browser.version\` or
		 *      \`browser.name\`. If your object parameter name contains a period, use
		 *      \`\\\\\` to escape it - i.e. \`first\\\\.name\`.
		 *    * \`[]\` - Array notation. DataTables can automatically combine data
		 *      from and array source, joining the data with the characters provided
		 *      between the two brackets. For example: \`name[, ]\` would provide a
		 *      comma-space separated list from the source array. If no characters
		 *      are provided between the brackets, the original array source is
		 *      returned.
		 *    * \`()\` - Function notation. Adding \`()\` to the end of a parameter will
		 *      execute a function of the name given. For example: \`browser()\` for a
		 *      simple function on the data source, \`browser.version()\` for a
		 *      function in a nested property or even \`browser().version\` to get an
		 *      object property if the function called returns an object.
		 * * \`object\` - use different data for the different data types requested by
		 *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
		 *   of the object is the data type the property refers to and the value can
		 *   defined using an integer, string or function using the same rules as
		 *   \`render\` normally does. Note that an \`_\` option _must_ be specified.
		 *   This is the default value to use if you haven't specified a value for
		 *   the data type requested by DataTables.
		 * * \`function\` - the function given will be executed whenever DataTables
		 *   needs to set or get the data for a cell in the column. The function
		 *   takes three parameters:
		 *    * Parameters:
		 *      * {array|object} The data source for the row (based on \`data\`)
		 *      * {string} The type call data requested - this will be 'filter',
		 *        'display', 'type' or 'sort'.
		 *      * {array|object} The full data source for the row (not based on
		 *        \`data\`)
		 *    * Return:
		 *      * The return value from the function is what will be used for the
		 *        data requested.
		 *
		 *  @type string|int|function|object|null
		 *  @default null Use the data source value.
		 *
		 *  @name DataTable.defaults.column.render
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Create a comma separated list from an array of objects
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "ajaxSource": "sources/deep.txt",
		 *        "columns": [
		 *          { "data": "engine" },
		 *          { "data": "browser" },
		 *          {
		 *            "data": "platform",
		 *            "render": "[, ].name"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Execute a function to obtain data
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": "browserName()"
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // As an object, extracting different data for the different types
		 *    // This would be used with a data source such as:
		 *    //   { "phone": 5552368, "phone_filter": "5552368 555-2368", "phone_display": "555-2368" }
		 *    // Here the \`phone\` integer is used for sorting and type detection, while \`phone_filter\`
		 *    // (which has both forms) is used for filtering for if a user inputs either format, while
		 *    // the formatted phone number is the one that is shown in the table.
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": null, // Use the full data source object for the renderer's source
		 *          "render": {
		 *            "_": "phone",
		 *            "filter": "phone_filter",
		 *            "display": "phone_display"
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Use as a function to create a link from the data source
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "data": "download_link",
		 *          "render": function ( data, type, full ) {
		 *            return '<a href="'+data+'">Download</a>';
		 *          }
		 *        } ]
		 *      } );
		 *    } );
		 */
		"mRender": null,
	
	
		/**
		 * Change the cell type created for the column - either TD cells or TH cells. This
		 * can be useful as TH cells have semantic meaning in the table body, allowing them
		 * to act as a header for a row (you may wish to add scope='row' to the TH elements).
		 *  @type string
		 *  @default td
		 *
		 *  @name DataTable.defaults.column.cellType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Make the first column use TH cells
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [ {
		 *          "targets": [ 0 ],
		 *          "cellType": "th"
		 *        } ]
		 *      } );
		 *    } );
		 */
		"sCellType": "td",
	
	
		/**
		 * Class to give to each cell in this column.
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.class
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "class": "my_class", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "class": "my_class" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sClass": "",
	
		/**
		 * When DataTables calculates the column widths to assign to each column,
		 * it finds the longest string in each column and then constructs a
		 * temporary table and reads the widths from that. The problem with this
		 * is that "mmm" is much wider then "iiii", but the latter is a longer
		 * string - thus the calculation can go wrong (doing it properly and putting
		 * it into an DOM object and measuring that is horribly(!) slow). Thus as
		 * a "work around" we provide this option. It will append its value to the
		 * text that is found to be the longest string for the column - i.e. padding.
		 * Generally you shouldn't need this!
		 *  @type string
		 *  @default <i>Empty string<i>
		 *
		 *  @name DataTable.defaults.column.contentPadding
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "contentPadding": "mmm"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sContentPadding": "",
	
	
		/**
		 * Allows a default value to be given for a column's data, and will be used
		 * whenever a null data source is encountered (this can be because \`data\`
		 * is set to null, or because the data source itself is null).
		 *  @type string
		 *  @default null
		 *
		 *  @name DataTable.defaults.column.defaultContent
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit",
		 *            "targets": [ -1 ]
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          null,
		 *          {
		 *            "data": null,
		 *            "defaultContent": "Edit"
		 *          }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sDefaultContent": null,
	
	
		/**
		 * This parameter is only used in DataTables' server-side processing. It can
		 * be exceptionally useful to know what columns are being displayed on the
		 * client side, and to map these to database fields. When defined, the names
		 * also allow DataTables to reorder information from the server if it comes
		 * back in an unexpected order (i.e. if you switch your columns around on the
		 * client-side, your server-side code does not also need updating).
		 *  @type string
		 *  @default <i>Empty string</i>
		 *
		 *  @name DataTable.defaults.column.name
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "name": "engine", "targets": [ 0 ] },
		 *          { "name": "browser", "targets": [ 1 ] },
		 *          { "name": "platform", "targets": [ 2 ] },
		 *          { "name": "version", "targets": [ 3 ] },
		 *          { "name": "grade", "targets": [ 4 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "name": "engine" },
		 *          { "name": "browser" },
		 *          { "name": "platform" },
		 *          { "name": "version" },
		 *          { "name": "grade" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sName": "",
	
	
		/**
		 * Defines a data source type for the ordering which can be used to read
		 * real-time information from the table (updating the internally cached
		 * version) prior to ordering. This allows ordering to occur on user
		 * editable elements such as form inputs.
		 *  @type string
		 *  @default std
		 *
		 *  @name DataTable.defaults.column.orderDataType
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "orderDataType": "dom-text", "targets": [ 2, 3 ] },
		 *          { "type": "numeric", "targets": [ 3 ] },
		 *          { "orderDataType": "dom-select", "targets": [ 4 ] },
		 *          { "orderDataType": "dom-checkbox", "targets": [ 5 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          null,
		 *          null,
		 *          { "orderDataType": "dom-text" },
		 *          { "orderDataType": "dom-text", "type": "numeric" },
		 *          { "orderDataType": "dom-select" },
		 *          { "orderDataType": "dom-checkbox" }
		 *        ]
		 *      } );
		 *    } );
		 */
		"sSortDataType": "std",
	
	
		/**
		 * The title of this column.
		 *  @type string
		 *  @default null <i>Derived from the 'TH' value for this column in the
		 *    original HTML table.</i>
		 *
		 *  @name DataTable.defaults.column.title
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "title": "My column title", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "title": "My column title" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sTitle": null,
	
	
		/**
		 * The type allows you to specify how the data for this column will be
		 * ordered. Four types (string, numeric, date and html (which will strip
		 * HTML tags before ordering)) are currently available. Note that only date
		 * formats understood by Javascript's Date() object will be accepted as type
		 * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
		 * 'numeric', 'date' or 'html' (by default). Further types can be adding
		 * through plug-ins.
		 *  @type string
		 *  @default null <i>Auto-detected from raw data</i>
		 *
		 *  @name DataTable.defaults.column.type
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "type": "html", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "type": "html" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sType": null,
	
	
		/**
		 * Defining the width of the column, this parameter may take any CSS value
		 * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
		 * been given a specific width through this interface ensuring that the table
		 * remains readable.
		 *  @type string
		 *  @default null <i>Automatic</i>
		 *
		 *  @name DataTable.defaults.column.width
		 *  @dtopt Columns
		 *
		 *  @example
		 *    // Using \`columnDefs\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columnDefs": [
		 *          { "width": "20%", "targets": [ 0 ] }
		 *        ]
		 *      } );
		 *    } );
		 *
		 *  @example
		 *    // Using \`columns\`
		 *    $(document).ready( function() {
		 *      $('#example').dataTable( {
		 *        "columns": [
		 *          { "width": "20%" },
		 *          null,
		 *          null,
		 *          null,
		 *          null
		 *        ]
		 *      } );
		 *    } );
		 */
		"sWidth": null
	};
	
	_fnHungarianMap( DataTable.defaults.column );
	
	
	
	/**
	 * DataTables settings object - this holds all the information needed for a
	 * given table, including configuration, data and current application of the
	 * table options. DataTables does not have a single instance for each DataTable
	 * with the settings attached to that instance, but rather instances of the
	 * DataTable "class" are created on-the-fly as needed (typically by a
	 * $().dataTable() call) and the settings object is then applied to that
	 * instance.
	 *
	 * Note that this object is related to {@link DataTable.defaults} but this
	 * one is the internal data store for DataTables's cache of columns. It should
	 * NOT be manipulated outside of DataTables. Any configuration should be done
	 * through the initialisation options.
	 *  @namespace
	 *  @todo Really should attach the settings object to individual instances so we
	 *    don't need to create new instances on each $().dataTable() call (if the
	 *    table already exists). It would also save passing oSettings around and
	 *    into every single function. However, this is a very significant
	 *    architecture change for DataTables and will almost certainly break
	 *    backwards compatibility with older installations. This is something that
	 *    will be done in 2.0.
	 */
	DataTable.models.oSettings = {
		/**
		 * Primary features of DataTables and their enablement state.
		 *  @namespace
		 */
		"oFeatures": {
	
			/**
			 * Flag to say if DataTables should automatically try to calculate the
			 * optimum table and columns widths (true) or not (false).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bAutoWidth": null,
	
			/**
			 * Delay the creation of TR and TD elements until they are actually
			 * needed by a driven page draw. This can give a significant speed
			 * increase for Ajax source and Javascript source data, but makes no
			 * difference at all for DOM and server-side processing tables.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bDeferRender": null,
	
			/**
			 * Enable filtering on the table or not. Note that if this is disabled
			 * then there is no filtering at all on the table, including fnFilter.
			 * To just remove the filtering input use sDom and remove the 'f' option.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bFilter": null,
	
			/**
			 * Table information element (the 'Showing x of y records' div) enable
			 * flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bInfo": null,
	
			/**
			 * Present a user control allowing the end user to change the page size
			 * when pagination is enabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bLengthChange": null,
	
			/**
			 * Pagination enabled or not. Note that if this is disabled then length
			 * changing must also be disabled.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bPaginate": null,
	
			/**
			 * Processing indicator enable flag whenever DataTables is enacting a
			 * user request - typically an Ajax request for server-side processing.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bProcessing": null,
	
			/**
			 * Server-side processing enabled flag - when enabled DataTables will
			 * get all data from the server for every draw - there is no filtering,
			 * sorting or paging done on the client-side.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bServerSide": null,
	
			/**
			 * Sorting enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSort": null,
	
			/**
			 * Multi-column sorting
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortMulti": null,
	
			/**
			 * Apply a class to the columns which are being sorted to provide a
			 * visual highlight or not. This can slow things down when enabled since
			 * there is a lot of DOM interaction.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bSortClasses": null,
	
			/**
			 * State saving enablement flag.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bStateSave": null
		},
	
	
		/**
		 * Scrolling settings for a table.
		 *  @namespace
		 */
		"oScroll": {
			/**
			 * When the table is shorter in height than sScrollY, collapse the
			 * table container down to the height of the table (when true).
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type boolean
			 */
			"bCollapse": null,
	
			/**
			 * Width of the scrollbar for the web-browser's platform. Calculated
			 * during table initialisation.
			 *  @type int
			 *  @default 0
			 */
			"iBarWidth": 0,
	
			/**
			 * Viewport width for horizontal scrolling. Horizontal scrolling is
			 * disabled if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sX": null,
	
			/**
			 * Width to expand the table to when using x-scrolling. Typically you
			 * should not need to use this.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 *  @deprecated
			 */
			"sXInner": null,
	
			/**
			 * Viewport height for vertical scrolling. Vertical scrolling is disabled
			 * if an empty string.
			 * Note that this parameter will be set by the initialisation routine. To
			 * set a default use {@link DataTable.defaults}.
			 *  @type string
			 */
			"sY": null
		},
	
		/**
		 * Language information for the table.
		 *  @namespace
		 *  @extends DataTable.defaults.oLanguage
		 */
		"oLanguage": {
			/**
			 * Information callback function. See
			 * {@link DataTable.defaults.fnInfoCallback}
			 *  @type function
			 *  @default null
			 */
			"fnInfoCallback": null
		},
	
		/**
		 * Browser support parameters
		 *  @namespace
		 */
		"oBrowser": {
			/**
			 * Indicate if the browser incorrectly calculates width:100% inside a
			 * scrolling element (IE6/7)
			 *  @type boolean
			 *  @default false
			 */
			"bScrollOversize": false,
	
			/**
			 * Determine if the vertical scrollbar is on the right or left of the
			 * scrolling container - needed for rtl language layout, although not
			 * all browsers move the scrollbar (Safari).
			 *  @type boolean
			 *  @default false
			 */
			"bScrollbarLeft": false,
	
			/**
			 * Flag for if \`getBoundingClientRect\` is fully supported or not
			 *  @type boolean
			 *  @default false
			 */
			"bBounding": false,
	
			/**
			 * Browser scrollbar width
			 *  @type integer
			 *  @default 0
			 */
			"barWidth": 0
		},
	
	
		"ajax": null,
	
	
		/**
		 * Array referencing the nodes which are used for the features. The
		 * parameters of this object match what is allowed by sDom - i.e.
		 *   <ul>
		 *     <li>'l' - Length changing</li>
		 *     <li>'f' - Filtering input</li>
		 *     <li>'t' - The table!</li>
		 *     <li>'i' - Information</li>
		 *     <li>'p' - Pagination</li>
		 *     <li>'r' - pRocessing</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aanFeatures": [],
	
		/**
		 * Store data information - see {@link DataTable.models.oRow} for detailed
		 * information.
		 *  @type array
		 *  @default []
		 */
		"aoData": [],
	
		/**
		 * Array of indexes which are in the current display (after filtering etc)
		 *  @type array
		 *  @default []
		 */
		"aiDisplay": [],
	
		/**
		 * Array of indexes for display - no filtering
		 *  @type array
		 *  @default []
		 */
		"aiDisplayMaster": [],
	
		/**
		 * Map of row ids to data indexes
		 *  @type object
		 *  @default {}
		 */
		"aIds": {},
	
		/**
		 * Store information about each column that is in use
		 *  @type array
		 *  @default []
		 */
		"aoColumns": [],
	
		/**
		 * Store information about the table's header
		 *  @type array
		 *  @default []
		 */
		"aoHeader": [],
	
		/**
		 * Store information about the table's footer
		 *  @type array
		 *  @default []
		 */
		"aoFooter": [],
	
		/**
		 * Store the applied global search information in case we want to force a
		 * research or compare the old search to a new one.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @namespace
		 *  @extends DataTable.models.oSearch
		 */
		"oPreviousSearch": {},
	
		/**
		 * Store the applied search for each column - see
		 * {@link DataTable.models.oSearch} for the format that is used for the
		 * filtering information for each column.
		 *  @type array
		 *  @default []
		 */
		"aoPreSearchCols": [],
	
		/**
		 * Sorting that is applied to the table. Note that the inner arrays are
		 * used in the following manner:
		 * <ul>
		 *   <li>Index 0 - column number</li>
		 *   <li>Index 1 - current sorting direction</li>
		 * </ul>
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @todo These inner arrays should really be objects
		 */
		"aaSorting": null,
	
		/**
		 * Sorting that is always applied to the table (i.e. prefixed in front of
		 * aaSorting).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aaSortingFixed": [],
	
		/**
		 * Classes to use for the striping of a table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"asStripeClasses": null,
	
		/**
		 * If restoring a table - we should restore its striping classes as well
		 *  @type array
		 *  @default []
		 */
		"asDestroyStripes": [],
	
		/**
		 * If restoring a table - we should restore its width
		 *  @type int
		 *  @default 0
		 */
		"sDestroyWidth": 0,
	
		/**
		 * Callback functions array for every time a row is inserted (i.e. on a draw).
		 *  @type array
		 *  @default []
		 */
		"aoRowCallback": [],
	
		/**
		 * Callback functions for the header on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoHeaderCallback": [],
	
		/**
		 * Callback function for the footer on each draw.
		 *  @type array
		 *  @default []
		 */
		"aoFooterCallback": [],
	
		/**
		 * Array of callback functions for draw callback functions
		 *  @type array
		 *  @default []
		 */
		"aoDrawCallback": [],
	
		/**
		 * Array of callback functions for row created function
		 *  @type array
		 *  @default []
		 */
		"aoRowCreatedCallback": [],
	
		/**
		 * Callback functions for just before the table is redrawn. A return of
		 * false will be used to cancel the draw.
		 *  @type array
		 *  @default []
		 */
		"aoPreDrawCallback": [],
	
		/**
		 * Callback functions for when the table has been initialised.
		 *  @type array
		 *  @default []
		 */
		"aoInitComplete": [],
	
	
		/**
		 * Callbacks for modifying the settings to be stored for state saving, prior to
		 * saving state.
		 *  @type array
		 *  @default []
		 */
		"aoStateSaveParams": [],
	
		/**
		 * Callbacks for modifying the settings that have been stored for state saving
		 * prior to using the stored values to restore the state.
		 *  @type array
		 *  @default []
		 */
		"aoStateLoadParams": [],
	
		/**
		 * Callbacks for operating on the settings object once the saved state has been
		 * loaded
		 *  @type array
		 *  @default []
		 */
		"aoStateLoaded": [],
	
		/**
		 * Cache the table ID for quick access
		 *  @type string
		 *  @default <i>Empty string</i>
		 */
		"sTableId": "",
	
		/**
		 * The TABLE node for the main table
		 *  @type node
		 *  @default null
		 */
		"nTable": null,
	
		/**
		 * Permanent ref to the thead element
		 *  @type node
		 *  @default null
		 */
		"nTHead": null,
	
		/**
		 * Permanent ref to the tfoot element - if it exists
		 *  @type node
		 *  @default null
		 */
		"nTFoot": null,
	
		/**
		 * Permanent ref to the tbody element
		 *  @type node
		 *  @default null
		 */
		"nTBody": null,
	
		/**
		 * Cache the wrapper node (contains all DataTables controlled elements)
		 *  @type node
		 *  @default null
		 */
		"nTableWrapper": null,
	
		/**
		 * Indicate if when using server-side processing the loading of data
		 * should be deferred until the second draw.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 *  @default false
		 */
		"bDeferLoading": false,
	
		/**
		 * Indicate if all required information has been read in
		 *  @type boolean
		 *  @default false
		 */
		"bInitialised": false,
	
		/**
		 * Information about open rows. Each object in the array has the parameters
		 * 'nTr' and 'nParent'
		 *  @type array
		 *  @default []
		 */
		"aoOpenRows": [],
	
		/**
		 * Dictate the positioning of DataTables' control elements - see
		 * {@link DataTable.model.oInit.sDom}.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sDom": null,
	
		/**
		 * Search delay (in mS)
		 *  @type integer
		 *  @default null
		 */
		"searchDelay": null,
	
		/**
		 * Which type of pagination should be used.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default two_button
		 */
		"sPaginationType": "two_button",
	
		/**
		 * The state duration (for \`stateSave\`) in seconds.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type int
		 *  @default 0
		 */
		"iStateDuration": 0,
	
		/**
		 * Array of callback functions for state saving. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the JSON string to save that has been thus far created. Returns
		 *       a JSON string to be inserted into a json object
		 *       (i.e. '"param": [ 0, 1, 2]')</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateSave": [],
	
		/**
		 * Array of callback functions for state loading. Each array element is an
		 * object with the following parameters:
		 *   <ul>
		 *     <li>function:fn - function to call. Takes two parameters, oSettings
		 *       and the object stored. May return false to cancel state loading</li>
		 *     <li>string:sName - name of callback</li>
		 *   </ul>
		 *  @type array
		 *  @default []
		 */
		"aoStateLoad": [],
	
		/**
		 * State that was saved. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oSavedState": null,
	
		/**
		 * State that was loaded. Useful for back reference
		 *  @type object
		 *  @default null
		 */
		"oLoadedState": null,
	
		/**
		 * Source url for AJAX data for the table.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 *  @default null
		 */
		"sAjaxSource": null,
	
		/**
		 * Property from a given object from which to read the table data from. This
		 * can be an empty string (when not server-side processing), in which case
		 * it is  assumed an an array is given directly.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sAjaxDataProp": null,
	
		/**
		 * The last jQuery XHR object that was used for server-side data gathering.
		 * This can be used for working with the XHR information in one of the
		 * callbacks
		 *  @type object
		 *  @default null
		 */
		"jqXHR": null,
	
		/**
		 * JSON returned from the server in the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"json": undefined,
	
		/**
		 * Data submitted as part of the last Ajax request
		 *  @type object
		 *  @default undefined
		 */
		"oAjaxData": undefined,
	
		/**
		 * Function to get the server-side data.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnServerData": null,
	
		/**
		 * Functions which are called prior to sending an Ajax request so extra
		 * parameters can easily be sent to the server
		 *  @type array
		 *  @default []
		 */
		"aoServerParams": [],
	
		/**
		 * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
		 * required).
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type string
		 */
		"sServerMethod": null,
	
		/**
		 * Format numbers for display.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type function
		 */
		"fnFormatNumber": null,
	
		/**
		 * List of options that can be used for the user selectable length menu.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type array
		 *  @default []
		 */
		"aLengthMenu": null,
	
		/**
		 * Counter for the draws that the table does. Also used as a tracker for
		 * server-side processing
		 *  @type int
		 *  @default 0
		 */
		"iDraw": 0,
	
		/**
		 * Indicate if a redraw is being done - useful for Ajax
		 *  @type boolean
		 *  @default false
		 */
		"bDrawing": false,
	
		/**
		 * Draw index (iDraw) of the last error when parsing the returned data
		 *  @type int
		 *  @default -1
		 */
		"iDrawError": -1,
	
		/**
		 * Paging display length
		 *  @type int
		 *  @default 10
		 */
		"_iDisplayLength": 10,
	
		/**
		 * Paging start point - aiDisplay index
		 *  @type int
		 *  @default 0
		 */
		"_iDisplayStart": 0,
	
		/**
		 * Server-side processing - number of records in the result set
		 * (i.e. before filtering), Use fnRecordsTotal rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type int
		 *  @default 0
		 *  @private
		 */
		"_iRecordsTotal": 0,
	
		/**
		 * Server-side processing - number of records in the current display set
		 * (i.e. after filtering). Use fnRecordsDisplay rather than
		 * this property to get the value of the number of records, regardless of
		 * the server-side processing setting.
		 *  @type boolean
		 *  @default 0
		 *  @private
		 */
		"_iRecordsDisplay": 0,
	
		/**
		 * The classes to use for the table
		 *  @type object
		 *  @default {}
		 */
		"oClasses": {},
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if filtering has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bFiltered": false,
	
		/**
		 * Flag attached to the settings object so you can check in the draw
		 * callback if sorting has been done in the draw. Deprecated in favour of
		 * events.
		 *  @type boolean
		 *  @default false
		 *  @deprecated
		 */
		"bSorted": false,
	
		/**
		 * Indicate that if multiple rows are in the header and there is more than
		 * one unique cell per column, if the top one (true) or bottom one (false)
		 * should be used for sorting / title by DataTables.
		 * Note that this parameter will be set by the initialisation routine. To
		 * set a default use {@link DataTable.defaults}.
		 *  @type boolean
		 */
		"bSortCellsTop": null,
	
		/**
		 * Initialisation object that is used for the table
		 *  @type object
		 *  @default null
		 */
		"oInit": null,
	
		/**
		 * Destroy callback functions - for plug-ins to attach themselves to the
		 * destroy so they can clean up markup and events.
		 *  @type array
		 *  @default []
		 */
		"aoDestroyCallback": [],
	
	
		/**
		 * Get the number of records in the current record set, before filtering
		 *  @type function
		 */
		"fnRecordsTotal": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsTotal * 1 :
				this.aiDisplayMaster.length;
		},
	
		/**
		 * Get the number of records in the current record set, after filtering
		 *  @type function
		 */
		"fnRecordsDisplay": function ()
		{
			return _fnDataSource( this ) == 'ssp' ?
				this._iRecordsDisplay * 1 :
				this.aiDisplay.length;
		},
	
		/**
		 * Get the display end point - aiDisplay index
		 *  @type function
		 */
		"fnDisplayEnd": function ()
		{
			var
				len      = this._iDisplayLength,
				start    = this._iDisplayStart,
				calc     = start + len,
				records  = this.aiDisplay.length,
				features = this.oFeatures,
				paginate = features.bPaginate;
	
			if ( features.bServerSide ) {
				return paginate === false || len === -1 ?
					start + records :
					Math.min( start+len, this._iRecordsDisplay );
			}
			else {
				return ! paginate || calc>records || len===-1 ?
					records :
					calc;
			}
		},
	
		/**
		 * The DataTables object for this table
		 *  @type object
		 *  @default null
		 */
		"oInstance": null,
	
		/**
		 * Unique identifier for each instance of the DataTables object. If there
		 * is an ID on the table node, then it takes that value, otherwise an
		 * incrementing internal counter is used.
		 *  @type string
		 *  @default null
		 */
		"sInstance": null,
	
		/**
		 * tabindex attribute value that is added to DataTables control elements, allowing
		 * keyboard navigation of the table and its controls.
		 */
		"iTabIndex": 0,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollHead": null,
	
		/**
		 * DIV container for the footer scrolling table if scrolling
		 */
		"nScrollFoot": null,
	
		/**
		 * Last applied sort
		 *  @type array
		 *  @default []
		 */
		"aLastSort": [],
	
		/**
		 * Stored plug-in instances
		 *  @type object
		 *  @default {}
		 */
		"oPlugins": {},
	
		/**
		 * Function used to get a row's id from the row's data
		 *  @type function
		 *  @default null
		 */
		"rowIdFn": null,
	
		/**
		 * Data location where to store a row's id
		 *  @type string
		 *  @default null
		 */
		"rowId": null
	};

	/**
	 * Extension object for DataTables that is used to provide all extension
	 * options.
	 *
	 * Note that the \`DataTable.ext\` object is available through
	 * \`jQuery.fn.dataTable.ext\` where it may be accessed and manipulated. It is
	 * also aliased to \`jQuery.fn.dataTableExt\` for historic reasons.
	 *  @namespace
	 *  @extends DataTable.models.ext
	 */
	
	
	/**
	 * DataTables extensions
	 * 
	 * This namespace acts as a collection area for plug-ins that can be used to
	 * extend DataTables capabilities. Indeed many of the build in methods
	 * use this method to provide their own capabilities (sorting methods for
	 * example).
	 *
	 * Note that this namespace is aliased to \`jQuery.fn.dataTableExt\` for legacy
	 * reasons
	 *
	 *  @namespace
	 */
	DataTable.ext = _ext = {
		/**
		 * Buttons. For use with the Buttons extension for DataTables. This is
		 * defined here so other extensions can define buttons regardless of load
		 * order. It is _not_ used by DataTables core.
		 *
		 *  @type object
		 *  @default {}
		 */
		buttons: {},
	
	
		/**
		 * Element class names
		 *
		 *  @type object
		 *  @default {}
		 */
		classes: {},
	
	
		/**
		 * DataTables build type (expanded by the download builder)
		 *
		 *  @type string
		 */
		builder: "-source-",
	
	
		/**
		 * Error reporting.
		 * 
		 * How should DataTables report an error. Can take the value 'alert',
		 * 'throw', 'none' or a function.
		 *
		 *  @type string|function
		 *  @default alert
		 */
		errMode: "alert",
	
	
		/**
		 * Feature plug-ins.
		 * 
		 * This is an array of objects which describe the feature plug-ins that are
		 * available to DataTables. These feature plug-ins are then available for
		 * use through the \`dom\` initialisation option.
		 * 
		 * Each feature plug-in is described by an object which must have the
		 * following properties:
		 * 
		 * * \`fnInit\` - function that is used to initialise the plug-in,
		 * * \`cFeature\` - a character so the feature can be enabled by the \`dom\`
		 *   instillation option. This is case sensitive.
		 *
		 * The \`fnInit\` function has the following input parameters:
		 *
		 * 1. \`{object}\` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 *
		 * And the following return is expected:
		 * 
		 * * {node|null} The element which contains your feature. Note that the
		 *   return may also be void if your plug-in does not require to inject any
		 *   DOM elements into DataTables control (\`dom\`) - for example this might
		 *   be useful when developing a plug-in which allows table control via
		 *   keyboard entry
		 *
		 *  @type array
		 *
		 *  @example
		 *    $.fn.dataTable.ext.features.push( {
		 *      "fnInit": function( oSettings ) {
		 *        return new TableTools( { "oDTSettings": oSettings } );
		 *      },
		 *      "cFeature": "T"
		 *    } );
		 */
		feature: [],
	
	
		/**
		 * Row searching.
		 * 
		 * This method of searching is complimentary to the default type based
		 * searching, and a lot more comprehensive as it allows you complete control
		 * over the searching logic. Each element in this array is a function
		 * (parameters described below) that is called for every row in the table,
		 * and your logic decides if it should be included in the searching data set
		 * or not.
		 *
		 * Searching functions have the following input parameters:
		 *
		 * 1. \`{object}\` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. \`{array|object}\` Data for the row to be processed (same as the
		 *    original format that was passed in as the data source, or an array
		 *    from a DOM data source
		 * 3. \`{int}\` Row index ({@link DataTable.models.oSettings.aoData}), which
		 *    can be useful to retrieve the \`TR\` element if you need DOM interaction.
		 *
		 * And the following return is expected:
		 *
		 * * {boolean} Include the row in the searched result set (true) or not
		 *   (false)
		 *
		 * Note that as with the main search ability in DataTables, technically this
		 * is "filtering", since it is subtractive. However, for consistency in
		 * naming we call it searching here.
		 *
		 *  @type array
		 *  @default []
		 *
		 *  @example
		 *    // The following example shows custom search being applied to the
		 *    // fourth column (i.e. the data[3] index) based on two input values
		 *    // from the end-user, matching the data in a certain range.
		 *    $.fn.dataTable.ext.search.push(
		 *      function( settings, data, dataIndex ) {
		 *        var min = document.getElementById('min').value * 1;
		 *        var max = document.getElementById('max').value * 1;
		 *        var version = data[3] == "-" ? 0 : data[3]*1;
		 *
		 *        if ( min == "" && max == "" ) {
		 *          return true;
		 *        }
		 *        else if ( min == "" && version < max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && "" == max ) {
		 *          return true;
		 *        }
		 *        else if ( min < version && version < max ) {
		 *          return true;
		 *        }
		 *        return false;
		 *      }
		 *    );
		 */
		search: [],
	
	
		/**
		 * Selector extensions
		 *
		 * The \`selector\` option can be used to extend the options available for the
		 * selector modifier options (\`selector-modifier\` object data type) that
		 * each of the three built in selector types offer (row, column and cell +
		 * their plural counterparts). For example the Select extension uses this
		 * mechanism to provide an option to select only rows, columns and cells
		 * that have been marked as selected by the end user (\`{selected: true}\`),
		 * which can be used in conjunction with the existing built in selector
		 * options.
		 *
		 * Each property is an array to which functions can be pushed. The functions
		 * take three attributes:
		 *
		 * * Settings object for the host table
		 * * Options object (\`selector-modifier\` object type)
		 * * Array of selected item indexes
		 *
		 * The return is an array of the resulting item indexes after the custom
		 * selector has been applied.
		 *
		 *  @type object
		 */
		selector: {
			cell: [],
			column: [],
			row: []
		},
	
	
		/**
		 * Internal functions, exposed for used in plug-ins.
		 * 
		 * Please note that you should not need to use the internal methods for
		 * anything other than a plug-in (and even then, try to avoid if possible).
		 * The internal function may change between releases.
		 *
		 *  @type object
		 *  @default {}
		 */
		internal: {},
	
	
		/**
		 * Legacy configuration options. Enable and disable legacy options that
		 * are available in DataTables.
		 *
		 *  @type object
		 */
		legacy: {
			/**
			 * Enable / disable DataTables 1.9 compatible server-side processing
			 * requests
			 *
			 *  @type boolean
			 *  @default null
			 */
			ajax: null
		},
	
	
		/**
		 * Pagination plug-in methods.
		 * 
		 * Each entry in this object is a function and defines which buttons should
		 * be shown by the pagination rendering method that is used for the table:
		 * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
		 * buttons are displayed in the document, while the functions here tell it
		 * what buttons to display. This is done by returning an array of button
		 * descriptions (what each button will do).
		 *
		 * Pagination types (the four built in options and any additional plug-in
		 * options defined here) can be used through the \`paginationType\`
		 * initialisation parameter.
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. \`{int} page\` The current page index
		 * 2. \`{int} pages\` The number of pages in the table
		 *
		 * Each function is expected to return an array where each element of the
		 * array can be one of:
		 *
		 * * \`first\` - Jump to first page when activated
		 * * \`last\` - Jump to last page when activated
		 * * \`previous\` - Show previous page when activated
		 * * \`next\` - Show next page when activated
		 * * \`{int}\` - Show page of the index given
		 * * \`{array}\` - A nested array containing the above elements to add a
		 *   containing 'DIV' element (might be useful for styling).
		 *
		 * Note that DataTables v1.9- used this object slightly differently whereby
		 * an object with two functions would be defined for each plug-in. That
		 * ability is still supported by DataTables 1.10+ to provide backwards
		 * compatibility, but this option of use is now decremented and no longer
		 * documented in DataTables 1.10+.
		 *
		 *  @type object
		 *  @default {}
		 *
		 *  @example
		 *    // Show previous, next and current page buttons only
		 *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
		 *      return [ 'previous', page, 'next' ];
		 *    };
		 */
		pager: {},
	
	
		renderer: {
			pageButton: {},
			header: {}
		},
	
	
		/**
		 * Ordering plug-ins - custom data source
		 * 
		 * The extension options for ordering of data available here is complimentary
		 * to the default type based ordering that DataTables typically uses. It
		 * allows much greater control over the the data that is being used to
		 * order a column, but is necessarily therefore more complex.
		 * 
		 * This type of ordering is useful if you want to do ordering based on data
		 * live from the DOM (for example the contents of an 'input' element) rather
		 * than just the static string that DataTables knows of.
		 * 
		 * The way these plug-ins work is that you create an array of the values you
		 * wish to be ordering for the column in question and then return that
		 * array. The data in the array much be in the index order of the rows in
		 * the table (not the currently ordering order!). Which order data gathering
		 * function is run here depends on the \`dt-init columns.orderDataType\`
		 * parameter that is used for the column (if any).
		 *
		 * The functions defined take two parameters:
		 *
		 * 1. \`{object}\` DataTables settings object: see
		 *    {@link DataTable.models.oSettings}
		 * 2. \`{int}\` Target column index
		 *
		 * Each function is expected to return an array:
		 *
		 * * \`{array}\` Data for the column to be ordering upon
		 *
		 *  @type array
		 *
		 *  @example
		 *    // Ordering using \`input\` node values
		 *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
		 *    {
		 *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
		 *        return $('input', td).val();
		 *      } );
		 *    }
		 */
		order: {},
	
	
		/**
		 * Type based plug-ins.
		 *
		 * Each column in DataTables has a type assigned to it, either by automatic
		 * detection or by direct assignment using the \`type\` option for the column.
		 * The type of a column will effect how it is ordering and search (plug-ins
		 * can also make use of the column type if required).
		 *
		 * @namespace
		 */
		type: {
			/**
			 * Type detection functions.
			 *
			 * The functions defined in this object are used to automatically detect
			 * a column's type, making initialisation of DataTables super easy, even
			 * when complex data is in the table.
			 *
			 * The functions defined take two parameters:
			 *
		     *  1. \`{*}\` Data from the column cell to be analysed
		     *  2. \`{settings}\` DataTables settings object. This can be used to
		     *     perform context specific type detection - for example detection
		     *     based on language settings such as using a comma for a decimal
		     *     place. Generally speaking the options from the settings will not
		     *     be required
			 *
			 * Each function is expected to return:
			 *
			 * * \`{string|null}\` Data type detected, or null if unknown (and thus
			 *   pass it on to the other type detection functions.
			 *
			 *  @type array
			 *
			 *  @example
			 *    // Currency type detection plug-in:
			 *    $.fn.dataTable.ext.type.detect.push(
			 *      function ( data, settings ) {
			 *        // Check the numeric part
			 *        if ( ! data.substring(1).match(/[0-9]/) ) {
			 *          return null;
			 *        }
			 *
			 *        // Check prefixed by currency
			 *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
			 *          return 'currency';
			 *        }
			 *        return null;
			 *      }
			 *    );
			 */
			detect: [],
	
	
			/**
			 * Type based search formatting.
			 *
			 * The type based searching functions can be used to pre-format the
			 * data to be search on. For example, it can be used to strip HTML
			 * tags or to de-format telephone numbers for numeric only searching.
			 *
			 * Note that is a search is not defined for a column of a given type,
			 * no search formatting will be performed.
			 * 
			 * Pre-processing of searching data plug-ins - When you assign the sType
			 * for a column (or have it automatically detected for you by DataTables
			 * or a type detection plug-in), you will typically be using this for
			 * custom sorting, but it can also be used to provide custom searching
			 * by allowing you to pre-processing the data and returning the data in
			 * the format that should be searched upon. This is done by adding
			 * functions this object with a parameter name which matches the sType
			 * for that target column. This is the corollary of <i>afnSortData</i>
			 * for searching data.
			 *
			 * The functions defined take a single parameter:
			 *
		     *  1. \`{*}\` Data from the column cell to be prepared for searching
			 *
			 * Each function is expected to return:
			 *
			 * * \`{string|null}\` Formatted string that will be used for the searching.
			 *
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
			 *      return d.replace(/\\n/g," ").replace( /<.*?>/g, "" );
			 *    }
			 */
			search: {},
	
	
			/**
			 * Type based ordering.
			 *
			 * The column type tells DataTables what ordering to apply to the table
			 * when a column is sorted upon. The order for each type that is defined,
			 * is defined by the functions available in this object.
			 *
			 * Each ordering option can be described by three properties added to
			 * this object:
			 *
			 * * \`{type}-pre\` - Pre-formatting function
			 * * \`{type}-asc\` - Ascending order function
			 * * \`{type}-desc\` - Descending order function
			 *
			 * All three can be used together, only \`{type}-pre\` or only
			 * \`{type}-asc\` and \`{type}-desc\` together. It is generally recommended
			 * that only \`{type}-pre\` is used, as this provides the optimal
			 * implementation in terms of speed, although the others are provided
			 * for compatibility with existing Javascript sort functions.
			 *
			 * \`{type}-pre\`: Functions defined take a single parameter:
			 *
		     *  1. \`{*}\` Data from the column cell to be prepared for ordering
			 *
			 * And return:
			 *
			 * * \`{*}\` Data to be sorted upon
			 *
			 * \`{type}-asc\` and \`{type}-desc\`: Functions are typical Javascript sort
			 * functions, taking two parameters:
			 *
		     *  1. \`{*}\` Data to compare to the second parameter
		     *  2. \`{*}\` Data to compare to the first parameter
			 *
			 * And returning:
			 *
			 * * \`{*}\` Ordering match: <0 if first parameter should be sorted lower
			 *   than the second parameter, ===0 if the two parameters are equal and
			 *   >0 if the first parameter should be sorted height than the second
			 *   parameter.
			 * 
			 *  @type object
			 *  @default {}
			 *
			 *  @example
			 *    // Numeric ordering of formatted numbers with a pre-formatter
			 *    $.extend( $.fn.dataTable.ext.type.order, {
			 *      "string-pre": function(x) {
			 *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\\d\\-\\.]/g, "" );
			 *        return parseFloat( a );
			 *      }
			 *    } );
			 *
			 *  @example
			 *    // Case-sensitive string ordering, with no pre-formatting method
			 *    $.extend( $.fn.dataTable.ext.order, {
			 *      "string-case-asc": function(x,y) {
			 *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
			 *      },
			 *      "string-case-desc": function(x,y) {
			 *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
			 *      }
			 *    } );
			 */
			order: {}
		},
	
		/**
		 * Unique DataTables instance counter
		 *
		 * @type int
		 * @private
		 */
		_unique: 0,
	
	
		//
		// Depreciated
		// The following properties are retained for backwards compatibility only.
		// The should not be used in new projects and will be removed in a future
		// version
		//
	
		/**
		 * Version check function.
		 *  @type function
		 *  @depreciated Since 1.10
		 */
		fnVersionCheck: DataTable.fnVersionCheck,
	
	
		/**
		 * Index for what 'this' index API functions should use
		 *  @type int
		 *  @deprecated Since v1.10
		 */
		iApiIndex: 0,
	
	
		/**
		 * jQuery UI class container
		 *  @type object
		 *  @deprecated Since v1.10
		 */
		oJUIClasses: {},
	
	
		/**
		 * Software version
		 *  @type string
		 *  @deprecated Since v1.10
		 */
		sVersion: DataTable.version
	};
	
	
	//
	// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts
	//
	$.extend( _ext, {
		afnFiltering: _ext.search,
		aTypes:       _ext.type.detect,
		ofnSearch:    _ext.type.search,
		oSort:        _ext.type.order,
		afnSortData:  _ext.order,
		aoFeatures:   _ext.feature,
		oApi:         _ext.internal,
		oStdClasses:  _ext.classes,
		oPagination:  _ext.pager
	} );
	
	
	$.extend( DataTable.ext.classes, {
		"sTable": "dataTable",
		"sNoFooter": "no-footer",
	
		/* Paging buttons */
		"sPageButton": "paginate_button",
		"sPageButtonActive": "current",
		"sPageButtonDisabled": "disabled",
	
		/* Striping classes */
		"sStripeOdd": "odd",
		"sStripeEven": "even",
	
		/* Empty row */
		"sRowEmpty": "dataTables_empty",
	
		/* Features */
		"sWrapper": "dataTables_wrapper",
		"sFilter": "dataTables_filter",
		"sInfo": "dataTables_info",
		"sPaging": "dataTables_paginate paging_", /* Note that the type is postfixed */
		"sLength": "dataTables_length",
		"sProcessing": "dataTables_processing",
	
		/* Sorting */
		"sSortAsc": "sorting_asc",
		"sSortDesc": "sorting_desc",
		"sSortable": "sorting", /* Sortable in both directions */
		"sSortableAsc": "sorting_desc_disabled",
		"sSortableDesc": "sorting_asc_disabled",
		"sSortableNone": "sorting_disabled",
		"sSortColumn": "sorting_", /* Note that an int is postfixed for the sorting order */
	
		/* Filtering */
		"sFilterInput": "",
	
		/* Page length */
		"sLengthSelect": "",
	
		/* Scrolling */
		"sScrollWrapper": "dataTables_scroll",
		"sScrollHead": "dataTables_scrollHead",
		"sScrollHeadInner": "dataTables_scrollHeadInner",
		"sScrollBody": "dataTables_scrollBody",
		"sScrollFoot": "dataTables_scrollFoot",
		"sScrollFootInner": "dataTables_scrollFootInner",
	
		/* Misc */
		"sHeaderTH": "",
		"sFooterTH": "",
	
		// Deprecated
		"sSortJUIAsc": "",
		"sSortJUIDesc": "",
		"sSortJUI": "",
		"sSortJUIAscAllowed": "",
		"sSortJUIDescAllowed": "",
		"sSortJUIWrapper": "",
		"sSortIcon": "",
		"sJUIHeader": "",
		"sJUIFooter": ""
	} );
	
	
	var extPagination = DataTable.ext.pager;
	
	function _numbers ( page, pages ) {
		var
			numbers = [],
			buttons = extPagination.numbers_length,
			half = Math.floor( buttons / 2 ),
			i = 1;
	
		if ( pages <= buttons ) {
			numbers = _range( 0, pages );
		}
		else if ( page <= half ) {
			numbers = _range( 0, buttons-2 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
		}
		else if ( page >= pages - 1 - half ) {
			numbers = _range( pages-(buttons-2), pages );
			numbers.splice( 0, 0, 'ellipsis' ); // no unshift in ie6
			numbers.splice( 0, 0, 0 );
		}
		else {
			numbers = _range( page-half+2, page+half-1 );
			numbers.push( 'ellipsis' );
			numbers.push( pages-1 );
			numbers.splice( 0, 0, 'ellipsis' );
			numbers.splice( 0, 0, 0 );
		}
	
		numbers.DT_el = 'span';
		return numbers;
	}
	
	
	$.extend( extPagination, {
		simple: function ( page, pages ) {
			return [ 'previous', 'next' ];
		},
	
		full: function ( page, pages ) {
			return [  'first', 'previous', 'next', 'last' ];
		},
	
		numbers: function ( page, pages ) {
			return [ _numbers(page, pages) ];
		},
	
		simple_numbers: function ( page, pages ) {
			return [ 'previous', _numbers(page, pages), 'next' ];
		},
	
		full_numbers: function ( page, pages ) {
			return [ 'first', 'previous', _numbers(page, pages), 'next', 'last' ];
		},
		
		first_last_numbers: function (page, pages) {
	 		return ['first', _numbers(page, pages), 'last'];
	 	},
	
		// For testing and plug-ins to use
		_numbers: _numbers,
	
		// Number of number buttons (including ellipsis) to show. _Must be odd!_
		numbers_length: 7
	} );
	
	
	$.extend( true, DataTable.ext.renderer, {
		pageButton: {
			_: function ( settings, host, idx, buttons, page, pages ) {
				var classes = settings.oClasses;
				var lang = settings.oLanguage.oPaginate;
				var aria = settings.oLanguage.oAria.paginate || {};
				var btnDisplay, btnClass, counter=0;
	
				var attach = function( container, buttons ) {
					var i, ien, node, button, tabIndex;
					var disabledClass = classes.sPageButtonDisabled;
					var clickHandler = function ( e ) {
						_fnPageChange( settings, e.data.action, true );
					};
	
					for ( i=0, ien=buttons.length ; i<ien ; i++ ) {
						button = buttons[i];
	
						if ( Array.isArray( button ) ) {
							var inner = $( '<'+(button.DT_el || 'div')+'/>' )
								.appendTo( container );
							attach( inner, button );
						}
						else {
							btnDisplay = null;
							btnClass = button;
							tabIndex = settings.iTabIndex;
	
							switch ( button ) {
								case 'ellipsis':
									container.append('<span class="ellipsis">&#x2026;</span>');
									break;
	
								case 'first':
									btnDisplay = lang.sFirst;
	
									if ( page === 0 ) {
										tabIndex = -1;
										btnClass += ' ' + disabledClass;
									}
									break;
	
								case 'previous':
									btnDisplay = lang.sPrevious;
	
									if ( page === 0 ) {
										tabIndex = -1;
										btnClass += ' ' + disabledClass;
									}
									break;
	
								case 'next':
									btnDisplay = lang.sNext;
	
									if ( pages === 0 || page === pages-1 ) {
										tabIndex = -1;
										btnClass += ' ' + disabledClass;
									}
									break;
	
								case 'last':
									btnDisplay = lang.sLast;
	
									if ( pages === 0 || page === pages-1 ) {
										tabIndex = -1;
										btnClass += ' ' + disabledClass;
									}
									break;
	
								default:
									btnDisplay = settings.fnFormatNumber( button + 1 );
									btnClass = page === button ?
										classes.sPageButtonActive : '';
									break;
							}
	
							if ( btnDisplay !== null ) {
								node = $('<a>', {
										'class': classes.sPageButton+' '+btnClass,
										'aria-controls': settings.sTableId,
										'aria-label': aria[ button ],
										'data-dt-idx': counter,
										'tabindex': tabIndex,
										'id': idx === 0 && typeof button === 'string' ?
											settings.sTableId +'_'+ button :
											null
									} )
									.html( btnDisplay )
									.appendTo( container );
	
								_fnBindAction(
									node, {action: button}, clickHandler
								);
	
								counter++;
							}
						}
					}
				};
	
				// IE9 throws an 'unknown error' if document.activeElement is used
				// inside an iframe or frame. Try / catch the error. Not good for
				// accessibility, but neither are frames.
				var activeEl;
	
				try {
					// Because this approach is destroying and recreating the paging
					// elements, focus is lost on the select button which is bad for
					// accessibility. So we want to restore focus once the draw has
					// completed
					activeEl = $(host).find(document.activeElement).data('dt-idx');
				}
				catch (e) {}
	
				attach( $(host).empty(), buttons );
	
				if ( activeEl !== undefined ) {
					$(host).find( '[data-dt-idx='+activeEl+']' ).trigger('focus');
				}
			}
		}
	} );
	
	
	
	// Built in type detection. See model.ext.aTypes for information about
	// what is required from this methods.
	$.extend( DataTable.ext.type.detect, [
		// Plain numbers - first since V8 detects some plain numbers as dates
		// e.g. Date.parse('55') (but not all, e.g. Date.parse('22')...).
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal ) ? 'num'+decimal : null;
		},
	
		// Dates (only those recognised by the browser's Date.parse)
		function ( d, settings )
		{
			// V8 tries _very_ hard to make a string passed into \`Date.parse()\`
			// valid, so we need to use a regex to restrict date formats. Use a
			// plug-in for anything other than ISO8601 style strings
			if ( d && !(d instanceof Date) && ! _re_date.test(d) ) {
				return null;
			}
			var parsed = Date.parse(d);
			return (parsed !== null && !isNaN(parsed)) || _empty(d) ? 'date' : null;
		},
	
		// Formatted numbers
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _isNumber( d, decimal, true ) ? 'num-fmt'+decimal : null;
		},
	
		// HTML numeric
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal ) ? 'html-num'+decimal : null;
		},
	
		// HTML numeric, formatted
		function ( d, settings )
		{
			var decimal = settings.oLanguage.sDecimal;
			return _htmlNumeric( d, decimal, true ) ? 'html-num-fmt'+decimal : null;
		},
	
		// HTML (this is strict checking - there must be html)
		function ( d, settings )
		{
			return _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1) ?
				'html' : null;
		}
	] );
	
	
	
	// Filter formatting functions. See model.ext.ofnSearch for information about
	// what is required from these methods.
	// 
	// Note that additional search methods are added for the html numbers and
	// html formatted numbers by \`_addNumericSort()\` when we know what the decimal
	// place is
	
	
	$.extend( DataTable.ext.type.search, {
		html: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data
						.replace( _re_new_lines, " " )
						.replace( _re_html, "" ) :
					'';
		},
	
		string: function ( data ) {
			return _empty(data) ?
				data :
				typeof data === 'string' ?
					data.replace( _re_new_lines, " " ) :
					data;
		}
	} );
	
	
	
	var __numericReplace = function ( d, decimalPlace, re1, re2 ) {
		if ( d !== 0 && (!d || d === '-') ) {
			return -Infinity;
		}
	
		// If a decimal place other than \`.\` is used, it needs to be given to the
		// function so we can detect it and replace with a \`.\` which is the only
		// decimal place Javascript recognises - it is not locale aware.
		if ( decimalPlace ) {
			d = _numToDecimal( d, decimalPlace );
		}
	
		if ( d.replace ) {
			if ( re1 ) {
				d = d.replace( re1, '' );
			}
	
			if ( re2 ) {
				d = d.replace( re2, '' );
			}
		}
	
		return d * 1;
	};
	
	
	// Add the numeric 'deformatting' functions for sorting and search. This is done
	// in a function to provide an easy ability for the language options to add
	// additional methods if a non-period decimal place is used.
	function _addNumericSort ( decimalPlace ) {
		$.each(
			{
				// Plain numbers
				"num": function ( d ) {
					return __numericReplace( d, decimalPlace );
				},
	
				// Formatted numbers
				"num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_formatted_numeric );
				},
	
				// HTML numeric
				"html-num": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html );
				},
	
				// HTML numeric, formatted
				"html-num-fmt": function ( d ) {
					return __numericReplace( d, decimalPlace, _re_html, _re_formatted_numeric );
				}
			},
			function ( key, fn ) {
				// Add the ordering method
				_ext.type.order[ key+decimalPlace+'-pre' ] = fn;
	
				// For HTML types add a search formatter that will strip the HTML
				if ( key.match(/^html\\-/) ) {
					_ext.type.search[ key+decimalPlace ] = _ext.type.search.html;
				}
			}
		);
	}
	
	
	// Default sort methods
	$.extend( _ext.type.order, {
		// Dates
		"date-pre": function ( d ) {
			var ts = Date.parse( d );
			return isNaN(ts) ? -Infinity : ts;
		},
	
		// html
		"html-pre": function ( a ) {
			return _empty(a) ?
				'' :
				a.replace ?
					a.replace( /<.*?>/g, "" ).toLowerCase() :
					a+'';
		},
	
		// string
		"string-pre": function ( a ) {
			// This is a little complex, but faster than always calling toString,
			// http://jsperf.com/tostring-v-check
			return _empty(a) ?
				'' :
				typeof a === 'string' ?
					a.toLowerCase() :
					! a.toString ?
						'' :
						a.toString();
		},
	
		// string-asc and -desc are retained only for compatibility with the old
		// sort methods
		"string-asc": function ( x, y ) {
			return ((x < y) ? -1 : ((x > y) ? 1 : 0));
		},
	
		"string-desc": function ( x, y ) {
			return ((x < y) ? 1 : ((x > y) ? -1 : 0));
		}
	} );
	
	
	// Numeric sorting types - order doesn't matter here
	_addNumericSort( '' );
	
	
	$.extend( true, DataTable.ext.renderer, {
		header: {
			_: function ( settings, cell, column, classes ) {
				// No additional mark-up required
				// Attach a sort listener to update on sort - note that using the
				// \`DT\` namespace will allow the event to be removed automatically
				// on destroy, while the \`dt\` namespaced event is the one we are
				// listening for
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) { // need to check this this is the host
						return;               // table, not a nested one
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass(
							classes.sSortAsc +' '+
							classes.sSortDesc
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
				} );
			},
	
			jqueryui: function ( settings, cell, column, classes ) {
				$('<div/>')
					.addClass( classes.sSortJUIWrapper )
					.append( cell.contents() )
					.append( $('<span/>')
						.addClass( classes.sSortIcon+' '+column.sSortingClassJUI )
					)
					.appendTo( cell );
	
				// Attach a sort listener to update on sort
				$(settings.nTable).on( 'order.dt.DT', function ( e, ctx, sorting, columns ) {
					if ( settings !== ctx ) {
						return;
					}
	
					var colIdx = column.idx;
	
					cell
						.removeClass( classes.sSortAsc +" "+classes.sSortDesc )
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortDesc :
								column.sSortingClass
						);
	
					cell
						.find( 'span.'+classes.sSortIcon )
						.removeClass(
							classes.sSortJUIAsc +" "+
							classes.sSortJUIDesc +" "+
							classes.sSortJUI +" "+
							classes.sSortJUIAscAllowed +" "+
							classes.sSortJUIDescAllowed
						)
						.addClass( columns[ colIdx ] == 'asc' ?
							classes.sSortJUIAsc : columns[ colIdx ] == 'desc' ?
								classes.sSortJUIDesc :
								column.sSortingClassJUI
						);
				} );
			}
		}
	} );
	
	/*
	 * Public helper functions. These aren't used internally by DataTables, or
	 * called by any of the options passed into DataTables, but they can be used
	 * externally by developers working with DataTables. They are helper functions
	 * to make working with DataTables a little bit easier.
	 */
	
	var __htmlEscapeEntities = function ( d ) {
		if (Array.isArray(d)) {
			d = d.join(',');
		}
	
		return typeof d === 'string' ?
			d
				.replace(/&/g, '&amp;')
				.replace(/</g, '&lt;')
				.replace(/>/g, '&gt;')
				.replace(/"/g, '&quot;') :
			d;
	};
	
	/**
	 * Helpers for \`columns.render\`.
	 *
	 * The options defined here can be used with the \`columns.render\` initialisation
	 * option to provide a display renderer. The following functions are defined:
	 *
	 * * \`number\` - Will format numeric data (defined by \`columns.data\`) for
	 *   display, retaining the original unformatted data for sorting and filtering.
	 *   It takes 5 parameters:
	 *   * \`string\` - Thousands grouping separator
	 *   * \`string\` - Decimal point indicator
	 *   * \`integer\` - Number of decimal points to show
	 *   * \`string\` (optional) - Prefix.
	 *   * \`string\` (optional) - Postfix (/suffix).
	 * * \`text\` - Escape HTML to help prevent XSS attacks. It has no optional
	 *   parameters.
	 *
	 * @example
	 *   // Column definition using the number renderer
	 *   {
	 *     data: "salary",
	 *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )
	 *   }
	 *
	 * @namespace
	 */
	DataTable.render = {
		number: function ( thousands, decimal, precision, prefix, postfix ) {
			return {
				display: function ( d ) {
					if ( typeof d !== 'number' && typeof d !== 'string' ) {
						return d;
					}
	
					var negative = d < 0 ? '-' : '';
					var flo = parseFloat( d );
	
					// If NaN then there isn't much formatting that we can do - just
					// return immediately, escaping any HTML (this was supposed to
					// be a number after all)
					if ( isNaN( flo ) ) {
						return __htmlEscapeEntities( d );
					}
	
					flo = flo.toFixed( precision );
					d = Math.abs( flo );
	
					var intPart = parseInt( d, 10 );
					var floatPart = precision ?
						decimal+(d - intPart).toFixed( precision ).substring( 2 ):
						'';
	
					// If zero, then can't have a negative prefix
					if (intPart === 0 && parseFloat(floatPart) === 0) {
						negative = '';
					}
	
					return negative + (prefix||'') +
						intPart.toString().replace(
							/\\B(?=(\\d{3})+(?!\\d))/g, thousands
						) +
						floatPart +
						(postfix||'');
				}
			};
		},
	
		text: function () {
			return {
				display: __htmlEscapeEntities,
				filter: __htmlEscapeEntities
			};
		}
	};
	
	
	/*
	 * This is really a good bit rubbish this method of exposing the internal methods
	 * publicly... - To be fixed in 2.0 using methods on the prototype
	 */
	
	
	/**
	 * Create a wrapper function for exporting an internal functions to an external API.
	 *  @param {string} fn API function name
	 *  @returns {function} wrapped function
	 *  @memberof DataTable#internal
	 */
	function _fnExternApiFunc (fn)
	{
		return function() {
			var args = [_fnSettingsFromNode( this[DataTable.ext.iApiIndex] )].concat(
				Array.prototype.slice.call(arguments)
			);
			return DataTable.ext.internal[fn].apply( this, args );
		};
	}
	
	
	/**
	 * Reference to internal functions for use by plug-in developers. Note that
	 * these methods are references to internal functions and are considered to be
	 * private. If you use these methods, be aware that they are liable to change
	 * between versions.
	 *  @namespace
	 */
	$.extend( DataTable.ext.internal, {
		_fnExternApiFunc: _fnExternApiFunc,
		_fnBuildAjax: _fnBuildAjax,
		_fnAjaxUpdate: _fnAjaxUpdate,
		_fnAjaxParameters: _fnAjaxParameters,
		_fnAjaxUpdateDraw: _fnAjaxUpdateDraw,
		_fnAjaxDataSrc: _fnAjaxDataSrc,
		_fnAddColumn: _fnAddColumn,
		_fnColumnOptions: _fnColumnOptions,
		_fnAdjustColumnSizing: _fnAdjustColumnSizing,
		_fnVisibleToColumnIndex: _fnVisibleToColumnIndex,
		_fnColumnIndexToVisible: _fnColumnIndexToVisible,
		_fnVisbleColumns: _fnVisbleColumns,
		_fnGetColumns: _fnGetColumns,
		_fnColumnTypes: _fnColumnTypes,
		_fnApplyColumnDefs: _fnApplyColumnDefs,
		_fnHungarianMap: _fnHungarianMap,
		_fnCamelToHungarian: _fnCamelToHungarian,
		_fnLanguageCompat: _fnLanguageCompat,
		_fnBrowserDetect: _fnBrowserDetect,
		_fnAddData: _fnAddData,
		_fnAddTr: _fnAddTr,
		_fnNodeToDataIndex: _fnNodeToDataIndex,
		_fnNodeToColumnIndex: _fnNodeToColumnIndex,
		_fnGetCellData: _fnGetCellData,
		_fnSetCellData: _fnSetCellData,
		_fnSplitObjNotation: _fnSplitObjNotation,
		_fnGetObjectDataFn: _fnGetObjectDataFn,
		_fnSetObjectDataFn: _fnSetObjectDataFn,
		_fnGetDataMaster: _fnGetDataMaster,
		_fnClearTable: _fnClearTable,
		_fnDeleteIndex: _fnDeleteIndex,
		_fnInvalidate: _fnInvalidate,
		_fnGetRowElements: _fnGetRowElements,
		_fnCreateTr: _fnCreateTr,
		_fnBuildHead: _fnBuildHead,
		_fnDrawHead: _fnDrawHead,
		_fnDraw: _fnDraw,
		_fnReDraw: _fnReDraw,
		_fnAddOptionsHtml: _fnAddOptionsHtml,
		_fnDetectHeader: _fnDetectHeader,
		_fnGetUniqueThs: _fnGetUniqueThs,
		_fnFeatureHtmlFilter: _fnFeatureHtmlFilter,
		_fnFilterComplete: _fnFilterComplete,
		_fnFilterCustom: _fnFilterCustom,
		_fnFilterColumn: _fnFilterColumn,
		_fnFilter: _fnFilter,
		_fnFilterCreateSearch: _fnFilterCreateSearch,
		_fnEscapeRegex: _fnEscapeRegex,
		_fnFilterData: _fnFilterData,
		_fnFeatureHtmlInfo: _fnFeatureHtmlInfo,
		_fnUpdateInfo: _fnUpdateInfo,
		_fnInfoMacros: _fnInfoMacros,
		_fnInitialise: _fnInitialise,
		_fnInitComplete: _fnInitComplete,
		_fnLengthChange: _fnLengthChange,
		_fnFeatureHtmlLength: _fnFeatureHtmlLength,
		_fnFeatureHtmlPaginate: _fnFeatureHtmlPaginate,
		_fnPageChange: _fnPageChange,
		_fnFeatureHtmlProcessing: _fnFeatureHtmlProcessing,
		_fnProcessingDisplay: _fnProcessingDisplay,
		_fnFeatureHtmlTable: _fnFeatureHtmlTable,
		_fnScrollDraw: _fnScrollDraw,
		_fnApplyToChildren: _fnApplyToChildren,
		_fnCalculateColumnWidths: _fnCalculateColumnWidths,
		_fnThrottle: _fnThrottle,
		_fnConvertToWidth: _fnConvertToWidth,
		_fnGetWidestNode: _fnGetWidestNode,
		_fnGetMaxLenString: _fnGetMaxLenString,
		_fnStringToCss: _fnStringToCss,
		_fnSortFlatten: _fnSortFlatten,
		_fnSort: _fnSort,
		_fnSortAria: _fnSortAria,
		_fnSortListener: _fnSortListener,
		_fnSortAttachListener: _fnSortAttachListener,
		_fnSortingClasses: _fnSortingClasses,
		_fnSortData: _fnSortData,
		_fnSaveState: _fnSaveState,
		_fnLoadState: _fnLoadState,
		_fnImplementState: _fnImplementState,
		_fnSettingsFromNode: _fnSettingsFromNode,
		_fnLog: _fnLog,
		_fnMap: _fnMap,
		_fnBindAction: _fnBindAction,
		_fnCallbackReg: _fnCallbackReg,
		_fnCallbackFire: _fnCallbackFire,
		_fnLengthOverflow: _fnLengthOverflow,
		_fnRenderer: _fnRenderer,
		_fnDataSource: _fnDataSource,
		_fnRowAttributes: _fnRowAttributes,
		_fnExtend: _fnExtend,
		_fnCalculateEnd: function () {} // Used by a lot of plug-ins, but redundant
		                                // in 1.10, so this dead-end function is
		                                // added to prevent errors
	} );
	

	// jQuery access
	$.fn.dataTable = DataTable;

	// Provide access to the host jQuery object (circular reference)
	DataTable.$ = $;

	// Legacy aliases
	$.fn.dataTableSettings = DataTable.settings;
	$.fn.dataTableExt = DataTable.ext;

	// With a capital \`D\` we return a DataTables API instance rather than a
	// jQuery object
	$.fn.DataTable = function ( opts ) {
		return $(this).dataTable( opts ).api();
	};

	// All properties that are available to $.fn.dataTable should also be
	// available on $.fn.DataTable
	$.each( DataTable, function ( prop, val ) {
		$.fn.DataTable[ prop ] = val;
	} );

	return DataTable;
}));
`;
    }, 4905: function(t2) {
      t2.exports = `/*!
FullCalendar v5.9.0
Docs & License: https://fullcalendar.io/
(c) 2021 Adam Shaw
*/
var FullCalendar = (function (exports) {
    'use strict';

    /*! *****************************************************************************\r
    Copyright (c) Microsoft Corporation.\r
\r
    Permission to use, copy, modify, and/or distribute this software for any\r
    purpose with or without fee is hereby granted.\r
\r
    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r
    PERFORMANCE OF THIS SOFTWARE.\r
    ***************************************************************************** */\r
    /* global Reflect, Promise */\r
\r
    var extendStatics = function(d, b) {\r
        extendStatics = Object.setPrototypeOf ||\r
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r
        return extendStatics(d, b);\r
    };\r
\r
    function __extends(d, b) {\r
        if (typeof b !== "function" && b !== null)\r
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");\r
        extendStatics(d, b);\r
        function __() { this.constructor = d; }\r
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r
    }\r
\r
    var __assign = function() {\r
        __assign = Object.assign || function __assign(t) {\r
            for (var s, i = 1, n = arguments.length; i < n; i++) {\r
                s = arguments[i];\r
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r
            }\r
            return t;\r
        };\r
        return __assign.apply(this, arguments);\r
    };\r
\r
    function __spreadArray(to, from, pack) {\r
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r
            if (ar || !(i in from)) {\r
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r
                ar[i] = from[i];\r
            }\r
        }\r
        return to.concat(ar || from);\r
    }

    var n,u,i$1,t,o,r$1={},f$1=[],e$1=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function c$1(n,l){for(var u in l)n[u]=l[u];return n}function s(n){var l=n.parentNode;l&&l.removeChild(n);}function a$1(n,l,u){var i,t,o,r=arguments,f={};for(o in l)"key"==o?i=l[o]:"ref"==o?t=l[o]:f[o]=l[o];if(arguments.length>3)for(u=[u],o=3;o<arguments.length;o++)u.push(r[o]);if(null!=u&&(f.children=u),"function"==typeof n&&null!=n.defaultProps)for(o in n.defaultProps)void 0===f[o]&&(f[o]=n.defaultProps[o]);return v$1(n,f,i,t,null)}function v$1(l,u,i,t,o){var r={type:l,props:u,key:i,ref:t,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==o?++n.__v:o};return null!=n.vnode&&n.vnode(r),r}function h(){return {current:null}}function y(n){return n.children}function p(n,l){this.props=n,this.context=l;}function d(n,l){if(null==l)return n.__?d(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return "function"==typeof n.type?d(n):null}function _(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return _(n)}}function k(l){(!l.__d&&(l.__d=!0)&&u.push(l)&&!b$1.__r++||t!==n.debounceRendering)&&((t=n.debounceRendering)||i$1)(b$1);}function b$1(){for(var n;b$1.__r=u.length;)n=u.sort(function(n,l){return n.__v.__b-l.__v.__b}),u=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=c$1({},t)).__v=t.__v+1,I$1(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?d(t):o,t.__h),T$1(u,t),t.__e!=o&&_(t)));});}function m(n,l,u,i,t,o,e,c,s,a){var h,p,_,k,b,m,w,A=i&&i.__k||f$1,P=A.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||"boolean"==typeof k?null:"string"==typeof k||"number"==typeof k||"bigint"==typeof k?v$1(null,k,null,null,k):Array.isArray(k)?v$1(y,{children:k},null,null,null):k.__b>0?v$1(k.type,k.props,k.key,null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(_=A[h])||_&&k.key==_.key&&k.type===_.type)A[h]=void 0;else for(p=0;p<P;p++){if((_=A[p])&&k.key==_.key&&k.type===_.type){A[p]=void 0;break}_=null;}I$1(n,k,_=_||r$1,t,o,e,c,s,a),b=k.__e,(p=k.ref)&&_.ref!=p&&(w||(w=[]),_.ref&&w.push(_.ref,null,k),w.push(p,k.__c||b,k)),null!=b?(null==m&&(m=b),"function"==typeof k.type&&null!=k.__k&&k.__k===_.__k?k.__d=s=g$1(k,s,n):s=x$1(n,k,_,A,b,s),a||"option"!==u.type?"function"==typeof u.type&&(u.__d=s):n.value=""):s&&_.__e==s&&s.parentNode!=n&&(s=d(_));}for(u.__e=m,h=P;h--;)null!=A[h]&&("function"==typeof u.type&&null!=A[h].__e&&A[h].__e==u.__d&&(u.__d=d(i,h+1)),L$1(A[h],A[h]));if(w)for(h=0;h<w.length;h++)z(w[h],w[++h],w[++h]);}function g$1(n,l,u){var i,t;for(i=0;i<n.__k.length;i++)(t=n.__k[i])&&(t.__=n,l="function"==typeof t.type?g$1(t,l,u):x$1(u,t,t,n.__k,t.__e,l));return l}function w$1(n,l){return l=l||[],null==n||"boolean"==typeof n||(Array.isArray(n)?n.some(function(n){w$1(n,l);}):l.push(n)),l}function x$1(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else {for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=2)if(f==t)break n;n.insertBefore(t,o),r=o;}return void 0!==r?r:t.nextSibling}function A$1(n,l,u,i,t){var o;for(o in u)"children"===o||"key"===o||o in l||C$1(n,o,null,u[o],i);for(o in l)t&&"function"!=typeof l[o]||"children"===o||"key"===o||"value"===o||"checked"===o||u[o]===l[o]||C$1(n,o,l[o],u[o],i);}function P$1(n,l,u){"-"===l[0]?n.setProperty(l,u):n[l]=null==u?"":"number"!=typeof u||e$1.test(l)?u:u+"px";}function C$1(n,l,u,i,t){var o;n:if("style"===l)if("string"==typeof u)n.style.cssText=u;else {if("string"==typeof i&&(n.style.cssText=i=""),i)for(l in i)u&&l in u||P$1(n.style,l,"");if(u)for(l in u)i&&u[l]===i[l]||P$1(n.style,l,u[l]);}else if("o"===l[0]&&"n"===l[1])o=l!==(l=l.replace(/Capture$/,"")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?H$1:$$1,o):n.removeEventListener(l,o?H$1:$$1,o);else if("dangerouslySetInnerHTML"!==l){if(t)l=l.replace(/xlink[H:h]/,"h").replace(/sName$/,"s");else if("href"!==l&&"list"!==l&&"form"!==l&&"tabIndex"!==l&&"download"!==l&&l in n)try{n[l]=null==u?"":u;break n}catch(n){}"function"==typeof u||(null!=u&&(!1!==u||"a"===l[0]&&"r"===l[1])?n.setAttribute(l,u):n.removeAttribute(l));}}function $$1(l){this.l[l.type+!1](n.event?n.event(l):l);}function H$1(l){this.l[l.type+!0](n.event?n.event(l):l);}function I$1(l,u,i,t,o,r,f,e,s){var a,v,h,d,_,k,b,g,w,x,A,P=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(s=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=n.__b)&&a(u);try{n:if("function"==typeof P){if(g=u.props,w=(a=P.contextType)&&t[a.__c],x=a?w?w.props.value:a.__:t,i.__c?b=(v=u.__c=i.__c).__=v.__E:("prototype"in P&&P.prototype.render?u.__c=v=new P(g,x):(u.__c=v=new p(g,x),v.constructor=P,v.render=M$1),w&&w.sub(v),v.props=g,v.state||(v.state={}),v.context=x,v.__n=t,h=v.__d=!0,v.__h=[]),null==v.__s&&(v.__s=v.state),null!=P.getDerivedStateFromProps&&(v.__s==v.state&&(v.__s=c$1({},v.__s)),c$1(v.__s,P.getDerivedStateFromProps(g,v.__s))),d=v.props,_=v.state,h)null==P.getDerivedStateFromProps&&null!=v.componentWillMount&&v.componentWillMount(),null!=v.componentDidMount&&v.__h.push(v.componentDidMount);else {if(null==P.getDerivedStateFromProps&&g!==d&&null!=v.componentWillReceiveProps&&v.componentWillReceiveProps(g,x),!v.__e&&null!=v.shouldComponentUpdate&&!1===v.shouldComponentUpdate(g,v.__s,x)||u.__v===i.__v){v.props=g,v.state=v.__s,u.__v!==i.__v&&(v.__d=!1),v.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u);}),v.__h.length&&f.push(v);break n}null!=v.componentWillUpdate&&v.componentWillUpdate(g,v.__s,x),null!=v.componentDidUpdate&&v.__h.push(function(){v.componentDidUpdate(d,_,k);});}v.context=x,v.props=g,v.state=v.__s,(a=n.__r)&&a(u),v.__d=!1,v.__v=u,v.__P=l,a=v.render(v.props,v.state,v.context),v.state=v.__s,null!=v.getChildContext&&(t=c$1(c$1({},t),v.getChildContext())),h||null==v.getSnapshotBeforeUpdate||(k=v.getSnapshotBeforeUpdate(d,_)),A=null!=a&&a.type===y&&null==a.key?a.props.children:a,m(l,Array.isArray(A)?A:[A],u,i,t,o,r,f,e,s),v.base=u.__e,u.__h=null,v.__h.length&&f.push(v),b&&(v.__E=v.__=null),v.__e=!1;}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=j$2(i.__e,u,i,t,o,r,f,s);(a=n.diffed)&&a(u);}catch(l){u.__v=null,(s||null!=r)&&(u.__e=e,u.__h=!!s,r[r.indexOf(e)]=null),n.__e(l,u,i);}}function T$1(l,u){n.__c&&n.__c(u,l),l.some(function(u){try{l=u.__h,u.__h=[],l.some(function(n){n.call(u);});}catch(l){n.__e(l,u.__v);}});}function j$2(n,l,u,i,t,o,e,c){var a,v,h,y,p=u.props,d=l.props,_=l.type,k=0;if("svg"===_&&(t=!0),null!=o)for(;k<o.length;k++)if((a=o[k])&&(a===n||(_?a.localName==_:3==a.nodeType))){n=a,o[k]=null;break}if(null==n){if(null===_)return document.createTextNode(d);n=t?document.createElementNS("http://www.w3.org/2000/svg",_):document.createElement(_,d.is&&d),o=null,c=!1;}if(null===_)p===d||c&&n.data===d||(n.data=d);else {if(o=o&&f$1.slice.call(n.childNodes),v=(p=u.props||r$1).dangerouslySetInnerHTML,h=d.dangerouslySetInnerHTML,!c){if(null!=o)for(p={},y=0;y<n.attributes.length;y++)p[n.attributes[y].name]=n.attributes[y].value;(h||v)&&(h&&(v&&h.__html==v.__html||h.__html===n.innerHTML)||(n.innerHTML=h&&h.__html||""));}if(A$1(n,d,p,t,c),h)l.__k=[];else if(k=l.props.children,m(n,Array.isArray(k)?k:[k],l,u,i,t&&"foreignObject"!==_,o,e,n.firstChild,c),null!=o)for(k=o.length;k--;)null!=o[k]&&s(o[k]);c||("value"in d&&void 0!==(k=d.value)&&(k!==n.value||"progress"===_&&!k)&&C$1(n,"value",k,p.value,!1),"checked"in d&&void 0!==(k=d.checked)&&k!==n.checked&&C$1(n,"checked",k,p.checked,!1));}return n}function z(l,u,i){try{"function"==typeof l?l(u):l.current=u;}catch(l){n.__e(l,i);}}function L$1(l,u,i){var t,o,r;if(n.unmount&&n.unmount(l),(t=l.ref)&&(t.current&&t.current!==l.__e||z(t,null,u)),i||"function"==typeof l.type||(i=null!=(o=l.__e)),l.__e=l.__d=void 0,null!=(t=l.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount();}catch(l){n.__e(l,u);}t.base=t.__P=null;}if(t=l.__k)for(r=0;r<t.length;r++)t[r]&&L$1(t[r],u,i);null!=o&&s(o);}function M$1(n,l,u){return this.constructor(n,u)}function N(l,u,i){var t,o,e;n.__&&n.__(l,u),o=(t="function"==typeof i)?null:i&&i.__k||u.__k,e=[],I$1(u,l=(!t&&i||u).__k=a$1(y,null,[l]),o||r$1,r$1,void 0!==u.ownerSVGElement,!t&&i?[i]:o?null:u.firstChild?f$1.slice.call(u.childNodes):null,e,!t&&i?i:o?o.__e:u.firstChild,t),T$1(e,l);}function q(n,l){var u={__c:l="__cC"+o++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(k);},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n);};}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n={__e:function(n,l){for(var u,i,t;l=l.__;)if((u=l.__c)&&!u.__)try{if((i=u.constructor)&&null!=i.getDerivedStateFromError&&(u.setState(i.getDerivedStateFromError(n)),t=u.__d),null!=u.componentDidCatch&&(u.componentDidCatch(n),t=u.__d),t)return u.__E=u}catch(l){n=l;}throw n},__v:0},p.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=c$1({},this.state),"function"==typeof n&&(n=n(c$1({},u),this.props)),n&&c$1(u,n),null!=n&&this.__v&&(l&&this.__h.push(l),k(this));},p.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),k(this));},p.prototype.render=y,u=[],i$1="function"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,b$1.__r=0,o=0;

    var r,i=[],c=n.__b,f=n.__r,e=n.diffed,a=n.__c,v=n.unmount;function x(){i.forEach(function(t){if(t.__P)try{t.__H.__h.forEach(g),t.__H.__h.forEach(j$1),t.__H.__h=[];}catch(u){t.__H.__h=[],n.__e(u,t.__v);}}),i=[];}n.__b=function(n){c&&c(n);},n.__r=function(n){f&&f(n);var r=(n.__c).__H;r&&(r.__h.forEach(g),r.__h.forEach(j$1),r.__h=[]);},n.diffed=function(t){e&&e(t);var o=t.__c;o&&o.__H&&o.__H.__h.length&&(1!==i.push(o)&&r===n.requestAnimationFrame||((r=n.requestAnimationFrame)||function(n){var t,u=function(){clearTimeout(r),b&&cancelAnimationFrame(t),setTimeout(n);},r=setTimeout(u,100);b&&(t=requestAnimationFrame(u));})(x));},n.__c=function(t,u){u.some(function(t){try{t.__h.forEach(g),t.__h=t.__h.filter(function(n){return !n.__||j$1(n)});}catch(r){u.some(function(n){n.__h&&(n.__h=[]);}),u=[],n.__e(r,t.__v);}}),a&&a(t,u);},n.unmount=function(t){v&&v(t);var u=t.__c;if(u&&u.__H)try{u.__H.__.forEach(g);}catch(t){n.__e(t,u.__v);}};var b="function"==typeof requestAnimationFrame;function g(n){"function"==typeof n.__c&&n.__c();}function j$1(n){n.__c=n.__();}

    function C(n,t){for(var e in t)n[e]=t[e];return n}function S(n,t){for(var e in n)if("__source"!==e&&!(e in t))return !0;for(var r in t)if("__source"!==r&&n[r]!==t[r])return !0;return !1}function E(n){this.props=n;}(E.prototype=new p).isPureReactComponent=!0,E.prototype.shouldComponentUpdate=function(n,t){return S(this.props,n)||S(this.state,t)};var w=n.__b;n.__b=function(n){n.type&&n.type.__f&&n.ref&&(n.props.ref=n.ref,n.ref=null),w&&w(n);};var A=n.__e;n.__e=function(n,t,e){if(n.then)for(var r,u=t;u=u.__;)if((r=u.__c)&&r.__c)return null==t.__e&&(t.__e=e.__e,t.__k=e.__k),r.__c(n,t);A(n,t,e);};var O=n.unmount;function L(){this.__u=0,this.t=null,this.__b=null;}function U(n){var t=n.__.__c;return t&&t.__e&&t.__e(n)}function F(){this.u=null,this.o=null;}n.unmount=function(n){var t=n.__c;t&&t.__R&&t.__R(),t&&!0===n.__h&&(n.type=null),O&&O(n);},(L.prototype=new p).__c=function(n,t){var e=t.__c,r=this;null==r.t&&(r.t=[]),r.t.push(e);var u=U(r.__v),o=!1,i=function(){o||(o=!0,e.__R=null,u?u(l):l());};e.__R=i;var l=function(){if(!--r.__u){if(r.state.__e){var n=r.state.__e;r.__v.__k[0]=function n(t,e,r){return t&&(t.__v=null,t.__k=t.__k&&t.__k.map(function(t){return n(t,e,r)}),t.__c&&t.__c.__P===e&&(t.__e&&r.insertBefore(t.__e,t.__d),t.__c.__e=!0,t.__c.__P=r)),t}(n,n.__c.__P,n.__c.__O);}var t;for(r.setState({__e:r.__b=null});t=r.t.pop();)t.forceUpdate();}},f=!0===t.__h;r.__u++||f||r.setState({__e:r.__b=r.__v.__k[0]}),n.then(i,i);},L.prototype.componentWillUnmount=function(){this.t=[];},L.prototype.render=function(n,t){if(this.__b){if(this.__v.__k){var e=document.createElement("div"),r=this.__v.__k[0].__c;this.__v.__k[0]=function n(t,e,r){return t&&(t.__c&&t.__c.__H&&(t.__c.__H.__.forEach(function(n){"function"==typeof n.__c&&n.__c();}),t.__c.__H=null),null!=(t=C({},t)).__c&&(t.__c.__P===r&&(t.__c.__P=e),t.__c=null),t.__k=t.__k&&t.__k.map(function(t){return n(t,e,r)})),t}(this.__b,e,r.__O=r.__P);}this.__b=null;}var u=t.__e&&a$1(y,null,n.fallback);return u&&(u.__h=null),[a$1(y,null,t.__e?null:n.children),u]};var M=function(n,t,e){if(++e[1]===e[0]&&n.o.delete(t),n.props.revealOrder&&("t"!==n.props.revealOrder[0]||!n.o.size))for(e=n.u;e;){for(;e.length>3;)e.pop()();if(e[1]<e[0])break;n.u=e=e[2];}};function T(n){return this.getChildContext=function(){return n.context},n.children}function j(n){var t=this,e=n.i;t.componentWillUnmount=function(){N(null,t.l),t.l=null,t.i=null;},t.i&&t.i!==e&&t.componentWillUnmount(),n.__v?(t.l||(t.i=e,t.l={nodeType:1,parentNode:e,childNodes:[],appendChild:function(n){this.childNodes.push(n),t.i.appendChild(n);},insertBefore:function(n,e){this.childNodes.push(n),t.i.appendChild(n);},removeChild:function(n){this.childNodes.splice(this.childNodes.indexOf(n)>>>1,1),t.i.removeChild(n);}}),N(a$1(T,{context:t.context},n.__v),t.l)):t.l&&t.componentWillUnmount();}function I(n,t){return a$1(j,{__v:n,i:t})}(F.prototype=new p).__e=function(n){var t=this,e=U(t.__v),r=t.o.get(n);return r[0]++,function(u){var o=function(){t.props.revealOrder?(r.push(u),M(t,n,r)):u();};e?e(o):o();}},F.prototype.render=function(n){this.u=null,this.o=new Map;var t=w$1(n.children);n.revealOrder&&"b"===n.revealOrder[0]&&t.reverse();for(var e=t.length;e--;)this.o.set(t[e],this.u=[1,0,this.u]);return n.children},F.prototype.componentDidUpdate=F.prototype.componentDidMount=function(){var n=this;this.o.forEach(function(t,e){M(n,e,t);});};var W="undefined"!=typeof Symbol&&Symbol.for&&Symbol.for("react.element")||60103,P=/^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|fill|flood|font|glyph(?!R)|horiz|marker(?!H|W|U)|overline|paint|stop|strikethrough|stroke|text(?!L)|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/,V=function(n){return ("undefined"!=typeof Symbol&&"symbol"==typeof Symbol()?/fil|che|rad/i:/fil|che|ra/i).test(n)};p.prototype.isReactComponent={},["componentWillMount","componentWillReceiveProps","componentWillUpdate"].forEach(function(n){Object.defineProperty(p.prototype,n,{configurable:!0,get:function(){return this["UNSAFE_"+n]},set:function(t){Object.defineProperty(this,n,{configurable:!0,writable:!0,value:t});}});});var H=n.event;function Z(){}function Y(){return this.cancelBubble}function $(){return this.defaultPrevented}n.event=function(n){return H&&(n=H(n)),n.persist=Z,n.isPropagationStopped=Y,n.isDefaultPrevented=$,n.nativeEvent=n};var G={configurable:!0,get:function(){return this.class}},J=n.vnode;n.vnode=function(n){var t=n.type,e=n.props,r=e;if("string"==typeof t){for(var u in r={},e){var o=e[u];"value"===u&&"defaultValue"in e&&null==o||("defaultValue"===u&&"value"in e&&null==e.value?u="value":"download"===u&&!0===o?o="":/ondoubleclick/i.test(u)?u="ondblclick":/^onchange(textarea|input)/i.test(u+t)&&!V(e.type)?u="oninput":/^on(Ani|Tra|Tou|BeforeInp)/.test(u)?u=u.toLowerCase():P.test(u)?u=u.replace(/[A-Z0-9]/,"-$&").toLowerCase():null===o&&(o=void 0),r[u]=o);}"select"==t&&r.multiple&&Array.isArray(r.value)&&(r.value=w$1(e.children).forEach(function(n){n.props.selected=-1!=r.value.indexOf(n.props.value);})),"select"==t&&null!=r.defaultValue&&(r.value=w$1(e.children).forEach(function(n){n.props.selected=r.multiple?-1!=r.defaultValue.indexOf(n.props.value):r.defaultValue==n.props.value;})),n.props=r;}t&&e.class!=e.className&&(G.enumerable="className"in e,null!=e.className&&(r.class=e.className),Object.defineProperty(r,"className",G)),n.$$typeof=W,J&&J(n);};var K=n.__r;n.__r=function(n){K&&K(n);};"object"==typeof performance&&"function"==typeof performance.now?performance.now.bind(performance):function(){return Date.now()};

    var globalObj = typeof globalThis !== 'undefined' ? globalThis : window; // // TODO: streamline when killing IE11 support
    if (globalObj.FullCalendarVDom) {
        console.warn('FullCalendar VDOM already loaded');
    }
    else {
        globalObj.FullCalendarVDom = {
            Component: p,
            createElement: a$1,
            render: N,
            createRef: h,
            Fragment: y,
            createContext: createContext$1,
            createPortal: I,
            flushToDom: flushToDom$1,
            unmountComponentAtNode: unmountComponentAtNode$1,
        };
    }
    // HACKS...
    // TODO: lock version
    // TODO: link gh issues
    function flushToDom$1() {
        var oldDebounceRendering = n.debounceRendering; // orig
        var callbackQ = [];
        function execCallbackSync(callback) {
            callbackQ.push(callback);
        }
        n.debounceRendering = execCallbackSync;
        N(a$1(FakeComponent, {}), document.createElement('div'));
        while (callbackQ.length) {
            callbackQ.shift()();
        }
        n.debounceRendering = oldDebounceRendering;
    }
    var FakeComponent = /** @class */ (function (_super) {
        __extends(FakeComponent, _super);
        function FakeComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        FakeComponent.prototype.render = function () { return a$1('div', {}); };
        FakeComponent.prototype.componentDidMount = function () { this.setState({}); };
        return FakeComponent;
    }(p));
    function createContext$1(defaultValue) {
        var ContextType = q(defaultValue);
        var origProvider = ContextType.Provider;
        ContextType.Provider = function () {
            var _this = this;
            var isNew = !this.getChildContext;
            var children = origProvider.apply(this, arguments); // eslint-disable-line prefer-rest-params
            if (isNew) {
                var subs_1 = [];
                this.shouldComponentUpdate = function (_props) {
                    if (_this.props.value !== _props.value) {
                        subs_1.forEach(function (c) {
                            c.context = _props.value;
                            c.forceUpdate();
                        });
                    }
                };
                this.sub = function (c) {
                    subs_1.push(c);
                    var old = c.componentWillUnmount;
                    c.componentWillUnmount = function () {
                        subs_1.splice(subs_1.indexOf(c), 1);
                        old && old.call(c);
                    };
                };
            }
            return children;
        };
        return ContextType;
    }
    function unmountComponentAtNode$1(node) {
        N(null, node);
    }

    // no public types yet. when there are, export from:
    // import {} from './api-type-deps'
    var EventSourceApi = /** @class */ (function () {
        function EventSourceApi(context, internalEventSource) {
            this.context = context;
            this.internalEventSource = internalEventSource;
        }
        EventSourceApi.prototype.remove = function () {
            this.context.dispatch({
                type: 'REMOVE_EVENT_SOURCE',
                sourceId: this.internalEventSource.sourceId,
            });
        };
        EventSourceApi.prototype.refetch = function () {
            this.context.dispatch({
                type: 'FETCH_EVENT_SOURCES',
                sourceIds: [this.internalEventSource.sourceId],
                isRefetch: true,
            });
        };
        Object.defineProperty(EventSourceApi.prototype, "id", {
            get: function () {
                return this.internalEventSource.publicId;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventSourceApi.prototype, "url", {
            get: function () {
                return this.internalEventSource.meta.url;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventSourceApi.prototype, "format", {
            get: function () {
                return this.internalEventSource.meta.format; // TODO: bad. not guaranteed
            },
            enumerable: false,
            configurable: true
        });
        return EventSourceApi;
    }());

    function removeElement(el) {
        if (el.parentNode) {
            el.parentNode.removeChild(el);
        }
    }
    // Querying
    // ----------------------------------------------------------------------------------------------------------------
    function elementClosest(el, selector) {
        if (el.closest) {
            return el.closest(selector);
            // really bad fallback for IE
            // from https://developer.mozilla.org/en-US/docs/Web/API/Element/closest
        }
        if (!document.documentElement.contains(el)) {
            return null;
        }
        do {
            if (elementMatches(el, selector)) {
                return el;
            }
            el = (el.parentElement || el.parentNode);
        } while (el !== null && el.nodeType === 1);
        return null;
    }
    function elementMatches(el, selector) {
        var method = el.matches || el.matchesSelector || el.msMatchesSelector;
        return method.call(el, selector);
    }
    // accepts multiple subject els
    // returns a real array. good for methods like forEach
    // TODO: accept the document
    function findElements(container, selector) {
        var containers = container instanceof HTMLElement ? [container] : container;
        var allMatches = [];
        for (var i = 0; i < containers.length; i += 1) {
            var matches = containers[i].querySelectorAll(selector);
            for (var j = 0; j < matches.length; j += 1) {
                allMatches.push(matches[j]);
            }
        }
        return allMatches;
    }
    // accepts multiple subject els
    // only queries direct child elements // TODO: rename to findDirectChildren!
    function findDirectChildren(parent, selector) {
        var parents = parent instanceof HTMLElement ? [parent] : parent;
        var allMatches = [];
        for (var i = 0; i < parents.length; i += 1) {
            var childNodes = parents[i].children; // only ever elements
            for (var j = 0; j < childNodes.length; j += 1) {
                var childNode = childNodes[j];
                if (!selector || elementMatches(childNode, selector)) {
                    allMatches.push(childNode);
                }
            }
        }
        return allMatches;
    }
    // Style
    // ----------------------------------------------------------------------------------------------------------------
    var PIXEL_PROP_RE = /(top|left|right|bottom|width|height)$/i;
    function applyStyle(el, props) {
        for (var propName in props) {
            applyStyleProp(el, propName, props[propName]);
        }
    }
    function applyStyleProp(el, name, val) {
        if (val == null) {
            el.style[name] = '';
        }
        else if (typeof val === 'number' && PIXEL_PROP_RE.test(name)) {
            el.style[name] = val + "px";
        }
        else {
            el.style[name] = val;
        }
    }
    // Event Handling
    // ----------------------------------------------------------------------------------------------------------------
    // if intercepting bubbled events at the document/window/body level,
    // and want to see originating element (the 'target'), use this util instead
    // of \`ev.target\` because it goes within web-component boundaries.
    function getEventTargetViaRoot(ev) {
        var _a, _b;
        return (_b = (_a = ev.composedPath) === null || _a === void 0 ? void 0 : _a.call(ev)[0]) !== null && _b !== void 0 ? _b : ev.target;
    }
    // Shadow DOM consuderations
    // ----------------------------------------------------------------------------------------------------------------
    function getElRoot(el) {
        return el.getRootNode ? el.getRootNode() : document;
    }

    // Stops a mouse/touch event from doing it's native browser action
    function preventDefault(ev) {
        ev.preventDefault();
    }
    // Event Delegation
    // ----------------------------------------------------------------------------------------------------------------
    function buildDelegationHandler(selector, handler) {
        return function (ev) {
            var matchedChild = elementClosest(ev.target, selector);
            if (matchedChild) {
                handler.call(matchedChild, ev, matchedChild);
            }
        };
    }
    function listenBySelector(container, eventType, selector, handler) {
        var attachedHandler = buildDelegationHandler(selector, handler);
        container.addEventListener(eventType, attachedHandler);
        return function () {
            container.removeEventListener(eventType, attachedHandler);
        };
    }
    function listenToHoverBySelector(container, selector, onMouseEnter, onMouseLeave) {
        var currentMatchedChild;
        return listenBySelector(container, 'mouseover', selector, function (mouseOverEv, matchedChild) {
            if (matchedChild !== currentMatchedChild) {
                currentMatchedChild = matchedChild;
                onMouseEnter(mouseOverEv, matchedChild);
                var realOnMouseLeave_1 = function (mouseLeaveEv) {
                    currentMatchedChild = null;
                    onMouseLeave(mouseLeaveEv, matchedChild);
                    matchedChild.removeEventListener('mouseleave', realOnMouseLeave_1);
                };
                // listen to the next mouseleave, and then unattach
                matchedChild.addEventListener('mouseleave', realOnMouseLeave_1);
            }
        });
    }
    // Animation
    // ----------------------------------------------------------------------------------------------------------------
    var transitionEventNames = [
        'webkitTransitionEnd',
        'otransitionend',
        'oTransitionEnd',
        'msTransitionEnd',
        'transitionend',
    ];
    // triggered only when the next single subsequent transition finishes
    function whenTransitionDone(el, callback) {
        var realCallback = function (ev) {
            callback(ev);
            transitionEventNames.forEach(function (eventName) {
                el.removeEventListener(eventName, realCallback);
            });
        };
        transitionEventNames.forEach(function (eventName) {
            el.addEventListener(eventName, realCallback); // cross-browser way to determine when the transition finishes
        });
    }

    var guidNumber = 0;
    function guid() {
        guidNumber += 1;
        return String(guidNumber);
    }
    /* FullCalendar-specific DOM Utilities
    ----------------------------------------------------------------------------------------------------------------------*/
    // Make the mouse cursor express that an event is not allowed in the current area
    function disableCursor() {
        document.body.classList.add('fc-not-allowed');
    }
    // Returns the mouse cursor to its original look
    function enableCursor() {
        document.body.classList.remove('fc-not-allowed');
    }
    /* Selection
    ----------------------------------------------------------------------------------------------------------------------*/
    function preventSelection(el) {
        el.classList.add('fc-unselectable');
        el.addEventListener('selectstart', preventDefault);
    }
    function allowSelection(el) {
        el.classList.remove('fc-unselectable');
        el.removeEventListener('selectstart', preventDefault);
    }
    /* Context Menu
    ----------------------------------------------------------------------------------------------------------------------*/
    function preventContextMenu(el) {
        el.addEventListener('contextmenu', preventDefault);
    }
    function allowContextMenu(el) {
        el.removeEventListener('contextmenu', preventDefault);
    }
    function parseFieldSpecs(input) {
        var specs = [];
        var tokens = [];
        var i;
        var token;
        if (typeof input === 'string') {
            tokens = input.split(/\\s*,\\s*/);
        }
        else if (typeof input === 'function') {
            tokens = [input];
        }
        else if (Array.isArray(input)) {
            tokens = input;
        }
        for (i = 0; i < tokens.length; i += 1) {
            token = tokens[i];
            if (typeof token === 'string') {
                specs.push(token.charAt(0) === '-' ?
                    { field: token.substring(1), order: -1 } :
                    { field: token, order: 1 });
            }
            else if (typeof token === 'function') {
                specs.push({ func: token });
            }
        }
        return specs;
    }
    function compareByFieldSpecs(obj0, obj1, fieldSpecs) {
        var i;
        var cmp;
        for (i = 0; i < fieldSpecs.length; i += 1) {
            cmp = compareByFieldSpec(obj0, obj1, fieldSpecs[i]);
            if (cmp) {
                return cmp;
            }
        }
        return 0;
    }
    function compareByFieldSpec(obj0, obj1, fieldSpec) {
        if (fieldSpec.func) {
            return fieldSpec.func(obj0, obj1);
        }
        return flexibleCompare(obj0[fieldSpec.field], obj1[fieldSpec.field])
            * (fieldSpec.order || 1);
    }
    function flexibleCompare(a, b) {
        if (!a && !b) {
            return 0;
        }
        if (b == null) {
            return -1;
        }
        if (a == null) {
            return 1;
        }
        if (typeof a === 'string' || typeof b === 'string') {
            return String(a).localeCompare(String(b));
        }
        return a - b;
    }
    /* String Utilities
    ----------------------------------------------------------------------------------------------------------------------*/
    function padStart(val, len) {
        var s = String(val);
        return '000'.substr(0, len - s.length) + s;
    }
    /* Number Utilities
    ----------------------------------------------------------------------------------------------------------------------*/
    function compareNumbers(a, b) {
        return a - b;
    }
    function isInt(n) {
        return n % 1 === 0;
    }
    /* FC-specific DOM dimension stuff
    ----------------------------------------------------------------------------------------------------------------------*/
    function computeSmallestCellWidth(cellEl) {
        var allWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-frame');
        var contentWidthEl = cellEl.querySelector('.fc-scrollgrid-shrink-cushion');
        if (!allWidthEl) {
            throw new Error('needs fc-scrollgrid-shrink-frame className'); // TODO: use const
        }
        if (!contentWidthEl) {
            throw new Error('needs fc-scrollgrid-shrink-cushion className');
        }
        return cellEl.getBoundingClientRect().width - allWidthEl.getBoundingClientRect().width + // the cell padding+border
            contentWidthEl.getBoundingClientRect().width;
    }

    var DAY_IDS = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
    // Adding
    function addWeeks(m, n) {
        var a = dateToUtcArray(m);
        a[2] += n * 7;
        return arrayToUtcDate(a);
    }
    function addDays(m, n) {
        var a = dateToUtcArray(m);
        a[2] += n;
        return arrayToUtcDate(a);
    }
    function addMs(m, n) {
        var a = dateToUtcArray(m);
        a[6] += n;
        return arrayToUtcDate(a);
    }
    // Diffing (all return floats)
    // TODO: why not use ranges?
    function diffWeeks(m0, m1) {
        return diffDays(m0, m1) / 7;
    }
    function diffDays(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60 * 24);
    }
    function diffHours(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60 * 60);
    }
    function diffMinutes(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / (1000 * 60);
    }
    function diffSeconds(m0, m1) {
        return (m1.valueOf() - m0.valueOf()) / 1000;
    }
    function diffDayAndTime(m0, m1) {
        var m0day = startOfDay(m0);
        var m1day = startOfDay(m1);
        return {
            years: 0,
            months: 0,
            days: Math.round(diffDays(m0day, m1day)),
            milliseconds: (m1.valueOf() - m1day.valueOf()) - (m0.valueOf() - m0day.valueOf()),
        };
    }
    // Diffing Whole Units
    function diffWholeWeeks(m0, m1) {
        var d = diffWholeDays(m0, m1);
        if (d !== null && d % 7 === 0) {
            return d / 7;
        }
        return null;
    }
    function diffWholeDays(m0, m1) {
        if (timeAsMs(m0) === timeAsMs(m1)) {
            return Math.round(diffDays(m0, m1));
        }
        return null;
    }
    // Start-Of
    function startOfDay(m) {
        return arrayToUtcDate([
            m.getUTCFullYear(),
            m.getUTCMonth(),
            m.getUTCDate(),
        ]);
    }
    function startOfHour(m) {
        return arrayToUtcDate([
            m.getUTCFullYear(),
            m.getUTCMonth(),
            m.getUTCDate(),
            m.getUTCHours(),
        ]);
    }
    function startOfMinute(m) {
        return arrayToUtcDate([
            m.getUTCFullYear(),
            m.getUTCMonth(),
            m.getUTCDate(),
            m.getUTCHours(),
            m.getUTCMinutes(),
        ]);
    }
    function startOfSecond(m) {
        return arrayToUtcDate([
            m.getUTCFullYear(),
            m.getUTCMonth(),
            m.getUTCDate(),
            m.getUTCHours(),
            m.getUTCMinutes(),
            m.getUTCSeconds(),
        ]);
    }
    // Week Computation
    function weekOfYear(marker, dow, doy) {
        var y = marker.getUTCFullYear();
        var w = weekOfGivenYear(marker, y, dow, doy);
        if (w < 1) {
            return weekOfGivenYear(marker, y - 1, dow, doy);
        }
        var nextW = weekOfGivenYear(marker, y + 1, dow, doy);
        if (nextW >= 1) {
            return Math.min(w, nextW);
        }
        return w;
    }
    function weekOfGivenYear(marker, year, dow, doy) {
        var firstWeekStart = arrayToUtcDate([year, 0, 1 + firstWeekOffset(year, dow, doy)]);
        var dayStart = startOfDay(marker);
        var days = Math.round(diffDays(firstWeekStart, dayStart));
        return Math.floor(days / 7) + 1; // zero-indexed
    }
    // start-of-first-week - start-of-year
    function firstWeekOffset(year, dow, doy) {
        // first-week day -- which january is always in the first week (4 for iso, 1 for other)
        var fwd = 7 + dow - doy;
        // first-week day local weekday -- which local weekday is fwd
        var fwdlw = (7 + arrayToUtcDate([year, 0, fwd]).getUTCDay() - dow) % 7;
        return -fwdlw + fwd - 1;
    }
    // Array Conversion
    function dateToLocalArray(date) {
        return [
            date.getFullYear(),
            date.getMonth(),
            date.getDate(),
            date.getHours(),
            date.getMinutes(),
            date.getSeconds(),
            date.getMilliseconds(),
        ];
    }
    function arrayToLocalDate(a) {
        return new Date(a[0], a[1] || 0, a[2] == null ? 1 : a[2], // day of month
        a[3] || 0, a[4] || 0, a[5] || 0);
    }
    function dateToUtcArray(date) {
        return [
            date.getUTCFullYear(),
            date.getUTCMonth(),
            date.getUTCDate(),
            date.getUTCHours(),
            date.getUTCMinutes(),
            date.getUTCSeconds(),
            date.getUTCMilliseconds(),
        ];
    }
    function arrayToUtcDate(a) {
        // according to web standards (and Safari), a month index is required.
        // massage if only given a year.
        if (a.length === 1) {
            a = a.concat([0]);
        }
        return new Date(Date.UTC.apply(Date, a));
    }
    // Other Utils
    function isValidDate(m) {
        return !isNaN(m.valueOf());
    }
    function timeAsMs(m) {
        return m.getUTCHours() * 1000 * 60 * 60 +
            m.getUTCMinutes() * 1000 * 60 +
            m.getUTCSeconds() * 1000 +
            m.getUTCMilliseconds();
    }

    function createEventInstance(defId, range, forcedStartTzo, forcedEndTzo) {
        return {
            instanceId: guid(),
            defId: defId,
            range: range,
            forcedStartTzo: forcedStartTzo == null ? null : forcedStartTzo,
            forcedEndTzo: forcedEndTzo == null ? null : forcedEndTzo,
        };
    }

    var hasOwnProperty = Object.prototype.hasOwnProperty;
    // Merges an array of objects into a single object.
    // The second argument allows for an array of property names who's object values will be merged together.
    function mergeProps(propObjs, complexPropsMap) {
        var dest = {};
        if (complexPropsMap) {
            for (var name_1 in complexPropsMap) {
                var complexObjs = [];
                // collect the trailing object values, stopping when a non-object is discovered
                for (var i = propObjs.length - 1; i >= 0; i -= 1) {
                    var val = propObjs[i][name_1];
                    if (typeof val === 'object' && val) { // non-null object
                        complexObjs.unshift(val);
                    }
                    else if (val !== undefined) {
                        dest[name_1] = val; // if there were no objects, this value will be used
                        break;
                    }
                }
                // if the trailing values were objects, use the merged value
                if (complexObjs.length) {
                    dest[name_1] = mergeProps(complexObjs);
                }
            }
        }
        // copy values into the destination, going from last to first
        for (var i = propObjs.length - 1; i >= 0; i -= 1) {
            var props = propObjs[i];
            for (var name_2 in props) {
                if (!(name_2 in dest)) { // if already assigned by previous props or complex props, don't reassign
                    dest[name_2] = props[name_2];
                }
            }
        }
        return dest;
    }
    function filterHash(hash, func) {
        var filtered = {};
        for (var key in hash) {
            if (func(hash[key], key)) {
                filtered[key] = hash[key];
            }
        }
        return filtered;
    }
    function mapHash(hash, func) {
        var newHash = {};
        for (var key in hash) {
            newHash[key] = func(hash[key], key);
        }
        return newHash;
    }
    function arrayToHash(a) {
        var hash = {};
        for (var _i = 0, a_1 = a; _i < a_1.length; _i++) {
            var item = a_1[_i];
            hash[item] = true;
        }
        return hash;
    }
    function buildHashFromArray(a, func) {
        var hash = {};
        for (var i = 0; i < a.length; i += 1) {
            var tuple = func(a[i], i);
            hash[tuple[0]] = tuple[1];
        }
        return hash;
    }
    function hashValuesToArray(obj) {
        var a = [];
        for (var key in obj) {
            a.push(obj[key]);
        }
        return a;
    }
    function isPropsEqual(obj0, obj1) {
        if (obj0 === obj1) {
            return true;
        }
        for (var key in obj0) {
            if (hasOwnProperty.call(obj0, key)) {
                if (!(key in obj1)) {
                    return false;
                }
            }
        }
        for (var key in obj1) {
            if (hasOwnProperty.call(obj1, key)) {
                if (obj0[key] !== obj1[key]) {
                    return false;
                }
            }
        }
        return true;
    }
    function getUnequalProps(obj0, obj1) {
        var keys = [];
        for (var key in obj0) {
            if (hasOwnProperty.call(obj0, key)) {
                if (!(key in obj1)) {
                    keys.push(key);
                }
            }
        }
        for (var key in obj1) {
            if (hasOwnProperty.call(obj1, key)) {
                if (obj0[key] !== obj1[key]) {
                    keys.push(key);
                }
            }
        }
        return keys;
    }
    function compareObjs(oldProps, newProps, equalityFuncs) {
        if (equalityFuncs === void 0) { equalityFuncs = {}; }
        if (oldProps === newProps) {
            return true;
        }
        for (var key in newProps) {
            if (key in oldProps && isObjValsEqual(oldProps[key], newProps[key], equalityFuncs[key])) ;
            else {
                return false;
            }
        }
        // check for props that were omitted in the new
        for (var key in oldProps) {
            if (!(key in newProps)) {
                return false;
            }
        }
        return true;
    }
    /*
    assumed "true" equality for handler names like "onReceiveSomething"
    */
    function isObjValsEqual(val0, val1, comparator) {
        if (val0 === val1 || comparator === true) {
            return true;
        }
        if (comparator) {
            return comparator(val0, val1);
        }
        return false;
    }
    function collectFromHash(hash, startIndex, endIndex, step) {
        if (startIndex === void 0) { startIndex = 0; }
        if (step === void 0) { step = 1; }
        var res = [];
        if (endIndex == null) {
            endIndex = Object.keys(hash).length;
        }
        for (var i = startIndex; i < endIndex; i += step) {
            var val = hash[i];
            if (val !== undefined) { // will disregard undefined for sparse arrays
                res.push(val);
            }
        }
        return res;
    }

    function parseRecurring(refined, defaultAllDay, dateEnv, recurringTypes) {
        for (var i = 0; i < recurringTypes.length; i += 1) {
            var parsed = recurringTypes[i].parse(refined, dateEnv);
            if (parsed) {
                var allDay = refined.allDay;
                if (allDay == null) {
                    allDay = defaultAllDay;
                    if (allDay == null) {
                        allDay = parsed.allDayGuess;
                        if (allDay == null) {
                            allDay = false;
                        }
                    }
                }
                return {
                    allDay: allDay,
                    duration: parsed.duration,
                    typeData: parsed.typeData,
                    typeId: i,
                };
            }
        }
        return null;
    }
    function expandRecurring(eventStore, framingRange, context) {
        var dateEnv = context.dateEnv, pluginHooks = context.pluginHooks, options = context.options;
        var defs = eventStore.defs, instances = eventStore.instances;
        // remove existing recurring instances
        // TODO: bad. always expand events as a second step
        instances = filterHash(instances, function (instance) { return !defs[instance.defId].recurringDef; });
        for (var defId in defs) {
            var def = defs[defId];
            if (def.recurringDef) {
                var duration = def.recurringDef.duration;
                if (!duration) {
                    duration = def.allDay ?
                        options.defaultAllDayEventDuration :
                        options.defaultTimedEventDuration;
                }
                var starts = expandRecurringRanges(def, duration, framingRange, dateEnv, pluginHooks.recurringTypes);
                for (var _i = 0, starts_1 = starts; _i < starts_1.length; _i++) {
                    var start = starts_1[_i];
                    var instance = createEventInstance(defId, {
                        start: start,
                        end: dateEnv.add(start, duration),
                    });
                    instances[instance.instanceId] = instance;
                }
            }
        }
        return { defs: defs, instances: instances };
    }
    /*
    Event MUST have a recurringDef
    */
    function expandRecurringRanges(eventDef, duration, framingRange, dateEnv, recurringTypes) {
        var typeDef = recurringTypes[eventDef.recurringDef.typeId];
        var markers = typeDef.expand(eventDef.recurringDef.typeData, {
            start: dateEnv.subtract(framingRange.start, duration),
            end: framingRange.end,
        }, dateEnv);
        // the recurrence plugins don't guarantee that all-day events are start-of-day, so we have to
        if (eventDef.allDay) {
            markers = markers.map(startOfDay);
        }
        return markers;
    }

    var INTERNAL_UNITS = ['years', 'months', 'days', 'milliseconds'];
    var PARSE_RE = /^(-?)(?:(\\d+)\\.)?(\\d+):(\\d\\d)(?::(\\d\\d)(?:\\.(\\d\\d\\d))?)?/;
    // Parsing and Creation
    function createDuration(input, unit) {
        var _a;
        if (typeof input === 'string') {
            return parseString(input);
        }
        if (typeof input === 'object' && input) { // non-null object
            return parseObject(input);
        }
        if (typeof input === 'number') {
            return parseObject((_a = {}, _a[unit || 'milliseconds'] = input, _a));
        }
        return null;
    }
    function parseString(s) {
        var m = PARSE_RE.exec(s);
        if (m) {
            var sign = m[1] ? -1 : 1;
            return {
                years: 0,
                months: 0,
                days: sign * (m[2] ? parseInt(m[2], 10) : 0),
                milliseconds: sign * ((m[3] ? parseInt(m[3], 10) : 0) * 60 * 60 * 1000 + // hours
                    (m[4] ? parseInt(m[4], 10) : 0) * 60 * 1000 + // minutes
                    (m[5] ? parseInt(m[5], 10) : 0) * 1000 + // seconds
                    (m[6] ? parseInt(m[6], 10) : 0) // ms
                ),
            };
        }
        return null;
    }
    function parseObject(obj) {
        var duration = {
            years: obj.years || obj.year || 0,
            months: obj.months || obj.month || 0,
            days: obj.days || obj.day || 0,
            milliseconds: (obj.hours || obj.hour || 0) * 60 * 60 * 1000 + // hours
                (obj.minutes || obj.minute || 0) * 60 * 1000 + // minutes
                (obj.seconds || obj.second || 0) * 1000 + // seconds
                (obj.milliseconds || obj.millisecond || obj.ms || 0), // ms
        };
        var weeks = obj.weeks || obj.week;
        if (weeks) {
            duration.days += weeks * 7;
            duration.specifiedWeeks = true;
        }
        return duration;
    }
    // Equality
    function durationsEqual(d0, d1) {
        return d0.years === d1.years &&
            d0.months === d1.months &&
            d0.days === d1.days &&
            d0.milliseconds === d1.milliseconds;
    }
    function asCleanDays(dur) {
        if (!dur.years && !dur.months && !dur.milliseconds) {
            return dur.days;
        }
        return 0;
    }
    // Simple Math
    function addDurations(d0, d1) {
        return {
            years: d0.years + d1.years,
            months: d0.months + d1.months,
            days: d0.days + d1.days,
            milliseconds: d0.milliseconds + d1.milliseconds,
        };
    }
    function subtractDurations(d1, d0) {
        return {
            years: d1.years - d0.years,
            months: d1.months - d0.months,
            days: d1.days - d0.days,
            milliseconds: d1.milliseconds - d0.milliseconds,
        };
    }
    function multiplyDuration(d, n) {
        return {
            years: d.years * n,
            months: d.months * n,
            days: d.days * n,
            milliseconds: d.milliseconds * n,
        };
    }
    // Conversions
    // "Rough" because they are based on average-case Gregorian months/years
    function asRoughYears(dur) {
        return asRoughDays(dur) / 365;
    }
    function asRoughMonths(dur) {
        return asRoughDays(dur) / 30;
    }
    function asRoughDays(dur) {
        return asRoughMs(dur) / 864e5;
    }
    function asRoughMinutes(dur) {
        return asRoughMs(dur) / (1000 * 60);
    }
    function asRoughSeconds(dur) {
        return asRoughMs(dur) / 1000;
    }
    function asRoughMs(dur) {
        return dur.years * (365 * 864e5) +
            dur.months * (30 * 864e5) +
            dur.days * 864e5 +
            dur.milliseconds;
    }
    // Advanced Math
    function wholeDivideDurations(numerator, denominator) {
        var res = null;
        for (var i = 0; i < INTERNAL_UNITS.length; i += 1) {
            var unit = INTERNAL_UNITS[i];
            if (denominator[unit]) {
                var localRes = numerator[unit] / denominator[unit];
                if (!isInt(localRes) || (res !== null && res !== localRes)) {
                    return null;
                }
                res = localRes;
            }
            else if (numerator[unit]) {
                // needs to divide by something but can't!
                return null;
            }
        }
        return res;
    }
    function greatestDurationDenominator(dur) {
        var ms = dur.milliseconds;
        if (ms) {
            if (ms % 1000 !== 0) {
                return { unit: 'millisecond', value: ms };
            }
            if (ms % (1000 * 60) !== 0) {
                return { unit: 'second', value: ms / 1000 };
            }
            if (ms % (1000 * 60 * 60) !== 0) {
                return { unit: 'minute', value: ms / (1000 * 60) };
            }
            if (ms) {
                return { unit: 'hour', value: ms / (1000 * 60 * 60) };
            }
        }
        if (dur.days) {
            if (dur.specifiedWeeks && dur.days % 7 === 0) {
                return { unit: 'week', value: dur.days / 7 };
            }
            return { unit: 'day', value: dur.days };
        }
        if (dur.months) {
            return { unit: 'month', value: dur.months };
        }
        if (dur.years) {
            return { unit: 'year', value: dur.years };
        }
        return { unit: 'millisecond', value: 0 };
    }

    // timeZoneOffset is in minutes
    function buildIsoString(marker, timeZoneOffset, stripZeroTime) {
        if (stripZeroTime === void 0) { stripZeroTime = false; }
        var s = marker.toISOString();
        s = s.replace('.000', '');
        if (stripZeroTime) {
            s = s.replace('T00:00:00Z', '');
        }
        if (s.length > 10) { // time part wasn't stripped, can add timezone info
            if (timeZoneOffset == null) {
                s = s.replace('Z', '');
            }
            else if (timeZoneOffset !== 0) {
                s = s.replace('Z', formatTimeZoneOffset(timeZoneOffset, true));
            }
            // otherwise, its UTC-0 and we want to keep the Z
        }
        return s;
    }
    // formats the date, but with no time part
    // TODO: somehow merge with buildIsoString and stripZeroTime
    // TODO: rename. omit "string"
    function formatDayString(marker) {
        return marker.toISOString().replace(/T.*$/, '');
    }
    // TODO: use Date::toISOString and use everything after the T?
    function formatIsoTimeString(marker) {
        return padStart(marker.getUTCHours(), 2) + ':' +
            padStart(marker.getUTCMinutes(), 2) + ':' +
            padStart(marker.getUTCSeconds(), 2);
    }
    function formatTimeZoneOffset(minutes, doIso) {
        if (doIso === void 0) { doIso = false; }
        var sign = minutes < 0 ? '-' : '+';
        var abs = Math.abs(minutes);
        var hours = Math.floor(abs / 60);
        var mins = Math.round(abs % 60);
        if (doIso) {
            return sign + padStart(hours, 2) + ":" + padStart(mins, 2);
        }
        return "GMT" + sign + hours + (mins ? ":" + padStart(mins, 2) : '');
    }

    // TODO: new util arrayify?
    function removeExact(array, exactVal) {
        var removeCnt = 0;
        var i = 0;
        while (i < array.length) {
            if (array[i] === exactVal) {
                array.splice(i, 1);
                removeCnt += 1;
            }
            else {
                i += 1;
            }
        }
        return removeCnt;
    }
    function isArraysEqual(a0, a1, equalityFunc) {
        if (a0 === a1) {
            return true;
        }
        var len = a0.length;
        var i;
        if (len !== a1.length) { // not array? or not same length?
            return false;
        }
        for (i = 0; i < len; i += 1) {
            if (!(equalityFunc ? equalityFunc(a0[i], a1[i]) : a0[i] === a1[i])) {
                return false;
            }
        }
        return true;
    }

    function memoize(workerFunc, resEquality, teardownFunc) {
        var currentArgs;
        var currentRes;
        return function () {
            var newArgs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                newArgs[_i] = arguments[_i];
            }
            if (!currentArgs) {
                currentRes = workerFunc.apply(this, newArgs);
            }
            else if (!isArraysEqual(currentArgs, newArgs)) {
                if (teardownFunc) {
                    teardownFunc(currentRes);
                }
                var res = workerFunc.apply(this, newArgs);
                if (!resEquality || !resEquality(res, currentRes)) {
                    currentRes = res;
                }
            }
            currentArgs = newArgs;
            return currentRes;
        };
    }
    function memoizeObjArg(workerFunc, resEquality, teardownFunc) {
        var _this = this;
        var currentArg;
        var currentRes;
        return function (newArg) {
            if (!currentArg) {
                currentRes = workerFunc.call(_this, newArg);
            }
            else if (!isPropsEqual(currentArg, newArg)) {
                if (teardownFunc) {
                    teardownFunc(currentRes);
                }
                var res = workerFunc.call(_this, newArg);
                if (!resEquality || !resEquality(res, currentRes)) {
                    currentRes = res;
                }
            }
            currentArg = newArg;
            return currentRes;
        };
    }
    function memoizeArraylike(// used at all?
    workerFunc, resEquality, teardownFunc) {
        var _this = this;
        var currentArgSets = [];
        var currentResults = [];
        return function (newArgSets) {
            var currentLen = currentArgSets.length;
            var newLen = newArgSets.length;
            var i = 0;
            for (; i < currentLen; i += 1) {
                if (!newArgSets[i]) { // one of the old sets no longer exists
                    if (teardownFunc) {
                        teardownFunc(currentResults[i]);
                    }
                }
                else if (!isArraysEqual(currentArgSets[i], newArgSets[i])) {
                    if (teardownFunc) {
                        teardownFunc(currentResults[i]);
                    }
                    var res = workerFunc.apply(_this, newArgSets[i]);
                    if (!resEquality || !resEquality(res, currentResults[i])) {
                        currentResults[i] = res;
                    }
                }
            }
            for (; i < newLen; i += 1) {
                currentResults[i] = workerFunc.apply(_this, newArgSets[i]);
            }
            currentArgSets = newArgSets;
            currentResults.splice(newLen); // remove excess
            return currentResults;
        };
    }
    function memoizeHashlike(// used?
    workerFunc, resEquality, teardownFunc) {
        var _this = this;
        var currentArgHash = {};
        var currentResHash = {};
        return function (newArgHash) {
            var newResHash = {};
            for (var key in newArgHash) {
                if (!currentResHash[key]) {
                    newResHash[key] = workerFunc.apply(_this, newArgHash[key]);
                }
                else if (!isArraysEqual(currentArgHash[key], newArgHash[key])) {
                    if (teardownFunc) {
                        teardownFunc(currentResHash[key]);
                    }
                    var res = workerFunc.apply(_this, newArgHash[key]);
                    newResHash[key] = (resEquality && resEquality(res, currentResHash[key]))
                        ? currentResHash[key]
                        : res;
                }
                else {
                    newResHash[key] = currentResHash[key];
                }
            }
            currentArgHash = newArgHash;
            currentResHash = newResHash;
            return newResHash;
        };
    }

    var EXTENDED_SETTINGS_AND_SEVERITIES = {
        week: 3,
        separator: 0,
        omitZeroMinute: 0,
        meridiem: 0,
        omitCommas: 0,
    };
    var STANDARD_DATE_PROP_SEVERITIES = {
        timeZoneName: 7,
        era: 6,
        year: 5,
        month: 4,
        day: 2,
        weekday: 2,
        hour: 1,
        minute: 1,
        second: 1,
    };
    var MERIDIEM_RE = /\\s*([ap])\\.?m\\.?/i; // eats up leading spaces too
    var COMMA_RE = /,/g; // we need re for globalness
    var MULTI_SPACE_RE = /\\s+/g;
    var LTR_RE = /\\u200e/g; // control character
    var UTC_RE = /UTC|GMT/;
    var NativeFormatter = /** @class */ (function () {
        function NativeFormatter(formatSettings) {
            var standardDateProps = {};
            var extendedSettings = {};
            var severity = 0;
            for (var name_1 in formatSettings) {
                if (name_1 in EXTENDED_SETTINGS_AND_SEVERITIES) {
                    extendedSettings[name_1] = formatSettings[name_1];
                    severity = Math.max(EXTENDED_SETTINGS_AND_SEVERITIES[name_1], severity);
                }
                else {
                    standardDateProps[name_1] = formatSettings[name_1];
                    if (name_1 in STANDARD_DATE_PROP_SEVERITIES) { // TODO: what about hour12? no severity
                        severity = Math.max(STANDARD_DATE_PROP_SEVERITIES[name_1], severity);
                    }
                }
            }
            this.standardDateProps = standardDateProps;
            this.extendedSettings = extendedSettings;
            this.severity = severity;
            this.buildFormattingFunc = memoize(buildFormattingFunc);
        }
        NativeFormatter.prototype.format = function (date, context) {
            return this.buildFormattingFunc(this.standardDateProps, this.extendedSettings, context)(date);
        };
        NativeFormatter.prototype.formatRange = function (start, end, context, betterDefaultSeparator) {
            var _a = this, standardDateProps = _a.standardDateProps, extendedSettings = _a.extendedSettings;
            var diffSeverity = computeMarkerDiffSeverity(start.marker, end.marker, context.calendarSystem);
            if (!diffSeverity) {
                return this.format(start, context);
            }
            var biggestUnitForPartial = diffSeverity;
            if (biggestUnitForPartial > 1 && // the two dates are different in a way that's larger scale than time
                (standardDateProps.year === 'numeric' || standardDateProps.year === '2-digit') &&
                (standardDateProps.month === 'numeric' || standardDateProps.month === '2-digit') &&
                (standardDateProps.day === 'numeric' || standardDateProps.day === '2-digit')) {
                biggestUnitForPartial = 1; // make it look like the dates are only different in terms of time
            }
            var full0 = this.format(start, context);
            var full1 = this.format(end, context);
            if (full0 === full1) {
                return full0;
            }
            var partialDateProps = computePartialFormattingOptions(standardDateProps, biggestUnitForPartial);
            var partialFormattingFunc = buildFormattingFunc(partialDateProps, extendedSettings, context);
            var partial0 = partialFormattingFunc(start);
            var partial1 = partialFormattingFunc(end);
            var insertion = findCommonInsertion(full0, partial0, full1, partial1);
            var separator = extendedSettings.separator || betterDefaultSeparator || context.defaultSeparator || '';
            if (insertion) {
                return insertion.before + partial0 + separator + partial1 + insertion.after;
            }
            return full0 + separator + full1;
        };
        NativeFormatter.prototype.getLargestUnit = function () {
            switch (this.severity) {
                case 7:
                case 6:
                case 5:
                    return 'year';
                case 4:
                    return 'month';
                case 3:
                    return 'week';
                case 2:
                    return 'day';
                default:
                    return 'time'; // really?
            }
        };
        return NativeFormatter;
    }());
    function buildFormattingFunc(standardDateProps, extendedSettings, context) {
        var standardDatePropCnt = Object.keys(standardDateProps).length;
        if (standardDatePropCnt === 1 && standardDateProps.timeZoneName === 'short') {
            return function (date) { return (formatTimeZoneOffset(date.timeZoneOffset)); };
        }
        if (standardDatePropCnt === 0 && extendedSettings.week) {
            return function (date) { return (formatWeekNumber(context.computeWeekNumber(date.marker), context.weekText, context.locale, extendedSettings.week)); };
        }
        return buildNativeFormattingFunc(standardDateProps, extendedSettings, context);
    }
    function buildNativeFormattingFunc(standardDateProps, extendedSettings, context) {
        standardDateProps = __assign({}, standardDateProps); // copy
        extendedSettings = __assign({}, extendedSettings); // copy
        sanitizeSettings(standardDateProps, extendedSettings);
        standardDateProps.timeZone = 'UTC'; // we leverage the only guaranteed timeZone for our UTC markers
        var normalFormat = new Intl.DateTimeFormat(context.locale.codes, standardDateProps);
        var zeroFormat; // needed?
        if (extendedSettings.omitZeroMinute) {
            var zeroProps = __assign({}, standardDateProps);
            delete zeroProps.minute; // seconds and ms were already considered in sanitizeSettings
            zeroFormat = new Intl.DateTimeFormat(context.locale.codes, zeroProps);
        }
        return function (date) {
            var marker = date.marker;
            var format;
            if (zeroFormat && !marker.getUTCMinutes()) {
                format = zeroFormat;
            }
            else {
                format = normalFormat;
            }
            var s = format.format(marker);
            return postProcess(s, date, standardDateProps, extendedSettings, context);
        };
    }
    function sanitizeSettings(standardDateProps, extendedSettings) {
        // deal with a browser inconsistency where formatting the timezone
        // requires that the hour/minute be present.
        if (standardDateProps.timeZoneName) {
            if (!standardDateProps.hour) {
                standardDateProps.hour = '2-digit';
            }
            if (!standardDateProps.minute) {
                standardDateProps.minute = '2-digit';
            }
        }
        // only support short timezone names
        if (standardDateProps.timeZoneName === 'long') {
            standardDateProps.timeZoneName = 'short';
        }
        // if requesting to display seconds, MUST display minutes
        if (extendedSettings.omitZeroMinute && (standardDateProps.second || standardDateProps.millisecond)) {
            delete extendedSettings.omitZeroMinute;
        }
    }
    function postProcess(s, date, standardDateProps, extendedSettings, context) {
        s = s.replace(LTR_RE, ''); // remove left-to-right control chars. do first. good for other regexes
        if (standardDateProps.timeZoneName === 'short') {
            s = injectTzoStr(s, (context.timeZone === 'UTC' || date.timeZoneOffset == null) ?
                'UTC' : // important to normalize for IE, which does "GMT"
                formatTimeZoneOffset(date.timeZoneOffset));
        }
        if (extendedSettings.omitCommas) {
            s = s.replace(COMMA_RE, '').trim();
        }
        if (extendedSettings.omitZeroMinute) {
            s = s.replace(':00', ''); // zeroFormat doesn't always achieve this
        }
        // ^ do anything that might create adjacent spaces before this point,
        // because MERIDIEM_RE likes to eat up loading spaces
        if (extendedSettings.meridiem === false) {
            s = s.replace(MERIDIEM_RE, '').trim();
        }
        else if (extendedSettings.meridiem === 'narrow') { // a/p
            s = s.replace(MERIDIEM_RE, function (m0, m1) { return m1.toLocaleLowerCase(); });
        }
        else if (extendedSettings.meridiem === 'short') { // am/pm
            s = s.replace(MERIDIEM_RE, function (m0, m1) { return m1.toLocaleLowerCase() + "m"; });
        }
        else if (extendedSettings.meridiem === 'lowercase') { // other meridiem transformers already converted to lowercase
            s = s.replace(MERIDIEM_RE, function (m0) { return m0.toLocaleLowerCase(); });
        }
        s = s.replace(MULTI_SPACE_RE, ' ');
        s = s.trim();
        return s;
    }
    function injectTzoStr(s, tzoStr) {
        var replaced = false;
        s = s.replace(UTC_RE, function () {
            replaced = true;
            return tzoStr;
        });
        // IE11 doesn't include UTC/GMT in the original string, so append to end
        if (!replaced) {
            s += " " + tzoStr;
        }
        return s;
    }
    function formatWeekNumber(num, weekText, locale, display) {
        var parts = [];
        if (display === 'narrow') {
            parts.push(weekText);
        }
        else if (display === 'short') {
            parts.push(weekText, ' ');
        }
        // otherwise, considered 'numeric'
        parts.push(locale.simpleNumberFormat.format(num));
        if (locale.options.direction === 'rtl') { // TODO: use control characters instead?
            parts.reverse();
        }
        return parts.join('');
    }
    // Range Formatting Utils
    // 0 = exactly the same
    // 1 = different by time
    // and bigger
    function computeMarkerDiffSeverity(d0, d1, ca) {
        if (ca.getMarkerYear(d0) !== ca.getMarkerYear(d1)) {
            return 5;
        }
        if (ca.getMarkerMonth(d0) !== ca.getMarkerMonth(d1)) {
            return 4;
        }
        if (ca.getMarkerDay(d0) !== ca.getMarkerDay(d1)) {
            return 2;
        }
        if (timeAsMs(d0) !== timeAsMs(d1)) {
            return 1;
        }
        return 0;
    }
    function computePartialFormattingOptions(options, biggestUnit) {
        var partialOptions = {};
        for (var name_2 in options) {
            if (!(name_2 in STANDARD_DATE_PROP_SEVERITIES) || // not a date part prop (like timeZone)
                STANDARD_DATE_PROP_SEVERITIES[name_2] <= biggestUnit) {
                partialOptions[name_2] = options[name_2];
            }
        }
        return partialOptions;
    }
    function findCommonInsertion(full0, partial0, full1, partial1) {
        var i0 = 0;
        while (i0 < full0.length) {
            var found0 = full0.indexOf(partial0, i0);
            if (found0 === -1) {
                break;
            }
            var before0 = full0.substr(0, found0);
            i0 = found0 + partial0.length;
            var after0 = full0.substr(i0);
            var i1 = 0;
            while (i1 < full1.length) {
                var found1 = full1.indexOf(partial1, i1);
                if (found1 === -1) {
                    break;
                }
                var before1 = full1.substr(0, found1);
                i1 = found1 + partial1.length;
                var after1 = full1.substr(i1);
                if (before0 === before1 && after0 === after1) {
                    return {
                        before: before0,
                        after: after0,
                    };
                }
            }
        }
        return null;
    }

    function expandZonedMarker(dateInfo, calendarSystem) {
        var a = calendarSystem.markerToArray(dateInfo.marker);
        return {
            marker: dateInfo.marker,
            timeZoneOffset: dateInfo.timeZoneOffset,
            array: a,
            year: a[0],
            month: a[1],
            day: a[2],
            hour: a[3],
            minute: a[4],
            second: a[5],
            millisecond: a[6],
        };
    }

    function createVerboseFormattingArg(start, end, context, betterDefaultSeparator) {
        var startInfo = expandZonedMarker(start, context.calendarSystem);
        var endInfo = end ? expandZonedMarker(end, context.calendarSystem) : null;
        return {
            date: startInfo,
            start: startInfo,
            end: endInfo,
            timeZone: context.timeZone,
            localeCodes: context.locale.codes,
            defaultSeparator: betterDefaultSeparator || context.defaultSeparator,
        };
    }

    /*
    TODO: fix the terminology of "formatter" vs "formatting func"
    */
    /*
    At the time of instantiation, this object does not know which cmd-formatting system it will use.
    It receives this at the time of formatting, as a setting.
    */
    var CmdFormatter = /** @class */ (function () {
        function CmdFormatter(cmdStr) {
            this.cmdStr = cmdStr;
        }
        CmdFormatter.prototype.format = function (date, context, betterDefaultSeparator) {
            return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(date, null, context, betterDefaultSeparator));
        };
        CmdFormatter.prototype.formatRange = function (start, end, context, betterDefaultSeparator) {
            return context.cmdFormatter(this.cmdStr, createVerboseFormattingArg(start, end, context, betterDefaultSeparator));
        };
        return CmdFormatter;
    }());

    var FuncFormatter = /** @class */ (function () {
        function FuncFormatter(func) {
            this.func = func;
        }
        FuncFormatter.prototype.format = function (date, context, betterDefaultSeparator) {
            return this.func(createVerboseFormattingArg(date, null, context, betterDefaultSeparator));
        };
        FuncFormatter.prototype.formatRange = function (start, end, context, betterDefaultSeparator) {
            return this.func(createVerboseFormattingArg(start, end, context, betterDefaultSeparator));
        };
        return FuncFormatter;
    }());

    function createFormatter(input) {
        if (typeof input === 'object' && input) { // non-null object
            return new NativeFormatter(input);
        }
        if (typeof input === 'string') {
            return new CmdFormatter(input);
        }
        if (typeof input === 'function') {
            return new FuncFormatter(input);
        }
        return null;
    }

    // base options
    // ------------
    var BASE_OPTION_REFINERS = {
        navLinkDayClick: identity,
        navLinkWeekClick: identity,
        duration: createDuration,
        bootstrapFontAwesome: identity,
        buttonIcons: identity,
        customButtons: identity,
        defaultAllDayEventDuration: createDuration,
        defaultTimedEventDuration: createDuration,
        nextDayThreshold: createDuration,
        scrollTime: createDuration,
        scrollTimeReset: Boolean,
        slotMinTime: createDuration,
        slotMaxTime: createDuration,
        dayPopoverFormat: createFormatter,
        slotDuration: createDuration,
        snapDuration: createDuration,
        headerToolbar: identity,
        footerToolbar: identity,
        defaultRangeSeparator: String,
        titleRangeSeparator: String,
        forceEventDuration: Boolean,
        dayHeaders: Boolean,
        dayHeaderFormat: createFormatter,
        dayHeaderClassNames: identity,
        dayHeaderContent: identity,
        dayHeaderDidMount: identity,
        dayHeaderWillUnmount: identity,
        dayCellClassNames: identity,
        dayCellContent: identity,
        dayCellDidMount: identity,
        dayCellWillUnmount: identity,
        initialView: String,
        aspectRatio: Number,
        weekends: Boolean,
        weekNumberCalculation: identity,
        weekNumbers: Boolean,
        weekNumberClassNames: identity,
        weekNumberContent: identity,
        weekNumberDidMount: identity,
        weekNumberWillUnmount: identity,
        editable: Boolean,
        viewClassNames: identity,
        viewDidMount: identity,
        viewWillUnmount: identity,
        nowIndicator: Boolean,
        nowIndicatorClassNames: identity,
        nowIndicatorContent: identity,
        nowIndicatorDidMount: identity,
        nowIndicatorWillUnmount: identity,
        showNonCurrentDates: Boolean,
        lazyFetching: Boolean,
        startParam: String,
        endParam: String,
        timeZoneParam: String,
        timeZone: String,
        locales: identity,
        locale: identity,
        themeSystem: String,
        dragRevertDuration: Number,
        dragScroll: Boolean,
        allDayMaintainDuration: Boolean,
        unselectAuto: Boolean,
        dropAccept: identity,
        eventOrder: parseFieldSpecs,
        eventOrderStrict: Boolean,
        handleWindowResize: Boolean,
        windowResizeDelay: Number,
        longPressDelay: Number,
        eventDragMinDistance: Number,
        expandRows: Boolean,
        height: identity,
        contentHeight: identity,
        direction: String,
        weekNumberFormat: createFormatter,
        eventResizableFromStart: Boolean,
        displayEventTime: Boolean,
        displayEventEnd: Boolean,
        weekText: String,
        progressiveEventRendering: Boolean,
        businessHours: identity,
        initialDate: identity,
        now: identity,
        eventDataTransform: identity,
        stickyHeaderDates: identity,
        stickyFooterScrollbar: identity,
        viewHeight: identity,
        defaultAllDay: Boolean,
        eventSourceFailure: identity,
        eventSourceSuccess: identity,
        eventDisplay: String,
        eventStartEditable: Boolean,
        eventDurationEditable: Boolean,
        eventOverlap: identity,
        eventConstraint: identity,
        eventAllow: identity,
        eventBackgroundColor: String,
        eventBorderColor: String,
        eventTextColor: String,
        eventColor: String,
        eventClassNames: identity,
        eventContent: identity,
        eventDidMount: identity,
        eventWillUnmount: identity,
        selectConstraint: identity,
        selectOverlap: identity,
        selectAllow: identity,
        droppable: Boolean,
        unselectCancel: String,
        slotLabelFormat: identity,
        slotLaneClassNames: identity,
        slotLaneContent: identity,
        slotLaneDidMount: identity,
        slotLaneWillUnmount: identity,
        slotLabelClassNames: identity,
        slotLabelContent: identity,
        slotLabelDidMount: identity,
        slotLabelWillUnmount: identity,
        dayMaxEvents: identity,
        dayMaxEventRows: identity,
        dayMinWidth: Number,
        slotLabelInterval: createDuration,
        allDayText: String,
        allDayClassNames: identity,
        allDayContent: identity,
        allDayDidMount: identity,
        allDayWillUnmount: identity,
        slotMinWidth: Number,
        navLinks: Boolean,
        eventTimeFormat: createFormatter,
        rerenderDelay: Number,
        moreLinkText: identity,
        selectMinDistance: Number,
        selectable: Boolean,
        selectLongPressDelay: Number,
        eventLongPressDelay: Number,
        selectMirror: Boolean,
        eventMaxStack: Number,
        eventMinHeight: Number,
        eventMinWidth: Number,
        eventShortHeight: Number,
        slotEventOverlap: Boolean,
        plugins: identity,
        firstDay: Number,
        dayCount: Number,
        dateAlignment: String,
        dateIncrement: createDuration,
        hiddenDays: identity,
        monthMode: Boolean,
        fixedWeekCount: Boolean,
        validRange: identity,
        visibleRange: identity,
        titleFormat: identity,
        // only used by list-view, but languages define the value, so we need it in base options
        noEventsText: String,
        moreLinkClick: identity,
        moreLinkClassNames: identity,
        moreLinkContent: identity,
        moreLinkDidMount: identity,
        moreLinkWillUnmount: identity,
    };
    // do NOT give a type here. need \`typeof BASE_OPTION_DEFAULTS\` to give real results.
    // raw values.
    var BASE_OPTION_DEFAULTS = {
        eventDisplay: 'auto',
        defaultRangeSeparator: ' - ',
        titleRangeSeparator: ' \\u2013 ',
        defaultTimedEventDuration: '01:00:00',
        defaultAllDayEventDuration: { day: 1 },
        forceEventDuration: false,
        nextDayThreshold: '00:00:00',
        dayHeaders: true,
        initialView: '',
        aspectRatio: 1.35,
        headerToolbar: {
            start: 'title',
            center: '',
            end: 'today prev,next',
        },
        weekends: true,
        weekNumbers: false,
        weekNumberCalculation: 'local',
        editable: false,
        nowIndicator: false,
        scrollTime: '06:00:00',
        scrollTimeReset: true,
        slotMinTime: '00:00:00',
        slotMaxTime: '24:00:00',
        showNonCurrentDates: true,
        lazyFetching: true,
        startParam: 'start',
        endParam: 'end',
        timeZoneParam: 'timeZone',
        timeZone: 'local',
        locales: [],
        locale: '',
        themeSystem: 'standard',
        dragRevertDuration: 500,
        dragScroll: true,
        allDayMaintainDuration: false,
        unselectAuto: true,
        dropAccept: '*',
        eventOrder: 'start,-duration,allDay,title',
        dayPopoverFormat: { month: 'long', day: 'numeric', year: 'numeric' },
        handleWindowResize: true,
        windowResizeDelay: 100,
        longPressDelay: 1000,
        eventDragMinDistance: 5,
        expandRows: false,
        navLinks: false,
        selectable: false,
        eventMinHeight: 15,
        eventMinWidth: 30,
        eventShortHeight: 30,
    };
    // calendar listeners
    // ------------------
    var CALENDAR_LISTENER_REFINERS = {
        datesSet: identity,
        eventsSet: identity,
        eventAdd: identity,
        eventChange: identity,
        eventRemove: identity,
        windowResize: identity,
        eventClick: identity,
        eventMouseEnter: identity,
        eventMouseLeave: identity,
        select: identity,
        unselect: identity,
        loading: identity,
        // internal
        _unmount: identity,
        _beforeprint: identity,
        _afterprint: identity,
        _noEventDrop: identity,
        _noEventResize: identity,
        _resize: identity,
        _scrollRequest: identity,
    };
    // calendar-specific options
    // -------------------------
    var CALENDAR_OPTION_REFINERS = {
        buttonText: identity,
        views: identity,
        plugins: identity,
        initialEvents: identity,
        events: identity,
        eventSources: identity,
    };
    var COMPLEX_OPTION_COMPARATORS = {
        headerToolbar: isBoolComplexEqual,
        footerToolbar: isBoolComplexEqual,
        buttonText: isBoolComplexEqual,
        buttonIcons: isBoolComplexEqual,
    };
    function isBoolComplexEqual(a, b) {
        if (typeof a === 'object' && typeof b === 'object' && a && b) { // both non-null objects
            return isPropsEqual(a, b);
        }
        return a === b;
    }
    // view-specific options
    // ---------------------
    var VIEW_OPTION_REFINERS = {
        type: String,
        component: identity,
        buttonText: String,
        buttonTextKey: String,
        dateProfileGeneratorClass: identity,
        usesMinMaxTime: Boolean,
        classNames: identity,
        content: identity,
        didMount: identity,
        willUnmount: identity,
    };
    // util funcs
    // ----------------------------------------------------------------------------------------------------
    function mergeRawOptions(optionSets) {
        return mergeProps(optionSets, COMPLEX_OPTION_COMPARATORS);
    }
    function refineProps(input, refiners) {
        var refined = {};
        var extra = {};
        for (var propName in refiners) {
            if (propName in input) {
                refined[propName] = refiners[propName](input[propName]);
            }
        }
        for (var propName in input) {
            if (!(propName in refiners)) {
                extra[propName] = input[propName];
            }
        }
        return { refined: refined, extra: extra };
    }
    function identity(raw) {
        return raw;
    }

    function parseEvents(rawEvents, eventSource, context, allowOpenRange) {
        var eventStore = createEmptyEventStore();
        var eventRefiners = buildEventRefiners(context);
        for (var _i = 0, rawEvents_1 = rawEvents; _i < rawEvents_1.length; _i++) {
            var rawEvent = rawEvents_1[_i];
            var tuple = parseEvent(rawEvent, eventSource, context, allowOpenRange, eventRefiners);
            if (tuple) {
                eventTupleToStore(tuple, eventStore);
            }
        }
        return eventStore;
    }
    function eventTupleToStore(tuple, eventStore) {
        if (eventStore === void 0) { eventStore = createEmptyEventStore(); }
        eventStore.defs[tuple.def.defId] = tuple.def;
        if (tuple.instance) {
            eventStore.instances[tuple.instance.instanceId] = tuple.instance;
        }
        return eventStore;
    }
    // retrieves events that have the same groupId as the instance specified by \`instanceId\`
    // or they are the same as the instance.
    // why might instanceId not be in the store? an event from another calendar?
    function getRelevantEvents(eventStore, instanceId) {
        var instance = eventStore.instances[instanceId];
        if (instance) {
            var def_1 = eventStore.defs[instance.defId];
            // get events/instances with same group
            var newStore = filterEventStoreDefs(eventStore, function (lookDef) { return isEventDefsGrouped(def_1, lookDef); });
            // add the original
            // TODO: wish we could use eventTupleToStore or something like it
            newStore.defs[def_1.defId] = def_1;
            newStore.instances[instance.instanceId] = instance;
            return newStore;
        }
        return createEmptyEventStore();
    }
    function isEventDefsGrouped(def0, def1) {
        return Boolean(def0.groupId && def0.groupId === def1.groupId);
    }
    function createEmptyEventStore() {
        return { defs: {}, instances: {} };
    }
    function mergeEventStores(store0, store1) {
        return {
            defs: __assign(__assign({}, store0.defs), store1.defs),
            instances: __assign(__assign({}, store0.instances), store1.instances),
        };
    }
    function filterEventStoreDefs(eventStore, filterFunc) {
        var defs = filterHash(eventStore.defs, filterFunc);
        var instances = filterHash(eventStore.instances, function (instance) { return (defs[instance.defId] // still exists?
        ); });
        return { defs: defs, instances: instances };
    }
    function excludeSubEventStore(master, sub) {
        var defs = master.defs, instances = master.instances;
        var filteredDefs = {};
        var filteredInstances = {};
        for (var defId in defs) {
            if (!sub.defs[defId]) { // not explicitly excluded
                filteredDefs[defId] = defs[defId];
            }
        }
        for (var instanceId in instances) {
            if (!sub.instances[instanceId] && // not explicitly excluded
                filteredDefs[instances[instanceId].defId] // def wasn't filtered away
            ) {
                filteredInstances[instanceId] = instances[instanceId];
            }
        }
        return {
            defs: filteredDefs,
            instances: filteredInstances,
        };
    }

    function normalizeConstraint(input, context) {
        if (Array.isArray(input)) {
            return parseEvents(input, null, context, true); // allowOpenRange=true
        }
        if (typeof input === 'object' && input) { // non-null object
            return parseEvents([input], null, context, true); // allowOpenRange=true
        }
        if (input != null) {
            return String(input);
        }
        return null;
    }

    function parseClassNames(raw) {
        if (Array.isArray(raw)) {
            return raw;
        }
        if (typeof raw === 'string') {
            return raw.split(/\\s+/);
        }
        return [];
    }

    // TODO: better called "EventSettings" or "EventConfig"
    // TODO: move this file into structs
    // TODO: separate constraint/overlap/allow, because selection uses only that, not other props
    var EVENT_UI_REFINERS = {
        display: String,
        editable: Boolean,
        startEditable: Boolean,
        durationEditable: Boolean,
        constraint: identity,
        overlap: identity,
        allow: identity,
        className: parseClassNames,
        classNames: parseClassNames,
        color: String,
        backgroundColor: String,
        borderColor: String,
        textColor: String,
    };
    var EMPTY_EVENT_UI = {
        display: null,
        startEditable: null,
        durationEditable: null,
        constraints: [],
        overlap: null,
        allows: [],
        backgroundColor: '',
        borderColor: '',
        textColor: '',
        classNames: [],
    };
    function createEventUi(refined, context) {
        var constraint = normalizeConstraint(refined.constraint, context);
        return {
            display: refined.display || null,
            startEditable: refined.startEditable != null ? refined.startEditable : refined.editable,
            durationEditable: refined.durationEditable != null ? refined.durationEditable : refined.editable,
            constraints: constraint != null ? [constraint] : [],
            overlap: refined.overlap != null ? refined.overlap : null,
            allows: refined.allow != null ? [refined.allow] : [],
            backgroundColor: refined.backgroundColor || refined.color || '',
            borderColor: refined.borderColor || refined.color || '',
            textColor: refined.textColor || '',
            classNames: (refined.className || []).concat(refined.classNames || []), // join singular and plural
        };
    }
    // TODO: prevent against problems with <2 args!
    function combineEventUis(uis) {
        return uis.reduce(combineTwoEventUis, EMPTY_EVENT_UI);
    }
    function combineTwoEventUis(item0, item1) {
        return {
            display: item1.display != null ? item1.display : item0.display,
            startEditable: item1.startEditable != null ? item1.startEditable : item0.startEditable,
            durationEditable: item1.durationEditable != null ? item1.durationEditable : item0.durationEditable,
            constraints: item0.constraints.concat(item1.constraints),
            overlap: typeof item1.overlap === 'boolean' ? item1.overlap : item0.overlap,
            allows: item0.allows.concat(item1.allows),
            backgroundColor: item1.backgroundColor || item0.backgroundColor,
            borderColor: item1.borderColor || item0.borderColor,
            textColor: item1.textColor || item0.textColor,
            classNames: item0.classNames.concat(item1.classNames),
        };
    }

    var EVENT_NON_DATE_REFINERS = {
        id: String,
        groupId: String,
        title: String,
        url: String,
    };
    var EVENT_DATE_REFINERS = {
        start: identity,
        end: identity,
        date: identity,
        allDay: Boolean,
    };
    var EVENT_REFINERS = __assign(__assign(__assign({}, EVENT_NON_DATE_REFINERS), EVENT_DATE_REFINERS), { extendedProps: identity });
    function parseEvent(raw, eventSource, context, allowOpenRange, refiners) {
        if (refiners === void 0) { refiners = buildEventRefiners(context); }
        var _a = refineEventDef(raw, context, refiners), refined = _a.refined, extra = _a.extra;
        var defaultAllDay = computeIsDefaultAllDay(eventSource, context);
        var recurringRes = parseRecurring(refined, defaultAllDay, context.dateEnv, context.pluginHooks.recurringTypes);
        if (recurringRes) {
            var def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', recurringRes.allDay, Boolean(recurringRes.duration), context);
            def.recurringDef = {
                typeId: recurringRes.typeId,
                typeData: recurringRes.typeData,
                duration: recurringRes.duration,
            };
            return { def: def, instance: null };
        }
        var singleRes = parseSingle(refined, defaultAllDay, context, allowOpenRange);
        if (singleRes) {
            var def = parseEventDef(refined, extra, eventSource ? eventSource.sourceId : '', singleRes.allDay, singleRes.hasEnd, context);
            var instance = createEventInstance(def.defId, singleRes.range, singleRes.forcedStartTzo, singleRes.forcedEndTzo);
            return { def: def, instance: instance };
        }
        return null;
    }
    function refineEventDef(raw, context, refiners) {
        if (refiners === void 0) { refiners = buildEventRefiners(context); }
        return refineProps(raw, refiners);
    }
    function buildEventRefiners(context) {
        return __assign(__assign(__assign({}, EVENT_UI_REFINERS), EVENT_REFINERS), context.pluginHooks.eventRefiners);
    }
    /*
    Will NOT populate extendedProps with the leftover properties.
    Will NOT populate date-related props.
    */
    function parseEventDef(refined, extra, sourceId, allDay, hasEnd, context) {
        var def = {
            title: refined.title || '',
            groupId: refined.groupId || '',
            publicId: refined.id || '',
            url: refined.url || '',
            recurringDef: null,
            defId: guid(),
            sourceId: sourceId,
            allDay: allDay,
            hasEnd: hasEnd,
            ui: createEventUi(refined, context),
            extendedProps: __assign(__assign({}, (refined.extendedProps || {})), extra),
        };
        for (var _i = 0, _a = context.pluginHooks.eventDefMemberAdders; _i < _a.length; _i++) {
            var memberAdder = _a[_i];
            __assign(def, memberAdder(refined));
        }
        // help out EventApi from having user modify props
        Object.freeze(def.ui.classNames);
        Object.freeze(def.extendedProps);
        return def;
    }
    function parseSingle(refined, defaultAllDay, context, allowOpenRange) {
        var allDay = refined.allDay;
        var startMeta;
        var startMarker = null;
        var hasEnd = false;
        var endMeta;
        var endMarker = null;
        var startInput = refined.start != null ? refined.start : refined.date;
        startMeta = context.dateEnv.createMarkerMeta(startInput);
        if (startMeta) {
            startMarker = startMeta.marker;
        }
        else if (!allowOpenRange) {
            return null;
        }
        if (refined.end != null) {
            endMeta = context.dateEnv.createMarkerMeta(refined.end);
        }
        if (allDay == null) {
            if (defaultAllDay != null) {
                allDay = defaultAllDay;
            }
            else {
                // fall back to the date props LAST
                allDay = (!startMeta || startMeta.isTimeUnspecified) &&
                    (!endMeta || endMeta.isTimeUnspecified);
            }
        }
        if (allDay && startMarker) {
            startMarker = startOfDay(startMarker);
        }
        if (endMeta) {
            endMarker = endMeta.marker;
            if (allDay) {
                endMarker = startOfDay(endMarker);
            }
            if (startMarker && endMarker <= startMarker) {
                endMarker = null;
            }
        }
        if (endMarker) {
            hasEnd = true;
        }
        else if (!allowOpenRange) {
            hasEnd = context.options.forceEventDuration || false;
            endMarker = context.dateEnv.add(startMarker, allDay ?
                context.options.defaultAllDayEventDuration :
                context.options.defaultTimedEventDuration);
        }
        return {
            allDay: allDay,
            hasEnd: hasEnd,
            range: { start: startMarker, end: endMarker },
            forcedStartTzo: startMeta ? startMeta.forcedTzo : null,
            forcedEndTzo: endMeta ? endMeta.forcedTzo : null,
        };
    }
    function computeIsDefaultAllDay(eventSource, context) {
        var res = null;
        if (eventSource) {
            res = eventSource.defaultAllDay;
        }
        if (res == null) {
            res = context.options.defaultAllDay;
        }
        return res;
    }

    /* Date stuff that doesn't belong in datelib core
    ----------------------------------------------------------------------------------------------------------------------*/
    // given a timed range, computes an all-day range that has the same exact duration,
    // but whose start time is aligned with the start of the day.
    function computeAlignedDayRange(timedRange) {
        var dayCnt = Math.floor(diffDays(timedRange.start, timedRange.end)) || 1;
        var start = startOfDay(timedRange.start);
        var end = addDays(start, dayCnt);
        return { start: start, end: end };
    }
    // given a timed range, computes an all-day range based on how for the end date bleeds into the next day
    // TODO: give nextDayThreshold a default arg
    function computeVisibleDayRange(timedRange, nextDayThreshold) {
        if (nextDayThreshold === void 0) { nextDayThreshold = createDuration(0); }
        var startDay = null;
        var endDay = null;
        if (timedRange.end) {
            endDay = startOfDay(timedRange.end);
            var endTimeMS = timedRange.end.valueOf() - endDay.valueOf(); // # of milliseconds into \`endDay\`
            // If the end time is actually inclusively part of the next day and is equal to or
            // beyond the next day threshold, adjust the end to be the exclusive end of \`endDay\`.
            // Otherwise, leaving it as inclusive will cause it to exclude \`endDay\`.
            if (endTimeMS && endTimeMS >= asRoughMs(nextDayThreshold)) {
                endDay = addDays(endDay, 1);
            }
        }
        if (timedRange.start) {
            startDay = startOfDay(timedRange.start); // the beginning of the day the range starts
            // If end is within \`startDay\` but not past nextDayThreshold, assign the default duration of one day.
            if (endDay && endDay <= startDay) {
                endDay = addDays(startDay, 1);
            }
        }
        return { start: startDay, end: endDay };
    }
    // spans from one day into another?
    function isMultiDayRange(range) {
        var visibleRange = computeVisibleDayRange(range);
        return diffDays(visibleRange.start, visibleRange.end) > 1;
    }
    function diffDates(date0, date1, dateEnv, largeUnit) {
        if (largeUnit === 'year') {
            return createDuration(dateEnv.diffWholeYears(date0, date1), 'year');
        }
        if (largeUnit === 'month') {
            return createDuration(dateEnv.diffWholeMonths(date0, date1), 'month');
        }
        return diffDayAndTime(date0, date1); // returns a duration
    }

    function parseRange(input, dateEnv) {
        var start = null;
        var end = null;
        if (input.start) {
            start = dateEnv.createMarker(input.start);
        }
        if (input.end) {
            end = dateEnv.createMarker(input.end);
        }
        if (!start && !end) {
            return null;
        }
        if (start && end && end < start) {
            return null;
        }
        return { start: start, end: end };
    }
    // SIDE-EFFECT: will mutate ranges.
    // Will return a new array result.
    function invertRanges(ranges, constraintRange) {
        var invertedRanges = [];
        var start = constraintRange.start; // the end of the previous range. the start of the new range
        var i;
        var dateRange;
        // ranges need to be in order. required for our date-walking algorithm
        ranges.sort(compareRanges);
        for (i = 0; i < ranges.length; i += 1) {
            dateRange = ranges[i];
            // add the span of time before the event (if there is any)
            if (dateRange.start > start) { // compare millisecond time (skip any ambig logic)
                invertedRanges.push({ start: start, end: dateRange.start });
            }
            if (dateRange.end > start) {
                start = dateRange.end;
            }
        }
        // add the span of time after the last event (if there is any)
        if (start < constraintRange.end) { // compare millisecond time (skip any ambig logic)
            invertedRanges.push({ start: start, end: constraintRange.end });
        }
        return invertedRanges;
    }
    function compareRanges(range0, range1) {
        return range0.start.valueOf() - range1.start.valueOf(); // earlier ranges go first
    }
    function intersectRanges(range0, range1) {
        var start = range0.start, end = range0.end;
        var newRange = null;
        if (range1.start !== null) {
            if (start === null) {
                start = range1.start;
            }
            else {
                start = new Date(Math.max(start.valueOf(), range1.start.valueOf()));
            }
        }
        if (range1.end != null) {
            if (end === null) {
                end = range1.end;
            }
            else {
                end = new Date(Math.min(end.valueOf(), range1.end.valueOf()));
            }
        }
        if (start === null || end === null || start < end) {
            newRange = { start: start, end: end };
        }
        return newRange;
    }
    function rangesEqual(range0, range1) {
        return (range0.start === null ? null : range0.start.valueOf()) === (range1.start === null ? null : range1.start.valueOf()) &&
            (range0.end === null ? null : range0.end.valueOf()) === (range1.end === null ? null : range1.end.valueOf());
    }
    function rangesIntersect(range0, range1) {
        return (range0.end === null || range1.start === null || range0.end > range1.start) &&
            (range0.start === null || range1.end === null || range0.start < range1.end);
    }
    function rangeContainsRange(outerRange, innerRange) {
        return (outerRange.start === null || (innerRange.start !== null && innerRange.start >= outerRange.start)) &&
            (outerRange.end === null || (innerRange.end !== null && innerRange.end <= outerRange.end));
    }
    function rangeContainsMarker(range, date) {
        return (range.start === null || date >= range.start) &&
            (range.end === null || date < range.end);
    }
    // If the given date is not within the given range, move it inside.
    // (If it's past the end, make it one millisecond before the end).
    function constrainMarkerToRange(date, range) {
        if (range.start != null && date < range.start) {
            return range.start;
        }
        if (range.end != null && date >= range.end) {
            return new Date(range.end.valueOf() - 1);
        }
        return date;
    }

    /*
    Specifying nextDayThreshold signals that all-day ranges should be sliced.
    */
    function sliceEventStore(eventStore, eventUiBases, framingRange, nextDayThreshold) {
        var inverseBgByGroupId = {};
        var inverseBgByDefId = {};
        var defByGroupId = {};
        var bgRanges = [];
        var fgRanges = [];
        var eventUis = compileEventUis(eventStore.defs, eventUiBases);
        for (var defId in eventStore.defs) {
            var def = eventStore.defs[defId];
            var ui = eventUis[def.defId];
            if (ui.display === 'inverse-background') {
                if (def.groupId) {
                    inverseBgByGroupId[def.groupId] = [];
                    if (!defByGroupId[def.groupId]) {
                        defByGroupId[def.groupId] = def;
                    }
                }
                else {
                    inverseBgByDefId[defId] = [];
                }
            }
        }
        for (var instanceId in eventStore.instances) {
            var instance = eventStore.instances[instanceId];
            var def = eventStore.defs[instance.defId];
            var ui = eventUis[def.defId];
            var origRange = instance.range;
            var normalRange = (!def.allDay && nextDayThreshold) ?
                computeVisibleDayRange(origRange, nextDayThreshold) :
                origRange;
            var slicedRange = intersectRanges(normalRange, framingRange);
            if (slicedRange) {
                if (ui.display === 'inverse-background') {
                    if (def.groupId) {
                        inverseBgByGroupId[def.groupId].push(slicedRange);
                    }
                    else {
                        inverseBgByDefId[instance.defId].push(slicedRange);
                    }
                }
                else if (ui.display !== 'none') {
                    (ui.display === 'background' ? bgRanges : fgRanges).push({
                        def: def,
                        ui: ui,
                        instance: instance,
                        range: slicedRange,
                        isStart: normalRange.start && normalRange.start.valueOf() === slicedRange.start.valueOf(),
                        isEnd: normalRange.end && normalRange.end.valueOf() === slicedRange.end.valueOf(),
                    });
                }
            }
        }
        for (var groupId in inverseBgByGroupId) { // BY GROUP
            var ranges = inverseBgByGroupId[groupId];
            var invertedRanges = invertRanges(ranges, framingRange);
            for (var _i = 0, invertedRanges_1 = invertedRanges; _i < invertedRanges_1.length; _i++) {
                var invertedRange = invertedRanges_1[_i];
                var def = defByGroupId[groupId];
                var ui = eventUis[def.defId];
                bgRanges.push({
                    def: def,
                    ui: ui,
                    instance: null,
                    range: invertedRange,
                    isStart: false,
                    isEnd: false,
                });
            }
        }
        for (var defId in inverseBgByDefId) {
            var ranges = inverseBgByDefId[defId];
            var invertedRanges = invertRanges(ranges, framingRange);
            for (var _a = 0, invertedRanges_2 = invertedRanges; _a < invertedRanges_2.length; _a++) {
                var invertedRange = invertedRanges_2[_a];
                bgRanges.push({
                    def: eventStore.defs[defId],
                    ui: eventUis[defId],
                    instance: null,
                    range: invertedRange,
                    isStart: false,
                    isEnd: false,
                });
            }
        }
        return { bg: bgRanges, fg: fgRanges };
    }
    function hasBgRendering(def) {
        return def.ui.display === 'background' || def.ui.display === 'inverse-background';
    }
    function setElSeg(el, seg) {
        el.fcSeg = seg;
    }
    function getElSeg(el) {
        return el.fcSeg ||
            el.parentNode.fcSeg || // for the harness
            null;
    }
    // event ui computation
    function compileEventUis(eventDefs, eventUiBases) {
        return mapHash(eventDefs, function (eventDef) { return compileEventUi(eventDef, eventUiBases); });
    }
    function compileEventUi(eventDef, eventUiBases) {
        var uis = [];
        if (eventUiBases['']) {
            uis.push(eventUiBases['']);
        }
        if (eventUiBases[eventDef.defId]) {
            uis.push(eventUiBases[eventDef.defId]);
        }
        uis.push(eventDef.ui);
        return combineEventUis(uis);
    }
    function sortEventSegs(segs, eventOrderSpecs) {
        var objs = segs.map(buildSegCompareObj);
        objs.sort(function (obj0, obj1) { return compareByFieldSpecs(obj0, obj1, eventOrderSpecs); });
        return objs.map(function (c) { return c._seg; });
    }
    // returns a object with all primitive props that can be compared
    function buildSegCompareObj(seg) {
        var eventRange = seg.eventRange;
        var eventDef = eventRange.def;
        var range = eventRange.instance ? eventRange.instance.range : eventRange.range;
        var start = range.start ? range.start.valueOf() : 0; // TODO: better support for open-range events
        var end = range.end ? range.end.valueOf() : 0; // "
        return __assign(__assign(__assign({}, eventDef.extendedProps), eventDef), { id: eventDef.publicId, start: start,
            end: end, duration: end - start, allDay: Number(eventDef.allDay), _seg: seg });
    }
    function computeSegDraggable(seg, context) {
        var pluginHooks = context.pluginHooks;
        var transformers = pluginHooks.isDraggableTransformers;
        var _a = seg.eventRange, def = _a.def, ui = _a.ui;
        var val = ui.startEditable;
        for (var _i = 0, transformers_1 = transformers; _i < transformers_1.length; _i++) {
            var transformer = transformers_1[_i];
            val = transformer(val, def, ui, context);
        }
        return val;
    }
    function computeSegStartResizable(seg, context) {
        return seg.isStart && seg.eventRange.ui.durationEditable && context.options.eventResizableFromStart;
    }
    function computeSegEndResizable(seg, context) {
        return seg.isEnd && seg.eventRange.ui.durationEditable;
    }
    function buildSegTimeText(seg, timeFormat, context, defaultDisplayEventTime, // defaults to true
    defaultDisplayEventEnd, // defaults to true
    startOverride, endOverride) {
        var dateEnv = context.dateEnv, options = context.options;
        var displayEventTime = options.displayEventTime, displayEventEnd = options.displayEventEnd;
        var eventDef = seg.eventRange.def;
        var eventInstance = seg.eventRange.instance;
        if (displayEventTime == null) {
            displayEventTime = defaultDisplayEventTime !== false;
        }
        if (displayEventEnd == null) {
            displayEventEnd = defaultDisplayEventEnd !== false;
        }
        var wholeEventStart = eventInstance.range.start;
        var wholeEventEnd = eventInstance.range.end;
        var segStart = startOverride || seg.start || seg.eventRange.range.start;
        var segEnd = endOverride || seg.end || seg.eventRange.range.end;
        var isStartDay = startOfDay(wholeEventStart).valueOf() === startOfDay(segStart).valueOf();
        var isEndDay = startOfDay(addMs(wholeEventEnd, -1)).valueOf() === startOfDay(addMs(segEnd, -1)).valueOf();
        if (displayEventTime && !eventDef.allDay && (isStartDay || isEndDay)) {
            segStart = isStartDay ? wholeEventStart : segStart;
            segEnd = isEndDay ? wholeEventEnd : segEnd;
            if (displayEventEnd && eventDef.hasEnd) {
                return dateEnv.formatRange(segStart, segEnd, timeFormat, {
                    forcedStartTzo: startOverride ? null : eventInstance.forcedStartTzo,
                    forcedEndTzo: endOverride ? null : eventInstance.forcedEndTzo,
                });
            }
            return dateEnv.format(segStart, timeFormat, {
                forcedTzo: startOverride ? null : eventInstance.forcedStartTzo, // nooooo, same
            });
        }
        return '';
    }
    function getSegMeta(seg, todayRange, nowDate) {
        var segRange = seg.eventRange.range;
        return {
            isPast: segRange.end < (nowDate || todayRange.start),
            isFuture: segRange.start >= (nowDate || todayRange.end),
            isToday: todayRange && rangeContainsMarker(todayRange, segRange.start),
        };
    }
    function getEventClassNames(props) {
        var classNames = ['fc-event'];
        if (props.isMirror) {
            classNames.push('fc-event-mirror');
        }
        if (props.isDraggable) {
            classNames.push('fc-event-draggable');
        }
        if (props.isStartResizable || props.isEndResizable) {
            classNames.push('fc-event-resizable');
        }
        if (props.isDragging) {
            classNames.push('fc-event-dragging');
        }
        if (props.isResizing) {
            classNames.push('fc-event-resizing');
        }
        if (props.isSelected) {
            classNames.push('fc-event-selected');
        }
        if (props.isStart) {
            classNames.push('fc-event-start');
        }
        if (props.isEnd) {
            classNames.push('fc-event-end');
        }
        if (props.isPast) {
            classNames.push('fc-event-past');
        }
        if (props.isToday) {
            classNames.push('fc-event-today');
        }
        if (props.isFuture) {
            classNames.push('fc-event-future');
        }
        return classNames;
    }
    function buildEventRangeKey(eventRange) {
        return eventRange.instance
            ? eventRange.instance.instanceId
            : eventRange.def.defId + ":" + eventRange.range.start.toISOString();
        // inverse-background events don't have specific instances. TODO: better solution
    }

    var STANDARD_PROPS = {
        start: identity,
        end: identity,
        allDay: Boolean,
    };
    function parseDateSpan(raw, dateEnv, defaultDuration) {
        var span = parseOpenDateSpan(raw, dateEnv);
        var range = span.range;
        if (!range.start) {
            return null;
        }
        if (!range.end) {
            if (defaultDuration == null) {
                return null;
            }
            range.end = dateEnv.add(range.start, defaultDuration);
        }
        return span;
    }
    /*
    TODO: somehow combine with parseRange?
    Will return null if the start/end props were present but parsed invalidly.
    */
    function parseOpenDateSpan(raw, dateEnv) {
        var _a = refineProps(raw, STANDARD_PROPS), standardProps = _a.refined, extra = _a.extra;
        var startMeta = standardProps.start ? dateEnv.createMarkerMeta(standardProps.start) : null;
        var endMeta = standardProps.end ? dateEnv.createMarkerMeta(standardProps.end) : null;
        var allDay = standardProps.allDay;
        if (allDay == null) {
            allDay = (startMeta && startMeta.isTimeUnspecified) &&
                (!endMeta || endMeta.isTimeUnspecified);
        }
        return __assign({ range: {
                start: startMeta ? startMeta.marker : null,
                end: endMeta ? endMeta.marker : null,
            }, allDay: allDay }, extra);
    }
    function isDateSpansEqual(span0, span1) {
        return rangesEqual(span0.range, span1.range) &&
            span0.allDay === span1.allDay &&
            isSpanPropsEqual(span0, span1);
    }
    // the NON-DATE-RELATED props
    function isSpanPropsEqual(span0, span1) {
        for (var propName in span1) {
            if (propName !== 'range' && propName !== 'allDay') {
                if (span0[propName] !== span1[propName]) {
                    return false;
                }
            }
        }
        // are there any props that span0 has that span1 DOESN'T have?
        // both have range/allDay, so no need to special-case.
        for (var propName in span0) {
            if (!(propName in span1)) {
                return false;
            }
        }
        return true;
    }
    function buildDateSpanApi(span, dateEnv) {
        return __assign(__assign({}, buildRangeApi(span.range, dateEnv, span.allDay)), { allDay: span.allDay });
    }
    function buildRangeApiWithTimeZone(range, dateEnv, omitTime) {
        return __assign(__assign({}, buildRangeApi(range, dateEnv, omitTime)), { timeZone: dateEnv.timeZone });
    }
    function buildRangeApi(range, dateEnv, omitTime) {
        return {
            start: dateEnv.toDate(range.start),
            end: dateEnv.toDate(range.end),
            startStr: dateEnv.formatIso(range.start, { omitTime: omitTime }),
            endStr: dateEnv.formatIso(range.end, { omitTime: omitTime }),
        };
    }
    function fabricateEventRange(dateSpan, eventUiBases, context) {
        var res = refineEventDef({ editable: false }, context);
        var def = parseEventDef(res.refined, res.extra, '', // sourceId
        dateSpan.allDay, true, // hasEnd
        context);
        return {
            def: def,
            ui: compileEventUi(def, eventUiBases),
            instance: createEventInstance(def.defId, dateSpan.range),
            range: dateSpan.range,
            isStart: true,
            isEnd: true,
        };
    }

    function triggerDateSelect(selection, pev, context) {
        context.emitter.trigger('select', __assign(__assign({}, buildDateSpanApiWithContext(selection, context)), { jsEvent: pev ? pev.origEvent : null, view: context.viewApi || context.calendarApi.view }));
    }
    function triggerDateUnselect(pev, context) {
        context.emitter.trigger('unselect', {
            jsEvent: pev ? pev.origEvent : null,
            view: context.viewApi || context.calendarApi.view,
        });
    }
    function buildDateSpanApiWithContext(dateSpan, context) {
        var props = {};
        for (var _i = 0, _a = context.pluginHooks.dateSpanTransforms; _i < _a.length; _i++) {
            var transform = _a[_i];
            __assign(props, transform(dateSpan, context));
        }
        __assign(props, buildDateSpanApi(dateSpan, context.dateEnv));
        return props;
    }
    // Given an event's allDay status and start date, return what its fallback end date should be.
    // TODO: rename to computeDefaultEventEnd
    function getDefaultEventEnd(allDay, marker, context) {
        var dateEnv = context.dateEnv, options = context.options;
        var end = marker;
        if (allDay) {
            end = startOfDay(end);
            end = dateEnv.add(end, options.defaultAllDayEventDuration);
        }
        else {
            end = dateEnv.add(end, options.defaultTimedEventDuration);
        }
        return end;
    }

    // applies the mutation to ALL defs/instances within the event store
    function applyMutationToEventStore(eventStore, eventConfigBase, mutation, context) {
        var eventConfigs = compileEventUis(eventStore.defs, eventConfigBase);
        var dest = createEmptyEventStore();
        for (var defId in eventStore.defs) {
            var def = eventStore.defs[defId];
            dest.defs[defId] = applyMutationToEventDef(def, eventConfigs[defId], mutation, context);
        }
        for (var instanceId in eventStore.instances) {
            var instance = eventStore.instances[instanceId];
            var def = dest.defs[instance.defId]; // important to grab the newly modified def
            dest.instances[instanceId] = applyMutationToEventInstance(instance, def, eventConfigs[instance.defId], mutation, context);
        }
        return dest;
    }
    function applyMutationToEventDef(eventDef, eventConfig, mutation, context) {
        var standardProps = mutation.standardProps || {};
        // if hasEnd has not been specified, guess a good value based on deltas.
        // if duration will change, there's no way the default duration will persist,
        // and thus, we need to mark the event as having a real end
        if (standardProps.hasEnd == null &&
            eventConfig.durationEditable &&
            (mutation.startDelta || mutation.endDelta)) {
            standardProps.hasEnd = true; // TODO: is this mutation okay?
        }
        var copy = __assign(__assign(__assign({}, eventDef), standardProps), { ui: __assign(__assign({}, eventDef.ui), standardProps.ui) });
        if (mutation.extendedProps) {
            copy.extendedProps = __assign(__assign({}, copy.extendedProps), mutation.extendedProps);
        }
        for (var _i = 0, _a = context.pluginHooks.eventDefMutationAppliers; _i < _a.length; _i++) {
            var applier = _a[_i];
            applier(copy, mutation, context);
        }
        if (!copy.hasEnd && context.options.forceEventDuration) {
            copy.hasEnd = true;
        }
        return copy;
    }
    function applyMutationToEventInstance(eventInstance, eventDef, // must first be modified by applyMutationToEventDef
    eventConfig, mutation, context) {
        var dateEnv = context.dateEnv;
        var forceAllDay = mutation.standardProps && mutation.standardProps.allDay === true;
        var clearEnd = mutation.standardProps && mutation.standardProps.hasEnd === false;
        var copy = __assign({}, eventInstance);
        if (forceAllDay) {
            copy.range = computeAlignedDayRange(copy.range);
        }
        if (mutation.datesDelta && eventConfig.startEditable) {
            copy.range = {
                start: dateEnv.add(copy.range.start, mutation.datesDelta),
                end: dateEnv.add(copy.range.end, mutation.datesDelta),
            };
        }
        if (mutation.startDelta && eventConfig.durationEditable) {
            copy.range = {
                start: dateEnv.add(copy.range.start, mutation.startDelta),
                end: copy.range.end,
            };
        }
        if (mutation.endDelta && eventConfig.durationEditable) {
            copy.range = {
                start: copy.range.start,
                end: dateEnv.add(copy.range.end, mutation.endDelta),
            };
        }
        if (clearEnd) {
            copy.range = {
                start: copy.range.start,
                end: getDefaultEventEnd(eventDef.allDay, copy.range.start, context),
            };
        }
        // in case event was all-day but the supplied deltas were not
        // better util for this?
        if (eventDef.allDay) {
            copy.range = {
                start: startOfDay(copy.range.start),
                end: startOfDay(copy.range.end),
            };
        }
        // handle invalid durations
        if (copy.range.end < copy.range.start) {
            copy.range.end = getDefaultEventEnd(eventDef.allDay, copy.range.start, context);
        }
        return copy;
    }

    // no public types yet. when there are, export from:
    // import {} from './api-type-deps'
    var ViewApi = /** @class */ (function () {
        function ViewApi(type, getCurrentData, dateEnv) {
            this.type = type;
            this.getCurrentData = getCurrentData;
            this.dateEnv = dateEnv;
        }
        Object.defineProperty(ViewApi.prototype, "calendar", {
            get: function () {
                return this.getCurrentData().calendarApi;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewApi.prototype, "title", {
            get: function () {
                return this.getCurrentData().viewTitle;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewApi.prototype, "activeStart", {
            get: function () {
                return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.start);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewApi.prototype, "activeEnd", {
            get: function () {
                return this.dateEnv.toDate(this.getCurrentData().dateProfile.activeRange.end);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewApi.prototype, "currentStart", {
            get: function () {
                return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.start);
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(ViewApi.prototype, "currentEnd", {
            get: function () {
                return this.dateEnv.toDate(this.getCurrentData().dateProfile.currentRange.end);
            },
            enumerable: false,
            configurable: true
        });
        ViewApi.prototype.getOption = function (name) {
            return this.getCurrentData().options[name]; // are the view-specific options
        };
        return ViewApi;
    }());

    var EVENT_SOURCE_REFINERS$1 = {
        id: String,
        defaultAllDay: Boolean,
        url: String,
        format: String,
        events: identity,
        eventDataTransform: identity,
        // for any network-related sources
        success: identity,
        failure: identity,
    };
    function parseEventSource(raw, context, refiners) {
        if (refiners === void 0) { refiners = buildEventSourceRefiners(context); }
        var rawObj;
        if (typeof raw === 'string') {
            rawObj = { url: raw };
        }
        else if (typeof raw === 'function' || Array.isArray(raw)) {
            rawObj = { events: raw };
        }
        else if (typeof raw === 'object' && raw) { // not null
            rawObj = raw;
        }
        if (rawObj) {
            var _a = refineProps(rawObj, refiners), refined = _a.refined, extra = _a.extra;
            var metaRes = buildEventSourceMeta(refined, context);
            if (metaRes) {
                return {
                    _raw: raw,
                    isFetching: false,
                    latestFetchId: '',
                    fetchRange: null,
                    defaultAllDay: refined.defaultAllDay,
                    eventDataTransform: refined.eventDataTransform,
                    success: refined.success,
                    failure: refined.failure,
                    publicId: refined.id || '',
                    sourceId: guid(),
                    sourceDefId: metaRes.sourceDefId,
                    meta: metaRes.meta,
                    ui: createEventUi(refined, context),
                    extendedProps: extra,
                };
            }
        }
        return null;
    }
    function buildEventSourceRefiners(context) {
        return __assign(__assign(__assign({}, EVENT_UI_REFINERS), EVENT_SOURCE_REFINERS$1), context.pluginHooks.eventSourceRefiners);
    }
    function buildEventSourceMeta(raw, context) {
        var defs = context.pluginHooks.eventSourceDefs;
        for (var i = defs.length - 1; i >= 0; i -= 1) { // later-added plugins take precedence
            var def = defs[i];
            var meta = def.parseMeta(raw);
            if (meta) {
                return { sourceDefId: i, meta: meta };
            }
        }
        return null;
    }

    function reduceCurrentDate(currentDate, action) {
        switch (action.type) {
            case 'CHANGE_DATE':
                return action.dateMarker;
            default:
                return currentDate;
        }
    }
    function getInitialDate(options, dateEnv) {
        var initialDateInput = options.initialDate;
        // compute the initial ambig-timezone date
        if (initialDateInput != null) {
            return dateEnv.createMarker(initialDateInput);
        }
        return getNow(options.now, dateEnv); // getNow already returns unzoned
    }
    function getNow(nowInput, dateEnv) {
        if (typeof nowInput === 'function') {
            nowInput = nowInput();
        }
        if (nowInput == null) {
            return dateEnv.createNowMarker();
        }
        return dateEnv.createMarker(nowInput);
    }

    var CalendarApi = /** @class */ (function () {
        function CalendarApi() {
        }
        CalendarApi.prototype.getCurrentData = function () {
            return this.currentDataManager.getCurrentData();
        };
        CalendarApi.prototype.dispatch = function (action) {
            return this.currentDataManager.dispatch(action);
        };
        Object.defineProperty(CalendarApi.prototype, "view", {
            get: function () { return this.getCurrentData().viewApi; } // for public API
            ,
            enumerable: false,
            configurable: true
        });
        CalendarApi.prototype.batchRendering = function (callback) {
            callback();
        };
        CalendarApi.prototype.updateSize = function () {
            this.trigger('_resize', true);
        };
        // Options
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.setOption = function (name, val) {
            this.dispatch({
                type: 'SET_OPTION',
                optionName: name,
                rawOptionValue: val,
            });
        };
        CalendarApi.prototype.getOption = function (name) {
            return this.currentDataManager.currentCalendarOptionsInput[name];
        };
        CalendarApi.prototype.getAvailableLocaleCodes = function () {
            return Object.keys(this.getCurrentData().availableRawLocales);
        };
        // Trigger
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.on = function (handlerName, handler) {
            var currentDataManager = this.currentDataManager;
            if (currentDataManager.currentCalendarOptionsRefiners[handlerName]) {
                currentDataManager.emitter.on(handlerName, handler);
            }
            else {
                console.warn("Unknown listener name '" + handlerName + "'");
            }
        };
        CalendarApi.prototype.off = function (handlerName, handler) {
            this.currentDataManager.emitter.off(handlerName, handler);
        };
        // not meant for public use
        CalendarApi.prototype.trigger = function (handlerName) {
            var _a;
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            (_a = this.currentDataManager.emitter).trigger.apply(_a, __spreadArray([handlerName], args));
        };
        // View
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.changeView = function (viewType, dateOrRange) {
            var _this = this;
            this.batchRendering(function () {
                _this.unselect();
                if (dateOrRange) {
                    if (dateOrRange.start && dateOrRange.end) { // a range
                        _this.dispatch({
                            type: 'CHANGE_VIEW_TYPE',
                            viewType: viewType,
                        });
                        _this.dispatch({
                            type: 'SET_OPTION',
                            optionName: 'visibleRange',
                            rawOptionValue: dateOrRange,
                        });
                    }
                    else {
                        var dateEnv = _this.getCurrentData().dateEnv;
                        _this.dispatch({
                            type: 'CHANGE_VIEW_TYPE',
                            viewType: viewType,
                            dateMarker: dateEnv.createMarker(dateOrRange),
                        });
                    }
                }
                else {
                    _this.dispatch({
                        type: 'CHANGE_VIEW_TYPE',
                        viewType: viewType,
                    });
                }
            });
        };
        // Forces navigation to a view for the given date.
        // \`viewType\` can be a specific view name or a generic one like "week" or "day".
        // needs to change
        CalendarApi.prototype.zoomTo = function (dateMarker, viewType) {
            var state = this.getCurrentData();
            var spec;
            viewType = viewType || 'day'; // day is default zoom
            spec = state.viewSpecs[viewType] || this.getUnitViewSpec(viewType);
            this.unselect();
            if (spec) {
                this.dispatch({
                    type: 'CHANGE_VIEW_TYPE',
                    viewType: spec.type,
                    dateMarker: dateMarker,
                });
            }
            else {
                this.dispatch({
                    type: 'CHANGE_DATE',
                    dateMarker: dateMarker,
                });
            }
        };
        // Given a duration singular unit, like "week" or "day", finds a matching view spec.
        // Preference is given to views that have corresponding buttons.
        CalendarApi.prototype.getUnitViewSpec = function (unit) {
            var _a = this.getCurrentData(), viewSpecs = _a.viewSpecs, toolbarConfig = _a.toolbarConfig;
            var viewTypes = [].concat(toolbarConfig.viewsWithButtons);
            var i;
            var spec;
            for (var viewType in viewSpecs) {
                viewTypes.push(viewType);
            }
            for (i = 0; i < viewTypes.length; i += 1) {
                spec = viewSpecs[viewTypes[i]];
                if (spec) {
                    if (spec.singleUnit === unit) {
                        return spec;
                    }
                }
            }
            return null;
        };
        // Current Date
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.prev = function () {
            this.unselect();
            this.dispatch({ type: 'PREV' });
        };
        CalendarApi.prototype.next = function () {
            this.unselect();
            this.dispatch({ type: 'NEXT' });
        };
        CalendarApi.prototype.prevYear = function () {
            var state = this.getCurrentData();
            this.unselect();
            this.dispatch({
                type: 'CHANGE_DATE',
                dateMarker: state.dateEnv.addYears(state.currentDate, -1),
            });
        };
        CalendarApi.prototype.nextYear = function () {
            var state = this.getCurrentData();
            this.unselect();
            this.dispatch({
                type: 'CHANGE_DATE',
                dateMarker: state.dateEnv.addYears(state.currentDate, 1),
            });
        };
        CalendarApi.prototype.today = function () {
            var state = this.getCurrentData();
            this.unselect();
            this.dispatch({
                type: 'CHANGE_DATE',
                dateMarker: getNow(state.calendarOptions.now, state.dateEnv),
            });
        };
        CalendarApi.prototype.gotoDate = function (zonedDateInput) {
            var state = this.getCurrentData();
            this.unselect();
            this.dispatch({
                type: 'CHANGE_DATE',
                dateMarker: state.dateEnv.createMarker(zonedDateInput),
            });
        };
        CalendarApi.prototype.incrementDate = function (deltaInput) {
            var state = this.getCurrentData();
            var delta = createDuration(deltaInput);
            if (delta) { // else, warn about invalid input?
                this.unselect();
                this.dispatch({
                    type: 'CHANGE_DATE',
                    dateMarker: state.dateEnv.add(state.currentDate, delta),
                });
            }
        };
        // for external API
        CalendarApi.prototype.getDate = function () {
            var state = this.getCurrentData();
            return state.dateEnv.toDate(state.currentDate);
        };
        // Date Formatting Utils
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.formatDate = function (d, formatter) {
            var dateEnv = this.getCurrentData().dateEnv;
            return dateEnv.format(dateEnv.createMarker(d), createFormatter(formatter));
        };
        // \`settings\` is for formatter AND isEndExclusive
        CalendarApi.prototype.formatRange = function (d0, d1, settings) {
            var dateEnv = this.getCurrentData().dateEnv;
            return dateEnv.formatRange(dateEnv.createMarker(d0), dateEnv.createMarker(d1), createFormatter(settings), settings);
        };
        CalendarApi.prototype.formatIso = function (d, omitTime) {
            var dateEnv = this.getCurrentData().dateEnv;
            return dateEnv.formatIso(dateEnv.createMarker(d), { omitTime: omitTime });
        };
        // Date Selection / Event Selection / DayClick
        // -----------------------------------------------------------------------------------------------------------------
        // this public method receives start/end dates in any format, with any timezone
        // NOTE: args were changed from v3
        CalendarApi.prototype.select = function (dateOrObj, endDate) {
            var selectionInput;
            if (endDate == null) {
                if (dateOrObj.start != null) {
                    selectionInput = dateOrObj;
                }
                else {
                    selectionInput = {
                        start: dateOrObj,
                        end: null,
                    };
                }
            }
            else {
                selectionInput = {
                    start: dateOrObj,
                    end: endDate,
                };
            }
            var state = this.getCurrentData();
            var selection = parseDateSpan(selectionInput, state.dateEnv, createDuration({ days: 1 }));
            if (selection) { // throw parse error otherwise?
                this.dispatch({ type: 'SELECT_DATES', selection: selection });
                triggerDateSelect(selection, null, state);
            }
        };
        // public method
        CalendarApi.prototype.unselect = function (pev) {
            var state = this.getCurrentData();
            if (state.dateSelection) {
                this.dispatch({ type: 'UNSELECT_DATES' });
                triggerDateUnselect(pev, state);
            }
        };
        // Public Events API
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.addEvent = function (eventInput, sourceInput) {
            if (eventInput instanceof EventApi) {
                var def = eventInput._def;
                var instance = eventInput._instance;
                var currentData = this.getCurrentData();
                // not already present? don't want to add an old snapshot
                if (!currentData.eventStore.defs[def.defId]) {
                    this.dispatch({
                        type: 'ADD_EVENTS',
                        eventStore: eventTupleToStore({ def: def, instance: instance }), // TODO: better util for two args?
                    });
                    this.triggerEventAdd(eventInput);
                }
                return eventInput;
            }
            var state = this.getCurrentData();
            var eventSource;
            if (sourceInput instanceof EventSourceApi) {
                eventSource = sourceInput.internalEventSource;
            }
            else if (typeof sourceInput === 'boolean') {
                if (sourceInput) { // true. part of the first event source
                    eventSource = hashValuesToArray(state.eventSources)[0];
                }
            }
            else if (sourceInput != null) { // an ID. accepts a number too
                var sourceApi = this.getEventSourceById(sourceInput); // TODO: use an internal function
                if (!sourceApi) {
                    console.warn("Could not find an event source with ID \\"" + sourceInput + "\\""); // TODO: test
                    return null;
                }
                eventSource = sourceApi.internalEventSource;
            }
            var tuple = parseEvent(eventInput, eventSource, state, false);
            if (tuple) {
                var newEventApi = new EventApi(state, tuple.def, tuple.def.recurringDef ? null : tuple.instance);
                this.dispatch({
                    type: 'ADD_EVENTS',
                    eventStore: eventTupleToStore(tuple),
                });
                this.triggerEventAdd(newEventApi);
                return newEventApi;
            }
            return null;
        };
        CalendarApi.prototype.triggerEventAdd = function (eventApi) {
            var _this = this;
            var emitter = this.getCurrentData().emitter;
            emitter.trigger('eventAdd', {
                event: eventApi,
                relatedEvents: [],
                revert: function () {
                    _this.dispatch({
                        type: 'REMOVE_EVENTS',
                        eventStore: eventApiToStore(eventApi),
                    });
                },
            });
        };
        // TODO: optimize
        CalendarApi.prototype.getEventById = function (id) {
            var state = this.getCurrentData();
            var _a = state.eventStore, defs = _a.defs, instances = _a.instances;
            id = String(id);
            for (var defId in defs) {
                var def = defs[defId];
                if (def.publicId === id) {
                    if (def.recurringDef) {
                        return new EventApi(state, def, null);
                    }
                    for (var instanceId in instances) {
                        var instance = instances[instanceId];
                        if (instance.defId === def.defId) {
                            return new EventApi(state, def, instance);
                        }
                    }
                }
            }
            return null;
        };
        CalendarApi.prototype.getEvents = function () {
            var currentData = this.getCurrentData();
            return buildEventApis(currentData.eventStore, currentData);
        };
        CalendarApi.prototype.removeAllEvents = function () {
            this.dispatch({ type: 'REMOVE_ALL_EVENTS' });
        };
        // Public Event Sources API
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.getEventSources = function () {
            var state = this.getCurrentData();
            var sourceHash = state.eventSources;
            var sourceApis = [];
            for (var internalId in sourceHash) {
                sourceApis.push(new EventSourceApi(state, sourceHash[internalId]));
            }
            return sourceApis;
        };
        CalendarApi.prototype.getEventSourceById = function (id) {
            var state = this.getCurrentData();
            var sourceHash = state.eventSources;
            id = String(id);
            for (var sourceId in sourceHash) {
                if (sourceHash[sourceId].publicId === id) {
                    return new EventSourceApi(state, sourceHash[sourceId]);
                }
            }
            return null;
        };
        CalendarApi.prototype.addEventSource = function (sourceInput) {
            var state = this.getCurrentData();
            if (sourceInput instanceof EventSourceApi) {
                // not already present? don't want to add an old snapshot
                if (!state.eventSources[sourceInput.internalEventSource.sourceId]) {
                    this.dispatch({
                        type: 'ADD_EVENT_SOURCES',
                        sources: [sourceInput.internalEventSource],
                    });
                }
                return sourceInput;
            }
            var eventSource = parseEventSource(sourceInput, state);
            if (eventSource) { // TODO: error otherwise?
                this.dispatch({ type: 'ADD_EVENT_SOURCES', sources: [eventSource] });
                return new EventSourceApi(state, eventSource);
            }
            return null;
        };
        CalendarApi.prototype.removeAllEventSources = function () {
            this.dispatch({ type: 'REMOVE_ALL_EVENT_SOURCES' });
        };
        CalendarApi.prototype.refetchEvents = function () {
            this.dispatch({ type: 'FETCH_EVENT_SOURCES', isRefetch: true });
        };
        // Scroll
        // -----------------------------------------------------------------------------------------------------------------
        CalendarApi.prototype.scrollToTime = function (timeInput) {
            var time = createDuration(timeInput);
            if (time) {
                this.trigger('_scrollRequest', { time: time });
            }
        };
        return CalendarApi;
    }());

    var EventApi = /** @class */ (function () {
        // instance will be null if expressing a recurring event that has no current instances,
        // OR if trying to validate an incoming external event that has no dates assigned
        function EventApi(context, def, instance) {
            this._context = context;
            this._def = def;
            this._instance = instance || null;
        }
        /*
        TODO: make event struct more responsible for this
        */
        EventApi.prototype.setProp = function (name, val) {
            var _a, _b;
            if (name in EVENT_DATE_REFINERS) {
                console.warn('Could not set date-related prop \\'name\\'. Use one of the date-related methods instead.');
                // TODO: make proper aliasing system?
            }
            else if (name === 'id') {
                val = EVENT_NON_DATE_REFINERS[name](val);
                this.mutate({
                    standardProps: { publicId: val }, // hardcoded internal name
                });
            }
            else if (name in EVENT_NON_DATE_REFINERS) {
                val = EVENT_NON_DATE_REFINERS[name](val);
                this.mutate({
                    standardProps: (_a = {}, _a[name] = val, _a),
                });
            }
            else if (name in EVENT_UI_REFINERS) {
                var ui = EVENT_UI_REFINERS[name](val);
                if (name === 'color') {
                    ui = { backgroundColor: val, borderColor: val };
                }
                else if (name === 'editable') {
                    ui = { startEditable: val, durationEditable: val };
                }
                else {
                    ui = (_b = {}, _b[name] = val, _b);
                }
                this.mutate({
                    standardProps: { ui: ui },
                });
            }
            else {
                console.warn("Could not set prop '" + name + "'. Use setExtendedProp instead.");
            }
        };
        EventApi.prototype.setExtendedProp = function (name, val) {
            var _a;
            this.mutate({
                extendedProps: (_a = {}, _a[name] = val, _a),
            });
        };
        EventApi.prototype.setStart = function (startInput, options) {
            if (options === void 0) { options = {}; }
            var dateEnv = this._context.dateEnv;
            var start = dateEnv.createMarker(startInput);
            if (start && this._instance) { // TODO: warning if parsed bad
                var instanceRange = this._instance.range;
                var startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity); // what if parsed bad!?
                if (options.maintainDuration) {
                    this.mutate({ datesDelta: startDelta });
                }
                else {
                    this.mutate({ startDelta: startDelta });
                }
            }
        };
        EventApi.prototype.setEnd = function (endInput, options) {
            if (options === void 0) { options = {}; }
            var dateEnv = this._context.dateEnv;
            var end;
            if (endInput != null) {
                end = dateEnv.createMarker(endInput);
                if (!end) {
                    return; // TODO: warning if parsed bad
                }
            }
            if (this._instance) {
                if (end) {
                    var endDelta = diffDates(this._instance.range.end, end, dateEnv, options.granularity);
                    this.mutate({ endDelta: endDelta });
                }
                else {
                    this.mutate({ standardProps: { hasEnd: false } });
                }
            }
        };
        EventApi.prototype.setDates = function (startInput, endInput, options) {
            if (options === void 0) { options = {}; }
            var dateEnv = this._context.dateEnv;
            var standardProps = { allDay: options.allDay };
            var start = dateEnv.createMarker(startInput);
            var end;
            if (!start) {
                return; // TODO: warning if parsed bad
            }
            if (endInput != null) {
                end = dateEnv.createMarker(endInput);
                if (!end) { // TODO: warning if parsed bad
                    return;
                }
            }
            if (this._instance) {
                var instanceRange = this._instance.range;
                // when computing the diff for an event being converted to all-day,
                // compute diff off of the all-day values the way event-mutation does.
                if (options.allDay === true) {
                    instanceRange = computeAlignedDayRange(instanceRange);
                }
                var startDelta = diffDates(instanceRange.start, start, dateEnv, options.granularity);
                if (end) {
                    var endDelta = diffDates(instanceRange.end, end, dateEnv, options.granularity);
                    if (durationsEqual(startDelta, endDelta)) {
                        this.mutate({ datesDelta: startDelta, standardProps: standardProps });
                    }
                    else {
                        this.mutate({ startDelta: startDelta, endDelta: endDelta, standardProps: standardProps });
                    }
                }
                else { // means "clear the end"
                    standardProps.hasEnd = false;
                    this.mutate({ datesDelta: startDelta, standardProps: standardProps });
                }
            }
        };
        EventApi.prototype.moveStart = function (deltaInput) {
            var delta = createDuration(deltaInput);
            if (delta) { // TODO: warning if parsed bad
                this.mutate({ startDelta: delta });
            }
        };
        EventApi.prototype.moveEnd = function (deltaInput) {
            var delta = createDuration(deltaInput);
            if (delta) { // TODO: warning if parsed bad
                this.mutate({ endDelta: delta });
            }
        };
        EventApi.prototype.moveDates = function (deltaInput) {
            var delta = createDuration(deltaInput);
            if (delta) { // TODO: warning if parsed bad
                this.mutate({ datesDelta: delta });
            }
        };
        EventApi.prototype.setAllDay = function (allDay, options) {
            if (options === void 0) { options = {}; }
            var standardProps = { allDay: allDay };
            var maintainDuration = options.maintainDuration;
            if (maintainDuration == null) {
                maintainDuration = this._context.options.allDayMaintainDuration;
            }
            if (this._def.allDay !== allDay) {
                standardProps.hasEnd = maintainDuration;
            }
            this.mutate({ standardProps: standardProps });
        };
        EventApi.prototype.formatRange = function (formatInput) {
            var dateEnv = this._context.dateEnv;
            var instance = this._instance;
            var formatter = createFormatter(formatInput);
            if (this._def.hasEnd) {
                return dateEnv.formatRange(instance.range.start, instance.range.end, formatter, {
                    forcedStartTzo: instance.forcedStartTzo,
                    forcedEndTzo: instance.forcedEndTzo,
                });
            }
            return dateEnv.format(instance.range.start, formatter, {
                forcedTzo: instance.forcedStartTzo,
            });
        };
        EventApi.prototype.mutate = function (mutation) {
            var instance = this._instance;
            if (instance) {
                var def = this._def;
                var context_1 = this._context;
                var eventStore_1 = context_1.getCurrentData().eventStore;
                var relevantEvents = getRelevantEvents(eventStore_1, instance.instanceId);
                var eventConfigBase = {
                    '': {
                        display: '',
                        startEditable: true,
                        durationEditable: true,
                        constraints: [],
                        overlap: null,
                        allows: [],
                        backgroundColor: '',
                        borderColor: '',
                        textColor: '',
                        classNames: [],
                    },
                };
                relevantEvents = applyMutationToEventStore(relevantEvents, eventConfigBase, mutation, context_1);
                var oldEvent = new EventApi(context_1, def, instance); // snapshot
                this._def = relevantEvents.defs[def.defId];
                this._instance = relevantEvents.instances[instance.instanceId];
                context_1.dispatch({
                    type: 'MERGE_EVENTS',
                    eventStore: relevantEvents,
                });
                context_1.emitter.trigger('eventChange', {
                    oldEvent: oldEvent,
                    event: this,
                    relatedEvents: buildEventApis(relevantEvents, context_1, instance),
                    revert: function () {
                        context_1.dispatch({
                            type: 'RESET_EVENTS',
                            eventStore: eventStore_1,
                        });
                    },
                });
            }
        };
        EventApi.prototype.remove = function () {
            var context = this._context;
            var asStore = eventApiToStore(this);
            context.dispatch({
                type: 'REMOVE_EVENTS',
                eventStore: asStore,
            });
            context.emitter.trigger('eventRemove', {
                event: this,
                relatedEvents: [],
                revert: function () {
                    context.dispatch({
                        type: 'MERGE_EVENTS',
                        eventStore: asStore,
                    });
                },
            });
        };
        Object.defineProperty(EventApi.prototype, "source", {
            get: function () {
                var sourceId = this._def.sourceId;
                if (sourceId) {
                    return new EventSourceApi(this._context, this._context.getCurrentData().eventSources[sourceId]);
                }
                return null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "start", {
            get: function () {
                return this._instance ?
                    this._context.dateEnv.toDate(this._instance.range.start) :
                    null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "end", {
            get: function () {
                return (this._instance && this._def.hasEnd) ?
                    this._context.dateEnv.toDate(this._instance.range.end) :
                    null;
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "startStr", {
            get: function () {
                var instance = this._instance;
                if (instance) {
                    return this._context.dateEnv.formatIso(instance.range.start, {
                        omitTime: this._def.allDay,
                        forcedTzo: instance.forcedStartTzo,
                    });
                }
                return '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "endStr", {
            get: function () {
                var instance = this._instance;
                if (instance && this._def.hasEnd) {
                    return this._context.dateEnv.formatIso(instance.range.end, {
                        omitTime: this._def.allDay,
                        forcedTzo: instance.forcedEndTzo,
                    });
                }
                return '';
            },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "id", {
            // computable props that all access the def
            // TODO: find a TypeScript-compatible way to do this at scale
            get: function () { return this._def.publicId; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "groupId", {
            get: function () { return this._def.groupId; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "allDay", {
            get: function () { return this._def.allDay; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "title", {
            get: function () { return this._def.title; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "url", {
            get: function () { return this._def.url; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "display", {
            get: function () { return this._def.ui.display || 'auto'; } // bad. just normalize the type earlier
            ,
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "startEditable", {
            get: function () { return this._def.ui.startEditable; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "durationEditable", {
            get: function () { return this._def.ui.durationEditable; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "constraint", {
            get: function () { return this._def.ui.constraints[0] || null; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "overlap", {
            get: function () { return this._def.ui.overlap; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "allow", {
            get: function () { return this._def.ui.allows[0] || null; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "backgroundColor", {
            get: function () { return this._def.ui.backgroundColor; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "borderColor", {
            get: function () { return this._def.ui.borderColor; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "textColor", {
            get: function () { return this._def.ui.textColor; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "classNames", {
            // NOTE: user can't modify these because Object.freeze was called in event-def parsing
            get: function () { return this._def.ui.classNames; },
            enumerable: false,
            configurable: true
        });
        Object.defineProperty(EventApi.prototype, "extendedProps", {
            get: function () { return this._def.extendedProps; },
            enumerable: false,
            configurable: true
        });
        EventApi.prototype.toPlainObject = function (settings) {
            if (settings === void 0) { settings = {}; }
            var def = this._def;
            var ui = def.ui;
            var _a = this, startStr = _a.startStr, endStr = _a.endStr;
            var res = {};
            if (def.title) {
                res.title = def.title;
            }
            if (startStr) {
                res.start = startStr;
            }
            if (endStr) {
                res.end = endStr;
            }
            if (def.publicId) {
                res.id = def.publicId;
            }
            if (def.groupId) {
                res.groupId = def.groupId;
            }
            if (def.url) {
                res.url = def.url;
            }
            if (ui.display && ui.display !== 'auto') {
                res.display = ui.display;
            }
            // TODO: what about recurring-event properties???
            // TODO: include startEditable/durationEditable/constraint/overlap/allow
            if (settings.collapseColor && ui.backgroundColor && ui.backgroundColor === ui.borderColor) {
                res.color = ui.backgroundColor;
            }
            else {
                if (ui.backgroundColor) {
                    res.backgroundColor = ui.backgroundColor;
                }
                if (ui.borderColor) {
                    res.borderColor = ui.borderColor;
                }
            }
            if (ui.textColor) {
                res.textColor = ui.textColor;
            }
            if (ui.classNames.length) {
                res.classNames = ui.classNames;
            }
            if (Object.keys(def.extendedProps).length) {
                if (settings.collapseExtendedProps) {
                    __assign(res, def.extendedProps);
                }
                else {
                    res.extendedProps = def.extendedProps;
                }
            }
            return res;
        };
        EventApi.prototype.toJSON = function () {
            return this.toPlainObject();
        };
        return EventApi;
    }());
    function eventApiToStore(eventApi) {
        var _a, _b;
        var def = eventApi._def;
        var instance = eventApi._instance;
        return {
            defs: (_a = {}, _a[def.defId] = def, _a),
            instances: instance
                ? (_b = {}, _b[instance.instanceId] = instance, _b) : {},
        };
    }
    function buildEventApis(eventStore, context, excludeInstance) {
        var defs = eventStore.defs, instances = eventStore.instances;
        var eventApis = [];
        var excludeInstanceId = excludeInstance ? excludeInstance.instanceId : '';
        for (var id in instances) {
            var instance = instances[id];
            var def = defs[instance.defId];
            if (instance.instanceId !== excludeInstanceId) {
                eventApis.push(new EventApi(context, def, instance));
            }
        }
        return eventApis;
    }

    var calendarSystemClassMap = {};
    function registerCalendarSystem(name, theClass) {
        calendarSystemClassMap[name] = theClass;
    }
    function createCalendarSystem(name) {
        return new calendarSystemClassMap[name]();
    }
    var GregorianCalendarSystem = /** @class */ (function () {
        function GregorianCalendarSystem() {
        }
        GregorianCalendarSystem.prototype.getMarkerYear = function (d) {
            return d.getUTCFullYear();
        };
        GregorianCalendarSystem.prototype.getMarkerMonth = function (d) {
            return d.getUTCMonth();
        };
        GregorianCalendarSystem.prototype.getMarkerDay = function (d) {
            return d.getUTCDate();
        };
        GregorianCalendarSystem.prototype.arrayToMarker = function (arr) {
            return arrayToUtcDate(arr);
        };
        GregorianCalendarSystem.prototype.markerToArray = function (marker) {
            return dateToUtcArray(marker);
        };
        return GregorianCalendarSystem;
    }());
    registerCalendarSystem('gregory', GregorianCalendarSystem);

    var ISO_RE = /^\\s*(\\d{4})(-?(\\d{2})(-?(\\d{2})([T ](\\d{2}):?(\\d{2})(:?(\\d{2})(\\.(\\d+))?)?(Z|(([-+])(\\d{2})(:?(\\d{2}))?))?)?)?)?$/;
    function parse(str) {
        var m = ISO_RE.exec(str);
        if (m) {
            var marker = new Date(Date.UTC(Number(m[1]), m[3] ? Number(m[3]) - 1 : 0, Number(m[5] || 1), Number(m[7] || 0), Number(m[8] || 0), Number(m[10] || 0), m[12] ? Number("0." + m[12]) * 1000 : 0));
            if (isValidDate(marker)) {
                var timeZoneOffset = null;
                if (m[13]) {
                    timeZoneOffset = (m[15] === '-' ? -1 : 1) * (Number(m[16] || 0) * 60 +
                        Number(m[18] || 0));
                }
                return {
                    marker: marker,
                    isTimeUnspecified: !m[6],
                    timeZoneOffset: timeZoneOffset,
                };
            }
        }
        return null;
    }

    var DateEnv = /** @class */ (function () {
        function DateEnv(settings) {
            var timeZone = this.timeZone = settings.timeZone;
            var isNamedTimeZone = timeZone !== 'local' && timeZone !== 'UTC';
            if (settings.namedTimeZoneImpl && isNamedTimeZone) {
                this.namedTimeZoneImpl = new settings.namedTimeZoneImpl(timeZone);
            }
            this.canComputeOffset = Boolean(!isNamedTimeZone || this.namedTimeZoneImpl);
            this.calendarSystem = createCalendarSystem(settings.calendarSystem);
            this.locale = settings.locale;
            this.weekDow = settings.locale.week.dow;
            this.weekDoy = settings.locale.week.doy;
            if (settings.weekNumberCalculation === 'ISO') {
                this.weekDow = 1;
                this.weekDoy = 4;
            }
            if (typeof settings.firstDay === 'number') {
                this.weekDow = settings.firstDay;
            }
            if (typeof settings.weekNumberCalculation === 'function') {
                this.weekNumberFunc = settings.weekNumberCalculation;
            }
            this.weekText = settings.weekText != null ? settings.weekText : settings.locale.options.weekText;
            this.cmdFormatter = settings.cmdFormatter;
            this.defaultSeparator = settings.defaultSeparator;
        }
        // Creating / Parsing
        DateEnv.prototype.createMarker = function (input) {
            var meta = this.createMarkerMeta(input);
            if (meta === null) {
                return null;
            }
            return meta.marker;
        };
        DateEnv.prototype.createNowMarker = function () {
            if (this.canComputeOffset) {
                return this.timestampToMarker(new Date().valueOf());
            }
            // if we can't compute the current date val for a timezone,
            // better to give the current local date vals than UTC
            return arrayToUtcDate(dateToLocalArray(new Date()));
        };
        DateEnv.prototype.createMarkerMeta = function (input) {
            if (typeof input === 'string') {
                return this.parse(input);
            }
            var marker = null;
            if (typeof input === 'number') {
                marker = this.timestampToMarker(input);
            }
            else if (input instanceof Date) {
                input = input.valueOf();
                if (!isNaN(input)) {
                    marker = this.timestampToMarker(input);
                }
            }
            else if (Array.isArray(input)) {
                marker = arrayToUtcDate(input);
            }
            if (marker === null || !isValidDate(marker)) {
                return null;
            }
            return { marker: marker, isTimeUnspecified: false, forcedTzo: null };
        };
        DateEnv.prototype.parse = function (s) {
            var parts = parse(s);
            if (parts === null) {
                return null;
            }
            var marker = parts.marker;
            var forcedTzo = null;
            if (parts.timeZoneOffset !== null) {
                if (this.canComputeOffset) {
                    marker = this.timestampToMarker(marker.valueOf() - parts.timeZoneOffset * 60 * 1000);
                }
                else {
                    forcedTzo = parts.timeZoneOffset;
                }
            }
            return { marker: marker, isTimeUnspecified: parts.isTimeUnspecified, forcedTzo: forcedTzo };
        };
        // Accessors
        DateEnv.prototype.getYear = function (marker) {
            return this.calendarSystem.getMarkerYear(marker);
        };
        DateEnv.prototype.getMonth = function (marker) {
            return this.calendarSystem.getMarkerMonth(marker);
        };
        // Adding / Subtracting
        DateEnv.prototype.add = function (marker, dur) {
            var a = this.calendarSystem.markerToArray(marker);
            a[0] += dur.years;
            a[1] += dur.months;
            a[2] += dur.days;
            a[6] += dur.milliseconds;
            return this.calendarSystem.arrayToMarker(a);
        };
        DateEnv.prototype.subtract = function (marker, dur) {
            var a = this.calendarSystem.markerToArray(marker);
            a[0] -= dur.years;
            a[1] -= dur.months;
            a[2] -= dur.days;
            a[6] -= dur.milliseconds;
            return this.calendarSystem.arrayToMarker(a);
        };
        DateEnv.prototype.addYears = function (marker, n) {
            var a = this.calendarSystem.markerToArray(marker);
            a[0] += n;
            return this.calendarSystem.arrayToMarker(a);
        };
        DateEnv.prototype.addMonths = function (marker, n) {
            var a = this.calendarSystem.markerToArray(marker);
            a[1] += n;
            return this.calendarSystem.arrayToMarker(a);
        };
        // Diffing Whole Units
        DateEnv.prototype.diffWholeYears = function (m0, m1) {
            var calendarSystem = this.calendarSystem;
            if (timeAsMs(m0) === timeAsMs(m1) &&
                calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1) &&
                calendarSystem.getMarkerMonth(m0) === calendarSystem.getMarkerMonth(m1)) {
                return calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0);
            }
            return null;
        };
        DateEnv.prototype.diffWholeMonths = function (m0, m1) {
            var calendarSystem = this.calendarSystem;
            if (timeAsMs(m0) === timeAsMs(m1) &&
                calendarSystem.getMarkerDay(m0) === calendarSystem.getMarkerDay(m1)) {
                return (calendarSystem.getMarkerMonth(m1) - calendarSystem.getMarkerMonth(m0)) +
                    (calendarSystem.getMarkerYear(m1) - calendarSystem.getMarkerYear(m0)) * 12;
            }
            return null;
        };
        // Range / Duration
        DateEnv.prototype.greatestWholeUnit = function (m0, m1) {
            var n = this.diffWholeYears(m0, m1);
            if (n !== null) {
                return { unit: 'year', value: n };
            }
            n = this.diffWholeMonths(m0, m1);
            if (n !== null) {
                return { unit: 'month', value: n };
            }
            n = diffWholeWeeks(m0, m1);
            if (n !== null) {
                return { unit: 'week', value: n };
            }
            n = diffWholeDays(m0, m1);
            if (n !== null) {
                return { unit: 'day', value: n };
            }
            n = diffHours(m0, m1);
            if (isInt(n)) {
                return { unit: 'hour', value: n };
            }
            n = diffMinutes(m0, m1);
            if (isInt(n)) {
                return { unit: 'minute', value: n };
            }
            n = diffSeconds(m0, m1);
            if (isInt(n)) {
                return { unit: 'second', value: n };
            }
            return { unit: 'millisecond', value: m1.valueOf() - m0.valueOf() };
        };
        DateEnv.prototype.countDurationsBetween = function (m0, m1, d) {
            // TODO: can use greatestWholeUnit
            var diff;
            if (d.years) {
                diff = this.diffWholeYears(m0, m1);
                if (diff !== null) {
                    return diff / asRoughYears(d);
                }
            }
            if (d.months) {
                diff = this.diffWholeMonths(m0, m1);
                if (diff !== null) {
                    return diff / asRoughMonths(d);
                }
            }
            if (d.days) {
                diff = diffWholeDays(m0, m1);
                if (diff !== null) {
                    return diff / asRoughDays(d);
                }
            }
            return (m1.valueOf() - m0.valueOf()) / asRoughMs(d);
        };
        // Start-Of
        // these DON'T return zoned-dates. only UTC start-of dates
        DateEnv.prototype.startOf = function (m, unit) {
            if (unit === 'year') {
                return this.startOfYear(m);
            }
            if (unit === 'month') {
                return this.startOfMonth(m);
            }
            if (unit === 'week') {
                return this.startOfWeek(m);
            }
            if (unit === 'day') {
                return startOfDay(m);
            }
            if (unit === 'hour') {
                return startOfHour(m);
            }
            if (unit === 'minute') {
                return startOfMinute(m);
            }
            if (unit === 'second') {
                return startOfSecond(m);
            }
            return null;
        };
        DateEnv.prototype.startOfYear = function (m) {
            return this.calendarSystem.arrayToMarker([
                this.calendarSystem.getMarkerYear(m),
            ]);
        };
        DateEnv.prototype.startOfMonth = function (m) {
            return this.calendarSystem.arrayToMarker([
                this.calendarSystem.getMarkerYear(m),
                this.calendarSystem.getMarkerMonth(m),
            ]);
        };
        DateEnv.prototype.startOfWeek = function (m) {
            return this.calendarSystem.arrayToMarker([
                this.calendarSystem.getMarkerYear(m),
                this.calendarSystem.getMarkerMonth(m),
                m.getUTCDate() - ((m.getUTCDay() - this.weekDow + 7) % 7),
            ]);
        };
        // Week Number
        DateEnv.prototype.computeWeekNumber = function (marker) {
            if (this.weekNumberFunc) {
                return this.weekNumberFunc(this.toDate(marker));
            }
            return weekOfYear(marker, this.weekDow, this.weekDoy);
        };
        // TODO: choke on timeZoneName: long
        DateEnv.prototype.format = function (marker, formatter, dateOptions) {
            if (dateOptions === void 0) { dateOptions = {}; }
            return formatter.format({
                marker: marker,
                timeZoneOffset: dateOptions.forcedTzo != null ?
                    dateOptions.forcedTzo :
                    this.offsetForMarker(marker),
            }, this);
        };
        DateEnv.prototype.formatRange = function (start, end, formatter, dateOptions) {
            if (dateOptions === void 0) { dateOptions = {}; }
            if (dateOptions.isEndExclusive) {
                end = addMs(end, -1);
            }
            return formatter.formatRange({
                marker: start,
                timeZoneOffset: dateOptions.forcedStartTzo != null ?
                    dateOptions.forcedStartTzo :
                    this.offsetForMarker(start),
            }, {
                marker: end,
                timeZoneOffset: dateOptions.forcedEndTzo != null ?
                    dateOptions.forcedEndTzo :
                    this.offsetForMarker(end),
            }, this, dateOptions.defaultSeparator);
        };
        /*
        DUMB: the omitTime arg is dumb. if we omit the time, we want to omit the timezone offset. and if we do that,
        might as well use buildIsoString or some other util directly
        */
        DateEnv.prototype.formatIso = function (marker, extraOptions) {
            if (extraOptions === void 0) { extraOptions = {}; }
            var timeZoneOffset = null;
            if (!extraOptions.omitTimeZoneOffset) {
                if (extraOptions.forcedTzo != null) {
                    timeZoneOffset = extraOptions.forcedTzo;
                }
                else {
                    timeZoneOffset = this.offsetForMarker(marker);
                }
            }
            return buildIsoString(marker, timeZoneOffset, extraOptions.omitTime);
        };
        // TimeZone
        DateEnv.prototype.timestampToMarker = function (ms) {
            if (this.timeZone === 'local') {
                return arrayToUtcDate(dateToLocalArray(new Date(ms)));
            }
            if (this.timeZone === 'UTC' || !this.namedTimeZoneImpl) {
                return new Date(ms);
            }
            return arrayToUtcDate(this.namedTimeZoneImpl.timestampToArray(ms));
        };
        DateEnv.prototype.offsetForMarker = function (m) {
            if (this.timeZone === 'local') {
                return -arrayToLocalDate(dateToUtcArray(m)).getTimezoneOffset(); // convert "inverse" offset to "normal" offset
            }
            if (this.timeZone === 'UTC') {
                return 0;
            }
            if (this.namedTimeZoneImpl) {
                return this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m));
            }
            return null;
        };
        // Conversion
        DateEnv.prototype.toDate = function (m, forcedTzo) {
            if (this.timeZone === 'local') {
                return arrayToLocalDate(dateToUtcArray(m));
            }
            if (this.timeZone === 'UTC') {
                return new Date(m.valueOf()); // make sure it's a copy
            }
            if (!this.namedTimeZoneImpl) {
                return new Date(m.valueOf() - (forcedTzo || 0));
            }
            return new Date(m.valueOf() -
                this.namedTimeZoneImpl.offsetForArray(dateToUtcArray(m)) * 1000 * 60);
        };
        return DateEnv;
    }());

    var globalLocales = [];

    var RAW_EN_LOCALE = {
        code: 'en',
        week: {
            dow: 0,
            doy: 4, // 4 days need to be within the year to be considered the first week
        },
        direction: 'ltr',
        buttonText: {
            prev: 'prev',
            next: 'next',
            prevYear: 'prev year',
            nextYear: 'next year',
            year: 'year',
            today: 'today',
            month: 'month',
            week: 'week',
            day: 'day',
            list: 'list',
        },
        weekText: 'W',
        allDayText: 'all-day',
        moreLinkText: 'more',
        noEventsText: 'No events to display',
    };
    function organizeRawLocales(explicitRawLocales) {
        var defaultCode = explicitRawLocales.length > 0 ? explicitRawLocales[0].code : 'en';
        var allRawLocales = globalLocales.concat(explicitRawLocales);
        var rawLocaleMap = {
            en: RAW_EN_LOCALE, // necessary?
        };
        for (var _i = 0, allRawLocales_1 = allRawLocales; _i < allRawLocales_1.length; _i++) {
            var rawLocale = allRawLocales_1[_i];
            rawLocaleMap[rawLocale.code] = rawLocale;
        }
        return {
            map: rawLocaleMap,
            defaultCode: defaultCode,
        };
    }
    function buildLocale(inputSingular, available) {
        if (typeof inputSingular === 'object' && !Array.isArray(inputSingular)) {
            return parseLocale(inputSingular.code, [inputSingular.code], inputSingular);
        }
        return queryLocale(inputSingular, available);
    }
    function queryLocale(codeArg, available) {
        var codes = [].concat(codeArg || []); // will convert to array
        var raw = queryRawLocale(codes, available) || RAW_EN_LOCALE;
        return parseLocale(codeArg, codes, raw);
    }
    function queryRawLocale(codes, available) {
        for (var i = 0; i < codes.length; i += 1) {
            var parts = codes[i].toLocaleLowerCase().split('-');
            for (var j = parts.length; j > 0; j -= 1) {
                var simpleId = parts.slice(0, j).join('-');
                if (available[simpleId]) {
                    return available[simpleId];
                }
            }
        }
        return null;
    }
    function parseLocale(codeArg, codes, raw) {
        var merged = mergeProps([RAW_EN_LOCALE, raw], ['buttonText']);
        delete merged.code; // don't want this part of the options
        var week = merged.week;
        delete merged.week;
        return {
            codeArg: codeArg,
            codes: codes,
            week: week,
            simpleNumberFormat: new Intl.NumberFormat(codeArg),
            options: merged,
        };
    }

    function formatDate(dateInput, options) {
        if (options === void 0) { options = {}; }
        var dateEnv = buildDateEnv$1(options);
        var formatter = createFormatter(options);
        var dateMeta = dateEnv.createMarkerMeta(dateInput);
        if (!dateMeta) { // TODO: warning?
            return '';
        }
        return dateEnv.format(dateMeta.marker, formatter, {
            forcedTzo: dateMeta.forcedTzo,
        });
    }
    function formatRange(startInput, endInput, options) {
        var dateEnv = buildDateEnv$1(typeof options === 'object' && options ? options : {}); // pass in if non-null object
        var formatter = createFormatter(options);
        var startMeta = dateEnv.createMarkerMeta(startInput);
        var endMeta = dateEnv.createMarkerMeta(endInput);
        if (!startMeta || !endMeta) { // TODO: warning?
            return '';
        }
        return dateEnv.formatRange(startMeta.marker, endMeta.marker, formatter, {
            forcedStartTzo: startMeta.forcedTzo,
            forcedEndTzo: endMeta.forcedTzo,
            isEndExclusive: options.isEndExclusive,
            defaultSeparator: BASE_OPTION_DEFAULTS.defaultRangeSeparator,
        });
    }
    // TODO: more DRY and optimized
    function buildDateEnv$1(settings) {
        var locale = buildLocale(settings.locale || 'en', organizeRawLocales([]).map); // TODO: don't hardcode 'en' everywhere
        return new DateEnv(__assign(__assign({ timeZone: BASE_OPTION_DEFAULTS.timeZone, calendarSystem: 'gregory' }, settings), { locale: locale }));
    }

    var DEF_DEFAULTS = {
        startTime: '09:00',
        endTime: '17:00',
        daysOfWeek: [1, 2, 3, 4, 5],
        display: 'inverse-background',
        classNames: 'fc-non-business',
        groupId: '_businessHours', // so multiple defs get grouped
    };
    /*
    TODO: pass around as EventDefHash!!!
    */
    function parseBusinessHours(input, context) {
        return parseEvents(refineInputs(input), null, context);
    }
    function refineInputs(input) {
        var rawDefs;
        if (input === true) {
            rawDefs = [{}]; // will get DEF_DEFAULTS verbatim
        }
        else if (Array.isArray(input)) {
            // if specifying an array, every sub-definition NEEDS a day-of-week
            rawDefs = input.filter(function (rawDef) { return rawDef.daysOfWeek; });
        }
        else if (typeof input === 'object' && input) { // non-null object
            rawDefs = [input];
        }
        else { // is probably false
            rawDefs = [];
        }
        rawDefs = rawDefs.map(function (rawDef) { return (__assign(__assign({}, DEF_DEFAULTS), rawDef)); });
        return rawDefs;
    }

    function pointInsideRect(point, rect) {
        return point.left >= rect.left &&
            point.left < rect.right &&
            point.top >= rect.top &&
            point.top < rect.bottom;
    }
    // Returns a new rectangle that is the intersection of the two rectangles. If they don't intersect, returns false
    function intersectRects(rect1, rect2) {
        var res = {
            left: Math.max(rect1.left, rect2.left),
            right: Math.min(rect1.right, rect2.right),
            top: Math.max(rect1.top, rect2.top),
            bottom: Math.min(rect1.bottom, rect2.bottom),
        };
        if (res.left < res.right && res.top < res.bottom) {
            return res;
        }
        return false;
    }
    function translateRect(rect, deltaX, deltaY) {
        return {
            left: rect.left + deltaX,
            right: rect.right + deltaX,
            top: rect.top + deltaY,
            bottom: rect.bottom + deltaY,
        };
    }
    // Returns a new point that will have been moved to reside within the given rectangle
    function constrainPoint(point, rect) {
        return {
            left: Math.min(Math.max(point.left, rect.left), rect.right),
            top: Math.min(Math.max(point.top, rect.top), rect.bottom),
        };
    }
    // Returns a point that is the center of the given rectangle
    function getRectCenter(rect) {
        return {
            left: (rect.left + rect.right) / 2,
            top: (rect.top + rect.bottom) / 2,
        };
    }
    // Subtracts point2's coordinates from point1's coordinates, returning a delta
    function diffPoints(point1, point2) {
        return {
            left: point1.left - point2.left,
            top: point1.top - point2.top,
        };
    }

    var canVGrowWithinCell;
    function getCanVGrowWithinCell() {
        if (canVGrowWithinCell == null) {
            canVGrowWithinCell = computeCanVGrowWithinCell();
        }
        return canVGrowWithinCell;
    }
    function computeCanVGrowWithinCell() {
        // for SSR, because this function is call immediately at top-level
        // TODO: just make this logic execute top-level, immediately, instead of doing lazily
        if (typeof document === 'undefined') {
            return true;
        }
        var el = document.createElement('div');
        el.style.position = 'absolute';
        el.style.top = '0px';
        el.style.left = '0px';
        el.innerHTML = '<table><tr><td><div></div></td></tr></table>';
        el.querySelector('table').style.height = '100px';
        el.querySelector('div').style.height = '100%';
        document.body.appendChild(el);
        var div = el.querySelector('div');
        var possible = div.offsetHeight > 0;
        document.body.removeChild(el);
        return possible;
    }

    var EMPTY_EVENT_STORE = createEmptyEventStore(); // for purecomponents. TODO: keep elsewhere
    var Splitter = /** @class */ (function () {
        function Splitter() {
            this.getKeysForEventDefs = memoize(this._getKeysForEventDefs);
            this.splitDateSelection = memoize(this._splitDateSpan);
            this.splitEventStore = memoize(this._splitEventStore);
            this.splitIndividualUi = memoize(this._splitIndividualUi);
            this.splitEventDrag = memoize(this._splitInteraction);
            this.splitEventResize = memoize(this._splitInteraction);
            this.eventUiBuilders = {}; // TODO: typescript protection
        }
        Splitter.prototype.splitProps = function (props) {
            var _this = this;
            var keyInfos = this.getKeyInfo(props);
            var defKeys = this.getKeysForEventDefs(props.eventStore);
            var dateSelections = this.splitDateSelection(props.dateSelection);
            var individualUi = this.splitIndividualUi(props.eventUiBases, defKeys); // the individual *bases*
            var eventStores = this.splitEventStore(props.eventStore, defKeys);
            var eventDrags = this.splitEventDrag(props.eventDrag);
            var eventResizes = this.splitEventResize(props.eventResize);
            var splitProps = {};
            this.eventUiBuilders = mapHash(keyInfos, function (info, key) { return _this.eventUiBuilders[key] || memoize(buildEventUiForKey); });
            for (var key in keyInfos) {
                var keyInfo = keyInfos[key];
                var eventStore = eventStores[key] || EMPTY_EVENT_STORE;
                var buildEventUi = this.eventUiBuilders[key];
                splitProps[key] = {
                    businessHours: keyInfo.businessHours || props.businessHours,
                    dateSelection: dateSelections[key] || null,
                    eventStore: eventStore,
                    eventUiBases: buildEventUi(props.eventUiBases[''], keyInfo.ui, individualUi[key]),
                    eventSelection: eventStore.instances[props.eventSelection] ? props.eventSelection : '',
                    eventDrag: eventDrags[key] || null,
                    eventResize: eventResizes[key] || null,
                };
            }
            return splitProps;
        };
        Splitter.prototype._splitDateSpan = function (dateSpan) {
            var dateSpans = {};
            if (dateSpan) {
                var keys = this.getKeysForDateSpan(dateSpan);
                for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
                    var key = keys_1[_i];
                    dateSpans[key] = dateSpan;
                }
            }
            return dateSpans;
        };
        Splitter.prototype._getKeysForEventDefs = function (eventStore) {
            var _this = this;
            return mapHash(eventStore.defs, function (eventDef) { return _this.getKeysForEventDef(eventDef); });
        };
        Splitter.prototype._splitEventStore = function (eventStore, defKeys) {
            var defs = eventStore.defs, instances = eventStore.instances;
            var splitStores = {};
            for (var defId in defs) {
                for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {
                    var key = _a[_i];
                    if (!splitStores[key]) {
                        splitStores[key] = createEmptyEventStore();
                    }
                    splitStores[key].defs[defId] = defs[defId];
                }
            }
            for (var instanceId in instances) {
                var instance = instances[instanceId];
                for (var _b = 0, _c = defKeys[instance.defId]; _b < _c.length; _b++) {
                    var key = _c[_b];
                    if (splitStores[key]) { // must have already been created
                        splitStores[key].instances[instanceId] = instance;
                    }
                }
            }
            return splitStores;
        };
        Splitter.prototype._splitIndividualUi = function (eventUiBases, defKeys) {
            var splitHashes = {};
            for (var defId in eventUiBases) {
                if (defId) { // not the '' key
                    for (var _i = 0, _a = defKeys[defId]; _i < _a.length; _i++) {
                        var key = _a[_i];
                        if (!splitHashes[key]) {
                            splitHashes[key] = {};
                        }
                        splitHashes[key][defId] = eventUiBases[defId];
                    }
                }
            }
            return splitHashes;
        };
        Splitter.prototype._splitInteraction = function (interaction) {
            var splitStates = {};
            if (interaction) {
                var affectedStores_1 = this._splitEventStore(interaction.affectedEvents, this._getKeysForEventDefs(interaction.affectedEvents));
                // can't rely on defKeys because event data is mutated
                var mutatedKeysByDefId = this._getKeysForEventDefs(interaction.mutatedEvents);
                var mutatedStores_1 = this._splitEventStore(interaction.mutatedEvents, mutatedKeysByDefId);
                var populate = function (key) {
                    if (!splitStates[key]) {
                        splitStates[key] = {
                            affectedEvents: affectedStores_1[key] || EMPTY_EVENT_STORE,
                            mutatedEvents: mutatedStores_1[key] || EMPTY_EVENT_STORE,
                            isEvent: interaction.isEvent,
                        };
                    }
                };
                for (var key in affectedStores_1) {
                    populate(key);
                }
                for (var key in mutatedStores_1) {
                    populate(key);
                }
            }
            return splitStates;
        };
        return Splitter;
    }());
    function buildEventUiForKey(allUi, eventUiForKey, individualUi) {
        var baseParts = [];
        if (allUi) {
            baseParts.push(allUi);
        }
        if (eventUiForKey) {
            baseParts.push(eventUiForKey);
        }
        var stuff = {
            '': combineEventUis(baseParts),
        };
        if (individualUi) {
            __assign(stuff, individualUi);
        }
        return stuff;
    }

    function getDateMeta(date, todayRange, nowDate, dateProfile) {
        return {
            dow: date.getUTCDay(),
            isDisabled: Boolean(dateProfile && !rangeContainsMarker(dateProfile.activeRange, date)),
            isOther: Boolean(dateProfile && !rangeContainsMarker(dateProfile.currentRange, date)),
            isToday: Boolean(todayRange && rangeContainsMarker(todayRange, date)),
            isPast: Boolean(nowDate ? (date < nowDate) : todayRange ? (date < todayRange.start) : false),
            isFuture: Boolean(nowDate ? (date > nowDate) : todayRange ? (date >= todayRange.end) : false),
        };
    }
    function getDayClassNames(meta, theme) {
        var classNames = [
            'fc-day',
            "fc-day-" + DAY_IDS[meta.dow],
        ];
        if (meta.isDisabled) {
            classNames.push('fc-day-disabled');
        }
        else {
            if (meta.isToday) {
                classNames.push('fc-day-today');
                classNames.push(theme.getClass('today'));
            }
            if (meta.isPast) {
                classNames.push('fc-day-past');
            }
            if (meta.isFuture) {
                classNames.push('fc-day-future');
            }
            if (meta.isOther) {
                classNames.push('fc-day-other');
            }
        }
        return classNames;
    }
    function getSlotClassNames(meta, theme) {
        var classNames = [
            'fc-slot',
            "fc-slot-" + DAY_IDS[meta.dow],
        ];
        if (meta.isDisabled) {
            classNames.push('fc-slot-disabled');
        }
        else {
            if (meta.isToday) {
                classNames.push('fc-slot-today');
                classNames.push(theme.getClass('today'));
            }
            if (meta.isPast) {
                classNames.push('fc-slot-past');
            }
            if (meta.isFuture) {
                classNames.push('fc-slot-future');
            }
        }
        return classNames;
    }

    function buildNavLinkData(date, type) {
        if (type === void 0) { type = 'day'; }
        return JSON.stringify({
            date: formatDayString(date),
            type: type,
        });
    }

    var _isRtlScrollbarOnLeft = null;
    function getIsRtlScrollbarOnLeft() {
        if (_isRtlScrollbarOnLeft === null) {
            _isRtlScrollbarOnLeft = computeIsRtlScrollbarOnLeft();
        }
        return _isRtlScrollbarOnLeft;
    }
    function computeIsRtlScrollbarOnLeft() {
        var outerEl = document.createElement('div');
        applyStyle(outerEl, {
            position: 'absolute',
            top: -1000,
            left: 0,
            border: 0,
            padding: 0,
            overflow: 'scroll',
            direction: 'rtl',
        });
        outerEl.innerHTML = '<div></div>';
        document.body.appendChild(outerEl);
        var innerEl = outerEl.firstChild;
        var res = innerEl.getBoundingClientRect().left > outerEl.getBoundingClientRect().left;
        removeElement(outerEl);
        return res;
    }

    var _scrollbarWidths;
    function getScrollbarWidths() {
        if (!_scrollbarWidths) {
            _scrollbarWidths = computeScrollbarWidths();
        }
        return _scrollbarWidths;
    }
    function computeScrollbarWidths() {
        var el = document.createElement('div');
        el.style.overflow = 'scroll';
        el.style.position = 'absolute';
        el.style.top = '-9999px';
        el.style.left = '-9999px';
        document.body.appendChild(el);
        var res = computeScrollbarWidthsForEl(el);
        document.body.removeChild(el);
        return res;
    }
    // WARNING: will include border
    function computeScrollbarWidthsForEl(el) {
        return {
            x: el.offsetHeight - el.clientHeight,
            y: el.offsetWidth - el.clientWidth,
        };
    }

    function computeEdges(el, getPadding) {
        if (getPadding === void 0) { getPadding = false; }
        var computedStyle = window.getComputedStyle(el);
        var borderLeft = parseInt(computedStyle.borderLeftWidth, 10) || 0;
        var borderRight = parseInt(computedStyle.borderRightWidth, 10) || 0;
        var borderTop = parseInt(computedStyle.borderTopWidth, 10) || 0;
        var borderBottom = parseInt(computedStyle.borderBottomWidth, 10) || 0;
        var badScrollbarWidths = computeScrollbarWidthsForEl(el); // includes border!
        var scrollbarLeftRight = badScrollbarWidths.y - borderLeft - borderRight;
        var scrollbarBottom = badScrollbarWidths.x - borderTop - borderBottom;
        var res = {
            borderLeft: borderLeft,
            borderRight: borderRight,
            borderTop: borderTop,
            borderBottom: borderBottom,
            scrollbarBottom: scrollbarBottom,
            scrollbarLeft: 0,
            scrollbarRight: 0,
        };
        if (getIsRtlScrollbarOnLeft() && computedStyle.direction === 'rtl') { // is the scrollbar on the left side?
            res.scrollbarLeft = scrollbarLeftRight;
        }
        else {
            res.scrollbarRight = scrollbarLeftRight;
        }
        if (getPadding) {
            res.paddingLeft = parseInt(computedStyle.paddingLeft, 10) || 0;
            res.paddingRight = parseInt(computedStyle.paddingRight, 10) || 0;
            res.paddingTop = parseInt(computedStyle.paddingTop, 10) || 0;
            res.paddingBottom = parseInt(computedStyle.paddingBottom, 10) || 0;
        }
        return res;
    }
    function computeInnerRect(el, goWithinPadding, doFromWindowViewport) {
        if (goWithinPadding === void 0) { goWithinPadding = false; }
        var outerRect = doFromWindowViewport ? el.getBoundingClientRect() : computeRect(el);
        var edges = computeEdges(el, goWithinPadding);
        var res = {
            left: outerRect.left + edges.borderLeft + edges.scrollbarLeft,
            right: outerRect.right - edges.borderRight - edges.scrollbarRight,
            top: outerRect.top + edges.borderTop,
            bottom: outerRect.bottom - edges.borderBottom - edges.scrollbarBottom,
        };
        if (goWithinPadding) {
            res.left += edges.paddingLeft;
            res.right -= edges.paddingRight;
            res.top += edges.paddingTop;
            res.bottom -= edges.paddingBottom;
        }
        return res;
    }
    function computeRect(el) {
        var rect = el.getBoundingClientRect();
        return {
            left: rect.left + window.pageXOffset,
            top: rect.top + window.pageYOffset,
            right: rect.right + window.pageXOffset,
            bottom: rect.bottom + window.pageYOffset,
        };
    }
    function computeClippedClientRect(el) {
        var clippingParents = getClippingParents(el);
        var rect = el.getBoundingClientRect();
        for (var _i = 0, clippingParents_1 = clippingParents; _i < clippingParents_1.length; _i++) {
            var clippingParent = clippingParents_1[_i];
            var intersection = intersectRects(rect, clippingParent.getBoundingClientRect());
            if (intersection) {
                rect = intersection;
            }
            else {
                return null;
            }
        }
        return rect;
    }
    function computeHeightAndMargins(el) {
        return el.getBoundingClientRect().height + computeVMargins(el);
    }
    function computeVMargins(el) {
        var computed = window.getComputedStyle(el);
        return parseInt(computed.marginTop, 10) +
            parseInt(computed.marginBottom, 10);
    }
    // does not return window
    function getClippingParents(el) {
        var parents = [];
        while (el instanceof HTMLElement) { // will stop when gets to document or null
            var computedStyle = window.getComputedStyle(el);
            if (computedStyle.position === 'fixed') {
                break;
            }
            if ((/(auto|scroll)/).test(computedStyle.overflow + computedStyle.overflowY + computedStyle.overflowX)) {
                parents.push(el);
            }
            el = el.parentNode;
        }
        return parents;
    }

    // given a function that resolves a result asynchronously.
    // the function can either call passed-in success and failure callbacks,
    // or it can return a promise.
    // if you need to pass additional params to func, bind them first.
    function unpromisify(func, success, failure) {
        // guard against success/failure callbacks being called more than once
        // and guard against a promise AND callback being used together.
        var isResolved = false;
        var wrappedSuccess = function () {
            if (!isResolved) {
                isResolved = true;
                success.apply(this, arguments); // eslint-disable-line prefer-rest-params
            }
        };
        var wrappedFailure = function () {
            if (!isResolved) {
                isResolved = true;
                if (failure) {
                    failure.apply(this, arguments); // eslint-disable-line prefer-rest-params
                }
            }
        };
        var res = func(wrappedSuccess, wrappedFailure);
        if (res && typeof res.then === 'function') {
            res.then(wrappedSuccess, wrappedFailure);
        }
    }

    var Emitter = /** @class */ (function () {
        function Emitter() {
            this.handlers = {};
            this.thisContext = null;
        }
        Emitter.prototype.setThisContext = function (thisContext) {
            this.thisContext = thisContext;
        };
        Emitter.prototype.setOptions = function (options) {
            this.options = options;
        };
        Emitter.prototype.on = function (type, handler) {
            addToHash(this.handlers, type, handler);
        };
        Emitter.prototype.off = function (type, handler) {
            removeFromHash(this.handlers, type, handler);
        };
        Emitter.prototype.trigger = function (type) {
            var args = [];
            for (var _i = 1; _i < arguments.length; _i++) {
                args[_i - 1] = arguments[_i];
            }
            var attachedHandlers = this.handlers[type] || [];
            var optionHandler = this.options && this.options[type];
            var handlers = [].concat(optionHandler || [], attachedHandlers);
            for (var _a = 0, handlers_1 = handlers; _a < handlers_1.length; _a++) {
                var handler = handlers_1[_a];
                handler.apply(this.thisContext, args);
            }
        };
        Emitter.prototype.hasHandlers = function (type) {
            return (this.handlers[type] && this.handlers[type].length) ||
                (this.options && this.options[type]);
        };
        return Emitter;
    }());
    function addToHash(hash, type, handler) {
        (hash[type] || (hash[type] = []))
            .push(handler);
    }
    function removeFromHash(hash, type, handler) {
        if (handler) {
            if (hash[type]) {
                hash[type] = hash[type].filter(function (func) { return func !== handler; });
            }
        }
        else {
            delete hash[type]; // remove all handler funcs for this type
        }
    }

    /*
    Records offset information for a set of elements, relative to an origin element.
    Can record the left/right OR the top/bottom OR both.
    Provides methods for querying the cache by position.
    */
    var PositionCache = /** @class */ (function () {
        function PositionCache(originEl, els, isHorizontal, isVertical) {
            this.els = els;
            var originClientRect = this.originClientRect = originEl.getBoundingClientRect(); // relative to viewport top-left
            if (isHorizontal) {
                this.buildElHorizontals(originClientRect.left);
            }
            if (isVertical) {
                this.buildElVerticals(originClientRect.top);
            }
        }
        // Populates the left/right internal coordinate arrays
        PositionCache.prototype.buildElHorizontals = function (originClientLeft) {
            var lefts = [];
            var rights = [];
            for (var _i = 0, _a = this.els; _i < _a.length; _i++) {
                var el = _a[_i];
                var rect = el.getBoundingClientRect();
                lefts.push(rect.left - originClientLeft);
                rights.push(rect.right - originClientLeft);
            }
            this.lefts = lefts;
            this.rights = rights;
        };
        // Populates the top/bottom internal coordinate arrays
        PositionCache.prototype.buildElVerticals = function (originClientTop) {
            var tops = [];
            var bottoms = [];
            for (var _i = 0, _a = this.els; _i < _a.length; _i++) {
                var el = _a[_i];
                var rect = el.getBoundingClientRect();
                tops.push(rect.top - originClientTop);
                bottoms.push(rect.bottom - originClientTop);
            }
            this.tops = tops;
            this.bottoms = bottoms;
        };
        // Given a left offset (from document left), returns the index of the el that it horizontally intersects.
        // If no intersection is made, returns undefined.
        PositionCache.prototype.leftToIndex = function (leftPosition) {
            var _a = this, lefts = _a.lefts, rights = _a.rights;
            var len = lefts.length;
            var i;
            for (i = 0; i < len; i += 1) {
                if (leftPosition >= lefts[i] && leftPosition < rights[i]) {
                    return i;
                }
            }
            return undefined; // TODO: better
        };
        // Given a top offset (from document top), returns the index of the el that it vertically intersects.
        // If no intersection is made, returns undefined.
        PositionCache.prototype.topToIndex = function (topPosition) {
            var _a = this, tops = _a.tops, bottoms = _a.bottoms;
            var len = tops.length;
            var i;
            for (i = 0; i < len; i += 1) {
                if (topPosition >= tops[i] && topPosition < bottoms[i]) {
                    return i;
                }
            }
            return undefined; // TODO: better
        };
        // Gets the width of the element at the given index
        PositionCache.prototype.getWidth = function (leftIndex) {
            return this.rights[leftIndex] - this.lefts[leftIndex];
        };
        // Gets the height of the element at the given index
        PositionCache.prototype.getHeight = function (topIndex) {
            return this.bottoms[topIndex] - this.tops[topIndex];
        };
        return PositionCache;
    }());

    /* eslint max-classes-per-file: "off" */
    /*
    An object for getting/setting scroll-related information for an element.
    Internally, this is done very differently for window versus DOM element,
    so this object serves as a common interface.
    */
    var ScrollController = /** @class */ (function () {
        function ScrollController() {
        }
        ScrollController.prototype.getMaxScrollTop = function () {
            return this.getScrollHeight() - this.getClientHeight();
        };
        ScrollController.prototype.getMaxScrollLeft = function () {
            return this.getScrollWidth() - this.getClientWidth();
        };
        ScrollController.prototype.canScrollVertically = function () {
            return this.getMaxScrollTop() > 0;
        };
        ScrollController.prototype.canScrollHorizontally = function () {
            return this.getMaxScrollLeft() > 0;
        };
        ScrollController.prototype.canScrollUp = function () {
            return this.getScrollTop() > 0;
        };
        ScrollController.prototype.canScrollDown = function () {
            return this.getScrollTop() < this.getMaxScrollTop();
        };
        ScrollController.prototype.canScrollLeft = function () {
            return this.getScrollLeft() > 0;
        };
        ScrollController.prototype.canScrollRight = function () {
            return this.getScrollLeft() < this.getMaxScrollLeft();
        };
        return ScrollController;
    }());
    var ElementScrollController = /** @class */ (function (_super) {
        __extends(ElementScrollController, _super);
        function ElementScrollController(el) {
            var _this = _super.call(this) || this;
            _this.el = el;
            return _this;
        }
        ElementScrollController.prototype.getScrollTop = function () {
            return this.el.scrollTop;
        };
        ElementScrollController.prototype.getScrollLeft = function () {
            return this.el.scrollLeft;
        };
        ElementScrollController.prototype.setScrollTop = function (top) {
            this.el.scrollTop = top;
        };
        ElementScrollController.prototype.setScrollLeft = function (left) {
            this.el.scrollLeft = left;
        };
        ElementScrollController.prototype.getScrollWidth = function () {
            return this.el.scrollWidth;
        };
        ElementScrollController.prototype.getScrollHeight = function () {
            return this.el.scrollHeight;
        };
        ElementScrollController.prototype.getClientHeight = function () {
            return this.el.clientHeight;
        };
        ElementScrollController.prototype.getClientWidth = function () {
            return this.el.clientWidth;
        };
        return ElementScrollController;
    }(ScrollController));
    var WindowScrollController = /** @class */ (function (_super) {
        __extends(WindowScrollController, _super);
        function WindowScrollController() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        WindowScrollController.prototype.getScrollTop = function () {
            return window.pageYOffset;
        };
        WindowScrollController.prototype.getScrollLeft = function () {
            return window.pageXOffset;
        };
        WindowScrollController.prototype.setScrollTop = function (n) {
            window.scroll(window.pageXOffset, n);
        };
        WindowScrollController.prototype.setScrollLeft = function (n) {
            window.scroll(n, window.pageYOffset);
        };
        WindowScrollController.prototype.getScrollWidth = function () {
            return document.documentElement.scrollWidth;
        };
        WindowScrollController.prototype.getScrollHeight = function () {
            return document.documentElement.scrollHeight;
        };
        WindowScrollController.prototype.getClientHeight = function () {
            return document.documentElement.clientHeight;
        };
        WindowScrollController.prototype.getClientWidth = function () {
            return document.documentElement.clientWidth;
        };
        return WindowScrollController;
    }(ScrollController));

    var Theme = /** @class */ (function () {
        function Theme(calendarOptions) {
            if (this.iconOverrideOption) {
                this.setIconOverride(calendarOptions[this.iconOverrideOption]);
            }
        }
        Theme.prototype.setIconOverride = function (iconOverrideHash) {
            var iconClassesCopy;
            var buttonName;
            if (typeof iconOverrideHash === 'object' && iconOverrideHash) { // non-null object
                iconClassesCopy = __assign({}, this.iconClasses);
                for (buttonName in iconOverrideHash) {
                    iconClassesCopy[buttonName] = this.applyIconOverridePrefix(iconOverrideHash[buttonName]);
                }
                this.iconClasses = iconClassesCopy;
            }
            else if (iconOverrideHash === false) {
                this.iconClasses = {};
            }
        };
        Theme.prototype.applyIconOverridePrefix = function (className) {
            var prefix = this.iconOverridePrefix;
            if (prefix && className.indexOf(prefix) !== 0) { // if not already present
                className = prefix + className;
            }
            return className;
        };
        Theme.prototype.getClass = function (key) {
            return this.classes[key] || '';
        };
        Theme.prototype.getIconClass = function (buttonName, isRtl) {
            var className;
            if (isRtl && this.rtlIconClasses) {
                className = this.rtlIconClasses[buttonName] || this.iconClasses[buttonName];
            }
            else {
                className = this.iconClasses[buttonName];
            }
            if (className) {
                return this.baseIconClass + " " + className;
            }
            return '';
        };
        Theme.prototype.getCustomButtonIconClass = function (customButtonProps) {
            var className;
            if (this.iconOverrideCustomButtonOption) {
                className = customButtonProps[this.iconOverrideCustomButtonOption];
                if (className) {
                    return this.baseIconClass + " " + this.applyIconOverridePrefix(className);
                }
            }
            return '';
        };
        return Theme;
    }());
    Theme.prototype.classes = {};
    Theme.prototype.iconClasses = {};
    Theme.prototype.baseIconClass = '';
    Theme.prototype.iconOverridePrefix = '';

    /// <reference types="@fullcalendar/core-preact" />
    if (typeof FullCalendarVDom === 'undefined') {
        throw new Error('Please import the top-level fullcalendar lib before attempting to import a plugin.');
    }
    var Component = FullCalendarVDom.Component;
    var createElement = FullCalendarVDom.createElement;
    var render = FullCalendarVDom.render;
    var createRef = FullCalendarVDom.createRef;
    var Fragment = FullCalendarVDom.Fragment;
    var createContext = FullCalendarVDom.createContext;
    var createPortal = FullCalendarVDom.createPortal;
    var flushToDom = FullCalendarVDom.flushToDom;
    var unmountComponentAtNode = FullCalendarVDom.unmountComponentAtNode;
    /* eslint-enable */

    var ScrollResponder = /** @class */ (function () {
        function ScrollResponder(execFunc, emitter, scrollTime, scrollTimeReset) {
            var _this = this;
            this.execFunc = execFunc;
            this.emitter = emitter;
            this.scrollTime = scrollTime;
            this.scrollTimeReset = scrollTimeReset;
            this.handleScrollRequest = function (request) {
                _this.queuedRequest = __assign({}, _this.queuedRequest || {}, request);
                _this.drain();
            };
            emitter.on('_scrollRequest', this.handleScrollRequest);
            this.fireInitialScroll();
        }
        ScrollResponder.prototype.detach = function () {
            this.emitter.off('_scrollRequest', this.handleScrollRequest);
        };
        ScrollResponder.prototype.update = function (isDatesNew) {
            if (isDatesNew && this.scrollTimeReset) {
                this.fireInitialScroll(); // will drain
            }
            else {
                this.drain();
            }
        };
        ScrollResponder.prototype.fireInitialScroll = function () {
            this.handleScrollRequest({
                time: this.scrollTime,
            });
        };
        ScrollResponder.prototype.drain = function () {
            if (this.queuedRequest && this.execFunc(this.queuedRequest)) {
                this.queuedRequest = null;
            }
        };
        return ScrollResponder;
    }());

    var ViewContextType = createContext({}); // for Components
    function buildViewContext(viewSpec, viewApi, viewOptions, dateProfileGenerator, dateEnv, theme, pluginHooks, dispatch, getCurrentData, emitter, calendarApi, registerInteractiveComponent, unregisterInteractiveComponent) {
        return {
            dateEnv: dateEnv,
            options: viewOptions,
            pluginHooks: pluginHooks,
            emitter: emitter,
            dispatch: dispatch,
            getCurrentData: getCurrentData,
            calendarApi: calendarApi,
            viewSpec: viewSpec,
            viewApi: viewApi,
            dateProfileGenerator: dateProfileGenerator,
            theme: theme,
            isRtl: viewOptions.direction === 'rtl',
            addResizeHandler: function (handler) {
                emitter.on('_resize', handler);
            },
            removeResizeHandler: function (handler) {
                emitter.off('_resize', handler);
            },
            createScrollResponder: function (execFunc) {
                return new ScrollResponder(execFunc, emitter, createDuration(viewOptions.scrollTime), viewOptions.scrollTimeReset);
            },
            registerInteractiveComponent: registerInteractiveComponent,
            unregisterInteractiveComponent: unregisterInteractiveComponent,
        };
    }

    /* eslint max-classes-per-file: off */
    var PureComponent = /** @class */ (function (_super) {
        __extends(PureComponent, _super);
        function PureComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        PureComponent.prototype.shouldComponentUpdate = function (nextProps, nextState) {
            if (this.debug) {
                // eslint-disable-next-line no-console
                console.log(getUnequalProps(nextProps, this.props), getUnequalProps(nextState, this.state));
            }
            return !compareObjs(this.props, nextProps, this.propEquality) ||
                !compareObjs(this.state, nextState, this.stateEquality);
        };
        PureComponent.addPropsEquality = addPropsEquality;
        PureComponent.addStateEquality = addStateEquality;
        PureComponent.contextType = ViewContextType;
        return PureComponent;
    }(Component));
    PureComponent.prototype.propEquality = {};
    PureComponent.prototype.stateEquality = {};
    var BaseComponent = /** @class */ (function (_super) {
        __extends(BaseComponent, _super);
        function BaseComponent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        BaseComponent.contextType = ViewContextType;
        return BaseComponent;
    }(PureComponent));
    function addPropsEquality(propEquality) {
        var hash = Object.create(this.prototype.propEquality);
        __assign(hash, propEquality);
        this.prototype.propEquality = hash;
    }
    function addStateEquality(stateEquality) {
        var hash = Object.create(this.prototype.stateEquality);
        __assign(hash, stateEquality);
        this.prototype.stateEquality = hash;
    }
    // use other one
    function setRef(ref, current) {
        if (typeof ref === 'function') {
            ref(current);
        }
        else if (ref) {
            // see https://github.com/facebook/react/issues/13029
            ref.current = current;
        }
    }

    /*
    an INTERACTABLE date component

    PURPOSES:
    - hook up to fg, fill, and mirror renderers
    - interface for dragging and hits
    */
    var DateComponent = /** @class */ (function (_super) {
        __extends(DateComponent, _super);
        function DateComponent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.uid = guid();
            return _this;
        }
        // Hit System
        // -----------------------------------------------------------------------------------------------------------------
        DateComponent.prototype.prepareHits = function () {
        };
        DateComponent.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {
            return null; // this should be abstract
        };
        // Pointer Interaction Utils
        // -----------------------------------------------------------------------------------------------------------------
        DateComponent.prototype.isValidSegDownEl = function (el) {
            return !this.props.eventDrag && // HACK
                !this.props.eventResize && // HACK
                !elementClosest(el, '.fc-event-mirror');
        };
        DateComponent.prototype.isValidDateDownEl = function (el) {
            return !elementClosest(el, '.fc-event:not(.fc-bg-event)') &&
                !elementClosest(el, '.fc-more-link') && // a "more.." link
                !elementClosest(el, 'a[data-navlink]') && // a clickable nav link
                !elementClosest(el, '.fc-popover'); // hack
        };
        return DateComponent;
    }(BaseComponent));

    // TODO: easier way to add new hooks? need to update a million things
    function createPlugin(input) {
        return {
            id: guid(),
            deps: input.deps || [],
            reducers: input.reducers || [],
            isLoadingFuncs: input.isLoadingFuncs || [],
            contextInit: [].concat(input.contextInit || []),
            eventRefiners: input.eventRefiners || {},
            eventDefMemberAdders: input.eventDefMemberAdders || [],
            eventSourceRefiners: input.eventSourceRefiners || {},
            isDraggableTransformers: input.isDraggableTransformers || [],
            eventDragMutationMassagers: input.eventDragMutationMassagers || [],
            eventDefMutationAppliers: input.eventDefMutationAppliers || [],
            dateSelectionTransformers: input.dateSelectionTransformers || [],
            datePointTransforms: input.datePointTransforms || [],
            dateSpanTransforms: input.dateSpanTransforms || [],
            views: input.views || {},
            viewPropsTransformers: input.viewPropsTransformers || [],
            isPropsValid: input.isPropsValid || null,
            externalDefTransforms: input.externalDefTransforms || [],
            viewContainerAppends: input.viewContainerAppends || [],
            eventDropTransformers: input.eventDropTransformers || [],
            componentInteractions: input.componentInteractions || [],
            calendarInteractions: input.calendarInteractions || [],
            themeClasses: input.themeClasses || {},
            eventSourceDefs: input.eventSourceDefs || [],
            cmdFormatter: input.cmdFormatter,
            recurringTypes: input.recurringTypes || [],
            namedTimeZonedImpl: input.namedTimeZonedImpl,
            initialView: input.initialView || '',
            elementDraggingImpl: input.elementDraggingImpl,
            optionChangeHandlers: input.optionChangeHandlers || {},
            scrollGridImpl: input.scrollGridImpl || null,
            contentTypeHandlers: input.contentTypeHandlers || {},
            listenerRefiners: input.listenerRefiners || {},
            optionRefiners: input.optionRefiners || {},
            propSetHandlers: input.propSetHandlers || {},
        };
    }
    function buildPluginHooks(pluginDefs, globalDefs) {
        var isAdded = {};
        var hooks = {
            reducers: [],
            isLoadingFuncs: [],
            contextInit: [],
            eventRefiners: {},
            eventDefMemberAdders: [],
            eventSourceRefiners: {},
            isDraggableTransformers: [],
            eventDragMutationMassagers: [],
            eventDefMutationAppliers: [],
            dateSelectionTransformers: [],
            datePointTransforms: [],
            dateSpanTransforms: [],
            views: {},
            viewPropsTransformers: [],
            isPropsValid: null,
            externalDefTransforms: [],
            viewContainerAppends: [],
            eventDropTransformers: [],
            componentInteractions: [],
            calendarInteractions: [],
            themeClasses: {},
            eventSourceDefs: [],
            cmdFormatter: null,
            recurringTypes: [],
            namedTimeZonedImpl: null,
            initialView: '',
            elementDraggingImpl: null,
            optionChangeHandlers: {},
            scrollGridImpl: null,
            contentTypeHandlers: {},
            listenerRefiners: {},
            optionRefiners: {},
            propSetHandlers: {},
        };
        function addDefs(defs) {
            for (var _i = 0, defs_1 = defs; _i < defs_1.length; _i++) {
                var def = defs_1[_i];
                if (!isAdded[def.id]) {
                    isAdded[def.id] = true;
                    addDefs(def.deps);
                    hooks = combineHooks(hooks, def);
                }
            }
        }
        if (pluginDefs) {
            addDefs(pluginDefs);
        }
        addDefs(globalDefs);
        return hooks;
    }
    function buildBuildPluginHooks() {
        var currentOverrideDefs = [];
        var currentGlobalDefs = [];
        var currentHooks;
        return function (overrideDefs, globalDefs) {
            if (!currentHooks || !isArraysEqual(overrideDefs, currentOverrideDefs) || !isArraysEqual(globalDefs, currentGlobalDefs)) {
                currentHooks = buildPluginHooks(overrideDefs, globalDefs);
            }
            currentOverrideDefs = overrideDefs;
            currentGlobalDefs = globalDefs;
            return currentHooks;
        };
    }
    function combineHooks(hooks0, hooks1) {
        return {
            reducers: hooks0.reducers.concat(hooks1.reducers),
            isLoadingFuncs: hooks0.isLoadingFuncs.concat(hooks1.isLoadingFuncs),
            contextInit: hooks0.contextInit.concat(hooks1.contextInit),
            eventRefiners: __assign(__assign({}, hooks0.eventRefiners), hooks1.eventRefiners),
            eventDefMemberAdders: hooks0.eventDefMemberAdders.concat(hooks1.eventDefMemberAdders),
            eventSourceRefiners: __assign(__assign({}, hooks0.eventSourceRefiners), hooks1.eventSourceRefiners),
            isDraggableTransformers: hooks0.isDraggableTransformers.concat(hooks1.isDraggableTransformers),
            eventDragMutationMassagers: hooks0.eventDragMutationMassagers.concat(hooks1.eventDragMutationMassagers),
            eventDefMutationAppliers: hooks0.eventDefMutationAppliers.concat(hooks1.eventDefMutationAppliers),
            dateSelectionTransformers: hooks0.dateSelectionTransformers.concat(hooks1.dateSelectionTransformers),
            datePointTransforms: hooks0.datePointTransforms.concat(hooks1.datePointTransforms),
            dateSpanTransforms: hooks0.dateSpanTransforms.concat(hooks1.dateSpanTransforms),
            views: __assign(__assign({}, hooks0.views), hooks1.views),
            viewPropsTransformers: hooks0.viewPropsTransformers.concat(hooks1.viewPropsTransformers),
            isPropsValid: hooks1.isPropsValid || hooks0.isPropsValid,
            externalDefTransforms: hooks0.externalDefTransforms.concat(hooks1.externalDefTransforms),
            viewContainerAppends: hooks0.viewContainerAppends.concat(hooks1.viewContainerAppends),
            eventDropTransformers: hooks0.eventDropTransformers.concat(hooks1.eventDropTransformers),
            calendarInteractions: hooks0.calendarInteractions.concat(hooks1.calendarInteractions),
            componentInteractions: hooks0.componentInteractions.concat(hooks1.componentInteractions),
            themeClasses: __assign(__assign({}, hooks0.themeClasses), hooks1.themeClasses),
            eventSourceDefs: hooks0.eventSourceDefs.concat(hooks1.eventSourceDefs),
            cmdFormatter: hooks1.cmdFormatter || hooks0.cmdFormatter,
            recurringTypes: hooks0.recurringTypes.concat(hooks1.recurringTypes),
            namedTimeZonedImpl: hooks1.namedTimeZonedImpl || hooks0.namedTimeZonedImpl,
            initialView: hooks0.initialView || hooks1.initialView,
            elementDraggingImpl: hooks0.elementDraggingImpl || hooks1.elementDraggingImpl,
            optionChangeHandlers: __assign(__assign({}, hooks0.optionChangeHandlers), hooks1.optionChangeHandlers),
            scrollGridImpl: hooks1.scrollGridImpl || hooks0.scrollGridImpl,
            contentTypeHandlers: __assign(__assign({}, hooks0.contentTypeHandlers), hooks1.contentTypeHandlers),
            listenerRefiners: __assign(__assign({}, hooks0.listenerRefiners), hooks1.listenerRefiners),
            optionRefiners: __assign(__assign({}, hooks0.optionRefiners), hooks1.optionRefiners),
            propSetHandlers: __assign(__assign({}, hooks0.propSetHandlers), hooks1.propSetHandlers),
        };
    }

    var StandardTheme = /** @class */ (function (_super) {
        __extends(StandardTheme, _super);
        function StandardTheme() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return StandardTheme;
    }(Theme));
    StandardTheme.prototype.classes = {
        root: 'fc-theme-standard',
        tableCellShaded: 'fc-cell-shaded',
        buttonGroup: 'fc-button-group',
        button: 'fc-button fc-button-primary',
        buttonActive: 'fc-button-active',
    };
    StandardTheme.prototype.baseIconClass = 'fc-icon';
    StandardTheme.prototype.iconClasses = {
        close: 'fc-icon-x',
        prev: 'fc-icon-chevron-left',
        next: 'fc-icon-chevron-right',
        prevYear: 'fc-icon-chevrons-left',
        nextYear: 'fc-icon-chevrons-right',
    };
    StandardTheme.prototype.rtlIconClasses = {
        prev: 'fc-icon-chevron-right',
        next: 'fc-icon-chevron-left',
        prevYear: 'fc-icon-chevrons-right',
        nextYear: 'fc-icon-chevrons-left',
    };
    StandardTheme.prototype.iconOverrideOption = 'buttonIcons'; // TODO: make TS-friendly
    StandardTheme.prototype.iconOverrideCustomButtonOption = 'icon';
    StandardTheme.prototype.iconOverridePrefix = 'fc-icon-';

    function compileViewDefs(defaultConfigs, overrideConfigs) {
        var hash = {};
        var viewType;
        for (viewType in defaultConfigs) {
            ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
        }
        for (viewType in overrideConfigs) {
            ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs);
        }
        return hash;
    }
    function ensureViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
        if (hash[viewType]) {
            return hash[viewType];
        }
        var viewDef = buildViewDef(viewType, hash, defaultConfigs, overrideConfigs);
        if (viewDef) {
            hash[viewType] = viewDef;
        }
        return viewDef;
    }
    function buildViewDef(viewType, hash, defaultConfigs, overrideConfigs) {
        var defaultConfig = defaultConfigs[viewType];
        var overrideConfig = overrideConfigs[viewType];
        var queryProp = function (name) { return ((defaultConfig && defaultConfig[name] !== null) ? defaultConfig[name] :
            ((overrideConfig && overrideConfig[name] !== null) ? overrideConfig[name] : null)); };
        var theComponent = queryProp('component');
        var superType = queryProp('superType');
        var superDef = null;
        if (superType) {
            if (superType === viewType) {
                throw new Error('Can\\'t have a custom view type that references itself');
            }
            superDef = ensureViewDef(superType, hash, defaultConfigs, overrideConfigs);
        }
        if (!theComponent && superDef) {
            theComponent = superDef.component;
        }
        if (!theComponent) {
            return null; // don't throw a warning, might be settings for a single-unit view
        }
        return {
            type: viewType,
            component: theComponent,
            defaults: __assign(__assign({}, (superDef ? superDef.defaults : {})), (defaultConfig ? defaultConfig.rawOptions : {})),
            overrides: __assign(__assign({}, (superDef ? superDef.overrides : {})), (overrideConfig ? overrideConfig.rawOptions : {})),
        };
    }

    /* eslint max-classes-per-file: off */
    // NOTE: in JSX, you should always use this class with <HookProps> arg. otherwise, will default to any???
    var RenderHook = /** @class */ (function (_super) {
        __extends(RenderHook, _super);
        function RenderHook() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.rootElRef = createRef();
            _this.handleRootEl = function (el) {
                setRef(_this.rootElRef, el);
                if (_this.props.elRef) {
                    setRef(_this.props.elRef, el);
                }
            };
            return _this;
        }
        RenderHook.prototype.render = function () {
            var _this = this;
            var props = this.props;
            var hookProps = props.hookProps;
            return (createElement(MountHook, { hookProps: hookProps, didMount: props.didMount, willUnmount: props.willUnmount, elRef: this.handleRootEl }, function (rootElRef) { return (createElement(ContentHook, { hookProps: hookProps, content: props.content, defaultContent: props.defaultContent, backupElRef: _this.rootElRef }, function (innerElRef, innerContent) { return props.children(rootElRef, normalizeClassNames(props.classNames, hookProps), innerElRef, innerContent); })); }));
        };
        return RenderHook;
    }(BaseComponent));
    // TODO: rename to be about function, not default. use in above type
    // for forcing rerender of components that use the ContentHook
    var CustomContentRenderContext = createContext(0);
    function ContentHook(props) {
        return (createElement(CustomContentRenderContext.Consumer, null, function (renderId) { return (createElement(ContentHookInner, __assign({ renderId: renderId }, props))); }));
    }
    var ContentHookInner = /** @class */ (function (_super) {
        __extends(ContentHookInner, _super);
        function ContentHookInner() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.innerElRef = createRef();
            return _this;
        }
        ContentHookInner.prototype.render = function () {
            return this.props.children(this.innerElRef, this.renderInnerContent());
        };
        ContentHookInner.prototype.componentDidMount = function () {
            this.updateCustomContent();
        };
        ContentHookInner.prototype.componentDidUpdate = function () {
            this.updateCustomContent();
        };
        ContentHookInner.prototype.componentWillUnmount = function () {
            if (this.customContentInfo && this.customContentInfo.destroy) {
                this.customContentInfo.destroy();
            }
        };
        ContentHookInner.prototype.renderInnerContent = function () {
            var customContentInfo = this.customContentInfo; // only populated if using non-[p]react node(s)
            var innerContent = this.getInnerContent();
            var meta = this.getContentMeta(innerContent);
            // initial run, or content-type changing? (from vue -> react for example)
            if (!customContentInfo || customContentInfo.contentKey !== meta.contentKey) {
                // clearing old value
                if (customContentInfo) {
                    if (customContentInfo.destroy) {
                        customContentInfo.destroy();
                    }
                    customContentInfo = this.customContentInfo = null;
                }
                // assigning new value
                if (meta.contentKey) {
                    customContentInfo = this.customContentInfo = __assign({ contentKey: meta.contentKey, contentVal: innerContent[meta.contentKey] }, meta.buildLifecycleFuncs());
                }
                // updating
            }
            else if (customContentInfo) {
                customContentInfo.contentVal = innerContent[meta.contentKey];
            }
            return customContentInfo
                ? [] // signal that something was specified
                : innerContent; // assume a [p]react vdom node. use it
        };
        ContentHookInner.prototype.getInnerContent = function () {
            var props = this.props;
            var innerContent = normalizeContent(props.content, props.hookProps);
            if (innerContent === undefined) { // use the default
                innerContent = normalizeContent(props.defaultContent, props.hookProps);
            }
            return innerContent == null ? null : innerContent; // convert undefined to null (better for React)
        };
        ContentHookInner.prototype.getContentMeta = function (innerContent) {
            var contentTypeHandlers = this.context.pluginHooks.contentTypeHandlers;
            var contentKey = '';
            var buildLifecycleFuncs = null;
            if (innerContent) { // allowed to be null, for convenience to caller
                for (var searchKey in contentTypeHandlers) {
                    if (innerContent[searchKey] !== undefined) {
                        contentKey = searchKey;
                        buildLifecycleFuncs = contentTypeHandlers[searchKey];
                        break;
                    }
                }
            }
            return { contentKey: contentKey, buildLifecycleFuncs: buildLifecycleFuncs };
        };
        ContentHookInner.prototype.updateCustomContent = function () {
            if (this.customContentInfo) { // for non-[p]react
                this.customContentInfo.render(this.innerElRef.current || this.props.backupElRef.current, // the element to render into
                this.customContentInfo.contentVal);
            }
        };
        return ContentHookInner;
    }(BaseComponent));
    var MountHook = /** @class */ (function (_super) {
        __extends(MountHook, _super);
        function MountHook() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.handleRootEl = function (rootEl) {
                _this.rootEl = rootEl;
                if (_this.props.elRef) {
                    setRef(_this.props.elRef, rootEl);
                }
            };
            return _this;
        }
        MountHook.prototype.render = function () {
            return this.props.children(this.handleRootEl);
        };
        MountHook.prototype.componentDidMount = function () {
            var callback = this.props.didMount;
            if (callback) {
                callback(__assign(__assign({}, this.props.hookProps), { el: this.rootEl }));
            }
        };
        MountHook.prototype.componentWillUnmount = function () {
            var callback = this.props.willUnmount;
            if (callback) {
                callback(__assign(__assign({}, this.props.hookProps), { el: this.rootEl }));
            }
        };
        return MountHook;
    }(BaseComponent));
    function buildClassNameNormalizer() {
        var currentGenerator;
        var currentHookProps;
        var currentClassNames = [];
        return function (generator, hookProps) {
            if (!currentHookProps || !isPropsEqual(currentHookProps, hookProps) || generator !== currentGenerator) {
                currentGenerator = generator;
                currentHookProps = hookProps;
                currentClassNames = normalizeClassNames(generator, hookProps);
            }
            return currentClassNames;
        };
    }
    function normalizeClassNames(classNames, hookProps) {
        if (typeof classNames === 'function') {
            classNames = classNames(hookProps);
        }
        return parseClassNames(classNames);
    }
    function normalizeContent(input, hookProps) {
        if (typeof input === 'function') {
            return input(hookProps, createElement); // give the function the vdom-creation func
        }
        return input;
    }

    var ViewRoot = /** @class */ (function (_super) {
        __extends(ViewRoot, _super);
        function ViewRoot() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.normalizeClassNames = buildClassNameNormalizer();
            return _this;
        }
        ViewRoot.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            var options = context.options;
            var hookProps = { view: context.viewApi };
            var customClassNames = this.normalizeClassNames(options.viewClassNames, hookProps);
            return (createElement(MountHook, { hookProps: hookProps, didMount: options.viewDidMount, willUnmount: options.viewWillUnmount, elRef: props.elRef }, function (rootElRef) { return props.children(rootElRef, ["fc-" + props.viewSpec.type + "-view", 'fc-view'].concat(customClassNames)); }));
        };
        return ViewRoot;
    }(BaseComponent));

    function parseViewConfigs(inputs) {
        return mapHash(inputs, parseViewConfig);
    }
    function parseViewConfig(input) {
        var rawOptions = typeof input === 'function' ?
            { component: input } :
            input;
        var component = rawOptions.component;
        if (rawOptions.content) {
            component = createViewHookComponent(rawOptions);
            // TODO: remove content/classNames/didMount/etc from options?
        }
        return {
            superType: rawOptions.type,
            component: component,
            rawOptions: rawOptions,
        };
    }
    function createViewHookComponent(options) {
        return function (viewProps) { return (createElement(ViewContextType.Consumer, null, function (context) { return (createElement(ViewRoot, { viewSpec: context.viewSpec }, function (viewElRef, viewClassNames) {
            var hookProps = __assign(__assign({}, viewProps), { nextDayThreshold: context.options.nextDayThreshold });
            return (createElement(RenderHook, { hookProps: hookProps, classNames: options.classNames, content: options.content, didMount: options.didMount, willUnmount: options.willUnmount, elRef: viewElRef }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement("div", { className: viewClassNames.concat(customClassNames).join(' '), ref: rootElRef }, innerContent)); }));
        })); })); };
    }

    function buildViewSpecs(defaultInputs, optionOverrides, dynamicOptionOverrides, localeDefaults) {
        var defaultConfigs = parseViewConfigs(defaultInputs);
        var overrideConfigs = parseViewConfigs(optionOverrides.views);
        var viewDefs = compileViewDefs(defaultConfigs, overrideConfigs);
        return mapHash(viewDefs, function (viewDef) { return buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults); });
    }
    function buildViewSpec(viewDef, overrideConfigs, optionOverrides, dynamicOptionOverrides, localeDefaults) {
        var durationInput = viewDef.overrides.duration ||
            viewDef.defaults.duration ||
            dynamicOptionOverrides.duration ||
            optionOverrides.duration;
        var duration = null;
        var durationUnit = '';
        var singleUnit = '';
        var singleUnitOverrides = {};
        if (durationInput) {
            duration = createDurationCached(durationInput);
            if (duration) { // valid?
                var denom = greatestDurationDenominator(duration);
                durationUnit = denom.unit;
                if (denom.value === 1) {
                    singleUnit = durationUnit;
                    singleUnitOverrides = overrideConfigs[durationUnit] ? overrideConfigs[durationUnit].rawOptions : {};
                }
            }
        }
        var queryButtonText = function (optionsSubset) {
            var buttonTextMap = optionsSubset.buttonText || {};
            var buttonTextKey = viewDef.defaults.buttonTextKey;
            if (buttonTextKey != null && buttonTextMap[buttonTextKey] != null) {
                return buttonTextMap[buttonTextKey];
            }
            if (buttonTextMap[viewDef.type] != null) {
                return buttonTextMap[viewDef.type];
            }
            if (buttonTextMap[singleUnit] != null) {
                return buttonTextMap[singleUnit];
            }
            return null;
        };
        return {
            type: viewDef.type,
            component: viewDef.component,
            duration: duration,
            durationUnit: durationUnit,
            singleUnit: singleUnit,
            optionDefaults: viewDef.defaults,
            optionOverrides: __assign(__assign({}, singleUnitOverrides), viewDef.overrides),
            buttonTextOverride: queryButtonText(dynamicOptionOverrides) ||
                queryButtonText(optionOverrides) || // constructor-specified buttonText lookup hash takes precedence
                viewDef.overrides.buttonText,
            buttonTextDefault: queryButtonText(localeDefaults) ||
                viewDef.defaults.buttonText ||
                queryButtonText(BASE_OPTION_DEFAULTS) ||
                viewDef.type, // fall back to given view name
        };
    }
    // hack to get memoization working
    var durationInputMap = {};
    function createDurationCached(durationInput) {
        var json = JSON.stringify(durationInput);
        var res = durationInputMap[json];
        if (res === undefined) {
            res = createDuration(durationInput);
            durationInputMap[json] = res;
        }
        return res;
    }

    var DateProfileGenerator = /** @class */ (function () {
        function DateProfileGenerator(props) {
            this.props = props;
            this.nowDate = getNow(props.nowInput, props.dateEnv);
            this.initHiddenDays();
        }
        /* Date Range Computation
        ------------------------------------------------------------------------------------------------------------------*/
        // Builds a structure with info about what the dates/ranges will be for the "prev" view.
        DateProfileGenerator.prototype.buildPrev = function (currentDateProfile, currentDate, forceToValid) {
            var dateEnv = this.props.dateEnv;
            var prevDate = dateEnv.subtract(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month
            currentDateProfile.dateIncrement);
            return this.build(prevDate, -1, forceToValid);
        };
        // Builds a structure with info about what the dates/ranges will be for the "next" view.
        DateProfileGenerator.prototype.buildNext = function (currentDateProfile, currentDate, forceToValid) {
            var dateEnv = this.props.dateEnv;
            var nextDate = dateEnv.add(dateEnv.startOf(currentDate, currentDateProfile.currentRangeUnit), // important for start-of-month
            currentDateProfile.dateIncrement);
            return this.build(nextDate, 1, forceToValid);
        };
        // Builds a structure holding dates/ranges for rendering around the given date.
        // Optional direction param indicates whether the date is being incremented/decremented
        // from its previous value. decremented = -1, incremented = 1 (default).
        DateProfileGenerator.prototype.build = function (currentDate, direction, forceToValid) {
            if (forceToValid === void 0) { forceToValid = true; }
            var props = this.props;
            var validRange;
            var currentInfo;
            var isRangeAllDay;
            var renderRange;
            var activeRange;
            var isValid;
            validRange = this.buildValidRange();
            validRange = this.trimHiddenDays(validRange);
            if (forceToValid) {
                currentDate = constrainMarkerToRange(currentDate, validRange);
            }
            currentInfo = this.buildCurrentRangeInfo(currentDate, direction);
            isRangeAllDay = /^(year|month|week|day)$/.test(currentInfo.unit);
            renderRange = this.buildRenderRange(this.trimHiddenDays(currentInfo.range), currentInfo.unit, isRangeAllDay);
            renderRange = this.trimHiddenDays(renderRange);
            activeRange = renderRange;
            if (!props.showNonCurrentDates) {
                activeRange = intersectRanges(activeRange, currentInfo.range);
            }
            activeRange = this.adjustActiveRange(activeRange);
            activeRange = intersectRanges(activeRange, validRange); // might return null
            // it's invalid if the originally requested date is not contained,
            // or if the range is completely outside of the valid range.
            isValid = rangesIntersect(currentInfo.range, validRange);
            return {
                // constraint for where prev/next operations can go and where events can be dragged/resized to.
                // an object with optional start and end properties.
                validRange: validRange,
                // range the view is formally responsible for.
                // for example, a month view might have 1st-31st, excluding padded dates
                currentRange: currentInfo.range,
                // name of largest unit being displayed, like "month" or "week"
                currentRangeUnit: currentInfo.unit,
                isRangeAllDay: isRangeAllDay,
                // dates that display events and accept drag-n-drop
                // will be \`null\` if no dates accept events
                activeRange: activeRange,
                // date range with a rendered skeleton
                // includes not-active days that need some sort of DOM
                renderRange: renderRange,
                // Duration object that denotes the first visible time of any given day
                slotMinTime: props.slotMinTime,
                // Duration object that denotes the exclusive visible end time of any given day
                slotMaxTime: props.slotMaxTime,
                isValid: isValid,
                // how far the current date will move for a prev/next operation
                dateIncrement: this.buildDateIncrement(currentInfo.duration),
                // pass a fallback (might be null) ^
            };
        };
        // Builds an object with optional start/end properties.
        // Indicates the minimum/maximum dates to display.
        // not responsible for trimming hidden days.
        DateProfileGenerator.prototype.buildValidRange = function () {
            var input = this.props.validRangeInput;
            var simpleInput = typeof input === 'function'
                ? input.call(this.props.calendarApi, this.nowDate)
                : input;
            return this.refineRange(simpleInput) ||
                { start: null, end: null }; // completely open-ended
        };
        // Builds a structure with info about the "current" range, the range that is
        // highlighted as being the current month for example.
        // See build() for a description of \`direction\`.
        // Guaranteed to have \`range\` and \`unit\` properties. \`duration\` is optional.
        DateProfileGenerator.prototype.buildCurrentRangeInfo = function (date, direction) {
            var props = this.props;
            var duration = null;
            var unit = null;
            var range = null;
            var dayCount;
            if (props.duration) {
                duration = props.duration;
                unit = props.durationUnit;
                range = this.buildRangeFromDuration(date, direction, duration, unit);
            }
            else if ((dayCount = this.props.dayCount)) {
                unit = 'day';
                range = this.buildRangeFromDayCount(date, direction, dayCount);
            }
            else if ((range = this.buildCustomVisibleRange(date))) {
                unit = props.dateEnv.greatestWholeUnit(range.start, range.end).unit;
            }
            else {
                duration = this.getFallbackDuration();
                unit = greatestDurationDenominator(duration).unit;
                range = this.buildRangeFromDuration(date, direction, duration, unit);
            }
            return { duration: duration, unit: unit, range: range };
        };
        DateProfileGenerator.prototype.getFallbackDuration = function () {
            return createDuration({ day: 1 });
        };
        // Returns a new activeRange to have time values (un-ambiguate)
        // slotMinTime or slotMaxTime causes the range to expand.
        DateProfileGenerator.prototype.adjustActiveRange = function (range) {
            var _a = this.props, dateEnv = _a.dateEnv, usesMinMaxTime = _a.usesMinMaxTime, slotMinTime = _a.slotMinTime, slotMaxTime = _a.slotMaxTime;
            var start = range.start, end = range.end;
            if (usesMinMaxTime) {
                // expand active range if slotMinTime is negative (why not when positive?)
                if (asRoughDays(slotMinTime) < 0) {
                    start = startOfDay(start); // necessary?
                    start = dateEnv.add(start, slotMinTime);
                }
                // expand active range if slotMaxTime is beyond one day (why not when negative?)
                if (asRoughDays(slotMaxTime) > 1) {
                    end = startOfDay(end); // necessary?
                    end = addDays(end, -1);
                    end = dateEnv.add(end, slotMaxTime);
                }
            }
            return { start: start, end: end };
        };
        // Builds the "current" range when it is specified as an explicit duration.
        // \`unit\` is the already-computed greatestDurationDenominator unit of duration.
        DateProfileGenerator.prototype.buildRangeFromDuration = function (date, direction, duration, unit) {
            var _a = this.props, dateEnv = _a.dateEnv, dateAlignment = _a.dateAlignment;
            var start;
            var end;
            var res;
            // compute what the alignment should be
            if (!dateAlignment) {
                var dateIncrement = this.props.dateIncrement;
                if (dateIncrement) {
                    // use the smaller of the two units
                    if (asRoughMs(dateIncrement) < asRoughMs(duration)) {
                        dateAlignment = greatestDurationDenominator(dateIncrement).unit;
                    }
                    else {
                        dateAlignment = unit;
                    }
                }
                else {
                    dateAlignment = unit;
                }
            }
            // if the view displays a single day or smaller
            if (asRoughDays(duration) <= 1) {
                if (this.isHiddenDay(start)) {
                    start = this.skipHiddenDays(start, direction);
                    start = startOfDay(start);
                }
            }
            function computeRes() {
                start = dateEnv.startOf(date, dateAlignment);
                end = dateEnv.add(start, duration);
                res = { start: start, end: end };
            }
            computeRes();
            // if range is completely enveloped by hidden days, go past the hidden days
            if (!this.trimHiddenDays(res)) {
                date = this.skipHiddenDays(date, direction);
                computeRes();
            }
            return res;
        };
        // Builds the "current" range when a dayCount is specified.
        DateProfileGenerator.prototype.buildRangeFromDayCount = function (date, direction, dayCount) {
            var _a = this.props, dateEnv = _a.dateEnv, dateAlignment = _a.dateAlignment;
            var runningCount = 0;
            var start = date;
            var end;
            if (dateAlignment) {
                start = dateEnv.startOf(start, dateAlignment);
            }
            start = startOfDay(start);
            start = this.skipHiddenDays(start, direction);
            end = start;
            do {
                end = addDays(end, 1);
                if (!this.isHiddenDay(end)) {
                    runningCount += 1;
                }
            } while (runningCount < dayCount);
            return { start: start, end: end };
        };
        // Builds a normalized range object for the "visible" range,
        // which is a way to define the currentRange and activeRange at the same time.
        DateProfileGenerator.prototype.buildCustomVisibleRange = function (date) {
            var props = this.props;
            var input = props.visibleRangeInput;
            var simpleInput = typeof input === 'function'
                ? input.call(props.calendarApi, props.dateEnv.toDate(date))
                : input;
            var range = this.refineRange(simpleInput);
            if (range && (range.start == null || range.end == null)) {
                return null;
            }
            return range;
        };
        // Computes the range that will represent the element/cells for *rendering*,
        // but which may have voided days/times.
        // not responsible for trimming hidden days.
        DateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {
            return currentRange;
        };
        // Compute the duration value that should be added/substracted to the current date
        // when a prev/next operation happens.
        DateProfileGenerator.prototype.buildDateIncrement = function (fallback) {
            var dateIncrement = this.props.dateIncrement;
            var customAlignment;
            if (dateIncrement) {
                return dateIncrement;
            }
            if ((customAlignment = this.props.dateAlignment)) {
                return createDuration(1, customAlignment);
            }
            if (fallback) {
                return fallback;
            }
            return createDuration({ days: 1 });
        };
        DateProfileGenerator.prototype.refineRange = function (rangeInput) {
            if (rangeInput) {
                var range = parseRange(rangeInput, this.props.dateEnv);
                if (range) {
                    range = computeVisibleDayRange(range);
                }
                return range;
            }
            return null;
        };
        /* Hidden Days
        ------------------------------------------------------------------------------------------------------------------*/
        // Initializes internal variables related to calculating hidden days-of-week
        DateProfileGenerator.prototype.initHiddenDays = function () {
            var hiddenDays = this.props.hiddenDays || []; // array of day-of-week indices that are hidden
            var isHiddenDayHash = []; // is the day-of-week hidden? (hash with day-of-week-index -> bool)
            var dayCnt = 0;
            var i;
            if (this.props.weekends === false) {
                hiddenDays.push(0, 6); // 0=sunday, 6=saturday
            }
            for (i = 0; i < 7; i += 1) {
                if (!(isHiddenDayHash[i] = hiddenDays.indexOf(i) !== -1)) {
                    dayCnt += 1;
                }
            }
            if (!dayCnt) {
                throw new Error('invalid hiddenDays'); // all days were hidden? bad.
            }
            this.isHiddenDayHash = isHiddenDayHash;
        };
        // Remove days from the beginning and end of the range that are computed as hidden.
        // If the whole range is trimmed off, returns null
        DateProfileGenerator.prototype.trimHiddenDays = function (range) {
            var start = range.start, end = range.end;
            if (start) {
                start = this.skipHiddenDays(start);
            }
            if (end) {
                end = this.skipHiddenDays(end, -1, true);
            }
            if (start == null || end == null || start < end) {
                return { start: start, end: end };
            }
            return null;
        };
        // Is the current day hidden?
        // \`day\` is a day-of-week index (0-6), or a Date (used for UTC)
        DateProfileGenerator.prototype.isHiddenDay = function (day) {
            if (day instanceof Date) {
                day = day.getUTCDay();
            }
            return this.isHiddenDayHash[day];
        };
        // Incrementing the current day until it is no longer a hidden day, returning a copy.
        // DOES NOT CONSIDER validRange!
        // If the initial value of \`date\` is not a hidden day, don't do anything.
        // Pass \`isExclusive\` as \`true\` if you are dealing with an end date.
        // \`inc\` defaults to \`1\` (increment one day forward each time)
        DateProfileGenerator.prototype.skipHiddenDays = function (date, inc, isExclusive) {
            if (inc === void 0) { inc = 1; }
            if (isExclusive === void 0) { isExclusive = false; }
            while (this.isHiddenDayHash[(date.getUTCDay() + (isExclusive ? inc : 0) + 7) % 7]) {
                date = addDays(date, inc);
            }
            return date;
        };
        return DateProfileGenerator;
    }());

    function reduceViewType(viewType, action) {
        switch (action.type) {
            case 'CHANGE_VIEW_TYPE':
                viewType = action.viewType;
        }
        return viewType;
    }

    function reduceDynamicOptionOverrides(dynamicOptionOverrides, action) {
        var _a;
        switch (action.type) {
            case 'SET_OPTION':
                return __assign(__assign({}, dynamicOptionOverrides), (_a = {}, _a[action.optionName] = action.rawOptionValue, _a));
            default:
                return dynamicOptionOverrides;
        }
    }

    function reduceDateProfile(currentDateProfile, action, currentDate, dateProfileGenerator) {
        var dp;
        switch (action.type) {
            case 'CHANGE_VIEW_TYPE':
                return dateProfileGenerator.build(action.dateMarker || currentDate);
            case 'CHANGE_DATE':
                return dateProfileGenerator.build(action.dateMarker);
            case 'PREV':
                dp = dateProfileGenerator.buildPrev(currentDateProfile, currentDate);
                if (dp.isValid) {
                    return dp;
                }
                break;
            case 'NEXT':
                dp = dateProfileGenerator.buildNext(currentDateProfile, currentDate);
                if (dp.isValid) {
                    return dp;
                }
                break;
        }
        return currentDateProfile;
    }

    function initEventSources(calendarOptions, dateProfile, context) {
        var activeRange = dateProfile ? dateProfile.activeRange : null;
        return addSources({}, parseInitialSources(calendarOptions, context), activeRange, context);
    }
    function reduceEventSources(eventSources, action, dateProfile, context) {
        var activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?
        switch (action.type) {
            case 'ADD_EVENT_SOURCES': // already parsed
                return addSources(eventSources, action.sources, activeRange, context);
            case 'REMOVE_EVENT_SOURCE':
                return removeSource(eventSources, action.sourceId);
            case 'PREV': // TODO: how do we track all actions that affect dateProfile :(
            case 'NEXT':
            case 'CHANGE_DATE':
            case 'CHANGE_VIEW_TYPE':
                if (dateProfile) {
                    return fetchDirtySources(eventSources, activeRange, context);
                }
                return eventSources;
            case 'FETCH_EVENT_SOURCES':
                return fetchSourcesByIds(eventSources, action.sourceIds ? // why no type?
                    arrayToHash(action.sourceIds) :
                    excludeStaticSources(eventSources, context), activeRange, action.isRefetch || false, context);
            case 'RECEIVE_EVENTS':
            case 'RECEIVE_EVENT_ERROR':
                return receiveResponse(eventSources, action.sourceId, action.fetchId, action.fetchRange);
            case 'REMOVE_ALL_EVENT_SOURCES':
                return {};
            default:
                return eventSources;
        }
    }
    function reduceEventSourcesNewTimeZone(eventSources, dateProfile, context) {
        var activeRange = dateProfile ? dateProfile.activeRange : null; // need this check?
        return fetchSourcesByIds(eventSources, excludeStaticSources(eventSources, context), activeRange, true, context);
    }
    function computeEventSourcesLoading(eventSources) {
        for (var sourceId in eventSources) {
            if (eventSources[sourceId].isFetching) {
                return true;
            }
        }
        return false;
    }
    function addSources(eventSourceHash, sources, fetchRange, context) {
        var hash = {};
        for (var _i = 0, sources_1 = sources; _i < sources_1.length; _i++) {
            var source = sources_1[_i];
            hash[source.sourceId] = source;
        }
        if (fetchRange) {
            hash = fetchDirtySources(hash, fetchRange, context);
        }
        return __assign(__assign({}, eventSourceHash), hash);
    }
    function removeSource(eventSourceHash, sourceId) {
        return filterHash(eventSourceHash, function (eventSource) { return eventSource.sourceId !== sourceId; });
    }
    function fetchDirtySources(sourceHash, fetchRange, context) {
        return fetchSourcesByIds(sourceHash, filterHash(sourceHash, function (eventSource) { return isSourceDirty(eventSource, fetchRange, context); }), fetchRange, false, context);
    }
    function isSourceDirty(eventSource, fetchRange, context) {
        if (!doesSourceNeedRange(eventSource, context)) {
            return !eventSource.latestFetchId;
        }
        return !context.options.lazyFetching ||
            !eventSource.fetchRange ||
            eventSource.isFetching || // always cancel outdated in-progress fetches
            fetchRange.start < eventSource.fetchRange.start ||
            fetchRange.end > eventSource.fetchRange.end;
    }
    function fetchSourcesByIds(prevSources, sourceIdHash, fetchRange, isRefetch, context) {
        var nextSources = {};
        for (var sourceId in prevSources) {
            var source = prevSources[sourceId];
            if (sourceIdHash[sourceId]) {
                nextSources[sourceId] = fetchSource(source, fetchRange, isRefetch, context);
            }
            else {
                nextSources[sourceId] = source;
            }
        }
        return nextSources;
    }
    function fetchSource(eventSource, fetchRange, isRefetch, context) {
        var options = context.options, calendarApi = context.calendarApi;
        var sourceDef = context.pluginHooks.eventSourceDefs[eventSource.sourceDefId];
        var fetchId = guid();
        sourceDef.fetch({
            eventSource: eventSource,
            range: fetchRange,
            isRefetch: isRefetch,
            context: context,
        }, function (res) {
            var rawEvents = res.rawEvents;
            if (options.eventSourceSuccess) {
                rawEvents = options.eventSourceSuccess.call(calendarApi, rawEvents, res.xhr) || rawEvents;
            }
            if (eventSource.success) {
                rawEvents = eventSource.success.call(calendarApi, rawEvents, res.xhr) || rawEvents;
            }
            context.dispatch({
                type: 'RECEIVE_EVENTS',
                sourceId: eventSource.sourceId,
                fetchId: fetchId,
                fetchRange: fetchRange,
                rawEvents: rawEvents,
            });
        }, function (error) {
            console.warn(error.message, error);
            if (options.eventSourceFailure) {
                options.eventSourceFailure.call(calendarApi, error);
            }
            if (eventSource.failure) {
                eventSource.failure(error);
            }
            context.dispatch({
                type: 'RECEIVE_EVENT_ERROR',
                sourceId: eventSource.sourceId,
                fetchId: fetchId,
                fetchRange: fetchRange,
                error: error,
            });
        });
        return __assign(__assign({}, eventSource), { isFetching: true, latestFetchId: fetchId });
    }
    function receiveResponse(sourceHash, sourceId, fetchId, fetchRange) {
        var _a;
        var eventSource = sourceHash[sourceId];
        if (eventSource && // not already removed
            fetchId === eventSource.latestFetchId) {
            return __assign(__assign({}, sourceHash), (_a = {}, _a[sourceId] = __assign(__assign({}, eventSource), { isFetching: false, fetchRange: fetchRange }), _a));
        }
        return sourceHash;
    }
    function excludeStaticSources(eventSources, context) {
        return filterHash(eventSources, function (eventSource) { return doesSourceNeedRange(eventSource, context); });
    }
    function parseInitialSources(rawOptions, context) {
        var refiners = buildEventSourceRefiners(context);
        var rawSources = [].concat(rawOptions.eventSources || []);
        var sources = []; // parsed
        if (rawOptions.initialEvents) {
            rawSources.unshift(rawOptions.initialEvents);
        }
        if (rawOptions.events) {
            rawSources.unshift(rawOptions.events);
        }
        for (var _i = 0, rawSources_1 = rawSources; _i < rawSources_1.length; _i++) {
            var rawSource = rawSources_1[_i];
            var source = parseEventSource(rawSource, context, refiners);
            if (source) {
                sources.push(source);
            }
        }
        return sources;
    }
    function doesSourceNeedRange(eventSource, context) {
        var defs = context.pluginHooks.eventSourceDefs;
        return !defs[eventSource.sourceDefId].ignoreRange;
    }

    function reduceEventStore(eventStore, action, eventSources, dateProfile, context) {
        switch (action.type) {
            case 'RECEIVE_EVENTS': // raw
                return receiveRawEvents(eventStore, eventSources[action.sourceId], action.fetchId, action.fetchRange, action.rawEvents, context);
            case 'ADD_EVENTS': // already parsed, but not expanded
                return addEvent(eventStore, action.eventStore, // new ones
                dateProfile ? dateProfile.activeRange : null, context);
            case 'RESET_EVENTS':
                return action.eventStore;
            case 'MERGE_EVENTS': // already parsed and expanded
                return mergeEventStores(eventStore, action.eventStore);
            case 'PREV': // TODO: how do we track all actions that affect dateProfile :(
            case 'NEXT':
            case 'CHANGE_DATE':
            case 'CHANGE_VIEW_TYPE':
                if (dateProfile) {
                    return expandRecurring(eventStore, dateProfile.activeRange, context);
                }
                return eventStore;
            case 'REMOVE_EVENTS':
                return excludeSubEventStore(eventStore, action.eventStore);
            case 'REMOVE_EVENT_SOURCE':
                return excludeEventsBySourceId(eventStore, action.sourceId);
            case 'REMOVE_ALL_EVENT_SOURCES':
                return filterEventStoreDefs(eventStore, function (eventDef) { return (!eventDef.sourceId // only keep events with no source id
                ); });
            case 'REMOVE_ALL_EVENTS':
                return createEmptyEventStore();
            default:
                return eventStore;
        }
    }
    function receiveRawEvents(eventStore, eventSource, fetchId, fetchRange, rawEvents, context) {
        if (eventSource && // not already removed
            fetchId === eventSource.latestFetchId // TODO: wish this logic was always in event-sources
        ) {
            var subset = parseEvents(transformRawEvents(rawEvents, eventSource, context), eventSource, context);
            if (fetchRange) {
                subset = expandRecurring(subset, fetchRange, context);
            }
            return mergeEventStores(excludeEventsBySourceId(eventStore, eventSource.sourceId), subset);
        }
        return eventStore;
    }
    function transformRawEvents(rawEvents, eventSource, context) {
        var calEachTransform = context.options.eventDataTransform;
        var sourceEachTransform = eventSource ? eventSource.eventDataTransform : null;
        if (sourceEachTransform) {
            rawEvents = transformEachRawEvent(rawEvents, sourceEachTransform);
        }
        if (calEachTransform) {
            rawEvents = transformEachRawEvent(rawEvents, calEachTransform);
        }
        return rawEvents;
    }
    function transformEachRawEvent(rawEvents, func) {
        var refinedEvents;
        if (!func) {
            refinedEvents = rawEvents;
        }
        else {
            refinedEvents = [];
            for (var _i = 0, rawEvents_1 = rawEvents; _i < rawEvents_1.length; _i++) {
                var rawEvent = rawEvents_1[_i];
                var refinedEvent = func(rawEvent);
                if (refinedEvent) {
                    refinedEvents.push(refinedEvent);
                }
                else if (refinedEvent == null) {
                    refinedEvents.push(rawEvent);
                } // if a different falsy value, do nothing
            }
        }
        return refinedEvents;
    }
    function addEvent(eventStore, subset, expandRange, context) {
        if (expandRange) {
            subset = expandRecurring(subset, expandRange, context);
        }
        return mergeEventStores(eventStore, subset);
    }
    function rezoneEventStoreDates(eventStore, oldDateEnv, newDateEnv) {
        var defs = eventStore.defs;
        var instances = mapHash(eventStore.instances, function (instance) {
            var def = defs[instance.defId];
            if (def.allDay || def.recurringDef) {
                return instance; // isn't dependent on timezone
            }
            return __assign(__assign({}, instance), { range: {
                    start: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.start, instance.forcedStartTzo)),
                    end: newDateEnv.createMarker(oldDateEnv.toDate(instance.range.end, instance.forcedEndTzo)),
                }, forcedStartTzo: newDateEnv.canComputeOffset ? null : instance.forcedStartTzo, forcedEndTzo: newDateEnv.canComputeOffset ? null : instance.forcedEndTzo });
        });
        return { defs: defs, instances: instances };
    }
    function excludeEventsBySourceId(eventStore, sourceId) {
        return filterEventStoreDefs(eventStore, function (eventDef) { return eventDef.sourceId !== sourceId; });
    }
    // QUESTION: why not just return instances? do a general object-property-exclusion util
    function excludeInstances(eventStore, removals) {
        return {
            defs: eventStore.defs,
            instances: filterHash(eventStore.instances, function (instance) { return !removals[instance.instanceId]; }),
        };
    }

    function reduceDateSelection(currentSelection, action) {
        switch (action.type) {
            case 'UNSELECT_DATES':
                return null;
            case 'SELECT_DATES':
                return action.selection;
            default:
                return currentSelection;
        }
    }

    function reduceSelectedEvent(currentInstanceId, action) {
        switch (action.type) {
            case 'UNSELECT_EVENT':
                return '';
            case 'SELECT_EVENT':
                return action.eventInstanceId;
            default:
                return currentInstanceId;
        }
    }

    function reduceEventDrag(currentDrag, action) {
        var newDrag;
        switch (action.type) {
            case 'UNSET_EVENT_DRAG':
                return null;
            case 'SET_EVENT_DRAG':
                newDrag = action.state;
                return {
                    affectedEvents: newDrag.affectedEvents,
                    mutatedEvents: newDrag.mutatedEvents,
                    isEvent: newDrag.isEvent,
                };
            default:
                return currentDrag;
        }
    }

    function reduceEventResize(currentResize, action) {
        var newResize;
        switch (action.type) {
            case 'UNSET_EVENT_RESIZE':
                return null;
            case 'SET_EVENT_RESIZE':
                newResize = action.state;
                return {
                    affectedEvents: newResize.affectedEvents,
                    mutatedEvents: newResize.mutatedEvents,
                    isEvent: newResize.isEvent,
                };
            default:
                return currentResize;
        }
    }

    function parseToolbars(calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi) {
        var viewsWithButtons = [];
        var headerToolbar = calendarOptions.headerToolbar ? parseToolbar(calendarOptions.headerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi, viewsWithButtons) : null;
        var footerToolbar = calendarOptions.footerToolbar ? parseToolbar(calendarOptions.footerToolbar, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi, viewsWithButtons) : null;
        return { headerToolbar: headerToolbar, footerToolbar: footerToolbar, viewsWithButtons: viewsWithButtons };
    }
    function parseToolbar(sectionStrHash, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi, viewsWithButtons) {
        return mapHash(sectionStrHash, function (sectionStr) { return parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi, viewsWithButtons); });
    }
    /*
    BAD: querying icons and text here. should be done at render time
    */
    function parseSection(sectionStr, calendarOptions, calendarOptionOverrides, theme, viewSpecs, calendarApi, viewsWithButtons) {
        var isRtl = calendarOptions.direction === 'rtl';
        var calendarCustomButtons = calendarOptions.customButtons || {};
        var calendarButtonTextOverrides = calendarOptionOverrides.buttonText || {};
        var calendarButtonText = calendarOptions.buttonText || {};
        var sectionSubstrs = sectionStr ? sectionStr.split(' ') : [];
        return sectionSubstrs.map(function (buttonGroupStr) { return (buttonGroupStr.split(',').map(function (buttonName) {
            if (buttonName === 'title') {
                return { buttonName: buttonName };
            }
            var customButtonProps;
            var viewSpec;
            var buttonClick;
            var buttonIcon; // only one of these will be set
            var buttonText; // "
            if ((customButtonProps = calendarCustomButtons[buttonName])) {
                buttonClick = function (ev) {
                    if (customButtonProps.click) {
                        customButtonProps.click.call(ev.target, ev, ev.target); // TODO: use Calendar this context?
                    }
                };
                (buttonIcon = theme.getCustomButtonIconClass(customButtonProps)) ||
                    (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                    (buttonText = customButtonProps.text);
            }
            else if ((viewSpec = viewSpecs[buttonName])) {
                viewsWithButtons.push(buttonName);
                buttonClick = function () {
                    calendarApi.changeView(buttonName);
                };
                (buttonText = viewSpec.buttonTextOverride) ||
                    (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                    (buttonText = viewSpec.buttonTextDefault);
            }
            else if (calendarApi[buttonName]) { // a calendarApi method
                buttonClick = function () {
                    calendarApi[buttonName]();
                };
                (buttonText = calendarButtonTextOverrides[buttonName]) ||
                    (buttonIcon = theme.getIconClass(buttonName, isRtl)) ||
                    (buttonText = calendarButtonText[buttonName]);
                //            ^ everything else is considered default
            }
            return { buttonName: buttonName, buttonClick: buttonClick, buttonIcon: buttonIcon, buttonText: buttonText };
        })); });
    }

    var eventSourceDef$3 = {
        ignoreRange: true,
        parseMeta: function (refined) {
            if (Array.isArray(refined.events)) {
                return refined.events;
            }
            return null;
        },
        fetch: function (arg, success) {
            success({
                rawEvents: arg.eventSource.meta,
            });
        },
    };
    var arrayEventSourcePlugin = createPlugin({
        eventSourceDefs: [eventSourceDef$3],
    });

    var eventSourceDef$2 = {
        parseMeta: function (refined) {
            if (typeof refined.events === 'function') {
                return refined.events;
            }
            return null;
        },
        fetch: function (arg, success, failure) {
            var dateEnv = arg.context.dateEnv;
            var func = arg.eventSource.meta;
            unpromisify(func.bind(null, buildRangeApiWithTimeZone(arg.range, dateEnv)), function (rawEvents) {
                success({ rawEvents: rawEvents }); // needs an object response
            }, failure);
        },
    };
    var funcEventSourcePlugin = createPlugin({
        eventSourceDefs: [eventSourceDef$2],
    });

    function requestJson(method, url, params, successCallback, failureCallback) {
        method = method.toUpperCase();
        var body = null;
        if (method === 'GET') {
            url = injectQueryStringParams(url, params);
        }
        else {
            body = encodeParams(params);
        }
        var xhr = new XMLHttpRequest();
        xhr.open(method, url, true);
        if (method !== 'GET') {
            xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');
        }
        xhr.onload = function () {
            if (xhr.status >= 200 && xhr.status < 400) {
                var parsed = false;
                var res = void 0;
                try {
                    res = JSON.parse(xhr.responseText);
                    parsed = true;
                }
                catch (err) {
                    // will handle parsed=false
                }
                if (parsed) {
                    successCallback(res, xhr);
                }
                else {
                    failureCallback('Failure parsing JSON', xhr);
                }
            }
            else {
                failureCallback('Request failed', xhr);
            }
        };
        xhr.onerror = function () {
            failureCallback('Request failed', xhr);
        };
        xhr.send(body);
    }
    function injectQueryStringParams(url, params) {
        return url +
            (url.indexOf('?') === -1 ? '?' : '&') +
            encodeParams(params);
    }
    function encodeParams(params) {
        var parts = [];
        for (var key in params) {
            parts.push(encodeURIComponent(key) + "=" + encodeURIComponent(params[key]));
        }
        return parts.join('&');
    }

    var JSON_FEED_EVENT_SOURCE_REFINERS = {
        method: String,
        extraParams: identity,
        startParam: String,
        endParam: String,
        timeZoneParam: String,
    };

    var eventSourceDef$1 = {
        parseMeta: function (refined) {
            if (refined.url && (refined.format === 'json' || !refined.format)) {
                return {
                    url: refined.url,
                    format: 'json',
                    method: (refined.method || 'GET').toUpperCase(),
                    extraParams: refined.extraParams,
                    startParam: refined.startParam,
                    endParam: refined.endParam,
                    timeZoneParam: refined.timeZoneParam,
                };
            }
            return null;
        },
        fetch: function (arg, success, failure) {
            var meta = arg.eventSource.meta;
            var requestParams = buildRequestParams$1(meta, arg.range, arg.context);
            requestJson(meta.method, meta.url, requestParams, function (rawEvents, xhr) {
                success({ rawEvents: rawEvents, xhr: xhr });
            }, function (errorMessage, xhr) {
                failure({ message: errorMessage, xhr: xhr });
            });
        },
    };
    var jsonFeedEventSourcePlugin = createPlugin({
        eventSourceRefiners: JSON_FEED_EVENT_SOURCE_REFINERS,
        eventSourceDefs: [eventSourceDef$1],
    });
    function buildRequestParams$1(meta, range, context) {
        var dateEnv = context.dateEnv, options = context.options;
        var startParam;
        var endParam;
        var timeZoneParam;
        var customRequestParams;
        var params = {};
        startParam = meta.startParam;
        if (startParam == null) {
            startParam = options.startParam;
        }
        endParam = meta.endParam;
        if (endParam == null) {
            endParam = options.endParam;
        }
        timeZoneParam = meta.timeZoneParam;
        if (timeZoneParam == null) {
            timeZoneParam = options.timeZoneParam;
        }
        // retrieve any outbound GET/POST data from the options
        if (typeof meta.extraParams === 'function') {
            // supplied as a function that returns a key/value object
            customRequestParams = meta.extraParams();
        }
        else {
            // probably supplied as a straight key/value object
            customRequestParams = meta.extraParams || {};
        }
        __assign(params, customRequestParams);
        params[startParam] = dateEnv.formatIso(range.start);
        params[endParam] = dateEnv.formatIso(range.end);
        if (dateEnv.timeZone !== 'local') {
            params[timeZoneParam] = dateEnv.timeZone;
        }
        return params;
    }

    var SIMPLE_RECURRING_REFINERS = {
        daysOfWeek: identity,
        startTime: createDuration,
        endTime: createDuration,
        duration: createDuration,
        startRecur: identity,
        endRecur: identity,
    };

    var recurring = {
        parse: function (refined, dateEnv) {
            if (refined.daysOfWeek || refined.startTime || refined.endTime || refined.startRecur || refined.endRecur) {
                var recurringData = {
                    daysOfWeek: refined.daysOfWeek || null,
                    startTime: refined.startTime || null,
                    endTime: refined.endTime || null,
                    startRecur: refined.startRecur ? dateEnv.createMarker(refined.startRecur) : null,
                    endRecur: refined.endRecur ? dateEnv.createMarker(refined.endRecur) : null,
                };
                var duration = void 0;
                if (refined.duration) {
                    duration = refined.duration;
                }
                if (!duration && refined.startTime && refined.endTime) {
                    duration = subtractDurations(refined.endTime, refined.startTime);
                }
                return {
                    allDayGuess: Boolean(!refined.startTime && !refined.endTime),
                    duration: duration,
                    typeData: recurringData, // doesn't need endTime anymore but oh well
                };
            }
            return null;
        },
        expand: function (typeData, framingRange, dateEnv) {
            var clippedFramingRange = intersectRanges(framingRange, { start: typeData.startRecur, end: typeData.endRecur });
            if (clippedFramingRange) {
                return expandRanges(typeData.daysOfWeek, typeData.startTime, clippedFramingRange, dateEnv);
            }
            return [];
        },
    };
    var simpleRecurringEventsPlugin = createPlugin({
        recurringTypes: [recurring],
        eventRefiners: SIMPLE_RECURRING_REFINERS,
    });
    function expandRanges(daysOfWeek, startTime, framingRange, dateEnv) {
        var dowHash = daysOfWeek ? arrayToHash(daysOfWeek) : null;
        var dayMarker = startOfDay(framingRange.start);
        var endMarker = framingRange.end;
        var instanceStarts = [];
        while (dayMarker < endMarker) {
            var instanceStart 
            // if everyday, or this particular day-of-week
            = void 0;
            // if everyday, or this particular day-of-week
            if (!dowHash || dowHash[dayMarker.getUTCDay()]) {
                if (startTime) {
                    instanceStart = dateEnv.add(dayMarker, startTime);
                }
                else {
                    instanceStart = dayMarker;
                }
                instanceStarts.push(instanceStart);
            }
            dayMarker = addDays(dayMarker, 1);
        }
        return instanceStarts;
    }

    var changeHandlerPlugin = createPlugin({
        optionChangeHandlers: {
            events: function (events, context) {
                handleEventSources([events], context);
            },
            eventSources: handleEventSources,
        },
    });
    /*
    BUG: if \`event\` was supplied, all previously-given \`eventSources\` will be wiped out
    */
    function handleEventSources(inputs, context) {
        var unfoundSources = hashValuesToArray(context.getCurrentData().eventSources);
        var newInputs = [];
        for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {
            var input = inputs_1[_i];
            var inputFound = false;
            for (var i = 0; i < unfoundSources.length; i += 1) {
                if (unfoundSources[i]._raw === input) {
                    unfoundSources.splice(i, 1); // delete
                    inputFound = true;
                    break;
                }
            }
            if (!inputFound) {
                newInputs.push(input);
            }
        }
        for (var _a = 0, unfoundSources_1 = unfoundSources; _a < unfoundSources_1.length; _a++) {
            var unfoundSource = unfoundSources_1[_a];
            context.dispatch({
                type: 'REMOVE_EVENT_SOURCE',
                sourceId: unfoundSource.sourceId,
            });
        }
        for (var _b = 0, newInputs_1 = newInputs; _b < newInputs_1.length; _b++) {
            var newInput = newInputs_1[_b];
            context.calendarApi.addEventSource(newInput);
        }
    }

    function handleDateProfile(dateProfile, context) {
        context.emitter.trigger('datesSet', __assign(__assign({}, buildRangeApiWithTimeZone(dateProfile.activeRange, context.dateEnv)), { view: context.viewApi }));
    }

    function handleEventStore(eventStore, context) {
        var emitter = context.emitter;
        if (emitter.hasHandlers('eventsSet')) {
            emitter.trigger('eventsSet', buildEventApis(eventStore, context));
        }
    }

    /*
    this array is exposed on the root namespace so that UMD plugins can add to it.
    see the rollup-bundles script.
    */
    var globalPlugins = [
        arrayEventSourcePlugin,
        funcEventSourcePlugin,
        jsonFeedEventSourcePlugin,
        simpleRecurringEventsPlugin,
        changeHandlerPlugin,
        createPlugin({
            isLoadingFuncs: [
                function (state) { return computeEventSourcesLoading(state.eventSources); },
            ],
            contentTypeHandlers: {
                html: function () { return ({ render: injectHtml }); },
                domNodes: function () { return ({ render: injectDomNodes }); },
            },
            propSetHandlers: {
                dateProfile: handleDateProfile,
                eventStore: handleEventStore,
            },
        }),
    ];
    function injectHtml(el, html) {
        el.innerHTML = html;
    }
    function injectDomNodes(el, domNodes) {
        var oldNodes = Array.prototype.slice.call(el.childNodes); // TODO: use array util
        var newNodes = Array.prototype.slice.call(domNodes); // TODO: use array util
        if (!isArraysEqual(oldNodes, newNodes)) {
            for (var _i = 0, newNodes_1 = newNodes; _i < newNodes_1.length; _i++) {
                var newNode = newNodes_1[_i];
                el.appendChild(newNode);
            }
            oldNodes.forEach(removeElement);
        }
    }

    var DelayedRunner = /** @class */ (function () {
        function DelayedRunner(drainedOption) {
            this.drainedOption = drainedOption;
            this.isRunning = false;
            this.isDirty = false;
            this.pauseDepths = {};
            this.timeoutId = 0;
        }
        DelayedRunner.prototype.request = function (delay) {
            this.isDirty = true;
            if (!this.isPaused()) {
                this.clearTimeout();
                if (delay == null) {
                    this.tryDrain();
                }
                else {
                    this.timeoutId = setTimeout(// NOT OPTIMAL! TODO: look at debounce
                    this.tryDrain.bind(this), delay);
                }
            }
        };
        DelayedRunner.prototype.pause = function (scope) {
            if (scope === void 0) { scope = ''; }
            var pauseDepths = this.pauseDepths;
            pauseDepths[scope] = (pauseDepths[scope] || 0) + 1;
            this.clearTimeout();
        };
        DelayedRunner.prototype.resume = function (scope, force) {
            if (scope === void 0) { scope = ''; }
            var pauseDepths = this.pauseDepths;
            if (scope in pauseDepths) {
                if (force) {
                    delete pauseDepths[scope];
                }
                else {
                    pauseDepths[scope] -= 1;
                    var depth = pauseDepths[scope];
                    if (depth <= 0) {
                        delete pauseDepths[scope];
                    }
                }
                this.tryDrain();
            }
        };
        DelayedRunner.prototype.isPaused = function () {
            return Object.keys(this.pauseDepths).length;
        };
        DelayedRunner.prototype.tryDrain = function () {
            if (!this.isRunning && !this.isPaused()) {
                this.isRunning = true;
                while (this.isDirty) {
                    this.isDirty = false;
                    this.drained(); // might set isDirty to true again
                }
                this.isRunning = false;
            }
        };
        DelayedRunner.prototype.clear = function () {
            this.clearTimeout();
            this.isDirty = false;
            this.pauseDepths = {};
        };
        DelayedRunner.prototype.clearTimeout = function () {
            if (this.timeoutId) {
                clearTimeout(this.timeoutId);
                this.timeoutId = 0;
            }
        };
        DelayedRunner.prototype.drained = function () {
            if (this.drainedOption) {
                this.drainedOption();
            }
        };
        return DelayedRunner;
    }());

    var TaskRunner = /** @class */ (function () {
        function TaskRunner(runTaskOption, drainedOption) {
            this.runTaskOption = runTaskOption;
            this.drainedOption = drainedOption;
            this.queue = [];
            this.delayedRunner = new DelayedRunner(this.drain.bind(this));
        }
        TaskRunner.prototype.request = function (task, delay) {
            this.queue.push(task);
            this.delayedRunner.request(delay);
        };
        TaskRunner.prototype.pause = function (scope) {
            this.delayedRunner.pause(scope);
        };
        TaskRunner.prototype.resume = function (scope, force) {
            this.delayedRunner.resume(scope, force);
        };
        TaskRunner.prototype.drain = function () {
            var queue = this.queue;
            while (queue.length) {
                var completedTasks = [];
                var task = void 0;
                while ((task = queue.shift())) {
                    this.runTask(task);
                    completedTasks.push(task);
                }
                this.drained(completedTasks);
            } // keep going, in case new tasks were added in the drained handler
        };
        TaskRunner.prototype.runTask = function (task) {
            if (this.runTaskOption) {
                this.runTaskOption(task);
            }
        };
        TaskRunner.prototype.drained = function (completedTasks) {
            if (this.drainedOption) {
                this.drainedOption(completedTasks);
            }
        };
        return TaskRunner;
    }());

    // Computes what the title at the top of the calendarApi should be for this view
    function buildTitle(dateProfile, viewOptions, dateEnv) {
        var range;
        // for views that span a large unit of time, show the proper interval, ignoring stray days before and after
        if (/^(year|month)$/.test(dateProfile.currentRangeUnit)) {
            range = dateProfile.currentRange;
        }
        else { // for day units or smaller, use the actual day range
            range = dateProfile.activeRange;
        }
        return dateEnv.formatRange(range.start, range.end, createFormatter(viewOptions.titleFormat || buildTitleFormat(dateProfile)), {
            isEndExclusive: dateProfile.isRangeAllDay,
            defaultSeparator: viewOptions.titleRangeSeparator,
        });
    }
    // Generates the format string that should be used to generate the title for the current date range.
    // Attempts to compute the most appropriate format if not explicitly specified with \`titleFormat\`.
    function buildTitleFormat(dateProfile) {
        var currentRangeUnit = dateProfile.currentRangeUnit;
        if (currentRangeUnit === 'year') {
            return { year: 'numeric' };
        }
        if (currentRangeUnit === 'month') {
            return { year: 'numeric', month: 'long' }; // like "September 2014"
        }
        var days = diffWholeDays(dateProfile.currentRange.start, dateProfile.currentRange.end);
        if (days !== null && days > 1) {
            // multi-day range. shorter, like "Sep 9 - 10 2014"
            return { year: 'numeric', month: 'short', day: 'numeric' };
        }
        // one day. longer, like "September 9 2014"
        return { year: 'numeric', month: 'long', day: 'numeric' };
    }

    // in future refactor, do the redux-style function(state=initial) for initial-state
    // also, whatever is happening in constructor, have it happen in action queue too
    var CalendarDataManager = /** @class */ (function () {
        function CalendarDataManager(props) {
            var _this = this;
            this.computeOptionsData = memoize(this._computeOptionsData);
            this.computeCurrentViewData = memoize(this._computeCurrentViewData);
            this.organizeRawLocales = memoize(organizeRawLocales);
            this.buildLocale = memoize(buildLocale);
            this.buildPluginHooks = buildBuildPluginHooks();
            this.buildDateEnv = memoize(buildDateEnv);
            this.buildTheme = memoize(buildTheme);
            this.parseToolbars = memoize(parseToolbars);
            this.buildViewSpecs = memoize(buildViewSpecs);
            this.buildDateProfileGenerator = memoizeObjArg(buildDateProfileGenerator);
            this.buildViewApi = memoize(buildViewApi);
            this.buildViewUiProps = memoizeObjArg(buildViewUiProps);
            this.buildEventUiBySource = memoize(buildEventUiBySource, isPropsEqual);
            this.buildEventUiBases = memoize(buildEventUiBases);
            this.parseContextBusinessHours = memoizeObjArg(parseContextBusinessHours);
            this.buildTitle = memoize(buildTitle);
            this.emitter = new Emitter();
            this.actionRunner = new TaskRunner(this._handleAction.bind(this), this.updateData.bind(this));
            this.currentCalendarOptionsInput = {};
            this.currentCalendarOptionsRefined = {};
            this.currentViewOptionsInput = {};
            this.currentViewOptionsRefined = {};
            this.currentCalendarOptionsRefiners = {};
            this.getCurrentData = function () { return _this.data; };
            this.dispatch = function (action) {
                _this.actionRunner.request(action); // protects against recursive calls to _handleAction
            };
            this.props = props;
            this.actionRunner.pause();
            var dynamicOptionOverrides = {};
            var optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);
            var currentViewType = optionsData.calendarOptions.initialView || optionsData.pluginHooks.initialView;
            var currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);
            // wire things up
            // TODO: not DRY
            props.calendarApi.currentDataManager = this;
            this.emitter.setThisContext(props.calendarApi);
            this.emitter.setOptions(currentViewData.options);
            var currentDate = getInitialDate(optionsData.calendarOptions, optionsData.dateEnv);
            var dateProfile = currentViewData.dateProfileGenerator.build(currentDate);
            if (!rangeContainsMarker(dateProfile.activeRange, currentDate)) {
                currentDate = dateProfile.currentRange.start;
            }
            var calendarContext = {
                dateEnv: optionsData.dateEnv,
                options: optionsData.calendarOptions,
                pluginHooks: optionsData.pluginHooks,
                calendarApi: props.calendarApi,
                dispatch: this.dispatch,
                emitter: this.emitter,
                getCurrentData: this.getCurrentData,
            };
            // needs to be after setThisContext
            for (var _i = 0, _a = optionsData.pluginHooks.contextInit; _i < _a.length; _i++) {
                var callback = _a[_i];
                callback(calendarContext);
            }
            // NOT DRY
            var eventSources = initEventSources(optionsData.calendarOptions, dateProfile, calendarContext);
            var initialState = {
                dynamicOptionOverrides: dynamicOptionOverrides,
                currentViewType: currentViewType,
                currentDate: currentDate,
                dateProfile: dateProfile,
                businessHours: this.parseContextBusinessHours(calendarContext),
                eventSources: eventSources,
                eventUiBases: {},
                eventStore: createEmptyEventStore(),
                renderableEventStore: createEmptyEventStore(),
                dateSelection: null,
                eventSelection: '',
                eventDrag: null,
                eventResize: null,
                selectionConfig: this.buildViewUiProps(calendarContext).selectionConfig,
            };
            var contextAndState = __assign(__assign({}, calendarContext), initialState);
            for (var _b = 0, _c = optionsData.pluginHooks.reducers; _b < _c.length; _b++) {
                var reducer = _c[_b];
                __assign(initialState, reducer(null, null, contextAndState));
            }
            if (computeIsLoading(initialState, calendarContext)) {
                this.emitter.trigger('loading', true); // NOT DRY
            }
            this.state = initialState;
            this.updateData();
            this.actionRunner.resume();
        }
        CalendarDataManager.prototype.resetOptions = function (optionOverrides, append) {
            var props = this.props;
            props.optionOverrides = append
                ? __assign(__assign({}, props.optionOverrides), optionOverrides) : optionOverrides;
            this.actionRunner.request({
                type: 'NOTHING',
            });
        };
        CalendarDataManager.prototype._handleAction = function (action) {
            var _a = this, props = _a.props, state = _a.state, emitter = _a.emitter;
            var dynamicOptionOverrides = reduceDynamicOptionOverrides(state.dynamicOptionOverrides, action);
            var optionsData = this.computeOptionsData(props.optionOverrides, dynamicOptionOverrides, props.calendarApi);
            var currentViewType = reduceViewType(state.currentViewType, action);
            var currentViewData = this.computeCurrentViewData(currentViewType, optionsData, props.optionOverrides, dynamicOptionOverrides);
            // wire things up
            // TODO: not DRY
            props.calendarApi.currentDataManager = this;
            emitter.setThisContext(props.calendarApi);
            emitter.setOptions(currentViewData.options);
            var calendarContext = {
                dateEnv: optionsData.dateEnv,
                options: optionsData.calendarOptions,
                pluginHooks: optionsData.pluginHooks,
                calendarApi: props.calendarApi,
                dispatch: this.dispatch,
                emitter: emitter,
                getCurrentData: this.getCurrentData,
            };
            var currentDate = state.currentDate, dateProfile = state.dateProfile;
            if (this.data && this.data.dateProfileGenerator !== currentViewData.dateProfileGenerator) { // hack
                dateProfile = currentViewData.dateProfileGenerator.build(currentDate);
            }
            currentDate = reduceCurrentDate(currentDate, action);
            dateProfile = reduceDateProfile(dateProfile, action, currentDate, currentViewData.dateProfileGenerator);
            if (action.type === 'PREV' || // TODO: move this logic into DateProfileGenerator
                action.type === 'NEXT' || // "
                !rangeContainsMarker(dateProfile.currentRange, currentDate)) {
                currentDate = dateProfile.currentRange.start;
            }
            var eventSources = reduceEventSources(state.eventSources, action, dateProfile, calendarContext);
            var eventStore = reduceEventStore(state.eventStore, action, eventSources, dateProfile, calendarContext);
            var isEventsLoading = computeEventSourcesLoading(eventSources); // BAD. also called in this func in computeIsLoading
            var renderableEventStore = (isEventsLoading && !currentViewData.options.progressiveEventRendering) ?
                (state.renderableEventStore || eventStore) : // try from previous state
                eventStore;
            var _b = this.buildViewUiProps(calendarContext), eventUiSingleBase = _b.eventUiSingleBase, selectionConfig = _b.selectionConfig; // will memoize obj
            var eventUiBySource = this.buildEventUiBySource(eventSources);
            var eventUiBases = this.buildEventUiBases(renderableEventStore.defs, eventUiSingleBase, eventUiBySource);
            var newState = {
                dynamicOptionOverrides: dynamicOptionOverrides,
                currentViewType: currentViewType,
                currentDate: currentDate,
                dateProfile: dateProfile,
                eventSources: eventSources,
                eventStore: eventStore,
                renderableEventStore: renderableEventStore,
                selectionConfig: selectionConfig,
                eventUiBases: eventUiBases,
                businessHours: this.parseContextBusinessHours(calendarContext),
                dateSelection: reduceDateSelection(state.dateSelection, action),
                eventSelection: reduceSelectedEvent(state.eventSelection, action),
                eventDrag: reduceEventDrag(state.eventDrag, action),
                eventResize: reduceEventResize(state.eventResize, action),
            };
            var contextAndState = __assign(__assign({}, calendarContext), newState);
            for (var _i = 0, _c = optionsData.pluginHooks.reducers; _i < _c.length; _i++) {
                var reducer = _c[_i];
                __assign(newState, reducer(state, action, contextAndState)); // give the OLD state, for old value
            }
            var wasLoading = computeIsLoading(state, calendarContext);
            var isLoading = computeIsLoading(newState, calendarContext);
            // TODO: use propSetHandlers in plugin system
            if (!wasLoading && isLoading) {
                emitter.trigger('loading', true);
            }
            else if (wasLoading && !isLoading) {
                emitter.trigger('loading', false);
            }
            this.state = newState;
            if (props.onAction) {
                props.onAction(action);
            }
        };
        CalendarDataManager.prototype.updateData = function () {
            var _a = this, props = _a.props, state = _a.state;
            var oldData = this.data;
            var optionsData = this.computeOptionsData(props.optionOverrides, state.dynamicOptionOverrides, props.calendarApi);
            var currentViewData = this.computeCurrentViewData(state.currentViewType, optionsData, props.optionOverrides, state.dynamicOptionOverrides);
            var data = this.data = __assign(__assign(__assign({ viewTitle: this.buildTitle(state.dateProfile, currentViewData.options, optionsData.dateEnv), calendarApi: props.calendarApi, dispatch: this.dispatch, emitter: this.emitter, getCurrentData: this.getCurrentData }, optionsData), currentViewData), state);
            var changeHandlers = optionsData.pluginHooks.optionChangeHandlers;
            var oldCalendarOptions = oldData && oldData.calendarOptions;
            var newCalendarOptions = optionsData.calendarOptions;
            if (oldCalendarOptions && oldCalendarOptions !== newCalendarOptions) {
                if (oldCalendarOptions.timeZone !== newCalendarOptions.timeZone) {
                    // hack
                    state.eventSources = data.eventSources = reduceEventSourcesNewTimeZone(data.eventSources, state.dateProfile, data);
                    state.eventStore = data.eventStore = rezoneEventStoreDates(data.eventStore, oldData.dateEnv, data.dateEnv);
                }
                for (var optionName in changeHandlers) {
                    if (oldCalendarOptions[optionName] !== newCalendarOptions[optionName]) {
                        changeHandlers[optionName](newCalendarOptions[optionName], data);
                    }
                }
            }
            if (props.onData) {
                props.onData(data);
            }
        };
        CalendarDataManager.prototype._computeOptionsData = function (optionOverrides, dynamicOptionOverrides, calendarApi) {
            // TODO: blacklist options that are handled by optionChangeHandlers
            var _a = this.processRawCalendarOptions(optionOverrides, dynamicOptionOverrides), refinedOptions = _a.refinedOptions, pluginHooks = _a.pluginHooks, localeDefaults = _a.localeDefaults, availableLocaleData = _a.availableLocaleData, extra = _a.extra;
            warnUnknownOptions(extra);
            var dateEnv = this.buildDateEnv(refinedOptions.timeZone, refinedOptions.locale, refinedOptions.weekNumberCalculation, refinedOptions.firstDay, refinedOptions.weekText, pluginHooks, availableLocaleData, refinedOptions.defaultRangeSeparator);
            var viewSpecs = this.buildViewSpecs(pluginHooks.views, optionOverrides, dynamicOptionOverrides, localeDefaults);
            var theme = this.buildTheme(refinedOptions, pluginHooks);
            var toolbarConfig = this.parseToolbars(refinedOptions, optionOverrides, theme, viewSpecs, calendarApi);
            return {
                calendarOptions: refinedOptions,
                pluginHooks: pluginHooks,
                dateEnv: dateEnv,
                viewSpecs: viewSpecs,
                theme: theme,
                toolbarConfig: toolbarConfig,
                localeDefaults: localeDefaults,
                availableRawLocales: availableLocaleData.map,
            };
        };
        // always called from behind a memoizer
        CalendarDataManager.prototype.processRawCalendarOptions = function (optionOverrides, dynamicOptionOverrides) {
            var _a = mergeRawOptions([
                BASE_OPTION_DEFAULTS,
                optionOverrides,
                dynamicOptionOverrides,
            ]), locales = _a.locales, locale = _a.locale;
            var availableLocaleData = this.organizeRawLocales(locales);
            var availableRawLocales = availableLocaleData.map;
            var localeDefaults = this.buildLocale(locale || availableLocaleData.defaultCode, availableRawLocales).options;
            var pluginHooks = this.buildPluginHooks(optionOverrides.plugins || [], globalPlugins);
            var refiners = this.currentCalendarOptionsRefiners = __assign(__assign(__assign(__assign(__assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);
            var extra = {};
            var raw = mergeRawOptions([
                BASE_OPTION_DEFAULTS,
                localeDefaults,
                optionOverrides,
                dynamicOptionOverrides,
            ]);
            var refined = {};
            var currentRaw = this.currentCalendarOptionsInput;
            var currentRefined = this.currentCalendarOptionsRefined;
            var anyChanges = false;
            for (var optionName in raw) {
                if (optionName !== 'plugins') { // because plugins is special-cased
                    if (raw[optionName] === currentRaw[optionName] ||
                        (COMPLEX_OPTION_COMPARATORS[optionName] &&
                            (optionName in currentRaw) &&
                            COMPLEX_OPTION_COMPARATORS[optionName](currentRaw[optionName], raw[optionName]))) {
                        refined[optionName] = currentRefined[optionName];
                    }
                    else if (refiners[optionName]) {
                        refined[optionName] = refiners[optionName](raw[optionName]);
                        anyChanges = true;
                    }
                    else {
                        extra[optionName] = currentRaw[optionName];
                    }
                }
            }
            if (anyChanges) {
                this.currentCalendarOptionsInput = raw;
                this.currentCalendarOptionsRefined = refined;
            }
            return {
                rawOptions: this.currentCalendarOptionsInput,
                refinedOptions: this.currentCalendarOptionsRefined,
                pluginHooks: pluginHooks,
                availableLocaleData: availableLocaleData,
                localeDefaults: localeDefaults,
                extra: extra,
            };
        };
        CalendarDataManager.prototype._computeCurrentViewData = function (viewType, optionsData, optionOverrides, dynamicOptionOverrides) {
            var viewSpec = optionsData.viewSpecs[viewType];
            if (!viewSpec) {
                throw new Error("viewType \\"" + viewType + "\\" is not available. Please make sure you've loaded all neccessary plugins");
            }
            var _a = this.processRawViewOptions(viewSpec, optionsData.pluginHooks, optionsData.localeDefaults, optionOverrides, dynamicOptionOverrides), refinedOptions = _a.refinedOptions, extra = _a.extra;
            warnUnknownOptions(extra);
            var dateProfileGenerator = this.buildDateProfileGenerator({
                dateProfileGeneratorClass: viewSpec.optionDefaults.dateProfileGeneratorClass,
                duration: viewSpec.duration,
                durationUnit: viewSpec.durationUnit,
                usesMinMaxTime: viewSpec.optionDefaults.usesMinMaxTime,
                dateEnv: optionsData.dateEnv,
                calendarApi: this.props.calendarApi,
                slotMinTime: refinedOptions.slotMinTime,
                slotMaxTime: refinedOptions.slotMaxTime,
                showNonCurrentDates: refinedOptions.showNonCurrentDates,
                dayCount: refinedOptions.dayCount,
                dateAlignment: refinedOptions.dateAlignment,
                dateIncrement: refinedOptions.dateIncrement,
                hiddenDays: refinedOptions.hiddenDays,
                weekends: refinedOptions.weekends,
                nowInput: refinedOptions.now,
                validRangeInput: refinedOptions.validRange,
                visibleRangeInput: refinedOptions.visibleRange,
                monthMode: refinedOptions.monthMode,
                fixedWeekCount: refinedOptions.fixedWeekCount,
            });
            var viewApi = this.buildViewApi(viewType, this.getCurrentData, optionsData.dateEnv);
            return { viewSpec: viewSpec, options: refinedOptions, dateProfileGenerator: dateProfileGenerator, viewApi: viewApi };
        };
        CalendarDataManager.prototype.processRawViewOptions = function (viewSpec, pluginHooks, localeDefaults, optionOverrides, dynamicOptionOverrides) {
            var raw = mergeRawOptions([
                BASE_OPTION_DEFAULTS,
                viewSpec.optionDefaults,
                localeDefaults,
                optionOverrides,
                viewSpec.optionOverrides,
                dynamicOptionOverrides,
            ]);
            var refiners = __assign(__assign(__assign(__assign(__assign(__assign({}, BASE_OPTION_REFINERS), CALENDAR_LISTENER_REFINERS), CALENDAR_OPTION_REFINERS), VIEW_OPTION_REFINERS), pluginHooks.listenerRefiners), pluginHooks.optionRefiners);
            var refined = {};
            var currentRaw = this.currentViewOptionsInput;
            var currentRefined = this.currentViewOptionsRefined;
            var anyChanges = false;
            var extra = {};
            for (var optionName in raw) {
                if (raw[optionName] === currentRaw[optionName]) {
                    refined[optionName] = currentRefined[optionName];
                }
                else {
                    if (raw[optionName] === this.currentCalendarOptionsInput[optionName]) {
                        if (optionName in this.currentCalendarOptionsRefined) { // might be an "extra" prop
                            refined[optionName] = this.currentCalendarOptionsRefined[optionName];
                        }
                    }
                    else if (refiners[optionName]) {
                        refined[optionName] = refiners[optionName](raw[optionName]);
                    }
                    else {
                        extra[optionName] = raw[optionName];
                    }
                    anyChanges = true;
                }
            }
            if (anyChanges) {
                this.currentViewOptionsInput = raw;
                this.currentViewOptionsRefined = refined;
            }
            return {
                rawOptions: this.currentViewOptionsInput,
                refinedOptions: this.currentViewOptionsRefined,
                extra: extra,
            };
        };
        return CalendarDataManager;
    }());
    function buildDateEnv(timeZone, explicitLocale, weekNumberCalculation, firstDay, weekText, pluginHooks, availableLocaleData, defaultSeparator) {
        var locale = buildLocale(explicitLocale || availableLocaleData.defaultCode, availableLocaleData.map);
        return new DateEnv({
            calendarSystem: 'gregory',
            timeZone: timeZone,
            namedTimeZoneImpl: pluginHooks.namedTimeZonedImpl,
            locale: locale,
            weekNumberCalculation: weekNumberCalculation,
            firstDay: firstDay,
            weekText: weekText,
            cmdFormatter: pluginHooks.cmdFormatter,
            defaultSeparator: defaultSeparator,
        });
    }
    function buildTheme(options, pluginHooks) {
        var ThemeClass = pluginHooks.themeClasses[options.themeSystem] || StandardTheme;
        return new ThemeClass(options);
    }
    function buildDateProfileGenerator(props) {
        var DateProfileGeneratorClass = props.dateProfileGeneratorClass || DateProfileGenerator;
        return new DateProfileGeneratorClass(props);
    }
    function buildViewApi(type, getCurrentData, dateEnv) {
        return new ViewApi(type, getCurrentData, dateEnv);
    }
    function buildEventUiBySource(eventSources) {
        return mapHash(eventSources, function (eventSource) { return eventSource.ui; });
    }
    function buildEventUiBases(eventDefs, eventUiSingleBase, eventUiBySource) {
        var eventUiBases = { '': eventUiSingleBase };
        for (var defId in eventDefs) {
            var def = eventDefs[defId];
            if (def.sourceId && eventUiBySource[def.sourceId]) {
                eventUiBases[defId] = eventUiBySource[def.sourceId];
            }
        }
        return eventUiBases;
    }
    function buildViewUiProps(calendarContext) {
        var options = calendarContext.options;
        return {
            eventUiSingleBase: createEventUi({
                display: options.eventDisplay,
                editable: options.editable,
                startEditable: options.eventStartEditable,
                durationEditable: options.eventDurationEditable,
                constraint: options.eventConstraint,
                overlap: typeof options.eventOverlap === 'boolean' ? options.eventOverlap : undefined,
                allow: options.eventAllow,
                backgroundColor: options.eventBackgroundColor,
                borderColor: options.eventBorderColor,
                textColor: options.eventTextColor,
                color: options.eventColor,
                // classNames: options.eventClassNames // render hook will handle this
            }, calendarContext),
            selectionConfig: createEventUi({
                constraint: options.selectConstraint,
                overlap: typeof options.selectOverlap === 'boolean' ? options.selectOverlap : undefined,
                allow: options.selectAllow,
            }, calendarContext),
        };
    }
    function computeIsLoading(state, context) {
        for (var _i = 0, _a = context.pluginHooks.isLoadingFuncs; _i < _a.length; _i++) {
            var isLoadingFunc = _a[_i];
            if (isLoadingFunc(state)) {
                return true;
            }
        }
        return false;
    }
    function parseContextBusinessHours(calendarContext) {
        return parseBusinessHours(calendarContext.options.businessHours, calendarContext);
    }
    function warnUnknownOptions(options, viewName) {
        for (var optionName in options) {
            console.warn("Unknown option '" + optionName + "'" +
                (viewName ? " for view '" + viewName + "'" : ''));
        }
    }

    // TODO: move this to react plugin?
    var CalendarDataProvider = /** @class */ (function (_super) {
        __extends(CalendarDataProvider, _super);
        function CalendarDataProvider(props) {
            var _this = _super.call(this, props) || this;
            _this.handleData = function (data) {
                if (!_this.dataManager) { // still within initial run, before assignment in constructor
                    // eslint-disable-next-line react/no-direct-mutation-state
                    _this.state = data; // can't use setState yet
                }
                else {
                    _this.setState(data);
                }
            };
            _this.dataManager = new CalendarDataManager({
                optionOverrides: props.optionOverrides,
                calendarApi: props.calendarApi,
                onData: _this.handleData,
            });
            return _this;
        }
        CalendarDataProvider.prototype.render = function () {
            return this.props.children(this.state);
        };
        CalendarDataProvider.prototype.componentDidUpdate = function (prevProps) {
            var newOptionOverrides = this.props.optionOverrides;
            if (newOptionOverrides !== prevProps.optionOverrides) { // prevent recursive handleData
                this.dataManager.resetOptions(newOptionOverrides);
            }
        };
        return CalendarDataProvider;
    }(Component));

    // HELPERS
    /*
    if nextDayThreshold is specified, slicing is done in an all-day fashion.
    you can get nextDayThreshold from context.nextDayThreshold
    */
    function sliceEvents(props, allDay) {
        return sliceEventStore(props.eventStore, props.eventUiBases, props.dateProfile.activeRange, allDay ? props.nextDayThreshold : null).fg;
    }

    var NamedTimeZoneImpl = /** @class */ (function () {
        function NamedTimeZoneImpl(timeZoneName) {
            this.timeZoneName = timeZoneName;
        }
        return NamedTimeZoneImpl;
    }());

    var SegHierarchy = /** @class */ (function () {
        function SegHierarchy() {
            // settings
            this.strictOrder = false;
            this.allowReslicing = false;
            this.maxCoord = -1; // -1 means no max
            this.maxStackCnt = -1; // -1 means no max
            this.levelCoords = []; // ordered
            this.entriesByLevel = []; // parallel with levelCoords
            this.stackCnts = {}; // TODO: use better technique!?
        }
        SegHierarchy.prototype.addSegs = function (inputs) {
            var hiddenEntries = [];
            for (var _i = 0, inputs_1 = inputs; _i < inputs_1.length; _i++) {
                var input = inputs_1[_i];
                this.insertEntry(input, hiddenEntries);
            }
            return hiddenEntries;
        };
        SegHierarchy.prototype.insertEntry = function (entry, hiddenEntries) {
            var insertion = this.findInsertion(entry);
            if (this.isInsertionValid(insertion, entry)) {
                this.insertEntryAt(entry, insertion);
                return 1;
            }
            return this.handleInvalidInsertion(insertion, entry, hiddenEntries);
        };
        SegHierarchy.prototype.isInsertionValid = function (insertion, entry) {
            return (this.maxCoord === -1 || insertion.levelCoord + entry.thickness <= this.maxCoord) &&
                (this.maxStackCnt === -1 || insertion.stackCnt < this.maxStackCnt);
        };
        // returns number of new entries inserted
        SegHierarchy.prototype.handleInvalidInsertion = function (insertion, entry, hiddenEntries) {
            if (this.allowReslicing && insertion.touchingEntry) {
                return this.splitEntry(entry, insertion.touchingEntry, hiddenEntries);
            }
            hiddenEntries.push(entry);
            return 0;
        };
        SegHierarchy.prototype.splitEntry = function (entry, barrier, hiddenEntries) {
            var partCnt = 0;
            var splitHiddenEntries = [];
            var entrySpan = entry.span;
            var barrierSpan = barrier.span;
            if (entrySpan.start < barrierSpan.start) {
                partCnt += this.insertEntry({
                    index: entry.index,
                    thickness: entry.thickness,
                    span: { start: entrySpan.start, end: barrierSpan.start },
                }, splitHiddenEntries);
            }
            if (entrySpan.end > barrierSpan.end) {
                partCnt += this.insertEntry({
                    index: entry.index,
                    thickness: entry.thickness,
                    span: { start: barrierSpan.end, end: entrySpan.end },
                }, splitHiddenEntries);
            }
            if (partCnt) {
                hiddenEntries.push.apply(hiddenEntries, __spreadArray([{
                        index: entry.index,
                        thickness: entry.thickness,
                        span: intersectSpans(barrierSpan, entrySpan), // guaranteed to intersect
                    }], splitHiddenEntries));
                return partCnt;
            }
            hiddenEntries.push(entry);
            return 0;
        };
        SegHierarchy.prototype.insertEntryAt = function (entry, insertion) {
            var _a = this, entriesByLevel = _a.entriesByLevel, levelCoords = _a.levelCoords;
            if (insertion.lateral === -1) {
                // create a new level
                insertAt(levelCoords, insertion.level, insertion.levelCoord);
                insertAt(entriesByLevel, insertion.level, [entry]);
            }
            else {
                // insert into existing level
                insertAt(entriesByLevel[insertion.level], insertion.lateral, entry);
            }
            this.stackCnts[buildEntryKey(entry)] = insertion.stackCnt;
        };
        SegHierarchy.prototype.findInsertion = function (newEntry) {
            var _a = this, levelCoords = _a.levelCoords, entriesByLevel = _a.entriesByLevel, strictOrder = _a.strictOrder, stackCnts = _a.stackCnts;
            var levelCnt = levelCoords.length;
            var candidateCoord = 0;
            var touchingLevel = -1;
            var touchingLateral = -1;
            var touchingEntry = null;
            var stackCnt = 0;
            for (var trackingLevel = 0; trackingLevel < levelCnt; trackingLevel += 1) {
                var trackingCoord = levelCoords[trackingLevel];
                // if the current level is past the placed entry, we have found a good empty space and can stop.
                // if strictOrder, keep finding more lateral intersections.
                if (!strictOrder && trackingCoord >= candidateCoord + newEntry.thickness) {
                    break;
                }
                var trackingEntries = entriesByLevel[trackingLevel];
                var trackingEntry = void 0;
                var searchRes = binarySearch(trackingEntries, newEntry.span.start, getEntrySpanEnd); // find first entry after newEntry's end
                var lateralIndex = searchRes[0] + searchRes[1]; // if exact match (which doesn't collide), go to next one
                while ( // loop through entries that horizontally intersect
                (trackingEntry = trackingEntries[lateralIndex]) && // but not past the whole entry list
                    trackingEntry.span.start < newEntry.span.end // and not entirely past newEntry
                ) {
                    var trackingEntryBottom = trackingCoord + trackingEntry.thickness;
                    // intersects into the top of the candidate?
                    if (trackingEntryBottom > candidateCoord) {
                        candidateCoord = trackingEntryBottom;
                        touchingEntry = trackingEntry;
                        touchingLevel = trackingLevel;
                        touchingLateral = lateralIndex;
                    }
                    // butts up against top of candidate? (will happen if just intersected as well)
                    if (trackingEntryBottom === candidateCoord) {
                        // accumulate the highest possible stackCnt of the trackingEntries that butt up
                        stackCnt = Math.max(stackCnt, stackCnts[buildEntryKey(trackingEntry)] + 1);
                    }
                    lateralIndex += 1;
                }
            }
            // the destination level will be after touchingEntry's level. find it
            var destLevel = 0;
            if (touchingEntry) {
                destLevel = touchingLevel + 1;
                while (destLevel < levelCnt && levelCoords[destLevel] < candidateCoord) {
                    destLevel += 1;
                }
            }
            // if adding to an existing level, find where to insert
            var destLateral = -1;
            if (destLevel < levelCnt && levelCoords[destLevel] === candidateCoord) {
                destLateral = binarySearch(entriesByLevel[destLevel], newEntry.span.end, getEntrySpanEnd)[0];
            }
            return {
                touchingLevel: touchingLevel,
                touchingLateral: touchingLateral,
                touchingEntry: touchingEntry,
                stackCnt: stackCnt,
                levelCoord: candidateCoord,
                level: destLevel,
                lateral: destLateral,
            };
        };
        // sorted by levelCoord (lowest to highest)
        SegHierarchy.prototype.toRects = function () {
            var _a = this, entriesByLevel = _a.entriesByLevel, levelCoords = _a.levelCoords;
            var levelCnt = entriesByLevel.length;
            var rects = [];
            for (var level = 0; level < levelCnt; level += 1) {
                var entries = entriesByLevel[level];
                var levelCoord = levelCoords[level];
                for (var _i = 0, entries_1 = entries; _i < entries_1.length; _i++) {
                    var entry = entries_1[_i];
                    rects.push(__assign(__assign({}, entry), { levelCoord: levelCoord }));
                }
            }
            return rects;
        };
        return SegHierarchy;
    }());
    function getEntrySpanEnd(entry) {
        return entry.span.end;
    }
    function buildEntryKey(entry) {
        return entry.index + ':' + entry.span.start;
    }
    // returns groups with entries sorted by input order
    function groupIntersectingEntries(entries) {
        var merges = [];
        for (var _i = 0, entries_2 = entries; _i < entries_2.length; _i++) {
            var entry = entries_2[_i];
            var filteredMerges = [];
            var hungryMerge = {
                span: entry.span,
                entries: [entry],
            };
            for (var _a = 0, merges_1 = merges; _a < merges_1.length; _a++) {
                var merge = merges_1[_a];
                if (intersectSpans(merge.span, hungryMerge.span)) {
                    hungryMerge = {
                        entries: merge.entries.concat(hungryMerge.entries),
                        span: joinSpans(merge.span, hungryMerge.span),
                    };
                }
                else {
                    filteredMerges.push(merge);
                }
            }
            filteredMerges.push(hungryMerge);
            merges = filteredMerges;
        }
        return merges;
    }
    function joinSpans(span0, span1) {
        return {
            start: Math.min(span0.start, span1.start),
            end: Math.max(span0.end, span1.end),
        };
    }
    function intersectSpans(span0, span1) {
        var start = Math.max(span0.start, span1.start);
        var end = Math.min(span0.end, span1.end);
        if (start < end) {
            return { start: start, end: end };
        }
        return null;
    }
    // general util
    // ---------------------------------------------------------------------------------------------------------------------
    function insertAt(arr, index, item) {
        arr.splice(index, 0, item);
    }
    function binarySearch(a, searchVal, getItemVal) {
        var startIndex = 0;
        var endIndex = a.length; // exclusive
        if (!endIndex || searchVal < getItemVal(a[startIndex])) { // no items OR before first item
            return [0, 0];
        }
        if (searchVal > getItemVal(a[endIndex - 1])) { // after last item
            return [endIndex, 0];
        }
        while (startIndex < endIndex) {
            var middleIndex = Math.floor(startIndex + (endIndex - startIndex) / 2);
            var middleVal = getItemVal(a[middleIndex]);
            if (searchVal < middleVal) {
                endIndex = middleIndex;
            }
            else if (searchVal > middleVal) {
                startIndex = middleIndex + 1;
            }
            else { // equal!
                return [middleIndex, 1];
            }
        }
        return [startIndex, 0];
    }

    var Interaction = /** @class */ (function () {
        function Interaction(settings) {
            this.component = settings.component;
            this.isHitComboAllowed = settings.isHitComboAllowed || null;
        }
        Interaction.prototype.destroy = function () {
        };
        return Interaction;
    }());
    function parseInteractionSettings(component, input) {
        return {
            component: component,
            el: input.el,
            useEventCenter: input.useEventCenter != null ? input.useEventCenter : true,
            isHitComboAllowed: input.isHitComboAllowed || null,
        };
    }
    function interactionSettingsToStore(settings) {
        var _a;
        return _a = {},
            _a[settings.component.uid] = settings,
            _a;
    }
    // global state
    var interactionSettingsStore = {};

    /*
    An abstraction for a dragging interaction originating on an event.
    Does higher-level things than PointerDragger, such as possibly:
    - a "mirror" that moves with the pointer
    - a minimum number of pixels or other criteria for a true drag to begin

    subclasses must emit:
    - pointerdown
    - dragstart
    - dragmove
    - pointerup
    - dragend
    */
    var ElementDragging = /** @class */ (function () {
        function ElementDragging(el, selector) {
            this.emitter = new Emitter();
        }
        ElementDragging.prototype.destroy = function () {
        };
        ElementDragging.prototype.setMirrorIsVisible = function (bool) {
            // optional if subclass doesn't want to support a mirror
        };
        ElementDragging.prototype.setMirrorNeedsRevert = function (bool) {
            // optional if subclass doesn't want to support a mirror
        };
        ElementDragging.prototype.setAutoScrollEnabled = function (bool) {
            // optional
        };
        return ElementDragging;
    }());

    // TODO: get rid of this in favor of options system,
    // tho it's really easy to access this globally rather than pass thru options.
    var config = {};

    /*
    Information about what will happen when an external element is dragged-and-dropped
    onto a calendar. Contains information for creating an event.
    */
    var DRAG_META_REFINERS = {
        startTime: createDuration,
        duration: createDuration,
        create: Boolean,
        sourceId: String,
    };
    function parseDragMeta(raw) {
        var _a = refineProps(raw, DRAG_META_REFINERS), refined = _a.refined, extra = _a.extra;
        return {
            startTime: refined.startTime || null,
            duration: refined.duration || null,
            create: refined.create != null ? refined.create : true,
            sourceId: refined.sourceId,
            leftoverProps: extra,
        };
    }

    var ToolbarSection = /** @class */ (function (_super) {
        __extends(ToolbarSection, _super);
        function ToolbarSection() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ToolbarSection.prototype.render = function () {
            var _this = this;
            var children = this.props.widgetGroups.map(function (widgetGroup) { return _this.renderWidgetGroup(widgetGroup); });
            return createElement.apply(void 0, __spreadArray(['div', { className: 'fc-toolbar-chunk' }], children));
        };
        ToolbarSection.prototype.renderWidgetGroup = function (widgetGroup) {
            var props = this.props;
            var theme = this.context.theme;
            var children = [];
            var isOnlyButtons = true;
            for (var _i = 0, widgetGroup_1 = widgetGroup; _i < widgetGroup_1.length; _i++) {
                var widget = widgetGroup_1[_i];
                var buttonName = widget.buttonName, buttonClick = widget.buttonClick, buttonText = widget.buttonText, buttonIcon = widget.buttonIcon;
                if (buttonName === 'title') {
                    isOnlyButtons = false;
                    children.push(createElement("h2", { className: "fc-toolbar-title" }, props.title));
                }
                else {
                    var ariaAttrs = buttonIcon ? { 'aria-label': buttonName } : {};
                    var buttonClasses = ["fc-" + buttonName + "-button", theme.getClass('button')];
                    if (buttonName === props.activeButton) {
                        buttonClasses.push(theme.getClass('buttonActive'));
                    }
                    var isDisabled = (!props.isTodayEnabled && buttonName === 'today') ||
                        (!props.isPrevEnabled && buttonName === 'prev') ||
                        (!props.isNextEnabled && buttonName === 'next');
                    children.push(createElement("button", __assign({ disabled: isDisabled, className: buttonClasses.join(' '), onClick: buttonClick, type: "button" }, ariaAttrs), buttonText || (buttonIcon ? createElement("span", { className: buttonIcon }) : '')));
                }
            }
            if (children.length > 1) {
                var groupClassName = (isOnlyButtons && theme.getClass('buttonGroup')) || '';
                return createElement.apply(void 0, __spreadArray(['div', { className: groupClassName }], children));
            }
            return children[0];
        };
        return ToolbarSection;
    }(BaseComponent));

    var Toolbar = /** @class */ (function (_super) {
        __extends(Toolbar, _super);
        function Toolbar() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        Toolbar.prototype.render = function () {
            var _a = this.props, model = _a.model, extraClassName = _a.extraClassName;
            var forceLtr = false;
            var startContent;
            var endContent;
            var centerContent = model.center;
            if (model.left) {
                forceLtr = true;
                startContent = model.left;
            }
            else {
                startContent = model.start;
            }
            if (model.right) {
                forceLtr = true;
                endContent = model.right;
            }
            else {
                endContent = model.end;
            }
            var classNames = [
                extraClassName || '',
                'fc-toolbar',
                forceLtr ? 'fc-toolbar-ltr' : '',
            ];
            return (createElement("div", { className: classNames.join(' ') },
                this.renderSection('start', startContent || []),
                this.renderSection('center', centerContent || []),
                this.renderSection('end', endContent || [])));
        };
        Toolbar.prototype.renderSection = function (key, widgetGroups) {
            var props = this.props;
            return (createElement(ToolbarSection, { key: key, widgetGroups: widgetGroups, title: props.title, activeButton: props.activeButton, isTodayEnabled: props.isTodayEnabled, isPrevEnabled: props.isPrevEnabled, isNextEnabled: props.isNextEnabled }));
        };
        return Toolbar;
    }(BaseComponent));

    // TODO: do function component?
    var ViewContainer = /** @class */ (function (_super) {
        __extends(ViewContainer, _super);
        function ViewContainer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.state = {
                availableWidth: null,
            };
            _this.handleEl = function (el) {
                _this.el = el;
                setRef(_this.props.elRef, el);
                _this.updateAvailableWidth();
            };
            _this.handleResize = function () {
                _this.updateAvailableWidth();
            };
            return _this;
        }
        ViewContainer.prototype.render = function () {
            var _a = this, props = _a.props, state = _a.state;
            var aspectRatio = props.aspectRatio;
            var classNames = [
                'fc-view-harness',
                (aspectRatio || props.liquid || props.height)
                    ? 'fc-view-harness-active' // harness controls the height
                    : 'fc-view-harness-passive', // let the view do the height
            ];
            var height = '';
            var paddingBottom = '';
            if (aspectRatio) {
                if (state.availableWidth !== null) {
                    height = state.availableWidth / aspectRatio;
                }
                else {
                    // while waiting to know availableWidth, we can't set height to *zero*
                    // because will cause lots of unnecessary scrollbars within scrollgrid.
                    // BETTER: don't start rendering ANYTHING yet until we know container width
                    // NOTE: why not always use paddingBottom? Causes height oscillation (issue 5606)
                    paddingBottom = (1 / aspectRatio) * 100 + "%";
                }
            }
            else {
                height = props.height || '';
            }
            return (createElement("div", { ref: this.handleEl, onClick: props.onClick, className: classNames.join(' '), style: { height: height, paddingBottom: paddingBottom } }, props.children));
        };
        ViewContainer.prototype.componentDidMount = function () {
            this.context.addResizeHandler(this.handleResize);
        };
        ViewContainer.prototype.componentWillUnmount = function () {
            this.context.removeResizeHandler(this.handleResize);
        };
        ViewContainer.prototype.updateAvailableWidth = function () {
            if (this.el && // needed. but why?
                this.props.aspectRatio // aspectRatio is the only height setting that needs availableWidth
            ) {
                this.setState({ availableWidth: this.el.offsetWidth });
            }
        };
        return ViewContainer;
    }(BaseComponent));

    /*
    Detects when the user clicks on an event within a DateComponent
    */
    var EventClicking = /** @class */ (function (_super) {
        __extends(EventClicking, _super);
        function EventClicking(settings) {
            var _this = _super.call(this, settings) || this;
            _this.handleSegClick = function (ev, segEl) {
                var component = _this.component;
                var context = component.context;
                var seg = getElSeg(segEl);
                if (seg && // might be the <div> surrounding the more link
                    component.isValidSegDownEl(ev.target)) {
                    // our way to simulate a link click for elements that can't be <a> tags
                    // grab before trigger fired in case trigger trashes DOM thru rerendering
                    var hasUrlContainer = elementClosest(ev.target, '.fc-event-forced-url');
                    var url = hasUrlContainer ? hasUrlContainer.querySelector('a[href]').href : '';
                    context.emitter.trigger('eventClick', {
                        el: segEl,
                        event: new EventApi(component.context, seg.eventRange.def, seg.eventRange.instance),
                        jsEvent: ev,
                        view: context.viewApi,
                    });
                    if (url && !ev.defaultPrevented) {
                        window.location.href = url;
                    }
                }
            };
            _this.destroy = listenBySelector(settings.el, 'click', '.fc-event', // on both fg and bg events
            _this.handleSegClick);
            return _this;
        }
        return EventClicking;
    }(Interaction));

    /*
    Triggers events and adds/removes core classNames when the user's pointer
    enters/leaves event-elements of a component.
    */
    var EventHovering = /** @class */ (function (_super) {
        __extends(EventHovering, _super);
        function EventHovering(settings) {
            var _this = _super.call(this, settings) || this;
            // for simulating an eventMouseLeave when the event el is destroyed while mouse is over it
            _this.handleEventElRemove = function (el) {
                if (el === _this.currentSegEl) {
                    _this.handleSegLeave(null, _this.currentSegEl);
                }
            };
            _this.handleSegEnter = function (ev, segEl) {
                if (getElSeg(segEl)) { // TODO: better way to make sure not hovering over more+ link or its wrapper
                    _this.currentSegEl = segEl;
                    _this.triggerEvent('eventMouseEnter', ev, segEl);
                }
            };
            _this.handleSegLeave = function (ev, segEl) {
                if (_this.currentSegEl) {
                    _this.currentSegEl = null;
                    _this.triggerEvent('eventMouseLeave', ev, segEl);
                }
            };
            _this.removeHoverListeners = listenToHoverBySelector(settings.el, '.fc-event', // on both fg and bg events
            _this.handleSegEnter, _this.handleSegLeave);
            return _this;
        }
        EventHovering.prototype.destroy = function () {
            this.removeHoverListeners();
        };
        EventHovering.prototype.triggerEvent = function (publicEvName, ev, segEl) {
            var component = this.component;
            var context = component.context;
            var seg = getElSeg(segEl);
            if (!ev || component.isValidSegDownEl(ev.target)) {
                context.emitter.trigger(publicEvName, {
                    el: segEl,
                    event: new EventApi(context, seg.eventRange.def, seg.eventRange.instance),
                    jsEvent: ev,
                    view: context.viewApi,
                });
            }
        };
        return EventHovering;
    }(Interaction));

    var CalendarContent = /** @class */ (function (_super) {
        __extends(CalendarContent, _super);
        function CalendarContent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.buildViewContext = memoize(buildViewContext);
            _this.buildViewPropTransformers = memoize(buildViewPropTransformers);
            _this.buildToolbarProps = memoize(buildToolbarProps);
            _this.handleNavLinkClick = buildDelegationHandler('a[data-navlink]', _this._handleNavLinkClick.bind(_this));
            _this.headerRef = createRef();
            _this.footerRef = createRef();
            _this.interactionsStore = {};
            // Component Registration
            // -----------------------------------------------------------------------------------------------------------------
            _this.registerInteractiveComponent = function (component, settingsInput) {
                var settings = parseInteractionSettings(component, settingsInput);
                var DEFAULT_INTERACTIONS = [
                    EventClicking,
                    EventHovering,
                ];
                var interactionClasses = DEFAULT_INTERACTIONS.concat(_this.props.pluginHooks.componentInteractions);
                var interactions = interactionClasses.map(function (TheInteractionClass) { return new TheInteractionClass(settings); });
                _this.interactionsStore[component.uid] = interactions;
                interactionSettingsStore[component.uid] = settings;
            };
            _this.unregisterInteractiveComponent = function (component) {
                for (var _i = 0, _a = _this.interactionsStore[component.uid]; _i < _a.length; _i++) {
                    var listener = _a[_i];
                    listener.destroy();
                }
                delete _this.interactionsStore[component.uid];
                delete interactionSettingsStore[component.uid];
            };
            // Resizing
            // -----------------------------------------------------------------------------------------------------------------
            _this.resizeRunner = new DelayedRunner(function () {
                _this.props.emitter.trigger('_resize', true); // should window resizes be considered "forced" ?
                _this.props.emitter.trigger('windowResize', { view: _this.props.viewApi });
            });
            _this.handleWindowResize = function (ev) {
                var options = _this.props.options;
                if (options.handleWindowResize &&
                    ev.target === window // avoid jqui events
                ) {
                    _this.resizeRunner.request(options.windowResizeDelay);
                }
            };
            return _this;
        }
        /*
        renders INSIDE of an outer div
        */
        CalendarContent.prototype.render = function () {
            var props = this.props;
            var toolbarConfig = props.toolbarConfig, options = props.options;
            var toolbarProps = this.buildToolbarProps(props.viewSpec, props.dateProfile, props.dateProfileGenerator, props.currentDate, getNow(props.options.now, props.dateEnv), // TODO: use NowTimer????
            props.viewTitle);
            var viewVGrow = false;
            var viewHeight = '';
            var viewAspectRatio;
            if (props.isHeightAuto || props.forPrint) {
                viewHeight = '';
            }
            else if (options.height != null) {
                viewVGrow = true;
            }
            else if (options.contentHeight != null) {
                viewHeight = options.contentHeight;
            }
            else {
                viewAspectRatio = Math.max(options.aspectRatio, 0.5); // prevent from getting too tall
            }
            var viewContext = this.buildViewContext(props.viewSpec, props.viewApi, props.options, props.dateProfileGenerator, props.dateEnv, props.theme, props.pluginHooks, props.dispatch, props.getCurrentData, props.emitter, props.calendarApi, this.registerInteractiveComponent, this.unregisterInteractiveComponent);
            return (createElement(ViewContextType.Provider, { value: viewContext },
                toolbarConfig.headerToolbar && (createElement(Toolbar, __assign({ ref: this.headerRef, extraClassName: "fc-header-toolbar", model: toolbarConfig.headerToolbar }, toolbarProps))),
                createElement(ViewContainer, { liquid: viewVGrow, height: viewHeight, aspectRatio: viewAspectRatio, onClick: this.handleNavLinkClick },
                    this.renderView(props),
                    this.buildAppendContent()),
                toolbarConfig.footerToolbar && (createElement(Toolbar, __assign({ ref: this.footerRef, extraClassName: "fc-footer-toolbar", model: toolbarConfig.footerToolbar }, toolbarProps)))));
        };
        CalendarContent.prototype.componentDidMount = function () {
            var props = this.props;
            this.calendarInteractions = props.pluginHooks.calendarInteractions
                .map(function (CalendarInteractionClass) { return new CalendarInteractionClass(props); });
            window.addEventListener('resize', this.handleWindowResize);
            var propSetHandlers = props.pluginHooks.propSetHandlers;
            for (var propName in propSetHandlers) {
                propSetHandlers[propName](props[propName], props);
            }
        };
        CalendarContent.prototype.componentDidUpdate = function (prevProps) {
            var props = this.props;
            var propSetHandlers = props.pluginHooks.propSetHandlers;
            for (var propName in propSetHandlers) {
                if (props[propName] !== prevProps[propName]) {
                    propSetHandlers[propName](props[propName], props);
                }
            }
        };
        CalendarContent.prototype.componentWillUnmount = function () {
            window.removeEventListener('resize', this.handleWindowResize);
            this.resizeRunner.clear();
            for (var _i = 0, _a = this.calendarInteractions; _i < _a.length; _i++) {
                var interaction = _a[_i];
                interaction.destroy();
            }
            this.props.emitter.trigger('_unmount');
        };
        CalendarContent.prototype._handleNavLinkClick = function (ev, anchorEl) {
            var _a = this.props, dateEnv = _a.dateEnv, options = _a.options, calendarApi = _a.calendarApi;
            var navLinkOptions = anchorEl.getAttribute('data-navlink');
            navLinkOptions = navLinkOptions ? JSON.parse(navLinkOptions) : {};
            var dateMarker = dateEnv.createMarker(navLinkOptions.date);
            var viewType = navLinkOptions.type;
            var customAction = viewType === 'day' ? options.navLinkDayClick :
                viewType === 'week' ? options.navLinkWeekClick : null;
            if (typeof customAction === 'function') {
                customAction.call(calendarApi, dateEnv.toDate(dateMarker), ev);
            }
            else {
                if (typeof customAction === 'string') {
                    viewType = customAction;
                }
                calendarApi.zoomTo(dateMarker, viewType);
            }
        };
        CalendarContent.prototype.buildAppendContent = function () {
            var props = this.props;
            var children = props.pluginHooks.viewContainerAppends.map(function (buildAppendContent) { return buildAppendContent(props); });
            return createElement.apply(void 0, __spreadArray([Fragment, {}], children));
        };
        CalendarContent.prototype.renderView = function (props) {
            var pluginHooks = props.pluginHooks;
            var viewSpec = props.viewSpec;
            var viewProps = {
                dateProfile: props.dateProfile,
                businessHours: props.businessHours,
                eventStore: props.renderableEventStore,
                eventUiBases: props.eventUiBases,
                dateSelection: props.dateSelection,
                eventSelection: props.eventSelection,
                eventDrag: props.eventDrag,
                eventResize: props.eventResize,
                isHeightAuto: props.isHeightAuto,
                forPrint: props.forPrint,
            };
            var transformers = this.buildViewPropTransformers(pluginHooks.viewPropsTransformers);
            for (var _i = 0, transformers_1 = transformers; _i < transformers_1.length; _i++) {
                var transformer = transformers_1[_i];
                __assign(viewProps, transformer.transform(viewProps, props));
            }
            var ViewComponent = viewSpec.component;
            return (createElement(ViewComponent, __assign({}, viewProps)));
        };
        return CalendarContent;
    }(PureComponent));
    function buildToolbarProps(viewSpec, dateProfile, dateProfileGenerator, currentDate, now, title) {
        // don't force any date-profiles to valid date profiles (the \`false\`) so that we can tell if it's invalid
        var todayInfo = dateProfileGenerator.build(now, undefined, false); // TODO: need \`undefined\` or else INFINITE LOOP for some reason
        var prevInfo = dateProfileGenerator.buildPrev(dateProfile, currentDate, false);
        var nextInfo = dateProfileGenerator.buildNext(dateProfile, currentDate, false);
        return {
            title: title,
            activeButton: viewSpec.type,
            isTodayEnabled: todayInfo.isValid && !rangeContainsMarker(dateProfile.currentRange, now),
            isPrevEnabled: prevInfo.isValid,
            isNextEnabled: nextInfo.isValid,
        };
    }
    // Plugin
    // -----------------------------------------------------------------------------------------------------------------
    function buildViewPropTransformers(theClasses) {
        return theClasses.map(function (TheClass) { return new TheClass(); });
    }

    var CalendarRoot = /** @class */ (function (_super) {
        __extends(CalendarRoot, _super);
        function CalendarRoot() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.state = {
                forPrint: false,
            };
            _this.handleBeforePrint = function () {
                _this.setState({ forPrint: true });
            };
            _this.handleAfterPrint = function () {
                _this.setState({ forPrint: false });
            };
            return _this;
        }
        CalendarRoot.prototype.render = function () {
            var props = this.props;
            var options = props.options;
            var forPrint = this.state.forPrint;
            var isHeightAuto = forPrint || options.height === 'auto' || options.contentHeight === 'auto';
            var height = (!isHeightAuto && options.height != null) ? options.height : '';
            var classNames = [
                'fc',
                forPrint ? 'fc-media-print' : 'fc-media-screen',
                "fc-direction-" + options.direction,
                props.theme.getClass('root'),
            ];
            if (!getCanVGrowWithinCell()) {
                classNames.push('fc-liquid-hack');
            }
            return props.children(classNames, height, isHeightAuto, forPrint);
        };
        CalendarRoot.prototype.componentDidMount = function () {
            var emitter = this.props.emitter;
            emitter.on('_beforeprint', this.handleBeforePrint);
            emitter.on('_afterprint', this.handleAfterPrint);
        };
        CalendarRoot.prototype.componentWillUnmount = function () {
            var emitter = this.props.emitter;
            emitter.off('_beforeprint', this.handleBeforePrint);
            emitter.off('_afterprint', this.handleAfterPrint);
        };
        return CalendarRoot;
    }(BaseComponent));

    // Computes a default column header formatting string if \`colFormat\` is not explicitly defined
    function computeFallbackHeaderFormat(datesRepDistinctDays, dayCnt) {
        // if more than one week row, or if there are a lot of columns with not much space,
        // put just the day numbers will be in each cell
        if (!datesRepDistinctDays || dayCnt > 10) {
            return createFormatter({ weekday: 'short' }); // "Sat"
        }
        if (dayCnt > 1) {
            return createFormatter({ weekday: 'short', month: 'numeric', day: 'numeric', omitCommas: true }); // "Sat 11/12"
        }
        return createFormatter({ weekday: 'long' }); // "Saturday"
    }

    var CLASS_NAME = 'fc-col-header-cell'; // do the cushion too? no
    function renderInner$1(hookProps) {
        return hookProps.text;
    }

    var TableDateCell = /** @class */ (function (_super) {
        __extends(TableDateCell, _super);
        function TableDateCell() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TableDateCell.prototype.render = function () {
            var _a = this.context, dateEnv = _a.dateEnv, options = _a.options, theme = _a.theme, viewApi = _a.viewApi;
            var props = this.props;
            var date = props.date, dateProfile = props.dateProfile;
            var dayMeta = getDateMeta(date, props.todayRange, null, dateProfile);
            var classNames = [CLASS_NAME].concat(getDayClassNames(dayMeta, theme));
            var text = dateEnv.format(date, props.dayHeaderFormat);
            // if colCnt is 1, we are already in a day-view and don't need a navlink
            var navLinkAttrs = (options.navLinks && !dayMeta.isDisabled && props.colCnt > 1)
                ? { 'data-navlink': buildNavLinkData(date), tabIndex: 0 }
                : {};
            var hookProps = __assign(__assign(__assign({ date: dateEnv.toDate(date), view: viewApi }, props.extraHookProps), { text: text }), dayMeta);
            return (createElement(RenderHook, { hookProps: hookProps, classNames: options.dayHeaderClassNames, content: options.dayHeaderContent, defaultContent: renderInner$1, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement("th", __assign({ ref: rootElRef, className: classNames.concat(customClassNames).join(' '), "data-date": !dayMeta.isDisabled ? formatDayString(date) : undefined, colSpan: props.colSpan }, props.extraDataAttrs),
                createElement("div", { className: "fc-scrollgrid-sync-inner" }, !dayMeta.isDisabled && (createElement("a", __assign({ ref: innerElRef, className: [
                        'fc-col-header-cell-cushion',
                        props.isSticky ? 'fc-sticky' : '',
                    ].join(' ') }, navLinkAttrs), innerContent))))); }));
        };
        return TableDateCell;
    }(BaseComponent));

    var TableDowCell = /** @class */ (function (_super) {
        __extends(TableDowCell, _super);
        function TableDowCell() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TableDowCell.prototype.render = function () {
            var props = this.props;
            var _a = this.context, dateEnv = _a.dateEnv, theme = _a.theme, viewApi = _a.viewApi, options = _a.options;
            var date = addDays(new Date(259200000), props.dow); // start with Sun, 04 Jan 1970 00:00:00 GMT
            var dateMeta = {
                dow: props.dow,
                isDisabled: false,
                isFuture: false,
                isPast: false,
                isToday: false,
                isOther: false,
            };
            var classNames = [CLASS_NAME].concat(getDayClassNames(dateMeta, theme), props.extraClassNames || []);
            var text = dateEnv.format(date, props.dayHeaderFormat);
            var hookProps = __assign(__assign(__assign(__assign({ // TODO: make this public?
                date: date }, dateMeta), { view: viewApi }), props.extraHookProps), { text: text });
            return (createElement(RenderHook, { hookProps: hookProps, classNames: options.dayHeaderClassNames, content: options.dayHeaderContent, defaultContent: renderInner$1, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement("th", __assign({ ref: rootElRef, className: classNames.concat(customClassNames).join(' '), colSpan: props.colSpan }, props.extraDataAttrs),
                createElement("div", { className: "fc-scrollgrid-sync-inner" },
                    createElement("a", { className: [
                            'fc-col-header-cell-cushion',
                            props.isSticky ? 'fc-sticky' : '',
                        ].join(' '), ref: innerElRef }, innerContent)))); }));
        };
        return TableDowCell;
    }(BaseComponent));

    var NowTimer = /** @class */ (function (_super) {
        __extends(NowTimer, _super);
        function NowTimer(props, context) {
            var _this = _super.call(this, props, context) || this;
            _this.initialNowDate = getNow(context.options.now, context.dateEnv);
            _this.initialNowQueriedMs = new Date().valueOf();
            _this.state = _this.computeTiming().currentState;
            return _this;
        }
        NowTimer.prototype.render = function () {
            var _a = this, props = _a.props, state = _a.state;
            return props.children(state.nowDate, state.todayRange);
        };
        NowTimer.prototype.componentDidMount = function () {
            this.setTimeout();
        };
        NowTimer.prototype.componentDidUpdate = function (prevProps) {
            if (prevProps.unit !== this.props.unit) {
                this.clearTimeout();
                this.setTimeout();
            }
        };
        NowTimer.prototype.componentWillUnmount = function () {
            this.clearTimeout();
        };
        NowTimer.prototype.computeTiming = function () {
            var _a = this, props = _a.props, context = _a.context;
            var unroundedNow = addMs(this.initialNowDate, new Date().valueOf() - this.initialNowQueriedMs);
            var currentUnitStart = context.dateEnv.startOf(unroundedNow, props.unit);
            var nextUnitStart = context.dateEnv.add(currentUnitStart, createDuration(1, props.unit));
            var waitMs = nextUnitStart.valueOf() - unroundedNow.valueOf();
            // there is a max setTimeout ms value (https://stackoverflow.com/a/3468650/96342)
            // ensure no longer than a day
            waitMs = Math.min(1000 * 60 * 60 * 24, waitMs);
            return {
                currentState: { nowDate: currentUnitStart, todayRange: buildDayRange(currentUnitStart) },
                nextState: { nowDate: nextUnitStart, todayRange: buildDayRange(nextUnitStart) },
                waitMs: waitMs,
            };
        };
        NowTimer.prototype.setTimeout = function () {
            var _this = this;
            var _a = this.computeTiming(), nextState = _a.nextState, waitMs = _a.waitMs;
            this.timeoutId = setTimeout(function () {
                _this.setState(nextState, function () {
                    _this.setTimeout();
                });
            }, waitMs);
        };
        NowTimer.prototype.clearTimeout = function () {
            if (this.timeoutId) {
                clearTimeout(this.timeoutId);
            }
        };
        NowTimer.contextType = ViewContextType;
        return NowTimer;
    }(Component));
    function buildDayRange(date) {
        var start = startOfDay(date);
        var end = addDays(start, 1);
        return { start: start, end: end };
    }

    var DayHeader = /** @class */ (function (_super) {
        __extends(DayHeader, _super);
        function DayHeader() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.createDayHeaderFormatter = memoize(createDayHeaderFormatter);
            return _this;
        }
        DayHeader.prototype.render = function () {
            var context = this.context;
            var _a = this.props, dates = _a.dates, dateProfile = _a.dateProfile, datesRepDistinctDays = _a.datesRepDistinctDays, renderIntro = _a.renderIntro;
            var dayHeaderFormat = this.createDayHeaderFormatter(context.options.dayHeaderFormat, datesRepDistinctDays, dates.length);
            return (createElement(NowTimer, { unit: "day" }, function (nowDate, todayRange) { return (createElement("tr", null,
                renderIntro && renderIntro('day'),
                dates.map(function (date) { return (datesRepDistinctDays ? (createElement(TableDateCell, { key: date.toISOString(), date: date, dateProfile: dateProfile, todayRange: todayRange, colCnt: dates.length, dayHeaderFormat: dayHeaderFormat })) : (createElement(TableDowCell, { key: date.getUTCDay(), dow: date.getUTCDay(), dayHeaderFormat: dayHeaderFormat }))); }))); }));
        };
        return DayHeader;
    }(BaseComponent));
    function createDayHeaderFormatter(explicitFormat, datesRepDistinctDays, dateCnt) {
        return explicitFormat || computeFallbackHeaderFormat(datesRepDistinctDays, dateCnt);
    }

    var DaySeriesModel = /** @class */ (function () {
        function DaySeriesModel(range, dateProfileGenerator) {
            var date = range.start;
            var end = range.end;
            var indices = [];
            var dates = [];
            var dayIndex = -1;
            while (date < end) { // loop each day from start to end
                if (dateProfileGenerator.isHiddenDay(date)) {
                    indices.push(dayIndex + 0.5); // mark that it's between indices
                }
                else {
                    dayIndex += 1;
                    indices.push(dayIndex);
                    dates.push(date);
                }
                date = addDays(date, 1);
            }
            this.dates = dates;
            this.indices = indices;
            this.cnt = dates.length;
        }
        DaySeriesModel.prototype.sliceRange = function (range) {
            var firstIndex = this.getDateDayIndex(range.start); // inclusive first index
            var lastIndex = this.getDateDayIndex(addDays(range.end, -1)); // inclusive last index
            var clippedFirstIndex = Math.max(0, firstIndex);
            var clippedLastIndex = Math.min(this.cnt - 1, lastIndex);
            // deal with in-between indices
            clippedFirstIndex = Math.ceil(clippedFirstIndex); // in-between starts round to next cell
            clippedLastIndex = Math.floor(clippedLastIndex); // in-between ends round to prev cell
            if (clippedFirstIndex <= clippedLastIndex) {
                return {
                    firstIndex: clippedFirstIndex,
                    lastIndex: clippedLastIndex,
                    isStart: firstIndex === clippedFirstIndex,
                    isEnd: lastIndex === clippedLastIndex,
                };
            }
            return null;
        };
        // Given a date, returns its chronolocial cell-index from the first cell of the grid.
        // If the date lies between cells (because of hiddenDays), returns a floating-point value between offsets.
        // If before the first offset, returns a negative number.
        // If after the last offset, returns an offset past the last cell offset.
        // Only works for *start* dates of cells. Will not work for exclusive end dates for cells.
        DaySeriesModel.prototype.getDateDayIndex = function (date) {
            var indices = this.indices;
            var dayOffset = Math.floor(diffDays(this.dates[0], date));
            if (dayOffset < 0) {
                return indices[0] - 1;
            }
            if (dayOffset >= indices.length) {
                return indices[indices.length - 1] + 1;
            }
            return indices[dayOffset];
        };
        return DaySeriesModel;
    }());

    var DayTableModel = /** @class */ (function () {
        function DayTableModel(daySeries, breakOnWeeks) {
            var dates = daySeries.dates;
            var daysPerRow;
            var firstDay;
            var rowCnt;
            if (breakOnWeeks) {
                // count columns until the day-of-week repeats
                firstDay = dates[0].getUTCDay();
                for (daysPerRow = 1; daysPerRow < dates.length; daysPerRow += 1) {
                    if (dates[daysPerRow].getUTCDay() === firstDay) {
                        break;
                    }
                }
                rowCnt = Math.ceil(dates.length / daysPerRow);
            }
            else {
                rowCnt = 1;
                daysPerRow = dates.length;
            }
            this.rowCnt = rowCnt;
            this.colCnt = daysPerRow;
            this.daySeries = daySeries;
            this.cells = this.buildCells();
            this.headerDates = this.buildHeaderDates();
        }
        DayTableModel.prototype.buildCells = function () {
            var rows = [];
            for (var row = 0; row < this.rowCnt; row += 1) {
                var cells = [];
                for (var col = 0; col < this.colCnt; col += 1) {
                    cells.push(this.buildCell(row, col));
                }
                rows.push(cells);
            }
            return rows;
        };
        DayTableModel.prototype.buildCell = function (row, col) {
            var date = this.daySeries.dates[row * this.colCnt + col];
            return {
                key: date.toISOString(),
                date: date,
            };
        };
        DayTableModel.prototype.buildHeaderDates = function () {
            var dates = [];
            for (var col = 0; col < this.colCnt; col += 1) {
                dates.push(this.cells[0][col].date);
            }
            return dates;
        };
        DayTableModel.prototype.sliceRange = function (range) {
            var colCnt = this.colCnt;
            var seriesSeg = this.daySeries.sliceRange(range);
            var segs = [];
            if (seriesSeg) {
                var firstIndex = seriesSeg.firstIndex, lastIndex = seriesSeg.lastIndex;
                var index = firstIndex;
                while (index <= lastIndex) {
                    var row = Math.floor(index / colCnt);
                    var nextIndex = Math.min((row + 1) * colCnt, lastIndex + 1);
                    segs.push({
                        row: row,
                        firstCol: index % colCnt,
                        lastCol: (nextIndex - 1) % colCnt,
                        isStart: seriesSeg.isStart && index === firstIndex,
                        isEnd: seriesSeg.isEnd && (nextIndex - 1) === lastIndex,
                    });
                    index = nextIndex;
                }
            }
            return segs;
        };
        return DayTableModel;
    }());

    var Slicer = /** @class */ (function () {
        function Slicer() {
            this.sliceBusinessHours = memoize(this._sliceBusinessHours);
            this.sliceDateSelection = memoize(this._sliceDateSpan);
            this.sliceEventStore = memoize(this._sliceEventStore);
            this.sliceEventDrag = memoize(this._sliceInteraction);
            this.sliceEventResize = memoize(this._sliceInteraction);
            this.forceDayIfListItem = false; // hack
        }
        Slicer.prototype.sliceProps = function (props, dateProfile, nextDayThreshold, context) {
            var extraArgs = [];
            for (var _i = 4; _i < arguments.length; _i++) {
                extraArgs[_i - 4] = arguments[_i];
            }
            var eventUiBases = props.eventUiBases;
            var eventSegs = this.sliceEventStore.apply(this, __spreadArray([props.eventStore, eventUiBases, dateProfile, nextDayThreshold], extraArgs));
            return {
                dateSelectionSegs: this.sliceDateSelection.apply(this, __spreadArray([props.dateSelection, eventUiBases, context], extraArgs)),
                businessHourSegs: this.sliceBusinessHours.apply(this, __spreadArray([props.businessHours, dateProfile, nextDayThreshold, context], extraArgs)),
                fgEventSegs: eventSegs.fg,
                bgEventSegs: eventSegs.bg,
                eventDrag: this.sliceEventDrag.apply(this, __spreadArray([props.eventDrag, eventUiBases, dateProfile, nextDayThreshold], extraArgs)),
                eventResize: this.sliceEventResize.apply(this, __spreadArray([props.eventResize, eventUiBases, dateProfile, nextDayThreshold], extraArgs)),
                eventSelection: props.eventSelection,
            }; // TODO: give interactionSegs?
        };
        Slicer.prototype.sliceNowDate = function (// does not memoize
        date, context) {
            var extraArgs = [];
            for (var _i = 2; _i < arguments.length; _i++) {
                extraArgs[_i - 2] = arguments[_i];
            }
            return this._sliceDateSpan.apply(this, __spreadArray([{ range: { start: date, end: addMs(date, 1) }, allDay: false },
                {},
                context], extraArgs));
        };
        Slicer.prototype._sliceBusinessHours = function (businessHours, dateProfile, nextDayThreshold, context) {
            var extraArgs = [];
            for (var _i = 4; _i < arguments.length; _i++) {
                extraArgs[_i - 4] = arguments[_i];
            }
            if (!businessHours) {
                return [];
            }
            return this._sliceEventStore.apply(this, __spreadArray([expandRecurring(businessHours, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), context),
                {},
                dateProfile,
                nextDayThreshold], extraArgs)).bg;
        };
        Slicer.prototype._sliceEventStore = function (eventStore, eventUiBases, dateProfile, nextDayThreshold) {
            var extraArgs = [];
            for (var _i = 4; _i < arguments.length; _i++) {
                extraArgs[_i - 4] = arguments[_i];
            }
            if (eventStore) {
                var rangeRes = sliceEventStore(eventStore, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);
                return {
                    bg: this.sliceEventRanges(rangeRes.bg, extraArgs),
                    fg: this.sliceEventRanges(rangeRes.fg, extraArgs),
                };
            }
            return { bg: [], fg: [] };
        };
        Slicer.prototype._sliceInteraction = function (interaction, eventUiBases, dateProfile, nextDayThreshold) {
            var extraArgs = [];
            for (var _i = 4; _i < arguments.length; _i++) {
                extraArgs[_i - 4] = arguments[_i];
            }
            if (!interaction) {
                return null;
            }
            var rangeRes = sliceEventStore(interaction.mutatedEvents, eventUiBases, computeActiveRange(dateProfile, Boolean(nextDayThreshold)), nextDayThreshold);
            return {
                segs: this.sliceEventRanges(rangeRes.fg, extraArgs),
                affectedInstances: interaction.affectedEvents.instances,
                isEvent: interaction.isEvent,
            };
        };
        Slicer.prototype._sliceDateSpan = function (dateSpan, eventUiBases, context) {
            var extraArgs = [];
            for (var _i = 3; _i < arguments.length; _i++) {
                extraArgs[_i - 3] = arguments[_i];
            }
            if (!dateSpan) {
                return [];
            }
            var eventRange = fabricateEventRange(dateSpan, eventUiBases, context);
            var segs = this.sliceRange.apply(this, __spreadArray([dateSpan.range], extraArgs));
            for (var _a = 0, segs_1 = segs; _a < segs_1.length; _a++) {
                var seg = segs_1[_a];
                seg.eventRange = eventRange;
            }
            return segs;
        };
        /*
        "complete" seg means it has component and eventRange
        */
        Slicer.prototype.sliceEventRanges = function (eventRanges, extraArgs) {
            var segs = [];
            for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {
                var eventRange = eventRanges_1[_i];
                segs.push.apply(segs, this.sliceEventRange(eventRange, extraArgs));
            }
            return segs;
        };
        /*
        "complete" seg means it has component and eventRange
        */
        Slicer.prototype.sliceEventRange = function (eventRange, extraArgs) {
            var dateRange = eventRange.range;
            // hack to make multi-day events that are being force-displayed as list-items to take up only one day
            if (this.forceDayIfListItem && eventRange.ui.display === 'list-item') {
                dateRange = {
                    start: dateRange.start,
                    end: addDays(dateRange.start, 1),
                };
            }
            var segs = this.sliceRange.apply(this, __spreadArray([dateRange], extraArgs));
            for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
                var seg = segs_2[_i];
                seg.eventRange = eventRange;
                seg.isStart = eventRange.isStart && seg.isStart;
                seg.isEnd = eventRange.isEnd && seg.isEnd;
            }
            return segs;
        };
        return Slicer;
    }());
    /*
    for incorporating slotMinTime/slotMaxTime if appropriate
    TODO: should be part of DateProfile!
    TimelineDateProfile already does this btw
    */
    function computeActiveRange(dateProfile, isComponentAllDay) {
        var range = dateProfile.activeRange;
        if (isComponentAllDay) {
            return range;
        }
        return {
            start: addMs(range.start, dateProfile.slotMinTime.milliseconds),
            end: addMs(range.end, dateProfile.slotMaxTime.milliseconds - 864e5), // 864e5 = ms in a day
        };
    }

    // high-level segmenting-aware tester functions
    // ------------------------------------------------------------------------------------------------------------------------
    function isInteractionValid(interaction, dateProfile, context) {
        var instances = interaction.mutatedEvents.instances;
        for (var instanceId in instances) {
            if (!rangeContainsRange(dateProfile.validRange, instances[instanceId].range)) {
                return false;
            }
        }
        return isNewPropsValid({ eventDrag: interaction }, context); // HACK: the eventDrag props is used for ALL interactions
    }
    function isDateSelectionValid(dateSelection, dateProfile, context) {
        if (!rangeContainsRange(dateProfile.validRange, dateSelection.range)) {
            return false;
        }
        return isNewPropsValid({ dateSelection: dateSelection }, context);
    }
    function isNewPropsValid(newProps, context) {
        var calendarState = context.getCurrentData();
        var props = __assign({ businessHours: calendarState.businessHours, dateSelection: '', eventStore: calendarState.eventStore, eventUiBases: calendarState.eventUiBases, eventSelection: '', eventDrag: null, eventResize: null }, newProps);
        return (context.pluginHooks.isPropsValid || isPropsValid)(props, context);
    }
    function isPropsValid(state, context, dateSpanMeta, filterConfig) {
        if (dateSpanMeta === void 0) { dateSpanMeta = {}; }
        if (state.eventDrag && !isInteractionPropsValid(state, context, dateSpanMeta, filterConfig)) {
            return false;
        }
        if (state.dateSelection && !isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig)) {
            return false;
        }
        return true;
    }
    // Moving Event Validation
    // ------------------------------------------------------------------------------------------------------------------------
    function isInteractionPropsValid(state, context, dateSpanMeta, filterConfig) {
        var currentState = context.getCurrentData();
        var interaction = state.eventDrag; // HACK: the eventDrag props is used for ALL interactions
        var subjectEventStore = interaction.mutatedEvents;
        var subjectDefs = subjectEventStore.defs;
        var subjectInstances = subjectEventStore.instances;
        var subjectConfigs = compileEventUis(subjectDefs, interaction.isEvent ?
            state.eventUiBases :
            { '': currentState.selectionConfig });
        if (filterConfig) {
            subjectConfigs = mapHash(subjectConfigs, filterConfig);
        }
        // exclude the subject events. TODO: exclude defs too?
        var otherEventStore = excludeInstances(state.eventStore, interaction.affectedEvents.instances);
        var otherDefs = otherEventStore.defs;
        var otherInstances = otherEventStore.instances;
        var otherConfigs = compileEventUis(otherDefs, state.eventUiBases);
        for (var subjectInstanceId in subjectInstances) {
            var subjectInstance = subjectInstances[subjectInstanceId];
            var subjectRange = subjectInstance.range;
            var subjectConfig = subjectConfigs[subjectInstance.defId];
            var subjectDef = subjectDefs[subjectInstance.defId];
            // constraint
            if (!allConstraintsPass(subjectConfig.constraints, subjectRange, otherEventStore, state.businessHours, context)) {
                return false;
            }
            // overlap
            var eventOverlap = context.options.eventOverlap;
            var eventOverlapFunc = typeof eventOverlap === 'function' ? eventOverlap : null;
            for (var otherInstanceId in otherInstances) {
                var otherInstance = otherInstances[otherInstanceId];
                // intersect! evaluate
                if (rangesIntersect(subjectRange, otherInstance.range)) {
                    var otherOverlap = otherConfigs[otherInstance.defId].overlap;
                    // consider the other event's overlap. only do this if the subject event is a "real" event
                    if (otherOverlap === false && interaction.isEvent) {
                        return false;
                    }
                    if (subjectConfig.overlap === false) {
                        return false;
                    }
                    if (eventOverlapFunc && !eventOverlapFunc(new EventApi(context, otherDefs[otherInstance.defId], otherInstance), // still event
                    new EventApi(context, subjectDef, subjectInstance))) {
                        return false;
                    }
                }
            }
            // allow (a function)
            var calendarEventStore = currentState.eventStore; // need global-to-calendar, not local to component (splittable)state
            for (var _i = 0, _a = subjectConfig.allows; _i < _a.length; _i++) {
                var subjectAllow = _a[_i];
                var subjectDateSpan = __assign(__assign({}, dateSpanMeta), { range: subjectInstance.range, allDay: subjectDef.allDay });
                var origDef = calendarEventStore.defs[subjectDef.defId];
                var origInstance = calendarEventStore.instances[subjectInstanceId];
                var eventApi = void 0;
                if (origDef) { // was previously in the calendar
                    eventApi = new EventApi(context, origDef, origInstance);
                }
                else { // was an external event
                    eventApi = new EventApi(context, subjectDef); // no instance, because had no dates
                }
                if (!subjectAllow(buildDateSpanApiWithContext(subjectDateSpan, context), eventApi)) {
                    return false;
                }
            }
        }
        return true;
    }
    // Date Selection Validation
    // ------------------------------------------------------------------------------------------------------------------------
    function isDateSelectionPropsValid(state, context, dateSpanMeta, filterConfig) {
        var relevantEventStore = state.eventStore;
        var relevantDefs = relevantEventStore.defs;
        var relevantInstances = relevantEventStore.instances;
        var selection = state.dateSelection;
        var selectionRange = selection.range;
        var selectionConfig = context.getCurrentData().selectionConfig;
        if (filterConfig) {
            selectionConfig = filterConfig(selectionConfig);
        }
        // constraint
        if (!allConstraintsPass(selectionConfig.constraints, selectionRange, relevantEventStore, state.businessHours, context)) {
            return false;
        }
        // overlap
        var selectOverlap = context.options.selectOverlap;
        var selectOverlapFunc = typeof selectOverlap === 'function' ? selectOverlap : null;
        for (var relevantInstanceId in relevantInstances) {
            var relevantInstance = relevantInstances[relevantInstanceId];
            // intersect! evaluate
            if (rangesIntersect(selectionRange, relevantInstance.range)) {
                if (selectionConfig.overlap === false) {
                    return false;
                }
                if (selectOverlapFunc && !selectOverlapFunc(new EventApi(context, relevantDefs[relevantInstance.defId], relevantInstance), null)) {
                    return false;
                }
            }
        }
        // allow (a function)
        for (var _i = 0, _a = selectionConfig.allows; _i < _a.length; _i++) {
            var selectionAllow = _a[_i];
            var fullDateSpan = __assign(__assign({}, dateSpanMeta), selection);
            if (!selectionAllow(buildDateSpanApiWithContext(fullDateSpan, context), null)) {
                return false;
            }
        }
        return true;
    }
    // Constraint Utils
    // ------------------------------------------------------------------------------------------------------------------------
    function allConstraintsPass(constraints, subjectRange, otherEventStore, businessHoursUnexpanded, context) {
        for (var _i = 0, constraints_1 = constraints; _i < constraints_1.length; _i++) {
            var constraint = constraints_1[_i];
            if (!anyRangesContainRange(constraintToRanges(constraint, subjectRange, otherEventStore, businessHoursUnexpanded, context), subjectRange)) {
                return false;
            }
        }
        return true;
    }
    function constraintToRanges(constraint, subjectRange, // for expanding a recurring constraint, or expanding business hours
    otherEventStore, // for if constraint is an even group ID
    businessHoursUnexpanded, // for if constraint is 'businessHours'
    context) {
        if (constraint === 'businessHours') {
            return eventStoreToRanges(expandRecurring(businessHoursUnexpanded, subjectRange, context));
        }
        if (typeof constraint === 'string') { // an group ID
            return eventStoreToRanges(filterEventStoreDefs(otherEventStore, function (eventDef) { return eventDef.groupId === constraint; }));
        }
        if (typeof constraint === 'object' && constraint) { // non-null object
            return eventStoreToRanges(expandRecurring(constraint, subjectRange, context));
        }
        return []; // if it's false
    }
    // TODO: move to event-store file?
    function eventStoreToRanges(eventStore) {
        var instances = eventStore.instances;
        var ranges = [];
        for (var instanceId in instances) {
            ranges.push(instances[instanceId].range);
        }
        return ranges;
    }
    // TODO: move to geom file?
    function anyRangesContainRange(outerRanges, innerRange) {
        for (var _i = 0, outerRanges_1 = outerRanges; _i < outerRanges_1.length; _i++) {
            var outerRange = outerRanges_1[_i];
            if (rangeContainsRange(outerRange, innerRange)) {
                return true;
            }
        }
        return false;
    }

    var VISIBLE_HIDDEN_RE = /^(visible|hidden)$/;
    var Scroller = /** @class */ (function (_super) {
        __extends(Scroller, _super);
        function Scroller() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.handleEl = function (el) {
                _this.el = el;
                setRef(_this.props.elRef, el);
            };
            return _this;
        }
        Scroller.prototype.render = function () {
            var props = this.props;
            var liquid = props.liquid, liquidIsAbsolute = props.liquidIsAbsolute;
            var isAbsolute = liquid && liquidIsAbsolute;
            var className = ['fc-scroller'];
            if (liquid) {
                if (liquidIsAbsolute) {
                    className.push('fc-scroller-liquid-absolute');
                }
                else {
                    className.push('fc-scroller-liquid');
                }
            }
            return (createElement("div", { ref: this.handleEl, className: className.join(' '), style: {
                    overflowX: props.overflowX,
                    overflowY: props.overflowY,
                    left: (isAbsolute && -(props.overcomeLeft || 0)) || '',
                    right: (isAbsolute && -(props.overcomeRight || 0)) || '',
                    bottom: (isAbsolute && -(props.overcomeBottom || 0)) || '',
                    marginLeft: (!isAbsolute && -(props.overcomeLeft || 0)) || '',
                    marginRight: (!isAbsolute && -(props.overcomeRight || 0)) || '',
                    marginBottom: (!isAbsolute && -(props.overcomeBottom || 0)) || '',
                    maxHeight: props.maxHeight || '',
                } }, props.children));
        };
        Scroller.prototype.needsXScrolling = function () {
            if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
                return false;
            }
            // testing scrollWidth>clientWidth is unreliable cross-browser when pixel heights aren't integers.
            // much more reliable to see if children are taller than the scroller, even tho doesn't account for
            // inner-child margins and absolute positioning
            var el = this.el;
            var realClientWidth = this.el.getBoundingClientRect().width - this.getYScrollbarWidth();
            var children = el.children;
            for (var i = 0; i < children.length; i += 1) {
                var childEl = children[i];
                if (childEl.getBoundingClientRect().width > realClientWidth) {
                    return true;
                }
            }
            return false;
        };
        Scroller.prototype.needsYScrolling = function () {
            if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
                return false;
            }
            // testing scrollHeight>clientHeight is unreliable cross-browser when pixel heights aren't integers.
            // much more reliable to see if children are taller than the scroller, even tho doesn't account for
            // inner-child margins and absolute positioning
            var el = this.el;
            var realClientHeight = this.el.getBoundingClientRect().height - this.getXScrollbarWidth();
            var children = el.children;
            for (var i = 0; i < children.length; i += 1) {
                var childEl = children[i];
                if (childEl.getBoundingClientRect().height > realClientHeight) {
                    return true;
                }
            }
            return false;
        };
        Scroller.prototype.getXScrollbarWidth = function () {
            if (VISIBLE_HIDDEN_RE.test(this.props.overflowX)) {
                return 0;
            }
            return this.el.offsetHeight - this.el.clientHeight; // only works because we guarantee no borders. TODO: add to CSS with important?
        };
        Scroller.prototype.getYScrollbarWidth = function () {
            if (VISIBLE_HIDDEN_RE.test(this.props.overflowY)) {
                return 0;
            }
            return this.el.offsetWidth - this.el.clientWidth; // only works because we guarantee no borders. TODO: add to CSS with important?
        };
        return Scroller;
    }(BaseComponent));

    /*
    TODO: somehow infer OtherArgs from masterCallback?
    TODO: infer RefType from masterCallback if provided
    */
    var RefMap = /** @class */ (function () {
        function RefMap(masterCallback) {
            var _this = this;
            this.masterCallback = masterCallback;
            this.currentMap = {};
            this.depths = {};
            this.callbackMap = {};
            this.handleValue = function (val, key) {
                var _a = _this, depths = _a.depths, currentMap = _a.currentMap;
                var removed = false;
                var added = false;
                if (val !== null) {
                    // for bug... ACTUALLY: can probably do away with this now that callers don't share numeric indices anymore
                    removed = (key in currentMap);
                    currentMap[key] = val;
                    depths[key] = (depths[key] || 0) + 1;
                    added = true;
                }
                else {
                    depths[key] -= 1;
                    if (!depths[key]) {
                        delete currentMap[key];
                        delete _this.callbackMap[key];
                        removed = true;
                    }
                }
                if (_this.masterCallback) {
                    if (removed) {
                        _this.masterCallback(null, String(key));
                    }
                    if (added) {
                        _this.masterCallback(val, String(key));
                    }
                }
            };
        }
        RefMap.prototype.createRef = function (key) {
            var _this = this;
            var refCallback = this.callbackMap[key];
            if (!refCallback) {
                refCallback = this.callbackMap[key] = function (val) {
                    _this.handleValue(val, String(key));
                };
            }
            return refCallback;
        };
        // TODO: check callers that don't care about order. should use getAll instead
        // NOTE: this method has become less valuable now that we are encouraged to map order by some other index
        // TODO: provide ONE array-export function, buildArray, which fails on non-numeric indexes. caller can manipulate and "collect"
        RefMap.prototype.collect = function (startIndex, endIndex, step) {
            return collectFromHash(this.currentMap, startIndex, endIndex, step);
        };
        RefMap.prototype.getAll = function () {
            return hashValuesToArray(this.currentMap);
        };
        return RefMap;
    }());

    function computeShrinkWidth(chunkEls) {
        var shrinkCells = findElements(chunkEls, '.fc-scrollgrid-shrink');
        var largestWidth = 0;
        for (var _i = 0, shrinkCells_1 = shrinkCells; _i < shrinkCells_1.length; _i++) {
            var shrinkCell = shrinkCells_1[_i];
            largestWidth = Math.max(largestWidth, computeSmallestCellWidth(shrinkCell));
        }
        return Math.ceil(largestWidth); // <table> elements work best with integers. round up to ensure contents fits
    }
    function getSectionHasLiquidHeight(props, sectionConfig) {
        return props.liquid && sectionConfig.liquid; // does the section do liquid-height? (need to have whole scrollgrid liquid-height as well)
    }
    function getAllowYScrolling(props, sectionConfig) {
        return sectionConfig.maxHeight != null || // if its possible for the height to max out, we might need scrollbars
            getSectionHasLiquidHeight(props, sectionConfig); // if the section is liquid height, it might condense enough to require scrollbars
    }
    // TODO: ONLY use \`arg\`. force out internal function to use same API
    function renderChunkContent(sectionConfig, chunkConfig, arg) {
        var expandRows = arg.expandRows;
        var content = typeof chunkConfig.content === 'function' ?
            chunkConfig.content(arg) :
            createElement('table', {
                className: [
                    chunkConfig.tableClassName,
                    sectionConfig.syncRowHeights ? 'fc-scrollgrid-sync-table' : '',
                ].join(' '),
                style: {
                    minWidth: arg.tableMinWidth,
                    width: arg.clientWidth,
                    height: expandRows ? arg.clientHeight : '', // css \`height\` on a <table> serves as a min-height
                },
            }, arg.tableColGroupNode, createElement('tbody', {}, typeof chunkConfig.rowContent === 'function' ? chunkConfig.rowContent(arg) : chunkConfig.rowContent));
        return content;
    }
    function isColPropsEqual(cols0, cols1) {
        return isArraysEqual(cols0, cols1, isPropsEqual);
    }
    function renderMicroColGroup(cols, shrinkWidth) {
        var colNodes = [];
        /*
        for ColProps with spans, it would have been great to make a single <col span="">
        HOWEVER, Chrome was getting messing up distributing the width to <td>/<th> elements with colspans.
        SOLUTION: making individual <col> elements makes Chrome behave.
        */
        for (var _i = 0, cols_1 = cols; _i < cols_1.length; _i++) {
            var colProps = cols_1[_i];
            var span = colProps.span || 1;
            for (var i = 0; i < span; i += 1) {
                colNodes.push(createElement("col", { style: {
                        width: colProps.width === 'shrink' ? sanitizeShrinkWidth(shrinkWidth) : (colProps.width || ''),
                        minWidth: colProps.minWidth || '',
                    } }));
            }
        }
        return createElement.apply(void 0, __spreadArray(['colgroup', {}], colNodes));
    }
    function sanitizeShrinkWidth(shrinkWidth) {
        /* why 4? if we do 0, it will kill any border, which are needed for computeSmallestCellWidth
        4 accounts for 2 2-pixel borders. TODO: better solution? */
        return shrinkWidth == null ? 4 : shrinkWidth;
    }
    function hasShrinkWidth(cols) {
        for (var _i = 0, cols_2 = cols; _i < cols_2.length; _i++) {
            var col = cols_2[_i];
            if (col.width === 'shrink') {
                return true;
            }
        }
        return false;
    }
    function getScrollGridClassNames(liquid, context) {
        var classNames = [
            'fc-scrollgrid',
            context.theme.getClass('table'),
        ];
        if (liquid) {
            classNames.push('fc-scrollgrid-liquid');
        }
        return classNames;
    }
    function getSectionClassNames(sectionConfig, wholeTableVGrow) {
        var classNames = [
            'fc-scrollgrid-section',
            "fc-scrollgrid-section-" + sectionConfig.type,
            sectionConfig.className, // used?
        ];
        if (wholeTableVGrow && sectionConfig.liquid && sectionConfig.maxHeight == null) {
            classNames.push('fc-scrollgrid-section-liquid');
        }
        if (sectionConfig.isSticky) {
            classNames.push('fc-scrollgrid-section-sticky');
        }
        return classNames;
    }
    function renderScrollShim(arg) {
        return (createElement("div", { className: "fc-scrollgrid-sticky-shim", style: {
                width: arg.clientWidth,
                minWidth: arg.tableMinWidth,
            } }));
    }
    function getStickyHeaderDates(options) {
        var stickyHeaderDates = options.stickyHeaderDates;
        if (stickyHeaderDates == null || stickyHeaderDates === 'auto') {
            stickyHeaderDates = options.height === 'auto' || options.viewHeight === 'auto';
        }
        return stickyHeaderDates;
    }
    function getStickyFooterScrollbar(options) {
        var stickyFooterScrollbar = options.stickyFooterScrollbar;
        if (stickyFooterScrollbar == null || stickyFooterScrollbar === 'auto') {
            stickyFooterScrollbar = options.height === 'auto' || options.viewHeight === 'auto';
        }
        return stickyFooterScrollbar;
    }

    var SimpleScrollGrid = /** @class */ (function (_super) {
        __extends(SimpleScrollGrid, _super);
        function SimpleScrollGrid() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.processCols = memoize(function (a) { return a; }, isColPropsEqual); // so we get same \`cols\` props every time
            // yucky to memoize VNodes, but much more efficient for consumers
            _this.renderMicroColGroup = memoize(renderMicroColGroup);
            _this.scrollerRefs = new RefMap();
            _this.scrollerElRefs = new RefMap(_this._handleScrollerEl.bind(_this));
            _this.state = {
                shrinkWidth: null,
                forceYScrollbars: false,
                scrollerClientWidths: {},
                scrollerClientHeights: {},
            };
            // TODO: can do a really simple print-view. dont need to join rows
            _this.handleSizing = function () {
                _this.setState(__assign({ shrinkWidth: _this.computeShrinkWidth() }, _this.computeScrollerDims()));
            };
            return _this;
        }
        SimpleScrollGrid.prototype.render = function () {
            var _a = this, props = _a.props, state = _a.state, context = _a.context;
            var sectionConfigs = props.sections || [];
            var cols = this.processCols(props.cols);
            var microColGroupNode = this.renderMicroColGroup(cols, state.shrinkWidth);
            var classNames = getScrollGridClassNames(props.liquid, context);
            if (props.collapsibleWidth) {
                classNames.push('fc-scrollgrid-collapsible');
            }
            // TODO: make DRY
            var configCnt = sectionConfigs.length;
            var configI = 0;
            var currentConfig;
            var headSectionNodes = [];
            var bodySectionNodes = [];
            var footSectionNodes = [];
            while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'header') {
                headSectionNodes.push(this.renderSection(currentConfig, microColGroupNode));
                configI += 1;
            }
            while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'body') {
                bodySectionNodes.push(this.renderSection(currentConfig, microColGroupNode));
                configI += 1;
            }
            while (configI < configCnt && (currentConfig = sectionConfigs[configI]).type === 'footer') {
                footSectionNodes.push(this.renderSection(currentConfig, microColGroupNode));
                configI += 1;
            }
            // firefox bug: when setting height on table and there is a thead or tfoot,
            // the necessary height:100% on the liquid-height body section forces the *whole* table to be taller. (bug #5524)
            // use getCanVGrowWithinCell as a way to detect table-stupid firefox.
            // if so, use a simpler dom structure, jam everything into a lone tbody.
            var isBuggy = !getCanVGrowWithinCell();
            return createElement('table', {
                className: classNames.join(' '),
                style: { height: props.height },
            }, Boolean(!isBuggy && headSectionNodes.length) && createElement.apply(void 0, __spreadArray(['thead', {}], headSectionNodes)), Boolean(!isBuggy && bodySectionNodes.length) && createElement.apply(void 0, __spreadArray(['tbody', {}], bodySectionNodes)), Boolean(!isBuggy && footSectionNodes.length) && createElement.apply(void 0, __spreadArray(['tfoot', {}], footSectionNodes)), isBuggy && createElement.apply(void 0, __spreadArray(__spreadArray(__spreadArray(['tbody', {}], headSectionNodes), bodySectionNodes), footSectionNodes)));
        };
        SimpleScrollGrid.prototype.renderSection = function (sectionConfig, microColGroupNode) {
            if ('outerContent' in sectionConfig) {
                return (createElement(Fragment, { key: sectionConfig.key }, sectionConfig.outerContent));
            }
            return (createElement("tr", { key: sectionConfig.key, className: getSectionClassNames(sectionConfig, this.props.liquid).join(' ') }, this.renderChunkTd(sectionConfig, microColGroupNode, sectionConfig.chunk)));
        };
        SimpleScrollGrid.prototype.renderChunkTd = function (sectionConfig, microColGroupNode, chunkConfig) {
            if ('outerContent' in chunkConfig) {
                return chunkConfig.outerContent;
            }
            var props = this.props;
            var _a = this.state, forceYScrollbars = _a.forceYScrollbars, scrollerClientWidths = _a.scrollerClientWidths, scrollerClientHeights = _a.scrollerClientHeights;
            var needsYScrolling = getAllowYScrolling(props, sectionConfig); // TODO: do lazily. do in section config?
            var isLiquid = getSectionHasLiquidHeight(props, sectionConfig);
            // for \`!props.liquid\` - is WHOLE scrollgrid natural height?
            // TODO: do same thing in advanced scrollgrid? prolly not b/c always has horizontal scrollbars
            var overflowY = !props.liquid ? 'visible' :
                forceYScrollbars ? 'scroll' :
                    !needsYScrolling ? 'hidden' :
                        'auto';
            var sectionKey = sectionConfig.key;
            var content = renderChunkContent(sectionConfig, chunkConfig, {
                tableColGroupNode: microColGroupNode,
                tableMinWidth: '',
                clientWidth: (!props.collapsibleWidth && scrollerClientWidths[sectionKey] !== undefined) ? scrollerClientWidths[sectionKey] : null,
                clientHeight: scrollerClientHeights[sectionKey] !== undefined ? scrollerClientHeights[sectionKey] : null,
                expandRows: sectionConfig.expandRows,
                syncRowHeights: false,
                rowSyncHeights: [],
                reportRowHeightChange: function () { },
            });
            return (createElement("td", { ref: chunkConfig.elRef },
                createElement("div", { className: "fc-scroller-harness" + (isLiquid ? ' fc-scroller-harness-liquid' : '') },
                    createElement(Scroller, { ref: this.scrollerRefs.createRef(sectionKey), elRef: this.scrollerElRefs.createRef(sectionKey), overflowY: overflowY, overflowX: !props.liquid ? 'visible' : 'hidden' /* natural height? */, maxHeight: sectionConfig.maxHeight, liquid: isLiquid, liquidIsAbsolute // because its within a harness
                        : true }, content))));
        };
        SimpleScrollGrid.prototype._handleScrollerEl = function (scrollerEl, key) {
            var section = getSectionByKey(this.props.sections, key);
            if (section) {
                setRef(section.chunk.scrollerElRef, scrollerEl);
            }
        };
        SimpleScrollGrid.prototype.componentDidMount = function () {
            this.handleSizing();
            this.context.addResizeHandler(this.handleSizing);
        };
        SimpleScrollGrid.prototype.componentDidUpdate = function () {
            // TODO: need better solution when state contains non-sizing things
            this.handleSizing();
        };
        SimpleScrollGrid.prototype.componentWillUnmount = function () {
            this.context.removeResizeHandler(this.handleSizing);
        };
        SimpleScrollGrid.prototype.computeShrinkWidth = function () {
            return hasShrinkWidth(this.props.cols)
                ? computeShrinkWidth(this.scrollerElRefs.getAll())
                : 0;
        };
        SimpleScrollGrid.prototype.computeScrollerDims = function () {
            var scrollbarWidth = getScrollbarWidths();
            var _a = this, scrollerRefs = _a.scrollerRefs, scrollerElRefs = _a.scrollerElRefs;
            var forceYScrollbars = false;
            var scrollerClientWidths = {};
            var scrollerClientHeights = {};
            for (var sectionKey in scrollerRefs.currentMap) {
                var scroller = scrollerRefs.currentMap[sectionKey];
                if (scroller && scroller.needsYScrolling()) {
                    forceYScrollbars = true;
                    break;
                }
            }
            for (var _i = 0, _b = this.props.sections; _i < _b.length; _i++) {
                var section = _b[_i];
                var sectionKey = section.key;
                var scrollerEl = scrollerElRefs.currentMap[sectionKey];
                if (scrollerEl) {
                    var harnessEl = scrollerEl.parentNode; // TODO: weird way to get this. need harness b/c doesn't include table borders
                    scrollerClientWidths[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().width - (forceYScrollbars
                        ? scrollbarWidth.y // use global because scroller might not have scrollbars yet but will need them in future
                        : 0));
                    scrollerClientHeights[sectionKey] = Math.floor(harnessEl.getBoundingClientRect().height);
                }
            }
            return { forceYScrollbars: forceYScrollbars, scrollerClientWidths: scrollerClientWidths, scrollerClientHeights: scrollerClientHeights };
        };
        return SimpleScrollGrid;
    }(BaseComponent));
    SimpleScrollGrid.addStateEquality({
        scrollerClientWidths: isPropsEqual,
        scrollerClientHeights: isPropsEqual,
    });
    function getSectionByKey(sections, key) {
        for (var _i = 0, sections_1 = sections; _i < sections_1.length; _i++) {
            var section = sections_1[_i];
            if (section.key === key) {
                return section;
            }
        }
        return null;
    }

    var EventRoot = /** @class */ (function (_super) {
        __extends(EventRoot, _super);
        function EventRoot() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.elRef = createRef();
            return _this;
        }
        EventRoot.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            var options = context.options;
            var seg = props.seg;
            var eventRange = seg.eventRange;
            var ui = eventRange.ui;
            var hookProps = {
                event: new EventApi(context, eventRange.def, eventRange.instance),
                view: context.viewApi,
                timeText: props.timeText,
                textColor: ui.textColor,
                backgroundColor: ui.backgroundColor,
                borderColor: ui.borderColor,
                isDraggable: !props.disableDragging && computeSegDraggable(seg, context),
                isStartResizable: !props.disableResizing && computeSegStartResizable(seg, context),
                isEndResizable: !props.disableResizing && computeSegEndResizable(seg),
                isMirror: Boolean(props.isDragging || props.isResizing || props.isDateSelecting),
                isStart: Boolean(seg.isStart),
                isEnd: Boolean(seg.isEnd),
                isPast: Boolean(props.isPast),
                isFuture: Boolean(props.isFuture),
                isToday: Boolean(props.isToday),
                isSelected: Boolean(props.isSelected),
                isDragging: Boolean(props.isDragging),
                isResizing: Boolean(props.isResizing),
            };
            var standardClassNames = getEventClassNames(hookProps).concat(ui.classNames);
            return (createElement(RenderHook, { hookProps: hookProps, classNames: options.eventClassNames, content: options.eventContent, defaultContent: props.defaultContent, didMount: options.eventDidMount, willUnmount: options.eventWillUnmount, elRef: this.elRef }, function (rootElRef, customClassNames, innerElRef, innerContent) { return props.children(rootElRef, standardClassNames.concat(customClassNames), innerElRef, innerContent, hookProps); }));
        };
        EventRoot.prototype.componentDidMount = function () {
            setElSeg(this.elRef.current, this.props.seg);
        };
        /*
        need to re-assign seg to the element if seg changes, even if the element is the same
        */
        EventRoot.prototype.componentDidUpdate = function (prevProps) {
            var seg = this.props.seg;
            if (seg !== prevProps.seg) {
                setElSeg(this.elRef.current, seg);
            }
        };
        return EventRoot;
    }(BaseComponent));

    // should not be a purecomponent
    var StandardEvent = /** @class */ (function (_super) {
        __extends(StandardEvent, _super);
        function StandardEvent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        StandardEvent.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            var seg = props.seg;
            var timeFormat = context.options.eventTimeFormat || props.defaultTimeFormat;
            var timeText = buildSegTimeText(seg, timeFormat, context, props.defaultDisplayEventTime, props.defaultDisplayEventEnd);
            return (createElement(EventRoot, { seg: seg, timeText: timeText, disableDragging: props.disableDragging, disableResizing: props.disableResizing, defaultContent: props.defaultContent || renderInnerContent$4, isDragging: props.isDragging, isResizing: props.isResizing, isDateSelecting: props.isDateSelecting, isSelected: props.isSelected, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday }, function (rootElRef, classNames, innerElRef, innerContent, hookProps) { return (createElement("a", __assign({ className: props.extraClassNames.concat(classNames).join(' '), style: {
                    borderColor: hookProps.borderColor,
                    backgroundColor: hookProps.backgroundColor,
                }, ref: rootElRef }, getSegAnchorAttrs$1(seg)),
                createElement("div", { className: "fc-event-main", ref: innerElRef, style: { color: hookProps.textColor } }, innerContent),
                hookProps.isStartResizable &&
                    createElement("div", { className: "fc-event-resizer fc-event-resizer-start" }),
                hookProps.isEndResizable &&
                    createElement("div", { className: "fc-event-resizer fc-event-resizer-end" }))); }));
        };
        return StandardEvent;
    }(BaseComponent));
    function renderInnerContent$4(innerProps) {
        return (createElement("div", { className: "fc-event-main-frame" },
            innerProps.timeText && (createElement("div", { className: "fc-event-time" }, innerProps.timeText)),
            createElement("div", { className: "fc-event-title-container" },
                createElement("div", { className: "fc-event-title fc-sticky" }, innerProps.event.title || createElement(Fragment, null, "\\u00A0")))));
    }
    function getSegAnchorAttrs$1(seg) {
        var url = seg.eventRange.def.url;
        return url ? { href: url } : {};
    }

    var NowIndicatorRoot = function (props) { return (createElement(ViewContextType.Consumer, null, function (context) {
        var options = context.options;
        var hookProps = {
            isAxis: props.isAxis,
            date: context.dateEnv.toDate(props.date),
            view: context.viewApi,
        };
        return (createElement(RenderHook, { hookProps: hookProps, classNames: options.nowIndicatorClassNames, content: options.nowIndicatorContent, didMount: options.nowIndicatorDidMount, willUnmount: options.nowIndicatorWillUnmount }, props.children));
    })); };

    var DAY_NUM_FORMAT = createFormatter({ day: 'numeric' });
    var DayCellContent = /** @class */ (function (_super) {
        __extends(DayCellContent, _super);
        function DayCellContent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        DayCellContent.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            var options = context.options;
            var hookProps = refineDayCellHookProps({
                date: props.date,
                dateProfile: props.dateProfile,
                todayRange: props.todayRange,
                showDayNumber: props.showDayNumber,
                extraProps: props.extraHookProps,
                viewApi: context.viewApi,
                dateEnv: context.dateEnv,
            });
            return (createElement(ContentHook, { hookProps: hookProps, content: options.dayCellContent, defaultContent: props.defaultContent }, props.children));
        };
        return DayCellContent;
    }(BaseComponent));
    function refineDayCellHookProps(raw) {
        var date = raw.date, dateEnv = raw.dateEnv;
        var dayMeta = getDateMeta(date, raw.todayRange, null, raw.dateProfile);
        return __assign(__assign(__assign({ date: dateEnv.toDate(date), view: raw.viewApi }, dayMeta), { dayNumberText: raw.showDayNumber ? dateEnv.format(date, DAY_NUM_FORMAT) : '' }), raw.extraProps);
    }

    var DayCellRoot = /** @class */ (function (_super) {
        __extends(DayCellRoot, _super);
        function DayCellRoot() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.refineHookProps = memoizeObjArg(refineDayCellHookProps);
            _this.normalizeClassNames = buildClassNameNormalizer();
            return _this;
        }
        DayCellRoot.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            var options = context.options;
            var hookProps = this.refineHookProps({
                date: props.date,
                dateProfile: props.dateProfile,
                todayRange: props.todayRange,
                showDayNumber: props.showDayNumber,
                extraProps: props.extraHookProps,
                viewApi: context.viewApi,
                dateEnv: context.dateEnv,
            });
            var classNames = getDayClassNames(hookProps, context.theme).concat(hookProps.isDisabled
                ? [] // don't use custom classNames if disabled
                : this.normalizeClassNames(options.dayCellClassNames, hookProps));
            var dataAttrs = hookProps.isDisabled ? {} : {
                'data-date': formatDayString(props.date),
            };
            return (createElement(MountHook, { hookProps: hookProps, didMount: options.dayCellDidMount, willUnmount: options.dayCellWillUnmount, elRef: props.elRef }, function (rootElRef) { return props.children(rootElRef, classNames, dataAttrs, hookProps.isDisabled); }));
        };
        return DayCellRoot;
    }(BaseComponent));

    function renderFill(fillType) {
        return (createElement("div", { className: "fc-" + fillType }));
    }
    var BgEvent = function (props) { return (createElement(EventRoot, { defaultContent: renderInnerContent$3, seg: props.seg /* uselesss i think */, timeText: "", disableDragging: true, disableResizing: true, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday }, function (rootElRef, classNames, innerElRef, innerContent, hookProps) { return (createElement("div", { ref: rootElRef, className: ['fc-bg-event'].concat(classNames).join(' '), style: {
            backgroundColor: hookProps.backgroundColor,
        } }, innerContent)); })); };
    function renderInnerContent$3(props) {
        var title = props.event.title;
        return title && (createElement("div", { className: "fc-event-title" }, props.event.title));
    }

    var WeekNumberRoot = function (props) { return (createElement(ViewContextType.Consumer, null, function (context) {
        var dateEnv = context.dateEnv, options = context.options;
        var date = props.date;
        var format = options.weekNumberFormat || props.defaultFormat;
        var num = dateEnv.computeWeekNumber(date); // TODO: somehow use for formatting as well?
        var text = dateEnv.format(date, format);
        var hookProps = { num: num, text: text, date: date };
        return (createElement(RenderHook, { hookProps: hookProps, classNames: options.weekNumberClassNames, content: options.weekNumberContent, defaultContent: renderInner, didMount: options.weekNumberDidMount, willUnmount: options.weekNumberWillUnmount }, props.children));
    })); };
    function renderInner(innerProps) {
        return innerProps.text;
    }

    var PADDING_FROM_VIEWPORT = 10;
    var Popover = /** @class */ (function (_super) {
        __extends(Popover, _super);
        function Popover() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.handleRootEl = function (el) {
                _this.rootEl = el;
                if (_this.props.elRef) {
                    setRef(_this.props.elRef, el);
                }
            };
            // Triggered when the user clicks *anywhere* in the document, for the autoHide feature
            _this.handleDocumentMousedown = function (ev) {
                // only hide the popover if the click happened outside the popover
                var target = getEventTargetViaRoot(ev);
                if (!_this.rootEl.contains(target)) {
                    _this.handleCloseClick();
                }
            };
            _this.handleCloseClick = function () {
                var onClose = _this.props.onClose;
                if (onClose) {
                    onClose();
                }
            };
            return _this;
        }
        Popover.prototype.render = function () {
            var theme = this.context.theme;
            var props = this.props;
            var classNames = [
                'fc-popover',
                theme.getClass('popover'),
            ].concat(props.extraClassNames || []);
            return createPortal(createElement("div", __assign({ className: classNames.join(' ') }, props.extraAttrs, { ref: this.handleRootEl }),
                createElement("div", { className: 'fc-popover-header ' + theme.getClass('popoverHeader') },
                    createElement("span", { className: "fc-popover-title" }, props.title),
                    createElement("span", { className: 'fc-popover-close ' + theme.getIconClass('close'), onClick: this.handleCloseClick })),
                createElement("div", { className: 'fc-popover-body ' + theme.getClass('popoverContent') }, props.children)), props.parentEl);
        };
        Popover.prototype.componentDidMount = function () {
            document.addEventListener('mousedown', this.handleDocumentMousedown);
            this.updateSize();
        };
        Popover.prototype.componentWillUnmount = function () {
            document.removeEventListener('mousedown', this.handleDocumentMousedown);
        };
        Popover.prototype.updateSize = function () {
            var isRtl = this.context.isRtl;
            var _a = this.props, alignmentEl = _a.alignmentEl, alignGridTop = _a.alignGridTop;
            var rootEl = this.rootEl;
            var alignmentRect = computeClippedClientRect(alignmentEl);
            if (alignmentRect) {
                var popoverDims = rootEl.getBoundingClientRect();
                // position relative to viewport
                var popoverTop = alignGridTop
                    ? elementClosest(alignmentEl, '.fc-scrollgrid').getBoundingClientRect().top
                    : alignmentRect.top;
                var popoverLeft = isRtl ? alignmentRect.right - popoverDims.width : alignmentRect.left;
                // constrain
                popoverTop = Math.max(popoverTop, PADDING_FROM_VIEWPORT);
                popoverLeft = Math.min(popoverLeft, document.documentElement.clientWidth - PADDING_FROM_VIEWPORT - popoverDims.width);
                popoverLeft = Math.max(popoverLeft, PADDING_FROM_VIEWPORT);
                var origin_1 = rootEl.offsetParent.getBoundingClientRect();
                applyStyle(rootEl, {
                    top: popoverTop - origin_1.top,
                    left: popoverLeft - origin_1.left,
                });
            }
        };
        return Popover;
    }(BaseComponent));

    var MorePopover = /** @class */ (function (_super) {
        __extends(MorePopover, _super);
        function MorePopover() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.handleRootEl = function (rootEl) {
                _this.rootEl = rootEl;
                if (rootEl) {
                    _this.context.registerInteractiveComponent(_this, {
                        el: rootEl,
                        useEventCenter: false,
                    });
                }
                else {
                    _this.context.unregisterInteractiveComponent(_this);
                }
            };
            return _this;
        }
        MorePopover.prototype.render = function () {
            var _a = this.context, options = _a.options, dateEnv = _a.dateEnv;
            var props = this.props;
            var startDate = props.startDate, todayRange = props.todayRange, dateProfile = props.dateProfile;
            var title = dateEnv.format(startDate, options.dayPopoverFormat);
            return (createElement(DayCellRoot, { date: startDate, dateProfile: dateProfile, todayRange: todayRange, elRef: this.handleRootEl }, function (rootElRef, dayClassNames, dataAttrs) { return (createElement(Popover, { elRef: rootElRef, title: title, extraClassNames: ['fc-more-popover'].concat(dayClassNames), extraAttrs: dataAttrs /* TODO: make these time-based when not whole-day? */, parentEl: props.parentEl, alignmentEl: props.alignmentEl, alignGridTop: props.alignGridTop, onClose: props.onClose },
                createElement(DayCellContent, { date: startDate, dateProfile: dateProfile, todayRange: todayRange }, function (innerElRef, innerContent) { return (innerContent &&
                    createElement("div", { className: "fc-more-popover-misc", ref: innerElRef }, innerContent)); }),
                props.children)); }));
        };
        MorePopover.prototype.queryHit = function (positionLeft, positionTop, elWidth, elHeight) {
            var _a = this, rootEl = _a.rootEl, props = _a.props;
            if (positionLeft >= 0 && positionLeft < elWidth &&
                positionTop >= 0 && positionTop < elHeight) {
                return {
                    dateProfile: props.dateProfile,
                    dateSpan: __assign({ allDay: true, range: {
                            start: props.startDate,
                            end: props.endDate,
                        } }, props.extraDateSpan),
                    dayEl: rootEl,
                    rect: {
                        left: 0,
                        top: 0,
                        right: elWidth,
                        bottom: elHeight,
                    },
                    layer: 1, // important when comparing with hits from other components
                };
            }
            return null;
        };
        return MorePopover;
    }(DateComponent));

    var MoreLinkRoot = /** @class */ (function (_super) {
        __extends(MoreLinkRoot, _super);
        function MoreLinkRoot() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.linkElRef = createRef();
            _this.state = {
                isPopoverOpen: false,
            };
            _this.handleClick = function (ev) {
                var _a = _this, props = _a.props, context = _a.context;
                var moreLinkClick = context.options.moreLinkClick;
                var date = computeRange(props).start;
                function buildPublicSeg(seg) {
                    var _a = seg.eventRange, def = _a.def, instance = _a.instance, range = _a.range;
                    return {
                        event: new EventApi(context, def, instance),
                        start: context.dateEnv.toDate(range.start),
                        end: context.dateEnv.toDate(range.end),
                        isStart: seg.isStart,
                        isEnd: seg.isEnd,
                    };
                }
                if (typeof moreLinkClick === 'function') {
                    moreLinkClick = moreLinkClick({
                        date: date,
                        allDay: Boolean(props.allDayDate),
                        allSegs: props.allSegs.map(buildPublicSeg),
                        hiddenSegs: props.hiddenSegs.map(buildPublicSeg),
                        jsEvent: ev,
                        view: context.viewApi,
                    });
                }
                if (!moreLinkClick || moreLinkClick === 'popover') {
                    _this.setState({ isPopoverOpen: true });
                }
                else if (typeof moreLinkClick === 'string') { // a view name
                    context.calendarApi.zoomTo(date, moreLinkClick);
                }
            };
            _this.handlePopoverClose = function () {
                _this.setState({ isPopoverOpen: false });
            };
            return _this;
        }
        MoreLinkRoot.prototype.render = function () {
            var _this = this;
            var props = this.props;
            return (createElement(ViewContextType.Consumer, null, function (context) {
                var viewApi = context.viewApi, options = context.options, calendarApi = context.calendarApi;
                var moreLinkText = options.moreLinkText;
                var moreCnt = props.moreCnt;
                var range = computeRange(props);
                var hookProps = {
                    num: moreCnt,
                    shortText: "+" + moreCnt,
                    text: typeof moreLinkText === 'function'
                        ? moreLinkText.call(calendarApi, moreCnt)
                        : "+" + moreCnt + " " + moreLinkText,
                    view: viewApi,
                };
                return (createElement(Fragment, null,
                    Boolean(props.moreCnt) && (createElement(RenderHook, { elRef: _this.linkElRef, hookProps: hookProps, classNames: options.moreLinkClassNames, content: options.moreLinkContent, defaultContent: props.defaultContent || renderMoreLinkInner$1, didMount: options.moreLinkDidMount, willUnmount: options.moreLinkWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return props.children(rootElRef, ['fc-more-link'].concat(customClassNames), innerElRef, innerContent, _this.handleClick); })),
                    _this.state.isPopoverOpen && (createElement(MorePopover, { startDate: range.start, endDate: range.end, dateProfile: props.dateProfile, todayRange: props.todayRange, extraDateSpan: props.extraDateSpan, parentEl: _this.parentEl, alignmentEl: props.alignmentElRef.current, alignGridTop: props.alignGridTop, onClose: _this.handlePopoverClose }, props.popoverContent()))));
            }));
        };
        MoreLinkRoot.prototype.componentDidMount = function () {
            this.updateParentEl();
        };
        MoreLinkRoot.prototype.componentDidUpdate = function () {
            this.updateParentEl();
        };
        MoreLinkRoot.prototype.updateParentEl = function () {
            if (this.linkElRef.current) {
                this.parentEl = elementClosest(this.linkElRef.current, '.fc-view-harness');
            }
        };
        return MoreLinkRoot;
    }(BaseComponent));
    function renderMoreLinkInner$1(props) {
        return props.text;
    }
    function computeRange(props) {
        if (props.allDayDate) {
            return {
                start: props.allDayDate,
                end: addDays(props.allDayDate, 1),
            };
        }
        var hiddenSegs = props.hiddenSegs;
        return {
            start: computeEarliestSegStart(hiddenSegs),
            end: computeLatestSegEnd(hiddenSegs),
        };
    }
    function computeEarliestSegStart(segs) {
        return segs.reduce(pickEarliestStart).eventRange.range.start;
    }
    function pickEarliestStart(seg0, seg1) {
        return seg0.eventRange.range.start < seg1.eventRange.range.start ? seg0 : seg1;
    }
    function computeLatestSegEnd(segs) {
        return segs.reduce(pickLatestEnd).eventRange.range.end;
    }
    function pickLatestEnd(seg0, seg1) {
        return seg0.eventRange.range.end > seg1.eventRange.range.end ? seg0 : seg1;
    }

    // exports
    // --------------------------------------------------------------------------------------------------
    var version = '5.9.0'; // important to type it, so .d.ts has generic string

    var Calendar = /** @class */ (function (_super) {
        __extends(Calendar, _super);
        function Calendar(el, optionOverrides) {
            if (optionOverrides === void 0) { optionOverrides = {}; }
            var _this = _super.call(this) || this;
            _this.isRendering = false;
            _this.isRendered = false;
            _this.currentClassNames = [];
            _this.customContentRenderId = 0; // will affect custom generated classNames?
            _this.handleAction = function (action) {
                // actions we know we want to render immediately
                switch (action.type) {
                    case 'SET_EVENT_DRAG':
                    case 'SET_EVENT_RESIZE':
                        _this.renderRunner.tryDrain();
                }
            };
            _this.handleData = function (data) {
                _this.currentData = data;
                _this.renderRunner.request(data.calendarOptions.rerenderDelay);
            };
            _this.handleRenderRequest = function () {
                if (_this.isRendering) {
                    _this.isRendered = true;
                    var currentData_1 = _this.currentData;
                    render(createElement(CalendarRoot, { options: currentData_1.calendarOptions, theme: currentData_1.theme, emitter: currentData_1.emitter }, function (classNames, height, isHeightAuto, forPrint) {
                        _this.setClassNames(classNames);
                        _this.setHeight(height);
                        return (createElement(CustomContentRenderContext.Provider, { value: _this.customContentRenderId },
                            createElement(CalendarContent, __assign({ isHeightAuto: isHeightAuto, forPrint: forPrint }, currentData_1))));
                    }), _this.el);
                }
                else if (_this.isRendered) {
                    _this.isRendered = false;
                    unmountComponentAtNode(_this.el);
                    _this.setClassNames([]);
                    _this.setHeight('');
                }
                flushToDom();
            };
            _this.el = el;
            _this.renderRunner = new DelayedRunner(_this.handleRenderRequest);
            new CalendarDataManager({
                optionOverrides: optionOverrides,
                calendarApi: _this,
                onAction: _this.handleAction,
                onData: _this.handleData,
            });
            return _this;
        }
        Object.defineProperty(Calendar.prototype, "view", {
            get: function () { return this.currentData.viewApi; } // for public API
            ,
            enumerable: false,
            configurable: true
        });
        Calendar.prototype.render = function () {
            var wasRendering = this.isRendering;
            if (!wasRendering) {
                this.isRendering = true;
            }
            else {
                this.customContentRenderId += 1;
            }
            this.renderRunner.request();
            if (wasRendering) {
                this.updateSize();
            }
        };
        Calendar.prototype.destroy = function () {
            if (this.isRendering) {
                this.isRendering = false;
                this.renderRunner.request();
            }
        };
        Calendar.prototype.updateSize = function () {
            _super.prototype.updateSize.call(this);
            flushToDom();
        };
        Calendar.prototype.batchRendering = function (func) {
            this.renderRunner.pause('batchRendering');
            func();
            this.renderRunner.resume('batchRendering');
        };
        Calendar.prototype.pauseRendering = function () {
            this.renderRunner.pause('pauseRendering');
        };
        Calendar.prototype.resumeRendering = function () {
            this.renderRunner.resume('pauseRendering', true);
        };
        Calendar.prototype.resetOptions = function (optionOverrides, append) {
            this.currentDataManager.resetOptions(optionOverrides, append);
        };
        Calendar.prototype.setClassNames = function (classNames) {
            if (!isArraysEqual(classNames, this.currentClassNames)) {
                var classList = this.el.classList;
                for (var _i = 0, _a = this.currentClassNames; _i < _a.length; _i++) {
                    var className = _a[_i];
                    classList.remove(className);
                }
                for (var _b = 0, classNames_1 = classNames; _b < classNames_1.length; _b++) {
                    var className = classNames_1[_b];
                    classList.add(className);
                }
                this.currentClassNames = classNames;
            }
        };
        Calendar.prototype.setHeight = function (height) {
            applyStyleProp(this.el, 'height', height);
        };
        return Calendar;
    }(CalendarApi));

    config.touchMouseIgnoreWait = 500;
    var ignoreMouseDepth = 0;
    var listenerCnt = 0;
    var isWindowTouchMoveCancelled = false;
    /*
    Uses a "pointer" abstraction, which monitors UI events for both mouse and touch.
    Tracks when the pointer "drags" on a certain element, meaning down+move+up.

    Also, tracks if there was touch-scrolling.
    Also, can prevent touch-scrolling from happening.
    Also, can fire pointermove events when scrolling happens underneath, even when no real pointer movement.

    emits:
    - pointerdown
    - pointermove
    - pointerup
    */
    var PointerDragging = /** @class */ (function () {
        function PointerDragging(containerEl) {
            var _this = this;
            this.subjectEl = null;
            // options that can be directly assigned by caller
            this.selector = ''; // will cause subjectEl in all emitted events to be this element
            this.handleSelector = '';
            this.shouldIgnoreMove = false;
            this.shouldWatchScroll = true; // for simulating pointermove on scroll
            // internal states
            this.isDragging = false;
            this.isTouchDragging = false;
            this.wasTouchScroll = false;
            // Mouse
            // ----------------------------------------------------------------------------------------------------
            this.handleMouseDown = function (ev) {
                if (!_this.shouldIgnoreMouse() &&
                    isPrimaryMouseButton(ev) &&
                    _this.tryStart(ev)) {
                    var pev = _this.createEventFromMouse(ev, true);
                    _this.emitter.trigger('pointerdown', pev);
                    _this.initScrollWatch(pev);
                    if (!_this.shouldIgnoreMove) {
                        document.addEventListener('mousemove', _this.handleMouseMove);
                    }
                    document.addEventListener('mouseup', _this.handleMouseUp);
                }
            };
            this.handleMouseMove = function (ev) {
                var pev = _this.createEventFromMouse(ev);
                _this.recordCoords(pev);
                _this.emitter.trigger('pointermove', pev);
            };
            this.handleMouseUp = function (ev) {
                document.removeEventListener('mousemove', _this.handleMouseMove);
                document.removeEventListener('mouseup', _this.handleMouseUp);
                _this.emitter.trigger('pointerup', _this.createEventFromMouse(ev));
                _this.cleanup(); // call last so that pointerup has access to props
            };
            // Touch
            // ----------------------------------------------------------------------------------------------------
            this.handleTouchStart = function (ev) {
                if (_this.tryStart(ev)) {
                    _this.isTouchDragging = true;
                    var pev = _this.createEventFromTouch(ev, true);
                    _this.emitter.trigger('pointerdown', pev);
                    _this.initScrollWatch(pev);
                    // unlike mouse, need to attach to target, not document
                    // https://stackoverflow.com/a/45760014
                    var targetEl = ev.target;
                    if (!_this.shouldIgnoreMove) {
                        targetEl.addEventListener('touchmove', _this.handleTouchMove);
                    }
                    targetEl.addEventListener('touchend', _this.handleTouchEnd);
                    targetEl.addEventListener('touchcancel', _this.handleTouchEnd); // treat it as a touch end
                    // attach a handler to get called when ANY scroll action happens on the page.
                    // this was impossible to do with normal on/off because 'scroll' doesn't bubble.
                    // http://stackoverflow.com/a/32954565/96342
                    window.addEventListener('scroll', _this.handleTouchScroll, true);
                }
            };
            this.handleTouchMove = function (ev) {
                var pev = _this.createEventFromTouch(ev);
                _this.recordCoords(pev);
                _this.emitter.trigger('pointermove', pev);
            };
            this.handleTouchEnd = function (ev) {
                if (_this.isDragging) { // done to guard against touchend followed by touchcancel
                    var targetEl = ev.target;
                    targetEl.removeEventListener('touchmove', _this.handleTouchMove);
                    targetEl.removeEventListener('touchend', _this.handleTouchEnd);
                    targetEl.removeEventListener('touchcancel', _this.handleTouchEnd);
                    window.removeEventListener('scroll', _this.handleTouchScroll, true); // useCaptured=true
                    _this.emitter.trigger('pointerup', _this.createEventFromTouch(ev));
                    _this.cleanup(); // call last so that pointerup has access to props
                    _this.isTouchDragging = false;
                    startIgnoringMouse();
                }
            };
            this.handleTouchScroll = function () {
                _this.wasTouchScroll = true;
            };
            this.handleScroll = function (ev) {
                if (!_this.shouldIgnoreMove) {
                    var pageX = (window.pageXOffset - _this.prevScrollX) + _this.prevPageX;
                    var pageY = (window.pageYOffset - _this.prevScrollY) + _this.prevPageY;
                    _this.emitter.trigger('pointermove', {
                        origEvent: ev,
                        isTouch: _this.isTouchDragging,
                        subjectEl: _this.subjectEl,
                        pageX: pageX,
                        pageY: pageY,
                        deltaX: pageX - _this.origPageX,
                        deltaY: pageY - _this.origPageY,
                    });
                }
            };
            this.containerEl = containerEl;
            this.emitter = new Emitter();
            containerEl.addEventListener('mousedown', this.handleMouseDown);
            containerEl.addEventListener('touchstart', this.handleTouchStart, { passive: true });
            listenerCreated();
        }
        PointerDragging.prototype.destroy = function () {
            this.containerEl.removeEventListener('mousedown', this.handleMouseDown);
            this.containerEl.removeEventListener('touchstart', this.handleTouchStart, { passive: true });
            listenerDestroyed();
        };
        PointerDragging.prototype.tryStart = function (ev) {
            var subjectEl = this.querySubjectEl(ev);
            var downEl = ev.target;
            if (subjectEl &&
                (!this.handleSelector || elementClosest(downEl, this.handleSelector))) {
                this.subjectEl = subjectEl;
                this.isDragging = true; // do this first so cancelTouchScroll will work
                this.wasTouchScroll = false;
                return true;
            }
            return false;
        };
        PointerDragging.prototype.cleanup = function () {
            isWindowTouchMoveCancelled = false;
            this.isDragging = false;
            this.subjectEl = null;
            // keep wasTouchScroll around for later access
            this.destroyScrollWatch();
        };
        PointerDragging.prototype.querySubjectEl = function (ev) {
            if (this.selector) {
                return elementClosest(ev.target, this.selector);
            }
            return this.containerEl;
        };
        PointerDragging.prototype.shouldIgnoreMouse = function () {
            return ignoreMouseDepth || this.isTouchDragging;
        };
        // can be called by user of this class, to cancel touch-based scrolling for the current drag
        PointerDragging.prototype.cancelTouchScroll = function () {
            if (this.isDragging) {
                isWindowTouchMoveCancelled = true;
            }
        };
        // Scrolling that simulates pointermoves
        // ----------------------------------------------------------------------------------------------------
        PointerDragging.prototype.initScrollWatch = function (ev) {
            if (this.shouldWatchScroll) {
                this.recordCoords(ev);
                window.addEventListener('scroll', this.handleScroll, true); // useCapture=true
            }
        };
        PointerDragging.prototype.recordCoords = function (ev) {
            if (this.shouldWatchScroll) {
                this.prevPageX = ev.pageX;
                this.prevPageY = ev.pageY;
                this.prevScrollX = window.pageXOffset;
                this.prevScrollY = window.pageYOffset;
            }
        };
        PointerDragging.prototype.destroyScrollWatch = function () {
            if (this.shouldWatchScroll) {
                window.removeEventListener('scroll', this.handleScroll, true); // useCaptured=true
            }
        };
        // Event Normalization
        // ----------------------------------------------------------------------------------------------------
        PointerDragging.prototype.createEventFromMouse = function (ev, isFirst) {
            var deltaX = 0;
            var deltaY = 0;
            // TODO: repeat code
            if (isFirst) {
                this.origPageX = ev.pageX;
                this.origPageY = ev.pageY;
            }
            else {
                deltaX = ev.pageX - this.origPageX;
                deltaY = ev.pageY - this.origPageY;
            }
            return {
                origEvent: ev,
                isTouch: false,
                subjectEl: this.subjectEl,
                pageX: ev.pageX,
                pageY: ev.pageY,
                deltaX: deltaX,
                deltaY: deltaY,
            };
        };
        PointerDragging.prototype.createEventFromTouch = function (ev, isFirst) {
            var touches = ev.touches;
            var pageX;
            var pageY;
            var deltaX = 0;
            var deltaY = 0;
            // if touch coords available, prefer,
            // because FF would give bad ev.pageX ev.pageY
            if (touches && touches.length) {
                pageX = touches[0].pageX;
                pageY = touches[0].pageY;
            }
            else {
                pageX = ev.pageX;
                pageY = ev.pageY;
            }
            // TODO: repeat code
            if (isFirst) {
                this.origPageX = pageX;
                this.origPageY = pageY;
            }
            else {
                deltaX = pageX - this.origPageX;
                deltaY = pageY - this.origPageY;
            }
            return {
                origEvent: ev,
                isTouch: true,
                subjectEl: this.subjectEl,
                pageX: pageX,
                pageY: pageY,
                deltaX: deltaX,
                deltaY: deltaY,
            };
        };
        return PointerDragging;
    }());
    // Returns a boolean whether this was a left mouse click and no ctrl key (which means right click on Mac)
    function isPrimaryMouseButton(ev) {
        return ev.button === 0 && !ev.ctrlKey;
    }
    // Ignoring fake mouse events generated by touch
    // ----------------------------------------------------------------------------------------------------
    function startIgnoringMouse() {
        ignoreMouseDepth += 1;
        setTimeout(function () {
            ignoreMouseDepth -= 1;
        }, config.touchMouseIgnoreWait);
    }
    // We want to attach touchmove as early as possible for Safari
    // ----------------------------------------------------------------------------------------------------
    function listenerCreated() {
        listenerCnt += 1;
        if (listenerCnt === 1) {
            window.addEventListener('touchmove', onWindowTouchMove, { passive: false });
        }
    }
    function listenerDestroyed() {
        listenerCnt -= 1;
        if (!listenerCnt) {
            window.removeEventListener('touchmove', onWindowTouchMove, { passive: false });
        }
    }
    function onWindowTouchMove(ev) {
        if (isWindowTouchMoveCancelled) {
            ev.preventDefault();
        }
    }

    /*
    An effect in which an element follows the movement of a pointer across the screen.
    The moving element is a clone of some other element.
    Must call start + handleMove + stop.
    */
    var ElementMirror = /** @class */ (function () {
        function ElementMirror() {
            this.isVisible = false; // must be explicitly enabled
            this.sourceEl = null;
            this.mirrorEl = null;
            this.sourceElRect = null; // screen coords relative to viewport
            // options that can be set directly by caller
            this.parentNode = document.body; // HIGHLY SUGGESTED to set this to sidestep ShadowDOM issues
            this.zIndex = 9999;
            this.revertDuration = 0;
        }
        ElementMirror.prototype.start = function (sourceEl, pageX, pageY) {
            this.sourceEl = sourceEl;
            this.sourceElRect = this.sourceEl.getBoundingClientRect();
            this.origScreenX = pageX - window.pageXOffset;
            this.origScreenY = pageY - window.pageYOffset;
            this.deltaX = 0;
            this.deltaY = 0;
            this.updateElPosition();
        };
        ElementMirror.prototype.handleMove = function (pageX, pageY) {
            this.deltaX = (pageX - window.pageXOffset) - this.origScreenX;
            this.deltaY = (pageY - window.pageYOffset) - this.origScreenY;
            this.updateElPosition();
        };
        // can be called before start
        ElementMirror.prototype.setIsVisible = function (bool) {
            if (bool) {
                if (!this.isVisible) {
                    if (this.mirrorEl) {
                        this.mirrorEl.style.display = '';
                    }
                    this.isVisible = bool; // needs to happen before updateElPosition
                    this.updateElPosition(); // because was not updating the position while invisible
                }
            }
            else if (this.isVisible) {
                if (this.mirrorEl) {
                    this.mirrorEl.style.display = 'none';
                }
                this.isVisible = bool;
            }
        };
        // always async
        ElementMirror.prototype.stop = function (needsRevertAnimation, callback) {
            var _this = this;
            var done = function () {
                _this.cleanup();
                callback();
            };
            if (needsRevertAnimation &&
                this.mirrorEl &&
                this.isVisible &&
                this.revertDuration && // if 0, transition won't work
                (this.deltaX || this.deltaY) // if same coords, transition won't work
            ) {
                this.doRevertAnimation(done, this.revertDuration);
            }
            else {
                setTimeout(done, 0);
            }
        };
        ElementMirror.prototype.doRevertAnimation = function (callback, revertDuration) {
            var mirrorEl = this.mirrorEl;
            var finalSourceElRect = this.sourceEl.getBoundingClientRect(); // because autoscrolling might have happened
            mirrorEl.style.transition =
                'top ' + revertDuration + 'ms,' +
                    'left ' + revertDuration + 'ms';
            applyStyle(mirrorEl, {
                left: finalSourceElRect.left,
                top: finalSourceElRect.top,
            });
            whenTransitionDone(mirrorEl, function () {
                mirrorEl.style.transition = '';
                callback();
            });
        };
        ElementMirror.prototype.cleanup = function () {
            if (this.mirrorEl) {
                removeElement(this.mirrorEl);
                this.mirrorEl = null;
            }
            this.sourceEl = null;
        };
        ElementMirror.prototype.updateElPosition = function () {
            if (this.sourceEl && this.isVisible) {
                applyStyle(this.getMirrorEl(), {
                    left: this.sourceElRect.left + this.deltaX,
                    top: this.sourceElRect.top + this.deltaY,
                });
            }
        };
        ElementMirror.prototype.getMirrorEl = function () {
            var sourceElRect = this.sourceElRect;
            var mirrorEl = this.mirrorEl;
            if (!mirrorEl) {
                mirrorEl = this.mirrorEl = this.sourceEl.cloneNode(true); // cloneChildren=true
                // we don't want long taps or any mouse interaction causing selection/menus.
                // would use preventSelection(), but that prevents selectstart, causing problems.
                mirrorEl.classList.add('fc-unselectable');
                mirrorEl.classList.add('fc-event-dragging');
                applyStyle(mirrorEl, {
                    position: 'fixed',
                    zIndex: this.zIndex,
                    visibility: '',
                    boxSizing: 'border-box',
                    width: sourceElRect.right - sourceElRect.left,
                    height: sourceElRect.bottom - sourceElRect.top,
                    right: 'auto',
                    bottom: 'auto',
                    margin: 0,
                });
                this.parentNode.appendChild(mirrorEl);
            }
            return mirrorEl;
        };
        return ElementMirror;
    }());

    /*
    Is a cache for a given element's scroll information (all the info that ScrollController stores)
    in addition the "client rectangle" of the element.. the area within the scrollbars.

    The cache can be in one of two modes:
    - doesListening:false - ignores when the container is scrolled by someone else
    - doesListening:true - watch for scrolling and update the cache
    */
    var ScrollGeomCache = /** @class */ (function (_super) {
        __extends(ScrollGeomCache, _super);
        function ScrollGeomCache(scrollController, doesListening) {
            var _this = _super.call(this) || this;
            _this.handleScroll = function () {
                _this.scrollTop = _this.scrollController.getScrollTop();
                _this.scrollLeft = _this.scrollController.getScrollLeft();
                _this.handleScrollChange();
            };
            _this.scrollController = scrollController;
            _this.doesListening = doesListening;
            _this.scrollTop = _this.origScrollTop = scrollController.getScrollTop();
            _this.scrollLeft = _this.origScrollLeft = scrollController.getScrollLeft();
            _this.scrollWidth = scrollController.getScrollWidth();
            _this.scrollHeight = scrollController.getScrollHeight();
            _this.clientWidth = scrollController.getClientWidth();
            _this.clientHeight = scrollController.getClientHeight();
            _this.clientRect = _this.computeClientRect(); // do last in case it needs cached values
            if (_this.doesListening) {
                _this.getEventTarget().addEventListener('scroll', _this.handleScroll);
            }
            return _this;
        }
        ScrollGeomCache.prototype.destroy = function () {
            if (this.doesListening) {
                this.getEventTarget().removeEventListener('scroll', this.handleScroll);
            }
        };
        ScrollGeomCache.prototype.getScrollTop = function () {
            return this.scrollTop;
        };
        ScrollGeomCache.prototype.getScrollLeft = function () {
            return this.scrollLeft;
        };
        ScrollGeomCache.prototype.setScrollTop = function (top) {
            this.scrollController.setScrollTop(top);
            if (!this.doesListening) {
                // we are not relying on the element to normalize out-of-bounds scroll values
                // so we need to sanitize ourselves
                this.scrollTop = Math.max(Math.min(top, this.getMaxScrollTop()), 0);
                this.handleScrollChange();
            }
        };
        ScrollGeomCache.prototype.setScrollLeft = function (top) {
            this.scrollController.setScrollLeft(top);
            if (!this.doesListening) {
                // we are not relying on the element to normalize out-of-bounds scroll values
                // so we need to sanitize ourselves
                this.scrollLeft = Math.max(Math.min(top, this.getMaxScrollLeft()), 0);
                this.handleScrollChange();
            }
        };
        ScrollGeomCache.prototype.getClientWidth = function () {
            return this.clientWidth;
        };
        ScrollGeomCache.prototype.getClientHeight = function () {
            return this.clientHeight;
        };
        ScrollGeomCache.prototype.getScrollWidth = function () {
            return this.scrollWidth;
        };
        ScrollGeomCache.prototype.getScrollHeight = function () {
            return this.scrollHeight;
        };
        ScrollGeomCache.prototype.handleScrollChange = function () {
        };
        return ScrollGeomCache;
    }(ScrollController));

    var ElementScrollGeomCache = /** @class */ (function (_super) {
        __extends(ElementScrollGeomCache, _super);
        function ElementScrollGeomCache(el, doesListening) {
            return _super.call(this, new ElementScrollController(el), doesListening) || this;
        }
        ElementScrollGeomCache.prototype.getEventTarget = function () {
            return this.scrollController.el;
        };
        ElementScrollGeomCache.prototype.computeClientRect = function () {
            return computeInnerRect(this.scrollController.el);
        };
        return ElementScrollGeomCache;
    }(ScrollGeomCache));

    var WindowScrollGeomCache = /** @class */ (function (_super) {
        __extends(WindowScrollGeomCache, _super);
        function WindowScrollGeomCache(doesListening) {
            return _super.call(this, new WindowScrollController(), doesListening) || this;
        }
        WindowScrollGeomCache.prototype.getEventTarget = function () {
            return window;
        };
        WindowScrollGeomCache.prototype.computeClientRect = function () {
            return {
                left: this.scrollLeft,
                right: this.scrollLeft + this.clientWidth,
                top: this.scrollTop,
                bottom: this.scrollTop + this.clientHeight,
            };
        };
        // the window is the only scroll object that changes it's rectangle relative
        // to the document's topleft as it scrolls
        WindowScrollGeomCache.prototype.handleScrollChange = function () {
            this.clientRect = this.computeClientRect();
        };
        return WindowScrollGeomCache;
    }(ScrollGeomCache));

    // If available we are using native "performance" API instead of "Date"
    // Read more about it on MDN:
    // https://developer.mozilla.org/en-US/docs/Web/API/Performance
    var getTime = typeof performance === 'function' ? performance.now : Date.now;
    /*
    For a pointer interaction, automatically scrolls certain scroll containers when the pointer
    approaches the edge.

    The caller must call start + handleMove + stop.
    */
    var AutoScroller = /** @class */ (function () {
        function AutoScroller() {
            var _this = this;
            // options that can be set by caller
            this.isEnabled = true;
            this.scrollQuery = [window, '.fc-scroller'];
            this.edgeThreshold = 50; // pixels
            this.maxVelocity = 300; // pixels per second
            // internal state
            this.pointerScreenX = null;
            this.pointerScreenY = null;
            this.isAnimating = false;
            this.scrollCaches = null;
            // protect against the initial pointerdown being too close to an edge and starting the scroll
            this.everMovedUp = false;
            this.everMovedDown = false;
            this.everMovedLeft = false;
            this.everMovedRight = false;
            this.animate = function () {
                if (_this.isAnimating) { // wasn't cancelled between animation calls
                    var edge = _this.computeBestEdge(_this.pointerScreenX + window.pageXOffset, _this.pointerScreenY + window.pageYOffset);
                    if (edge) {
                        var now = getTime();
                        _this.handleSide(edge, (now - _this.msSinceRequest) / 1000);
                        _this.requestAnimation(now);
                    }
                    else {
                        _this.isAnimating = false; // will stop animation
                    }
                }
            };
        }
        AutoScroller.prototype.start = function (pageX, pageY, scrollStartEl) {
            if (this.isEnabled) {
                this.scrollCaches = this.buildCaches(scrollStartEl);
                this.pointerScreenX = null;
                this.pointerScreenY = null;
                this.everMovedUp = false;
                this.everMovedDown = false;
                this.everMovedLeft = false;
                this.everMovedRight = false;
                this.handleMove(pageX, pageY);
            }
        };
        AutoScroller.prototype.handleMove = function (pageX, pageY) {
            if (this.isEnabled) {
                var pointerScreenX = pageX - window.pageXOffset;
                var pointerScreenY = pageY - window.pageYOffset;
                var yDelta = this.pointerScreenY === null ? 0 : pointerScreenY - this.pointerScreenY;
                var xDelta = this.pointerScreenX === null ? 0 : pointerScreenX - this.pointerScreenX;
                if (yDelta < 0) {
                    this.everMovedUp = true;
                }
                else if (yDelta > 0) {
                    this.everMovedDown = true;
                }
                if (xDelta < 0) {
                    this.everMovedLeft = true;
                }
                else if (xDelta > 0) {
                    this.everMovedRight = true;
                }
                this.pointerScreenX = pointerScreenX;
                this.pointerScreenY = pointerScreenY;
                if (!this.isAnimating) {
                    this.isAnimating = true;
                    this.requestAnimation(getTime());
                }
            }
        };
        AutoScroller.prototype.stop = function () {
            if (this.isEnabled) {
                this.isAnimating = false; // will stop animation
                for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                    var scrollCache = _a[_i];
                    scrollCache.destroy();
                }
                this.scrollCaches = null;
            }
        };
        AutoScroller.prototype.requestAnimation = function (now) {
            this.msSinceRequest = now;
            requestAnimationFrame(this.animate);
        };
        AutoScroller.prototype.handleSide = function (edge, seconds) {
            var scrollCache = edge.scrollCache;
            var edgeThreshold = this.edgeThreshold;
            var invDistance = edgeThreshold - edge.distance;
            var velocity = // the closer to the edge, the faster we scroll
             ((invDistance * invDistance) / (edgeThreshold * edgeThreshold)) * // quadratic
                this.maxVelocity * seconds;
            var sign = 1;
            switch (edge.name) {
                case 'left':
                    sign = -1;
                // falls through
                case 'right':
                    scrollCache.setScrollLeft(scrollCache.getScrollLeft() + velocity * sign);
                    break;
                case 'top':
                    sign = -1;
                // falls through
                case 'bottom':
                    scrollCache.setScrollTop(scrollCache.getScrollTop() + velocity * sign);
                    break;
            }
        };
        // left/top are relative to document topleft
        AutoScroller.prototype.computeBestEdge = function (left, top) {
            var edgeThreshold = this.edgeThreshold;
            var bestSide = null;
            for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                var scrollCache = _a[_i];
                var rect = scrollCache.clientRect;
                var leftDist = left - rect.left;
                var rightDist = rect.right - left;
                var topDist = top - rect.top;
                var bottomDist = rect.bottom - top;
                // completely within the rect?
                if (leftDist >= 0 && rightDist >= 0 && topDist >= 0 && bottomDist >= 0) {
                    if (topDist <= edgeThreshold && this.everMovedUp && scrollCache.canScrollUp() &&
                        (!bestSide || bestSide.distance > topDist)) {
                        bestSide = { scrollCache: scrollCache, name: 'top', distance: topDist };
                    }
                    if (bottomDist <= edgeThreshold && this.everMovedDown && scrollCache.canScrollDown() &&
                        (!bestSide || bestSide.distance > bottomDist)) {
                        bestSide = { scrollCache: scrollCache, name: 'bottom', distance: bottomDist };
                    }
                    if (leftDist <= edgeThreshold && this.everMovedLeft && scrollCache.canScrollLeft() &&
                        (!bestSide || bestSide.distance > leftDist)) {
                        bestSide = { scrollCache: scrollCache, name: 'left', distance: leftDist };
                    }
                    if (rightDist <= edgeThreshold && this.everMovedRight && scrollCache.canScrollRight() &&
                        (!bestSide || bestSide.distance > rightDist)) {
                        bestSide = { scrollCache: scrollCache, name: 'right', distance: rightDist };
                    }
                }
            }
            return bestSide;
        };
        AutoScroller.prototype.buildCaches = function (scrollStartEl) {
            return this.queryScrollEls(scrollStartEl).map(function (el) {
                if (el === window) {
                    return new WindowScrollGeomCache(false); // false = don't listen to user-generated scrolls
                }
                return new ElementScrollGeomCache(el, false); // false = don't listen to user-generated scrolls
            });
        };
        AutoScroller.prototype.queryScrollEls = function (scrollStartEl) {
            var els = [];
            for (var _i = 0, _a = this.scrollQuery; _i < _a.length; _i++) {
                var query = _a[_i];
                if (typeof query === 'object') {
                    els.push(query);
                }
                else {
                    els.push.apply(els, Array.prototype.slice.call(getElRoot(scrollStartEl).querySelectorAll(query)));
                }
            }
            return els;
        };
        return AutoScroller;
    }());

    /*
    Monitors dragging on an element. Has a number of high-level features:
    - minimum distance required before dragging
    - minimum wait time ("delay") before dragging
    - a mirror element that follows the pointer
    */
    var FeaturefulElementDragging = /** @class */ (function (_super) {
        __extends(FeaturefulElementDragging, _super);
        function FeaturefulElementDragging(containerEl, selector) {
            var _this = _super.call(this, containerEl) || this;
            _this.containerEl = containerEl;
            // options that can be directly set by caller
            // the caller can also set the PointerDragging's options as well
            _this.delay = null;
            _this.minDistance = 0;
            _this.touchScrollAllowed = true; // prevents drag from starting and blocks scrolling during drag
            _this.mirrorNeedsRevert = false;
            _this.isInteracting = false; // is the user validly moving the pointer? lasts until pointerup
            _this.isDragging = false; // is it INTENTFULLY dragging? lasts until after revert animation
            _this.isDelayEnded = false;
            _this.isDistanceSurpassed = false;
            _this.delayTimeoutId = null;
            _this.onPointerDown = function (ev) {
                if (!_this.isDragging) { // so new drag doesn't happen while revert animation is going
                    _this.isInteracting = true;
                    _this.isDelayEnded = false;
                    _this.isDistanceSurpassed = false;
                    preventSelection(document.body);
                    preventContextMenu(document.body);
                    // prevent links from being visited if there's an eventual drag.
                    // also prevents selection in older browsers (maybe?).
                    // not necessary for touch, besides, browser would complain about passiveness.
                    if (!ev.isTouch) {
                        ev.origEvent.preventDefault();
                    }
                    _this.emitter.trigger('pointerdown', ev);
                    if (_this.isInteracting && // not destroyed via pointerdown handler
                        !_this.pointer.shouldIgnoreMove) {
                        // actions related to initiating dragstart+dragmove+dragend...
                        _this.mirror.setIsVisible(false); // reset. caller must set-visible
                        _this.mirror.start(ev.subjectEl, ev.pageX, ev.pageY); // must happen on first pointer down
                        _this.startDelay(ev);
                        if (!_this.minDistance) {
                            _this.handleDistanceSurpassed(ev);
                        }
                    }
                }
            };
            _this.onPointerMove = function (ev) {
                if (_this.isInteracting) {
                    _this.emitter.trigger('pointermove', ev);
                    if (!_this.isDistanceSurpassed) {
                        var minDistance = _this.minDistance;
                        var distanceSq = void 0; // current distance from the origin, squared
                        var deltaX = ev.deltaX, deltaY = ev.deltaY;
                        distanceSq = deltaX * deltaX + deltaY * deltaY;
                        if (distanceSq >= minDistance * minDistance) { // use pythagorean theorem
                            _this.handleDistanceSurpassed(ev);
                        }
                    }
                    if (_this.isDragging) {
                        // a real pointer move? (not one simulated by scrolling)
                        if (ev.origEvent.type !== 'scroll') {
                            _this.mirror.handleMove(ev.pageX, ev.pageY);
                            _this.autoScroller.handleMove(ev.pageX, ev.pageY);
                        }
                        _this.emitter.trigger('dragmove', ev);
                    }
                }
            };
            _this.onPointerUp = function (ev) {
                if (_this.isInteracting) {
                    _this.isInteracting = false;
                    allowSelection(document.body);
                    allowContextMenu(document.body);
                    _this.emitter.trigger('pointerup', ev); // can potentially set mirrorNeedsRevert
                    if (_this.isDragging) {
                        _this.autoScroller.stop();
                        _this.tryStopDrag(ev); // which will stop the mirror
                    }
                    if (_this.delayTimeoutId) {
                        clearTimeout(_this.delayTimeoutId);
                        _this.delayTimeoutId = null;
                    }
                }
            };
            var pointer = _this.pointer = new PointerDragging(containerEl);
            pointer.emitter.on('pointerdown', _this.onPointerDown);
            pointer.emitter.on('pointermove', _this.onPointerMove);
            pointer.emitter.on('pointerup', _this.onPointerUp);
            if (selector) {
                pointer.selector = selector;
            }
            _this.mirror = new ElementMirror();
            _this.autoScroller = new AutoScroller();
            return _this;
        }
        FeaturefulElementDragging.prototype.destroy = function () {
            this.pointer.destroy();
            // HACK: simulate a pointer-up to end the current drag
            // TODO: fire 'dragend' directly and stop interaction. discourage use of pointerup event (b/c might not fire)
            this.onPointerUp({});
        };
        FeaturefulElementDragging.prototype.startDelay = function (ev) {
            var _this = this;
            if (typeof this.delay === 'number') {
                this.delayTimeoutId = setTimeout(function () {
                    _this.delayTimeoutId = null;
                    _this.handleDelayEnd(ev);
                }, this.delay); // not assignable to number!
            }
            else {
                this.handleDelayEnd(ev);
            }
        };
        FeaturefulElementDragging.prototype.handleDelayEnd = function (ev) {
            this.isDelayEnded = true;
            this.tryStartDrag(ev);
        };
        FeaturefulElementDragging.prototype.handleDistanceSurpassed = function (ev) {
            this.isDistanceSurpassed = true;
            this.tryStartDrag(ev);
        };
        FeaturefulElementDragging.prototype.tryStartDrag = function (ev) {
            if (this.isDelayEnded && this.isDistanceSurpassed) {
                if (!this.pointer.wasTouchScroll || this.touchScrollAllowed) {
                    this.isDragging = true;
                    this.mirrorNeedsRevert = false;
                    this.autoScroller.start(ev.pageX, ev.pageY, this.containerEl);
                    this.emitter.trigger('dragstart', ev);
                    if (this.touchScrollAllowed === false) {
                        this.pointer.cancelTouchScroll();
                    }
                }
            }
        };
        FeaturefulElementDragging.prototype.tryStopDrag = function (ev) {
            // .stop() is ALWAYS asynchronous, which we NEED because we want all pointerup events
            // that come from the document to fire beforehand. much more convenient this way.
            this.mirror.stop(this.mirrorNeedsRevert, this.stopDrag.bind(this, ev));
        };
        FeaturefulElementDragging.prototype.stopDrag = function (ev) {
            this.isDragging = false;
            this.emitter.trigger('dragend', ev);
        };
        // fill in the implementations...
        FeaturefulElementDragging.prototype.setIgnoreMove = function (bool) {
            this.pointer.shouldIgnoreMove = bool;
        };
        FeaturefulElementDragging.prototype.setMirrorIsVisible = function (bool) {
            this.mirror.setIsVisible(bool);
        };
        FeaturefulElementDragging.prototype.setMirrorNeedsRevert = function (bool) {
            this.mirrorNeedsRevert = bool;
        };
        FeaturefulElementDragging.prototype.setAutoScrollEnabled = function (bool) {
            this.autoScroller.isEnabled = bool;
        };
        return FeaturefulElementDragging;
    }(ElementDragging));

    /*
    When this class is instantiated, it records the offset of an element (relative to the document topleft),
    and continues to monitor scrolling, updating the cached coordinates if it needs to.
    Does not access the DOM after instantiation, so highly performant.

    Also keeps track of all scrolling/overflow:hidden containers that are parents of the given element
    and an determine if a given point is inside the combined clipping rectangle.
    */
    var OffsetTracker = /** @class */ (function () {
        function OffsetTracker(el) {
            this.origRect = computeRect(el);
            // will work fine for divs that have overflow:hidden
            this.scrollCaches = getClippingParents(el).map(function (scrollEl) { return new ElementScrollGeomCache(scrollEl, true); });
        }
        OffsetTracker.prototype.destroy = function () {
            for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                var scrollCache = _a[_i];
                scrollCache.destroy();
            }
        };
        OffsetTracker.prototype.computeLeft = function () {
            var left = this.origRect.left;
            for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                var scrollCache = _a[_i];
                left += scrollCache.origScrollLeft - scrollCache.getScrollLeft();
            }
            return left;
        };
        OffsetTracker.prototype.computeTop = function () {
            var top = this.origRect.top;
            for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                var scrollCache = _a[_i];
                top += scrollCache.origScrollTop - scrollCache.getScrollTop();
            }
            return top;
        };
        OffsetTracker.prototype.isWithinClipping = function (pageX, pageY) {
            var point = { left: pageX, top: pageY };
            for (var _i = 0, _a = this.scrollCaches; _i < _a.length; _i++) {
                var scrollCache = _a[_i];
                if (!isIgnoredClipping(scrollCache.getEventTarget()) &&
                    !pointInsideRect(point, scrollCache.clientRect)) {
                    return false;
                }
            }
            return true;
        };
        return OffsetTracker;
    }());
    // certain clipping containers should never constrain interactions, like <html> and <body>
    // https://github.com/fullcalendar/fullcalendar/issues/3615
    function isIgnoredClipping(node) {
        var tagName = node.tagName;
        return tagName === 'HTML' || tagName === 'BODY';
    }

    /*
    Tracks movement over multiple droppable areas (aka "hits")
    that exist in one or more DateComponents.
    Relies on an existing draggable.

    emits:
    - pointerdown
    - dragstart
    - hitchange - fires initially, even if not over a hit
    - pointerup
    - (hitchange - again, to null, if ended over a hit)
    - dragend
    */
    var HitDragging = /** @class */ (function () {
        function HitDragging(dragging, droppableStore) {
            var _this = this;
            // options that can be set by caller
            this.useSubjectCenter = false;
            this.requireInitial = true; // if doesn't start out on a hit, won't emit any events
            this.initialHit = null;
            this.movingHit = null;
            this.finalHit = null; // won't ever be populated if shouldIgnoreMove
            this.handlePointerDown = function (ev) {
                var dragging = _this.dragging;
                _this.initialHit = null;
                _this.movingHit = null;
                _this.finalHit = null;
                _this.prepareHits();
                _this.processFirstCoord(ev);
                if (_this.initialHit || !_this.requireInitial) {
                    dragging.setIgnoreMove(false);
                    // TODO: fire this before computing processFirstCoord, so listeners can cancel. this gets fired by almost every handler :(
                    _this.emitter.trigger('pointerdown', ev);
                }
                else {
                    dragging.setIgnoreMove(true);
                }
            };
            this.handleDragStart = function (ev) {
                _this.emitter.trigger('dragstart', ev);
                _this.handleMove(ev, true); // force = fire even if initially null
            };
            this.handleDragMove = function (ev) {
                _this.emitter.trigger('dragmove', ev);
                _this.handleMove(ev);
            };
            this.handlePointerUp = function (ev) {
                _this.releaseHits();
                _this.emitter.trigger('pointerup', ev);
            };
            this.handleDragEnd = function (ev) {
                if (_this.movingHit) {
                    _this.emitter.trigger('hitupdate', null, true, ev);
                }
                _this.finalHit = _this.movingHit;
                _this.movingHit = null;
                _this.emitter.trigger('dragend', ev);
            };
            this.droppableStore = droppableStore;
            dragging.emitter.on('pointerdown', this.handlePointerDown);
            dragging.emitter.on('dragstart', this.handleDragStart);
            dragging.emitter.on('dragmove', this.handleDragMove);
            dragging.emitter.on('pointerup', this.handlePointerUp);
            dragging.emitter.on('dragend', this.handleDragEnd);
            this.dragging = dragging;
            this.emitter = new Emitter();
        }
        // sets initialHit
        // sets coordAdjust
        HitDragging.prototype.processFirstCoord = function (ev) {
            var origPoint = { left: ev.pageX, top: ev.pageY };
            var adjustedPoint = origPoint;
            var subjectEl = ev.subjectEl;
            var subjectRect;
            if (subjectEl instanceof HTMLElement) { // i.e. not a Document/ShadowRoot
                subjectRect = computeRect(subjectEl);
                adjustedPoint = constrainPoint(adjustedPoint, subjectRect);
            }
            var initialHit = this.initialHit = this.queryHitForOffset(adjustedPoint.left, adjustedPoint.top);
            if (initialHit) {
                if (this.useSubjectCenter && subjectRect) {
                    var slicedSubjectRect = intersectRects(subjectRect, initialHit.rect);
                    if (slicedSubjectRect) {
                        adjustedPoint = getRectCenter(slicedSubjectRect);
                    }
                }
                this.coordAdjust = diffPoints(adjustedPoint, origPoint);
            }
            else {
                this.coordAdjust = { left: 0, top: 0 };
            }
        };
        HitDragging.prototype.handleMove = function (ev, forceHandle) {
            var hit = this.queryHitForOffset(ev.pageX + this.coordAdjust.left, ev.pageY + this.coordAdjust.top);
            if (forceHandle || !isHitsEqual(this.movingHit, hit)) {
                this.movingHit = hit;
                this.emitter.trigger('hitupdate', hit, false, ev);
            }
        };
        HitDragging.prototype.prepareHits = function () {
            this.offsetTrackers = mapHash(this.droppableStore, function (interactionSettings) {
                interactionSettings.component.prepareHits();
                return new OffsetTracker(interactionSettings.el);
            });
        };
        HitDragging.prototype.releaseHits = function () {
            var offsetTrackers = this.offsetTrackers;
            for (var id in offsetTrackers) {
                offsetTrackers[id].destroy();
            }
            this.offsetTrackers = {};
        };
        HitDragging.prototype.queryHitForOffset = function (offsetLeft, offsetTop) {
            var _a = this, droppableStore = _a.droppableStore, offsetTrackers = _a.offsetTrackers;
            var bestHit = null;
            for (var id in droppableStore) {
                var component = droppableStore[id].component;
                var offsetTracker = offsetTrackers[id];
                if (offsetTracker && // wasn't destroyed mid-drag
                    offsetTracker.isWithinClipping(offsetLeft, offsetTop)) {
                    var originLeft = offsetTracker.computeLeft();
                    var originTop = offsetTracker.computeTop();
                    var positionLeft = offsetLeft - originLeft;
                    var positionTop = offsetTop - originTop;
                    var origRect = offsetTracker.origRect;
                    var width = origRect.right - origRect.left;
                    var height = origRect.bottom - origRect.top;
                    if (
                    // must be within the element's bounds
                    positionLeft >= 0 && positionLeft < width &&
                        positionTop >= 0 && positionTop < height) {
                        var hit = component.queryHit(positionLeft, positionTop, width, height);
                        if (hit && (
                        // make sure the hit is within activeRange, meaning it's not a dead cell
                        rangeContainsRange(hit.dateProfile.activeRange, hit.dateSpan.range)) &&
                            (!bestHit || hit.layer > bestHit.layer)) {
                            hit.componentId = id;
                            hit.context = component.context;
                            // TODO: better way to re-orient rectangle
                            hit.rect.left += originLeft;
                            hit.rect.right += originLeft;
                            hit.rect.top += originTop;
                            hit.rect.bottom += originTop;
                            bestHit = hit;
                        }
                    }
                }
            }
            return bestHit;
        };
        return HitDragging;
    }());
    function isHitsEqual(hit0, hit1) {
        if (!hit0 && !hit1) {
            return true;
        }
        if (Boolean(hit0) !== Boolean(hit1)) {
            return false;
        }
        return isDateSpansEqual(hit0.dateSpan, hit1.dateSpan);
    }

    function buildDatePointApiWithContext(dateSpan, context) {
        var props = {};
        for (var _i = 0, _a = context.pluginHooks.datePointTransforms; _i < _a.length; _i++) {
            var transform = _a[_i];
            __assign(props, transform(dateSpan, context));
        }
        __assign(props, buildDatePointApi(dateSpan, context.dateEnv));
        return props;
    }
    function buildDatePointApi(span, dateEnv) {
        return {
            date: dateEnv.toDate(span.range.start),
            dateStr: dateEnv.formatIso(span.range.start, { omitTime: span.allDay }),
            allDay: span.allDay,
        };
    }

    /*
    Monitors when the user clicks on a specific date/time of a component.
    A pointerdown+pointerup on the same "hit" constitutes a click.
    */
    var DateClicking = /** @class */ (function (_super) {
        __extends(DateClicking, _super);
        function DateClicking(settings) {
            var _this = _super.call(this, settings) || this;
            _this.handlePointerDown = function (pev) {
                var dragging = _this.dragging;
                var downEl = pev.origEvent.target;
                // do this in pointerdown (not dragend) because DOM might be mutated by the time dragend is fired
                dragging.setIgnoreMove(!_this.component.isValidDateDownEl(downEl));
            };
            // won't even fire if moving was ignored
            _this.handleDragEnd = function (ev) {
                var component = _this.component;
                var pointer = _this.dragging.pointer;
                if (!pointer.wasTouchScroll) {
                    var _a = _this.hitDragging, initialHit = _a.initialHit, finalHit = _a.finalHit;
                    if (initialHit && finalHit && isHitsEqual(initialHit, finalHit)) {
                        var context = component.context;
                        var arg = __assign(__assign({}, buildDatePointApiWithContext(initialHit.dateSpan, context)), { dayEl: initialHit.dayEl, jsEvent: ev.origEvent, view: context.viewApi || context.calendarApi.view });
                        context.emitter.trigger('dateClick', arg);
                    }
                }
            };
            // we DO want to watch pointer moves because otherwise finalHit won't get populated
            _this.dragging = new FeaturefulElementDragging(settings.el);
            _this.dragging.autoScroller.isEnabled = false;
            var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, interactionSettingsToStore(settings));
            hitDragging.emitter.on('pointerdown', _this.handlePointerDown);
            hitDragging.emitter.on('dragend', _this.handleDragEnd);
            return _this;
        }
        DateClicking.prototype.destroy = function () {
            this.dragging.destroy();
        };
        return DateClicking;
    }(Interaction));

    /*
    Tracks when the user selects a portion of time of a component,
    constituted by a drag over date cells, with a possible delay at the beginning of the drag.
    */
    var DateSelecting = /** @class */ (function (_super) {
        __extends(DateSelecting, _super);
        function DateSelecting(settings) {
            var _this = _super.call(this, settings) || this;
            _this.dragSelection = null;
            _this.handlePointerDown = function (ev) {
                var _a = _this, component = _a.component, dragging = _a.dragging;
                var options = component.context.options;
                var canSelect = options.selectable &&
                    component.isValidDateDownEl(ev.origEvent.target);
                // don't bother to watch expensive moves if component won't do selection
                dragging.setIgnoreMove(!canSelect);
                // if touch, require user to hold down
                dragging.delay = ev.isTouch ? getComponentTouchDelay$1(component) : null;
            };
            _this.handleDragStart = function (ev) {
                _this.component.context.calendarApi.unselect(ev); // unselect previous selections
            };
            _this.handleHitUpdate = function (hit, isFinal) {
                var context = _this.component.context;
                var dragSelection = null;
                var isInvalid = false;
                if (hit) {
                    var initialHit = _this.hitDragging.initialHit;
                    var disallowed = hit.componentId === initialHit.componentId
                        && _this.isHitComboAllowed
                        && !_this.isHitComboAllowed(initialHit, hit);
                    if (!disallowed) {
                        dragSelection = joinHitsIntoSelection(initialHit, hit, context.pluginHooks.dateSelectionTransformers);
                    }
                    if (!dragSelection || !isDateSelectionValid(dragSelection, hit.dateProfile, context)) {
                        isInvalid = true;
                        dragSelection = null;
                    }
                }
                if (dragSelection) {
                    context.dispatch({ type: 'SELECT_DATES', selection: dragSelection });
                }
                else if (!isFinal) { // only unselect if moved away while dragging
                    context.dispatch({ type: 'UNSELECT_DATES' });
                }
                if (!isInvalid) {
                    enableCursor();
                }
                else {
                    disableCursor();
                }
                if (!isFinal) {
                    _this.dragSelection = dragSelection; // only clear if moved away from all hits while dragging
                }
            };
            _this.handlePointerUp = function (pev) {
                if (_this.dragSelection) {
                    // selection is already rendered, so just need to report selection
                    triggerDateSelect(_this.dragSelection, pev, _this.component.context);
                    _this.dragSelection = null;
                }
            };
            var component = settings.component;
            var options = component.context.options;
            var dragging = _this.dragging = new FeaturefulElementDragging(settings.el);
            dragging.touchScrollAllowed = false;
            dragging.minDistance = options.selectMinDistance || 0;
            dragging.autoScroller.isEnabled = options.dragScroll;
            var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, interactionSettingsToStore(settings));
            hitDragging.emitter.on('pointerdown', _this.handlePointerDown);
            hitDragging.emitter.on('dragstart', _this.handleDragStart);
            hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);
            hitDragging.emitter.on('pointerup', _this.handlePointerUp);
            return _this;
        }
        DateSelecting.prototype.destroy = function () {
            this.dragging.destroy();
        };
        return DateSelecting;
    }(Interaction));
    function getComponentTouchDelay$1(component) {
        var options = component.context.options;
        var delay = options.selectLongPressDelay;
        if (delay == null) {
            delay = options.longPressDelay;
        }
        return delay;
    }
    function joinHitsIntoSelection(hit0, hit1, dateSelectionTransformers) {
        var dateSpan0 = hit0.dateSpan;
        var dateSpan1 = hit1.dateSpan;
        var ms = [
            dateSpan0.range.start,
            dateSpan0.range.end,
            dateSpan1.range.start,
            dateSpan1.range.end,
        ];
        ms.sort(compareNumbers);
        var props = {};
        for (var _i = 0, dateSelectionTransformers_1 = dateSelectionTransformers; _i < dateSelectionTransformers_1.length; _i++) {
            var transformer = dateSelectionTransformers_1[_i];
            var res = transformer(hit0, hit1);
            if (res === false) {
                return null;
            }
            if (res) {
                __assign(props, res);
            }
        }
        props.range = { start: ms[0], end: ms[3] };
        props.allDay = dateSpan0.allDay;
        return props;
    }

    var EventDragging = /** @class */ (function (_super) {
        __extends(EventDragging, _super);
        function EventDragging(settings) {
            var _this = _super.call(this, settings) || this;
            // internal state
            _this.subjectEl = null;
            _this.subjectSeg = null; // the seg being selected/dragged
            _this.isDragging = false;
            _this.eventRange = null;
            _this.relevantEvents = null; // the events being dragged
            _this.receivingContext = null;
            _this.validMutation = null;
            _this.mutatedRelevantEvents = null;
            _this.handlePointerDown = function (ev) {
                var origTarget = ev.origEvent.target;
                var _a = _this, component = _a.component, dragging = _a.dragging;
                var mirror = dragging.mirror;
                var options = component.context.options;
                var initialContext = component.context;
                _this.subjectEl = ev.subjectEl;
                var subjectSeg = _this.subjectSeg = getElSeg(ev.subjectEl);
                var eventRange = _this.eventRange = subjectSeg.eventRange;
                var eventInstanceId = eventRange.instance.instanceId;
                _this.relevantEvents = getRelevantEvents(initialContext.getCurrentData().eventStore, eventInstanceId);
                dragging.minDistance = ev.isTouch ? 0 : options.eventDragMinDistance;
                dragging.delay =
                    // only do a touch delay if touch and this event hasn't been selected yet
                    (ev.isTouch && eventInstanceId !== component.props.eventSelection) ?
                        getComponentTouchDelay(component) :
                        null;
                if (options.fixedMirrorParent) {
                    mirror.parentNode = options.fixedMirrorParent;
                }
                else {
                    mirror.parentNode = elementClosest(origTarget, '.fc');
                }
                mirror.revertDuration = options.dragRevertDuration;
                var isValid = component.isValidSegDownEl(origTarget) &&
                    !elementClosest(origTarget, '.fc-event-resizer'); // NOT on a resizer
                dragging.setIgnoreMove(!isValid);
                // disable dragging for elements that are resizable (ie, selectable)
                // but are not draggable
                _this.isDragging = isValid &&
                    ev.subjectEl.classList.contains('fc-event-draggable');
            };
            _this.handleDragStart = function (ev) {
                var initialContext = _this.component.context;
                var eventRange = _this.eventRange;
                var eventInstanceId = eventRange.instance.instanceId;
                if (ev.isTouch) {
                    // need to select a different event?
                    if (eventInstanceId !== _this.component.props.eventSelection) {
                        initialContext.dispatch({ type: 'SELECT_EVENT', eventInstanceId: eventInstanceId });
                    }
                }
                else {
                    // if now using mouse, but was previous touch interaction, clear selected event
                    initialContext.dispatch({ type: 'UNSELECT_EVENT' });
                }
                if (_this.isDragging) {
                    initialContext.calendarApi.unselect(ev); // unselect *date* selection
                    initialContext.emitter.trigger('eventDragStart', {
                        el: _this.subjectEl,
                        event: new EventApi(initialContext, eventRange.def, eventRange.instance),
                        jsEvent: ev.origEvent,
                        view: initialContext.viewApi,
                    });
                }
            };
            _this.handleHitUpdate = function (hit, isFinal) {
                if (!_this.isDragging) {
                    return;
                }
                var relevantEvents = _this.relevantEvents;
                var initialHit = _this.hitDragging.initialHit;
                var initialContext = _this.component.context;
                // states based on new hit
                var receivingContext = null;
                var mutation = null;
                var mutatedRelevantEvents = null;
                var isInvalid = false;
                var interaction = {
                    affectedEvents: relevantEvents,
                    mutatedEvents: createEmptyEventStore(),
                    isEvent: true,
                };
                if (hit) {
                    receivingContext = hit.context;
                    var receivingOptions = receivingContext.options;
                    if (initialContext === receivingContext ||
                        (receivingOptions.editable && receivingOptions.droppable)) {
                        mutation = computeEventMutation(initialHit, hit, receivingContext.getCurrentData().pluginHooks.eventDragMutationMassagers);
                        if (mutation) {
                            mutatedRelevantEvents = applyMutationToEventStore(relevantEvents, receivingContext.getCurrentData().eventUiBases, mutation, receivingContext);
                            interaction.mutatedEvents = mutatedRelevantEvents;
                            if (!isInteractionValid(interaction, hit.dateProfile, receivingContext)) {
                                isInvalid = true;
                                mutation = null;
                                mutatedRelevantEvents = null;
                                interaction.mutatedEvents = createEmptyEventStore();
                            }
                        }
                    }
                    else {
                        receivingContext = null;
                    }
                }
                _this.displayDrag(receivingContext, interaction);
                if (!isInvalid) {
                    enableCursor();
                }
                else {
                    disableCursor();
                }
                if (!isFinal) {
                    if (initialContext === receivingContext && // TODO: write test for this
                        isHitsEqual(initialHit, hit)) {
                        mutation = null;
                    }
                    _this.dragging.setMirrorNeedsRevert(!mutation);
                    // render the mirror if no already-rendered mirror
                    // TODO: wish we could somehow wait for dispatch to guarantee render
                    _this.dragging.setMirrorIsVisible(!hit || !getElRoot(_this.subjectEl).querySelector('.fc-event-mirror'));
                    // assign states based on new hit
                    _this.receivingContext = receivingContext;
                    _this.validMutation = mutation;
                    _this.mutatedRelevantEvents = mutatedRelevantEvents;
                }
            };
            _this.handlePointerUp = function () {
                if (!_this.isDragging) {
                    _this.cleanup(); // because handleDragEnd won't fire
                }
            };
            _this.handleDragEnd = function (ev) {
                if (_this.isDragging) {
                    var initialContext_1 = _this.component.context;
                    var initialView = initialContext_1.viewApi;
                    var _a = _this, receivingContext_1 = _a.receivingContext, validMutation = _a.validMutation;
                    var eventDef = _this.eventRange.def;
                    var eventInstance = _this.eventRange.instance;
                    var eventApi = new EventApi(initialContext_1, eventDef, eventInstance);
                    var relevantEvents_1 = _this.relevantEvents;
                    var mutatedRelevantEvents_1 = _this.mutatedRelevantEvents;
                    var finalHit = _this.hitDragging.finalHit;
                    _this.clearDrag(); // must happen after revert animation
                    initialContext_1.emitter.trigger('eventDragStop', {
                        el: _this.subjectEl,
                        event: eventApi,
                        jsEvent: ev.origEvent,
                        view: initialView,
                    });
                    if (validMutation) {
                        // dropped within same calendar
                        if (receivingContext_1 === initialContext_1) {
                            var updatedEventApi = new EventApi(initialContext_1, mutatedRelevantEvents_1.defs[eventDef.defId], eventInstance ? mutatedRelevantEvents_1.instances[eventInstance.instanceId] : null);
                            initialContext_1.dispatch({
                                type: 'MERGE_EVENTS',
                                eventStore: mutatedRelevantEvents_1,
                            });
                            var eventChangeArg = {
                                oldEvent: eventApi,
                                event: updatedEventApi,
                                relatedEvents: buildEventApis(mutatedRelevantEvents_1, initialContext_1, eventInstance),
                                revert: function () {
                                    initialContext_1.dispatch({
                                        type: 'MERGE_EVENTS',
                                        eventStore: relevantEvents_1, // the pre-change data
                                    });
                                },
                            };
                            var transformed = {};
                            for (var _i = 0, _b = initialContext_1.getCurrentData().pluginHooks.eventDropTransformers; _i < _b.length; _i++) {
                                var transformer = _b[_i];
                                __assign(transformed, transformer(validMutation, initialContext_1));
                            }
                            initialContext_1.emitter.trigger('eventDrop', __assign(__assign(__assign({}, eventChangeArg), transformed), { el: ev.subjectEl, delta: validMutation.datesDelta, jsEvent: ev.origEvent, view: initialView }));
                            initialContext_1.emitter.trigger('eventChange', eventChangeArg);
                            // dropped in different calendar
                        }
                        else if (receivingContext_1) {
                            var eventRemoveArg = {
                                event: eventApi,
                                relatedEvents: buildEventApis(relevantEvents_1, initialContext_1, eventInstance),
                                revert: function () {
                                    initialContext_1.dispatch({
                                        type: 'MERGE_EVENTS',
                                        eventStore: relevantEvents_1,
                                    });
                                },
                            };
                            initialContext_1.emitter.trigger('eventLeave', __assign(__assign({}, eventRemoveArg), { draggedEl: ev.subjectEl, view: initialView }));
                            initialContext_1.dispatch({
                                type: 'REMOVE_EVENTS',
                                eventStore: relevantEvents_1,
                            });
                            initialContext_1.emitter.trigger('eventRemove', eventRemoveArg);
                            var addedEventDef = mutatedRelevantEvents_1.defs[eventDef.defId];
                            var addedEventInstance = mutatedRelevantEvents_1.instances[eventInstance.instanceId];
                            var addedEventApi = new EventApi(receivingContext_1, addedEventDef, addedEventInstance);
                            receivingContext_1.dispatch({
                                type: 'MERGE_EVENTS',
                                eventStore: mutatedRelevantEvents_1,
                            });
                            var eventAddArg = {
                                event: addedEventApi,
                                relatedEvents: buildEventApis(mutatedRelevantEvents_1, receivingContext_1, addedEventInstance),
                                revert: function () {
                                    receivingContext_1.dispatch({
                                        type: 'REMOVE_EVENTS',
                                        eventStore: mutatedRelevantEvents_1,
                                    });
                                },
                            };
                            receivingContext_1.emitter.trigger('eventAdd', eventAddArg);
                            if (ev.isTouch) {
                                receivingContext_1.dispatch({
                                    type: 'SELECT_EVENT',
                                    eventInstanceId: eventInstance.instanceId,
                                });
                            }
                            receivingContext_1.emitter.trigger('drop', __assign(__assign({}, buildDatePointApiWithContext(finalHit.dateSpan, receivingContext_1)), { draggedEl: ev.subjectEl, jsEvent: ev.origEvent, view: finalHit.context.viewApi }));
                            receivingContext_1.emitter.trigger('eventReceive', __assign(__assign({}, eventAddArg), { draggedEl: ev.subjectEl, view: finalHit.context.viewApi }));
                        }
                    }
                    else {
                        initialContext_1.emitter.trigger('_noEventDrop');
                    }
                }
                _this.cleanup();
            };
            var component = _this.component;
            var options = component.context.options;
            var dragging = _this.dragging = new FeaturefulElementDragging(settings.el);
            dragging.pointer.selector = EventDragging.SELECTOR;
            dragging.touchScrollAllowed = false;
            dragging.autoScroller.isEnabled = options.dragScroll;
            var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, interactionSettingsStore);
            hitDragging.useSubjectCenter = settings.useEventCenter;
            hitDragging.emitter.on('pointerdown', _this.handlePointerDown);
            hitDragging.emitter.on('dragstart', _this.handleDragStart);
            hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);
            hitDragging.emitter.on('pointerup', _this.handlePointerUp);
            hitDragging.emitter.on('dragend', _this.handleDragEnd);
            return _this;
        }
        EventDragging.prototype.destroy = function () {
            this.dragging.destroy();
        };
        // render a drag state on the next receivingCalendar
        EventDragging.prototype.displayDrag = function (nextContext, state) {
            var initialContext = this.component.context;
            var prevContext = this.receivingContext;
            // does the previous calendar need to be cleared?
            if (prevContext && prevContext !== nextContext) {
                // does the initial calendar need to be cleared?
                // if so, don't clear all the way. we still need to to hide the affectedEvents
                if (prevContext === initialContext) {
                    prevContext.dispatch({
                        type: 'SET_EVENT_DRAG',
                        state: {
                            affectedEvents: state.affectedEvents,
                            mutatedEvents: createEmptyEventStore(),
                            isEvent: true,
                        },
                    });
                    // completely clear the old calendar if it wasn't the initial
                }
                else {
                    prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' });
                }
            }
            if (nextContext) {
                nextContext.dispatch({ type: 'SET_EVENT_DRAG', state: state });
            }
        };
        EventDragging.prototype.clearDrag = function () {
            var initialCalendar = this.component.context;
            var receivingContext = this.receivingContext;
            if (receivingContext) {
                receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' });
            }
            // the initial calendar might have an dummy drag state from displayDrag
            if (initialCalendar !== receivingContext) {
                initialCalendar.dispatch({ type: 'UNSET_EVENT_DRAG' });
            }
        };
        EventDragging.prototype.cleanup = function () {
            this.subjectSeg = null;
            this.isDragging = false;
            this.eventRange = null;
            this.relevantEvents = null;
            this.receivingContext = null;
            this.validMutation = null;
            this.mutatedRelevantEvents = null;
        };
        // TODO: test this in IE11
        // QUESTION: why do we need it on the resizable???
        EventDragging.SELECTOR = '.fc-event-draggable, .fc-event-resizable';
        return EventDragging;
    }(Interaction));
    function computeEventMutation(hit0, hit1, massagers) {
        var dateSpan0 = hit0.dateSpan;
        var dateSpan1 = hit1.dateSpan;
        var date0 = dateSpan0.range.start;
        var date1 = dateSpan1.range.start;
        var standardProps = {};
        if (dateSpan0.allDay !== dateSpan1.allDay) {
            standardProps.allDay = dateSpan1.allDay;
            standardProps.hasEnd = hit1.context.options.allDayMaintainDuration;
            if (dateSpan1.allDay) {
                // means date1 is already start-of-day,
                // but date0 needs to be converted
                date0 = startOfDay(date0);
            }
        }
        var delta = diffDates(date0, date1, hit0.context.dateEnv, hit0.componentId === hit1.componentId ?
            hit0.largeUnit :
            null);
        if (delta.milliseconds) { // has hours/minutes/seconds
            standardProps.allDay = false;
        }
        var mutation = {
            datesDelta: delta,
            standardProps: standardProps,
        };
        for (var _i = 0, massagers_1 = massagers; _i < massagers_1.length; _i++) {
            var massager = massagers_1[_i];
            massager(mutation, hit0, hit1);
        }
        return mutation;
    }
    function getComponentTouchDelay(component) {
        var options = component.context.options;
        var delay = options.eventLongPressDelay;
        if (delay == null) {
            delay = options.longPressDelay;
        }
        return delay;
    }

    var EventResizing = /** @class */ (function (_super) {
        __extends(EventResizing, _super);
        function EventResizing(settings) {
            var _this = _super.call(this, settings) || this;
            // internal state
            _this.draggingSegEl = null;
            _this.draggingSeg = null; // TODO: rename to resizingSeg? subjectSeg?
            _this.eventRange = null;
            _this.relevantEvents = null;
            _this.validMutation = null;
            _this.mutatedRelevantEvents = null;
            _this.handlePointerDown = function (ev) {
                var component = _this.component;
                var segEl = _this.querySegEl(ev);
                var seg = getElSeg(segEl);
                var eventRange = _this.eventRange = seg.eventRange;
                _this.dragging.minDistance = component.context.options.eventDragMinDistance;
                // if touch, need to be working with a selected event
                _this.dragging.setIgnoreMove(!_this.component.isValidSegDownEl(ev.origEvent.target) ||
                    (ev.isTouch && _this.component.props.eventSelection !== eventRange.instance.instanceId));
            };
            _this.handleDragStart = function (ev) {
                var context = _this.component.context;
                var eventRange = _this.eventRange;
                _this.relevantEvents = getRelevantEvents(context.getCurrentData().eventStore, _this.eventRange.instance.instanceId);
                var segEl = _this.querySegEl(ev);
                _this.draggingSegEl = segEl;
                _this.draggingSeg = getElSeg(segEl);
                context.calendarApi.unselect();
                context.emitter.trigger('eventResizeStart', {
                    el: segEl,
                    event: new EventApi(context, eventRange.def, eventRange.instance),
                    jsEvent: ev.origEvent,
                    view: context.viewApi,
                });
            };
            _this.handleHitUpdate = function (hit, isFinal, ev) {
                var context = _this.component.context;
                var relevantEvents = _this.relevantEvents;
                var initialHit = _this.hitDragging.initialHit;
                var eventInstance = _this.eventRange.instance;
                var mutation = null;
                var mutatedRelevantEvents = null;
                var isInvalid = false;
                var interaction = {
                    affectedEvents: relevantEvents,
                    mutatedEvents: createEmptyEventStore(),
                    isEvent: true,
                };
                if (hit) {
                    var disallowed = hit.componentId === initialHit.componentId
                        && _this.isHitComboAllowed
                        && !_this.isHitComboAllowed(initialHit, hit);
                    if (!disallowed) {
                        mutation = computeMutation(initialHit, hit, ev.subjectEl.classList.contains('fc-event-resizer-start'), eventInstance.range);
                    }
                }
                if (mutation) {
                    mutatedRelevantEvents = applyMutationToEventStore(relevantEvents, context.getCurrentData().eventUiBases, mutation, context);
                    interaction.mutatedEvents = mutatedRelevantEvents;
                    if (!isInteractionValid(interaction, hit.dateProfile, context)) {
                        isInvalid = true;
                        mutation = null;
                        mutatedRelevantEvents = null;
                        interaction.mutatedEvents = null;
                    }
                }
                if (mutatedRelevantEvents) {
                    context.dispatch({
                        type: 'SET_EVENT_RESIZE',
                        state: interaction,
                    });
                }
                else {
                    context.dispatch({ type: 'UNSET_EVENT_RESIZE' });
                }
                if (!isInvalid) {
                    enableCursor();
                }
                else {
                    disableCursor();
                }
                if (!isFinal) {
                    if (mutation && isHitsEqual(initialHit, hit)) {
                        mutation = null;
                    }
                    _this.validMutation = mutation;
                    _this.mutatedRelevantEvents = mutatedRelevantEvents;
                }
            };
            _this.handleDragEnd = function (ev) {
                var context = _this.component.context;
                var eventDef = _this.eventRange.def;
                var eventInstance = _this.eventRange.instance;
                var eventApi = new EventApi(context, eventDef, eventInstance);
                var relevantEvents = _this.relevantEvents;
                var mutatedRelevantEvents = _this.mutatedRelevantEvents;
                context.emitter.trigger('eventResizeStop', {
                    el: _this.draggingSegEl,
                    event: eventApi,
                    jsEvent: ev.origEvent,
                    view: context.viewApi,
                });
                if (_this.validMutation) {
                    var updatedEventApi = new EventApi(context, mutatedRelevantEvents.defs[eventDef.defId], eventInstance ? mutatedRelevantEvents.instances[eventInstance.instanceId] : null);
                    context.dispatch({
                        type: 'MERGE_EVENTS',
                        eventStore: mutatedRelevantEvents,
                    });
                    var eventChangeArg = {
                        oldEvent: eventApi,
                        event: updatedEventApi,
                        relatedEvents: buildEventApis(mutatedRelevantEvents, context, eventInstance),
                        revert: function () {
                            context.dispatch({
                                type: 'MERGE_EVENTS',
                                eventStore: relevantEvents, // the pre-change events
                            });
                        },
                    };
                    context.emitter.trigger('eventResize', __assign(__assign({}, eventChangeArg), { el: _this.draggingSegEl, startDelta: _this.validMutation.startDelta || createDuration(0), endDelta: _this.validMutation.endDelta || createDuration(0), jsEvent: ev.origEvent, view: context.viewApi }));
                    context.emitter.trigger('eventChange', eventChangeArg);
                }
                else {
                    context.emitter.trigger('_noEventResize');
                }
                // reset all internal state
                _this.draggingSeg = null;
                _this.relevantEvents = null;
                _this.validMutation = null;
                // okay to keep eventInstance around. useful to set it in handlePointerDown
            };
            var component = settings.component;
            var dragging = _this.dragging = new FeaturefulElementDragging(settings.el);
            dragging.pointer.selector = '.fc-event-resizer';
            dragging.touchScrollAllowed = false;
            dragging.autoScroller.isEnabled = component.context.options.dragScroll;
            var hitDragging = _this.hitDragging = new HitDragging(_this.dragging, interactionSettingsToStore(settings));
            hitDragging.emitter.on('pointerdown', _this.handlePointerDown);
            hitDragging.emitter.on('dragstart', _this.handleDragStart);
            hitDragging.emitter.on('hitupdate', _this.handleHitUpdate);
            hitDragging.emitter.on('dragend', _this.handleDragEnd);
            return _this;
        }
        EventResizing.prototype.destroy = function () {
            this.dragging.destroy();
        };
        EventResizing.prototype.querySegEl = function (ev) {
            return elementClosest(ev.subjectEl, '.fc-event');
        };
        return EventResizing;
    }(Interaction));
    function computeMutation(hit0, hit1, isFromStart, instanceRange) {
        var dateEnv = hit0.context.dateEnv;
        var date0 = hit0.dateSpan.range.start;
        var date1 = hit1.dateSpan.range.start;
        var delta = diffDates(date0, date1, dateEnv, hit0.largeUnit);
        if (isFromStart) {
            if (dateEnv.add(instanceRange.start, delta) < instanceRange.end) {
                return { startDelta: delta };
            }
        }
        else if (dateEnv.add(instanceRange.end, delta) > instanceRange.start) {
            return { endDelta: delta };
        }
        return null;
    }

    var UnselectAuto = /** @class */ (function () {
        function UnselectAuto(context) {
            var _this = this;
            this.context = context;
            this.isRecentPointerDateSelect = false; // wish we could use a selector to detect date selection, but uses hit system
            this.matchesCancel = false;
            this.matchesEvent = false;
            this.onSelect = function (selectInfo) {
                if (selectInfo.jsEvent) {
                    _this.isRecentPointerDateSelect = true;
                }
            };
            this.onDocumentPointerDown = function (pev) {
                var unselectCancel = _this.context.options.unselectCancel;
                var downEl = getEventTargetViaRoot(pev.origEvent);
                _this.matchesCancel = !!elementClosest(downEl, unselectCancel);
                _this.matchesEvent = !!elementClosest(downEl, EventDragging.SELECTOR); // interaction started on an event?
            };
            this.onDocumentPointerUp = function (pev) {
                var context = _this.context;
                var documentPointer = _this.documentPointer;
                var calendarState = context.getCurrentData();
                // touch-scrolling should never unfocus any type of selection
                if (!documentPointer.wasTouchScroll) {
                    if (calendarState.dateSelection && // an existing date selection?
                        !_this.isRecentPointerDateSelect // a new pointer-initiated date selection since last onDocumentPointerUp?
                    ) {
                        var unselectAuto = context.options.unselectAuto;
                        if (unselectAuto && (!unselectAuto || !_this.matchesCancel)) {
                            context.calendarApi.unselect(pev);
                        }
                    }
                    if (calendarState.eventSelection && // an existing event selected?
                        !_this.matchesEvent // interaction DIDN'T start on an event
                    ) {
                        context.dispatch({ type: 'UNSELECT_EVENT' });
                    }
                }
                _this.isRecentPointerDateSelect = false;
            };
            var documentPointer = this.documentPointer = new PointerDragging(document);
            documentPointer.shouldIgnoreMove = true;
            documentPointer.shouldWatchScroll = false;
            documentPointer.emitter.on('pointerdown', this.onDocumentPointerDown);
            documentPointer.emitter.on('pointerup', this.onDocumentPointerUp);
            /*
            TODO: better way to know about whether there was a selection with the pointer
            */
            context.emitter.on('select', this.onSelect);
        }
        UnselectAuto.prototype.destroy = function () {
            this.context.emitter.off('select', this.onSelect);
            this.documentPointer.destroy();
        };
        return UnselectAuto;
    }());

    var OPTION_REFINERS$3 = {
        fixedMirrorParent: identity,
    };
    var LISTENER_REFINERS = {
        dateClick: identity,
        eventDragStart: identity,
        eventDragStop: identity,
        eventDrop: identity,
        eventResizeStart: identity,
        eventResizeStop: identity,
        eventResize: identity,
        drop: identity,
        eventReceive: identity,
        eventLeave: identity,
    };

    /*
    Given an already instantiated draggable object for one-or-more elements,
    Interprets any dragging as an attempt to drag an events that lives outside
    of a calendar onto a calendar.
    */
    var ExternalElementDragging = /** @class */ (function () {
        function ExternalElementDragging(dragging, suppliedDragMeta) {
            var _this = this;
            this.receivingContext = null;
            this.droppableEvent = null; // will exist for all drags, even if create:false
            this.suppliedDragMeta = null;
            this.dragMeta = null;
            this.handleDragStart = function (ev) {
                _this.dragMeta = _this.buildDragMeta(ev.subjectEl);
            };
            this.handleHitUpdate = function (hit, isFinal, ev) {
                var dragging = _this.hitDragging.dragging;
                var receivingContext = null;
                var droppableEvent = null;
                var isInvalid = false;
                var interaction = {
                    affectedEvents: createEmptyEventStore(),
                    mutatedEvents: createEmptyEventStore(),
                    isEvent: _this.dragMeta.create,
                };
                if (hit) {
                    receivingContext = hit.context;
                    if (_this.canDropElOnCalendar(ev.subjectEl, receivingContext)) {
                        droppableEvent = computeEventForDateSpan(hit.dateSpan, _this.dragMeta, receivingContext);
                        interaction.mutatedEvents = eventTupleToStore(droppableEvent);
                        isInvalid = !isInteractionValid(interaction, hit.dateProfile, receivingContext);
                        if (isInvalid) {
                            interaction.mutatedEvents = createEmptyEventStore();
                            droppableEvent = null;
                        }
                    }
                }
                _this.displayDrag(receivingContext, interaction);
                // show mirror if no already-rendered mirror element OR if we are shutting down the mirror (?)
                // TODO: wish we could somehow wait for dispatch to guarantee render
                dragging.setMirrorIsVisible(isFinal || !droppableEvent || !document.querySelector('.fc-event-mirror'));
                if (!isInvalid) {
                    enableCursor();
                }
                else {
                    disableCursor();
                }
                if (!isFinal) {
                    dragging.setMirrorNeedsRevert(!droppableEvent);
                    _this.receivingContext = receivingContext;
                    _this.droppableEvent = droppableEvent;
                }
            };
            this.handleDragEnd = function (pev) {
                var _a = _this, receivingContext = _a.receivingContext, droppableEvent = _a.droppableEvent;
                _this.clearDrag();
                if (receivingContext && droppableEvent) {
                    var finalHit = _this.hitDragging.finalHit;
                    var finalView = finalHit.context.viewApi;
                    var dragMeta = _this.dragMeta;
                    receivingContext.emitter.trigger('drop', __assign(__assign({}, buildDatePointApiWithContext(finalHit.dateSpan, receivingContext)), { draggedEl: pev.subjectEl, jsEvent: pev.origEvent, view: finalView }));
                    if (dragMeta.create) {
                        var addingEvents_1 = eventTupleToStore(droppableEvent);
                        receivingContext.dispatch({
                            type: 'MERGE_EVENTS',
                            eventStore: addingEvents_1,
                        });
                        if (pev.isTouch) {
                            receivingContext.dispatch({
                                type: 'SELECT_EVENT',
                                eventInstanceId: droppableEvent.instance.instanceId,
                            });
                        }
                        // signal that an external event landed
                        receivingContext.emitter.trigger('eventReceive', {
                            event: new EventApi(receivingContext, droppableEvent.def, droppableEvent.instance),
                            relatedEvents: [],
                            revert: function () {
                                receivingContext.dispatch({
                                    type: 'REMOVE_EVENTS',
                                    eventStore: addingEvents_1,
                                });
                            },
                            draggedEl: pev.subjectEl,
                            view: finalView,
                        });
                    }
                }
                _this.receivingContext = null;
                _this.droppableEvent = null;
            };
            var hitDragging = this.hitDragging = new HitDragging(dragging, interactionSettingsStore);
            hitDragging.requireInitial = false; // will start outside of a component
            hitDragging.emitter.on('dragstart', this.handleDragStart);
            hitDragging.emitter.on('hitupdate', this.handleHitUpdate);
            hitDragging.emitter.on('dragend', this.handleDragEnd);
            this.suppliedDragMeta = suppliedDragMeta;
        }
        ExternalElementDragging.prototype.buildDragMeta = function (subjectEl) {
            if (typeof this.suppliedDragMeta === 'object') {
                return parseDragMeta(this.suppliedDragMeta);
            }
            if (typeof this.suppliedDragMeta === 'function') {
                return parseDragMeta(this.suppliedDragMeta(subjectEl));
            }
            return getDragMetaFromEl(subjectEl);
        };
        ExternalElementDragging.prototype.displayDrag = function (nextContext, state) {
            var prevContext = this.receivingContext;
            if (prevContext && prevContext !== nextContext) {
                prevContext.dispatch({ type: 'UNSET_EVENT_DRAG' });
            }
            if (nextContext) {
                nextContext.dispatch({ type: 'SET_EVENT_DRAG', state: state });
            }
        };
        ExternalElementDragging.prototype.clearDrag = function () {
            if (this.receivingContext) {
                this.receivingContext.dispatch({ type: 'UNSET_EVENT_DRAG' });
            }
        };
        ExternalElementDragging.prototype.canDropElOnCalendar = function (el, receivingContext) {
            var dropAccept = receivingContext.options.dropAccept;
            if (typeof dropAccept === 'function') {
                return dropAccept.call(receivingContext.calendarApi, el);
            }
            if (typeof dropAccept === 'string' && dropAccept) {
                return Boolean(elementMatches(el, dropAccept));
            }
            return true;
        };
        return ExternalElementDragging;
    }());
    // Utils for computing event store from the DragMeta
    // ----------------------------------------------------------------------------------------------------
    function computeEventForDateSpan(dateSpan, dragMeta, context) {
        var defProps = __assign({}, dragMeta.leftoverProps);
        for (var _i = 0, _a = context.pluginHooks.externalDefTransforms; _i < _a.length; _i++) {
            var transform = _a[_i];
            __assign(defProps, transform(dateSpan, dragMeta));
        }
        var _b = refineEventDef(defProps, context), refined = _b.refined, extra = _b.extra;
        var def = parseEventDef(refined, extra, dragMeta.sourceId, dateSpan.allDay, context.options.forceEventDuration || Boolean(dragMeta.duration), // hasEnd
        context);
        var start = dateSpan.range.start;
        // only rely on time info if drop zone is all-day,
        // otherwise, we already know the time
        if (dateSpan.allDay && dragMeta.startTime) {
            start = context.dateEnv.add(start, dragMeta.startTime);
        }
        var end = dragMeta.duration ?
            context.dateEnv.add(start, dragMeta.duration) :
            getDefaultEventEnd(dateSpan.allDay, start, context);
        var instance = createEventInstance(def.defId, { start: start, end: end });
        return { def: def, instance: instance };
    }
    // Utils for extracting data from element
    // ----------------------------------------------------------------------------------------------------
    function getDragMetaFromEl(el) {
        var str = getEmbeddedElData(el, 'event');
        var obj = str ?
            JSON.parse(str) :
            { create: false }; // if no embedded data, assume no event creation
        return parseDragMeta(obj);
    }
    config.dataAttrPrefix = '';
    function getEmbeddedElData(el, name) {
        var prefix = config.dataAttrPrefix;
        var prefixedName = (prefix ? prefix + '-' : '') + name;
        return el.getAttribute('data-' + prefixedName) || '';
    }

    /*
    Makes an element (that is *external* to any calendar) draggable.
    Can pass in data that determines how an event will be created when dropped onto a calendar.
    Leverages FullCalendar's internal drag-n-drop functionality WITHOUT a third-party drag system.
    */
    var ExternalDraggable = /** @class */ (function () {
        function ExternalDraggable(el, settings) {
            var _this = this;
            if (settings === void 0) { settings = {}; }
            this.handlePointerDown = function (ev) {
                var dragging = _this.dragging;
                var _a = _this.settings, minDistance = _a.minDistance, longPressDelay = _a.longPressDelay;
                dragging.minDistance =
                    minDistance != null ?
                        minDistance :
                        (ev.isTouch ? 0 : BASE_OPTION_DEFAULTS.eventDragMinDistance);
                dragging.delay =
                    ev.isTouch ? // TODO: eventually read eventLongPressDelay instead vvv
                        (longPressDelay != null ? longPressDelay : BASE_OPTION_DEFAULTS.longPressDelay) :
                        0;
            };
            this.handleDragStart = function (ev) {
                if (ev.isTouch &&
                    _this.dragging.delay &&
                    ev.subjectEl.classList.contains('fc-event')) {
                    _this.dragging.mirror.getMirrorEl().classList.add('fc-event-selected');
                }
            };
            this.settings = settings;
            var dragging = this.dragging = new FeaturefulElementDragging(el);
            dragging.touchScrollAllowed = false;
            if (settings.itemSelector != null) {
                dragging.pointer.selector = settings.itemSelector;
            }
            if (settings.appendTo != null) {
                dragging.mirror.parentNode = settings.appendTo; // TODO: write tests
            }
            dragging.emitter.on('pointerdown', this.handlePointerDown);
            dragging.emitter.on('dragstart', this.handleDragStart);
            new ExternalElementDragging(dragging, settings.eventData); // eslint-disable-line no-new
        }
        ExternalDraggable.prototype.destroy = function () {
            this.dragging.destroy();
        };
        return ExternalDraggable;
    }());

    /*
    Detects when a *THIRD-PARTY* drag-n-drop system interacts with elements.
    The third-party system is responsible for drawing the visuals effects of the drag.
    This class simply monitors for pointer movements and fires events.
    It also has the ability to hide the moving element (the "mirror") during the drag.
    */
    var InferredElementDragging = /** @class */ (function (_super) {
        __extends(InferredElementDragging, _super);
        function InferredElementDragging(containerEl) {
            var _this = _super.call(this, containerEl) || this;
            _this.shouldIgnoreMove = false;
            _this.mirrorSelector = '';
            _this.currentMirrorEl = null;
            _this.handlePointerDown = function (ev) {
                _this.emitter.trigger('pointerdown', ev);
                if (!_this.shouldIgnoreMove) {
                    // fire dragstart right away. does not support delay or min-distance
                    _this.emitter.trigger('dragstart', ev);
                }
            };
            _this.handlePointerMove = function (ev) {
                if (!_this.shouldIgnoreMove) {
                    _this.emitter.trigger('dragmove', ev);
                }
            };
            _this.handlePointerUp = function (ev) {
                _this.emitter.trigger('pointerup', ev);
                if (!_this.shouldIgnoreMove) {
                    // fire dragend right away. does not support a revert animation
                    _this.emitter.trigger('dragend', ev);
                }
            };
            var pointer = _this.pointer = new PointerDragging(containerEl);
            pointer.emitter.on('pointerdown', _this.handlePointerDown);
            pointer.emitter.on('pointermove', _this.handlePointerMove);
            pointer.emitter.on('pointerup', _this.handlePointerUp);
            return _this;
        }
        InferredElementDragging.prototype.destroy = function () {
            this.pointer.destroy();
        };
        InferredElementDragging.prototype.setIgnoreMove = function (bool) {
            this.shouldIgnoreMove = bool;
        };
        InferredElementDragging.prototype.setMirrorIsVisible = function (bool) {
            if (bool) {
                // restore a previously hidden element.
                // use the reference in case the selector class has already been removed.
                if (this.currentMirrorEl) {
                    this.currentMirrorEl.style.visibility = '';
                    this.currentMirrorEl = null;
                }
            }
            else {
                var mirrorEl = this.mirrorSelector
                    // TODO: somehow query FullCalendars WITHIN shadow-roots
                    ? document.querySelector(this.mirrorSelector)
                    : null;
                if (mirrorEl) {
                    this.currentMirrorEl = mirrorEl;
                    mirrorEl.style.visibility = 'hidden';
                }
            }
        };
        return InferredElementDragging;
    }(ElementDragging));

    /*
    Bridges third-party drag-n-drop systems with FullCalendar.
    Must be instantiated and destroyed by caller.
    */
    var ThirdPartyDraggable = /** @class */ (function () {
        function ThirdPartyDraggable(containerOrSettings, settings) {
            var containerEl = document;
            if (
            // wish we could just test instanceof EventTarget, but doesn't work in IE11
            containerOrSettings === document ||
                containerOrSettings instanceof Element) {
                containerEl = containerOrSettings;
                settings = settings || {};
            }
            else {
                settings = (containerOrSettings || {});
            }
            var dragging = this.dragging = new InferredElementDragging(containerEl);
            if (typeof settings.itemSelector === 'string') {
                dragging.pointer.selector = settings.itemSelector;
            }
            else if (containerEl === document) {
                dragging.pointer.selector = '[data-event]';
            }
            if (typeof settings.mirrorSelector === 'string') {
                dragging.mirrorSelector = settings.mirrorSelector;
            }
            new ExternalElementDragging(dragging, settings.eventData); // eslint-disable-line no-new
        }
        ThirdPartyDraggable.prototype.destroy = function () {
            this.dragging.destroy();
        };
        return ThirdPartyDraggable;
    }());

    var interactionPlugin = createPlugin({
        componentInteractions: [DateClicking, DateSelecting, EventDragging, EventResizing],
        calendarInteractions: [UnselectAuto],
        elementDraggingImpl: FeaturefulElementDragging,
        optionRefiners: OPTION_REFINERS$3,
        listenerRefiners: LISTENER_REFINERS,
    });

    /* An abstract class for the daygrid views, as well as month view. Renders one or more rows of day cells.
    ----------------------------------------------------------------------------------------------------------------------*/
    // It is a manager for a Table subcomponent, which does most of the heavy lifting.
    // It is responsible for managing width/height.
    var TableView = /** @class */ (function (_super) {
        __extends(TableView, _super);
        function TableView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.headerElRef = createRef();
            return _this;
        }
        TableView.prototype.renderSimpleLayout = function (headerRowContent, bodyContent) {
            var _a = this, props = _a.props, context = _a.context;
            var sections = [];
            var stickyHeaderDates = getStickyHeaderDates(context.options);
            if (headerRowContent) {
                sections.push({
                    type: 'header',
                    key: 'header',
                    isSticky: stickyHeaderDates,
                    chunk: {
                        elRef: this.headerElRef,
                        tableClassName: 'fc-col-header',
                        rowContent: headerRowContent,
                    },
                });
            }
            sections.push({
                type: 'body',
                key: 'body',
                liquid: true,
                chunk: { content: bodyContent },
            });
            return (createElement(ViewRoot, { viewSpec: context.viewSpec }, function (rootElRef, classNames) { return (createElement("div", { ref: rootElRef, className: ['fc-daygrid'].concat(classNames).join(' ') },
                createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [] /* TODO: make optional? */, sections: sections }))); }));
        };
        TableView.prototype.renderHScrollLayout = function (headerRowContent, bodyContent, colCnt, dayMinWidth) {
            var ScrollGrid = this.context.pluginHooks.scrollGridImpl;
            if (!ScrollGrid) {
                throw new Error('No ScrollGrid implementation');
            }
            var _a = this, props = _a.props, context = _a.context;
            var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);
            var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);
            var sections = [];
            if (headerRowContent) {
                sections.push({
                    type: 'header',
                    key: 'header',
                    isSticky: stickyHeaderDates,
                    chunks: [{
                            key: 'main',
                            elRef: this.headerElRef,
                            tableClassName: 'fc-col-header',
                            rowContent: headerRowContent,
                        }],
                });
            }
            sections.push({
                type: 'body',
                key: 'body',
                liquid: true,
                chunks: [{
                        key: 'main',
                        content: bodyContent,
                    }],
            });
            if (stickyFooterScrollbar) {
                sections.push({
                    type: 'footer',
                    key: 'footer',
                    isSticky: true,
                    chunks: [{
                            key: 'main',
                            content: renderScrollShim,
                        }],
                });
            }
            return (createElement(ViewRoot, { viewSpec: context.viewSpec }, function (rootElRef, classNames) { return (createElement("div", { ref: rootElRef, className: ['fc-daygrid'].concat(classNames).join(' ') },
                createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, colGroups: [{ cols: [{ span: colCnt, minWidth: dayMinWidth }] }], sections: sections }))); }));
        };
        return TableView;
    }(DateComponent));

    function splitSegsByRow(segs, rowCnt) {
        var byRow = [];
        for (var i = 0; i < rowCnt; i += 1) {
            byRow[i] = [];
        }
        for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
            var seg = segs_1[_i];
            byRow[seg.row].push(seg);
        }
        return byRow;
    }
    function splitSegsByFirstCol(segs, colCnt) {
        var byCol = [];
        for (var i = 0; i < colCnt; i += 1) {
            byCol[i] = [];
        }
        for (var _i = 0, segs_2 = segs; _i < segs_2.length; _i++) {
            var seg = segs_2[_i];
            byCol[seg.firstCol].push(seg);
        }
        return byCol;
    }
    function splitInteractionByRow(ui, rowCnt) {
        var byRow = [];
        if (!ui) {
            for (var i = 0; i < rowCnt; i += 1) {
                byRow[i] = null;
            }
        }
        else {
            for (var i = 0; i < rowCnt; i += 1) {
                byRow[i] = {
                    affectedInstances: ui.affectedInstances,
                    isEvent: ui.isEvent,
                    segs: [],
                };
            }
            for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {
                var seg = _a[_i];
                byRow[seg.row].segs.push(seg);
            }
        }
        return byRow;
    }

    var TableCellTop = /** @class */ (function (_super) {
        __extends(TableCellTop, _super);
        function TableCellTop() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TableCellTop.prototype.render = function () {
            var props = this.props;
            var navLinkAttrs = this.context.options.navLinks
                ? { 'data-navlink': buildNavLinkData(props.date), tabIndex: 0 }
                : {};
            return (createElement(DayCellContent, { date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, extraHookProps: props.extraHookProps, defaultContent: renderTopInner }, function (innerElRef, innerContent) { return ((innerContent || props.forceDayTop) && (createElement("div", { className: "fc-daygrid-day-top", ref: innerElRef },
                createElement("a", __assign({ className: "fc-daygrid-day-number" }, navLinkAttrs), innerContent || createElement(Fragment, null, "\\u00A0"))))); }));
        };
        return TableCellTop;
    }(BaseComponent));
    function renderTopInner(props) {
        return props.dayNumberText;
    }

    var DEFAULT_TABLE_EVENT_TIME_FORMAT = createFormatter({
        hour: 'numeric',
        minute: '2-digit',
        omitZeroMinute: true,
        meridiem: 'narrow',
    });
    function hasListItemDisplay(seg) {
        var display = seg.eventRange.ui.display;
        return display === 'list-item' || (display === 'auto' &&
            !seg.eventRange.def.allDay &&
            seg.firstCol === seg.lastCol && // can't be multi-day
            seg.isStart && // "
            seg.isEnd // "
        );
    }

    var TableBlockEvent = /** @class */ (function (_super) {
        __extends(TableBlockEvent, _super);
        function TableBlockEvent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TableBlockEvent.prototype.render = function () {
            var props = this.props;
            return (createElement(StandardEvent, __assign({}, props, { extraClassNames: ['fc-daygrid-event', 'fc-daygrid-block-event', 'fc-h-event'], defaultTimeFormat: DEFAULT_TABLE_EVENT_TIME_FORMAT, defaultDisplayEventEnd: props.defaultDisplayEventEnd, disableResizing: !props.seg.eventRange.def.allDay })));
        };
        return TableBlockEvent;
    }(BaseComponent));

    var TableListItemEvent = /** @class */ (function (_super) {
        __extends(TableListItemEvent, _super);
        function TableListItemEvent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TableListItemEvent.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            var timeFormat = context.options.eventTimeFormat || DEFAULT_TABLE_EVENT_TIME_FORMAT;
            var timeText = buildSegTimeText(props.seg, timeFormat, context, true, props.defaultDisplayEventEnd);
            return (createElement(EventRoot, { seg: props.seg, timeText: timeText, defaultContent: renderInnerContent$2, isDragging: props.isDragging, isResizing: false, isDateSelecting: false, isSelected: props.isSelected, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday }, function (rootElRef, classNames, innerElRef, innerContent) { return ( // we don't use styles!
            createElement("a", __assign({ className: ['fc-daygrid-event', 'fc-daygrid-dot-event'].concat(classNames).join(' '), ref: rootElRef }, getSegAnchorAttrs(props.seg)), innerContent)); }));
        };
        return TableListItemEvent;
    }(BaseComponent));
    function renderInnerContent$2(innerProps) {
        return (createElement(Fragment, null,
            createElement("div", { className: "fc-daygrid-event-dot", style: { borderColor: innerProps.borderColor || innerProps.backgroundColor } }),
            innerProps.timeText && (createElement("div", { className: "fc-event-time" }, innerProps.timeText)),
            createElement("div", { className: "fc-event-title" }, innerProps.event.title || createElement(Fragment, null, "\\u00A0"))));
    }
    function getSegAnchorAttrs(seg) {
        var url = seg.eventRange.def.url;
        return url ? { href: url } : {};
    }

    var TableCellMoreLink = /** @class */ (function (_super) {
        __extends(TableCellMoreLink, _super);
        function TableCellMoreLink() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.compileSegs = memoize(compileSegs);
            return _this;
        }
        TableCellMoreLink.prototype.render = function () {
            var props = this.props;
            var _a = this.compileSegs(props.singlePlacements), allSegs = _a.allSegs, invisibleSegs = _a.invisibleSegs;
            return (createElement(MoreLinkRoot, { dateProfile: props.dateProfile, todayRange: props.todayRange, allDayDate: props.allDayDate, moreCnt: props.moreCnt, allSegs: allSegs, hiddenSegs: invisibleSegs, alignmentElRef: props.alignmentElRef, alignGridTop: props.alignGridTop, extraDateSpan: props.extraDateSpan, popoverContent: function () {
                    var isForcedInvisible = (props.eventDrag ? props.eventDrag.affectedInstances : null) ||
                        (props.eventResize ? props.eventResize.affectedInstances : null) ||
                        {};
                    return (createElement(Fragment, null, allSegs.map(function (seg) {
                        var instanceId = seg.eventRange.instance.instanceId;
                        return (createElement("div", { className: "fc-daygrid-event-harness", key: instanceId, style: {
                                visibility: isForcedInvisible[instanceId] ? 'hidden' : '',
                            } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, __assign({ seg: seg, isDragging: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange)))) : (createElement(TableBlockEvent, __assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === props.eventSelection, defaultDisplayEventEnd: false }, getSegMeta(seg, props.todayRange))))));
                    })));
                } }, function (rootElRef, classNames, innerElRef, innerContent, handleClick) { return (createElement("a", { ref: rootElRef, className: ['fc-daygrid-more-link'].concat(classNames).join(' '), onClick: handleClick }, innerContent)); }));
        };
        return TableCellMoreLink;
    }(BaseComponent));
    function compileSegs(singlePlacements) {
        var allSegs = [];
        var invisibleSegs = [];
        for (var _i = 0, singlePlacements_1 = singlePlacements; _i < singlePlacements_1.length; _i++) {
            var placement = singlePlacements_1[_i];
            allSegs.push(placement.seg);
            if (!placement.isVisible) {
                invisibleSegs.push(placement.seg);
            }
        }
        return { allSegs: allSegs, invisibleSegs: invisibleSegs };
    }

    var DEFAULT_WEEK_NUM_FORMAT$1 = createFormatter({ week: 'narrow' });
    var TableCell = /** @class */ (function (_super) {
        __extends(TableCell, _super);
        function TableCell() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.rootElRef = createRef();
            _this.handleRootEl = function (el) {
                setRef(_this.rootElRef, el);
                setRef(_this.props.elRef, el);
            };
            return _this;
        }
        TableCell.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context, rootElRef = _a.rootElRef;
            var options = context.options;
            var date = props.date, dateProfile = props.dateProfile;
            var navLinkAttrs = options.navLinks
                ? { 'data-navlink': buildNavLinkData(date, 'week'), tabIndex: 0 }
                : {};
            return (createElement(DayCellRoot, { date: date, dateProfile: dateProfile, todayRange: props.todayRange, showDayNumber: props.showDayNumber, extraHookProps: props.extraHookProps, elRef: this.handleRootEl }, function (dayElRef, dayClassNames, rootDataAttrs, isDisabled) { return (createElement("td", __assign({ ref: dayElRef, className: ['fc-daygrid-day'].concat(dayClassNames, props.extraClassNames || []).join(' ') }, rootDataAttrs, props.extraDataAttrs),
                createElement("div", { className: "fc-daygrid-day-frame fc-scrollgrid-sync-inner", ref: props.innerElRef /* different from hook system! RENAME */ },
                    props.showWeekNumber && (createElement(WeekNumberRoot, { date: date, defaultFormat: DEFAULT_WEEK_NUM_FORMAT$1 }, function (weekElRef, weekClassNames, innerElRef, innerContent) { return (createElement("a", __assign({ ref: weekElRef, className: ['fc-daygrid-week-number'].concat(weekClassNames).join(' ') }, navLinkAttrs), innerContent)); })),
                    !isDisabled && (createElement(TableCellTop, { date: date, dateProfile: dateProfile, showDayNumber: props.showDayNumber, forceDayTop: props.forceDayTop, todayRange: props.todayRange, extraHookProps: props.extraHookProps })),
                    createElement("div", { className: "fc-daygrid-day-events", ref: props.fgContentElRef },
                        props.fgContent,
                        createElement("div", { className: "fc-daygrid-day-bottom", style: { marginTop: props.moreMarginTop } },
                            createElement(TableCellMoreLink, { allDayDate: date, singlePlacements: props.singlePlacements, moreCnt: props.moreCnt, alignmentElRef: rootElRef, alignGridTop: !props.showDayNumber, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange }))),
                    createElement("div", { className: "fc-daygrid-day-bg" }, props.bgContent)))); }));
        };
        return TableCell;
    }(DateComponent));

    function computeFgSegPlacement(segs, // assumed already sorted
    dayMaxEvents, dayMaxEventRows, strictOrder, eventInstanceHeights, maxContentHeight, cells) {
        var hierarchy = new DayGridSegHierarchy();
        hierarchy.allowReslicing = true;
        hierarchy.strictOrder = strictOrder;
        if (dayMaxEvents === true || dayMaxEventRows === true) {
            hierarchy.maxCoord = maxContentHeight;
            hierarchy.hiddenConsumes = true;
        }
        else if (typeof dayMaxEvents === 'number') {
            hierarchy.maxStackCnt = dayMaxEvents;
        }
        else if (typeof dayMaxEventRows === 'number') {
            hierarchy.maxStackCnt = dayMaxEventRows;
            hierarchy.hiddenConsumes = true;
        }
        // create segInputs only for segs with known heights
        var segInputs = [];
        var unknownHeightSegs = [];
        for (var i = 0; i < segs.length; i += 1) {
            var seg = segs[i];
            var instanceId = seg.eventRange.instance.instanceId;
            var eventHeight = eventInstanceHeights[instanceId];
            if (eventHeight != null) {
                segInputs.push({
                    index: i,
                    thickness: eventHeight,
                    span: {
                        start: seg.firstCol,
                        end: seg.lastCol + 1,
                    },
                });
            }
            else {
                unknownHeightSegs.push(seg);
            }
        }
        var hiddenEntries = hierarchy.addSegs(segInputs);
        var segRects = hierarchy.toRects();
        var _a = placeRects(segRects, segs, cells), singleColPlacements = _a.singleColPlacements, multiColPlacements = _a.multiColPlacements, leftoverMargins = _a.leftoverMargins;
        var moreCnts = [];
        var moreMarginTops = [];
        // add segs with unknown heights
        for (var _i = 0, unknownHeightSegs_1 = unknownHeightSegs; _i < unknownHeightSegs_1.length; _i++) {
            var seg = unknownHeightSegs_1[_i];
            multiColPlacements[seg.firstCol].push({
                seg: seg,
                isVisible: false,
                isAbsolute: true,
                absoluteTop: 0,
                marginTop: 0,
            });
            for (var col = seg.firstCol; col <= seg.lastCol; col += 1) {
                singleColPlacements[col].push({
                    seg: resliceSeg(seg, col, col + 1, cells),
                    isVisible: false,
                    isAbsolute: false,
                    absoluteTop: 0,
                    marginTop: 0,
                });
            }
        }
        // add the hidden entries
        for (var col = 0; col < cells.length; col += 1) {
            moreCnts.push(0);
        }
        for (var _b = 0, hiddenEntries_1 = hiddenEntries; _b < hiddenEntries_1.length; _b++) {
            var hiddenEntry = hiddenEntries_1[_b];
            var seg = segs[hiddenEntry.index];
            var hiddenSpan = hiddenEntry.span;
            multiColPlacements[hiddenSpan.start].push({
                seg: resliceSeg(seg, hiddenSpan.start, hiddenSpan.end, cells),
                isVisible: false,
                isAbsolute: true,
                absoluteTop: 0,
                marginTop: 0,
            });
            for (var col = hiddenSpan.start; col < hiddenSpan.end; col += 1) {
                moreCnts[col] += 1;
                singleColPlacements[col].push({
                    seg: resliceSeg(seg, col, col + 1, cells),
                    isVisible: false,
                    isAbsolute: false,
                    absoluteTop: 0,
                    marginTop: 0,
                });
            }
        }
        // deal with leftover margins
        for (var col = 0; col < cells.length; col += 1) {
            moreMarginTops.push(leftoverMargins[col]);
        }
        return { singleColPlacements: singleColPlacements, multiColPlacements: multiColPlacements, moreCnts: moreCnts, moreMarginTops: moreMarginTops };
    }
    // rects ordered by top coord, then left
    function placeRects(allRects, segs, cells) {
        var rectsByEachCol = groupRectsByEachCol(allRects, cells.length);
        var singleColPlacements = [];
        var multiColPlacements = [];
        var leftoverMargins = [];
        for (var col = 0; col < cells.length; col += 1) {
            var rects = rectsByEachCol[col];
            // compute all static segs in singlePlacements
            var singlePlacements = [];
            var currentHeight = 0;
            var currentMarginTop = 0;
            for (var _i = 0, rects_1 = rects; _i < rects_1.length; _i++) {
                var rect = rects_1[_i];
                var seg = segs[rect.index];
                singlePlacements.push({
                    seg: resliceSeg(seg, col, col + 1, cells),
                    isVisible: true,
                    isAbsolute: false,
                    absoluteTop: rect.levelCoord,
                    marginTop: rect.levelCoord - currentHeight,
                });
                currentHeight = rect.levelCoord + rect.thickness;
            }
            // compute mixed static/absolute segs in multiPlacements
            var multiPlacements = [];
            currentHeight = 0;
            currentMarginTop = 0;
            for (var _a = 0, rects_2 = rects; _a < rects_2.length; _a++) {
                var rect = rects_2[_a];
                var seg = segs[rect.index];
                var isAbsolute = rect.span.end - rect.span.start > 1; // multi-column?
                var isFirstCol = rect.span.start === col;
                currentMarginTop += rect.levelCoord - currentHeight; // amount of space since bottom of previous seg
                currentHeight = rect.levelCoord + rect.thickness; // height will now be bottom of current seg
                if (isAbsolute) {
                    currentMarginTop += rect.thickness;
                    if (isFirstCol) {
                        multiPlacements.push({
                            seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),
                            isVisible: true,
                            isAbsolute: true,
                            absoluteTop: rect.levelCoord,
                            marginTop: 0,
                        });
                    }
                }
                else if (isFirstCol) {
                    multiPlacements.push({
                        seg: resliceSeg(seg, rect.span.start, rect.span.end, cells),
                        isVisible: true,
                        isAbsolute: false,
                        absoluteTop: rect.levelCoord,
                        marginTop: currentMarginTop, // claim the margin
                    });
                    currentMarginTop = 0;
                }
            }
            singleColPlacements.push(singlePlacements);
            multiColPlacements.push(multiPlacements);
            leftoverMargins.push(currentMarginTop);
        }
        return { singleColPlacements: singleColPlacements, multiColPlacements: multiColPlacements, leftoverMargins: leftoverMargins };
    }
    function groupRectsByEachCol(rects, colCnt) {
        var rectsByEachCol = [];
        for (var col = 0; col < colCnt; col += 1) {
            rectsByEachCol.push([]);
        }
        for (var _i = 0, rects_3 = rects; _i < rects_3.length; _i++) {
            var rect = rects_3[_i];
            for (var col = rect.span.start; col < rect.span.end; col += 1) {
                rectsByEachCol[col].push(rect);
            }
        }
        return rectsByEachCol;
    }
    function resliceSeg(seg, spanStart, spanEnd, cells) {
        if (seg.firstCol === spanStart && seg.lastCol === spanEnd - 1) {
            return seg;
        }
        var eventRange = seg.eventRange;
        var origRange = eventRange.range;
        var slicedRange = intersectRanges(origRange, {
            start: cells[spanStart].date,
            end: addDays(cells[spanEnd - 1].date, 1),
        });
        return __assign(__assign({}, seg), { firstCol: spanStart, lastCol: spanEnd - 1, eventRange: {
                def: eventRange.def,
                ui: __assign(__assign({}, eventRange.ui), { durationEditable: false }),
                instance: eventRange.instance,
                range: slicedRange,
            }, isStart: seg.isStart && slicedRange.start.valueOf() === origRange.start.valueOf(), isEnd: seg.isEnd && slicedRange.end.valueOf() === origRange.end.valueOf() });
    }
    var DayGridSegHierarchy = /** @class */ (function (_super) {
        __extends(DayGridSegHierarchy, _super);
        function DayGridSegHierarchy() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            // config
            _this.hiddenConsumes = false;
            // allows us to keep hidden entries in the hierarchy so they take up space
            _this.forceHidden = {};
            return _this;
        }
        DayGridSegHierarchy.prototype.addSegs = function (segInputs) {
            var _this = this;
            var hiddenSegs = _super.prototype.addSegs.call(this, segInputs);
            var entriesByLevel = this.entriesByLevel;
            var excludeHidden = function (entry) { return !_this.forceHidden[buildEntryKey(entry)]; };
            // remove the forced-hidden segs
            for (var level = 0; level < entriesByLevel.length; level += 1) {
                entriesByLevel[level] = entriesByLevel[level].filter(excludeHidden);
            }
            return hiddenSegs;
        };
        DayGridSegHierarchy.prototype.handleInvalidInsertion = function (insertion, entry, hiddenEntries) {
            var _a = this, entriesByLevel = _a.entriesByLevel, forceHidden = _a.forceHidden;
            var touchingEntry = insertion.touchingEntry, touchingLevel = insertion.touchingLevel, touchingLateral = insertion.touchingLateral;
            if (this.hiddenConsumes && touchingEntry) {
                var touchingEntryId = buildEntryKey(touchingEntry);
                // if not already hidden
                if (!forceHidden[touchingEntryId]) {
                    if (this.allowReslicing) {
                        var placeholderEntry = __assign(__assign({}, touchingEntry), { span: intersectSpans(touchingEntry.span, entry.span) });
                        var placeholderEntryId = buildEntryKey(placeholderEntry);
                        forceHidden[placeholderEntryId] = true;
                        entriesByLevel[touchingLevel][touchingLateral] = placeholderEntry; // replace touchingEntry with our placeholder
                        this.splitEntry(touchingEntry, entry, hiddenEntries); // split up the touchingEntry, reinsert it
                    }
                    else {
                        forceHidden[touchingEntryId] = true;
                        hiddenEntries.push(touchingEntry);
                    }
                }
            }
            return _super.prototype.handleInvalidInsertion.call(this, insertion, entry, hiddenEntries);
        };
        return DayGridSegHierarchy;
    }(SegHierarchy));

    var TableRow = /** @class */ (function (_super) {
        __extends(TableRow, _super);
        function TableRow() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.cellElRefs = new RefMap(); // the <td>
            _this.frameElRefs = new RefMap(); // the fc-daygrid-day-frame
            _this.fgElRefs = new RefMap(); // the fc-daygrid-day-events
            _this.segHarnessRefs = new RefMap(); // indexed by "instanceId:firstCol"
            _this.rootElRef = createRef();
            _this.state = {
                framePositions: null,
                maxContentHeight: null,
                eventInstanceHeights: {},
            };
            return _this;
        }
        TableRow.prototype.render = function () {
            var _this = this;
            var _a = this, props = _a.props, state = _a.state, context = _a.context;
            var options = context.options;
            var colCnt = props.cells.length;
            var businessHoursByCol = splitSegsByFirstCol(props.businessHourSegs, colCnt);
            var bgEventSegsByCol = splitSegsByFirstCol(props.bgEventSegs, colCnt);
            var highlightSegsByCol = splitSegsByFirstCol(this.getHighlightSegs(), colCnt);
            var mirrorSegsByCol = splitSegsByFirstCol(this.getMirrorSegs(), colCnt);
            var _b = computeFgSegPlacement(sortEventSegs(props.fgEventSegs, options.eventOrder), props.dayMaxEvents, props.dayMaxEventRows, options.eventOrderStrict, state.eventInstanceHeights, state.maxContentHeight, props.cells), singleColPlacements = _b.singleColPlacements, multiColPlacements = _b.multiColPlacements, moreCnts = _b.moreCnts, moreMarginTops = _b.moreMarginTops;
            var isForcedInvisible = // TODO: messy way to compute this
             (props.eventDrag && props.eventDrag.affectedInstances) ||
                (props.eventResize && props.eventResize.affectedInstances) ||
                {};
            return (createElement("tr", { ref: this.rootElRef },
                props.renderIntro && props.renderIntro(),
                props.cells.map(function (cell, col) {
                    var normalFgNodes = _this.renderFgSegs(col, props.forPrint ? singleColPlacements[col] : multiColPlacements[col], props.todayRange, isForcedInvisible);
                    var mirrorFgNodes = _this.renderFgSegs(col, buildMirrorPlacements(mirrorSegsByCol[col], multiColPlacements), props.todayRange, {}, Boolean(props.eventDrag), Boolean(props.eventResize), false);
                    return (createElement(TableCell, { key: cell.key, elRef: _this.cellElRefs.createRef(cell.key), innerElRef: _this.frameElRefs.createRef(cell.key) /* FF <td> problem, but okay to use for left/right. TODO: rename prop */, dateProfile: props.dateProfile, date: cell.date, showDayNumber: props.showDayNumbers, showWeekNumber: props.showWeekNumbers && col === 0, forceDayTop: props.showWeekNumbers /* even displaying weeknum for row, not necessarily day */, todayRange: props.todayRange, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, extraHookProps: cell.extraHookProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, moreCnt: moreCnts[col], moreMarginTop: moreMarginTops[col], singlePlacements: singleColPlacements[col], fgContentElRef: _this.fgElRefs.createRef(cell.key), fgContent: ( // Fragment scopes the keys
                        createElement(Fragment, null,
                            createElement(Fragment, null, normalFgNodes),
                            createElement(Fragment, null, mirrorFgNodes))), bgContent: ( // Fragment scopes the keys
                        createElement(Fragment, null,
                            _this.renderFillSegs(highlightSegsByCol[col], 'highlight'),
                            _this.renderFillSegs(businessHoursByCol[col], 'non-business'),
                            _this.renderFillSegs(bgEventSegsByCol[col], 'bg-event'))) }));
                })));
        };
        TableRow.prototype.componentDidMount = function () {
            this.updateSizing(true);
        };
        TableRow.prototype.componentDidUpdate = function (prevProps, prevState) {
            var currentProps = this.props;
            this.updateSizing(!isPropsEqual(prevProps, currentProps));
        };
        TableRow.prototype.getHighlightSegs = function () {
            var props = this.props;
            if (props.eventDrag && props.eventDrag.segs.length) { // messy check
                return props.eventDrag.segs;
            }
            if (props.eventResize && props.eventResize.segs.length) { // messy check
                return props.eventResize.segs;
            }
            return props.dateSelectionSegs;
        };
        TableRow.prototype.getMirrorSegs = function () {
            var props = this.props;
            if (props.eventResize && props.eventResize.segs.length) { // messy check
                return props.eventResize.segs;
            }
            return [];
        };
        TableRow.prototype.renderFgSegs = function (col, segPlacements, todayRange, isForcedInvisible, isDragging, isResizing, isDateSelecting) {
            var context = this.context;
            var eventSelection = this.props.eventSelection;
            var framePositions = this.state.framePositions;
            var defaultDisplayEventEnd = this.props.cells.length === 1; // colCnt === 1
            var isMirror = isDragging || isResizing || isDateSelecting;
            var nodes = [];
            if (framePositions) {
                for (var _i = 0, segPlacements_1 = segPlacements; _i < segPlacements_1.length; _i++) {
                    var placement = segPlacements_1[_i];
                    var seg = placement.seg;
                    var instanceId = seg.eventRange.instance.instanceId;
                    var key = instanceId + ':' + col;
                    var isVisible = placement.isVisible && !isForcedInvisible[instanceId];
                    var isAbsolute = placement.isAbsolute;
                    var left = '';
                    var right = '';
                    if (isAbsolute) {
                        if (context.isRtl) {
                            right = 0;
                            left = framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol];
                        }
                        else {
                            left = 0;
                            right = framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol];
                        }
                    }
                    /*
                    known bug: events that are force to be list-item but span multiple days still take up space in later columns
                    todo: in print view, for multi-day events, don't display title within non-start/end segs
                    */
                    nodes.push(createElement("div", { className: 'fc-daygrid-event-harness' + (isAbsolute ? ' fc-daygrid-event-harness-abs' : ''), key: key, ref: isMirror ? null : this.segHarnessRefs.createRef(key), style: {
                            visibility: isVisible ? '' : 'hidden',
                            marginTop: isAbsolute ? '' : placement.marginTop,
                            top: isAbsolute ? placement.absoluteTop : '',
                            left: left,
                            right: right,
                        } }, hasListItemDisplay(seg) ? (createElement(TableListItemEvent, __assign({ seg: seg, isDragging: isDragging, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange)))) : (createElement(TableBlockEvent, __assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, defaultDisplayEventEnd: defaultDisplayEventEnd }, getSegMeta(seg, todayRange))))));
                }
            }
            return nodes;
        };
        TableRow.prototype.renderFillSegs = function (segs, fillType) {
            var isRtl = this.context.isRtl;
            var todayRange = this.props.todayRange;
            var framePositions = this.state.framePositions;
            var nodes = [];
            if (framePositions) {
                for (var _i = 0, segs_1 = segs; _i < segs_1.length; _i++) {
                    var seg = segs_1[_i];
                    var leftRightCss = isRtl ? {
                        right: 0,
                        left: framePositions.lefts[seg.lastCol] - framePositions.lefts[seg.firstCol],
                    } : {
                        left: 0,
                        right: framePositions.rights[seg.firstCol] - framePositions.rights[seg.lastCol],
                    };
                    nodes.push(createElement("div", { key: buildEventRangeKey(seg.eventRange), className: "fc-daygrid-bg-harness", style: leftRightCss }, fillType === 'bg-event' ?
                        createElement(BgEvent, __assign({ seg: seg }, getSegMeta(seg, todayRange))) :
                        renderFill(fillType)));
                }
            }
            return createElement.apply(void 0, __spreadArray([Fragment, {}], nodes));
        };
        TableRow.prototype.updateSizing = function (isExternalSizingChange) {
            var _a = this, props = _a.props, frameElRefs = _a.frameElRefs;
            if (!props.forPrint &&
                props.clientWidth !== null // positioning ready?
            ) {
                if (isExternalSizingChange) {
                    var frameEls = props.cells.map(function (cell) { return frameElRefs.currentMap[cell.key]; });
                    if (frameEls.length) {
                        var originEl = this.rootElRef.current;
                        this.setState({
                            framePositions: new PositionCache(originEl, frameEls, true, // isHorizontal
                            false),
                        });
                    }
                }
                var limitByContentHeight = props.dayMaxEvents === true || props.dayMaxEventRows === true;
                this.setState({
                    eventInstanceHeights: this.queryEventInstanceHeights(),
                    maxContentHeight: limitByContentHeight ? this.computeMaxContentHeight() : null,
                });
            }
        };
        TableRow.prototype.queryEventInstanceHeights = function () {
            var segElMap = this.segHarnessRefs.currentMap;
            var eventInstanceHeights = {};
            // get the max height amongst instance segs
            for (var key in segElMap) {
                var height = Math.round(segElMap[key].getBoundingClientRect().height);
                var instanceId = key.split(':')[0]; // deconstruct how renderFgSegs makes the key
                eventInstanceHeights[instanceId] = Math.max(eventInstanceHeights[instanceId] || 0, height);
            }
            return eventInstanceHeights;
        };
        TableRow.prototype.computeMaxContentHeight = function () {
            var firstKey = this.props.cells[0].key;
            var cellEl = this.cellElRefs.currentMap[firstKey];
            var fcContainerEl = this.fgElRefs.currentMap[firstKey];
            return cellEl.getBoundingClientRect().bottom - fcContainerEl.getBoundingClientRect().top;
        };
        TableRow.prototype.getCellEls = function () {
            var elMap = this.cellElRefs.currentMap;
            return this.props.cells.map(function (cell) { return elMap[cell.key]; });
        };
        return TableRow;
    }(DateComponent));
    TableRow.addStateEquality({
        eventInstanceHeights: isPropsEqual,
    });
    function buildMirrorPlacements(mirrorSegs, colPlacements) {
        if (!mirrorSegs.length) {
            return [];
        }
        var topsByInstanceId = buildAbsoluteTopHash(colPlacements); // TODO: cache this at first render?
        return mirrorSegs.map(function (seg) { return ({
            seg: seg,
            isVisible: true,
            isAbsolute: true,
            absoluteTop: topsByInstanceId[seg.eventRange.instance.instanceId],
            marginTop: 0,
        }); });
    }
    function buildAbsoluteTopHash(colPlacements) {
        var topsByInstanceId = {};
        for (var _i = 0, colPlacements_1 = colPlacements; _i < colPlacements_1.length; _i++) {
            var placements = colPlacements_1[_i];
            for (var _a = 0, placements_1 = placements; _a < placements_1.length; _a++) {
                var placement = placements_1[_a];
                topsByInstanceId[placement.seg.eventRange.instance.instanceId] = placement.absoluteTop;
            }
        }
        return topsByInstanceId;
    }

    var Table = /** @class */ (function (_super) {
        __extends(Table, _super);
        function Table() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.splitBusinessHourSegs = memoize(splitSegsByRow);
            _this.splitBgEventSegs = memoize(splitSegsByRow);
            _this.splitFgEventSegs = memoize(splitSegsByRow);
            _this.splitDateSelectionSegs = memoize(splitSegsByRow);
            _this.splitEventDrag = memoize(splitInteractionByRow);
            _this.splitEventResize = memoize(splitInteractionByRow);
            _this.rowRefs = new RefMap();
            _this.handleRootEl = function (rootEl) {
                _this.rootEl = rootEl;
                if (rootEl) {
                    _this.context.registerInteractiveComponent(_this, {
                        el: rootEl,
                        isHitComboAllowed: _this.props.isHitComboAllowed,
                    });
                }
                else {
                    _this.context.unregisterInteractiveComponent(_this);
                }
            };
            return _this;
        }
        Table.prototype.render = function () {
            var _this = this;
            var props = this.props;
            var dateProfile = props.dateProfile, dayMaxEventRows = props.dayMaxEventRows, dayMaxEvents = props.dayMaxEvents, expandRows = props.expandRows;
            var rowCnt = props.cells.length;
            var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, rowCnt);
            var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, rowCnt);
            var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, rowCnt);
            var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, rowCnt);
            var eventDragByRow = this.splitEventDrag(props.eventDrag, rowCnt);
            var eventResizeByRow = this.splitEventResize(props.eventResize, rowCnt);
            var limitViaBalanced = dayMaxEvents === true || dayMaxEventRows === true;
            // if rows can't expand to fill fixed height, can't do balanced-height event limit
            // TODO: best place to normalize these options?
            if (limitViaBalanced && !expandRows) {
                limitViaBalanced = false;
                dayMaxEventRows = null;
                dayMaxEvents = null;
            }
            var classNames = [
                'fc-daygrid-body',
                limitViaBalanced ? 'fc-daygrid-body-balanced' : 'fc-daygrid-body-unbalanced',
                expandRows ? '' : 'fc-daygrid-body-natural', // will height of one row depend on the others?
            ];
            return (createElement("div", { className: classNames.join(' '), ref: this.handleRootEl, style: {
                    // these props are important to give this wrapper correct dimensions for interactions
                    // TODO: if we set it here, can we avoid giving to inner tables?
                    width: props.clientWidth,
                    minWidth: props.tableMinWidth,
                } },
                createElement(NowTimer, { unit: "day" }, function (nowDate, todayRange) { return (createElement(Fragment, null,
                    createElement("table", { className: "fc-scrollgrid-sync-table", style: {
                            width: props.clientWidth,
                            minWidth: props.tableMinWidth,
                            height: expandRows ? props.clientHeight : '',
                        } },
                        props.colGroupNode,
                        createElement("tbody", null, props.cells.map(function (cells, row) { return (createElement(TableRow, { ref: _this.rowRefs.createRef(row), key: cells.length
                                ? cells[0].date.toISOString() /* best? or put key on cell? or use diff formatter? */
                                : row // in case there are no cells (like when resource view is loading)
                            , showDayNumbers: rowCnt > 1, showWeekNumbers: props.showWeekNumbers, todayRange: todayRange, dateProfile: dateProfile, cells: cells, renderIntro: props.renderRowIntro, businessHourSegs: businessHourSegsByRow[row], eventSelection: props.eventSelection, bgEventSegs: bgEventSegsByRow[row].filter(isSegAllDay) /* hack */, fgEventSegs: fgEventSegsByRow[row], dateSelectionSegs: dateSelectionSegsByRow[row], eventDrag: eventDragByRow[row], eventResize: eventResizeByRow[row], dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })); }))))); })));
        };
        // Hit System
        // ----------------------------------------------------------------------------------------------------
        Table.prototype.prepareHits = function () {
            this.rowPositions = new PositionCache(this.rootEl, this.rowRefs.collect().map(function (rowObj) { return rowObj.getCellEls()[0]; }), // first cell el in each row. TODO: not optimal
            false, true);
            this.colPositions = new PositionCache(this.rootEl, this.rowRefs.currentMap[0].getCellEls(), // cell els in first row
            true, // horizontal
            false);
        };
        Table.prototype.queryHit = function (positionLeft, positionTop) {
            var _a = this, colPositions = _a.colPositions, rowPositions = _a.rowPositions;
            var col = colPositions.leftToIndex(positionLeft);
            var row = rowPositions.topToIndex(positionTop);
            if (row != null && col != null) {
                var cell = this.props.cells[row][col];
                return {
                    dateProfile: this.props.dateProfile,
                    dateSpan: __assign({ range: this.getCellRange(row, col), allDay: true }, cell.extraDateSpan),
                    dayEl: this.getCellEl(row, col),
                    rect: {
                        left: colPositions.lefts[col],
                        right: colPositions.rights[col],
                        top: rowPositions.tops[row],
                        bottom: rowPositions.bottoms[row],
                    },
                    layer: 0,
                };
            }
            return null;
        };
        Table.prototype.getCellEl = function (row, col) {
            return this.rowRefs.currentMap[row].getCellEls()[col]; // TODO: not optimal
        };
        Table.prototype.getCellRange = function (row, col) {
            var start = this.props.cells[row][col].date;
            var end = addDays(start, 1);
            return { start: start, end: end };
        };
        return Table;
    }(DateComponent));
    function isSegAllDay(seg) {
        return seg.eventRange.def.allDay;
    }

    var DayTableSlicer = /** @class */ (function (_super) {
        __extends(DayTableSlicer, _super);
        function DayTableSlicer() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.forceDayIfListItem = true;
            return _this;
        }
        DayTableSlicer.prototype.sliceRange = function (dateRange, dayTableModel) {
            return dayTableModel.sliceRange(dateRange);
        };
        return DayTableSlicer;
    }(Slicer));

    var DayTable = /** @class */ (function (_super) {
        __extends(DayTable, _super);
        function DayTable() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.slicer = new DayTableSlicer();
            _this.tableRef = createRef();
            return _this;
        }
        DayTable.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            return (createElement(Table, __assign({ ref: this.tableRef }, this.slicer.sliceProps(props, props.dateProfile, props.nextDayThreshold, context, props.dayTableModel), { dateProfile: props.dateProfile, cells: props.dayTableModel.cells, colGroupNode: props.colGroupNode, tableMinWidth: props.tableMinWidth, renderRowIntro: props.renderRowIntro, dayMaxEvents: props.dayMaxEvents, dayMaxEventRows: props.dayMaxEventRows, showWeekNumbers: props.showWeekNumbers, expandRows: props.expandRows, headerAlignElRef: props.headerAlignElRef, clientWidth: props.clientWidth, clientHeight: props.clientHeight, forPrint: props.forPrint })));
        };
        return DayTable;
    }(DateComponent));

    var DayTableView = /** @class */ (function (_super) {
        __extends(DayTableView, _super);
        function DayTableView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.buildDayTableModel = memoize(buildDayTableModel);
            _this.headerRef = createRef();
            _this.tableRef = createRef();
            return _this;
        }
        DayTableView.prototype.render = function () {
            var _this = this;
            var _a = this.context, options = _a.options, dateProfileGenerator = _a.dateProfileGenerator;
            var props = this.props;
            var dayTableModel = this.buildDayTableModel(props.dateProfile, dateProfileGenerator);
            var headerContent = options.dayHeaders && (createElement(DayHeader, { ref: this.headerRef, dateProfile: props.dateProfile, dates: dayTableModel.headerDates, datesRepDistinctDays: dayTableModel.rowCnt === 1 }));
            var bodyContent = function (contentArg) { return (createElement(DayTable, { ref: _this.tableRef, dateProfile: props.dateProfile, dayTableModel: dayTableModel, businessHours: props.businessHours, dateSelection: props.dateSelection, eventStore: props.eventStore, eventUiBases: props.eventUiBases, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, nextDayThreshold: options.nextDayThreshold, colGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, dayMaxEvents: options.dayMaxEvents, dayMaxEventRows: options.dayMaxEventRows, showWeekNumbers: options.weekNumbers, expandRows: !props.isHeightAuto, headerAlignElRef: _this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint })); };
            return options.dayMinWidth
                ? this.renderHScrollLayout(headerContent, bodyContent, dayTableModel.colCnt, options.dayMinWidth)
                : this.renderSimpleLayout(headerContent, bodyContent);
        };
        return DayTableView;
    }(TableView));
    function buildDayTableModel(dateProfile, dateProfileGenerator) {
        var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);
        return new DayTableModel(daySeries, /year|month|week/.test(dateProfile.currentRangeUnit));
    }

    var TableDateProfileGenerator = /** @class */ (function (_super) {
        __extends(TableDateProfileGenerator, _super);
        function TableDateProfileGenerator() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        // Computes the date range that will be rendered.
        TableDateProfileGenerator.prototype.buildRenderRange = function (currentRange, currentRangeUnit, isRangeAllDay) {
            var dateEnv = this.props.dateEnv;
            var renderRange = _super.prototype.buildRenderRange.call(this, currentRange, currentRangeUnit, isRangeAllDay);
            var start = renderRange.start;
            var end = renderRange.end;
            var endOfWeek;
            // year and month views should be aligned with weeks. this is already done for week
            if (/^(year|month)$/.test(currentRangeUnit)) {
                start = dateEnv.startOfWeek(start);
                // make end-of-week if not already
                endOfWeek = dateEnv.startOfWeek(end);
                if (endOfWeek.valueOf() !== end.valueOf()) {
                    end = addWeeks(endOfWeek, 1);
                }
            }
            // ensure 6 weeks
            if (this.props.monthMode &&
                this.props.fixedWeekCount) {
                var rowCnt = Math.ceil(// could be partial weeks due to hiddenDays
                diffWeeks(start, end));
                end = addWeeks(end, 6 - rowCnt);
            }
            return { start: start, end: end };
        };
        return TableDateProfileGenerator;
    }(DateProfileGenerator));

    var dayGridPlugin = createPlugin({
        initialView: 'dayGridMonth',
        views: {
            dayGrid: {
                component: DayTableView,
                dateProfileGeneratorClass: TableDateProfileGenerator,
            },
            dayGridDay: {
                type: 'dayGrid',
                duration: { days: 1 },
            },
            dayGridWeek: {
                type: 'dayGrid',
                duration: { weeks: 1 },
            },
            dayGridMonth: {
                type: 'dayGrid',
                duration: { months: 1 },
                monthMode: true,
                fixedWeekCount: true,
            },
        },
    });

    var AllDaySplitter = /** @class */ (function (_super) {
        __extends(AllDaySplitter, _super);
        function AllDaySplitter() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        AllDaySplitter.prototype.getKeyInfo = function () {
            return {
                allDay: {},
                timed: {},
            };
        };
        AllDaySplitter.prototype.getKeysForDateSpan = function (dateSpan) {
            if (dateSpan.allDay) {
                return ['allDay'];
            }
            return ['timed'];
        };
        AllDaySplitter.prototype.getKeysForEventDef = function (eventDef) {
            if (!eventDef.allDay) {
                return ['timed'];
            }
            if (hasBgRendering(eventDef)) {
                return ['timed', 'allDay'];
            }
            return ['allDay'];
        };
        return AllDaySplitter;
    }(Splitter));

    var DEFAULT_SLAT_LABEL_FORMAT = createFormatter({
        hour: 'numeric',
        minute: '2-digit',
        omitZeroMinute: true,
        meridiem: 'short',
    });
    function TimeColsAxisCell(props) {
        var classNames = [
            'fc-timegrid-slot',
            'fc-timegrid-slot-label',
            props.isLabeled ? 'fc-scrollgrid-shrink' : 'fc-timegrid-slot-minor',
        ];
        return (createElement(ViewContextType.Consumer, null, function (context) {
            if (!props.isLabeled) {
                return (createElement("td", { className: classNames.join(' '), "data-time": props.isoTimeStr }));
            }
            var dateEnv = context.dateEnv, options = context.options, viewApi = context.viewApi;
            var labelFormat = // TODO: fully pre-parse
             options.slotLabelFormat == null ? DEFAULT_SLAT_LABEL_FORMAT :
                Array.isArray(options.slotLabelFormat) ? createFormatter(options.slotLabelFormat[0]) :
                    createFormatter(options.slotLabelFormat);
            var hookProps = {
                level: 0,
                time: props.time,
                date: dateEnv.toDate(props.date),
                view: viewApi,
                text: dateEnv.format(props.date, labelFormat),
            };
            return (createElement(RenderHook, { hookProps: hookProps, classNames: options.slotLabelClassNames, content: options.slotLabelContent, defaultContent: renderInnerContent$1, didMount: options.slotLabelDidMount, willUnmount: options.slotLabelWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement("td", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), "data-time": props.isoTimeStr },
                createElement("div", { className: "fc-timegrid-slot-label-frame fc-scrollgrid-shrink-frame" },
                    createElement("div", { className: "fc-timegrid-slot-label-cushion fc-scrollgrid-shrink-cushion", ref: innerElRef }, innerContent)))); }));
        }));
    }
    function renderInnerContent$1(props) {
        return props.text;
    }

    var TimeBodyAxis = /** @class */ (function (_super) {
        __extends(TimeBodyAxis, _super);
        function TimeBodyAxis() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TimeBodyAxis.prototype.render = function () {
            return this.props.slatMetas.map(function (slatMeta) { return (createElement("tr", { key: slatMeta.key },
                createElement(TimeColsAxisCell, __assign({}, slatMeta)))); });
        };
        return TimeBodyAxis;
    }(BaseComponent));

    var DEFAULT_WEEK_NUM_FORMAT = createFormatter({ week: 'short' });
    var AUTO_ALL_DAY_MAX_EVENT_ROWS = 5;
    var TimeColsView = /** @class */ (function (_super) {
        __extends(TimeColsView, _super);
        function TimeColsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.allDaySplitter = new AllDaySplitter(); // for use by subclasses
            _this.headerElRef = createRef();
            _this.rootElRef = createRef();
            _this.scrollerElRef = createRef();
            _this.state = {
                slatCoords: null,
            };
            _this.handleScrollTopRequest = function (scrollTop) {
                var scrollerEl = _this.scrollerElRef.current;
                if (scrollerEl) { // TODO: not sure how this could ever be null. weirdness with the reducer
                    scrollerEl.scrollTop = scrollTop;
                }
            };
            /* Header Render Methods
            ------------------------------------------------------------------------------------------------------------------*/
            _this.renderHeadAxis = function (rowKey, frameHeight) {
                if (frameHeight === void 0) { frameHeight = ''; }
                var options = _this.context.options;
                var dateProfile = _this.props.dateProfile;
                var range = dateProfile.renderRange;
                var dayCnt = diffDays(range.start, range.end);
                var navLinkAttrs = (options.navLinks && dayCnt === 1) // only do in day views (to avoid doing in week views that dont need it)
                    ? { 'data-navlink': buildNavLinkData(range.start, 'week'), tabIndex: 0 }
                    : {};
                if (options.weekNumbers && rowKey === 'day') {
                    return (createElement(WeekNumberRoot, { date: range.start, defaultFormat: DEFAULT_WEEK_NUM_FORMAT }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement("th", { ref: rootElRef, className: [
                            'fc-timegrid-axis',
                            'fc-scrollgrid-shrink',
                        ].concat(classNames).join(' ') },
                        createElement("div", { className: "fc-timegrid-axis-frame fc-scrollgrid-shrink-frame fc-timegrid-axis-frame-liquid", style: { height: frameHeight } },
                            createElement("a", __assign({ ref: innerElRef, className: "fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner" }, navLinkAttrs), innerContent)))); }));
                }
                return (createElement("th", { className: "fc-timegrid-axis" },
                    createElement("div", { className: "fc-timegrid-axis-frame", style: { height: frameHeight } })));
            };
            /* Table Component Render Methods
            ------------------------------------------------------------------------------------------------------------------*/
            // only a one-way height sync. we don't send the axis inner-content height to the DayGrid,
            // but DayGrid still needs to have classNames on inner elements in order to measure.
            _this.renderTableRowAxis = function (rowHeight) {
                var _a = _this.context, options = _a.options, viewApi = _a.viewApi;
                var hookProps = {
                    text: options.allDayText,
                    view: viewApi,
                };
                return (
                // TODO: make reusable hook. used in list view too
                createElement(RenderHook, { hookProps: hookProps, classNames: options.allDayClassNames, content: options.allDayContent, defaultContent: renderAllDayInner$1, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement("td", { ref: rootElRef, className: [
                        'fc-timegrid-axis',
                        'fc-scrollgrid-shrink',
                    ].concat(classNames).join(' ') },
                    createElement("div", { className: 'fc-timegrid-axis-frame fc-scrollgrid-shrink-frame' + (rowHeight == null ? ' fc-timegrid-axis-frame-liquid' : ''), style: { height: rowHeight } },
                        createElement("span", { className: "fc-timegrid-axis-cushion fc-scrollgrid-shrink-cushion fc-scrollgrid-sync-inner", ref: innerElRef }, innerContent)))); }));
            };
            _this.handleSlatCoords = function (slatCoords) {
                _this.setState({ slatCoords: slatCoords });
            };
            return _this;
        }
        // rendering
        // ----------------------------------------------------------------------------------------------------
        TimeColsView.prototype.renderSimpleLayout = function (headerRowContent, allDayContent, timeContent) {
            var _a = this, context = _a.context, props = _a.props;
            var sections = [];
            var stickyHeaderDates = getStickyHeaderDates(context.options);
            if (headerRowContent) {
                sections.push({
                    type: 'header',
                    key: 'header',
                    isSticky: stickyHeaderDates,
                    chunk: {
                        elRef: this.headerElRef,
                        tableClassName: 'fc-col-header',
                        rowContent: headerRowContent,
                    },
                });
            }
            if (allDayContent) {
                sections.push({
                    type: 'body',
                    key: 'all-day',
                    chunk: { content: allDayContent },
                });
                sections.push({
                    type: 'body',
                    key: 'all-day-divider',
                    outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?
                    createElement("tr", { className: "fc-scrollgrid-section" },
                        createElement("td", { className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),
                });
            }
            sections.push({
                type: 'body',
                key: 'body',
                liquid: true,
                expandRows: Boolean(context.options.expandRows),
                chunk: {
                    scrollerElRef: this.scrollerElRef,
                    content: timeContent,
                },
            });
            return (createElement(ViewRoot, { viewSpec: context.viewSpec, elRef: this.rootElRef }, function (rootElRef, classNames) { return (createElement("div", { className: ['fc-timegrid'].concat(classNames).join(' '), ref: rootElRef },
                createElement(SimpleScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: props.forPrint, cols: [{ width: 'shrink' }], sections: sections }))); }));
        };
        TimeColsView.prototype.renderHScrollLayout = function (headerRowContent, allDayContent, timeContent, colCnt, dayMinWidth, slatMetas, slatCoords) {
            var _this = this;
            var ScrollGrid = this.context.pluginHooks.scrollGridImpl;
            if (!ScrollGrid) {
                throw new Error('No ScrollGrid implementation');
            }
            var _a = this, context = _a.context, props = _a.props;
            var stickyHeaderDates = !props.forPrint && getStickyHeaderDates(context.options);
            var stickyFooterScrollbar = !props.forPrint && getStickyFooterScrollbar(context.options);
            var sections = [];
            if (headerRowContent) {
                sections.push({
                    type: 'header',
                    key: 'header',
                    isSticky: stickyHeaderDates,
                    syncRowHeights: true,
                    chunks: [
                        {
                            key: 'axis',
                            rowContent: function (arg) { return (createElement("tr", null, _this.renderHeadAxis('day', arg.rowSyncHeights[0]))); },
                        },
                        {
                            key: 'cols',
                            elRef: this.headerElRef,
                            tableClassName: 'fc-col-header',
                            rowContent: headerRowContent,
                        },
                    ],
                });
            }
            if (allDayContent) {
                sections.push({
                    type: 'body',
                    key: 'all-day',
                    syncRowHeights: true,
                    chunks: [
                        {
                            key: 'axis',
                            rowContent: function (contentArg) { return (createElement("tr", null, _this.renderTableRowAxis(contentArg.rowSyncHeights[0]))); },
                        },
                        {
                            key: 'cols',
                            content: allDayContent,
                        },
                    ],
                });
                sections.push({
                    key: 'all-day-divider',
                    type: 'body',
                    outerContent: ( // TODO: rename to cellContent so don't need to define <tr>?
                    createElement("tr", { className: "fc-scrollgrid-section" },
                        createElement("td", { colSpan: 2, className: 'fc-timegrid-divider ' + context.theme.getClass('tableCellShaded') }))),
                });
            }
            var isNowIndicator = context.options.nowIndicator;
            sections.push({
                type: 'body',
                key: 'body',
                liquid: true,
                expandRows: Boolean(context.options.expandRows),
                chunks: [
                    {
                        key: 'axis',
                        content: function (arg) { return (
                        // TODO: make this now-indicator arrow more DRY with TimeColsContent
                        createElement("div", { className: "fc-timegrid-axis-chunk" },
                            createElement("table", { style: { height: arg.expandRows ? arg.clientHeight : '' } },
                                arg.tableColGroupNode,
                                createElement("tbody", null,
                                    createElement(TimeBodyAxis, { slatMetas: slatMetas }))),
                            createElement("div", { className: "fc-timegrid-now-indicator-container" },
                                createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' /* hacky */ }, function (nowDate) {
                                    var nowIndicatorTop = isNowIndicator &&
                                        slatCoords &&
                                        slatCoords.safeComputeTop(nowDate); // might return void
                                    if (typeof nowIndicatorTop === 'number') {
                                        return (createElement(NowIndicatorRoot, { isAxis: true, date: nowDate }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement("div", { ref: rootElRef, className: ['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' '), style: { top: nowIndicatorTop } }, innerContent)); }));
                                    }
                                    return null;
                                })))); },
                    },
                    {
                        key: 'cols',
                        scrollerElRef: this.scrollerElRef,
                        content: timeContent,
                    },
                ],
            });
            if (stickyFooterScrollbar) {
                sections.push({
                    key: 'footer',
                    type: 'footer',
                    isSticky: true,
                    chunks: [
                        {
                            key: 'axis',
                            content: renderScrollShim,
                        },
                        {
                            key: 'cols',
                            content: renderScrollShim,
                        },
                    ],
                });
            }
            return (createElement(ViewRoot, { viewSpec: context.viewSpec, elRef: this.rootElRef }, function (rootElRef, classNames) { return (createElement("div", { className: ['fc-timegrid'].concat(classNames).join(' '), ref: rootElRef },
                createElement(ScrollGrid, { liquid: !props.isHeightAuto && !props.forPrint, collapsibleWidth: false, colGroups: [
                        { width: 'shrink', cols: [{ width: 'shrink' }] },
                        { cols: [{ span: colCnt, minWidth: dayMinWidth }] },
                    ], sections: sections }))); }));
        };
        /* Dimensions
        ------------------------------------------------------------------------------------------------------------------*/
        TimeColsView.prototype.getAllDayMaxEventProps = function () {
            var _a = this.context.options, dayMaxEvents = _a.dayMaxEvents, dayMaxEventRows = _a.dayMaxEventRows;
            if (dayMaxEvents === true || dayMaxEventRows === true) { // is auto?
                dayMaxEvents = undefined;
                dayMaxEventRows = AUTO_ALL_DAY_MAX_EVENT_ROWS; // make sure "auto" goes to a real number
            }
            return { dayMaxEvents: dayMaxEvents, dayMaxEventRows: dayMaxEventRows };
        };
        return TimeColsView;
    }(DateComponent));
    function renderAllDayInner$1(hookProps) {
        return hookProps.text;
    }

    var TimeColsSlatsCoords = /** @class */ (function () {
        function TimeColsSlatsCoords(positions, dateProfile, slotDuration) {
            this.positions = positions;
            this.dateProfile = dateProfile;
            this.slotDuration = slotDuration;
        }
        TimeColsSlatsCoords.prototype.safeComputeTop = function (date) {
            var dateProfile = this.dateProfile;
            if (rangeContainsMarker(dateProfile.currentRange, date)) {
                var startOfDayDate = startOfDay(date);
                var timeMs = date.valueOf() - startOfDayDate.valueOf();
                if (timeMs >= asRoughMs(dateProfile.slotMinTime) &&
                    timeMs < asRoughMs(dateProfile.slotMaxTime)) {
                    return this.computeTimeTop(createDuration(timeMs));
                }
            }
            return null;
        };
        // Computes the top coordinate, relative to the bounds of the grid, of the given date.
        // A \`startOfDayDate\` must be given for avoiding ambiguity over how to treat midnight.
        TimeColsSlatsCoords.prototype.computeDateTop = function (when, startOfDayDate) {
            if (!startOfDayDate) {
                startOfDayDate = startOfDay(when);
            }
            return this.computeTimeTop(createDuration(when.valueOf() - startOfDayDate.valueOf()));
        };
        // Computes the top coordinate, relative to the bounds of the grid, of the given time (a Duration).
        // This is a makeshify way to compute the time-top. Assumes all slatMetas dates are uniform.
        // Eventually allow computation with arbirary slat dates.
        TimeColsSlatsCoords.prototype.computeTimeTop = function (duration) {
            var _a = this, positions = _a.positions, dateProfile = _a.dateProfile;
            var len = positions.els.length;
            // floating-point value of # of slots covered
            var slatCoverage = (duration.milliseconds - asRoughMs(dateProfile.slotMinTime)) / asRoughMs(this.slotDuration);
            var slatIndex;
            var slatRemainder;
            // compute a floating-point number for how many slats should be progressed through.
            // from 0 to number of slats (inclusive)
            // constrained because slotMinTime/slotMaxTime might be customized.
            slatCoverage = Math.max(0, slatCoverage);
            slatCoverage = Math.min(len, slatCoverage);
            // an integer index of the furthest whole slat
            // from 0 to number slats (*exclusive*, so len-1)
            slatIndex = Math.floor(slatCoverage);
            slatIndex = Math.min(slatIndex, len - 1);
            // how much further through the slatIndex slat (from 0.0-1.0) must be covered in addition.
            // could be 1.0 if slatCoverage is covering *all* the slots
            slatRemainder = slatCoverage - slatIndex;
            return positions.tops[slatIndex] +
                positions.getHeight(slatIndex) * slatRemainder;
        };
        return TimeColsSlatsCoords;
    }());

    var TimeColsSlatsBody = /** @class */ (function (_super) {
        __extends(TimeColsSlatsBody, _super);
        function TimeColsSlatsBody() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TimeColsSlatsBody.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            var options = context.options;
            var slatElRefs = props.slatElRefs;
            return (createElement("tbody", null, props.slatMetas.map(function (slatMeta, i) {
                var hookProps = {
                    time: slatMeta.time,
                    date: context.dateEnv.toDate(slatMeta.date),
                    view: context.viewApi,
                };
                var classNames = [
                    'fc-timegrid-slot',
                    'fc-timegrid-slot-lane',
                    slatMeta.isLabeled ? '' : 'fc-timegrid-slot-minor',
                ];
                return (createElement("tr", { key: slatMeta.key, ref: slatElRefs.createRef(slatMeta.key) },
                    props.axis && (createElement(TimeColsAxisCell, __assign({}, slatMeta))),
                    createElement(RenderHook, { hookProps: hookProps, classNames: options.slotLaneClassNames, content: options.slotLaneContent, didMount: options.slotLaneDidMount, willUnmount: options.slotLaneWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement("td", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), "data-time": slatMeta.isoTimeStr }, innerContent)); })));
            })));
        };
        return TimeColsSlatsBody;
    }(BaseComponent));

    /*
    for the horizontal "slats" that run width-wise. Has a time axis on a side. Depends on RTL.
    */
    var TimeColsSlats = /** @class */ (function (_super) {
        __extends(TimeColsSlats, _super);
        function TimeColsSlats() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.rootElRef = createRef();
            _this.slatElRefs = new RefMap();
            return _this;
        }
        TimeColsSlats.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            return (createElement("div", { className: "fc-timegrid-slots", ref: this.rootElRef },
                createElement("table", { className: context.theme.getClass('table'), style: {
                        minWidth: props.tableMinWidth,
                        width: props.clientWidth,
                        height: props.minHeight,
                    } },
                    props.tableColGroupNode /* relies on there only being a single <col> for the axis */,
                    createElement(TimeColsSlatsBody, { slatElRefs: this.slatElRefs, axis: props.axis, slatMetas: props.slatMetas }))));
        };
        TimeColsSlats.prototype.componentDidMount = function () {
            this.updateSizing();
        };
        TimeColsSlats.prototype.componentDidUpdate = function () {
            this.updateSizing();
        };
        TimeColsSlats.prototype.componentWillUnmount = function () {
            if (this.props.onCoords) {
                this.props.onCoords(null);
            }
        };
        TimeColsSlats.prototype.updateSizing = function () {
            var _a = this, context = _a.context, props = _a.props;
            if (props.onCoords &&
                props.clientWidth !== null // means sizing has stabilized
            ) {
                var rootEl = this.rootElRef.current;
                if (rootEl.offsetHeight) { // not hidden by css
                    props.onCoords(new TimeColsSlatsCoords(new PositionCache(this.rootElRef.current, collectSlatEls(this.slatElRefs.currentMap, props.slatMetas), false, true), this.props.dateProfile, context.options.slotDuration));
                }
            }
        };
        return TimeColsSlats;
    }(BaseComponent));
    function collectSlatEls(elMap, slatMetas) {
        return slatMetas.map(function (slatMeta) { return elMap[slatMeta.key]; });
    }

    function splitSegsByCol(segs, colCnt) {
        var segsByCol = [];
        var i;
        for (i = 0; i < colCnt; i += 1) {
            segsByCol.push([]);
        }
        if (segs) {
            for (i = 0; i < segs.length; i += 1) {
                segsByCol[segs[i].col].push(segs[i]);
            }
        }
        return segsByCol;
    }
    function splitInteractionByCol(ui, colCnt) {
        var byRow = [];
        if (!ui) {
            for (var i = 0; i < colCnt; i += 1) {
                byRow[i] = null;
            }
        }
        else {
            for (var i = 0; i < colCnt; i += 1) {
                byRow[i] = {
                    affectedInstances: ui.affectedInstances,
                    isEvent: ui.isEvent,
                    segs: [],
                };
            }
            for (var _i = 0, _a = ui.segs; _i < _a.length; _i++) {
                var seg = _a[_i];
                byRow[seg.col].segs.push(seg);
            }
        }
        return byRow;
    }

    var TimeColMoreLink = /** @class */ (function (_super) {
        __extends(TimeColMoreLink, _super);
        function TimeColMoreLink() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.rootElRef = createRef();
            return _this;
        }
        TimeColMoreLink.prototype.render = function () {
            var _this = this;
            var props = this.props;
            return (createElement(MoreLinkRoot, { allDayDate: null, moreCnt: props.hiddenSegs.length, allSegs: props.hiddenSegs, hiddenSegs: props.hiddenSegs, alignmentElRef: this.rootElRef, defaultContent: renderMoreLinkInner, extraDateSpan: props.extraDateSpan, dateProfile: props.dateProfile, todayRange: props.todayRange, popoverContent: function () { return renderPlainFgSegs(props.hiddenSegs, props); } }, function (rootElRef, classNames, innerElRef, innerContent, handleClick) { return (createElement("a", { ref: function (el) {
                    setRef(rootElRef, el);
                    setRef(_this.rootElRef, el);
                }, className: ['fc-timegrid-more-link'].concat(classNames).join(' '), style: { top: props.top, bottom: props.bottom }, onClick: handleClick },
                createElement("div", { ref: innerElRef, className: "fc-timegrid-more-link-inner fc-sticky" }, innerContent))); }));
        };
        return TimeColMoreLink;
    }(BaseComponent));
    function renderMoreLinkInner(props) {
        return props.shortText;
    }

    // segInputs assumed sorted
    function buildPositioning(segInputs, strictOrder, maxStackCnt) {
        var hierarchy = new SegHierarchy();
        if (strictOrder != null) {
            hierarchy.strictOrder = strictOrder;
        }
        if (maxStackCnt != null) {
            hierarchy.maxStackCnt = maxStackCnt;
        }
        var hiddenEntries = hierarchy.addSegs(segInputs);
        var hiddenGroups = groupIntersectingEntries(hiddenEntries);
        var web = buildWeb(hierarchy);
        web = stretchWeb(web, 1); // all levelCoords/thickness will have 0.0-1.0
        var segRects = webToRects(web);
        return { segRects: segRects, hiddenGroups: hiddenGroups };
    }
    function buildWeb(hierarchy) {
        var entriesByLevel = hierarchy.entriesByLevel;
        var buildNode = cacheable(function (level, lateral) { return level + ':' + lateral; }, function (level, lateral) {
            var siblingRange = findNextLevelSegs(hierarchy, level, lateral);
            var nextLevelRes = buildNodes(siblingRange, buildNode);
            var entry = entriesByLevel[level][lateral];
            return [
                __assign(__assign({}, entry), { nextLevelNodes: nextLevelRes[0] }),
                entry.thickness + nextLevelRes[1], // the pressure builds
            ];
        });
        return buildNodes(entriesByLevel.length
            ? { level: 0, lateralStart: 0, lateralEnd: entriesByLevel[0].length }
            : null, buildNode)[0];
    }
    function buildNodes(siblingRange, buildNode) {
        if (!siblingRange) {
            return [[], 0];
        }
        var level = siblingRange.level, lateralStart = siblingRange.lateralStart, lateralEnd = siblingRange.lateralEnd;
        var lateral = lateralStart;
        var pairs = [];
        while (lateral < lateralEnd) {
            pairs.push(buildNode(level, lateral));
            lateral += 1;
        }
        pairs.sort(cmpDescPressures);
        return [
            pairs.map(extractNode),
            pairs[0][1], // first item's pressure
        ];
    }
    function cmpDescPressures(a, b) {
        return b[1] - a[1];
    }
    function extractNode(a) {
        return a[0];
    }
    function findNextLevelSegs(hierarchy, subjectLevel, subjectLateral) {
        var levelCoords = hierarchy.levelCoords, entriesByLevel = hierarchy.entriesByLevel;
        var subjectEntry = entriesByLevel[subjectLevel][subjectLateral];
        var afterSubject = levelCoords[subjectLevel] + subjectEntry.thickness;
        var levelCnt = levelCoords.length;
        var level = subjectLevel;
        // skip past levels that are too high up
        for (; level < levelCnt && levelCoords[level] < afterSubject; level += 1)
            ; // do nothing
        for (; level < levelCnt; level += 1) {
            var entries = entriesByLevel[level];
            var entry = void 0;
            var searchIndex = binarySearch(entries, subjectEntry.span.start, getEntrySpanEnd);
            var lateralStart = searchIndex[0] + searchIndex[1]; // if exact match (which doesn't collide), go to next one
            var lateralEnd = lateralStart;
            while ( // loop through entries that horizontally intersect
            (entry = entries[lateralEnd]) && // but not past the whole seg list
                entry.span.start < subjectEntry.span.end) {
                lateralEnd += 1;
            }
            if (lateralStart < lateralEnd) {
                return { level: level, lateralStart: lateralStart, lateralEnd: lateralEnd };
            }
        }
        return null;
    }
    function stretchWeb(topLevelNodes, totalThickness) {
        var stretchNode = cacheable(function (node, startCoord, prevThickness) { return buildEntryKey(node); }, function (node, startCoord, prevThickness) {
            var nextLevelNodes = node.nextLevelNodes, thickness = node.thickness;
            var allThickness = thickness + prevThickness;
            var thicknessFraction = thickness / allThickness;
            var endCoord;
            var newChildren = [];
            if (!nextLevelNodes.length) {
                endCoord = totalThickness;
            }
            else {
                for (var _i = 0, nextLevelNodes_1 = nextLevelNodes; _i < nextLevelNodes_1.length; _i++) {
                    var childNode = nextLevelNodes_1[_i];
                    if (endCoord === undefined) {
                        var res = stretchNode(childNode, startCoord, allThickness);
                        endCoord = res[0];
                        newChildren.push(res[1]);
                    }
                    else {
                        var res = stretchNode(childNode, endCoord, 0);
                        newChildren.push(res[1]);
                    }
                }
            }
            var newThickness = (endCoord - startCoord) * thicknessFraction;
            return [endCoord - newThickness, __assign(__assign({}, node), { thickness: newThickness, nextLevelNodes: newChildren })];
        });
        return topLevelNodes.map(function (node) { return stretchNode(node, 0, 0)[1]; });
    }
    // not sorted in any particular order
    function webToRects(topLevelNodes) {
        var rects = [];
        var processNode = cacheable(function (node, levelCoord, stackDepth) { return buildEntryKey(node); }, function (node, levelCoord, stackDepth) {
            var rect = __assign(__assign({}, node), { levelCoord: levelCoord,
                stackDepth: stackDepth, stackForward: 0 });
            rects.push(rect);
            return (rect.stackForward = processNodes(node.nextLevelNodes, levelCoord + node.thickness, stackDepth + 1) + 1);
        });
        function processNodes(nodes, levelCoord, stackDepth) {
            var stackForward = 0;
            for (var _i = 0, nodes_1 = nodes; _i < nodes_1.length; _i++) {
                var node = nodes_1[_i];
                stackForward = Math.max(processNode(node, levelCoord, stackDepth), stackForward);
            }
            return stackForward;
        }
        processNodes(topLevelNodes, 0, 0);
        return rects; // TODO: sort rects by levelCoord to be consistent with toRects?
    }
    // TODO: move to general util
    function cacheable(keyFunc, workFunc) {
        var cache = {};
        return function () {
            var args = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                args[_i] = arguments[_i];
            }
            var key = keyFunc.apply(void 0, args);
            return (key in cache)
                ? cache[key]
                : (cache[key] = workFunc.apply(void 0, args));
        };
    }

    function computeSegVCoords(segs, colDate, slatCoords, eventMinHeight) {
        if (slatCoords === void 0) { slatCoords = null; }
        if (eventMinHeight === void 0) { eventMinHeight = 0; }
        var vcoords = [];
        if (slatCoords) {
            for (var i = 0; i < segs.length; i += 1) {
                var seg = segs[i];
                var spanStart = slatCoords.computeDateTop(seg.start, colDate);
                var spanEnd = Math.max(spanStart + (eventMinHeight || 0), // :(
                slatCoords.computeDateTop(seg.end, colDate));
                vcoords.push({
                    start: Math.round(spanStart),
                    end: Math.round(spanEnd), //
                });
            }
        }
        return vcoords;
    }
    function computeFgSegPlacements(segs, segVCoords, // might not have for every seg
    eventOrderStrict, eventMaxStack) {
        var segInputs = [];
        var dumbSegs = []; // segs without coords
        for (var i = 0; i < segs.length; i += 1) {
            var vcoords = segVCoords[i];
            if (vcoords) {
                segInputs.push({
                    index: i,
                    thickness: 1,
                    span: vcoords,
                });
            }
            else {
                dumbSegs.push(segs[i]);
            }
        }
        var _a = buildPositioning(segInputs, eventOrderStrict, eventMaxStack), segRects = _a.segRects, hiddenGroups = _a.hiddenGroups;
        var segPlacements = [];
        for (var _i = 0, segRects_1 = segRects; _i < segRects_1.length; _i++) {
            var segRect = segRects_1[_i];
            segPlacements.push({
                seg: segs[segRect.index],
                rect: segRect,
            });
        }
        for (var _b = 0, dumbSegs_1 = dumbSegs; _b < dumbSegs_1.length; _b++) {
            var dumbSeg = dumbSegs_1[_b];
            segPlacements.push({ seg: dumbSeg, rect: null });
        }
        return { segPlacements: segPlacements, hiddenGroups: hiddenGroups };
    }

    var DEFAULT_TIME_FORMAT$1 = createFormatter({
        hour: 'numeric',
        minute: '2-digit',
        meridiem: false,
    });
    var TimeColEvent = /** @class */ (function (_super) {
        __extends(TimeColEvent, _super);
        function TimeColEvent() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TimeColEvent.prototype.render = function () {
            var classNames = [
                'fc-timegrid-event',
                'fc-v-event',
            ];
            if (this.props.isShort) {
                classNames.push('fc-timegrid-event-short');
            }
            return (createElement(StandardEvent, __assign({}, this.props, { defaultTimeFormat: DEFAULT_TIME_FORMAT$1, extraClassNames: classNames })));
        };
        return TimeColEvent;
    }(BaseComponent));

    var TimeColMisc = /** @class */ (function (_super) {
        __extends(TimeColMisc, _super);
        function TimeColMisc() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        TimeColMisc.prototype.render = function () {
            var props = this.props;
            return (createElement(DayCellContent, { date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps }, function (innerElRef, innerContent) { return (innerContent &&
                createElement("div", { className: "fc-timegrid-col-misc", ref: innerElRef }, innerContent)); }));
        };
        return TimeColMisc;
    }(BaseComponent));

    var TimeCol = /** @class */ (function (_super) {
        __extends(TimeCol, _super);
        function TimeCol() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.sortEventSegs = memoize(sortEventSegs);
            return _this;
        }
        // TODO: memoize event-placement?
        TimeCol.prototype.render = function () {
            var _this = this;
            var _a = this, props = _a.props, context = _a.context;
            var isSelectMirror = context.options.selectMirror;
            var mirrorSegs = (props.eventDrag && props.eventDrag.segs) ||
                (props.eventResize && props.eventResize.segs) ||
                (isSelectMirror && props.dateSelectionSegs) ||
                [];
            var interactionAffectedInstances = // TODO: messy way to compute this
             (props.eventDrag && props.eventDrag.affectedInstances) ||
                (props.eventResize && props.eventResize.affectedInstances) ||
                {};
            var sortedFgSegs = this.sortEventSegs(props.fgEventSegs, context.options.eventOrder);
            return (createElement(DayCellRoot, { elRef: props.elRef, date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps }, function (rootElRef, classNames, dataAttrs) { return (createElement("td", __assign({ ref: rootElRef, className: ['fc-timegrid-col'].concat(classNames, props.extraClassNames || []).join(' ') }, dataAttrs, props.extraDataAttrs),
                createElement("div", { className: "fc-timegrid-col-frame" },
                    createElement("div", { className: "fc-timegrid-col-bg" },
                        _this.renderFillSegs(props.businessHourSegs, 'non-business'),
                        _this.renderFillSegs(props.bgEventSegs, 'bg-event'),
                        _this.renderFillSegs(props.dateSelectionSegs, 'highlight')),
                    createElement("div", { className: "fc-timegrid-col-events" }, _this.renderFgSegs(sortedFgSegs, interactionAffectedInstances, false, false, false)),
                    createElement("div", { className: "fc-timegrid-col-events" }, _this.renderFgSegs(mirrorSegs, {}, Boolean(props.eventDrag), Boolean(props.eventResize), Boolean(isSelectMirror))),
                    createElement("div", { className: "fc-timegrid-now-indicator-container" }, _this.renderNowIndicator(props.nowIndicatorSegs)),
                    createElement(TimeColMisc, { date: props.date, dateProfile: props.dateProfile, todayRange: props.todayRange, extraHookProps: props.extraHookProps })))); }));
        };
        TimeCol.prototype.renderFgSegs = function (sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting) {
            var props = this.props;
            if (props.forPrint) {
                return renderPlainFgSegs(sortedFgSegs, props);
            }
            return this.renderPositionedFgSegs(sortedFgSegs, segIsInvisible, isDragging, isResizing, isDateSelecting);
        };
        TimeCol.prototype.renderPositionedFgSegs = function (segs, // if not mirror, needs to be sorted
        segIsInvisible, isDragging, isResizing, isDateSelecting) {
            var _this = this;
            var _a = this.context.options, eventMaxStack = _a.eventMaxStack, eventShortHeight = _a.eventShortHeight, eventOrderStrict = _a.eventOrderStrict, eventMinHeight = _a.eventMinHeight;
            var _b = this.props, date = _b.date, slatCoords = _b.slatCoords, eventSelection = _b.eventSelection, todayRange = _b.todayRange, nowDate = _b.nowDate;
            var isMirror = isDragging || isResizing || isDateSelecting;
            var segVCoords = computeSegVCoords(segs, date, slatCoords, eventMinHeight);
            var _c = computeFgSegPlacements(segs, segVCoords, eventOrderStrict, eventMaxStack), segPlacements = _c.segPlacements, hiddenGroups = _c.hiddenGroups;
            return (createElement(Fragment, null,
                this.renderHiddenGroups(hiddenGroups, segs),
                segPlacements.map(function (segPlacement) {
                    var seg = segPlacement.seg, rect = segPlacement.rect;
                    var instanceId = seg.eventRange.instance.instanceId;
                    var isVisible = isMirror || Boolean(!segIsInvisible[instanceId] && rect);
                    var vStyle = computeSegVStyle(rect && rect.span);
                    var hStyle = (!isMirror && rect) ? _this.computeSegHStyle(rect) : { left: 0, right: 0 };
                    var isInset = Boolean(rect) && rect.stackForward > 0;
                    var isShort = Boolean(rect) && (rect.span.end - rect.span.start) < eventShortHeight; // look at other places for this problem
                    return (createElement("div", { className: 'fc-timegrid-event-harness' +
                            (isInset ? ' fc-timegrid-event-harness-inset' : ''), key: instanceId, style: __assign(__assign({ visibility: isVisible ? '' : 'hidden' }, vStyle), hStyle) },
                        createElement(TimeColEvent, __assign({ seg: seg, isDragging: isDragging, isResizing: isResizing, isDateSelecting: isDateSelecting, isSelected: instanceId === eventSelection, isShort: isShort }, getSegMeta(seg, todayRange, nowDate)))));
                })));
        };
        // will already have eventMinHeight applied because segInputs already had it
        TimeCol.prototype.renderHiddenGroups = function (hiddenGroups, segs) {
            var _a = this.props, extraDateSpan = _a.extraDateSpan, dateProfile = _a.dateProfile, todayRange = _a.todayRange, nowDate = _a.nowDate, eventSelection = _a.eventSelection, eventDrag = _a.eventDrag, eventResize = _a.eventResize;
            return (createElement(Fragment, null, hiddenGroups.map(function (hiddenGroup) {
                var positionCss = computeSegVStyle(hiddenGroup.span);
                var hiddenSegs = compileSegsFromEntries(hiddenGroup.entries, segs);
                return (createElement(TimeColMoreLink, { key: buildIsoString(computeEarliestSegStart(hiddenSegs)), hiddenSegs: hiddenSegs, top: positionCss.top, bottom: positionCss.bottom, extraDateSpan: extraDateSpan, dateProfile: dateProfile, todayRange: todayRange, nowDate: nowDate, eventSelection: eventSelection, eventDrag: eventDrag, eventResize: eventResize }));
            })));
        };
        TimeCol.prototype.renderFillSegs = function (segs, fillType) {
            var _a = this, props = _a.props, context = _a.context;
            var segVCoords = computeSegVCoords(segs, props.date, props.slatCoords, context.options.eventMinHeight); // don't assume all populated
            var children = segVCoords.map(function (vcoords, i) {
                var seg = segs[i];
                return (createElement("div", { key: buildEventRangeKey(seg.eventRange), className: "fc-timegrid-bg-harness", style: computeSegVStyle(vcoords) }, fillType === 'bg-event' ?
                    createElement(BgEvent, __assign({ seg: seg }, getSegMeta(seg, props.todayRange, props.nowDate))) :
                    renderFill(fillType)));
            });
            return createElement(Fragment, null, children);
        };
        TimeCol.prototype.renderNowIndicator = function (segs) {
            var _a = this.props, slatCoords = _a.slatCoords, date = _a.date;
            if (!slatCoords) {
                return null;
            }
            return segs.map(function (seg, i) { return (createElement(NowIndicatorRoot, { isAxis: false, date: date, 
                // key doesn't matter. will only ever be one
                key: i }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement("div", { ref: rootElRef, className: ['fc-timegrid-now-indicator-line'].concat(classNames).join(' '), style: { top: slatCoords.computeDateTop(seg.start, date) } }, innerContent)); })); });
        };
        TimeCol.prototype.computeSegHStyle = function (segHCoords) {
            var _a = this.context, isRtl = _a.isRtl, options = _a.options;
            var shouldOverlap = options.slotEventOverlap;
            var nearCoord = segHCoords.levelCoord; // the left side if LTR. the right side if RTL. floating-point
            var farCoord = segHCoords.levelCoord + segHCoords.thickness; // the right side if LTR. the left side if RTL. floating-point
            var left; // amount of space from left edge, a fraction of the total width
            var right; // amount of space from right edge, a fraction of the total width
            if (shouldOverlap) {
                // double the width, but don't go beyond the maximum forward coordinate (1.0)
                farCoord = Math.min(1, nearCoord + (farCoord - nearCoord) * 2);
            }
            if (isRtl) {
                left = 1 - farCoord;
                right = nearCoord;
            }
            else {
                left = nearCoord;
                right = 1 - farCoord;
            }
            var props = {
                zIndex: segHCoords.stackDepth + 1,
                left: left * 100 + '%',
                right: right * 100 + '%',
            };
            if (shouldOverlap && !segHCoords.stackForward) {
                // add padding to the edge so that forward stacked events don't cover the resizer's icon
                props[isRtl ? 'marginLeft' : 'marginRight'] = 10 * 2; // 10 is a guesstimate of the icon's width
            }
            return props;
        };
        return TimeCol;
    }(BaseComponent));
    function renderPlainFgSegs(sortedFgSegs, _a) {
        var todayRange = _a.todayRange, nowDate = _a.nowDate, eventSelection = _a.eventSelection, eventDrag = _a.eventDrag, eventResize = _a.eventResize;
        var hiddenInstances = (eventDrag ? eventDrag.affectedInstances : null) ||
            (eventResize ? eventResize.affectedInstances : null) ||
            {};
        return (createElement(Fragment, null, sortedFgSegs.map(function (seg) {
            var instanceId = seg.eventRange.instance.instanceId;
            return (createElement("div", { key: instanceId, style: { visibility: hiddenInstances[instanceId] ? 'hidden' : '' } },
                createElement(TimeColEvent, __assign({ seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: instanceId === eventSelection, isShort: false }, getSegMeta(seg, todayRange, nowDate)))));
        })));
    }
    function computeSegVStyle(segVCoords) {
        if (!segVCoords) {
            return { top: '', bottom: '' };
        }
        return {
            top: segVCoords.start,
            bottom: -segVCoords.end,
        };
    }
    function compileSegsFromEntries(segEntries, allSegs) {
        return segEntries.map(function (segEntry) { return allSegs[segEntry.index]; });
    }

    var TimeColsContent = /** @class */ (function (_super) {
        __extends(TimeColsContent, _super);
        function TimeColsContent() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.splitFgEventSegs = memoize(splitSegsByCol);
            _this.splitBgEventSegs = memoize(splitSegsByCol);
            _this.splitBusinessHourSegs = memoize(splitSegsByCol);
            _this.splitNowIndicatorSegs = memoize(splitSegsByCol);
            _this.splitDateSelectionSegs = memoize(splitSegsByCol);
            _this.splitEventDrag = memoize(splitInteractionByCol);
            _this.splitEventResize = memoize(splitInteractionByCol);
            _this.rootElRef = createRef();
            _this.cellElRefs = new RefMap();
            return _this;
        }
        TimeColsContent.prototype.render = function () {
            var _this = this;
            var _a = this, props = _a.props, context = _a.context;
            var nowIndicatorTop = context.options.nowIndicator &&
                props.slatCoords &&
                props.slatCoords.safeComputeTop(props.nowDate); // might return void
            var colCnt = props.cells.length;
            var fgEventSegsByRow = this.splitFgEventSegs(props.fgEventSegs, colCnt);
            var bgEventSegsByRow = this.splitBgEventSegs(props.bgEventSegs, colCnt);
            var businessHourSegsByRow = this.splitBusinessHourSegs(props.businessHourSegs, colCnt);
            var nowIndicatorSegsByRow = this.splitNowIndicatorSegs(props.nowIndicatorSegs, colCnt);
            var dateSelectionSegsByRow = this.splitDateSelectionSegs(props.dateSelectionSegs, colCnt);
            var eventDragByRow = this.splitEventDrag(props.eventDrag, colCnt);
            var eventResizeByRow = this.splitEventResize(props.eventResize, colCnt);
            return (createElement("div", { className: "fc-timegrid-cols", ref: this.rootElRef },
                createElement("table", { style: {
                        minWidth: props.tableMinWidth,
                        width: props.clientWidth,
                    } },
                    props.tableColGroupNode,
                    createElement("tbody", null,
                        createElement("tr", null,
                            props.axis && (createElement("td", { className: "fc-timegrid-col fc-timegrid-axis" },
                                createElement("div", { className: "fc-timegrid-col-frame" },
                                    createElement("div", { className: "fc-timegrid-now-indicator-container" }, typeof nowIndicatorTop === 'number' && (createElement(NowIndicatorRoot, { isAxis: true, date: props.nowDate }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement("div", { ref: rootElRef, className: ['fc-timegrid-now-indicator-arrow'].concat(classNames).join(' '), style: { top: nowIndicatorTop } }, innerContent)); })))))),
                            props.cells.map(function (cell, i) { return (createElement(TimeCol, { key: cell.key, elRef: _this.cellElRefs.createRef(cell.key), dateProfile: props.dateProfile, date: cell.date, nowDate: props.nowDate, todayRange: props.todayRange, extraHookProps: cell.extraHookProps, extraDataAttrs: cell.extraDataAttrs, extraClassNames: cell.extraClassNames, extraDateSpan: cell.extraDateSpan, fgEventSegs: fgEventSegsByRow[i], bgEventSegs: bgEventSegsByRow[i], businessHourSegs: businessHourSegsByRow[i], nowIndicatorSegs: nowIndicatorSegsByRow[i], dateSelectionSegs: dateSelectionSegsByRow[i], eventDrag: eventDragByRow[i], eventResize: eventResizeByRow[i], slatCoords: props.slatCoords, eventSelection: props.eventSelection, forPrint: props.forPrint })); }))))));
        };
        TimeColsContent.prototype.componentDidMount = function () {
            this.updateCoords();
        };
        TimeColsContent.prototype.componentDidUpdate = function () {
            this.updateCoords();
        };
        TimeColsContent.prototype.updateCoords = function () {
            var props = this.props;
            if (props.onColCoords &&
                props.clientWidth !== null // means sizing has stabilized
            ) {
                props.onColCoords(new PositionCache(this.rootElRef.current, collectCellEls(this.cellElRefs.currentMap, props.cells), true, // horizontal
                false));
            }
        };
        return TimeColsContent;
    }(BaseComponent));
    function collectCellEls(elMap, cells) {
        return cells.map(function (cell) { return elMap[cell.key]; });
    }

    /* A component that renders one or more columns of vertical time slots
    ----------------------------------------------------------------------------------------------------------------------*/
    var TimeCols = /** @class */ (function (_super) {
        __extends(TimeCols, _super);
        function TimeCols() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.processSlotOptions = memoize(processSlotOptions);
            _this.state = {
                slatCoords: null,
            };
            _this.handleRootEl = function (el) {
                if (el) {
                    _this.context.registerInteractiveComponent(_this, {
                        el: el,
                        isHitComboAllowed: _this.props.isHitComboAllowed,
                    });
                }
                else {
                    _this.context.unregisterInteractiveComponent(_this);
                }
            };
            _this.handleScrollRequest = function (request) {
                var onScrollTopRequest = _this.props.onScrollTopRequest;
                var slatCoords = _this.state.slatCoords;
                if (onScrollTopRequest && slatCoords) {
                    if (request.time) {
                        var top_1 = slatCoords.computeTimeTop(request.time);
                        top_1 = Math.ceil(top_1); // zoom can give weird floating-point values. rather scroll a little bit further
                        if (top_1) {
                            top_1 += 1; // to overcome top border that slots beyond the first have. looks better
                        }
                        onScrollTopRequest(top_1);
                    }
                    return true;
                }
                return false;
            };
            _this.handleColCoords = function (colCoords) {
                _this.colCoords = colCoords;
            };
            _this.handleSlatCoords = function (slatCoords) {
                _this.setState({ slatCoords: slatCoords });
                if (_this.props.onSlatCoords) {
                    _this.props.onSlatCoords(slatCoords);
                }
            };
            return _this;
        }
        TimeCols.prototype.render = function () {
            var _a = this, props = _a.props, state = _a.state;
            return (createElement("div", { className: "fc-timegrid-body", ref: this.handleRootEl, style: {
                    // these props are important to give this wrapper correct dimensions for interactions
                    // TODO: if we set it here, can we avoid giving to inner tables?
                    width: props.clientWidth,
                    minWidth: props.tableMinWidth,
                } },
                createElement(TimeColsSlats, { axis: props.axis, dateProfile: props.dateProfile, slatMetas: props.slatMetas, clientWidth: props.clientWidth, minHeight: props.expandRows ? props.clientHeight : '', tableMinWidth: props.tableMinWidth, tableColGroupNode: props.axis ? props.tableColGroupNode : null /* axis depends on the colgroup's shrinking */, onCoords: this.handleSlatCoords }),
                createElement(TimeColsContent, { cells: props.cells, axis: props.axis, dateProfile: props.dateProfile, businessHourSegs: props.businessHourSegs, bgEventSegs: props.bgEventSegs, fgEventSegs: props.fgEventSegs, dateSelectionSegs: props.dateSelectionSegs, eventSelection: props.eventSelection, eventDrag: props.eventDrag, eventResize: props.eventResize, todayRange: props.todayRange, nowDate: props.nowDate, nowIndicatorSegs: props.nowIndicatorSegs, clientWidth: props.clientWidth, tableMinWidth: props.tableMinWidth, tableColGroupNode: props.tableColGroupNode, slatCoords: state.slatCoords, onColCoords: this.handleColCoords, forPrint: props.forPrint })));
        };
        TimeCols.prototype.componentDidMount = function () {
            this.scrollResponder = this.context.createScrollResponder(this.handleScrollRequest);
        };
        TimeCols.prototype.componentDidUpdate = function (prevProps) {
            this.scrollResponder.update(prevProps.dateProfile !== this.props.dateProfile);
        };
        TimeCols.prototype.componentWillUnmount = function () {
            this.scrollResponder.detach();
        };
        TimeCols.prototype.queryHit = function (positionLeft, positionTop) {
            var _a = this.context, dateEnv = _a.dateEnv, options = _a.options;
            var colCoords = this.colCoords;
            var dateProfile = this.props.dateProfile;
            var slatCoords = this.state.slatCoords;
            var _b = this.processSlotOptions(this.props.slotDuration, options.snapDuration), snapDuration = _b.snapDuration, snapsPerSlot = _b.snapsPerSlot;
            var colIndex = colCoords.leftToIndex(positionLeft);
            var slatIndex = slatCoords.positions.topToIndex(positionTop);
            if (colIndex != null && slatIndex != null) {
                var cell = this.props.cells[colIndex];
                var slatTop = slatCoords.positions.tops[slatIndex];
                var slatHeight = slatCoords.positions.getHeight(slatIndex);
                var partial = (positionTop - slatTop) / slatHeight; // floating point number between 0 and 1
                var localSnapIndex = Math.floor(partial * snapsPerSlot); // the snap # relative to start of slat
                var snapIndex = slatIndex * snapsPerSlot + localSnapIndex;
                var dayDate = this.props.cells[colIndex].date;
                var time = addDurations(dateProfile.slotMinTime, multiplyDuration(snapDuration, snapIndex));
                var start = dateEnv.add(dayDate, time);
                var end = dateEnv.add(start, snapDuration);
                return {
                    dateProfile: dateProfile,
                    dateSpan: __assign({ range: { start: start, end: end }, allDay: false }, cell.extraDateSpan),
                    dayEl: colCoords.els[colIndex],
                    rect: {
                        left: colCoords.lefts[colIndex],
                        right: colCoords.rights[colIndex],
                        top: slatTop,
                        bottom: slatTop + slatHeight,
                    },
                    layer: 0,
                };
            }
            return null;
        };
        return TimeCols;
    }(DateComponent));
    function processSlotOptions(slotDuration, snapDurationOverride) {
        var snapDuration = snapDurationOverride || slotDuration;
        var snapsPerSlot = wholeDivideDurations(slotDuration, snapDuration);
        if (snapsPerSlot === null) {
            snapDuration = slotDuration;
            snapsPerSlot = 1;
            // TODO: say warning?
        }
        return { snapDuration: snapDuration, snapsPerSlot: snapsPerSlot };
    }

    var DayTimeColsSlicer = /** @class */ (function (_super) {
        __extends(DayTimeColsSlicer, _super);
        function DayTimeColsSlicer() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        DayTimeColsSlicer.prototype.sliceRange = function (range, dayRanges) {
            var segs = [];
            for (var col = 0; col < dayRanges.length; col += 1) {
                var segRange = intersectRanges(range, dayRanges[col]);
                if (segRange) {
                    segs.push({
                        start: segRange.start,
                        end: segRange.end,
                        isStart: segRange.start.valueOf() === range.start.valueOf(),
                        isEnd: segRange.end.valueOf() === range.end.valueOf(),
                        col: col,
                    });
                }
            }
            return segs;
        };
        return DayTimeColsSlicer;
    }(Slicer));

    var DayTimeCols = /** @class */ (function (_super) {
        __extends(DayTimeCols, _super);
        function DayTimeCols() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.buildDayRanges = memoize(buildDayRanges);
            _this.slicer = new DayTimeColsSlicer();
            _this.timeColsRef = createRef();
            return _this;
        }
        DayTimeCols.prototype.render = function () {
            var _this = this;
            var _a = this, props = _a.props, context = _a.context;
            var dateProfile = props.dateProfile, dayTableModel = props.dayTableModel;
            var isNowIndicator = context.options.nowIndicator;
            var dayRanges = this.buildDayRanges(dayTableModel, dateProfile, context.dateEnv);
            // give it the first row of cells
            // TODO: would move this further down hierarchy, but sliceNowDate needs it
            return (createElement(NowTimer, { unit: isNowIndicator ? 'minute' : 'day' }, function (nowDate, todayRange) { return (createElement(TimeCols, __assign({ ref: _this.timeColsRef }, _this.slicer.sliceProps(props, dateProfile, null, context, dayRanges), { forPrint: props.forPrint, axis: props.axis, dateProfile: dateProfile, slatMetas: props.slatMetas, slotDuration: props.slotDuration, cells: dayTableModel.cells[0], tableColGroupNode: props.tableColGroupNode, tableMinWidth: props.tableMinWidth, clientWidth: props.clientWidth, clientHeight: props.clientHeight, expandRows: props.expandRows, nowDate: nowDate, nowIndicatorSegs: isNowIndicator && _this.slicer.sliceNowDate(nowDate, context, dayRanges), todayRange: todayRange, onScrollTopRequest: props.onScrollTopRequest, onSlatCoords: props.onSlatCoords }))); }));
        };
        return DayTimeCols;
    }(DateComponent));
    function buildDayRanges(dayTableModel, dateProfile, dateEnv) {
        var ranges = [];
        for (var _i = 0, _a = dayTableModel.headerDates; _i < _a.length; _i++) {
            var date = _a[_i];
            ranges.push({
                start: dateEnv.add(date, dateProfile.slotMinTime),
                end: dateEnv.add(date, dateProfile.slotMaxTime),
            });
        }
        return ranges;
    }

    // potential nice values for the slot-duration and interval-duration
    // from largest to smallest
    var STOCK_SUB_DURATIONS = [
        { hours: 1 },
        { minutes: 30 },
        { minutes: 15 },
        { seconds: 30 },
        { seconds: 15 },
    ];
    function buildSlatMetas(slotMinTime, slotMaxTime, explicitLabelInterval, slotDuration, dateEnv) {
        var dayStart = new Date(0);
        var slatTime = slotMinTime;
        var slatIterator = createDuration(0);
        var labelInterval = explicitLabelInterval || computeLabelInterval(slotDuration);
        var metas = [];
        while (asRoughMs(slatTime) < asRoughMs(slotMaxTime)) {
            var date = dateEnv.add(dayStart, slatTime);
            var isLabeled = wholeDivideDurations(slatIterator, labelInterval) !== null;
            metas.push({
                date: date,
                time: slatTime,
                key: date.toISOString(),
                isoTimeStr: formatIsoTimeString(date),
                isLabeled: isLabeled,
            });
            slatTime = addDurations(slatTime, slotDuration);
            slatIterator = addDurations(slatIterator, slotDuration);
        }
        return metas;
    }
    // Computes an automatic value for slotLabelInterval
    function computeLabelInterval(slotDuration) {
        var i;
        var labelInterval;
        var slotsPerLabel;
        // find the smallest stock label interval that results in more than one slots-per-label
        for (i = STOCK_SUB_DURATIONS.length - 1; i >= 0; i -= 1) {
            labelInterval = createDuration(STOCK_SUB_DURATIONS[i]);
            slotsPerLabel = wholeDivideDurations(labelInterval, slotDuration);
            if (slotsPerLabel !== null && slotsPerLabel > 1) {
                return labelInterval;
            }
        }
        return slotDuration; // fall back
    }

    var DayTimeColsView = /** @class */ (function (_super) {
        __extends(DayTimeColsView, _super);
        function DayTimeColsView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.buildTimeColsModel = memoize(buildTimeColsModel);
            _this.buildSlatMetas = memoize(buildSlatMetas);
            return _this;
        }
        DayTimeColsView.prototype.render = function () {
            var _this = this;
            var _a = this.context, options = _a.options, dateEnv = _a.dateEnv, dateProfileGenerator = _a.dateProfileGenerator;
            var props = this.props;
            var dateProfile = props.dateProfile;
            var dayTableModel = this.buildTimeColsModel(dateProfile, dateProfileGenerator);
            var splitProps = this.allDaySplitter.splitProps(props);
            var slatMetas = this.buildSlatMetas(dateProfile.slotMinTime, dateProfile.slotMaxTime, options.slotLabelInterval, options.slotDuration, dateEnv);
            var dayMinWidth = options.dayMinWidth;
            var hasAttachedAxis = !dayMinWidth;
            var hasDetachedAxis = dayMinWidth;
            var headerContent = options.dayHeaders && (createElement(DayHeader, { dates: dayTableModel.headerDates, dateProfile: dateProfile, datesRepDistinctDays: true, renderIntro: hasAttachedAxis ? this.renderHeadAxis : null }));
            var allDayContent = (options.allDaySlot !== false) && (function (contentArg) { return (createElement(DayTable, __assign({}, splitProps.allDay, { dateProfile: dateProfile, dayTableModel: dayTableModel, nextDayThreshold: options.nextDayThreshold, tableMinWidth: contentArg.tableMinWidth, colGroupNode: contentArg.tableColGroupNode, renderRowIntro: hasAttachedAxis ? _this.renderTableRowAxis : null, showWeekNumbers: false, expandRows: false, headerAlignElRef: _this.headerElRef, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, forPrint: props.forPrint }, _this.getAllDayMaxEventProps()))); });
            var timeGridContent = function (contentArg) { return (createElement(DayTimeCols, __assign({}, splitProps.timed, { dayTableModel: dayTableModel, dateProfile: dateProfile, axis: hasAttachedAxis, slotDuration: options.slotDuration, slatMetas: slatMetas, forPrint: props.forPrint, tableColGroupNode: contentArg.tableColGroupNode, tableMinWidth: contentArg.tableMinWidth, clientWidth: contentArg.clientWidth, clientHeight: contentArg.clientHeight, onSlatCoords: _this.handleSlatCoords, expandRows: contentArg.expandRows, onScrollTopRequest: _this.handleScrollTopRequest }))); };
            return hasDetachedAxis
                ? this.renderHScrollLayout(headerContent, allDayContent, timeGridContent, dayTableModel.colCnt, dayMinWidth, slatMetas, this.state.slatCoords)
                : this.renderSimpleLayout(headerContent, allDayContent, timeGridContent);
        };
        return DayTimeColsView;
    }(TimeColsView));
    function buildTimeColsModel(dateProfile, dateProfileGenerator) {
        var daySeries = new DaySeriesModel(dateProfile.renderRange, dateProfileGenerator);
        return new DayTableModel(daySeries, false);
    }

    var OPTION_REFINERS$2 = {
        allDaySlot: Boolean,
    };

    var timeGridPlugin = createPlugin({
        initialView: 'timeGridWeek',
        optionRefiners: OPTION_REFINERS$2,
        views: {
            timeGrid: {
                component: DayTimeColsView,
                usesMinMaxTime: true,
                allDaySlot: true,
                slotDuration: '00:30:00',
                slotEventOverlap: true, // a bad name. confused with overlap/constraint system
            },
            timeGridDay: {
                type: 'timeGrid',
                duration: { days: 1 },
            },
            timeGridWeek: {
                type: 'timeGrid',
                duration: { weeks: 1 },
            },
        },
    });

    var ListViewHeaderRow = /** @class */ (function (_super) {
        __extends(ListViewHeaderRow, _super);
        function ListViewHeaderRow() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ListViewHeaderRow.prototype.render = function () {
            var _a = this.props, dayDate = _a.dayDate, todayRange = _a.todayRange;
            var _b = this.context, theme = _b.theme, dateEnv = _b.dateEnv, options = _b.options, viewApi = _b.viewApi;
            var dayMeta = getDateMeta(dayDate, todayRange);
            // will ever be falsy?
            var text = options.listDayFormat ? dateEnv.format(dayDate, options.listDayFormat) : '';
            // will ever be falsy? also, BAD NAME "alt"
            var sideText = options.listDaySideFormat ? dateEnv.format(dayDate, options.listDaySideFormat) : '';
            var navLinkData = options.navLinks
                ? buildNavLinkData(dayDate)
                : null;
            var hookProps = __assign({ date: dateEnv.toDate(dayDate), view: viewApi, text: text,
                sideText: sideText,
                navLinkData: navLinkData }, dayMeta);
            var classNames = ['fc-list-day'].concat(getDayClassNames(dayMeta, theme));
            // TODO: make a reusable HOC for dayHeader (used in daygrid/timegrid too)
            return (createElement(RenderHook, { hookProps: hookProps, classNames: options.dayHeaderClassNames, content: options.dayHeaderContent, defaultContent: renderInnerContent, didMount: options.dayHeaderDidMount, willUnmount: options.dayHeaderWillUnmount }, function (rootElRef, customClassNames, innerElRef, innerContent) { return (createElement("tr", { ref: rootElRef, className: classNames.concat(customClassNames).join(' '), "data-date": formatDayString(dayDate) },
                createElement("th", { colSpan: 3 },
                    createElement("div", { className: 'fc-list-day-cushion ' + theme.getClass('tableCellShaded'), ref: innerElRef }, innerContent)))); }));
        };
        return ListViewHeaderRow;
    }(BaseComponent));
    function renderInnerContent(props) {
        var navLinkAttrs = props.navLinkData // is there a type for this?
            ? { 'data-navlink': props.navLinkData, tabIndex: 0 }
            : {};
        return (createElement(Fragment, null,
            props.text && (createElement("a", __assign({ className: "fc-list-day-text" }, navLinkAttrs), props.text)),
            props.sideText && (createElement("a", __assign({ className: "fc-list-day-side-text" }, navLinkAttrs), props.sideText))));
    }

    var DEFAULT_TIME_FORMAT = createFormatter({
        hour: 'numeric',
        minute: '2-digit',
        meridiem: 'short',
    });
    var ListViewEventRow = /** @class */ (function (_super) {
        __extends(ListViewEventRow, _super);
        function ListViewEventRow() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        ListViewEventRow.prototype.render = function () {
            var _a = this, props = _a.props, context = _a.context;
            var seg = props.seg;
            var timeFormat = context.options.eventTimeFormat || DEFAULT_TIME_FORMAT;
            return (createElement(EventRoot, { seg: seg, timeText: "" // BAD. because of all-day content
                , disableDragging: true, disableResizing: true, defaultContent: renderEventInnerContent, isPast: props.isPast, isFuture: props.isFuture, isToday: props.isToday, isSelected: props.isSelected, isDragging: props.isDragging, isResizing: props.isResizing, isDateSelecting: props.isDateSelecting }, function (rootElRef, classNames, innerElRef, innerContent, hookProps) { return (createElement("tr", { className: ['fc-list-event', hookProps.event.url ? 'fc-event-forced-url' : ''].concat(classNames).join(' '), ref: rootElRef },
                buildTimeContent(seg, timeFormat, context),
                createElement("td", { className: "fc-list-event-graphic" },
                    createElement("span", { className: "fc-list-event-dot", style: { borderColor: hookProps.borderColor || hookProps.backgroundColor } })),
                createElement("td", { className: "fc-list-event-title", ref: innerElRef }, innerContent))); }));
        };
        return ListViewEventRow;
    }(BaseComponent));
    function renderEventInnerContent(props) {
        var event = props.event;
        var url = event.url;
        var anchorAttrs = url ? { href: url } : {};
        return (createElement("a", __assign({}, anchorAttrs), event.title));
    }
    function buildTimeContent(seg, timeFormat, context) {
        var options = context.options;
        if (options.displayEventTime !== false) {
            var eventDef = seg.eventRange.def;
            var eventInstance = seg.eventRange.instance;
            var doAllDay = false;
            var timeText = void 0;
            if (eventDef.allDay) {
                doAllDay = true;
            }
            else if (isMultiDayRange(seg.eventRange.range)) { // TODO: use (!isStart || !isEnd) instead?
                if (seg.isStart) {
                    timeText = buildSegTimeText(seg, timeFormat, context, null, null, eventInstance.range.start, seg.end);
                }
                else if (seg.isEnd) {
                    timeText = buildSegTimeText(seg, timeFormat, context, null, null, seg.start, eventInstance.range.end);
                }
                else {
                    doAllDay = true;
                }
            }
            else {
                timeText = buildSegTimeText(seg, timeFormat, context);
            }
            if (doAllDay) {
                var hookProps = {
                    text: context.options.allDayText,
                    view: context.viewApi,
                };
                return (createElement(RenderHook, { hookProps: hookProps, classNames: options.allDayClassNames, content: options.allDayContent, defaultContent: renderAllDayInner, didMount: options.allDayDidMount, willUnmount: options.allDayWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement("td", { className: ['fc-list-event-time'].concat(classNames).join(' '), ref: rootElRef }, innerContent)); }));
            }
            return (createElement("td", { className: "fc-list-event-time" }, timeText));
        }
        return null;
    }
    function renderAllDayInner(hookProps) {
        return hookProps.text;
    }

    /*
    Responsible for the scroller, and forwarding event-related actions into the "grid".
    */
    var ListView = /** @class */ (function (_super) {
        __extends(ListView, _super);
        function ListView() {
            var _this = _super !== null && _super.apply(this, arguments) || this;
            _this.computeDateVars = memoize(computeDateVars);
            _this.eventStoreToSegs = memoize(_this._eventStoreToSegs);
            _this.setRootEl = function (rootEl) {
                if (rootEl) {
                    _this.context.registerInteractiveComponent(_this, {
                        el: rootEl,
                    });
                }
                else {
                    _this.context.unregisterInteractiveComponent(_this);
                }
            };
            return _this;
        }
        ListView.prototype.render = function () {
            var _this = this;
            var _a = this, props = _a.props, context = _a.context;
            var extraClassNames = [
                'fc-list',
                context.theme.getClass('table'),
                context.options.stickyHeaderDates !== false ? 'fc-list-sticky' : '',
            ];
            var _b = this.computeDateVars(props.dateProfile), dayDates = _b.dayDates, dayRanges = _b.dayRanges;
            var eventSegs = this.eventStoreToSegs(props.eventStore, props.eventUiBases, dayRanges);
            return (createElement(ViewRoot, { viewSpec: context.viewSpec, elRef: this.setRootEl }, function (rootElRef, classNames) { return (createElement("div", { ref: rootElRef, className: extraClassNames.concat(classNames).join(' ') },
                createElement(Scroller, { liquid: !props.isHeightAuto, overflowX: props.isHeightAuto ? 'visible' : 'hidden', overflowY: props.isHeightAuto ? 'visible' : 'auto' }, eventSegs.length > 0 ?
                    _this.renderSegList(eventSegs, dayDates) :
                    _this.renderEmptyMessage()))); }));
        };
        ListView.prototype.renderEmptyMessage = function () {
            var _a = this.context, options = _a.options, viewApi = _a.viewApi;
            var hookProps = {
                text: options.noEventsText,
                view: viewApi,
            };
            return (createElement(RenderHook, { hookProps: hookProps, classNames: options.noEventsClassNames, content: options.noEventsContent, defaultContent: renderNoEventsInner, didMount: options.noEventsDidMount, willUnmount: options.noEventsWillUnmount }, function (rootElRef, classNames, innerElRef, innerContent) { return (createElement("div", { className: ['fc-list-empty'].concat(classNames).join(' '), ref: rootElRef },
                createElement("div", { className: "fc-list-empty-cushion", ref: innerElRef }, innerContent))); }));
        };
        ListView.prototype.renderSegList = function (allSegs, dayDates) {
            var _a = this.context, theme = _a.theme, options = _a.options;
            var segsByDay = groupSegsByDay(allSegs); // sparse array
            return (createElement(NowTimer, { unit: "day" }, function (nowDate, todayRange) {
                var innerNodes = [];
                for (var dayIndex = 0; dayIndex < segsByDay.length; dayIndex += 1) {
                    var daySegs = segsByDay[dayIndex];
                    if (daySegs) { // sparse array, so might be undefined
                        var dayStr = dayDates[dayIndex].toISOString();
                        // append a day header
                        innerNodes.push(createElement(ListViewHeaderRow, { key: dayStr, dayDate: dayDates[dayIndex], todayRange: todayRange }));
                        daySegs = sortEventSegs(daySegs, options.eventOrder);
                        for (var _i = 0, daySegs_1 = daySegs; _i < daySegs_1.length; _i++) {
                            var seg = daySegs_1[_i];
                            innerNodes.push(createElement(ListViewEventRow, __assign({ key: dayStr + ':' + seg.eventRange.instance.instanceId /* are multiple segs for an instanceId */, seg: seg, isDragging: false, isResizing: false, isDateSelecting: false, isSelected: false }, getSegMeta(seg, todayRange, nowDate))));
                        }
                    }
                }
                return (createElement("table", { className: 'fc-list-table ' + theme.getClass('table') },
                    createElement("tbody", null, innerNodes)));
            }));
        };
        ListView.prototype._eventStoreToSegs = function (eventStore, eventUiBases, dayRanges) {
            return this.eventRangesToSegs(sliceEventStore(eventStore, eventUiBases, this.props.dateProfile.activeRange, this.context.options.nextDayThreshold).fg, dayRanges);
        };
        ListView.prototype.eventRangesToSegs = function (eventRanges, dayRanges) {
            var segs = [];
            for (var _i = 0, eventRanges_1 = eventRanges; _i < eventRanges_1.length; _i++) {
                var eventRange = eventRanges_1[_i];
                segs.push.apply(segs, this.eventRangeToSegs(eventRange, dayRanges));
            }
            return segs;
        };
        ListView.prototype.eventRangeToSegs = function (eventRange, dayRanges) {
            var dateEnv = this.context.dateEnv;
            var nextDayThreshold = this.context.options.nextDayThreshold;
            var range = eventRange.range;
            var allDay = eventRange.def.allDay;
            var dayIndex;
            var segRange;
            var seg;
            var segs = [];
            for (dayIndex = 0; dayIndex < dayRanges.length; dayIndex += 1) {
                segRange = intersectRanges(range, dayRanges[dayIndex]);
                if (segRange) {
                    seg = {
                        component: this,
                        eventRange: eventRange,
                        start: segRange.start,
                        end: segRange.end,
                        isStart: eventRange.isStart && segRange.start.valueOf() === range.start.valueOf(),
                        isEnd: eventRange.isEnd && segRange.end.valueOf() === range.end.valueOf(),
                        dayIndex: dayIndex,
                    };
                    segs.push(seg);
                    // detect when range won't go fully into the next day,
                    // and mutate the latest seg to the be the end.
                    if (!seg.isEnd && !allDay &&
                        dayIndex + 1 < dayRanges.length &&
                        range.end <
                            dateEnv.add(dayRanges[dayIndex + 1].start, nextDayThreshold)) {
                        seg.end = range.end;
                        seg.isEnd = true;
                        break;
                    }
                }
            }
            return segs;
        };
        return ListView;
    }(DateComponent));
    function renderNoEventsInner(hookProps) {
        return hookProps.text;
    }
    function computeDateVars(dateProfile) {
        var dayStart = startOfDay(dateProfile.renderRange.start);
        var viewEnd = dateProfile.renderRange.end;
        var dayDates = [];
        var dayRanges = [];
        while (dayStart < viewEnd) {
            dayDates.push(dayStart);
            dayRanges.push({
                start: dayStart,
                end: addDays(dayStart, 1),
            });
            dayStart = addDays(dayStart, 1);
        }
        return { dayDates: dayDates, dayRanges: dayRanges };
    }
    // Returns a sparse array of arrays, segs grouped by their dayIndex
    function groupSegsByDay(segs) {
        var segsByDay = []; // sparse array
        var i;
        var seg;
        for (i = 0; i < segs.length; i += 1) {
            seg = segs[i];
            (segsByDay[seg.dayIndex] || (segsByDay[seg.dayIndex] = []))
                .push(seg);
        }
        return segsByDay;
    }

    var OPTION_REFINERS$1 = {
        listDayFormat: createFalsableFormatter,
        listDaySideFormat: createFalsableFormatter,
        noEventsClassNames: identity,
        noEventsContent: identity,
        noEventsDidMount: identity,
        noEventsWillUnmount: identity,
        // noEventsText is defined in base options
    };
    function createFalsableFormatter(input) {
        return input === false ? null : createFormatter(input);
    }

    var listPlugin = createPlugin({
        optionRefiners: OPTION_REFINERS$1,
        views: {
            list: {
                component: ListView,
                buttonTextKey: 'list',
                listDayFormat: { month: 'long', day: 'numeric', year: 'numeric' }, // like "January 1, 2016"
            },
            listDay: {
                type: 'list',
                duration: { days: 1 },
                listDayFormat: { weekday: 'long' }, // day-of-week is all we need. full date is probably in headerToolbar
            },
            listWeek: {
                type: 'list',
                duration: { weeks: 1 },
                listDayFormat: { weekday: 'long' },
                listDaySideFormat: { month: 'long', day: 'numeric', year: 'numeric' },
            },
            listMonth: {
                type: 'list',
                duration: { month: 1 },
                listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have
            },
            listYear: {
                type: 'list',
                duration: { year: 1 },
                listDaySideFormat: { weekday: 'long' }, // day-of-week is nice-to-have
            },
        },
    });

    var BootstrapTheme = /** @class */ (function (_super) {
        __extends(BootstrapTheme, _super);
        function BootstrapTheme() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return BootstrapTheme;
    }(Theme));
    BootstrapTheme.prototype.classes = {
        root: 'fc-theme-bootstrap',
        table: 'table-bordered',
        tableCellShaded: 'table-active',
        buttonGroup: 'btn-group',
        button: 'btn btn-primary',
        buttonActive: 'active',
        popover: 'popover',
        popoverHeader: 'popover-header',
        popoverContent: 'popover-body',
    };
    BootstrapTheme.prototype.baseIconClass = 'fa';
    BootstrapTheme.prototype.iconClasses = {
        close: 'fa-times',
        prev: 'fa-chevron-left',
        next: 'fa-chevron-right',
        prevYear: 'fa-angle-double-left',
        nextYear: 'fa-angle-double-right',
    };
    BootstrapTheme.prototype.rtlIconClasses = {
        prev: 'fa-chevron-right',
        next: 'fa-chevron-left',
        prevYear: 'fa-angle-double-right',
        nextYear: 'fa-angle-double-left',
    };
    BootstrapTheme.prototype.iconOverrideOption = 'bootstrapFontAwesome'; // TODO: make TS-friendly. move the option-processing into this plugin
    BootstrapTheme.prototype.iconOverrideCustomButtonOption = 'bootstrapFontAwesome';
    BootstrapTheme.prototype.iconOverridePrefix = 'fa-';
    var plugin = createPlugin({
        themeClasses: {
            bootstrap: BootstrapTheme,
        },
    });

    // rename this file to options.ts like other packages?
    var OPTION_REFINERS = {
        googleCalendarApiKey: String,
    };

    var EVENT_SOURCE_REFINERS = {
        googleCalendarApiKey: String,
        googleCalendarId: String,
        googleCalendarApiBase: String,
        extraParams: identity,
    };

    // TODO: expose somehow
    var API_BASE = 'https://www.googleapis.com/calendar/v3/calendars';
    var eventSourceDef = {
        parseMeta: function (refined) {
            var googleCalendarId = refined.googleCalendarId;
            if (!googleCalendarId && refined.url) {
                googleCalendarId = parseGoogleCalendarId(refined.url);
            }
            if (googleCalendarId) {
                return {
                    googleCalendarId: googleCalendarId,
                    googleCalendarApiKey: refined.googleCalendarApiKey,
                    googleCalendarApiBase: refined.googleCalendarApiBase,
                    extraParams: refined.extraParams,
                };
            }
            return null;
        },
        fetch: function (arg, onSuccess, onFailure) {
            var _a = arg.context, dateEnv = _a.dateEnv, options = _a.options;
            var meta = arg.eventSource.meta;
            var apiKey = meta.googleCalendarApiKey || options.googleCalendarApiKey;
            if (!apiKey) {
                onFailure({
                    message: 'Specify a googleCalendarApiKey. See http://fullcalendar.io/docs/google_calendar/',
                });
            }
            else {
                var url = buildUrl(meta);
                // TODO: make DRY with json-feed-event-source
                var extraParams = meta.extraParams;
                var extraParamsObj = typeof extraParams === 'function' ? extraParams() : extraParams;
                var requestParams_1 = buildRequestParams(arg.range, apiKey, extraParamsObj, dateEnv);
                requestJson('GET', url, requestParams_1, function (body, xhr) {
                    if (body.error) {
                        onFailure({
                            message: 'Google Calendar API: ' + body.error.message,
                            errors: body.error.errors,
                            xhr: xhr,
                        });
                    }
                    else {
                        onSuccess({
                            rawEvents: gcalItemsToRawEventDefs(body.items, requestParams_1.timeZone),
                            xhr: xhr,
                        });
                    }
                }, function (message, xhr) {
                    onFailure({ message: message, xhr: xhr });
                });
            }
        },
    };
    function parseGoogleCalendarId(url) {
        var match;
        // detect if the ID was specified as a single string.
        // will match calendars like "asdf1234@calendar.google.com" in addition to person email calendars.
        if (/^[^/]+@([^/.]+\\.)*(google|googlemail|gmail)\\.com$/.test(url)) {
            return url;
        }
        if ((match = /^https:\\/\\/www.googleapis.com\\/calendar\\/v3\\/calendars\\/([^/]*)/.exec(url)) ||
            (match = /^https?:\\/\\/www.google.com\\/calendar\\/feeds\\/([^/]*)/.exec(url))) {
            return decodeURIComponent(match[1]);
        }
        return null;
    }
    function buildUrl(meta) {
        var apiBase = meta.googleCalendarApiBase;
        if (!apiBase) {
            apiBase = API_BASE;
        }
        return apiBase + '/' + encodeURIComponent(meta.googleCalendarId) + '/events';
    }
    function buildRequestParams(range, apiKey, extraParams, dateEnv) {
        var params;
        var startStr;
        var endStr;
        if (dateEnv.canComputeOffset) {
            // strings will naturally have offsets, which GCal needs
            startStr = dateEnv.formatIso(range.start);
            endStr = dateEnv.formatIso(range.end);
        }
        else {
            // when timezone isn't known, we don't know what the UTC offset should be, so ask for +/- 1 day
            // from the UTC day-start to guarantee we're getting all the events
            // (start/end will be UTC-coerced dates, so toISOString is okay)
            startStr = addDays(range.start, -1).toISOString();
            endStr = addDays(range.end, 1).toISOString();
        }
        params = __assign(__assign({}, (extraParams || {})), { key: apiKey, timeMin: startStr, timeMax: endStr, singleEvents: true, maxResults: 9999 });
        if (dateEnv.timeZone !== 'local') {
            params.timeZone = dateEnv.timeZone;
        }
        return params;
    }
    function gcalItemsToRawEventDefs(items, gcalTimezone) {
        return items.map(function (item) { return gcalItemToRawEventDef(item, gcalTimezone); });
    }
    function gcalItemToRawEventDef(item, gcalTimezone) {
        var url = item.htmlLink || null;
        // make the URLs for each event show times in the correct timezone
        if (url && gcalTimezone) {
            url = injectQsComponent(url, 'ctz=' + gcalTimezone);
        }
        return {
            id: item.id,
            title: item.summary,
            start: item.start.dateTime || item.start.date,
            end: item.end.dateTime || item.end.date,
            url: url,
            location: item.location,
            description: item.description,
            attachments: item.attachments || [],
            extendedProps: (item.extendedProperties || {}).shared || {},
        };
    }
    // Injects a string like "arg=value" into the querystring of a URL
    // TODO: move to a general util file?
    function injectQsComponent(url, component) {
        // inject it after the querystring but before the fragment
        return url.replace(/(\\?.*?)?(#|$)/, function (whole, qs, hash) { return (qs ? qs + '&' : '?') + component + hash; });
    }
    var googleCalendarPlugin = createPlugin({
        eventSourceDefs: [eventSourceDef],
        optionRefiners: OPTION_REFINERS,
        eventSourceRefiners: EVENT_SOURCE_REFINERS,
    });

    globalPlugins.push(interactionPlugin, dayGridPlugin, timeGridPlugin, listPlugin, plugin, googleCalendarPlugin);

    exports.BASE_OPTION_DEFAULTS = BASE_OPTION_DEFAULTS;
    exports.BASE_OPTION_REFINERS = BASE_OPTION_REFINERS;
    exports.BaseComponent = BaseComponent;
    exports.BgEvent = BgEvent;
    exports.BootstrapTheme = BootstrapTheme;
    exports.Calendar = Calendar;
    exports.CalendarApi = CalendarApi;
    exports.CalendarContent = CalendarContent;
    exports.CalendarDataManager = CalendarDataManager;
    exports.CalendarDataProvider = CalendarDataProvider;
    exports.CalendarRoot = CalendarRoot;
    exports.Component = Component;
    exports.ContentHook = ContentHook;
    exports.CustomContentRenderContext = CustomContentRenderContext;
    exports.DateComponent = DateComponent;
    exports.DateEnv = DateEnv;
    exports.DateProfileGenerator = DateProfileGenerator;
    exports.DayCellContent = DayCellContent;
    exports.DayCellRoot = DayCellRoot;
    exports.DayGridView = DayTableView;
    exports.DayHeader = DayHeader;
    exports.DaySeriesModel = DaySeriesModel;
    exports.DayTable = DayTable;
    exports.DayTableModel = DayTableModel;
    exports.DayTableSlicer = DayTableSlicer;
    exports.DayTimeCols = DayTimeCols;
    exports.DayTimeColsSlicer = DayTimeColsSlicer;
    exports.DayTimeColsView = DayTimeColsView;
    exports.DelayedRunner = DelayedRunner;
    exports.Draggable = ExternalDraggable;
    exports.ElementDragging = ElementDragging;
    exports.ElementScrollController = ElementScrollController;
    exports.Emitter = Emitter;
    exports.EventApi = EventApi;
    exports.EventRoot = EventRoot;
    exports.EventSourceApi = EventSourceApi;
    exports.FeaturefulElementDragging = FeaturefulElementDragging;
    exports.Fragment = Fragment;
    exports.Interaction = Interaction;
    exports.ListView = ListView;
    exports.MoreLinkRoot = MoreLinkRoot;
    exports.MountHook = MountHook;
    exports.NamedTimeZoneImpl = NamedTimeZoneImpl;
    exports.NowIndicatorRoot = NowIndicatorRoot;
    exports.NowTimer = NowTimer;
    exports.PointerDragging = PointerDragging;
    exports.PositionCache = PositionCache;
    exports.RefMap = RefMap;
    exports.RenderHook = RenderHook;
    exports.ScrollController = ScrollController;
    exports.ScrollResponder = ScrollResponder;
    exports.Scroller = Scroller;
    exports.SegHierarchy = SegHierarchy;
    exports.SimpleScrollGrid = SimpleScrollGrid;
    exports.Slicer = Slicer;
    exports.Splitter = Splitter;
    exports.StandardEvent = StandardEvent;
    exports.Table = Table;
    exports.TableDateCell = TableDateCell;
    exports.TableDowCell = TableDowCell;
    exports.TableView = TableView;
    exports.Theme = Theme;
    exports.ThirdPartyDraggable = ThirdPartyDraggable;
    exports.TimeCols = TimeCols;
    exports.TimeColsSlatsCoords = TimeColsSlatsCoords;
    exports.TimeColsView = TimeColsView;
    exports.ViewApi = ViewApi;
    exports.ViewContextType = ViewContextType;
    exports.ViewRoot = ViewRoot;
    exports.WeekNumberRoot = WeekNumberRoot;
    exports.WindowScrollController = WindowScrollController;
    exports.addDays = addDays;
    exports.addDurations = addDurations;
    exports.addMs = addMs;
    exports.addWeeks = addWeeks;
    exports.allowContextMenu = allowContextMenu;
    exports.allowSelection = allowSelection;
    exports.applyMutationToEventStore = applyMutationToEventStore;
    exports.applyStyle = applyStyle;
    exports.applyStyleProp = applyStyleProp;
    exports.asCleanDays = asCleanDays;
    exports.asRoughMinutes = asRoughMinutes;
    exports.asRoughMs = asRoughMs;
    exports.asRoughSeconds = asRoughSeconds;
    exports.binarySearch = binarySearch;
    exports.buildClassNameNormalizer = buildClassNameNormalizer;
    exports.buildDayRanges = buildDayRanges;
    exports.buildDayTableModel = buildDayTableModel;
    exports.buildEntryKey = buildEntryKey;
    exports.buildEventApis = buildEventApis;
    exports.buildEventRangeKey = buildEventRangeKey;
    exports.buildHashFromArray = buildHashFromArray;
    exports.buildIsoString = buildIsoString;
    exports.buildNavLinkData = buildNavLinkData;
    exports.buildSegCompareObj = buildSegCompareObj;
    exports.buildSegTimeText = buildSegTimeText;
    exports.buildSlatMetas = buildSlatMetas;
    exports.buildTimeColsModel = buildTimeColsModel;
    exports.collectFromHash = collectFromHash;
    exports.combineEventUis = combineEventUis;
    exports.compareByFieldSpec = compareByFieldSpec;
    exports.compareByFieldSpecs = compareByFieldSpecs;
    exports.compareNumbers = compareNumbers;
    exports.compareObjs = compareObjs;
    exports.computeEarliestSegStart = computeEarliestSegStart;
    exports.computeEdges = computeEdges;
    exports.computeFallbackHeaderFormat = computeFallbackHeaderFormat;
    exports.computeHeightAndMargins = computeHeightAndMargins;
    exports.computeInnerRect = computeInnerRect;
    exports.computeRect = computeRect;
    exports.computeSegDraggable = computeSegDraggable;
    exports.computeSegEndResizable = computeSegEndResizable;
    exports.computeSegStartResizable = computeSegStartResizable;
    exports.computeShrinkWidth = computeShrinkWidth;
    exports.computeSmallestCellWidth = computeSmallestCellWidth;
    exports.computeVisibleDayRange = computeVisibleDayRange;
    exports.config = config;
    exports.constrainPoint = constrainPoint;
    exports.createContext = createContext;
    exports.createDuration = createDuration;
    exports.createElement = createElement;
    exports.createEmptyEventStore = createEmptyEventStore;
    exports.createEventInstance = createEventInstance;
    exports.createEventUi = createEventUi;
    exports.createFormatter = createFormatter;
    exports.createPlugin = createPlugin;
    exports.createPortal = createPortal;
    exports.createRef = createRef;
    exports.diffDates = diffDates;
    exports.diffDayAndTime = diffDayAndTime;
    exports.diffDays = diffDays;
    exports.diffPoints = diffPoints;
    exports.diffWeeks = diffWeeks;
    exports.diffWholeDays = diffWholeDays;
    exports.diffWholeWeeks = diffWholeWeeks;
    exports.disableCursor = disableCursor;
    exports.elementClosest = elementClosest;
    exports.elementMatches = elementMatches;
    exports.enableCursor = enableCursor;
    exports.eventTupleToStore = eventTupleToStore;
    exports.filterEventStoreDefs = filterEventStoreDefs;
    exports.filterHash = filterHash;
    exports.findDirectChildren = findDirectChildren;
    exports.findElements = findElements;
    exports.flexibleCompare = flexibleCompare;
    exports.flushToDom = flushToDom;
    exports.formatDate = formatDate;
    exports.formatDayString = formatDayString;
    exports.formatIsoTimeString = formatIsoTimeString;
    exports.formatRange = formatRange;
    exports.getAllowYScrolling = getAllowYScrolling;
    exports.getCanVGrowWithinCell = getCanVGrowWithinCell;
    exports.getClippingParents = getClippingParents;
    exports.getDateMeta = getDateMeta;
    exports.getDayClassNames = getDayClassNames;
    exports.getDefaultEventEnd = getDefaultEventEnd;
    exports.getElRoot = getElRoot;
    exports.getElSeg = getElSeg;
    exports.getEntrySpanEnd = getEntrySpanEnd;
    exports.getEventClassNames = getEventClassNames;
    exports.getEventTargetViaRoot = getEventTargetViaRoot;
    exports.getIsRtlScrollbarOnLeft = getIsRtlScrollbarOnLeft;
    exports.getRectCenter = getRectCenter;
    exports.getRelevantEvents = getRelevantEvents;
    exports.getScrollGridClassNames = getScrollGridClassNames;
    exports.getScrollbarWidths = getScrollbarWidths;
    exports.getSectionClassNames = getSectionClassNames;
    exports.getSectionHasLiquidHeight = getSectionHasLiquidHeight;
    exports.getSegMeta = getSegMeta;
    exports.getSlotClassNames = getSlotClassNames;
    exports.getStickyFooterScrollbar = getStickyFooterScrollbar;
    exports.getStickyHeaderDates = getStickyHeaderDates;
    exports.getUnequalProps = getUnequalProps;
    exports.globalLocales = globalLocales;
    exports.globalPlugins = globalPlugins;
    exports.greatestDurationDenominator = greatestDurationDenominator;
    exports.groupIntersectingEntries = groupIntersectingEntries;
    exports.guid = guid;
    exports.hasBgRendering = hasBgRendering;
    exports.hasShrinkWidth = hasShrinkWidth;
    exports.identity = identity;
    exports.interactionSettingsStore = interactionSettingsStore;
    exports.interactionSettingsToStore = interactionSettingsToStore;
    exports.intersectRanges = intersectRanges;
    exports.intersectRects = intersectRects;
    exports.intersectSpans = intersectSpans;
    exports.isArraysEqual = isArraysEqual;
    exports.isColPropsEqual = isColPropsEqual;
    exports.isDateSelectionValid = isDateSelectionValid;
    exports.isDateSpansEqual = isDateSpansEqual;
    exports.isInt = isInt;
    exports.isInteractionValid = isInteractionValid;
    exports.isMultiDayRange = isMultiDayRange;
    exports.isPropsEqual = isPropsEqual;
    exports.isPropsValid = isPropsValid;
    exports.isValidDate = isValidDate;
    exports.joinSpans = joinSpans;
    exports.listenBySelector = listenBySelector;
    exports.mapHash = mapHash;
    exports.memoize = memoize;
    exports.memoizeArraylike = memoizeArraylike;
    exports.memoizeHashlike = memoizeHashlike;
    exports.memoizeObjArg = memoizeObjArg;
    exports.mergeEventStores = mergeEventStores;
    exports.multiplyDuration = multiplyDuration;
    exports.padStart = padStart;
    exports.parseBusinessHours = parseBusinessHours;
    exports.parseClassNames = parseClassNames;
    exports.parseDragMeta = parseDragMeta;
    exports.parseEventDef = parseEventDef;
    exports.parseFieldSpecs = parseFieldSpecs;
    exports.parseMarker = parse;
    exports.pointInsideRect = pointInsideRect;
    exports.preventContextMenu = preventContextMenu;
    exports.preventDefault = preventDefault;
    exports.preventSelection = preventSelection;
    exports.rangeContainsMarker = rangeContainsMarker;
    exports.rangeContainsRange = rangeContainsRange;
    exports.rangesEqual = rangesEqual;
    exports.rangesIntersect = rangesIntersect;
    exports.refineEventDef = refineEventDef;
    exports.refineProps = refineProps;
    exports.removeElement = removeElement;
    exports.removeExact = removeExact;
    exports.render = render;
    exports.renderChunkContent = renderChunkContent;
    exports.renderFill = renderFill;
    exports.renderMicroColGroup = renderMicroColGroup;
    exports.renderScrollShim = renderScrollShim;
    exports.requestJson = requestJson;
    exports.sanitizeShrinkWidth = sanitizeShrinkWidth;
    exports.setElSeg = setElSeg;
    exports.setRef = setRef;
    exports.sliceEventStore = sliceEventStore;
    exports.sliceEvents = sliceEvents;
    exports.sortEventSegs = sortEventSegs;
    exports.startOfDay = startOfDay;
    exports.translateRect = translateRect;
    exports.triggerDateSelect = triggerDateSelect;
    exports.unmountComponentAtNode = unmountComponentAtNode;
    exports.unpromisify = unpromisify;
    exports.version = version;
    exports.whenTransitionDone = whenTransitionDone;
    exports.wholeDivideDurations = wholeDivideDurations;

    Object.defineProperty(exports, '__esModule', { value: true });

    return exports;

}({}));
`;
    }, 8497: function(t2) {
      t2.exports = `/*!
 * Quill Editor v1.3.7
 * https://quilljs.com/
 * Copyright (c) 2014, Jason Chen
 * Copyright (c) 2013, salesforce.com
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["Quill"] = factory();
	else
		root["Quill"] = factory();
})(typeof self !== 'undefined' ? self : this, function() {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 109);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(17);
var format_1 = __webpack_require__(18);
var leaf_1 = __webpack_require__(19);
var scroll_1 = __webpack_require__(45);
var inline_1 = __webpack_require__(46);
var block_1 = __webpack_require__(47);
var embed_1 = __webpack_require__(48);
var text_1 = __webpack_require__(49);
var attributor_1 = __webpack_require__(12);
var class_1 = __webpack_require__(32);
var style_1 = __webpack_require__(33);
var store_1 = __webpack_require__(31);
var Registry = __webpack_require__(1);
var Parchment = {
    Scope: Registry.Scope,
    create: Registry.create,
    find: Registry.find,
    query: Registry.query,
    register: Registry.register,
    Container: container_1.default,
    Format: format_1.default,
    Leaf: leaf_1.default,
    Embed: embed_1.default,
    Scroll: scroll_1.default,
    Block: block_1.default,
    Inline: inline_1.default,
    Text: text_1.default,
    Attributor: {
        Attribute: attributor_1.default,
        Class: class_1.default,
        Style: style_1.default,
        Store: store_1.default,
    },
};
exports.default = Parchment;


/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var ParchmentError = /** @class */ (function (_super) {
    __extends(ParchmentError, _super);
    function ParchmentError(message) {
        var _this = this;
        message = '[Parchment] ' + message;
        _this = _super.call(this, message) || this;
        _this.message = message;
        _this.name = _this.constructor.name;
        return _this;
    }
    return ParchmentError;
}(Error));
exports.ParchmentError = ParchmentError;
var attributes = {};
var classes = {};
var tags = {};
var types = {};
exports.DATA_KEY = '__blot';
var Scope;
(function (Scope) {
    Scope[Scope["TYPE"] = 3] = "TYPE";
    Scope[Scope["LEVEL"] = 12] = "LEVEL";
    Scope[Scope["ATTRIBUTE"] = 13] = "ATTRIBUTE";
    Scope[Scope["BLOT"] = 14] = "BLOT";
    Scope[Scope["INLINE"] = 7] = "INLINE";
    Scope[Scope["BLOCK"] = 11] = "BLOCK";
    Scope[Scope["BLOCK_BLOT"] = 10] = "BLOCK_BLOT";
    Scope[Scope["INLINE_BLOT"] = 6] = "INLINE_BLOT";
    Scope[Scope["BLOCK_ATTRIBUTE"] = 9] = "BLOCK_ATTRIBUTE";
    Scope[Scope["INLINE_ATTRIBUTE"] = 5] = "INLINE_ATTRIBUTE";
    Scope[Scope["ANY"] = 15] = "ANY";
})(Scope = exports.Scope || (exports.Scope = {}));
function create(input, value) {
    var match = query(input);
    if (match == null) {
        throw new ParchmentError("Unable to create " + input + " blot");
    }
    var BlotClass = match;
    var node = 
    // @ts-ignore
    input instanceof Node || input['nodeType'] === Node.TEXT_NODE ? input : BlotClass.create(value);
    return new BlotClass(node, value);
}
exports.create = create;
function find(node, bubble) {
    if (bubble === void 0) { bubble = false; }
    if (node == null)
        return null;
    // @ts-ignore
    if (node[exports.DATA_KEY] != null)
        return node[exports.DATA_KEY].blot;
    if (bubble)
        return find(node.parentNode, bubble);
    return null;
}
exports.find = find;
function query(query, scope) {
    if (scope === void 0) { scope = Scope.ANY; }
    var match;
    if (typeof query === 'string') {
        match = types[query] || attributes[query];
        // @ts-ignore
    }
    else if (query instanceof Text || query['nodeType'] === Node.TEXT_NODE) {
        match = types['text'];
    }
    else if (typeof query === 'number') {
        if (query & Scope.LEVEL & Scope.BLOCK) {
            match = types['block'];
        }
        else if (query & Scope.LEVEL & Scope.INLINE) {
            match = types['inline'];
        }
    }
    else if (query instanceof HTMLElement) {
        var names = (query.getAttribute('class') || '').split(/\\s+/);
        for (var i in names) {
            match = classes[names[i]];
            if (match)
                break;
        }
        match = match || tags[query.tagName];
    }
    if (match == null)
        return null;
    // @ts-ignore
    if (scope & Scope.LEVEL & match.scope && scope & Scope.TYPE & match.scope)
        return match;
    return null;
}
exports.query = query;
function register() {
    var Definitions = [];
    for (var _i = 0; _i < arguments.length; _i++) {
        Definitions[_i] = arguments[_i];
    }
    if (Definitions.length > 1) {
        return Definitions.map(function (d) {
            return register(d);
        });
    }
    var Definition = Definitions[0];
    if (typeof Definition.blotName !== 'string' && typeof Definition.attrName !== 'string') {
        throw new ParchmentError('Invalid definition');
    }
    else if (Definition.blotName === 'abstract') {
        throw new ParchmentError('Cannot register abstract class');
    }
    types[Definition.blotName || Definition.attrName] = Definition;
    if (typeof Definition.keyName === 'string') {
        attributes[Definition.keyName] = Definition;
    }
    else {
        if (Definition.className != null) {
            classes[Definition.className] = Definition;
        }
        if (Definition.tagName != null) {
            if (Array.isArray(Definition.tagName)) {
                Definition.tagName = Definition.tagName.map(function (tagName) {
                    return tagName.toUpperCase();
                });
            }
            else {
                Definition.tagName = Definition.tagName.toUpperCase();
            }
            var tagNames = Array.isArray(Definition.tagName) ? Definition.tagName : [Definition.tagName];
            tagNames.forEach(function (tag) {
                if (tags[tag] == null || Definition.className == null) {
                    tags[tag] = Definition;
                }
            });
        }
    }
    return Definition;
}
exports.register = register;


/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

var diff = __webpack_require__(51);
var equal = __webpack_require__(11);
var extend = __webpack_require__(3);
var op = __webpack_require__(20);


var NULL_CHARACTER = String.fromCharCode(0);  // Placeholder char for embed in diff()


var Delta = function (ops) {
  // Assume we are given a well formed ops
  if (Array.isArray(ops)) {
    this.ops = ops;
  } else if (ops != null && Array.isArray(ops.ops)) {
    this.ops = ops.ops;
  } else {
    this.ops = [];
  }
};


Delta.prototype.insert = function (text, attributes) {
  var newOp = {};
  if (text.length === 0) return this;
  newOp.insert = text;
  if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {
    newOp.attributes = attributes;
  }
  return this.push(newOp);
};

Delta.prototype['delete'] = function (length) {
  if (length <= 0) return this;
  return this.push({ 'delete': length });
};

Delta.prototype.retain = function (length, attributes) {
  if (length <= 0) return this;
  var newOp = { retain: length };
  if (attributes != null && typeof attributes === 'object' && Object.keys(attributes).length > 0) {
    newOp.attributes = attributes;
  }
  return this.push(newOp);
};

Delta.prototype.push = function (newOp) {
  var index = this.ops.length;
  var lastOp = this.ops[index - 1];
  newOp = extend(true, {}, newOp);
  if (typeof lastOp === 'object') {
    if (typeof newOp['delete'] === 'number' && typeof lastOp['delete'] === 'number') {
      this.ops[index - 1] = { 'delete': lastOp['delete'] + newOp['delete'] };
      return this;
    }
    // Since it does not matter if we insert before or after deleting at the same index,
    // always prefer to insert first
    if (typeof lastOp['delete'] === 'number' && newOp.insert != null) {
      index -= 1;
      lastOp = this.ops[index - 1];
      if (typeof lastOp !== 'object') {
        this.ops.unshift(newOp);
        return this;
      }
    }
    if (equal(newOp.attributes, lastOp.attributes)) {
      if (typeof newOp.insert === 'string' && typeof lastOp.insert === 'string') {
        this.ops[index - 1] = { insert: lastOp.insert + newOp.insert };
        if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes
        return this;
      } else if (typeof newOp.retain === 'number' && typeof lastOp.retain === 'number') {
        this.ops[index - 1] = { retain: lastOp.retain + newOp.retain };
        if (typeof newOp.attributes === 'object') this.ops[index - 1].attributes = newOp.attributes
        return this;
      }
    }
  }
  if (index === this.ops.length) {
    this.ops.push(newOp);
  } else {
    this.ops.splice(index, 0, newOp);
  }
  return this;
};

Delta.prototype.chop = function () {
  var lastOp = this.ops[this.ops.length - 1];
  if (lastOp && lastOp.retain && !lastOp.attributes) {
    this.ops.pop();
  }
  return this;
};

Delta.prototype.filter = function (predicate) {
  return this.ops.filter(predicate);
};

Delta.prototype.forEach = function (predicate) {
  this.ops.forEach(predicate);
};

Delta.prototype.map = function (predicate) {
  return this.ops.map(predicate);
};

Delta.prototype.partition = function (predicate) {
  var passed = [], failed = [];
  this.forEach(function(op) {
    var target = predicate(op) ? passed : failed;
    target.push(op);
  });
  return [passed, failed];
};

Delta.prototype.reduce = function (predicate, initial) {
  return this.ops.reduce(predicate, initial);
};

Delta.prototype.changeLength = function () {
  return this.reduce(function (length, elem) {
    if (elem.insert) {
      return length + op.length(elem);
    } else if (elem.delete) {
      return length - elem.delete;
    }
    return length;
  }, 0);
};

Delta.prototype.length = function () {
  return this.reduce(function (length, elem) {
    return length + op.length(elem);
  }, 0);
};

Delta.prototype.slice = function (start, end) {
  start = start || 0;
  if (typeof end !== 'number') end = Infinity;
  var ops = [];
  var iter = op.iterator(this.ops);
  var index = 0;
  while (index < end && iter.hasNext()) {
    var nextOp;
    if (index < start) {
      nextOp = iter.next(start - index);
    } else {
      nextOp = iter.next(end - index);
      ops.push(nextOp);
    }
    index += op.length(nextOp);
  }
  return new Delta(ops);
};


Delta.prototype.compose = function (other) {
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  var ops = [];
  var firstOther = otherIter.peek();
  if (firstOther != null && typeof firstOther.retain === 'number' && firstOther.attributes == null) {
    var firstLeft = firstOther.retain;
    while (thisIter.peekType() === 'insert' && thisIter.peekLength() <= firstLeft) {
      firstLeft -= thisIter.peekLength();
      ops.push(thisIter.next());
    }
    if (firstOther.retain - firstLeft > 0) {
      otherIter.next(firstOther.retain - firstLeft);
    }
  }
  var delta = new Delta(ops);
  while (thisIter.hasNext() || otherIter.hasNext()) {
    if (otherIter.peekType() === 'insert') {
      delta.push(otherIter.next());
    } else if (thisIter.peekType() === 'delete') {
      delta.push(thisIter.next());
    } else {
      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
      var thisOp = thisIter.next(length);
      var otherOp = otherIter.next(length);
      if (typeof otherOp.retain === 'number') {
        var newOp = {};
        if (typeof thisOp.retain === 'number') {
          newOp.retain = length;
        } else {
          newOp.insert = thisOp.insert;
        }
        // Preserve null when composing with a retain, otherwise remove it for inserts
        var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, typeof thisOp.retain === 'number');
        if (attributes) newOp.attributes = attributes;
        delta.push(newOp);

        // Optimization if rest of other is just retain
        if (!otherIter.hasNext() && equal(delta.ops[delta.ops.length - 1], newOp)) {
          var rest = new Delta(thisIter.rest());
          return delta.concat(rest).chop();
        }

      // Other op should be delete, we could be an insert or retain
      // Insert + delete cancels out
      } else if (typeof otherOp['delete'] === 'number' && typeof thisOp.retain === 'number') {
        delta.push(otherOp);
      }
    }
  }
  return delta.chop();
};

Delta.prototype.concat = function (other) {
  var delta = new Delta(this.ops.slice());
  if (other.ops.length > 0) {
    delta.push(other.ops[0]);
    delta.ops = delta.ops.concat(other.ops.slice(1));
  }
  return delta;
};

Delta.prototype.diff = function (other, index) {
  if (this.ops === other.ops) {
    return new Delta();
  }
  var strings = [this, other].map(function (delta) {
    return delta.map(function (op) {
      if (op.insert != null) {
        return typeof op.insert === 'string' ? op.insert : NULL_CHARACTER;
      }
      var prep = (delta === other) ? 'on' : 'with';
      throw new Error('diff() called ' + prep + ' non-document');
    }).join('');
  });
  var delta = new Delta();
  var diffResult = diff(strings[0], strings[1], index);
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  diffResult.forEach(function (component) {
    var length = component[1].length;
    while (length > 0) {
      var opLength = 0;
      switch (component[0]) {
        case diff.INSERT:
          opLength = Math.min(otherIter.peekLength(), length);
          delta.push(otherIter.next(opLength));
          break;
        case diff.DELETE:
          opLength = Math.min(length, thisIter.peekLength());
          thisIter.next(opLength);
          delta['delete'](opLength);
          break;
        case diff.EQUAL:
          opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);
          var thisOp = thisIter.next(opLength);
          var otherOp = otherIter.next(opLength);
          if (equal(thisOp.insert, otherOp.insert)) {
            delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));
          } else {
            delta.push(otherOp)['delete'](opLength);
          }
          break;
      }
      length -= opLength;
    }
  });
  return delta.chop();
};

Delta.prototype.eachLine = function (predicate, newline) {
  newline = newline || '\\n';
  var iter = op.iterator(this.ops);
  var line = new Delta();
  var i = 0;
  while (iter.hasNext()) {
    if (iter.peekType() !== 'insert') return;
    var thisOp = iter.peek();
    var start = op.length(thisOp) - iter.peekLength();
    var index = typeof thisOp.insert === 'string' ?
      thisOp.insert.indexOf(newline, start) - start : -1;
    if (index < 0) {
      line.push(iter.next());
    } else if (index > 0) {
      line.push(iter.next(index));
    } else {
      if (predicate(line, iter.next(1).attributes || {}, i) === false) {
        return;
      }
      i += 1;
      line = new Delta();
    }
  }
  if (line.length() > 0) {
    predicate(line, {}, i);
  }
};

Delta.prototype.transform = function (other, priority) {
  priority = !!priority;
  if (typeof other === 'number') {
    return this.transformPosition(other, priority);
  }
  var thisIter = op.iterator(this.ops);
  var otherIter = op.iterator(other.ops);
  var delta = new Delta();
  while (thisIter.hasNext() || otherIter.hasNext()) {
    if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {
      delta.retain(op.length(thisIter.next()));
    } else if (otherIter.peekType() === 'insert') {
      delta.push(otherIter.next());
    } else {
      var length = Math.min(thisIter.peekLength(), otherIter.peekLength());
      var thisOp = thisIter.next(length);
      var otherOp = otherIter.next(length);
      if (thisOp['delete']) {
        // Our delete either makes their delete redundant or removes their retain
        continue;
      } else if (otherOp['delete']) {
        delta.push(otherOp);
      } else {
        // We retain either their retain or insert
        delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));
      }
    }
  }
  return delta.chop();
};

Delta.prototype.transformPosition = function (index, priority) {
  priority = !!priority;
  var thisIter = op.iterator(this.ops);
  var offset = 0;
  while (thisIter.hasNext() && offset <= index) {
    var length = thisIter.peekLength();
    var nextType = thisIter.peekType();
    thisIter.next();
    if (nextType === 'delete') {
      index -= Math.min(length, index - offset);
      continue;
    } else if (nextType === 'insert' && (offset < index || !priority)) {
      index += length;
    }
    offset += length;
  }
  return index;
};


module.exports = Delta;


/***/ }),
/* 3 */
/***/ (function(module, exports) {

'use strict';

var hasOwn = Object.prototype.hasOwnProperty;
var toStr = Object.prototype.toString;
var defineProperty = Object.defineProperty;
var gOPD = Object.getOwnPropertyDescriptor;

var isArray = function isArray(arr) {
	if (typeof Array.isArray === 'function') {
		return Array.isArray(arr);
	}

	return toStr.call(arr) === '[object Array]';
};

var isPlainObject = function isPlainObject(obj) {
	if (!obj || toStr.call(obj) !== '[object Object]') {
		return false;
	}

	var hasOwnConstructor = hasOwn.call(obj, 'constructor');
	var hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');
	// Not own constructor property must be Object
	if (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {
		return false;
	}

	// Own properties are enumerated firstly, so to speed up,
	// if last one is own, then all properties are own.
	var key;
	for (key in obj) { /**/ }

	return typeof key === 'undefined' || hasOwn.call(obj, key);
};

// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target
var setProperty = function setProperty(target, options) {
	if (defineProperty && options.name === '__proto__') {
		defineProperty(target, options.name, {
			enumerable: true,
			configurable: true,
			value: options.newValue,
			writable: true
		});
	} else {
		target[options.name] = options.newValue;
	}
};

// Return undefined instead of __proto__ if '__proto__' is not an own property
var getProperty = function getProperty(obj, name) {
	if (name === '__proto__') {
		if (!hasOwn.call(obj, name)) {
			return void 0;
		} else if (gOPD) {
			// In early versions of node, obj['__proto__'] is buggy when obj has
			// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.
			return gOPD(obj, name).value;
		}
	}

	return obj[name];
};

module.exports = function extend() {
	var options, name, src, copy, copyIsArray, clone;
	var target = arguments[0];
	var i = 1;
	var length = arguments.length;
	var deep = false;

	// Handle a deep copy situation
	if (typeof target === 'boolean') {
		deep = target;
		target = arguments[1] || {};
		// skip the boolean and the target
		i = 2;
	}
	if (target == null || (typeof target !== 'object' && typeof target !== 'function')) {
		target = {};
	}

	for (; i < length; ++i) {
		options = arguments[i];
		// Only deal with non-null/undefined values
		if (options != null) {
			// Extend the base object
			for (name in options) {
				src = getProperty(target, name);
				copy = getProperty(options, name);

				// Prevent never-ending loop
				if (target !== copy) {
					// Recurse if we're merging plain objects or arrays
					if (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {
						if (copyIsArray) {
							copyIsArray = false;
							clone = src && isArray(src) ? src : [];
						} else {
							clone = src && isPlainObject(src) ? src : {};
						}

						// Never move original objects, clone them
						setProperty(target, { name: name, newValue: extend(deep, clone, copy) });

					// Don't bring in undefined values
					} else if (typeof copy !== 'undefined') {
						setProperty(target, { name: name, newValue: copy });
					}
				}
			}
		}
	}

	// Return the modified object
	return target;
};


/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BlockEmbed = exports.bubbleFormats = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _extend = __webpack_require__(3);

var _extend2 = _interopRequireDefault(_extend);

var _quillDelta = __webpack_require__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _break = __webpack_require__(16);

var _break2 = _interopRequireDefault(_break);

var _inline = __webpack_require__(6);

var _inline2 = _interopRequireDefault(_inline);

var _text = __webpack_require__(7);

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var NEWLINE_LENGTH = 1;

var BlockEmbed = function (_Parchment$Embed) {
  _inherits(BlockEmbed, _Parchment$Embed);

  function BlockEmbed() {
    _classCallCheck(this, BlockEmbed);

    return _possibleConstructorReturn(this, (BlockEmbed.__proto__ || Object.getPrototypeOf(BlockEmbed)).apply(this, arguments));
  }

  _createClass(BlockEmbed, [{
    key: 'attach',
    value: function attach() {
      _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'attach', this).call(this);
      this.attributes = new _parchment2.default.Attributor.Store(this.domNode);
    }
  }, {
    key: 'delta',
    value: function delta() {
      return new _quillDelta2.default().insert(this.value(), (0, _extend2.default)(this.formats(), this.attributes.values()));
    }
  }, {
    key: 'format',
    value: function format(name, value) {
      var attribute = _parchment2.default.query(name, _parchment2.default.Scope.BLOCK_ATTRIBUTE);
      if (attribute != null) {
        this.attributes.attribute(attribute, value);
      }
    }
  }, {
    key: 'formatAt',
    value: function formatAt(index, length, name, value) {
      this.format(name, value);
    }
  }, {
    key: 'insertAt',
    value: function insertAt(index, value, def) {
      if (typeof value === 'string' && value.endsWith('\\n')) {
        var block = _parchment2.default.create(Block.blotName);
        this.parent.insertBefore(block, index === 0 ? this : this.next);
        block.insertAt(0, value.slice(0, -1));
      } else {
        _get(BlockEmbed.prototype.__proto__ || Object.getPrototypeOf(BlockEmbed.prototype), 'insertAt', this).call(this, index, value, def);
      }
    }
  }]);

  return BlockEmbed;
}(_parchment2.default.Embed);

BlockEmbed.scope = _parchment2.default.Scope.BLOCK_BLOT;
// It is important for cursor behavior BlockEmbeds use tags that are block level elements


var Block = function (_Parchment$Block) {
  _inherits(Block, _Parchment$Block);

  function Block(domNode) {
    _classCallCheck(this, Block);

    var _this2 = _possibleConstructorReturn(this, (Block.__proto__ || Object.getPrototypeOf(Block)).call(this, domNode));

    _this2.cache = {};
    return _this2;
  }

  _createClass(Block, [{
    key: 'delta',
    value: function delta() {
      if (this.cache.delta == null) {
        this.cache.delta = this.descendants(_parchment2.default.Leaf).reduce(function (delta, leaf) {
          if (leaf.length() === 0) {
            return delta;
          } else {
            return delta.insert(leaf.value(), bubbleFormats(leaf));
          }
        }, new _quillDelta2.default()).insert('\\n', bubbleFormats(this));
      }
      return this.cache.delta;
    }
  }, {
    key: 'deleteAt',
    value: function deleteAt(index, length) {
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'deleteAt', this).call(this, index, length);
      this.cache = {};
    }
  }, {
    key: 'formatAt',
    value: function formatAt(index, length, name, value) {
      if (length <= 0) return;
      if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
        if (index + length === this.length()) {
          this.format(name, value);
        }
      } else {
        _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'formatAt', this).call(this, index, Math.min(length, this.length() - index - 1), name, value);
      }
      this.cache = {};
    }
  }, {
    key: 'insertAt',
    value: function insertAt(index, value, def) {
      if (def != null) return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, index, value, def);
      if (value.length === 0) return;
      var lines = value.split('\\n');
      var text = lines.shift();
      if (text.length > 0) {
        if (index < this.length() - 1 || this.children.tail == null) {
          _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertAt', this).call(this, Math.min(index, this.length() - 1), text);
        } else {
          this.children.tail.insertAt(this.children.tail.length(), text);
        }
        this.cache = {};
      }
      var block = this;
      lines.reduce(function (index, line) {
        block = block.split(index, true);
        block.insertAt(0, line);
        return line.length;
      }, index + text.length);
    }
  }, {
    key: 'insertBefore',
    value: function insertBefore(blot, ref) {
      var head = this.children.head;
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'insertBefore', this).call(this, blot, ref);
      if (head instanceof _break2.default) {
        head.remove();
      }
      this.cache = {};
    }
  }, {
    key: 'length',
    value: function length() {
      if (this.cache.length == null) {
        this.cache.length = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'length', this).call(this) + NEWLINE_LENGTH;
      }
      return this.cache.length;
    }
  }, {
    key: 'moveChildren',
    value: function moveChildren(target, ref) {
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'moveChildren', this).call(this, target, ref);
      this.cache = {};
    }
  }, {
    key: 'optimize',
    value: function optimize(context) {
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'optimize', this).call(this, context);
      this.cache = {};
    }
  }, {
    key: 'path',
    value: function path(index) {
      return _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'path', this).call(this, index, true);
    }
  }, {
    key: 'removeChild',
    value: function removeChild(child) {
      _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'removeChild', this).call(this, child);
      this.cache = {};
    }
  }, {
    key: 'split',
    value: function split(index) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (force && (index === 0 || index >= this.length() - NEWLINE_LENGTH)) {
        var clone = this.clone();
        if (index === 0) {
          this.parent.insertBefore(clone, this);
          return this;
        } else {
          this.parent.insertBefore(clone, this.next);
          return clone;
        }
      } else {
        var next = _get(Block.prototype.__proto__ || Object.getPrototypeOf(Block.prototype), 'split', this).call(this, index, force);
        this.cache = {};
        return next;
      }
    }
  }]);

  return Block;
}(_parchment2.default.Block);

Block.blotName = 'block';
Block.tagName = 'P';
Block.defaultChild = 'break';
Block.allowedChildren = [_inline2.default, _parchment2.default.Embed, _text2.default];

function bubbleFormats(blot) {
  var formats = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  if (blot == null) return formats;
  if (typeof blot.formats === 'function') {
    formats = (0, _extend2.default)(formats, blot.formats());
  }
  if (blot.parent == null || blot.parent.blotName == 'scroll' || blot.parent.statics.scope !== blot.statics.scope) {
    return formats;
  }
  return bubbleFormats(blot.parent, formats);
}

exports.bubbleFormats = bubbleFormats;
exports.BlockEmbed = BlockEmbed;
exports.default = Block;

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.overload = exports.expandConfig = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

__webpack_require__(50);

var _quillDelta = __webpack_require__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _editor = __webpack_require__(14);

var _editor2 = _interopRequireDefault(_editor);

var _emitter3 = __webpack_require__(8);

var _emitter4 = _interopRequireDefault(_emitter3);

var _module = __webpack_require__(9);

var _module2 = _interopRequireDefault(_module);

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _selection = __webpack_require__(15);

var _selection2 = _interopRequireDefault(_selection);

var _extend = __webpack_require__(3);

var _extend2 = _interopRequireDefault(_extend);

var _logger = __webpack_require__(10);

var _logger2 = _interopRequireDefault(_logger);

var _theme = __webpack_require__(34);

var _theme2 = _interopRequireDefault(_theme);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var debug = (0, _logger2.default)('quill');

var Quill = function () {
  _createClass(Quill, null, [{
    key: 'debug',
    value: function debug(limit) {
      if (limit === true) {
        limit = 'log';
      }
      _logger2.default.level(limit);
    }
  }, {
    key: 'find',
    value: function find(node) {
      return node.__quill || _parchment2.default.find(node);
    }
  }, {
    key: 'import',
    value: function _import(name) {
      if (this.imports[name] == null) {
        debug.error('Cannot import ' + name + '. Are you sure it was registered?');
      }
      return this.imports[name];
    }
  }, {
    key: 'register',
    value: function register(path, target) {
      var _this = this;

      var overwrite = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

      if (typeof path !== 'string') {
        var name = path.attrName || path.blotName;
        if (typeof name === 'string') {
          // register(Blot | Attributor, overwrite)
          this.register('formats/' + name, path, target);
        } else {
          Object.keys(path).forEach(function (key) {
            _this.register(key, path[key], target);
          });
        }
      } else {
        if (this.imports[path] != null && !overwrite) {
          debug.warn('Overwriting ' + path + ' with', target);
        }
        this.imports[path] = target;
        if ((path.startsWith('blots/') || path.startsWith('formats/')) && target.blotName !== 'abstract') {
          _parchment2.default.register(target);
        } else if (path.startsWith('modules') && typeof target.register === 'function') {
          target.register();
        }
      }
    }
  }]);

  function Quill(container) {
    var _this2 = this;

    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Quill);

    this.options = expandConfig(container, options);
    this.container = this.options.container;
    if (this.container == null) {
      return debug.error('Invalid Quill container', container);
    }
    if (this.options.debug) {
      Quill.debug(this.options.debug);
    }
    var html = this.container.innerHTML.trim();
    this.container.classList.add('ql-container');
    this.container.innerHTML = '';
    this.container.__quill = this;
    this.root = this.addContainer('ql-editor');
    this.root.classList.add('ql-blank');
    this.root.setAttribute('data-gramm', false);
    this.scrollingContainer = this.options.scrollingContainer || this.root;
    this.emitter = new _emitter4.default();
    this.scroll = _parchment2.default.create(this.root, {
      emitter: this.emitter,
      whitelist: this.options.formats
    });
    this.editor = new _editor2.default(this.scroll);
    this.selection = new _selection2.default(this.scroll, this.emitter);
    this.theme = new this.options.theme(this, this.options);
    this.keyboard = this.theme.addModule('keyboard');
    this.clipboard = this.theme.addModule('clipboard');
    this.history = this.theme.addModule('history');
    this.theme.init();
    this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function (type) {
      if (type === _emitter4.default.events.TEXT_CHANGE) {
        _this2.root.classList.toggle('ql-blank', _this2.editor.isBlank());
      }
    });
    this.emitter.on(_emitter4.default.events.SCROLL_UPDATE, function (source, mutations) {
      var range = _this2.selection.lastRange;
      var index = range && range.length === 0 ? range.index : undefined;
      modify.call(_this2, function () {
        return _this2.editor.update(null, mutations, index);
      }, source);
    });
    var contents = this.clipboard.convert('<div class=\\'ql-editor\\' style="white-space: normal;">' + html + '<p><br></p></div>');
    this.setContents(contents);
    this.history.clear();
    if (this.options.placeholder) {
      this.root.setAttribute('data-placeholder', this.options.placeholder);
    }
    if (this.options.readOnly) {
      this.disable();
    }
  }

  _createClass(Quill, [{
    key: 'addContainer',
    value: function addContainer(container) {
      var refNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      if (typeof container === 'string') {
        var className = container;
        container = document.createElement('div');
        container.classList.add(className);
      }
      this.container.insertBefore(container, refNode);
      return container;
    }
  }, {
    key: 'blur',
    value: function blur() {
      this.selection.setRange(null);
    }
  }, {
    key: 'deleteText',
    value: function deleteText(index, length, source) {
      var _this3 = this;

      var _overload = overload(index, length, source);

      var _overload2 = _slicedToArray(_overload, 4);

      index = _overload2[0];
      length = _overload2[1];
      source = _overload2[3];

      return modify.call(this, function () {
        return _this3.editor.deleteText(index, length);
      }, source, index, -1 * length);
    }
  }, {
    key: 'disable',
    value: function disable() {
      this.enable(false);
    }
  }, {
    key: 'enable',
    value: function enable() {
      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      this.scroll.enable(enabled);
      this.container.classList.toggle('ql-disabled', !enabled);
    }
  }, {
    key: 'focus',
    value: function focus() {
      var scrollTop = this.scrollingContainer.scrollTop;
      this.selection.focus();
      this.scrollingContainer.scrollTop = scrollTop;
      this.scrollIntoView();
    }
  }, {
    key: 'format',
    value: function format(name, value) {
      var _this4 = this;

      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;

      return modify.call(this, function () {
        var range = _this4.getSelection(true);
        var change = new _quillDelta2.default();
        if (range == null) {
          return change;
        } else if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK)) {
          change = _this4.editor.formatLine(range.index, range.length, _defineProperty({}, name, value));
        } else if (range.length === 0) {
          _this4.selection.format(name, value);
          return change;
        } else {
          change = _this4.editor.formatText(range.index, range.length, _defineProperty({}, name, value));
        }
        _this4.setSelection(range, _emitter4.default.sources.SILENT);
        return change;
      }, source);
    }
  }, {
    key: 'formatLine',
    value: function formatLine(index, length, name, value, source) {
      var _this5 = this;

      var formats = void 0;

      var _overload3 = overload(index, length, name, value, source);

      var _overload4 = _slicedToArray(_overload3, 4);

      index = _overload4[0];
      length = _overload4[1];
      formats = _overload4[2];
      source = _overload4[3];

      return modify.call(this, function () {
        return _this5.editor.formatLine(index, length, formats);
      }, source, index, 0);
    }
  }, {
    key: 'formatText',
    value: function formatText(index, length, name, value, source) {
      var _this6 = this;

      var formats = void 0;

      var _overload5 = overload(index, length, name, value, source);

      var _overload6 = _slicedToArray(_overload5, 4);

      index = _overload6[0];
      length = _overload6[1];
      formats = _overload6[2];
      source = _overload6[3];

      return modify.call(this, function () {
        return _this6.editor.formatText(index, length, formats);
      }, source, index, 0);
    }
  }, {
    key: 'getBounds',
    value: function getBounds(index) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var bounds = void 0;
      if (typeof index === 'number') {
        bounds = this.selection.getBounds(index, length);
      } else {
        bounds = this.selection.getBounds(index.index, index.length);
      }
      var containerBounds = this.container.getBoundingClientRect();
      return {
        bottom: bounds.bottom - containerBounds.top,
        height: bounds.height,
        left: bounds.left - containerBounds.left,
        right: bounds.right - containerBounds.left,
        top: bounds.top - containerBounds.top,
        width: bounds.width
      };
    }
  }, {
    key: 'getContents',
    value: function getContents() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;

      var _overload7 = overload(index, length);

      var _overload8 = _slicedToArray(_overload7, 2);

      index = _overload8[0];
      length = _overload8[1];

      return this.editor.getContents(index, length);
    }
  }, {
    key: 'getFormat',
    value: function getFormat() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.getSelection(true);
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      if (typeof index === 'number') {
        return this.editor.getFormat(index, length);
      } else {
        return this.editor.getFormat(index.index, index.length);
      }
    }
  }, {
    key: 'getIndex',
    value: function getIndex(blot) {
      return blot.offset(this.scroll);
    }
  }, {
    key: 'getLength',
    value: function getLength() {
      return this.scroll.length();
    }
  }, {
    key: 'getLeaf',
    value: function getLeaf(index) {
      return this.scroll.leaf(index);
    }
  }, {
    key: 'getLine',
    value: function getLine(index) {
      return this.scroll.line(index);
    }
  }, {
    key: 'getLines',
    value: function getLines() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;

      if (typeof index !== 'number') {
        return this.scroll.lines(index.index, index.length);
      } else {
        return this.scroll.lines(index, length);
      }
    }
  }, {
    key: 'getModule',
    value: function getModule(name) {
      return this.theme.modules[name];
    }
  }, {
    key: 'getSelection',
    value: function getSelection() {
      var focus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

      if (focus) this.focus();
      this.update(); // Make sure we access getRange with editor in consistent state
      return this.selection.getRange()[0];
    }
  }, {
    key: 'getText',
    value: function getText() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.getLength() - index;

      var _overload9 = overload(index, length);

      var _overload10 = _slicedToArray(_overload9, 2);

      index = _overload10[0];
      length = _overload10[1];

      return this.editor.getText(index, length);
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return this.selection.hasFocus();
    }
  }, {
    key: 'insertEmbed',
    value: function insertEmbed(index, embed, value) {
      var _this7 = this;

      var source = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Quill.sources.API;

      return modify.call(this, function () {
        return _this7.editor.insertEmbed(index, embed, value);
      }, source, index);
    }
  }, {
    key: 'insertText',
    value: function insertText(index, text, name, value, source) {
      var _this8 = this;

      var formats = void 0;

      var _overload11 = overload(index, 0, name, value, source);

      var _overload12 = _slicedToArray(_overload11, 4);

      index = _overload12[0];
      formats = _overload12[2];
      source = _overload12[3];

      return modify.call(this, function () {
        return _this8.editor.insertText(index, text, formats);
      }, source, index, text.length);
    }
  }, {
    key: 'isEnabled',
    value: function isEnabled() {
      return !this.container.classList.contains('ql-disabled');
    }
  }, {
    key: 'off',
    value: function off() {
      return this.emitter.off.apply(this.emitter, arguments);
    }
  }, {
    key: 'on',
    value: function on() {
      return this.emitter.on.apply(this.emitter, arguments);
    }
  }, {
    key: 'once',
    value: function once() {
      return this.emitter.once.apply(this.emitter, arguments);
    }
  }, {
    key: 'pasteHTML',
    value: function pasteHTML(index, html, source) {
      this.clipboard.dangerouslyPasteHTML(index, html, source);
    }
  }, {
    key: 'removeFormat',
    value: function removeFormat(index, length, source) {
      var _this9 = this;

      var _overload13 = overload(index, length, source);

      var _overload14 = _slicedToArray(_overload13, 4);

      index = _overload14[0];
      length = _overload14[1];
      source = _overload14[3];

      return modify.call(this, function () {
        return _this9.editor.removeFormat(index, length);
      }, source, index);
    }
  }, {
    key: 'scrollIntoView',
    value: function scrollIntoView() {
      this.selection.scrollIntoView(this.scrollingContainer);
    }
  }, {
    key: 'setContents',
    value: function setContents(delta) {
      var _this10 = this;

      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

      return modify.call(this, function () {
        delta = new _quillDelta2.default(delta);
        var length = _this10.getLength();
        var deleted = _this10.editor.deleteText(0, length);
        var applied = _this10.editor.applyDelta(delta);
        var lastOp = applied.ops[applied.ops.length - 1];
        if (lastOp != null && typeof lastOp.insert === 'string' && lastOp.insert[lastOp.insert.length - 1] === '\\n') {
          _this10.editor.deleteText(_this10.getLength() - 1, 1);
          applied.delete(1);
        }
        var ret = deleted.compose(applied);
        return ret;
      }, source);
    }
  }, {
    key: 'setSelection',
    value: function setSelection(index, length, source) {
      if (index == null) {
        this.selection.setRange(null, length || Quill.sources.API);
      } else {
        var _overload15 = overload(index, length, source);

        var _overload16 = _slicedToArray(_overload15, 4);

        index = _overload16[0];
        length = _overload16[1];
        source = _overload16[3];

        this.selection.setRange(new _selection.Range(index, length), source);
        if (source !== _emitter4.default.sources.SILENT) {
          this.selection.scrollIntoView(this.scrollingContainer);
        }
      }
    }
  }, {
    key: 'setText',
    value: function setText(text) {
      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

      var delta = new _quillDelta2.default().insert(text);
      return this.setContents(delta, source);
    }
  }, {
    key: 'update',
    value: function update() {
      var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;

      var change = this.scroll.update(source); // Will update selection before selection.update() does if text changes
      this.selection.update(source);
      return change;
    }
  }, {
    key: 'updateContents',
    value: function updateContents(delta) {
      var _this11 = this;

      var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _emitter4.default.sources.API;

      return modify.call(this, function () {
        delta = new _quillDelta2.default(delta);
        return _this11.editor.applyDelta(delta, source);
      }, source, true);
    }
  }]);

  return Quill;
}();

Quill.DEFAULTS = {
  bounds: null,
  formats: null,
  modules: {},
  placeholder: '',
  readOnly: false,
  scrollingContainer: null,
  strict: true,
  theme: 'default'
};
Quill.events = _emitter4.default.events;
Quill.sources = _emitter4.default.sources;
// eslint-disable-next-line no-undef
Quill.version =  false ? 'dev' : "1.3.7";

Quill.imports = {
  'delta': _quillDelta2.default,
  'parchment': _parchment2.default,
  'core/module': _module2.default,
  'core/theme': _theme2.default
};

function expandConfig(container, userConfig) {
  userConfig = (0, _extend2.default)(true, {
    container: container,
    modules: {
      clipboard: true,
      keyboard: true,
      history: true
    }
  }, userConfig);
  if (!userConfig.theme || userConfig.theme === Quill.DEFAULTS.theme) {
    userConfig.theme = _theme2.default;
  } else {
    userConfig.theme = Quill.import('themes/' + userConfig.theme);
    if (userConfig.theme == null) {
      throw new Error('Invalid theme ' + userConfig.theme + '. Did you register it?');
    }
  }
  var themeConfig = (0, _extend2.default)(true, {}, userConfig.theme.DEFAULTS);
  [themeConfig, userConfig].forEach(function (config) {
    config.modules = config.modules || {};
    Object.keys(config.modules).forEach(function (module) {
      if (config.modules[module] === true) {
        config.modules[module] = {};
      }
    });
  });
  var moduleNames = Object.keys(themeConfig.modules).concat(Object.keys(userConfig.modules));
  var moduleConfig = moduleNames.reduce(function (config, name) {
    var moduleClass = Quill.import('modules/' + name);
    if (moduleClass == null) {
      debug.error('Cannot load ' + name + ' module. Are you sure you registered it?');
    } else {
      config[name] = moduleClass.DEFAULTS || {};
    }
    return config;
  }, {});
  // Special case toolbar shorthand
  if (userConfig.modules != null && userConfig.modules.toolbar && userConfig.modules.toolbar.constructor !== Object) {
    userConfig.modules.toolbar = {
      container: userConfig.modules.toolbar
    };
  }
  userConfig = (0, _extend2.default)(true, {}, Quill.DEFAULTS, { modules: moduleConfig }, themeConfig, userConfig);
  ['bounds', 'container', 'scrollingContainer'].forEach(function (key) {
    if (typeof userConfig[key] === 'string') {
      userConfig[key] = document.querySelector(userConfig[key]);
    }
  });
  userConfig.modules = Object.keys(userConfig.modules).reduce(function (config, name) {
    if (userConfig.modules[name]) {
      config[name] = userConfig.modules[name];
    }
    return config;
  }, {});
  return userConfig;
}

// Handle selection preservation and TEXT_CHANGE emission
// common to modification APIs
function modify(modifier, source, index, shift) {
  if (this.options.strict && !this.isEnabled() && source === _emitter4.default.sources.USER) {
    return new _quillDelta2.default();
  }
  var range = index == null ? null : this.getSelection();
  var oldDelta = this.editor.delta;
  var change = modifier();
  if (range != null) {
    if (index === true) index = range.index;
    if (shift == null) {
      range = shiftRange(range, change, source);
    } else if (shift !== 0) {
      range = shiftRange(range, index, shift, source);
    }
    this.setSelection(range, _emitter4.default.sources.SILENT);
  }
  if (change.length() > 0) {
    var _emitter;

    var args = [_emitter4.default.events.TEXT_CHANGE, change, oldDelta, source];
    (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
    if (source !== _emitter4.default.sources.SILENT) {
      var _emitter2;

      (_emitter2 = this.emitter).emit.apply(_emitter2, args);
    }
  }
  return change;
}

function overload(index, length, name, value, source) {
  var formats = {};
  if (typeof index.index === 'number' && typeof index.length === 'number') {
    // Allow for throwaway end (used by insertText/insertEmbed)
    if (typeof length !== 'number') {
      source = value, value = name, name = length, length = index.length, index = index.index;
    } else {
      length = index.length, index = index.index;
    }
  } else if (typeof length !== 'number') {
    source = value, value = name, name = length, length = 0;
  }
  // Handle format being object, two format name/value strings or excluded
  if ((typeof name === 'undefined' ? 'undefined' : _typeof(name)) === 'object') {
    formats = name;
    source = value;
  } else if (typeof name === 'string') {
    if (value != null) {
      formats[name] = value;
    } else {
      source = name;
    }
  }
  // Handle optional source
  source = source || _emitter4.default.sources.API;
  return [index, length, formats, source];
}

function shiftRange(range, index, length, source) {
  if (range == null) return null;
  var start = void 0,
      end = void 0;
  if (index instanceof _quillDelta2.default) {
    var _map = [range.index, range.index + range.length].map(function (pos) {
      return index.transformPosition(pos, source !== _emitter4.default.sources.USER);
    });

    var _map2 = _slicedToArray(_map, 2);

    start = _map2[0];
    end = _map2[1];
  } else {
    var _map3 = [range.index, range.index + range.length].map(function (pos) {
      if (pos < index || pos === index && source === _emitter4.default.sources.USER) return pos;
      if (length >= 0) {
        return pos + length;
      } else {
        return Math.max(index, pos + length);
      }
    });

    var _map4 = _slicedToArray(_map3, 2);

    start = _map4[0];
    end = _map4[1];
  }
  return new _selection.Range(start, end - start);
}

exports.expandConfig = expandConfig;
exports.overload = overload;
exports.default = Quill;

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _text = __webpack_require__(7);

var _text2 = _interopRequireDefault(_text);

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Inline = function (_Parchment$Inline) {
  _inherits(Inline, _Parchment$Inline);

  function Inline() {
    _classCallCheck(this, Inline);

    return _possibleConstructorReturn(this, (Inline.__proto__ || Object.getPrototypeOf(Inline)).apply(this, arguments));
  }

  _createClass(Inline, [{
    key: 'formatAt',
    value: function formatAt(index, length, name, value) {
      if (Inline.compare(this.statics.blotName, name) < 0 && _parchment2.default.query(name, _parchment2.default.Scope.BLOT)) {
        var blot = this.isolate(index, length);
        if (value) {
          blot.wrap(name, value);
        }
      } else {
        _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'formatAt', this).call(this, index, length, name, value);
      }
    }
  }, {
    key: 'optimize',
    value: function optimize(context) {
      _get(Inline.prototype.__proto__ || Object.getPrototypeOf(Inline.prototype), 'optimize', this).call(this, context);
      if (this.parent instanceof Inline && Inline.compare(this.statics.blotName, this.parent.statics.blotName) > 0) {
        var parent = this.parent.isolate(this.offset(), this.length());
        this.moveChildren(parent);
        parent.wrap(this);
      }
    }
  }], [{
    key: 'compare',
    value: function compare(self, other) {
      var selfIndex = Inline.order.indexOf(self);
      var otherIndex = Inline.order.indexOf(other);
      if (selfIndex >= 0 || otherIndex >= 0) {
        return selfIndex - otherIndex;
      } else if (self === other) {
        return 0;
      } else if (self < other) {
        return -1;
      } else {
        return 1;
      }
    }
  }]);

  return Inline;
}(_parchment2.default.Inline);

Inline.allowedChildren = [Inline, _parchment2.default.Embed, _text2.default];
// Lower index means deeper in the DOM tree, since not found (-1) is for embeds
Inline.order = ['cursor', 'inline', // Must be lower
'underline', 'strike', 'italic', 'bold', 'script', 'link', 'code' // Must be higher
];

exports.default = Inline;

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TextBlot = function (_Parchment$Text) {
  _inherits(TextBlot, _Parchment$Text);

  function TextBlot() {
    _classCallCheck(this, TextBlot);

    return _possibleConstructorReturn(this, (TextBlot.__proto__ || Object.getPrototypeOf(TextBlot)).apply(this, arguments));
  }

  return TextBlot;
}(_parchment2.default.Text);

exports.default = TextBlot;

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _eventemitter = __webpack_require__(54);

var _eventemitter2 = _interopRequireDefault(_eventemitter);

var _logger = __webpack_require__(10);

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = (0, _logger2.default)('quill:events');

var EVENTS = ['selectionchange', 'mousedown', 'mouseup', 'click'];

EVENTS.forEach(function (eventName) {
  document.addEventListener(eventName, function () {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    [].slice.call(document.querySelectorAll('.ql-container')).forEach(function (node) {
      // TODO use WeakMap
      if (node.__quill && node.__quill.emitter) {
        var _node$__quill$emitter;

        (_node$__quill$emitter = node.__quill.emitter).handleDOM.apply(_node$__quill$emitter, args);
      }
    });
  });
});

var Emitter = function (_EventEmitter) {
  _inherits(Emitter, _EventEmitter);

  function Emitter() {
    _classCallCheck(this, Emitter);

    var _this = _possibleConstructorReturn(this, (Emitter.__proto__ || Object.getPrototypeOf(Emitter)).call(this));

    _this.listeners = {};
    _this.on('error', debug.error);
    return _this;
  }

  _createClass(Emitter, [{
    key: 'emit',
    value: function emit() {
      debug.log.apply(debug, arguments);
      _get(Emitter.prototype.__proto__ || Object.getPrototypeOf(Emitter.prototype), 'emit', this).apply(this, arguments);
    }
  }, {
    key: 'handleDOM',
    value: function handleDOM(event) {
      for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      (this.listeners[event.type] || []).forEach(function (_ref) {
        var node = _ref.node,
            handler = _ref.handler;

        if (event.target === node || node.contains(event.target)) {
          handler.apply(undefined, [event].concat(args));
        }
      });
    }
  }, {
    key: 'listenDOM',
    value: function listenDOM(eventName, node, handler) {
      if (!this.listeners[eventName]) {
        this.listeners[eventName] = [];
      }
      this.listeners[eventName].push({ node: node, handler: handler });
    }
  }]);

  return Emitter;
}(_eventemitter2.default);

Emitter.events = {
  EDITOR_CHANGE: 'editor-change',
  SCROLL_BEFORE_UPDATE: 'scroll-before-update',
  SCROLL_OPTIMIZE: 'scroll-optimize',
  SCROLL_UPDATE: 'scroll-update',
  SELECTION_CHANGE: 'selection-change',
  TEXT_CHANGE: 'text-change'
};
Emitter.sources = {
  API: 'api',
  SILENT: 'silent',
  USER: 'user'
};

exports.default = Emitter;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Module = function Module(quill) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

  _classCallCheck(this, Module);

  this.quill = quill;
  this.options = options;
};

Module.DEFAULTS = {};

exports.default = Module;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
var levels = ['error', 'warn', 'log', 'info'];
var level = 'warn';

function debug(method) {
  if (levels.indexOf(method) <= levels.indexOf(level)) {
    var _console;

    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
      args[_key - 1] = arguments[_key];
    }

    (_console = console)[method].apply(_console, args); // eslint-disable-line no-console
  }
}

function namespace(ns) {
  return levels.reduce(function (logger, method) {
    logger[method] = debug.bind(console, method, ns);
    return logger;
  }, {});
}

debug.level = namespace.level = function (newLevel) {
  level = newLevel;
};

exports.default = namespace;

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

var pSlice = Array.prototype.slice;
var objectKeys = __webpack_require__(52);
var isArguments = __webpack_require__(53);

var deepEqual = module.exports = function (actual, expected, opts) {
  if (!opts) opts = {};
  // 7.1. All identical values are equivalent, as determined by ===.
  if (actual === expected) {
    return true;

  } else if (actual instanceof Date && expected instanceof Date) {
    return actual.getTime() === expected.getTime();

  // 7.3. Other pairs that do not both pass typeof value == 'object',
  // equivalence is determined by ==.
  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {
    return opts.strict ? actual === expected : actual == expected;

  // 7.4. For all other Object pairs, including Array objects, equivalence is
  // determined by having the same number of owned properties (as verified
  // with Object.prototype.hasOwnProperty.call), the same set of keys
  // (although not necessarily the same order), equivalent values for every
  // corresponding key, and an identical 'prototype' property. Note: this
  // accounts for both named and indexed properties on Arrays.
  } else {
    return objEquiv(actual, expected, opts);
  }
}

function isUndefinedOrNull(value) {
  return value === null || value === undefined;
}

function isBuffer (x) {
  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;
  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {
    return false;
  }
  if (x.length > 0 && typeof x[0] !== 'number') return false;
  return true;
}

function objEquiv(a, b, opts) {
  var i, key;
  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))
    return false;
  // an identical 'prototype' property.
  if (a.prototype !== b.prototype) return false;
  //~~~I've managed to break Object.keys through screwy arguments passing.
  //   Converting to array solves the problem.
  if (isArguments(a)) {
    if (!isArguments(b)) {
      return false;
    }
    a = pSlice.call(a);
    b = pSlice.call(b);
    return deepEqual(a, b, opts);
  }
  if (isBuffer(a)) {
    if (!isBuffer(b)) {
      return false;
    }
    if (a.length !== b.length) return false;
    for (i = 0; i < a.length; i++) {
      if (a[i] !== b[i]) return false;
    }
    return true;
  }
  try {
    var ka = objectKeys(a),
        kb = objectKeys(b);
  } catch (e) {//happens when one is a string literal and the other isn't
    return false;
  }
  // having the same number of owned properties (keys incorporates
  // hasOwnProperty)
  if (ka.length != kb.length)
    return false;
  //the same set of keys (although not necessarily the same order),
  ka.sort();
  kb.sort();
  //~~~cheap key test
  for (i = ka.length - 1; i >= 0; i--) {
    if (ka[i] != kb[i])
      return false;
  }
  //equivalent values for every corresponding key, and
  //~~~possibly expensive deep test
  for (i = ka.length - 1; i >= 0; i--) {
    key = ka[i];
    if (!deepEqual(a[key], b[key], opts)) return false;
  }
  return typeof a === typeof b;
}


/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Registry = __webpack_require__(1);
var Attributor = /** @class */ (function () {
    function Attributor(attrName, keyName, options) {
        if (options === void 0) { options = {}; }
        this.attrName = attrName;
        this.keyName = keyName;
        var attributeBit = Registry.Scope.TYPE & Registry.Scope.ATTRIBUTE;
        if (options.scope != null) {
            // Ignore type bits, force attribute bit
            this.scope = (options.scope & Registry.Scope.LEVEL) | attributeBit;
        }
        else {
            this.scope = Registry.Scope.ATTRIBUTE;
        }
        if (options.whitelist != null)
            this.whitelist = options.whitelist;
    }
    Attributor.keys = function (node) {
        return [].map.call(node.attributes, function (item) {
            return item.name;
        });
    };
    Attributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        node.setAttribute(this.keyName, value);
        return true;
    };
    Attributor.prototype.canAdd = function (node, value) {
        var match = Registry.query(node, Registry.Scope.BLOT & (this.scope | Registry.Scope.TYPE));
        if (match == null)
            return false;
        if (this.whitelist == null)
            return true;
        if (typeof value === 'string') {
            return this.whitelist.indexOf(value.replace(/["']/g, '')) > -1;
        }
        else {
            return this.whitelist.indexOf(value) > -1;
        }
    };
    Attributor.prototype.remove = function (node) {
        node.removeAttribute(this.keyName);
    };
    Attributor.prototype.value = function (node) {
        var value = node.getAttribute(this.keyName);
        if (this.canAdd(node, value) && value) {
            return value;
        }
        return '';
    };
    return Attributor;
}());
exports.default = Attributor;


/***/ }),
/* 13 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Code = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _quillDelta = __webpack_require__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _block = __webpack_require__(4);

var _block2 = _interopRequireDefault(_block);

var _inline = __webpack_require__(6);

var _inline2 = _interopRequireDefault(_inline);

var _text = __webpack_require__(7);

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Code = function (_Inline) {
  _inherits(Code, _Inline);

  function Code() {
    _classCallCheck(this, Code);

    return _possibleConstructorReturn(this, (Code.__proto__ || Object.getPrototypeOf(Code)).apply(this, arguments));
  }

  return Code;
}(_inline2.default);

Code.blotName = 'code';
Code.tagName = 'CODE';

var CodeBlock = function (_Block) {
  _inherits(CodeBlock, _Block);

  function CodeBlock() {
    _classCallCheck(this, CodeBlock);

    return _possibleConstructorReturn(this, (CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock)).apply(this, arguments));
  }

  _createClass(CodeBlock, [{
    key: 'delta',
    value: function delta() {
      var _this3 = this;

      var text = this.domNode.textContent;
      if (text.endsWith('\\n')) {
        // Should always be true
        text = text.slice(0, -1);
      }
      return text.split('\\n').reduce(function (delta, frag) {
        return delta.insert(frag).insert('\\n', _this3.formats());
      }, new _quillDelta2.default());
    }
  }, {
    key: 'format',
    value: function format(name, value) {
      if (name === this.statics.blotName && value) return;

      var _descendant = this.descendant(_text2.default, this.length() - 1),
          _descendant2 = _slicedToArray(_descendant, 1),
          text = _descendant2[0];

      if (text != null) {
        text.deleteAt(text.length() - 1, 1);
      }
      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'format', this).call(this, name, value);
    }
  }, {
    key: 'formatAt',
    value: function formatAt(index, length, name, value) {
      if (length === 0) return;
      if (_parchment2.default.query(name, _parchment2.default.Scope.BLOCK) == null || name === this.statics.blotName && value === this.statics.formats(this.domNode)) {
        return;
      }
      var nextNewline = this.newlineIndex(index);
      if (nextNewline < 0 || nextNewline >= index + length) return;
      var prevNewline = this.newlineIndex(index, true) + 1;
      var isolateLength = nextNewline - prevNewline + 1;
      var blot = this.isolate(prevNewline, isolateLength);
      var next = blot.next;
      blot.format(name, value);
      if (next instanceof CodeBlock) {
        next.formatAt(0, index - prevNewline + length - isolateLength, name, value);
      }
    }
  }, {
    key: 'insertAt',
    value: function insertAt(index, value, def) {
      if (def != null) return;

      var _descendant3 = this.descendant(_text2.default, index),
          _descendant4 = _slicedToArray(_descendant3, 2),
          text = _descendant4[0],
          offset = _descendant4[1];

      text.insertAt(offset, value);
    }
  }, {
    key: 'length',
    value: function length() {
      var length = this.domNode.textContent.length;
      if (!this.domNode.textContent.endsWith('\\n')) {
        return length + 1;
      }
      return length;
    }
  }, {
    key: 'newlineIndex',
    value: function newlineIndex(searchIndex) {
      var reverse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (!reverse) {
        var offset = this.domNode.textContent.slice(searchIndex).indexOf('\\n');
        return offset > -1 ? searchIndex + offset : -1;
      } else {
        return this.domNode.textContent.slice(0, searchIndex).lastIndexOf('\\n');
      }
    }
  }, {
    key: 'optimize',
    value: function optimize(context) {
      if (!this.domNode.textContent.endsWith('\\n')) {
        this.appendChild(_parchment2.default.create('text', '\\n'));
      }
      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'optimize', this).call(this, context);
      var next = this.next;
      if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && this.statics.formats(this.domNode) === next.statics.formats(next.domNode)) {
        next.optimize(context);
        next.moveChildren(this);
        next.remove();
      }
    }
  }, {
    key: 'replace',
    value: function replace(target) {
      _get(CodeBlock.prototype.__proto__ || Object.getPrototypeOf(CodeBlock.prototype), 'replace', this).call(this, target);
      [].slice.call(this.domNode.querySelectorAll('*')).forEach(function (node) {
        var blot = _parchment2.default.find(node);
        if (blot == null) {
          node.parentNode.removeChild(node);
        } else if (blot instanceof _parchment2.default.Embed) {
          blot.remove();
        } else {
          blot.unwrap();
        }
      });
    }
  }], [{
    key: 'create',
    value: function create(value) {
      var domNode = _get(CodeBlock.__proto__ || Object.getPrototypeOf(CodeBlock), 'create', this).call(this, value);
      domNode.setAttribute('spellcheck', false);
      return domNode;
    }
  }, {
    key: 'formats',
    value: function formats() {
      return true;
    }
  }]);

  return CodeBlock;
}(_block2.default);

CodeBlock.blotName = 'code-block';
CodeBlock.tagName = 'PRE';
CodeBlock.TAB = '  ';

exports.Code = Code;
exports.default = CodeBlock;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _quillDelta = __webpack_require__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _op = __webpack_require__(20);

var _op2 = _interopRequireDefault(_op);

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _code = __webpack_require__(13);

var _code2 = _interopRequireDefault(_code);

var _cursor = __webpack_require__(24);

var _cursor2 = _interopRequireDefault(_cursor);

var _block = __webpack_require__(4);

var _block2 = _interopRequireDefault(_block);

var _break = __webpack_require__(16);

var _break2 = _interopRequireDefault(_break);

var _clone = __webpack_require__(21);

var _clone2 = _interopRequireDefault(_clone);

var _deepEqual = __webpack_require__(11);

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _extend = __webpack_require__(3);

var _extend2 = _interopRequireDefault(_extend);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var ASCII = /^[ -~]*$/;

var Editor = function () {
  function Editor(scroll) {
    _classCallCheck(this, Editor);

    this.scroll = scroll;
    this.delta = this.getDelta();
  }

  _createClass(Editor, [{
    key: 'applyDelta',
    value: function applyDelta(delta) {
      var _this = this;

      var consumeNextNewline = false;
      this.scroll.update();
      var scrollLength = this.scroll.length();
      this.scroll.batchStart();
      delta = normalizeDelta(delta);
      delta.reduce(function (index, op) {
        var length = op.retain || op.delete || op.insert.length || 1;
        var attributes = op.attributes || {};
        if (op.insert != null) {
          if (typeof op.insert === 'string') {
            var text = op.insert;
            if (text.endsWith('\\n') && consumeNextNewline) {
              consumeNextNewline = false;
              text = text.slice(0, -1);
            }
            if (index >= scrollLength && !text.endsWith('\\n')) {
              consumeNextNewline = true;
            }
            _this.scroll.insertAt(index, text);

            var _scroll$line = _this.scroll.line(index),
                _scroll$line2 = _slicedToArray(_scroll$line, 2),
                line = _scroll$line2[0],
                offset = _scroll$line2[1];

            var formats = (0, _extend2.default)({}, (0, _block.bubbleFormats)(line));
            if (line instanceof _block2.default) {
              var _line$descendant = line.descendant(_parchment2.default.Leaf, offset),
                  _line$descendant2 = _slicedToArray(_line$descendant, 1),
                  leaf = _line$descendant2[0];

              formats = (0, _extend2.default)(formats, (0, _block.bubbleFormats)(leaf));
            }
            attributes = _op2.default.attributes.diff(formats, attributes) || {};
          } else if (_typeof(op.insert) === 'object') {
            var key = Object.keys(op.insert)[0]; // There should only be one key
            if (key == null) return index;
            _this.scroll.insertAt(index, key, op.insert[key]);
          }
          scrollLength += length;
        }
        Object.keys(attributes).forEach(function (name) {
          _this.scroll.formatAt(index, length, name, attributes[name]);
        });
        return index + length;
      }, 0);
      delta.reduce(function (index, op) {
        if (typeof op.delete === 'number') {
          _this.scroll.deleteAt(index, op.delete);
          return index;
        }
        return index + (op.retain || op.insert.length || 1);
      }, 0);
      this.scroll.batchEnd();
      return this.update(delta);
    }
  }, {
    key: 'deleteText',
    value: function deleteText(index, length) {
      this.scroll.deleteAt(index, length);
      return this.update(new _quillDelta2.default().retain(index).delete(length));
    }
  }, {
    key: 'formatLine',
    value: function formatLine(index, length) {
      var _this2 = this;

      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      this.scroll.update();
      Object.keys(formats).forEach(function (format) {
        if (_this2.scroll.whitelist != null && !_this2.scroll.whitelist[format]) return;
        var lines = _this2.scroll.lines(index, Math.max(length, 1));
        var lengthRemaining = length;
        lines.forEach(function (line) {
          var lineLength = line.length();
          if (!(line instanceof _code2.default)) {
            line.format(format, formats[format]);
          } else {
            var codeIndex = index - line.offset(_this2.scroll);
            var codeLength = line.newlineIndex(codeIndex + lengthRemaining) - codeIndex + 1;
            line.formatAt(codeIndex, codeLength, format, formats[format]);
          }
          lengthRemaining -= lineLength;
        });
      });
      this.scroll.optimize();
      return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));
    }
  }, {
    key: 'formatText',
    value: function formatText(index, length) {
      var _this3 = this;

      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      Object.keys(formats).forEach(function (format) {
        _this3.scroll.formatAt(index, length, format, formats[format]);
      });
      return this.update(new _quillDelta2.default().retain(index).retain(length, (0, _clone2.default)(formats)));
    }
  }, {
    key: 'getContents',
    value: function getContents(index, length) {
      return this.delta.slice(index, index + length);
    }
  }, {
    key: 'getDelta',
    value: function getDelta() {
      return this.scroll.lines().reduce(function (delta, line) {
        return delta.concat(line.delta());
      }, new _quillDelta2.default());
    }
  }, {
    key: 'getFormat',
    value: function getFormat(index) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var lines = [],
          leaves = [];
      if (length === 0) {
        this.scroll.path(index).forEach(function (path) {
          var _path = _slicedToArray(path, 1),
              blot = _path[0];

          if (blot instanceof _block2.default) {
            lines.push(blot);
          } else if (blot instanceof _parchment2.default.Leaf) {
            leaves.push(blot);
          }
        });
      } else {
        lines = this.scroll.lines(index, length);
        leaves = this.scroll.descendants(_parchment2.default.Leaf, index, length);
      }
      var formatsArr = [lines, leaves].map(function (blots) {
        if (blots.length === 0) return {};
        var formats = (0, _block.bubbleFormats)(blots.shift());
        while (Object.keys(formats).length > 0) {
          var blot = blots.shift();
          if (blot == null) return formats;
          formats = combineFormats((0, _block.bubbleFormats)(blot), formats);
        }
        return formats;
      });
      return _extend2.default.apply(_extend2.default, formatsArr);
    }
  }, {
    key: 'getText',
    value: function getText(index, length) {
      return this.getContents(index, length).filter(function (op) {
        return typeof op.insert === 'string';
      }).map(function (op) {
        return op.insert;
      }).join('');
    }
  }, {
    key: 'insertEmbed',
    value: function insertEmbed(index, embed, value) {
      this.scroll.insertAt(index, embed, value);
      return this.update(new _quillDelta2.default().retain(index).insert(_defineProperty({}, embed, value)));
    }
  }, {
    key: 'insertText',
    value: function insertText(index, text) {
      var _this4 = this;

      var formats = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      text = text.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');
      this.scroll.insertAt(index, text);
      Object.keys(formats).forEach(function (format) {
        _this4.scroll.formatAt(index, text.length, format, formats[format]);
      });
      return this.update(new _quillDelta2.default().retain(index).insert(text, (0, _clone2.default)(formats)));
    }
  }, {
    key: 'isBlank',
    value: function isBlank() {
      if (this.scroll.children.length == 0) return true;
      if (this.scroll.children.length > 1) return false;
      var block = this.scroll.children.head;
      if (block.statics.blotName !== _block2.default.blotName) return false;
      if (block.children.length > 1) return false;
      return block.children.head instanceof _break2.default;
    }
  }, {
    key: 'removeFormat',
    value: function removeFormat(index, length) {
      var text = this.getText(index, length);

      var _scroll$line3 = this.scroll.line(index + length),
          _scroll$line4 = _slicedToArray(_scroll$line3, 2),
          line = _scroll$line4[0],
          offset = _scroll$line4[1];

      var suffixLength = 0,
          suffix = new _quillDelta2.default();
      if (line != null) {
        if (!(line instanceof _code2.default)) {
          suffixLength = line.length() - offset;
        } else {
          suffixLength = line.newlineIndex(offset) - offset + 1;
        }
        suffix = line.delta().slice(offset, offset + suffixLength - 1).insert('\\n');
      }
      var contents = this.getContents(index, length + suffixLength);
      var diff = contents.diff(new _quillDelta2.default().insert(text).concat(suffix));
      var delta = new _quillDelta2.default().retain(index).concat(diff);
      return this.applyDelta(delta);
    }
  }, {
    key: 'update',
    value: function update(change) {
      var mutations = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
      var cursorIndex = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;

      var oldDelta = this.delta;
      if (mutations.length === 1 && mutations[0].type === 'characterData' && mutations[0].target.data.match(ASCII) && _parchment2.default.find(mutations[0].target)) {
        // Optimization for character changes
        var textBlot = _parchment2.default.find(mutations[0].target);
        var formats = (0, _block.bubbleFormats)(textBlot);
        var index = textBlot.offset(this.scroll);
        var oldValue = mutations[0].oldValue.replace(_cursor2.default.CONTENTS, '');
        var oldText = new _quillDelta2.default().insert(oldValue);
        var newText = new _quillDelta2.default().insert(textBlot.value());
        var diffDelta = new _quillDelta2.default().retain(index).concat(oldText.diff(newText, cursorIndex));
        change = diffDelta.reduce(function (delta, op) {
          if (op.insert) {
            return delta.insert(op.insert, formats);
          } else {
            return delta.push(op);
          }
        }, new _quillDelta2.default());
        this.delta = oldDelta.compose(change);
      } else {
        this.delta = this.getDelta();
        if (!change || !(0, _deepEqual2.default)(oldDelta.compose(change), this.delta)) {
          change = oldDelta.diff(this.delta, cursorIndex);
        }
      }
      return change;
    }
  }]);

  return Editor;
}();

function combineFormats(formats, combined) {
  return Object.keys(combined).reduce(function (merged, name) {
    if (formats[name] == null) return merged;
    if (combined[name] === formats[name]) {
      merged[name] = combined[name];
    } else if (Array.isArray(combined[name])) {
      if (combined[name].indexOf(formats[name]) < 0) {
        merged[name] = combined[name].concat([formats[name]]);
      }
    } else {
      merged[name] = [combined[name], formats[name]];
    }
    return merged;
  }, {});
}

function normalizeDelta(delta) {
  return delta.reduce(function (delta, op) {
    if (op.insert === 1) {
      var attributes = (0, _clone2.default)(op.attributes);
      delete attributes['image'];
      return delta.insert({ image: op.attributes.image }, attributes);
    }
    if (op.attributes != null && (op.attributes.list === true || op.attributes.bullet === true)) {
      op = (0, _clone2.default)(op);
      if (op.attributes.list) {
        op.attributes.list = 'ordered';
      } else {
        op.attributes.list = 'bullet';
        delete op.attributes.bullet;
      }
    }
    if (typeof op.insert === 'string') {
      var text = op.insert.replace(/\\r\\n/g, '\\n').replace(/\\r/g, '\\n');
      return delta.insert(text, op.attributes);
    }
    return delta.push(op);
  }, new _quillDelta2.default());
}

exports.default = Editor;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Range = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _clone = __webpack_require__(21);

var _clone2 = _interopRequireDefault(_clone);

var _deepEqual = __webpack_require__(11);

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _emitter3 = __webpack_require__(8);

var _emitter4 = _interopRequireDefault(_emitter3);

var _logger = __webpack_require__(10);

var _logger2 = _interopRequireDefault(_logger);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var debug = (0, _logger2.default)('quill:selection');

var Range = function Range(index) {
  var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

  _classCallCheck(this, Range);

  this.index = index;
  this.length = length;
};

var Selection = function () {
  function Selection(scroll, emitter) {
    var _this = this;

    _classCallCheck(this, Selection);

    this.emitter = emitter;
    this.scroll = scroll;
    this.composing = false;
    this.mouseDown = false;
    this.root = this.scroll.domNode;
    this.cursor = _parchment2.default.create('cursor', this);
    // savedRange is last non-null range
    this.lastRange = this.savedRange = new Range(0, 0);
    this.handleComposition();
    this.handleDragging();
    this.emitter.listenDOM('selectionchange', document, function () {
      if (!_this.mouseDown) {
        setTimeout(_this.update.bind(_this, _emitter4.default.sources.USER), 1);
      }
    });
    this.emitter.on(_emitter4.default.events.EDITOR_CHANGE, function (type, delta) {
      if (type === _emitter4.default.events.TEXT_CHANGE && delta.length() > 0) {
        _this.update(_emitter4.default.sources.SILENT);
      }
    });
    this.emitter.on(_emitter4.default.events.SCROLL_BEFORE_UPDATE, function () {
      if (!_this.hasFocus()) return;
      var native = _this.getNativeRange();
      if (native == null) return;
      if (native.start.node === _this.cursor.textNode) return; // cursor.restore() will handle
      // TODO unclear if this has negative side effects
      _this.emitter.once(_emitter4.default.events.SCROLL_UPDATE, function () {
        try {
          _this.setNativeRange(native.start.node, native.start.offset, native.end.node, native.end.offset);
        } catch (ignored) {}
      });
    });
    this.emitter.on(_emitter4.default.events.SCROLL_OPTIMIZE, function (mutations, context) {
      if (context.range) {
        var _context$range = context.range,
            startNode = _context$range.startNode,
            startOffset = _context$range.startOffset,
            endNode = _context$range.endNode,
            endOffset = _context$range.endOffset;

        _this.setNativeRange(startNode, startOffset, endNode, endOffset);
      }
    });
    this.update(_emitter4.default.sources.SILENT);
  }

  _createClass(Selection, [{
    key: 'handleComposition',
    value: function handleComposition() {
      var _this2 = this;

      this.root.addEventListener('compositionstart', function () {
        _this2.composing = true;
      });
      this.root.addEventListener('compositionend', function () {
        _this2.composing = false;
        if (_this2.cursor.parent) {
          var range = _this2.cursor.restore();
          if (!range) return;
          setTimeout(function () {
            _this2.setNativeRange(range.startNode, range.startOffset, range.endNode, range.endOffset);
          }, 1);
        }
      });
    }
  }, {
    key: 'handleDragging',
    value: function handleDragging() {
      var _this3 = this;

      this.emitter.listenDOM('mousedown', document.body, function () {
        _this3.mouseDown = true;
      });
      this.emitter.listenDOM('mouseup', document.body, function () {
        _this3.mouseDown = false;
        _this3.update(_emitter4.default.sources.USER);
      });
    }
  }, {
    key: 'focus',
    value: function focus() {
      if (this.hasFocus()) return;
      this.root.focus();
      this.setRange(this.savedRange);
    }
  }, {
    key: 'format',
    value: function format(_format, value) {
      if (this.scroll.whitelist != null && !this.scroll.whitelist[_format]) return;
      this.scroll.update();
      var nativeRange = this.getNativeRange();
      if (nativeRange == null || !nativeRange.native.collapsed || _parchment2.default.query(_format, _parchment2.default.Scope.BLOCK)) return;
      if (nativeRange.start.node !== this.cursor.textNode) {
        var blot = _parchment2.default.find(nativeRange.start.node, false);
        if (blot == null) return;
        // TODO Give blot ability to not split
        if (blot instanceof _parchment2.default.Leaf) {
          var after = blot.split(nativeRange.start.offset);
          blot.parent.insertBefore(this.cursor, after);
        } else {
          blot.insertBefore(this.cursor, nativeRange.start.node); // Should never happen
        }
        this.cursor.attach();
      }
      this.cursor.format(_format, value);
      this.scroll.optimize();
      this.setNativeRange(this.cursor.textNode, this.cursor.textNode.data.length);
      this.update();
    }
  }, {
    key: 'getBounds',
    value: function getBounds(index) {
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var scrollLength = this.scroll.length();
      index = Math.min(index, scrollLength - 1);
      length = Math.min(index + length, scrollLength - 1) - index;
      var node = void 0,
          _scroll$leaf = this.scroll.leaf(index),
          _scroll$leaf2 = _slicedToArray(_scroll$leaf, 2),
          leaf = _scroll$leaf2[0],
          offset = _scroll$leaf2[1];
      if (leaf == null) return null;

      var _leaf$position = leaf.position(offset, true);

      var _leaf$position2 = _slicedToArray(_leaf$position, 2);

      node = _leaf$position2[0];
      offset = _leaf$position2[1];

      var range = document.createRange();
      if (length > 0) {
        range.setStart(node, offset);

        var _scroll$leaf3 = this.scroll.leaf(index + length);

        var _scroll$leaf4 = _slicedToArray(_scroll$leaf3, 2);

        leaf = _scroll$leaf4[0];
        offset = _scroll$leaf4[1];

        if (leaf == null) return null;

        var _leaf$position3 = leaf.position(offset, true);

        var _leaf$position4 = _slicedToArray(_leaf$position3, 2);

        node = _leaf$position4[0];
        offset = _leaf$position4[1];

        range.setEnd(node, offset);
        return range.getBoundingClientRect();
      } else {
        var side = 'left';
        var rect = void 0;
        if (node instanceof Text) {
          if (offset < node.data.length) {
            range.setStart(node, offset);
            range.setEnd(node, offset + 1);
          } else {
            range.setStart(node, offset - 1);
            range.setEnd(node, offset);
            side = 'right';
          }
          rect = range.getBoundingClientRect();
        } else {
          rect = leaf.domNode.getBoundingClientRect();
          if (offset > 0) side = 'right';
        }
        return {
          bottom: rect.top + rect.height,
          height: rect.height,
          left: rect[side],
          right: rect[side],
          top: rect.top,
          width: 0
        };
      }
    }
  }, {
    key: 'getNativeRange',
    value: function getNativeRange() {
      var selection = document.getSelection();
      if (selection == null || selection.rangeCount <= 0) return null;
      var nativeRange = selection.getRangeAt(0);
      if (nativeRange == null) return null;
      var range = this.normalizeNative(nativeRange);
      debug.info('getNativeRange', range);
      return range;
    }
  }, {
    key: 'getRange',
    value: function getRange() {
      var normalized = this.getNativeRange();
      if (normalized == null) return [null, null];
      var range = this.normalizedToRange(normalized);
      return [range, normalized];
    }
  }, {
    key: 'hasFocus',
    value: function hasFocus() {
      return document.activeElement === this.root;
    }
  }, {
    key: 'normalizedToRange',
    value: function normalizedToRange(range) {
      var _this4 = this;

      var positions = [[range.start.node, range.start.offset]];
      if (!range.native.collapsed) {
        positions.push([range.end.node, range.end.offset]);
      }
      var indexes = positions.map(function (position) {
        var _position = _slicedToArray(position, 2),
            node = _position[0],
            offset = _position[1];

        var blot = _parchment2.default.find(node, true);
        var index = blot.offset(_this4.scroll);
        if (offset === 0) {
          return index;
        } else if (blot instanceof _parchment2.default.Container) {
          return index + blot.length();
        } else {
          return index + blot.index(node, offset);
        }
      });
      var end = Math.min(Math.max.apply(Math, _toConsumableArray(indexes)), this.scroll.length() - 1);
      var start = Math.min.apply(Math, [end].concat(_toConsumableArray(indexes)));
      return new Range(start, end - start);
    }
  }, {
    key: 'normalizeNative',
    value: function normalizeNative(nativeRange) {
      if (!contains(this.root, nativeRange.startContainer) || !nativeRange.collapsed && !contains(this.root, nativeRange.endContainer)) {
        return null;
      }
      var range = {
        start: { node: nativeRange.startContainer, offset: nativeRange.startOffset },
        end: { node: nativeRange.endContainer, offset: nativeRange.endOffset },
        native: nativeRange
      };
      [range.start, range.end].forEach(function (position) {
        var node = position.node,
            offset = position.offset;
        while (!(node instanceof Text) && node.childNodes.length > 0) {
          if (node.childNodes.length > offset) {
            node = node.childNodes[offset];
            offset = 0;
          } else if (node.childNodes.length === offset) {
            node = node.lastChild;
            offset = node instanceof Text ? node.data.length : node.childNodes.length + 1;
          } else {
            break;
          }
        }
        position.node = node, position.offset = offset;
      });
      return range;
    }
  }, {
    key: 'rangeToNative',
    value: function rangeToNative(range) {
      var _this5 = this;

      var indexes = range.collapsed ? [range.index] : [range.index, range.index + range.length];
      var args = [];
      var scrollLength = this.scroll.length();
      indexes.forEach(function (index, i) {
        index = Math.min(scrollLength - 1, index);
        var node = void 0,
            _scroll$leaf5 = _this5.scroll.leaf(index),
            _scroll$leaf6 = _slicedToArray(_scroll$leaf5, 2),
            leaf = _scroll$leaf6[0],
            offset = _scroll$leaf6[1];
        var _leaf$position5 = leaf.position(offset, i !== 0);

        var _leaf$position6 = _slicedToArray(_leaf$position5, 2);

        node = _leaf$position6[0];
        offset = _leaf$position6[1];

        args.push(node, offset);
      });
      if (args.length < 2) {
        args = args.concat(args);
      }
      return args;
    }
  }, {
    key: 'scrollIntoView',
    value: function scrollIntoView(scrollingContainer) {
      var range = this.lastRange;
      if (range == null) return;
      var bounds = this.getBounds(range.index, range.length);
      if (bounds == null) return;
      var limit = this.scroll.length() - 1;

      var _scroll$line = this.scroll.line(Math.min(range.index, limit)),
          _scroll$line2 = _slicedToArray(_scroll$line, 1),
          first = _scroll$line2[0];

      var last = first;
      if (range.length > 0) {
        var _scroll$line3 = this.scroll.line(Math.min(range.index + range.length, limit));

        var _scroll$line4 = _slicedToArray(_scroll$line3, 1);

        last = _scroll$line4[0];
      }
      if (first == null || last == null) return;
      var scrollBounds = scrollingContainer.getBoundingClientRect();
      if (bounds.top < scrollBounds.top) {
        scrollingContainer.scrollTop -= scrollBounds.top - bounds.top;
      } else if (bounds.bottom > scrollBounds.bottom) {
        scrollingContainer.scrollTop += bounds.bottom - scrollBounds.bottom;
      }
    }
  }, {
    key: 'setNativeRange',
    value: function setNativeRange(startNode, startOffset) {
      var endNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : startNode;
      var endOffset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : startOffset;
      var force = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

      debug.info('setNativeRange', startNode, startOffset, endNode, endOffset);
      if (startNode != null && (this.root.parentNode == null || startNode.parentNode == null || endNode.parentNode == null)) {
        return;
      }
      var selection = document.getSelection();
      if (selection == null) return;
      if (startNode != null) {
        if (!this.hasFocus()) this.root.focus();
        var native = (this.getNativeRange() || {}).native;
        if (native == null || force || startNode !== native.startContainer || startOffset !== native.startOffset || endNode !== native.endContainer || endOffset !== native.endOffset) {

          if (startNode.tagName == "BR") {
            startOffset = [].indexOf.call(startNode.parentNode.childNodes, startNode);
            startNode = startNode.parentNode;
          }
          if (endNode.tagName == "BR") {
            endOffset = [].indexOf.call(endNode.parentNode.childNodes, endNode);
            endNode = endNode.parentNode;
          }
          var range = document.createRange();
          range.setStart(startNode, startOffset);
          range.setEnd(endNode, endOffset);
          selection.removeAllRanges();
          selection.addRange(range);
        }
      } else {
        selection.removeAllRanges();
        this.root.blur();
        document.body.focus(); // root.blur() not enough on IE11+Travis+SauceLabs (but not local VMs)
      }
    }
  }, {
    key: 'setRange',
    value: function setRange(range) {
      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _emitter4.default.sources.API;

      if (typeof force === 'string') {
        source = force;
        force = false;
      }
      debug.info('setRange', range);
      if (range != null) {
        var args = this.rangeToNative(range);
        this.setNativeRange.apply(this, _toConsumableArray(args).concat([force]));
      } else {
        this.setNativeRange(null);
      }
      this.update(source);
    }
  }, {
    key: 'update',
    value: function update() {
      var source = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _emitter4.default.sources.USER;

      var oldRange = this.lastRange;

      var _getRange = this.getRange(),
          _getRange2 = _slicedToArray(_getRange, 2),
          lastRange = _getRange2[0],
          nativeRange = _getRange2[1];

      this.lastRange = lastRange;
      if (this.lastRange != null) {
        this.savedRange = this.lastRange;
      }
      if (!(0, _deepEqual2.default)(oldRange, this.lastRange)) {
        var _emitter;

        if (!this.composing && nativeRange != null && nativeRange.native.collapsed && nativeRange.start.node !== this.cursor.textNode) {
          this.cursor.restore();
        }
        var args = [_emitter4.default.events.SELECTION_CHANGE, (0, _clone2.default)(this.lastRange), (0, _clone2.default)(oldRange), source];
        (_emitter = this.emitter).emit.apply(_emitter, [_emitter4.default.events.EDITOR_CHANGE].concat(args));
        if (source !== _emitter4.default.sources.SILENT) {
          var _emitter2;

          (_emitter2 = this.emitter).emit.apply(_emitter2, args);
        }
      }
    }
  }]);

  return Selection;
}();

function contains(parent, descendant) {
  try {
    // Firefox inserts inaccessible nodes around video elements
    descendant.parentNode;
  } catch (e) {
    return false;
  }
  // IE11 has bug with Text nodes
  // https://connect.microsoft.com/IE/feedback/details/780874/node-contains-is-incorrect
  if (descendant instanceof Text) {
    descendant = descendant.parentNode;
  }
  return parent.contains(descendant);
}

exports.Range = Range;
exports.default = Selection;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Break = function (_Parchment$Embed) {
  _inherits(Break, _Parchment$Embed);

  function Break() {
    _classCallCheck(this, Break);

    return _possibleConstructorReturn(this, (Break.__proto__ || Object.getPrototypeOf(Break)).apply(this, arguments));
  }

  _createClass(Break, [{
    key: 'insertInto',
    value: function insertInto(parent, ref) {
      if (parent.children.length === 0) {
        _get(Break.prototype.__proto__ || Object.getPrototypeOf(Break.prototype), 'insertInto', this).call(this, parent, ref);
      } else {
        this.remove();
      }
    }
  }, {
    key: 'length',
    value: function length() {
      return 0;
    }
  }, {
    key: 'value',
    value: function value() {
      return '';
    }
  }], [{
    key: 'value',
    value: function value() {
      return undefined;
    }
  }]);

  return Break;
}(_parchment2.default.Embed);

Break.blotName = 'break';
Break.tagName = 'BR';

exports.default = Break;

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var linked_list_1 = __webpack_require__(44);
var shadow_1 = __webpack_require__(30);
var Registry = __webpack_require__(1);
var ContainerBlot = /** @class */ (function (_super) {
    __extends(ContainerBlot, _super);
    function ContainerBlot(domNode) {
        var _this = _super.call(this, domNode) || this;
        _this.build();
        return _this;
    }
    ContainerBlot.prototype.appendChild = function (other) {
        this.insertBefore(other);
    };
    ContainerBlot.prototype.attach = function () {
        _super.prototype.attach.call(this);
        this.children.forEach(function (child) {
            child.attach();
        });
    };
    ContainerBlot.prototype.build = function () {
        var _this = this;
        this.children = new linked_list_1.default();
        // Need to be reversed for if DOM nodes already in order
        [].slice
            .call(this.domNode.childNodes)
            .reverse()
            .forEach(function (node) {
            try {
                var child = makeBlot(node);
                _this.insertBefore(child, _this.children.head || undefined);
            }
            catch (err) {
                if (err instanceof Registry.ParchmentError)
                    return;
                else
                    throw err;
            }
        });
    };
    ContainerBlot.prototype.deleteAt = function (index, length) {
        if (index === 0 && length === this.length()) {
            return this.remove();
        }
        this.children.forEachAt(index, length, function (child, offset, length) {
            child.deleteAt(offset, length);
        });
    };
    ContainerBlot.prototype.descendant = function (criteria, index) {
        var _a = this.children.find(index), child = _a[0], offset = _a[1];
        if ((criteria.blotName == null && criteria(child)) ||
            (criteria.blotName != null && child instanceof criteria)) {
            return [child, offset];
        }
        else if (child instanceof ContainerBlot) {
            return child.descendant(criteria, offset);
        }
        else {
            return [null, -1];
        }
    };
    ContainerBlot.prototype.descendants = function (criteria, index, length) {
        if (index === void 0) { index = 0; }
        if (length === void 0) { length = Number.MAX_VALUE; }
        var descendants = [];
        var lengthLeft = length;
        this.children.forEachAt(index, length, function (child, index, length) {
            if ((criteria.blotName == null && criteria(child)) ||
                (criteria.blotName != null && child instanceof criteria)) {
                descendants.push(child);
            }
            if (child instanceof ContainerBlot) {
                descendants = descendants.concat(child.descendants(criteria, index, lengthLeft));
            }
            lengthLeft -= length;
        });
        return descendants;
    };
    ContainerBlot.prototype.detach = function () {
        this.children.forEach(function (child) {
            child.detach();
        });
        _super.prototype.detach.call(this);
    };
    ContainerBlot.prototype.formatAt = function (index, length, name, value) {
        this.children.forEachAt(index, length, function (child, offset, length) {
            child.formatAt(offset, length, name, value);
        });
    };
    ContainerBlot.prototype.insertAt = function (index, value, def) {
        var _a = this.children.find(index), child = _a[0], offset = _a[1];
        if (child) {
            child.insertAt(offset, value, def);
        }
        else {
            var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
            this.appendChild(blot);
        }
    };
    ContainerBlot.prototype.insertBefore = function (childBlot, refBlot) {
        if (this.statics.allowedChildren != null &&
            !this.statics.allowedChildren.some(function (child) {
                return childBlot instanceof child;
            })) {
            throw new Registry.ParchmentError("Cannot insert " + childBlot.statics.blotName + " into " + this.statics.blotName);
        }
        childBlot.insertInto(this, refBlot);
    };
    ContainerBlot.prototype.length = function () {
        return this.children.reduce(function (memo, child) {
            return memo + child.length();
        }, 0);
    };
    ContainerBlot.prototype.moveChildren = function (targetParent, refNode) {
        this.children.forEach(function (child) {
            targetParent.insertBefore(child, refNode);
        });
    };
    ContainerBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        if (this.children.length === 0) {
            if (this.statics.defaultChild != null) {
                var child = Registry.create(this.statics.defaultChild);
                this.appendChild(child);
                child.optimize(context);
            }
            else {
                this.remove();
            }
        }
    };
    ContainerBlot.prototype.path = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        var _a = this.children.find(index, inclusive), child = _a[0], offset = _a[1];
        var position = [[this, index]];
        if (child instanceof ContainerBlot) {
            return position.concat(child.path(offset, inclusive));
        }
        else if (child != null) {
            position.push([child, offset]);
        }
        return position;
    };
    ContainerBlot.prototype.removeChild = function (child) {
        this.children.remove(child);
    };
    ContainerBlot.prototype.replace = function (target) {
        if (target instanceof ContainerBlot) {
            target.moveChildren(this);
        }
        _super.prototype.replace.call(this, target);
    };
    ContainerBlot.prototype.split = function (index, force) {
        if (force === void 0) { force = false; }
        if (!force) {
            if (index === 0)
                return this;
            if (index === this.length())
                return this.next;
        }
        var after = this.clone();
        this.parent.insertBefore(after, this.next);
        this.children.forEachAt(index, this.length(), function (child, offset, length) {
            child = child.split(offset, force);
            after.appendChild(child);
        });
        return after;
    };
    ContainerBlot.prototype.unwrap = function () {
        this.moveChildren(this.parent, this.next);
        this.remove();
    };
    ContainerBlot.prototype.update = function (mutations, context) {
        var _this = this;
        var addedNodes = [];
        var removedNodes = [];
        mutations.forEach(function (mutation) {
            if (mutation.target === _this.domNode && mutation.type === 'childList') {
                addedNodes.push.apply(addedNodes, mutation.addedNodes);
                removedNodes.push.apply(removedNodes, mutation.removedNodes);
            }
        });
        removedNodes.forEach(function (node) {
            // Check node has actually been removed
            // One exception is Chrome does not immediately remove IFRAMEs
            // from DOM but MutationRecord is correct in its reported removal
            if (node.parentNode != null &&
                // @ts-ignore
                node.tagName !== 'IFRAME' &&
                document.body.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
                return;
            }
            var blot = Registry.find(node);
            if (blot == null)
                return;
            if (blot.domNode.parentNode == null || blot.domNode.parentNode === _this.domNode) {
                blot.detach();
            }
        });
        addedNodes
            .filter(function (node) {
            return node.parentNode == _this.domNode;
        })
            .sort(function (a, b) {
            if (a === b)
                return 0;
            if (a.compareDocumentPosition(b) & Node.DOCUMENT_POSITION_FOLLOWING) {
                return 1;
            }
            return -1;
        })
            .forEach(function (node) {
            var refBlot = null;
            if (node.nextSibling != null) {
                refBlot = Registry.find(node.nextSibling);
            }
            var blot = makeBlot(node);
            if (blot.next != refBlot || blot.next == null) {
                if (blot.parent != null) {
                    blot.parent.removeChild(_this);
                }
                _this.insertBefore(blot, refBlot || undefined);
            }
        });
    };
    return ContainerBlot;
}(shadow_1.default));
function makeBlot(node) {
    var blot = Registry.find(node);
    if (blot == null) {
        try {
            blot = Registry.create(node);
        }
        catch (e) {
            blot = Registry.create(Registry.Scope.INLINE);
            [].slice.call(node.childNodes).forEach(function (child) {
                // @ts-ignore
                blot.domNode.appendChild(child);
            });
            if (node.parentNode) {
                node.parentNode.replaceChild(blot.domNode, node);
            }
            blot.attach();
        }
    }
    return blot;
}
exports.default = ContainerBlot;


/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __webpack_require__(12);
var store_1 = __webpack_require__(31);
var container_1 = __webpack_require__(17);
var Registry = __webpack_require__(1);
var FormatBlot = /** @class */ (function (_super) {
    __extends(FormatBlot, _super);
    function FormatBlot(domNode) {
        var _this = _super.call(this, domNode) || this;
        _this.attributes = new store_1.default(_this.domNode);
        return _this;
    }
    FormatBlot.formats = function (domNode) {
        if (typeof this.tagName === 'string') {
            return true;
        }
        else if (Array.isArray(this.tagName)) {
            return domNode.tagName.toLowerCase();
        }
        return undefined;
    };
    FormatBlot.prototype.format = function (name, value) {
        var format = Registry.query(name);
        if (format instanceof attributor_1.default) {
            this.attributes.attribute(format, value);
        }
        else if (value) {
            if (format != null && (name !== this.statics.blotName || this.formats()[name] !== value)) {
                this.replaceWith(name, value);
            }
        }
    };
    FormatBlot.prototype.formats = function () {
        var formats = this.attributes.values();
        var format = this.statics.formats(this.domNode);
        if (format != null) {
            formats[this.statics.blotName] = format;
        }
        return formats;
    };
    FormatBlot.prototype.replaceWith = function (name, value) {
        var replacement = _super.prototype.replaceWith.call(this, name, value);
        this.attributes.copy(replacement);
        return replacement;
    };
    FormatBlot.prototype.update = function (mutations, context) {
        var _this = this;
        _super.prototype.update.call(this, mutations, context);
        if (mutations.some(function (mutation) {
            return mutation.target === _this.domNode && mutation.type === 'attributes';
        })) {
            this.attributes.build();
        }
    };
    FormatBlot.prototype.wrap = function (name, value) {
        var wrapper = _super.prototype.wrap.call(this, name, value);
        if (wrapper instanceof FormatBlot && wrapper.statics.scope === this.statics.scope) {
            this.attributes.move(wrapper);
        }
        return wrapper;
    };
    return FormatBlot;
}(container_1.default));
exports.default = FormatBlot;


/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var shadow_1 = __webpack_require__(30);
var Registry = __webpack_require__(1);
var LeafBlot = /** @class */ (function (_super) {
    __extends(LeafBlot, _super);
    function LeafBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    LeafBlot.value = function (domNode) {
        return true;
    };
    LeafBlot.prototype.index = function (node, offset) {
        if (this.domNode === node ||
            this.domNode.compareDocumentPosition(node) & Node.DOCUMENT_POSITION_CONTAINED_BY) {
            return Math.min(offset, 1);
        }
        return -1;
    };
    LeafBlot.prototype.position = function (index, inclusive) {
        var offset = [].indexOf.call(this.parent.domNode.childNodes, this.domNode);
        if (index > 0)
            offset += 1;
        return [this.parent.domNode, offset];
    };
    LeafBlot.prototype.value = function () {
        var _a;
        return _a = {}, _a[this.statics.blotName] = this.statics.value(this.domNode) || true, _a;
    };
    LeafBlot.scope = Registry.Scope.INLINE_BLOT;
    return LeafBlot;
}(shadow_1.default));
exports.default = LeafBlot;


/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {

var equal = __webpack_require__(11);
var extend = __webpack_require__(3);


var lib = {
  attributes: {
    compose: function (a, b, keepNull) {
      if (typeof a !== 'object') a = {};
      if (typeof b !== 'object') b = {};
      var attributes = extend(true, {}, b);
      if (!keepNull) {
        attributes = Object.keys(attributes).reduce(function (copy, key) {
          if (attributes[key] != null) {
            copy[key] = attributes[key];
          }
          return copy;
        }, {});
      }
      for (var key in a) {
        if (a[key] !== undefined && b[key] === undefined) {
          attributes[key] = a[key];
        }
      }
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    },

    diff: function(a, b) {
      if (typeof a !== 'object') a = {};
      if (typeof b !== 'object') b = {};
      var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function (attributes, key) {
        if (!equal(a[key], b[key])) {
          attributes[key] = b[key] === undefined ? null : b[key];
        }
        return attributes;
      }, {});
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    },

    transform: function (a, b, priority) {
      if (typeof a !== 'object') return b;
      if (typeof b !== 'object') return undefined;
      if (!priority) return b;  // b simply overwrites us without priority
      var attributes = Object.keys(b).reduce(function (attributes, key) {
        if (a[key] === undefined) attributes[key] = b[key];  // null is a valid value
        return attributes;
      }, {});
      return Object.keys(attributes).length > 0 ? attributes : undefined;
    }
  },

  iterator: function (ops) {
    return new Iterator(ops);
  },

  length: function (op) {
    if (typeof op['delete'] === 'number') {
      return op['delete'];
    } else if (typeof op.retain === 'number') {
      return op.retain;
    } else {
      return typeof op.insert === 'string' ? op.insert.length : 1;
    }
  }
};


function Iterator(ops) {
  this.ops = ops;
  this.index = 0;
  this.offset = 0;
};

Iterator.prototype.hasNext = function () {
  return this.peekLength() < Infinity;
};

Iterator.prototype.next = function (length) {
  if (!length) length = Infinity;
  var nextOp = this.ops[this.index];
  if (nextOp) {
    var offset = this.offset;
    var opLength = lib.length(nextOp)
    if (length >= opLength - offset) {
      length = opLength - offset;
      this.index += 1;
      this.offset = 0;
    } else {
      this.offset += length;
    }
    if (typeof nextOp['delete'] === 'number') {
      return { 'delete': length };
    } else {
      var retOp = {};
      if (nextOp.attributes) {
        retOp.attributes = nextOp.attributes;
      }
      if (typeof nextOp.retain === 'number') {
        retOp.retain = length;
      } else if (typeof nextOp.insert === 'string') {
        retOp.insert = nextOp.insert.substr(offset, length);
      } else {
        // offset should === 0, length should === 1
        retOp.insert = nextOp.insert;
      }
      return retOp;
    }
  } else {
    return { retain: Infinity };
  }
};

Iterator.prototype.peek = function () {
  return this.ops[this.index];
};

Iterator.prototype.peekLength = function () {
  if (this.ops[this.index]) {
    // Should never return 0 if our index is being managed correctly
    return lib.length(this.ops[this.index]) - this.offset;
  } else {
    return Infinity;
  }
};

Iterator.prototype.peekType = function () {
  if (this.ops[this.index]) {
    if (typeof this.ops[this.index]['delete'] === 'number') {
      return 'delete';
    } else if (typeof this.ops[this.index].retain === 'number') {
      return 'retain';
    } else {
      return 'insert';
    }
  }
  return 'retain';
};

Iterator.prototype.rest = function () {
  if (!this.hasNext()) {
    return [];
  } else if (this.offset === 0) {
    return this.ops.slice(this.index);
  } else {
    var offset = this.offset;
    var index = this.index;
    var next = this.next();
    var rest = this.ops.slice(this.index);
    this.offset = offset;
    this.index = index;
    return [next].concat(rest);
  }
};


module.exports = lib;


/***/ }),
/* 21 */
/***/ (function(module, exports) {

var clone = (function() {
'use strict';

function _instanceof(obj, type) {
  return type != null && obj instanceof type;
}

var nativeMap;
try {
  nativeMap = Map;
} catch(_) {
  // maybe a reference error because no \`Map\`. Give it a dummy value that no
  // value will ever be an instanceof.
  nativeMap = function() {};
}

var nativeSet;
try {
  nativeSet = Set;
} catch(_) {
  nativeSet = function() {};
}

var nativePromise;
try {
  nativePromise = Promise;
} catch(_) {
  nativePromise = function() {};
}

/**
 * Clones (copies) an Object using deep copying.
 *
 * This function supports circular references by default, but if you are certain
 * there are no circular references in your object, you can save some CPU time
 * by calling clone(obj, false).
 *
 * Caution: if \`circular\` is false and \`parent\` contains circular references,
 * your program may enter an infinite loop and crash.
 *
 * @param \`parent\` - the object to be cloned
 * @param \`circular\` - set to true if the object to be cloned may contain
 *    circular references. (optional - true by default)
 * @param \`depth\` - set to a number if the object is only to be cloned to
 *    a particular depth. (optional - defaults to Infinity)
 * @param \`prototype\` - sets the prototype to be used when cloning an object.
 *    (optional - defaults to parent prototype).
 * @param \`includeNonEnumerable\` - set to true if the non-enumerable properties
 *    should be cloned as well. Non-enumerable properties on the prototype
 *    chain will be ignored. (optional - false by default)
*/
function clone(parent, circular, depth, prototype, includeNonEnumerable) {
  if (typeof circular === 'object') {
    depth = circular.depth;
    prototype = circular.prototype;
    includeNonEnumerable = circular.includeNonEnumerable;
    circular = circular.circular;
  }
  // maintain two arrays for circular references, where corresponding parents
  // and children have the same index
  var allParents = [];
  var allChildren = [];

  var useBuffer = typeof Buffer != 'undefined';

  if (typeof circular == 'undefined')
    circular = true;

  if (typeof depth == 'undefined')
    depth = Infinity;

  // recurse this function so we don't reset allParents and allChildren
  function _clone(parent, depth) {
    // cloning null always returns null
    if (parent === null)
      return null;

    if (depth === 0)
      return parent;

    var child;
    var proto;
    if (typeof parent != 'object') {
      return parent;
    }

    if (_instanceof(parent, nativeMap)) {
      child = new nativeMap();
    } else if (_instanceof(parent, nativeSet)) {
      child = new nativeSet();
    } else if (_instanceof(parent, nativePromise)) {
      child = new nativePromise(function (resolve, reject) {
        parent.then(function(value) {
          resolve(_clone(value, depth - 1));
        }, function(err) {
          reject(_clone(err, depth - 1));
        });
      });
    } else if (clone.__isArray(parent)) {
      child = [];
    } else if (clone.__isRegExp(parent)) {
      child = new RegExp(parent.source, __getRegExpFlags(parent));
      if (parent.lastIndex) child.lastIndex = parent.lastIndex;
    } else if (clone.__isDate(parent)) {
      child = new Date(parent.getTime());
    } else if (useBuffer && Buffer.isBuffer(parent)) {
      if (Buffer.allocUnsafe) {
        // Node.js >= 4.5.0
        child = Buffer.allocUnsafe(parent.length);
      } else {
        // Older Node.js versions
        child = new Buffer(parent.length);
      }
      parent.copy(child);
      return child;
    } else if (_instanceof(parent, Error)) {
      child = Object.create(parent);
    } else {
      if (typeof prototype == 'undefined') {
        proto = Object.getPrototypeOf(parent);
        child = Object.create(proto);
      }
      else {
        child = Object.create(prototype);
        proto = prototype;
      }
    }

    if (circular) {
      var index = allParents.indexOf(parent);

      if (index != -1) {
        return allChildren[index];
      }
      allParents.push(parent);
      allChildren.push(child);
    }

    if (_instanceof(parent, nativeMap)) {
      parent.forEach(function(value, key) {
        var keyChild = _clone(key, depth - 1);
        var valueChild = _clone(value, depth - 1);
        child.set(keyChild, valueChild);
      });
    }
    if (_instanceof(parent, nativeSet)) {
      parent.forEach(function(value) {
        var entryChild = _clone(value, depth - 1);
        child.add(entryChild);
      });
    }

    for (var i in parent) {
      var attrs;
      if (proto) {
        attrs = Object.getOwnPropertyDescriptor(proto, i);
      }

      if (attrs && attrs.set == null) {
        continue;
      }
      child[i] = _clone(parent[i], depth - 1);
    }

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(parent);
      for (var i = 0; i < symbols.length; i++) {
        // Don't need to worry about cloning a symbol because it is a primitive,
        // like a number or string.
        var symbol = symbols[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, symbol);
        if (descriptor && !descriptor.enumerable && !includeNonEnumerable) {
          continue;
        }
        child[symbol] = _clone(parent[symbol], depth - 1);
        if (!descriptor.enumerable) {
          Object.defineProperty(child, symbol, {
            enumerable: false
          });
        }
      }
    }

    if (includeNonEnumerable) {
      var allPropertyNames = Object.getOwnPropertyNames(parent);
      for (var i = 0; i < allPropertyNames.length; i++) {
        var propertyName = allPropertyNames[i];
        var descriptor = Object.getOwnPropertyDescriptor(parent, propertyName);
        if (descriptor && descriptor.enumerable) {
          continue;
        }
        child[propertyName] = _clone(parent[propertyName], depth - 1);
        Object.defineProperty(child, propertyName, {
          enumerable: false
        });
      }
    }

    return child;
  }

  return _clone(parent, depth);
}

/**
 * Simple flat clone using prototype, accepts only objects, usefull for property
 * override on FLAT configuration object (no nested props).
 *
 * USE WITH CAUTION! This may not behave as you wish if you do not know how this
 * works.
 */
clone.clonePrototype = function clonePrototype(parent) {
  if (parent === null)
    return null;

  var c = function () {};
  c.prototype = parent;
  return new c();
};

// private utility functions

function __objToStr(o) {
  return Object.prototype.toString.call(o);
}
clone.__objToStr = __objToStr;

function __isDate(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Date]';
}
clone.__isDate = __isDate;

function __isArray(o) {
  return typeof o === 'object' && __objToStr(o) === '[object Array]';
}
clone.__isArray = __isArray;

function __isRegExp(o) {
  return typeof o === 'object' && __objToStr(o) === '[object RegExp]';
}
clone.__isRegExp = __isRegExp;

function __getRegExpFlags(re) {
  var flags = '';
  if (re.global) flags += 'g';
  if (re.ignoreCase) flags += 'i';
  if (re.multiline) flags += 'm';
  return flags;
}
clone.__getRegExpFlags = __getRegExpFlags;

return clone;
})();

if (typeof module === 'object' && module.exports) {
  module.exports = clone;
}


/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _emitter = __webpack_require__(8);

var _emitter2 = _interopRequireDefault(_emitter);

var _block = __webpack_require__(4);

var _block2 = _interopRequireDefault(_block);

var _break = __webpack_require__(16);

var _break2 = _interopRequireDefault(_break);

var _code = __webpack_require__(13);

var _code2 = _interopRequireDefault(_code);

var _container = __webpack_require__(25);

var _container2 = _interopRequireDefault(_container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function isLine(blot) {
  return blot instanceof _block2.default || blot instanceof _block.BlockEmbed;
}

var Scroll = function (_Parchment$Scroll) {
  _inherits(Scroll, _Parchment$Scroll);

  function Scroll(domNode, config) {
    _classCallCheck(this, Scroll);

    var _this = _possibleConstructorReturn(this, (Scroll.__proto__ || Object.getPrototypeOf(Scroll)).call(this, domNode));

    _this.emitter = config.emitter;
    if (Array.isArray(config.whitelist)) {
      _this.whitelist = config.whitelist.reduce(function (whitelist, format) {
        whitelist[format] = true;
        return whitelist;
      }, {});
    }
    // Some reason fixes composition issues with character languages in Windows/Chrome, Safari
    _this.domNode.addEventListener('DOMNodeInserted', function () {});
    _this.optimize();
    _this.enable();
    return _this;
  }

  _createClass(Scroll, [{
    key: 'batchStart',
    value: function batchStart() {
      this.batch = true;
    }
  }, {
    key: 'batchEnd',
    value: function batchEnd() {
      this.batch = false;
      this.optimize();
    }
  }, {
    key: 'deleteAt',
    value: function deleteAt(index, length) {
      var _line = this.line(index),
          _line2 = _slicedToArray(_line, 2),
          first = _line2[0],
          offset = _line2[1];

      var _line3 = this.line(index + length),
          _line4 = _slicedToArray(_line3, 1),
          last = _line4[0];

      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'deleteAt', this).call(this, index, length);
      if (last != null && first !== last && offset > 0) {
        if (first instanceof _block.BlockEmbed || last instanceof _block.BlockEmbed) {
          this.optimize();
          return;
        }
        if (first instanceof _code2.default) {
          var newlineIndex = first.newlineIndex(first.length(), true);
          if (newlineIndex > -1) {
            first = first.split(newlineIndex + 1);
            if (first === last) {
              this.optimize();
              return;
            }
          }
        } else if (last instanceof _code2.default) {
          var _newlineIndex = last.newlineIndex(0);
          if (_newlineIndex > -1) {
            last.split(_newlineIndex + 1);
          }
        }
        var ref = last.children.head instanceof _break2.default ? null : last.children.head;
        first.moveChildren(last, ref);
        first.remove();
      }
      this.optimize();
    }
  }, {
    key: 'enable',
    value: function enable() {
      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      this.domNode.setAttribute('contenteditable', enabled);
    }
  }, {
    key: 'formatAt',
    value: function formatAt(index, length, format, value) {
      if (this.whitelist != null && !this.whitelist[format]) return;
      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'formatAt', this).call(this, index, length, format, value);
      this.optimize();
    }
  }, {
    key: 'insertAt',
    value: function insertAt(index, value, def) {
      if (def != null && this.whitelist != null && !this.whitelist[value]) return;
      if (index >= this.length()) {
        if (def == null || _parchment2.default.query(value, _parchment2.default.Scope.BLOCK) == null) {
          var blot = _parchment2.default.create(this.statics.defaultChild);
          this.appendChild(blot);
          if (def == null && value.endsWith('\\n')) {
            value = value.slice(0, -1);
          }
          blot.insertAt(0, value, def);
        } else {
          var embed = _parchment2.default.create(value, def);
          this.appendChild(embed);
        }
      } else {
        _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertAt', this).call(this, index, value, def);
      }
      this.optimize();
    }
  }, {
    key: 'insertBefore',
    value: function insertBefore(blot, ref) {
      if (blot.statics.scope === _parchment2.default.Scope.INLINE_BLOT) {
        var wrapper = _parchment2.default.create(this.statics.defaultChild);
        wrapper.appendChild(blot);
        blot = wrapper;
      }
      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'insertBefore', this).call(this, blot, ref);
    }
  }, {
    key: 'leaf',
    value: function leaf(index) {
      return this.path(index).pop() || [null, -1];
    }
  }, {
    key: 'line',
    value: function line(index) {
      if (index === this.length()) {
        return this.line(index - 1);
      }
      return this.descendant(isLine, index);
    }
  }, {
    key: 'lines',
    value: function lines() {
      var index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      var length = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.MAX_VALUE;

      var getLines = function getLines(blot, index, length) {
        var lines = [],
            lengthLeft = length;
        blot.children.forEachAt(index, length, function (child, index, length) {
          if (isLine(child)) {
            lines.push(child);
          } else if (child instanceof _parchment2.default.Container) {
            lines = lines.concat(getLines(child, index, lengthLeft));
          }
          lengthLeft -= length;
        });
        return lines;
      };
      return getLines(this, index, length);
    }
  }, {
    key: 'optimize',
    value: function optimize() {
      var mutations = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (this.batch === true) return;
      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'optimize', this).call(this, mutations, context);
      if (mutations.length > 0) {
        this.emitter.emit(_emitter2.default.events.SCROLL_OPTIMIZE, mutations, context);
      }
    }
  }, {
    key: 'path',
    value: function path(index) {
      return _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'path', this).call(this, index).slice(1); // Exclude self
    }
  }, {
    key: 'update',
    value: function update(mutations) {
      if (this.batch === true) return;
      var source = _emitter2.default.sources.USER;
      if (typeof mutations === 'string') {
        source = mutations;
      }
      if (!Array.isArray(mutations)) {
        mutations = this.observer.takeRecords();
      }
      if (mutations.length > 0) {
        this.emitter.emit(_emitter2.default.events.SCROLL_BEFORE_UPDATE, source, mutations);
      }
      _get(Scroll.prototype.__proto__ || Object.getPrototypeOf(Scroll.prototype), 'update', this).call(this, mutations.concat([])); // pass copy
      if (mutations.length > 0) {
        this.emitter.emit(_emitter2.default.events.SCROLL_UPDATE, source, mutations);
      }
    }
  }]);

  return Scroll;
}(_parchment2.default.Scroll);

Scroll.blotName = 'scroll';
Scroll.className = 'ql-editor';
Scroll.tagName = 'DIV';
Scroll.defaultChild = 'block';
Scroll.allowedChildren = [_block2.default, _block.BlockEmbed, _container2.default];

exports.default = Scroll;

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SHORTKEY = exports.default = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _clone = __webpack_require__(21);

var _clone2 = _interopRequireDefault(_clone);

var _deepEqual = __webpack_require__(11);

var _deepEqual2 = _interopRequireDefault(_deepEqual);

var _extend = __webpack_require__(3);

var _extend2 = _interopRequireDefault(_extend);

var _quillDelta = __webpack_require__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _op = __webpack_require__(20);

var _op2 = _interopRequireDefault(_op);

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __webpack_require__(5);

var _quill2 = _interopRequireDefault(_quill);

var _logger = __webpack_require__(10);

var _logger2 = _interopRequireDefault(_logger);

var _module = __webpack_require__(9);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = (0, _logger2.default)('quill:keyboard');

var SHORTKEY = /Mac/i.test(navigator.platform) ? 'metaKey' : 'ctrlKey';

var Keyboard = function (_Module) {
  _inherits(Keyboard, _Module);

  _createClass(Keyboard, null, [{
    key: 'match',
    value: function match(evt, binding) {
      binding = normalize(binding);
      if (['altKey', 'ctrlKey', 'metaKey', 'shiftKey'].some(function (key) {
        return !!binding[key] !== evt[key] && binding[key] !== null;
      })) {
        return false;
      }
      return binding.key === (evt.which || evt.keyCode);
    }
  }]);

  function Keyboard(quill, options) {
    _classCallCheck(this, Keyboard);

    var _this = _possibleConstructorReturn(this, (Keyboard.__proto__ || Object.getPrototypeOf(Keyboard)).call(this, quill, options));

    _this.bindings = {};
    Object.keys(_this.options.bindings).forEach(function (name) {
      if (name === 'list autofill' && quill.scroll.whitelist != null && !quill.scroll.whitelist['list']) {
        return;
      }
      if (_this.options.bindings[name]) {
        _this.addBinding(_this.options.bindings[name]);
      }
    });
    _this.addBinding({ key: Keyboard.keys.ENTER, shiftKey: null }, handleEnter);
    _this.addBinding({ key: Keyboard.keys.ENTER, metaKey: null, ctrlKey: null, altKey: null }, function () {});
    if (/Firefox/i.test(navigator.userAgent)) {
      // Need to handle delete and backspace for Firefox in the general case #1171
      _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: true }, handleBackspace);
      _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: true }, handleDelete);
    } else {
      _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: true, prefix: /^.?$/ }, handleBackspace);
      _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: true, suffix: /^.?$/ }, handleDelete);
    }
    _this.addBinding({ key: Keyboard.keys.BACKSPACE }, { collapsed: false }, handleDeleteRange);
    _this.addBinding({ key: Keyboard.keys.DELETE }, { collapsed: false }, handleDeleteRange);
    _this.addBinding({ key: Keyboard.keys.BACKSPACE, altKey: null, ctrlKey: null, metaKey: null, shiftKey: null }, { collapsed: true, offset: 0 }, handleBackspace);
    _this.listen();
    return _this;
  }

  _createClass(Keyboard, [{
    key: 'addBinding',
    value: function addBinding(key) {
      var context = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var handler = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

      var binding = normalize(key);
      if (binding == null || binding.key == null) {
        return debug.warn('Attempted to add invalid keyboard binding', binding);
      }
      if (typeof context === 'function') {
        context = { handler: context };
      }
      if (typeof handler === 'function') {
        handler = { handler: handler };
      }
      binding = (0, _extend2.default)(binding, context, handler);
      this.bindings[binding.key] = this.bindings[binding.key] || [];
      this.bindings[binding.key].push(binding);
    }
  }, {
    key: 'listen',
    value: function listen() {
      var _this2 = this;

      this.quill.root.addEventListener('keydown', function (evt) {
        if (evt.defaultPrevented) return;
        var which = evt.which || evt.keyCode;
        var bindings = (_this2.bindings[which] || []).filter(function (binding) {
          return Keyboard.match(evt, binding);
        });
        if (bindings.length === 0) return;
        var range = _this2.quill.getSelection();
        if (range == null || !_this2.quill.hasFocus()) return;

        var _quill$getLine = _this2.quill.getLine(range.index),
            _quill$getLine2 = _slicedToArray(_quill$getLine, 2),
            line = _quill$getLine2[0],
            offset = _quill$getLine2[1];

        var _quill$getLeaf = _this2.quill.getLeaf(range.index),
            _quill$getLeaf2 = _slicedToArray(_quill$getLeaf, 2),
            leafStart = _quill$getLeaf2[0],
            offsetStart = _quill$getLeaf2[1];

        var _ref = range.length === 0 ? [leafStart, offsetStart] : _this2.quill.getLeaf(range.index + range.length),
            _ref2 = _slicedToArray(_ref, 2),
            leafEnd = _ref2[0],
            offsetEnd = _ref2[1];

        var prefixText = leafStart instanceof _parchment2.default.Text ? leafStart.value().slice(0, offsetStart) : '';
        var suffixText = leafEnd instanceof _parchment2.default.Text ? leafEnd.value().slice(offsetEnd) : '';
        var curContext = {
          collapsed: range.length === 0,
          empty: range.length === 0 && line.length() <= 1,
          format: _this2.quill.getFormat(range),
          offset: offset,
          prefix: prefixText,
          suffix: suffixText
        };
        var prevented = bindings.some(function (binding) {
          if (binding.collapsed != null && binding.collapsed !== curContext.collapsed) return false;
          if (binding.empty != null && binding.empty !== curContext.empty) return false;
          if (binding.offset != null && binding.offset !== curContext.offset) return false;
          if (Array.isArray(binding.format)) {
            // any format is present
            if (binding.format.every(function (name) {
              return curContext.format[name] == null;
            })) {
              return false;
            }
          } else if (_typeof(binding.format) === 'object') {
            // all formats must match
            if (!Object.keys(binding.format).every(function (name) {
              if (binding.format[name] === true) return curContext.format[name] != null;
              if (binding.format[name] === false) return curContext.format[name] == null;
              return (0, _deepEqual2.default)(binding.format[name], curContext.format[name]);
            })) {
              return false;
            }
          }
          if (binding.prefix != null && !binding.prefix.test(curContext.prefix)) return false;
          if (binding.suffix != null && !binding.suffix.test(curContext.suffix)) return false;
          return binding.handler.call(_this2, range, curContext) !== true;
        });
        if (prevented) {
          evt.preventDefault();
        }
      });
    }
  }]);

  return Keyboard;
}(_module2.default);

Keyboard.keys = {
  BACKSPACE: 8,
  TAB: 9,
  ENTER: 13,
  ESCAPE: 27,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40,
  DELETE: 46
};

Keyboard.DEFAULTS = {
  bindings: {
    'bold': makeFormatHandler('bold'),
    'italic': makeFormatHandler('italic'),
    'underline': makeFormatHandler('underline'),
    'indent': {
      // highlight tab or tab at beginning of list, indent or blockquote
      key: Keyboard.keys.TAB,
      format: ['blockquote', 'indent', 'list'],
      handler: function handler(range, context) {
        if (context.collapsed && context.offset !== 0) return true;
        this.quill.format('indent', '+1', _quill2.default.sources.USER);
      }
    },
    'outdent': {
      key: Keyboard.keys.TAB,
      shiftKey: true,
      format: ['blockquote', 'indent', 'list'],
      // highlight tab or tab at beginning of list, indent or blockquote
      handler: function handler(range, context) {
        if (context.collapsed && context.offset !== 0) return true;
        this.quill.format('indent', '-1', _quill2.default.sources.USER);
      }
    },
    'outdent backspace': {
      key: Keyboard.keys.BACKSPACE,
      collapsed: true,
      shiftKey: null,
      metaKey: null,
      ctrlKey: null,
      altKey: null,
      format: ['indent', 'list'],
      offset: 0,
      handler: function handler(range, context) {
        if (context.format.indent != null) {
          this.quill.format('indent', '-1', _quill2.default.sources.USER);
        } else if (context.format.list != null) {
          this.quill.format('list', false, _quill2.default.sources.USER);
        }
      }
    },
    'indent code-block': makeCodeBlockHandler(true),
    'outdent code-block': makeCodeBlockHandler(false),
    'remove tab': {
      key: Keyboard.keys.TAB,
      shiftKey: true,
      collapsed: true,
      prefix: /\\t$/,
      handler: function handler(range) {
        this.quill.deleteText(range.index - 1, 1, _quill2.default.sources.USER);
      }
    },
    'tab': {
      key: Keyboard.keys.TAB,
      handler: function handler(range) {
        this.quill.history.cutoff();
        var delta = new _quillDelta2.default().retain(range.index).delete(range.length).insert('\\t');
        this.quill.updateContents(delta, _quill2.default.sources.USER);
        this.quill.history.cutoff();
        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
      }
    },
    'list empty enter': {
      key: Keyboard.keys.ENTER,
      collapsed: true,
      format: ['list'],
      empty: true,
      handler: function handler(range, context) {
        this.quill.format('list', false, _quill2.default.sources.USER);
        if (context.format.indent) {
          this.quill.format('indent', false, _quill2.default.sources.USER);
        }
      }
    },
    'checklist enter': {
      key: Keyboard.keys.ENTER,
      collapsed: true,
      format: { list: 'checked' },
      handler: function handler(range) {
        var _quill$getLine3 = this.quill.getLine(range.index),
            _quill$getLine4 = _slicedToArray(_quill$getLine3, 2),
            line = _quill$getLine4[0],
            offset = _quill$getLine4[1];

        var formats = (0, _extend2.default)({}, line.formats(), { list: 'checked' });
        var delta = new _quillDelta2.default().retain(range.index).insert('\\n', formats).retain(line.length() - offset - 1).retain(1, { list: 'unchecked' });
        this.quill.updateContents(delta, _quill2.default.sources.USER);
        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
        this.quill.scrollIntoView();
      }
    },
    'header enter': {
      key: Keyboard.keys.ENTER,
      collapsed: true,
      format: ['header'],
      suffix: /^$/,
      handler: function handler(range, context) {
        var _quill$getLine5 = this.quill.getLine(range.index),
            _quill$getLine6 = _slicedToArray(_quill$getLine5, 2),
            line = _quill$getLine6[0],
            offset = _quill$getLine6[1];

        var delta = new _quillDelta2.default().retain(range.index).insert('\\n', context.format).retain(line.length() - offset - 1).retain(1, { header: null });
        this.quill.updateContents(delta, _quill2.default.sources.USER);
        this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
        this.quill.scrollIntoView();
      }
    },
    'list autofill': {
      key: ' ',
      collapsed: true,
      format: { list: false },
      prefix: /^\\s*?(\\d+\\.|-|\\*|\\[ ?\\]|\\[x\\])$/,
      handler: function handler(range, context) {
        var length = context.prefix.length;

        var _quill$getLine7 = this.quill.getLine(range.index),
            _quill$getLine8 = _slicedToArray(_quill$getLine7, 2),
            line = _quill$getLine8[0],
            offset = _quill$getLine8[1];

        if (offset > length) return true;
        var value = void 0;
        switch (context.prefix.trim()) {
          case '[]':case '[ ]':
            value = 'unchecked';
            break;
          case '[x]':
            value = 'checked';
            break;
          case '-':case '*':
            value = 'bullet';
            break;
          default:
            value = 'ordered';
        }
        this.quill.insertText(range.index, ' ', _quill2.default.sources.USER);
        this.quill.history.cutoff();
        var delta = new _quillDelta2.default().retain(range.index - offset).delete(length + 1).retain(line.length() - 2 - offset).retain(1, { list: value });
        this.quill.updateContents(delta, _quill2.default.sources.USER);
        this.quill.history.cutoff();
        this.quill.setSelection(range.index - length, _quill2.default.sources.SILENT);
      }
    },
    'code exit': {
      key: Keyboard.keys.ENTER,
      collapsed: true,
      format: ['code-block'],
      prefix: /\\n\\n$/,
      suffix: /^\\s+$/,
      handler: function handler(range) {
        var _quill$getLine9 = this.quill.getLine(range.index),
            _quill$getLine10 = _slicedToArray(_quill$getLine9, 2),
            line = _quill$getLine10[0],
            offset = _quill$getLine10[1];

        var delta = new _quillDelta2.default().retain(range.index + line.length() - offset - 2).retain(1, { 'code-block': null }).delete(1);
        this.quill.updateContents(delta, _quill2.default.sources.USER);
      }
    },
    'embed left': makeEmbedArrowHandler(Keyboard.keys.LEFT, false),
    'embed left shift': makeEmbedArrowHandler(Keyboard.keys.LEFT, true),
    'embed right': makeEmbedArrowHandler(Keyboard.keys.RIGHT, false),
    'embed right shift': makeEmbedArrowHandler(Keyboard.keys.RIGHT, true)
  }
};

function makeEmbedArrowHandler(key, shiftKey) {
  var _ref3;

  var where = key === Keyboard.keys.LEFT ? 'prefix' : 'suffix';
  return _ref3 = {
    key: key,
    shiftKey: shiftKey,
    altKey: null
  }, _defineProperty(_ref3, where, /^$/), _defineProperty(_ref3, 'handler', function handler(range) {
    var index = range.index;
    if (key === Keyboard.keys.RIGHT) {
      index += range.length + 1;
    }

    var _quill$getLeaf3 = this.quill.getLeaf(index),
        _quill$getLeaf4 = _slicedToArray(_quill$getLeaf3, 1),
        leaf = _quill$getLeaf4[0];

    if (!(leaf instanceof _parchment2.default.Embed)) return true;
    if (key === Keyboard.keys.LEFT) {
      if (shiftKey) {
        this.quill.setSelection(range.index - 1, range.length + 1, _quill2.default.sources.USER);
      } else {
        this.quill.setSelection(range.index - 1, _quill2.default.sources.USER);
      }
    } else {
      if (shiftKey) {
        this.quill.setSelection(range.index, range.length + 1, _quill2.default.sources.USER);
      } else {
        this.quill.setSelection(range.index + range.length + 1, _quill2.default.sources.USER);
      }
    }
    return false;
  }), _ref3;
}

function handleBackspace(range, context) {
  if (range.index === 0 || this.quill.getLength() <= 1) return;

  var _quill$getLine11 = this.quill.getLine(range.index),
      _quill$getLine12 = _slicedToArray(_quill$getLine11, 1),
      line = _quill$getLine12[0];

  var formats = {};
  if (context.offset === 0) {
    var _quill$getLine13 = this.quill.getLine(range.index - 1),
        _quill$getLine14 = _slicedToArray(_quill$getLine13, 1),
        prev = _quill$getLine14[0];

    if (prev != null && prev.length() > 1) {
      var curFormats = line.formats();
      var prevFormats = this.quill.getFormat(range.index - 1, 1);
      formats = _op2.default.attributes.diff(curFormats, prevFormats) || {};
    }
  }
  // Check for astral symbols
  var length = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]$/.test(context.prefix) ? 2 : 1;
  this.quill.deleteText(range.index - length, length, _quill2.default.sources.USER);
  if (Object.keys(formats).length > 0) {
    this.quill.formatLine(range.index - length, length, formats, _quill2.default.sources.USER);
  }
  this.quill.focus();
}

function handleDelete(range, context) {
  // Check for astral symbols
  var length = /^[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/.test(context.suffix) ? 2 : 1;
  if (range.index >= this.quill.getLength() - length) return;
  var formats = {},
      nextLength = 0;

  var _quill$getLine15 = this.quill.getLine(range.index),
      _quill$getLine16 = _slicedToArray(_quill$getLine15, 1),
      line = _quill$getLine16[0];

  if (context.offset >= line.length() - 1) {
    var _quill$getLine17 = this.quill.getLine(range.index + 1),
        _quill$getLine18 = _slicedToArray(_quill$getLine17, 1),
        next = _quill$getLine18[0];

    if (next) {
      var curFormats = line.formats();
      var nextFormats = this.quill.getFormat(range.index, 1);
      formats = _op2.default.attributes.diff(curFormats, nextFormats) || {};
      nextLength = next.length();
    }
  }
  this.quill.deleteText(range.index, length, _quill2.default.sources.USER);
  if (Object.keys(formats).length > 0) {
    this.quill.formatLine(range.index + nextLength - 1, length, formats, _quill2.default.sources.USER);
  }
}

function handleDeleteRange(range) {
  var lines = this.quill.getLines(range);
  var formats = {};
  if (lines.length > 1) {
    var firstFormats = lines[0].formats();
    var lastFormats = lines[lines.length - 1].formats();
    formats = _op2.default.attributes.diff(lastFormats, firstFormats) || {};
  }
  this.quill.deleteText(range, _quill2.default.sources.USER);
  if (Object.keys(formats).length > 0) {
    this.quill.formatLine(range.index, 1, formats, _quill2.default.sources.USER);
  }
  this.quill.setSelection(range.index, _quill2.default.sources.SILENT);
  this.quill.focus();
}

function handleEnter(range, context) {
  var _this3 = this;

  if (range.length > 0) {
    this.quill.scroll.deleteAt(range.index, range.length); // So we do not trigger text-change
  }
  var lineFormats = Object.keys(context.format).reduce(function (lineFormats, format) {
    if (_parchment2.default.query(format, _parchment2.default.Scope.BLOCK) && !Array.isArray(context.format[format])) {
      lineFormats[format] = context.format[format];
    }
    return lineFormats;
  }, {});
  this.quill.insertText(range.index, '\\n', lineFormats, _quill2.default.sources.USER);
  // Earlier scroll.deleteAt might have messed up our selection,
  // so insertText's built in selection preservation is not reliable
  this.quill.setSelection(range.index + 1, _quill2.default.sources.SILENT);
  this.quill.focus();
  Object.keys(context.format).forEach(function (name) {
    if (lineFormats[name] != null) return;
    if (Array.isArray(context.format[name])) return;
    if (name === 'link') return;
    _this3.quill.format(name, context.format[name], _quill2.default.sources.USER);
  });
}

function makeCodeBlockHandler(indent) {
  return {
    key: Keyboard.keys.TAB,
    shiftKey: !indent,
    format: { 'code-block': true },
    handler: function handler(range) {
      var CodeBlock = _parchment2.default.query('code-block');
      var index = range.index,
          length = range.length;

      var _quill$scroll$descend = this.quill.scroll.descendant(CodeBlock, index),
          _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),
          block = _quill$scroll$descend2[0],
          offset = _quill$scroll$descend2[1];

      if (block == null) return;
      var scrollIndex = this.quill.getIndex(block);
      var start = block.newlineIndex(offset, true) + 1;
      var end = block.newlineIndex(scrollIndex + offset + length);
      var lines = block.domNode.textContent.slice(start, end).split('\\n');
      offset = 0;
      lines.forEach(function (line, i) {
        if (indent) {
          block.insertAt(start + offset, CodeBlock.TAB);
          offset += CodeBlock.TAB.length;
          if (i === 0) {
            index += CodeBlock.TAB.length;
          } else {
            length += CodeBlock.TAB.length;
          }
        } else if (line.startsWith(CodeBlock.TAB)) {
          block.deleteAt(start + offset, CodeBlock.TAB.length);
          offset -= CodeBlock.TAB.length;
          if (i === 0) {
            index -= CodeBlock.TAB.length;
          } else {
            length -= CodeBlock.TAB.length;
          }
        }
        offset += line.length + 1;
      });
      this.quill.update(_quill2.default.sources.USER);
      this.quill.setSelection(index, length, _quill2.default.sources.SILENT);
    }
  };
}

function makeFormatHandler(format) {
  return {
    key: format[0].toUpperCase(),
    shortKey: true,
    handler: function handler(range, context) {
      this.quill.format(format, !context.format[format], _quill2.default.sources.USER);
    }
  };
}

function normalize(binding) {
  if (typeof binding === 'string' || typeof binding === 'number') {
    return normalize({ key: binding });
  }
  if ((typeof binding === 'undefined' ? 'undefined' : _typeof(binding)) === 'object') {
    binding = (0, _clone2.default)(binding, false);
  }
  if (typeof binding.key === 'string') {
    if (Keyboard.keys[binding.key.toUpperCase()] != null) {
      binding.key = Keyboard.keys[binding.key.toUpperCase()];
    } else if (binding.key.length === 1) {
      binding.key = binding.key.toUpperCase().charCodeAt(0);
    } else {
      return null;
    }
  }
  if (binding.shortKey) {
    binding[SHORTKEY] = binding.shortKey;
    delete binding.shortKey;
  }
  return binding;
}

exports.default = Keyboard;
exports.SHORTKEY = SHORTKEY;

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _text = __webpack_require__(7);

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Cursor = function (_Parchment$Embed) {
  _inherits(Cursor, _Parchment$Embed);

  _createClass(Cursor, null, [{
    key: 'value',
    value: function value() {
      return undefined;
    }
  }]);

  function Cursor(domNode, selection) {
    _classCallCheck(this, Cursor);

    var _this = _possibleConstructorReturn(this, (Cursor.__proto__ || Object.getPrototypeOf(Cursor)).call(this, domNode));

    _this.selection = selection;
    _this.textNode = document.createTextNode(Cursor.CONTENTS);
    _this.domNode.appendChild(_this.textNode);
    _this._length = 0;
    return _this;
  }

  _createClass(Cursor, [{
    key: 'detach',
    value: function detach() {
      // super.detach() will also clear domNode.__blot
      if (this.parent != null) this.parent.removeChild(this);
    }
  }, {
    key: 'format',
    value: function format(name, value) {
      if (this._length !== 0) {
        return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'format', this).call(this, name, value);
      }
      var target = this,
          index = 0;
      while (target != null && target.statics.scope !== _parchment2.default.Scope.BLOCK_BLOT) {
        index += target.offset(target.parent);
        target = target.parent;
      }
      if (target != null) {
        this._length = Cursor.CONTENTS.length;
        target.optimize();
        target.formatAt(index, Cursor.CONTENTS.length, name, value);
        this._length = 0;
      }
    }
  }, {
    key: 'index',
    value: function index(node, offset) {
      if (node === this.textNode) return 0;
      return _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'index', this).call(this, node, offset);
    }
  }, {
    key: 'length',
    value: function length() {
      return this._length;
    }
  }, {
    key: 'position',
    value: function position() {
      return [this.textNode, this.textNode.data.length];
    }
  }, {
    key: 'remove',
    value: function remove() {
      _get(Cursor.prototype.__proto__ || Object.getPrototypeOf(Cursor.prototype), 'remove', this).call(this);
      this.parent = null;
    }
  }, {
    key: 'restore',
    value: function restore() {
      if (this.selection.composing || this.parent == null) return;
      var textNode = this.textNode;
      var range = this.selection.getNativeRange();
      var restoreText = void 0,
          start = void 0,
          end = void 0;
      if (range != null && range.start.node === textNode && range.end.node === textNode) {
        var _ref = [textNode, range.start.offset, range.end.offset];
        restoreText = _ref[0];
        start = _ref[1];
        end = _ref[2];
      }
      // Link format will insert text outside of anchor tag
      while (this.domNode.lastChild != null && this.domNode.lastChild !== this.textNode) {
        this.domNode.parentNode.insertBefore(this.domNode.lastChild, this.domNode);
      }
      if (this.textNode.data !== Cursor.CONTENTS) {
        var text = this.textNode.data.split(Cursor.CONTENTS).join('');
        if (this.next instanceof _text2.default) {
          restoreText = this.next.domNode;
          this.next.insertAt(0, text);
          this.textNode.data = Cursor.CONTENTS;
        } else {
          this.textNode.data = text;
          this.parent.insertBefore(_parchment2.default.create(this.textNode), this);
          this.textNode = document.createTextNode(Cursor.CONTENTS);
          this.domNode.appendChild(this.textNode);
        }
      }
      this.remove();
      if (start != null) {
        var _map = [start, end].map(function (offset) {
          return Math.max(0, Math.min(restoreText.data.length, offset - 1));
        });

        var _map2 = _slicedToArray(_map, 2);

        start = _map2[0];
        end = _map2[1];

        return {
          startNode: restoreText,
          startOffset: start,
          endNode: restoreText,
          endOffset: end
        };
      }
    }
  }, {
    key: 'update',
    value: function update(mutations, context) {
      var _this2 = this;

      if (mutations.some(function (mutation) {
        return mutation.type === 'characterData' && mutation.target === _this2.textNode;
      })) {
        var range = this.restore();
        if (range) context.range = range;
      }
    }
  }, {
    key: 'value',
    value: function value() {
      return '';
    }
  }]);

  return Cursor;
}(_parchment2.default.Embed);

Cursor.blotName = 'cursor';
Cursor.className = 'ql-cursor';
Cursor.tagName = 'span';
Cursor.CONTENTS = '\\uFEFF'; // Zero width no break space


exports.default = Cursor;

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _block = __webpack_require__(4);

var _block2 = _interopRequireDefault(_block);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Container = function (_Parchment$Container) {
  _inherits(Container, _Parchment$Container);

  function Container() {
    _classCallCheck(this, Container);

    return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
  }

  return Container;
}(_parchment2.default.Container);

Container.allowedChildren = [_block2.default, _block.BlockEmbed, Container];

exports.default = Container;

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ColorStyle = exports.ColorClass = exports.ColorAttributor = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorAttributor = function (_Parchment$Attributor) {
  _inherits(ColorAttributor, _Parchment$Attributor);

  function ColorAttributor() {
    _classCallCheck(this, ColorAttributor);

    return _possibleConstructorReturn(this, (ColorAttributor.__proto__ || Object.getPrototypeOf(ColorAttributor)).apply(this, arguments));
  }

  _createClass(ColorAttributor, [{
    key: 'value',
    value: function value(domNode) {
      var value = _get(ColorAttributor.prototype.__proto__ || Object.getPrototypeOf(ColorAttributor.prototype), 'value', this).call(this, domNode);
      if (!value.startsWith('rgb(')) return value;
      value = value.replace(/^[^\\d]+/, '').replace(/[^\\d]+$/, '');
      return '#' + value.split(',').map(function (component) {
        return ('00' + parseInt(component).toString(16)).slice(-2);
      }).join('');
    }
  }]);

  return ColorAttributor;
}(_parchment2.default.Attributor.Style);

var ColorClass = new _parchment2.default.Attributor.Class('color', 'ql-color', {
  scope: _parchment2.default.Scope.INLINE
});
var ColorStyle = new ColorAttributor('color', 'color', {
  scope: _parchment2.default.Scope.INLINE
});

exports.ColorAttributor = ColorAttributor;
exports.ColorClass = ColorClass;
exports.ColorStyle = ColorStyle;

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.sanitize = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _inline = __webpack_require__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Link = function (_Inline) {
  _inherits(Link, _Inline);

  function Link() {
    _classCallCheck(this, Link);

    return _possibleConstructorReturn(this, (Link.__proto__ || Object.getPrototypeOf(Link)).apply(this, arguments));
  }

  _createClass(Link, [{
    key: 'format',
    value: function format(name, value) {
      if (name !== this.statics.blotName || !value) return _get(Link.prototype.__proto__ || Object.getPrototypeOf(Link.prototype), 'format', this).call(this, name, value);
      value = this.constructor.sanitize(value);
      this.domNode.setAttribute('href', value);
    }
  }], [{
    key: 'create',
    value: function create(value) {
      var node = _get(Link.__proto__ || Object.getPrototypeOf(Link), 'create', this).call(this, value);
      value = this.sanitize(value);
      node.setAttribute('href', value);
      node.setAttribute('rel', 'noopener noreferrer');
      node.setAttribute('target', '_blank');
      return node;
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      return domNode.getAttribute('href');
    }
  }, {
    key: 'sanitize',
    value: function sanitize(url) {
      return _sanitize(url, this.PROTOCOL_WHITELIST) ? url : this.SANITIZED_URL;
    }
  }]);

  return Link;
}(_inline2.default);

Link.blotName = 'link';
Link.tagName = 'A';
Link.SANITIZED_URL = 'about:blank';
Link.PROTOCOL_WHITELIST = ['http', 'https', 'mailto', 'tel'];

function _sanitize(url, protocols) {
  var anchor = document.createElement('a');
  anchor.href = url;
  var protocol = anchor.href.slice(0, anchor.href.indexOf(':'));
  return protocols.indexOf(protocol) > -1;
}

exports.default = Link;
exports.sanitize = _sanitize;

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _keyboard = __webpack_require__(23);

var _keyboard2 = _interopRequireDefault(_keyboard);

var _dropdown = __webpack_require__(107);

var _dropdown2 = _interopRequireDefault(_dropdown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var optionsCounter = 0;

function toggleAriaAttribute(element, attribute) {
  element.setAttribute(attribute, !(element.getAttribute(attribute) === 'true'));
}

var Picker = function () {
  function Picker(select) {
    var _this = this;

    _classCallCheck(this, Picker);

    this.select = select;
    this.container = document.createElement('span');
    this.buildPicker();
    this.select.style.display = 'none';
    this.select.parentNode.insertBefore(this.container, this.select);

    this.label.addEventListener('mousedown', function () {
      _this.togglePicker();
    });
    this.label.addEventListener('keydown', function (event) {
      switch (event.keyCode) {
        // Allows the "Enter" key to open the picker
        case _keyboard2.default.keys.ENTER:
          _this.togglePicker();
          break;

        // Allows the "Escape" key to close the picker
        case _keyboard2.default.keys.ESCAPE:
          _this.escape();
          event.preventDefault();
          break;
        default:
      }
    });
    this.select.addEventListener('change', this.update.bind(this));
  }

  _createClass(Picker, [{
    key: 'togglePicker',
    value: function togglePicker() {
      this.container.classList.toggle('ql-expanded');
      // Toggle aria-expanded and aria-hidden to make the picker accessible
      toggleAriaAttribute(this.label, 'aria-expanded');
      toggleAriaAttribute(this.options, 'aria-hidden');
    }
  }, {
    key: 'buildItem',
    value: function buildItem(option) {
      var _this2 = this;

      var item = document.createElement('span');
      item.tabIndex = '0';
      item.setAttribute('role', 'button');

      item.classList.add('ql-picker-item');
      if (option.hasAttribute('value')) {
        item.setAttribute('data-value', option.getAttribute('value'));
      }
      if (option.textContent) {
        item.setAttribute('data-label', option.textContent);
      }
      item.addEventListener('click', function () {
        _this2.selectItem(item, true);
      });
      item.addEventListener('keydown', function (event) {
        switch (event.keyCode) {
          // Allows the "Enter" key to select an item
          case _keyboard2.default.keys.ENTER:
            _this2.selectItem(item, true);
            event.preventDefault();
            break;

          // Allows the "Escape" key to close the picker
          case _keyboard2.default.keys.ESCAPE:
            _this2.escape();
            event.preventDefault();
            break;
          default:
        }
      });

      return item;
    }
  }, {
    key: 'buildLabel',
    value: function buildLabel() {
      var label = document.createElement('span');
      label.classList.add('ql-picker-label');
      label.innerHTML = _dropdown2.default;
      label.tabIndex = '0';
      label.setAttribute('role', 'button');
      label.setAttribute('aria-expanded', 'false');
      this.container.appendChild(label);
      return label;
    }
  }, {
    key: 'buildOptions',
    value: function buildOptions() {
      var _this3 = this;

      var options = document.createElement('span');
      options.classList.add('ql-picker-options');

      // Don't want screen readers to read this until options are visible
      options.setAttribute('aria-hidden', 'true');
      options.tabIndex = '-1';

      // Need a unique id for aria-controls
      options.id = 'ql-picker-options-' + optionsCounter;
      optionsCounter += 1;
      this.label.setAttribute('aria-controls', options.id);

      this.options = options;

      [].slice.call(this.select.options).forEach(function (option) {
        var item = _this3.buildItem(option);
        options.appendChild(item);
        if (option.selected === true) {
          _this3.selectItem(item);
        }
      });
      this.container.appendChild(options);
    }
  }, {
    key: 'buildPicker',
    value: function buildPicker() {
      var _this4 = this;

      [].slice.call(this.select.attributes).forEach(function (item) {
        _this4.container.setAttribute(item.name, item.value);
      });
      this.container.classList.add('ql-picker');
      this.label = this.buildLabel();
      this.buildOptions();
    }
  }, {
    key: 'escape',
    value: function escape() {
      var _this5 = this;

      // Close menu and return focus to trigger label
      this.close();
      // Need setTimeout for accessibility to ensure that the browser executes
      // focus on the next process thread and after any DOM content changes
      setTimeout(function () {
        return _this5.label.focus();
      }, 1);
    }
  }, {
    key: 'close',
    value: function close() {
      this.container.classList.remove('ql-expanded');
      this.label.setAttribute('aria-expanded', 'false');
      this.options.setAttribute('aria-hidden', 'true');
    }
  }, {
    key: 'selectItem',
    value: function selectItem(item) {
      var trigger = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      var selected = this.container.querySelector('.ql-selected');
      if (item === selected) return;
      if (selected != null) {
        selected.classList.remove('ql-selected');
      }
      if (item == null) return;
      item.classList.add('ql-selected');
      this.select.selectedIndex = [].indexOf.call(item.parentNode.children, item);
      if (item.hasAttribute('data-value')) {
        this.label.setAttribute('data-value', item.getAttribute('data-value'));
      } else {
        this.label.removeAttribute('data-value');
      }
      if (item.hasAttribute('data-label')) {
        this.label.setAttribute('data-label', item.getAttribute('data-label'));
      } else {
        this.label.removeAttribute('data-label');
      }
      if (trigger) {
        if (typeof Event === 'function') {
          this.select.dispatchEvent(new Event('change'));
        } else if ((typeof Event === 'undefined' ? 'undefined' : _typeof(Event)) === 'object') {
          // IE11
          var event = document.createEvent('Event');
          event.initEvent('change', true, true);
          this.select.dispatchEvent(event);
        }
        this.close();
      }
    }
  }, {
    key: 'update',
    value: function update() {
      var option = void 0;
      if (this.select.selectedIndex > -1) {
        var item = this.container.querySelector('.ql-picker-options').children[this.select.selectedIndex];
        option = this.select.options[this.select.selectedIndex];
        this.selectItem(item);
      } else {
        this.selectItem(null);
      }
      var isActive = option != null && option !== this.select.querySelector('option[selected]');
      this.label.classList.toggle('ql-active', isActive);
    }
  }]);

  return Picker;
}();

exports.default = Picker;

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __webpack_require__(5);

var _quill2 = _interopRequireDefault(_quill);

var _block = __webpack_require__(4);

var _block2 = _interopRequireDefault(_block);

var _break = __webpack_require__(16);

var _break2 = _interopRequireDefault(_break);

var _container = __webpack_require__(25);

var _container2 = _interopRequireDefault(_container);

var _cursor = __webpack_require__(24);

var _cursor2 = _interopRequireDefault(_cursor);

var _embed = __webpack_require__(35);

var _embed2 = _interopRequireDefault(_embed);

var _inline = __webpack_require__(6);

var _inline2 = _interopRequireDefault(_inline);

var _scroll = __webpack_require__(22);

var _scroll2 = _interopRequireDefault(_scroll);

var _text = __webpack_require__(7);

var _text2 = _interopRequireDefault(_text);

var _clipboard = __webpack_require__(55);

var _clipboard2 = _interopRequireDefault(_clipboard);

var _history = __webpack_require__(42);

var _history2 = _interopRequireDefault(_history);

var _keyboard = __webpack_require__(23);

var _keyboard2 = _interopRequireDefault(_keyboard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_quill2.default.register({
  'blots/block': _block2.default,
  'blots/block/embed': _block.BlockEmbed,
  'blots/break': _break2.default,
  'blots/container': _container2.default,
  'blots/cursor': _cursor2.default,
  'blots/embed': _embed2.default,
  'blots/inline': _inline2.default,
  'blots/scroll': _scroll2.default,
  'blots/text': _text2.default,

  'modules/clipboard': _clipboard2.default,
  'modules/history': _history2.default,
  'modules/keyboard': _keyboard2.default
});

_parchment2.default.register(_block2.default, _break2.default, _cursor2.default, _inline2.default, _scroll2.default, _text2.default);

exports.default = _quill2.default;

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var Registry = __webpack_require__(1);
var ShadowBlot = /** @class */ (function () {
    function ShadowBlot(domNode) {
        this.domNode = domNode;
        // @ts-ignore
        this.domNode[Registry.DATA_KEY] = { blot: this };
    }
    Object.defineProperty(ShadowBlot.prototype, "statics", {
        // Hack for accessing inherited static methods
        get: function () {
            return this.constructor;
        },
        enumerable: true,
        configurable: true
    });
    ShadowBlot.create = function (value) {
        if (this.tagName == null) {
            throw new Registry.ParchmentError('Blot definition missing tagName');
        }
        var node;
        if (Array.isArray(this.tagName)) {
            if (typeof value === 'string') {
                value = value.toUpperCase();
                if (parseInt(value).toString() === value) {
                    value = parseInt(value);
                }
            }
            if (typeof value === 'number') {
                node = document.createElement(this.tagName[value - 1]);
            }
            else if (this.tagName.indexOf(value) > -1) {
                node = document.createElement(value);
            }
            else {
                node = document.createElement(this.tagName[0]);
            }
        }
        else {
            node = document.createElement(this.tagName);
        }
        if (this.className) {
            node.classList.add(this.className);
        }
        return node;
    };
    ShadowBlot.prototype.attach = function () {
        if (this.parent != null) {
            this.scroll = this.parent.scroll;
        }
    };
    ShadowBlot.prototype.clone = function () {
        var domNode = this.domNode.cloneNode(false);
        return Registry.create(domNode);
    };
    ShadowBlot.prototype.detach = function () {
        if (this.parent != null)
            this.parent.removeChild(this);
        // @ts-ignore
        delete this.domNode[Registry.DATA_KEY];
    };
    ShadowBlot.prototype.deleteAt = function (index, length) {
        var blot = this.isolate(index, length);
        blot.remove();
    };
    ShadowBlot.prototype.formatAt = function (index, length, name, value) {
        var blot = this.isolate(index, length);
        if (Registry.query(name, Registry.Scope.BLOT) != null && value) {
            blot.wrap(name, value);
        }
        else if (Registry.query(name, Registry.Scope.ATTRIBUTE) != null) {
            var parent = Registry.create(this.statics.scope);
            blot.wrap(parent);
            parent.format(name, value);
        }
    };
    ShadowBlot.prototype.insertAt = function (index, value, def) {
        var blot = def == null ? Registry.create('text', value) : Registry.create(value, def);
        var ref = this.split(index);
        this.parent.insertBefore(blot, ref);
    };
    ShadowBlot.prototype.insertInto = function (parentBlot, refBlot) {
        if (refBlot === void 0) { refBlot = null; }
        if (this.parent != null) {
            this.parent.children.remove(this);
        }
        var refDomNode = null;
        parentBlot.children.insertBefore(this, refBlot);
        if (refBlot != null) {
            refDomNode = refBlot.domNode;
        }
        if (this.domNode.parentNode != parentBlot.domNode ||
            this.domNode.nextSibling != refDomNode) {
            parentBlot.domNode.insertBefore(this.domNode, refDomNode);
        }
        this.parent = parentBlot;
        this.attach();
    };
    ShadowBlot.prototype.isolate = function (index, length) {
        var target = this.split(index);
        target.split(length);
        return target;
    };
    ShadowBlot.prototype.length = function () {
        return 1;
    };
    ShadowBlot.prototype.offset = function (root) {
        if (root === void 0) { root = this.parent; }
        if (this.parent == null || this == root)
            return 0;
        return this.parent.children.offset(this) + this.parent.offset(root);
    };
    ShadowBlot.prototype.optimize = function (context) {
        // TODO clean up once we use WeakMap
        // @ts-ignore
        if (this.domNode[Registry.DATA_KEY] != null) {
            // @ts-ignore
            delete this.domNode[Registry.DATA_KEY].mutations;
        }
    };
    ShadowBlot.prototype.remove = function () {
        if (this.domNode.parentNode != null) {
            this.domNode.parentNode.removeChild(this.domNode);
        }
        this.detach();
    };
    ShadowBlot.prototype.replace = function (target) {
        if (target.parent == null)
            return;
        target.parent.insertBefore(this, target.next);
        target.remove();
    };
    ShadowBlot.prototype.replaceWith = function (name, value) {
        var replacement = typeof name === 'string' ? Registry.create(name, value) : name;
        replacement.replace(this);
        return replacement;
    };
    ShadowBlot.prototype.split = function (index, force) {
        return index === 0 ? this : this.next;
    };
    ShadowBlot.prototype.update = function (mutations, context) {
        // Nothing to do by default
    };
    ShadowBlot.prototype.wrap = function (name, value) {
        var wrapper = typeof name === 'string' ? Registry.create(name, value) : name;
        if (this.parent != null) {
            this.parent.insertBefore(wrapper, this.next);
        }
        wrapper.appendChild(this);
        return wrapper;
    };
    ShadowBlot.blotName = 'abstract';
    return ShadowBlot;
}());
exports.default = ShadowBlot;


/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __webpack_require__(12);
var class_1 = __webpack_require__(32);
var style_1 = __webpack_require__(33);
var Registry = __webpack_require__(1);
var AttributorStore = /** @class */ (function () {
    function AttributorStore(domNode) {
        this.attributes = {};
        this.domNode = domNode;
        this.build();
    }
    AttributorStore.prototype.attribute = function (attribute, value) {
        // verb
        if (value) {
            if (attribute.add(this.domNode, value)) {
                if (attribute.value(this.domNode) != null) {
                    this.attributes[attribute.attrName] = attribute;
                }
                else {
                    delete this.attributes[attribute.attrName];
                }
            }
        }
        else {
            attribute.remove(this.domNode);
            delete this.attributes[attribute.attrName];
        }
    };
    AttributorStore.prototype.build = function () {
        var _this = this;
        this.attributes = {};
        var attributes = attributor_1.default.keys(this.domNode);
        var classes = class_1.default.keys(this.domNode);
        var styles = style_1.default.keys(this.domNode);
        attributes
            .concat(classes)
            .concat(styles)
            .forEach(function (name) {
            var attr = Registry.query(name, Registry.Scope.ATTRIBUTE);
            if (attr instanceof attributor_1.default) {
                _this.attributes[attr.attrName] = attr;
            }
        });
    };
    AttributorStore.prototype.copy = function (target) {
        var _this = this;
        Object.keys(this.attributes).forEach(function (key) {
            var value = _this.attributes[key].value(_this.domNode);
            target.format(key, value);
        });
    };
    AttributorStore.prototype.move = function (target) {
        var _this = this;
        this.copy(target);
        Object.keys(this.attributes).forEach(function (key) {
            _this.attributes[key].remove(_this.domNode);
        });
        this.attributes = {};
    };
    AttributorStore.prototype.values = function () {
        var _this = this;
        return Object.keys(this.attributes).reduce(function (attributes, name) {
            attributes[name] = _this.attributes[name].value(_this.domNode);
            return attributes;
        }, {});
    };
    return AttributorStore;
}());
exports.default = AttributorStore;


/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __webpack_require__(12);
function match(node, prefix) {
    var className = node.getAttribute('class') || '';
    return className.split(/\\s+/).filter(function (name) {
        return name.indexOf(prefix + "-") === 0;
    });
}
var ClassAttributor = /** @class */ (function (_super) {
    __extends(ClassAttributor, _super);
    function ClassAttributor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ClassAttributor.keys = function (node) {
        return (node.getAttribute('class') || '').split(/\\s+/).map(function (name) {
            return name
                .split('-')
                .slice(0, -1)
                .join('-');
        });
    };
    ClassAttributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        this.remove(node);
        node.classList.add(this.keyName + "-" + value);
        return true;
    };
    ClassAttributor.prototype.remove = function (node) {
        var matches = match(node, this.keyName);
        matches.forEach(function (name) {
            node.classList.remove(name);
        });
        if (node.classList.length === 0) {
            node.removeAttribute('class');
        }
    };
    ClassAttributor.prototype.value = function (node) {
        var result = match(node, this.keyName)[0] || '';
        var value = result.slice(this.keyName.length + 1); // +1 for hyphen
        return this.canAdd(node, value) ? value : '';
    };
    return ClassAttributor;
}(attributor_1.default));
exports.default = ClassAttributor;


/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var attributor_1 = __webpack_require__(12);
function camelize(name) {
    var parts = name.split('-');
    var rest = parts
        .slice(1)
        .map(function (part) {
        return part[0].toUpperCase() + part.slice(1);
    })
        .join('');
    return parts[0] + rest;
}
var StyleAttributor = /** @class */ (function (_super) {
    __extends(StyleAttributor, _super);
    function StyleAttributor() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    StyleAttributor.keys = function (node) {
        return (node.getAttribute('style') || '').split(';').map(function (value) {
            var arr = value.split(':');
            return arr[0].trim();
        });
    };
    StyleAttributor.prototype.add = function (node, value) {
        if (!this.canAdd(node, value))
            return false;
        // @ts-ignore
        node.style[camelize(this.keyName)] = value;
        return true;
    };
    StyleAttributor.prototype.remove = function (node) {
        // @ts-ignore
        node.style[camelize(this.keyName)] = '';
        if (!node.getAttribute('style')) {
            node.removeAttribute('style');
        }
    };
    StyleAttributor.prototype.value = function (node) {
        // @ts-ignore
        var value = node.style[camelize(this.keyName)];
        return this.canAdd(node, value) ? value : '';
    };
    return StyleAttributor;
}(attributor_1.default));
exports.default = StyleAttributor;


/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Theme = function () {
  function Theme(quill, options) {
    _classCallCheck(this, Theme);

    this.quill = quill;
    this.options = options;
    this.modules = {};
  }

  _createClass(Theme, [{
    key: 'init',
    value: function init() {
      var _this = this;

      Object.keys(this.options.modules).forEach(function (name) {
        if (_this.modules[name] == null) {
          _this.addModule(name);
        }
      });
    }
  }, {
    key: 'addModule',
    value: function addModule(name) {
      var moduleClass = this.quill.constructor.import('modules/' + name);
      this.modules[name] = new moduleClass(this.quill, this.options.modules[name] || {});
      return this.modules[name];
    }
  }]);

  return Theme;
}();

Theme.DEFAULTS = {
  modules: {}
};
Theme.themes = {
  'default': Theme
};

exports.default = Theme;

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _text = __webpack_require__(7);

var _text2 = _interopRequireDefault(_text);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GUARD_TEXT = '\\uFEFF';

var Embed = function (_Parchment$Embed) {
  _inherits(Embed, _Parchment$Embed);

  function Embed(node) {
    _classCallCheck(this, Embed);

    var _this = _possibleConstructorReturn(this, (Embed.__proto__ || Object.getPrototypeOf(Embed)).call(this, node));

    _this.contentNode = document.createElement('span');
    _this.contentNode.setAttribute('contenteditable', false);
    [].slice.call(_this.domNode.childNodes).forEach(function (childNode) {
      _this.contentNode.appendChild(childNode);
    });
    _this.leftGuard = document.createTextNode(GUARD_TEXT);
    _this.rightGuard = document.createTextNode(GUARD_TEXT);
    _this.domNode.appendChild(_this.leftGuard);
    _this.domNode.appendChild(_this.contentNode);
    _this.domNode.appendChild(_this.rightGuard);
    return _this;
  }

  _createClass(Embed, [{
    key: 'index',
    value: function index(node, offset) {
      if (node === this.leftGuard) return 0;
      if (node === this.rightGuard) return 1;
      return _get(Embed.prototype.__proto__ || Object.getPrototypeOf(Embed.prototype), 'index', this).call(this, node, offset);
    }
  }, {
    key: 'restore',
    value: function restore(node) {
      var range = void 0,
          textNode = void 0;
      var text = node.data.split(GUARD_TEXT).join('');
      if (node === this.leftGuard) {
        if (this.prev instanceof _text2.default) {
          var prevLength = this.prev.length();
          this.prev.insertAt(prevLength, text);
          range = {
            startNode: this.prev.domNode,
            startOffset: prevLength + text.length
          };
        } else {
          textNode = document.createTextNode(text);
          this.parent.insertBefore(_parchment2.default.create(textNode), this);
          range = {
            startNode: textNode,
            startOffset: text.length
          };
        }
      } else if (node === this.rightGuard) {
        if (this.next instanceof _text2.default) {
          this.next.insertAt(0, text);
          range = {
            startNode: this.next.domNode,
            startOffset: text.length
          };
        } else {
          textNode = document.createTextNode(text);
          this.parent.insertBefore(_parchment2.default.create(textNode), this.next);
          range = {
            startNode: textNode,
            startOffset: text.length
          };
        }
      }
      node.data = GUARD_TEXT;
      return range;
    }
  }, {
    key: 'update',
    value: function update(mutations, context) {
      var _this2 = this;

      mutations.forEach(function (mutation) {
        if (mutation.type === 'characterData' && (mutation.target === _this2.leftGuard || mutation.target === _this2.rightGuard)) {
          var range = _this2.restore(mutation.target);
          if (range) context.range = range;
        }
      });
    }
  }]);

  return Embed;
}(_parchment2.default.Embed);

exports.default = Embed;

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AlignStyle = exports.AlignClass = exports.AlignAttribute = undefined;

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var config = {
  scope: _parchment2.default.Scope.BLOCK,
  whitelist: ['right', 'center', 'justify']
};

var AlignAttribute = new _parchment2.default.Attributor.Attribute('align', 'align', config);
var AlignClass = new _parchment2.default.Attributor.Class('align', 'ql-align', config);
var AlignStyle = new _parchment2.default.Attributor.Style('align', 'text-align', config);

exports.AlignAttribute = AlignAttribute;
exports.AlignClass = AlignClass;
exports.AlignStyle = AlignStyle;

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.BackgroundStyle = exports.BackgroundClass = undefined;

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _color = __webpack_require__(26);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var BackgroundClass = new _parchment2.default.Attributor.Class('background', 'ql-bg', {
  scope: _parchment2.default.Scope.INLINE
});
var BackgroundStyle = new _color.ColorAttributor('background', 'background-color', {
  scope: _parchment2.default.Scope.INLINE
});

exports.BackgroundClass = BackgroundClass;
exports.BackgroundStyle = BackgroundStyle;

/***/ }),
/* 38 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DirectionStyle = exports.DirectionClass = exports.DirectionAttribute = undefined;

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var config = {
  scope: _parchment2.default.Scope.BLOCK,
  whitelist: ['rtl']
};

var DirectionAttribute = new _parchment2.default.Attributor.Attribute('direction', 'dir', config);
var DirectionClass = new _parchment2.default.Attributor.Class('direction', 'ql-direction', config);
var DirectionStyle = new _parchment2.default.Attributor.Style('direction', 'direction', config);

exports.DirectionAttribute = DirectionAttribute;
exports.DirectionClass = DirectionClass;
exports.DirectionStyle = DirectionStyle;

/***/ }),
/* 39 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.FontClass = exports.FontStyle = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var config = {
  scope: _parchment2.default.Scope.INLINE,
  whitelist: ['serif', 'monospace']
};

var FontClass = new _parchment2.default.Attributor.Class('font', 'ql-font', config);

var FontStyleAttributor = function (_Parchment$Attributor) {
  _inherits(FontStyleAttributor, _Parchment$Attributor);

  function FontStyleAttributor() {
    _classCallCheck(this, FontStyleAttributor);

    return _possibleConstructorReturn(this, (FontStyleAttributor.__proto__ || Object.getPrototypeOf(FontStyleAttributor)).apply(this, arguments));
  }

  _createClass(FontStyleAttributor, [{
    key: 'value',
    value: function value(node) {
      return _get(FontStyleAttributor.prototype.__proto__ || Object.getPrototypeOf(FontStyleAttributor.prototype), 'value', this).call(this, node).replace(/["']/g, '');
    }
  }]);

  return FontStyleAttributor;
}(_parchment2.default.Attributor.Style);

var FontStyle = new FontStyleAttributor('font', 'font-family', config);

exports.FontStyle = FontStyle;
exports.FontClass = FontClass;

/***/ }),
/* 40 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SizeStyle = exports.SizeClass = undefined;

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var SizeClass = new _parchment2.default.Attributor.Class('size', 'ql-size', {
  scope: _parchment2.default.Scope.INLINE,
  whitelist: ['small', 'large', 'huge']
});
var SizeStyle = new _parchment2.default.Attributor.Style('size', 'font-size', {
  scope: _parchment2.default.Scope.INLINE,
  whitelist: ['10px', '18px', '32px']
});

exports.SizeClass = SizeClass;
exports.SizeStyle = SizeStyle;

/***/ }),
/* 41 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


module.exports = {
  'align': {
    '': __webpack_require__(76),
    'center': __webpack_require__(77),
    'right': __webpack_require__(78),
    'justify': __webpack_require__(79)
  },
  'background': __webpack_require__(80),
  'blockquote': __webpack_require__(81),
  'bold': __webpack_require__(82),
  'clean': __webpack_require__(83),
  'code': __webpack_require__(58),
  'code-block': __webpack_require__(58),
  'color': __webpack_require__(84),
  'direction': {
    '': __webpack_require__(85),
    'rtl': __webpack_require__(86)
  },
  'float': {
    'center': __webpack_require__(87),
    'full': __webpack_require__(88),
    'left': __webpack_require__(89),
    'right': __webpack_require__(90)
  },
  'formula': __webpack_require__(91),
  'header': {
    '1': __webpack_require__(92),
    '2': __webpack_require__(93)
  },
  'italic': __webpack_require__(94),
  'image': __webpack_require__(95),
  'indent': {
    '+1': __webpack_require__(96),
    '-1': __webpack_require__(97)
  },
  'link': __webpack_require__(98),
  'list': {
    'ordered': __webpack_require__(99),
    'bullet': __webpack_require__(100),
    'check': __webpack_require__(101)
  },
  'script': {
    'sub': __webpack_require__(102),
    'super': __webpack_require__(103)
  },
  'strike': __webpack_require__(104),
  'underline': __webpack_require__(105),
  'video': __webpack_require__(106)
};

/***/ }),
/* 42 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getLastChangeIndex = exports.default = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __webpack_require__(5);

var _quill2 = _interopRequireDefault(_quill);

var _module = __webpack_require__(9);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var History = function (_Module) {
  _inherits(History, _Module);

  function History(quill, options) {
    _classCallCheck(this, History);

    var _this = _possibleConstructorReturn(this, (History.__proto__ || Object.getPrototypeOf(History)).call(this, quill, options));

    _this.lastRecorded = 0;
    _this.ignoreChange = false;
    _this.clear();
    _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function (eventName, delta, oldDelta, source) {
      if (eventName !== _quill2.default.events.TEXT_CHANGE || _this.ignoreChange) return;
      if (!_this.options.userOnly || source === _quill2.default.sources.USER) {
        _this.record(delta, oldDelta);
      } else {
        _this.transform(delta);
      }
    });
    _this.quill.keyboard.addBinding({ key: 'Z', shortKey: true }, _this.undo.bind(_this));
    _this.quill.keyboard.addBinding({ key: 'Z', shortKey: true, shiftKey: true }, _this.redo.bind(_this));
    if (/Win/i.test(navigator.platform)) {
      _this.quill.keyboard.addBinding({ key: 'Y', shortKey: true }, _this.redo.bind(_this));
    }
    return _this;
  }

  _createClass(History, [{
    key: 'change',
    value: function change(source, dest) {
      if (this.stack[source].length === 0) return;
      var delta = this.stack[source].pop();
      this.stack[dest].push(delta);
      this.lastRecorded = 0;
      this.ignoreChange = true;
      this.quill.updateContents(delta[source], _quill2.default.sources.USER);
      this.ignoreChange = false;
      var index = getLastChangeIndex(delta[source]);
      this.quill.setSelection(index);
    }
  }, {
    key: 'clear',
    value: function clear() {
      this.stack = { undo: [], redo: [] };
    }
  }, {
    key: 'cutoff',
    value: function cutoff() {
      this.lastRecorded = 0;
    }
  }, {
    key: 'record',
    value: function record(changeDelta, oldDelta) {
      if (changeDelta.ops.length === 0) return;
      this.stack.redo = [];
      var undoDelta = this.quill.getContents().diff(oldDelta);
      var timestamp = Date.now();
      if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {
        var delta = this.stack.undo.pop();
        undoDelta = undoDelta.compose(delta.undo);
        changeDelta = delta.redo.compose(changeDelta);
      } else {
        this.lastRecorded = timestamp;
      }
      this.stack.undo.push({
        redo: changeDelta,
        undo: undoDelta
      });
      if (this.stack.undo.length > this.options.maxStack) {
        this.stack.undo.shift();
      }
    }
  }, {
    key: 'redo',
    value: function redo() {
      this.change('redo', 'undo');
    }
  }, {
    key: 'transform',
    value: function transform(delta) {
      this.stack.undo.forEach(function (change) {
        change.undo = delta.transform(change.undo, true);
        change.redo = delta.transform(change.redo, true);
      });
      this.stack.redo.forEach(function (change) {
        change.undo = delta.transform(change.undo, true);
        change.redo = delta.transform(change.redo, true);
      });
    }
  }, {
    key: 'undo',
    value: function undo() {
      this.change('undo', 'redo');
    }
  }]);

  return History;
}(_module2.default);

History.DEFAULTS = {
  delay: 1000,
  maxStack: 100,
  userOnly: false
};

function endsWithNewlineChange(delta) {
  var lastOp = delta.ops[delta.ops.length - 1];
  if (lastOp == null) return false;
  if (lastOp.insert != null) {
    return typeof lastOp.insert === 'string' && lastOp.insert.endsWith('\\n');
  }
  if (lastOp.attributes != null) {
    return Object.keys(lastOp.attributes).some(function (attr) {
      return _parchment2.default.query(attr, _parchment2.default.Scope.BLOCK) != null;
    });
  }
  return false;
}

function getLastChangeIndex(delta) {
  var deleteLength = delta.reduce(function (length, op) {
    length += op.delete || 0;
    return length;
  }, 0);
  var changeIndex = delta.length() - deleteLength;
  if (endsWithNewlineChange(delta)) {
    changeIndex -= 1;
  }
  return changeIndex;
}

exports.default = History;
exports.getLastChangeIndex = getLastChangeIndex;

/***/ }),
/* 43 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BaseTooltip = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _extend = __webpack_require__(3);

var _extend2 = _interopRequireDefault(_extend);

var _quillDelta = __webpack_require__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _emitter = __webpack_require__(8);

var _emitter2 = _interopRequireDefault(_emitter);

var _keyboard = __webpack_require__(23);

var _keyboard2 = _interopRequireDefault(_keyboard);

var _theme = __webpack_require__(34);

var _theme2 = _interopRequireDefault(_theme);

var _colorPicker = __webpack_require__(59);

var _colorPicker2 = _interopRequireDefault(_colorPicker);

var _iconPicker = __webpack_require__(60);

var _iconPicker2 = _interopRequireDefault(_iconPicker);

var _picker = __webpack_require__(28);

var _picker2 = _interopRequireDefault(_picker);

var _tooltip = __webpack_require__(61);

var _tooltip2 = _interopRequireDefault(_tooltip);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ALIGNS = [false, 'center', 'right', 'justify'];

var COLORS = ["#000000", "#e60000", "#ff9900", "#ffff00", "#008a00", "#0066cc", "#9933ff", "#ffffff", "#facccc", "#ffebcc", "#ffffcc", "#cce8cc", "#cce0f5", "#ebd6ff", "#bbbbbb", "#f06666", "#ffc266", "#ffff66", "#66b966", "#66a3e0", "#c285ff", "#888888", "#a10000", "#b26b00", "#b2b200", "#006100", "#0047b2", "#6b24b2", "#444444", "#5c0000", "#663d00", "#666600", "#003700", "#002966", "#3d1466"];

var FONTS = [false, 'serif', 'monospace'];

var HEADERS = ['1', '2', '3', false];

var SIZES = ['small', false, 'large', 'huge'];

var BaseTheme = function (_Theme) {
  _inherits(BaseTheme, _Theme);

  function BaseTheme(quill, options) {
    _classCallCheck(this, BaseTheme);

    var _this = _possibleConstructorReturn(this, (BaseTheme.__proto__ || Object.getPrototypeOf(BaseTheme)).call(this, quill, options));

    var listener = function listener(e) {
      if (!document.body.contains(quill.root)) {
        return document.body.removeEventListener('click', listener);
      }
      if (_this.tooltip != null && !_this.tooltip.root.contains(e.target) && document.activeElement !== _this.tooltip.textbox && !_this.quill.hasFocus()) {
        _this.tooltip.hide();
      }
      if (_this.pickers != null) {
        _this.pickers.forEach(function (picker) {
          if (!picker.container.contains(e.target)) {
            picker.close();
          }
        });
      }
    };
    quill.emitter.listenDOM('click', document.body, listener);
    return _this;
  }

  _createClass(BaseTheme, [{
    key: 'addModule',
    value: function addModule(name) {
      var module = _get(BaseTheme.prototype.__proto__ || Object.getPrototypeOf(BaseTheme.prototype), 'addModule', this).call(this, name);
      if (name === 'toolbar') {
        this.extendToolbar(module);
      }
      return module;
    }
  }, {
    key: 'buildButtons',
    value: function buildButtons(buttons, icons) {
      buttons.forEach(function (button) {
        var className = button.getAttribute('class') || '';
        className.split(/\\s+/).forEach(function (name) {
          if (!name.startsWith('ql-')) return;
          name = name.slice('ql-'.length);
          if (icons[name] == null) return;
          if (name === 'direction') {
            button.innerHTML = icons[name][''] + icons[name]['rtl'];
          } else if (typeof icons[name] === 'string') {
            button.innerHTML = icons[name];
          } else {
            var value = button.value || '';
            if (value != null && icons[name][value]) {
              button.innerHTML = icons[name][value];
            }
          }
        });
      });
    }
  }, {
    key: 'buildPickers',
    value: function buildPickers(selects, icons) {
      var _this2 = this;

      this.pickers = selects.map(function (select) {
        if (select.classList.contains('ql-align')) {
          if (select.querySelector('option') == null) {
            fillSelect(select, ALIGNS);
          }
          return new _iconPicker2.default(select, icons.align);
        } else if (select.classList.contains('ql-background') || select.classList.contains('ql-color')) {
          var format = select.classList.contains('ql-background') ? 'background' : 'color';
          if (select.querySelector('option') == null) {
            fillSelect(select, COLORS, format === 'background' ? '#ffffff' : '#000000');
          }
          return new _colorPicker2.default(select, icons[format]);
        } else {
          if (select.querySelector('option') == null) {
            if (select.classList.contains('ql-font')) {
              fillSelect(select, FONTS);
            } else if (select.classList.contains('ql-header')) {
              fillSelect(select, HEADERS);
            } else if (select.classList.contains('ql-size')) {
              fillSelect(select, SIZES);
            }
          }
          return new _picker2.default(select);
        }
      });
      var update = function update() {
        _this2.pickers.forEach(function (picker) {
          picker.update();
        });
      };
      this.quill.on(_emitter2.default.events.EDITOR_CHANGE, update);
    }
  }]);

  return BaseTheme;
}(_theme2.default);

BaseTheme.DEFAULTS = (0, _extend2.default)(true, {}, _theme2.default.DEFAULTS, {
  modules: {
    toolbar: {
      handlers: {
        formula: function formula() {
          this.quill.theme.tooltip.edit('formula');
        },
        image: function image() {
          var _this3 = this;

          var fileInput = this.container.querySelector('input.ql-image[type=file]');
          if (fileInput == null) {
            fileInput = document.createElement('input');
            fileInput.setAttribute('type', 'file');
            fileInput.setAttribute('accept', 'image/png, image/gif, image/jpeg, image/bmp, image/x-icon');
            fileInput.classList.add('ql-image');
            fileInput.addEventListener('change', function () {
              if (fileInput.files != null && fileInput.files[0] != null) {
                var reader = new FileReader();
                reader.onload = function (e) {
                  var range = _this3.quill.getSelection(true);
                  _this3.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert({ image: e.target.result }), _emitter2.default.sources.USER);
                  _this3.quill.setSelection(range.index + 1, _emitter2.default.sources.SILENT);
                  fileInput.value = "";
                };
                reader.readAsDataURL(fileInput.files[0]);
              }
            });
            this.container.appendChild(fileInput);
          }
          fileInput.click();
        },
        video: function video() {
          this.quill.theme.tooltip.edit('video');
        }
      }
    }
  }
});

var BaseTooltip = function (_Tooltip) {
  _inherits(BaseTooltip, _Tooltip);

  function BaseTooltip(quill, boundsContainer) {
    _classCallCheck(this, BaseTooltip);

    var _this4 = _possibleConstructorReturn(this, (BaseTooltip.__proto__ || Object.getPrototypeOf(BaseTooltip)).call(this, quill, boundsContainer));

    _this4.textbox = _this4.root.querySelector('input[type="text"]');
    _this4.listen();
    return _this4;
  }

  _createClass(BaseTooltip, [{
    key: 'listen',
    value: function listen() {
      var _this5 = this;

      this.textbox.addEventListener('keydown', function (event) {
        if (_keyboard2.default.match(event, 'enter')) {
          _this5.save();
          event.preventDefault();
        } else if (_keyboard2.default.match(event, 'escape')) {
          _this5.cancel();
          event.preventDefault();
        }
      });
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      this.hide();
    }
  }, {
    key: 'edit',
    value: function edit() {
      var mode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'link';
      var preview = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;

      this.root.classList.remove('ql-hidden');
      this.root.classList.add('ql-editing');
      if (preview != null) {
        this.textbox.value = preview;
      } else if (mode !== this.root.getAttribute('data-mode')) {
        this.textbox.value = '';
      }
      this.position(this.quill.getBounds(this.quill.selection.savedRange));
      this.textbox.select();
      this.textbox.setAttribute('placeholder', this.textbox.getAttribute('data-' + mode) || '');
      this.root.setAttribute('data-mode', mode);
    }
  }, {
    key: 'restoreFocus',
    value: function restoreFocus() {
      var scrollTop = this.quill.scrollingContainer.scrollTop;
      this.quill.focus();
      this.quill.scrollingContainer.scrollTop = scrollTop;
    }
  }, {
    key: 'save',
    value: function save() {
      var value = this.textbox.value;
      switch (this.root.getAttribute('data-mode')) {
        case 'link':
          {
            var scrollTop = this.quill.root.scrollTop;
            if (this.linkRange) {
              this.quill.formatText(this.linkRange, 'link', value, _emitter2.default.sources.USER);
              delete this.linkRange;
            } else {
              this.restoreFocus();
              this.quill.format('link', value, _emitter2.default.sources.USER);
            }
            this.quill.root.scrollTop = scrollTop;
            break;
          }
        case 'video':
          {
            value = extractVideoUrl(value);
          } // eslint-disable-next-line no-fallthrough
        case 'formula':
          {
            if (!value) break;
            var range = this.quill.getSelection(true);
            if (range != null) {
              var index = range.index + range.length;
              this.quill.insertEmbed(index, this.root.getAttribute('data-mode'), value, _emitter2.default.sources.USER);
              if (this.root.getAttribute('data-mode') === 'formula') {
                this.quill.insertText(index + 1, ' ', _emitter2.default.sources.USER);
              }
              this.quill.setSelection(index + 2, _emitter2.default.sources.USER);
            }
            break;
          }
        default:
      }
      this.textbox.value = '';
      this.hide();
    }
  }]);

  return BaseTooltip;
}(_tooltip2.default);

function extractVideoUrl(url) {
  var match = url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtube\\.com\\/watch.*v=([a-zA-Z0-9_-]+)/) || url.match(/^(?:(https?):\\/\\/)?(?:(?:www|m)\\.)?youtu\\.be\\/([a-zA-Z0-9_-]+)/);
  if (match) {
    return (match[1] || 'https') + '://www.youtube.com/embed/' + match[2] + '?showinfo=0';
  }
  if (match = url.match(/^(?:(https?):\\/\\/)?(?:www\\.)?vimeo\\.com\\/(\\d+)/)) {
    // eslint-disable-line no-cond-assign
    return (match[1] || 'https') + '://player.vimeo.com/video/' + match[2] + '/';
  }
  return url;
}

function fillSelect(select, values) {
  var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  values.forEach(function (value) {
    var option = document.createElement('option');
    if (value === defaultValue) {
      option.setAttribute('selected', 'selected');
    } else {
      option.setAttribute('value', value);
    }
    select.appendChild(option);
  });
}

exports.BaseTooltip = BaseTooltip;
exports.default = BaseTheme;

/***/ }),
/* 44 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

Object.defineProperty(exports, "__esModule", { value: true });
var LinkedList = /** @class */ (function () {
    function LinkedList() {
        this.head = this.tail = null;
        this.length = 0;
    }
    LinkedList.prototype.append = function () {
        var nodes = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            nodes[_i] = arguments[_i];
        }
        this.insertBefore(nodes[0], null);
        if (nodes.length > 1) {
            this.append.apply(this, nodes.slice(1));
        }
    };
    LinkedList.prototype.contains = function (node) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            if (cur === node)
                return true;
        }
        return false;
    };
    LinkedList.prototype.insertBefore = function (node, refNode) {
        if (!node)
            return;
        node.next = refNode;
        if (refNode != null) {
            node.prev = refNode.prev;
            if (refNode.prev != null) {
                refNode.prev.next = node;
            }
            refNode.prev = node;
            if (refNode === this.head) {
                this.head = node;
            }
        }
        else if (this.tail != null) {
            this.tail.next = node;
            node.prev = this.tail;
            this.tail = node;
        }
        else {
            node.prev = null;
            this.head = this.tail = node;
        }
        this.length += 1;
    };
    LinkedList.prototype.offset = function (target) {
        var index = 0, cur = this.head;
        while (cur != null) {
            if (cur === target)
                return index;
            index += cur.length();
            cur = cur.next;
        }
        return -1;
    };
    LinkedList.prototype.remove = function (node) {
        if (!this.contains(node))
            return;
        if (node.prev != null)
            node.prev.next = node.next;
        if (node.next != null)
            node.next.prev = node.prev;
        if (node === this.head)
            this.head = node.next;
        if (node === this.tail)
            this.tail = node.prev;
        this.length -= 1;
    };
    LinkedList.prototype.iterator = function (curNode) {
        if (curNode === void 0) { curNode = this.head; }
        // TODO use yield when we can
        return function () {
            var ret = curNode;
            if (curNode != null)
                curNode = curNode.next;
            return ret;
        };
    };
    LinkedList.prototype.find = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        var cur, next = this.iterator();
        while ((cur = next())) {
            var length = cur.length();
            if (index < length ||
                (inclusive && index === length && (cur.next == null || cur.next.length() !== 0))) {
                return [cur, index];
            }
            index -= length;
        }
        return [null, 0];
    };
    LinkedList.prototype.forEach = function (callback) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            callback(cur);
        }
    };
    LinkedList.prototype.forEachAt = function (index, length, callback) {
        if (length <= 0)
            return;
        var _a = this.find(index), startNode = _a[0], offset = _a[1];
        var cur, curIndex = index - offset, next = this.iterator(startNode);
        while ((cur = next()) && curIndex < index + length) {
            var curLength = cur.length();
            if (index > curIndex) {
                callback(cur, index - curIndex, Math.min(length, curIndex + curLength - index));
            }
            else {
                callback(cur, 0, Math.min(curLength, index + length - curIndex));
            }
            curIndex += curLength;
        }
    };
    LinkedList.prototype.map = function (callback) {
        return this.reduce(function (memo, cur) {
            memo.push(callback(cur));
            return memo;
        }, []);
    };
    LinkedList.prototype.reduce = function (callback, memo) {
        var cur, next = this.iterator();
        while ((cur = next())) {
            memo = callback(memo, cur);
        }
        return memo;
    };
    return LinkedList;
}());
exports.default = LinkedList;


/***/ }),
/* 45 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var container_1 = __webpack_require__(17);
var Registry = __webpack_require__(1);
var OBSERVER_CONFIG = {
    attributes: true,
    characterData: true,
    characterDataOldValue: true,
    childList: true,
    subtree: true,
};
var MAX_OPTIMIZE_ITERATIONS = 100;
var ScrollBlot = /** @class */ (function (_super) {
    __extends(ScrollBlot, _super);
    function ScrollBlot(node) {
        var _this = _super.call(this, node) || this;
        _this.scroll = _this;
        _this.observer = new MutationObserver(function (mutations) {
            _this.update(mutations);
        });
        _this.observer.observe(_this.domNode, OBSERVER_CONFIG);
        _this.attach();
        return _this;
    }
    ScrollBlot.prototype.detach = function () {
        _super.prototype.detach.call(this);
        this.observer.disconnect();
    };
    ScrollBlot.prototype.deleteAt = function (index, length) {
        this.update();
        if (index === 0 && length === this.length()) {
            this.children.forEach(function (child) {
                child.remove();
            });
        }
        else {
            _super.prototype.deleteAt.call(this, index, length);
        }
    };
    ScrollBlot.prototype.formatAt = function (index, length, name, value) {
        this.update();
        _super.prototype.formatAt.call(this, index, length, name, value);
    };
    ScrollBlot.prototype.insertAt = function (index, value, def) {
        this.update();
        _super.prototype.insertAt.call(this, index, value, def);
    };
    ScrollBlot.prototype.optimize = function (mutations, context) {
        var _this = this;
        if (mutations === void 0) { mutations = []; }
        if (context === void 0) { context = {}; }
        _super.prototype.optimize.call(this, context);
        // We must modify mutations directly, cannot make copy and then modify
        var records = [].slice.call(this.observer.takeRecords());
        // Array.push currently seems to be implemented by a non-tail recursive function
        // so we cannot just mutations.push.apply(mutations, this.observer.takeRecords());
        while (records.length > 0)
            mutations.push(records.pop());
        // TODO use WeakMap
        var mark = function (blot, markParent) {
            if (markParent === void 0) { markParent = true; }
            if (blot == null || blot === _this)
                return;
            if (blot.domNode.parentNode == null)
                return;
            // @ts-ignore
            if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations = [];
            }
            if (markParent)
                mark(blot.parent);
        };
        var optimize = function (blot) {
            // Post-order traversal
            if (
            // @ts-ignore
            blot.domNode[Registry.DATA_KEY] == null ||
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations == null) {
                return;
            }
            if (blot instanceof container_1.default) {
                blot.children.forEach(optimize);
            }
            blot.optimize(context);
        };
        var remaining = mutations;
        for (var i = 0; remaining.length > 0; i += 1) {
            if (i >= MAX_OPTIMIZE_ITERATIONS) {
                throw new Error('[Parchment] Maximum optimize iterations reached');
            }
            remaining.forEach(function (mutation) {
                var blot = Registry.find(mutation.target, true);
                if (blot == null)
                    return;
                if (blot.domNode === mutation.target) {
                    if (mutation.type === 'childList') {
                        mark(Registry.find(mutation.previousSibling, false));
                        [].forEach.call(mutation.addedNodes, function (node) {
                            var child = Registry.find(node, false);
                            mark(child, false);
                            if (child instanceof container_1.default) {
                                child.children.forEach(function (grandChild) {
                                    mark(grandChild, false);
                                });
                            }
                        });
                    }
                    else if (mutation.type === 'attributes') {
                        mark(blot.prev);
                    }
                }
                mark(blot);
            });
            this.children.forEach(optimize);
            remaining = [].slice.call(this.observer.takeRecords());
            records = remaining.slice();
            while (records.length > 0)
                mutations.push(records.pop());
        }
    };
    ScrollBlot.prototype.update = function (mutations, context) {
        var _this = this;
        if (context === void 0) { context = {}; }
        mutations = mutations || this.observer.takeRecords();
        // TODO use WeakMap
        mutations
            .map(function (mutation) {
            var blot = Registry.find(mutation.target, true);
            if (blot == null)
                return null;
            // @ts-ignore
            if (blot.domNode[Registry.DATA_KEY].mutations == null) {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations = [mutation];
                return blot;
            }
            else {
                // @ts-ignore
                blot.domNode[Registry.DATA_KEY].mutations.push(mutation);
                return null;
            }
        })
            .forEach(function (blot) {
            if (blot == null ||
                blot === _this ||
                //@ts-ignore
                blot.domNode[Registry.DATA_KEY] == null)
                return;
            // @ts-ignore
            blot.update(blot.domNode[Registry.DATA_KEY].mutations || [], context);
        });
        // @ts-ignore
        if (this.domNode[Registry.DATA_KEY].mutations != null) {
            // @ts-ignore
            _super.prototype.update.call(this, this.domNode[Registry.DATA_KEY].mutations, context);
        }
        this.optimize(mutations, context);
    };
    ScrollBlot.blotName = 'scroll';
    ScrollBlot.defaultChild = 'block';
    ScrollBlot.scope = Registry.Scope.BLOCK_BLOT;
    ScrollBlot.tagName = 'DIV';
    return ScrollBlot;
}(container_1.default));
exports.default = ScrollBlot;


/***/ }),
/* 46 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var format_1 = __webpack_require__(18);
var Registry = __webpack_require__(1);
// Shallow object comparison
function isEqual(obj1, obj2) {
    if (Object.keys(obj1).length !== Object.keys(obj2).length)
        return false;
    // @ts-ignore
    for (var prop in obj1) {
        // @ts-ignore
        if (obj1[prop] !== obj2[prop])
            return false;
    }
    return true;
}
var InlineBlot = /** @class */ (function (_super) {
    __extends(InlineBlot, _super);
    function InlineBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    InlineBlot.formats = function (domNode) {
        if (domNode.tagName === InlineBlot.tagName)
            return undefined;
        return _super.formats.call(this, domNode);
    };
    InlineBlot.prototype.format = function (name, value) {
        var _this = this;
        if (name === this.statics.blotName && !value) {
            this.children.forEach(function (child) {
                if (!(child instanceof format_1.default)) {
                    child = child.wrap(InlineBlot.blotName, true);
                }
                _this.attributes.copy(child);
            });
            this.unwrap();
        }
        else {
            _super.prototype.format.call(this, name, value);
        }
    };
    InlineBlot.prototype.formatAt = function (index, length, name, value) {
        if (this.formats()[name] != null || Registry.query(name, Registry.Scope.ATTRIBUTE)) {
            var blot = this.isolate(index, length);
            blot.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    InlineBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        var formats = this.formats();
        if (Object.keys(formats).length === 0) {
            return this.unwrap(); // unformatted span
        }
        var next = this.next;
        if (next instanceof InlineBlot && next.prev === this && isEqual(formats, next.formats())) {
            next.moveChildren(this);
            next.remove();
        }
    };
    InlineBlot.blotName = 'inline';
    InlineBlot.scope = Registry.Scope.INLINE_BLOT;
    InlineBlot.tagName = 'SPAN';
    return InlineBlot;
}(format_1.default));
exports.default = InlineBlot;


/***/ }),
/* 47 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var format_1 = __webpack_require__(18);
var Registry = __webpack_require__(1);
var BlockBlot = /** @class */ (function (_super) {
    __extends(BlockBlot, _super);
    function BlockBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    BlockBlot.formats = function (domNode) {
        var tagName = Registry.query(BlockBlot.blotName).tagName;
        if (domNode.tagName === tagName)
            return undefined;
        return _super.formats.call(this, domNode);
    };
    BlockBlot.prototype.format = function (name, value) {
        if (Registry.query(name, Registry.Scope.BLOCK) == null) {
            return;
        }
        else if (name === this.statics.blotName && !value) {
            this.replaceWith(BlockBlot.blotName);
        }
        else {
            _super.prototype.format.call(this, name, value);
        }
    };
    BlockBlot.prototype.formatAt = function (index, length, name, value) {
        if (Registry.query(name, Registry.Scope.BLOCK) != null) {
            this.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    BlockBlot.prototype.insertAt = function (index, value, def) {
        if (def == null || Registry.query(value, Registry.Scope.INLINE) != null) {
            // Insert text or inline
            _super.prototype.insertAt.call(this, index, value, def);
        }
        else {
            var after = this.split(index);
            var blot = Registry.create(value, def);
            after.parent.insertBefore(blot, after);
        }
    };
    BlockBlot.prototype.update = function (mutations, context) {
        if (navigator.userAgent.match(/Trident/)) {
            this.build();
        }
        else {
            _super.prototype.update.call(this, mutations, context);
        }
    };
    BlockBlot.blotName = 'block';
    BlockBlot.scope = Registry.Scope.BLOCK_BLOT;
    BlockBlot.tagName = 'P';
    return BlockBlot;
}(format_1.default));
exports.default = BlockBlot;


/***/ }),
/* 48 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var leaf_1 = __webpack_require__(19);
var EmbedBlot = /** @class */ (function (_super) {
    __extends(EmbedBlot, _super);
    function EmbedBlot() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    EmbedBlot.formats = function (domNode) {
        return undefined;
    };
    EmbedBlot.prototype.format = function (name, value) {
        // super.formatAt wraps, which is what we want in general,
        // but this allows subclasses to overwrite for formats
        // that just apply to particular embeds
        _super.prototype.formatAt.call(this, 0, this.length(), name, value);
    };
    EmbedBlot.prototype.formatAt = function (index, length, name, value) {
        if (index === 0 && length === this.length()) {
            this.format(name, value);
        }
        else {
            _super.prototype.formatAt.call(this, index, length, name, value);
        }
    };
    EmbedBlot.prototype.formats = function () {
        return this.statics.formats(this.domNode);
    };
    return EmbedBlot;
}(leaf_1.default));
exports.default = EmbedBlot;


/***/ }),
/* 49 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var leaf_1 = __webpack_require__(19);
var Registry = __webpack_require__(1);
var TextBlot = /** @class */ (function (_super) {
    __extends(TextBlot, _super);
    function TextBlot(node) {
        var _this = _super.call(this, node) || this;
        _this.text = _this.statics.value(_this.domNode);
        return _this;
    }
    TextBlot.create = function (value) {
        return document.createTextNode(value);
    };
    TextBlot.value = function (domNode) {
        var text = domNode.data;
        // @ts-ignore
        if (text['normalize'])
            text = text['normalize']();
        return text;
    };
    TextBlot.prototype.deleteAt = function (index, length) {
        this.domNode.data = this.text = this.text.slice(0, index) + this.text.slice(index + length);
    };
    TextBlot.prototype.index = function (node, offset) {
        if (this.domNode === node) {
            return offset;
        }
        return -1;
    };
    TextBlot.prototype.insertAt = function (index, value, def) {
        if (def == null) {
            this.text = this.text.slice(0, index) + value + this.text.slice(index);
            this.domNode.data = this.text;
        }
        else {
            _super.prototype.insertAt.call(this, index, value, def);
        }
    };
    TextBlot.prototype.length = function () {
        return this.text.length;
    };
    TextBlot.prototype.optimize = function (context) {
        _super.prototype.optimize.call(this, context);
        this.text = this.statics.value(this.domNode);
        if (this.text.length === 0) {
            this.remove();
        }
        else if (this.next instanceof TextBlot && this.next.prev === this) {
            this.insertAt(this.length(), this.next.value());
            this.next.remove();
        }
    };
    TextBlot.prototype.position = function (index, inclusive) {
        if (inclusive === void 0) { inclusive = false; }
        return [this.domNode, index];
    };
    TextBlot.prototype.split = function (index, force) {
        if (force === void 0) { force = false; }
        if (!force) {
            if (index === 0)
                return this;
            if (index === this.length())
                return this.next;
        }
        var after = Registry.create(this.domNode.splitText(index));
        this.parent.insertBefore(after, this.next);
        this.text = this.statics.value(this.domNode);
        return after;
    };
    TextBlot.prototype.update = function (mutations, context) {
        var _this = this;
        if (mutations.some(function (mutation) {
            return mutation.type === 'characterData' && mutation.target === _this.domNode;
        })) {
            this.text = this.statics.value(this.domNode);
        }
    };
    TextBlot.prototype.value = function () {
        return this.text;
    };
    TextBlot.blotName = 'text';
    TextBlot.scope = Registry.Scope.INLINE_BLOT;
    return TextBlot;
}(leaf_1.default));
exports.default = TextBlot;


/***/ }),
/* 50 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elem = document.createElement('div');
elem.classList.toggle('test-class', false);
if (elem.classList.contains('test-class')) {
  var _toggle = DOMTokenList.prototype.toggle;
  DOMTokenList.prototype.toggle = function (token, force) {
    if (arguments.length > 1 && !this.contains(token) === !force) {
      return force;
    } else {
      return _toggle.call(this, token);
    }
  };
}

if (!String.prototype.startsWith) {
  String.prototype.startsWith = function (searchString, position) {
    position = position || 0;
    return this.substr(position, searchString.length) === searchString;
  };
}

if (!String.prototype.endsWith) {
  String.prototype.endsWith = function (searchString, position) {
    var subjectString = this.toString();
    if (typeof position !== 'number' || !isFinite(position) || Math.floor(position) !== position || position > subjectString.length) {
      position = subjectString.length;
    }
    position -= searchString.length;
    var lastIndex = subjectString.indexOf(searchString, position);
    return lastIndex !== -1 && lastIndex === position;
  };
}

if (!Array.prototype.find) {
  Object.defineProperty(Array.prototype, "find", {
    value: function value(predicate) {
      if (this === null) {
        throw new TypeError('Array.prototype.find called on null or undefined');
      }
      if (typeof predicate !== 'function') {
        throw new TypeError('predicate must be a function');
      }
      var list = Object(this);
      var length = list.length >>> 0;
      var thisArg = arguments[1];
      var value;

      for (var i = 0; i < length; i++) {
        value = list[i];
        if (predicate.call(thisArg, value, i, list)) {
          return value;
        }
      }
      return undefined;
    }
  });
}

document.addEventListener("DOMContentLoaded", function () {
  // Disable resizing in Firefox
  document.execCommand("enableObjectResizing", false, false);
  // Disable automatic linkifying in IE11
  document.execCommand("autoUrlDetect", false, false);
});

/***/ }),
/* 51 */
/***/ (function(module, exports) {

/**
 * This library modifies the diff-patch-match library by Neil Fraser
 * by removing the patch and match functionality and certain advanced
 * options in the diff function. The original license is as follows:
 *
 * ===
 *
 * Diff Match and Patch
 *
 * Copyright 2006 Google Inc.
 * http://code.google.com/p/google-diff-match-patch/
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


/**
 * The data structure representing a diff is an array of tuples:
 * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]
 * which means: delete 'Hello', add 'Goodbye' and keep ' world.'
 */
var DIFF_DELETE = -1;
var DIFF_INSERT = 1;
var DIFF_EQUAL = 0;


/**
 * Find the differences between two texts.  Simplifies the problem by stripping
 * any common prefix or suffix off the texts before diffing.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @param {Int} cursor_pos Expected edit position in text1 (optional)
 * @return {Array} Array of diff tuples.
 */
function diff_main(text1, text2, cursor_pos) {
  // Check for equality (speedup).
  if (text1 == text2) {
    if (text1) {
      return [[DIFF_EQUAL, text1]];
    }
    return [];
  }

  // Check cursor_pos within bounds
  if (cursor_pos < 0 || text1.length < cursor_pos) {
    cursor_pos = null;
  }

  // Trim off common prefix (speedup).
  var commonlength = diff_commonPrefix(text1, text2);
  var commonprefix = text1.substring(0, commonlength);
  text1 = text1.substring(commonlength);
  text2 = text2.substring(commonlength);

  // Trim off common suffix (speedup).
  commonlength = diff_commonSuffix(text1, text2);
  var commonsuffix = text1.substring(text1.length - commonlength);
  text1 = text1.substring(0, text1.length - commonlength);
  text2 = text2.substring(0, text2.length - commonlength);

  // Compute the diff on the middle block.
  var diffs = diff_compute_(text1, text2);

  // Restore the prefix and suffix.
  if (commonprefix) {
    diffs.unshift([DIFF_EQUAL, commonprefix]);
  }
  if (commonsuffix) {
    diffs.push([DIFF_EQUAL, commonsuffix]);
  }
  diff_cleanupMerge(diffs);
  if (cursor_pos != null) {
    diffs = fix_cursor(diffs, cursor_pos);
  }
  diffs = fix_emoji(diffs);
  return diffs;
};


/**
 * Find the differences between two texts.  Assumes that the texts do not
 * have any common prefix or suffix.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @return {Array} Array of diff tuples.
 */
function diff_compute_(text1, text2) {
  var diffs;

  if (!text1) {
    // Just add some text (speedup).
    return [[DIFF_INSERT, text2]];
  }

  if (!text2) {
    // Just delete some text (speedup).
    return [[DIFF_DELETE, text1]];
  }

  var longtext = text1.length > text2.length ? text1 : text2;
  var shorttext = text1.length > text2.length ? text2 : text1;
  var i = longtext.indexOf(shorttext);
  if (i != -1) {
    // Shorter text is inside the longer text (speedup).
    diffs = [[DIFF_INSERT, longtext.substring(0, i)],
             [DIFF_EQUAL, shorttext],
             [DIFF_INSERT, longtext.substring(i + shorttext.length)]];
    // Swap insertions for deletions if diff is reversed.
    if (text1.length > text2.length) {
      diffs[0][0] = diffs[2][0] = DIFF_DELETE;
    }
    return diffs;
  }

  if (shorttext.length == 1) {
    // Single character string.
    // After the previous speedup, the character can't be an equality.
    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
  }

  // Check to see if the problem can be split in two.
  var hm = diff_halfMatch_(text1, text2);
  if (hm) {
    // A half-match was found, sort out the return data.
    var text1_a = hm[0];
    var text1_b = hm[1];
    var text2_a = hm[2];
    var text2_b = hm[3];
    var mid_common = hm[4];
    // Send both pairs off for separate processing.
    var diffs_a = diff_main(text1_a, text2_a);
    var diffs_b = diff_main(text1_b, text2_b);
    // Merge the results.
    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);
  }

  return diff_bisect_(text1, text2);
};


/**
 * Find the 'middle snake' of a diff, split the problem in two
 * and return the recursively constructed diff.
 * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @return {Array} Array of diff tuples.
 * @private
 */
function diff_bisect_(text1, text2) {
  // Cache the text lengths to prevent multiple calls.
  var text1_length = text1.length;
  var text2_length = text2.length;
  var max_d = Math.ceil((text1_length + text2_length) / 2);
  var v_offset = max_d;
  var v_length = 2 * max_d;
  var v1 = new Array(v_length);
  var v2 = new Array(v_length);
  // Setting all elements to -1 is faster in Chrome & Firefox than mixing
  // integers and undefined.
  for (var x = 0; x < v_length; x++) {
    v1[x] = -1;
    v2[x] = -1;
  }
  v1[v_offset + 1] = 0;
  v2[v_offset + 1] = 0;
  var delta = text1_length - text2_length;
  // If the total number of characters is odd, then the front path will collide
  // with the reverse path.
  var front = (delta % 2 != 0);
  // Offsets for start and end of k loop.
  // Prevents mapping of space beyond the grid.
  var k1start = 0;
  var k1end = 0;
  var k2start = 0;
  var k2end = 0;
  for (var d = 0; d < max_d; d++) {
    // Walk the front path one step.
    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {
      var k1_offset = v_offset + k1;
      var x1;
      if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {
        x1 = v1[k1_offset + 1];
      } else {
        x1 = v1[k1_offset - 1] + 1;
      }
      var y1 = x1 - k1;
      while (x1 < text1_length && y1 < text2_length &&
             text1.charAt(x1) == text2.charAt(y1)) {
        x1++;
        y1++;
      }
      v1[k1_offset] = x1;
      if (x1 > text1_length) {
        // Ran off the right of the graph.
        k1end += 2;
      } else if (y1 > text2_length) {
        // Ran off the bottom of the graph.
        k1start += 2;
      } else if (front) {
        var k2_offset = v_offset + delta - k1;
        if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {
          // Mirror x2 onto top-left coordinate system.
          var x2 = text1_length - v2[k2_offset];
          if (x1 >= x2) {
            // Overlap detected.
            return diff_bisectSplit_(text1, text2, x1, y1);
          }
        }
      }
    }

    // Walk the reverse path one step.
    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {
      var k2_offset = v_offset + k2;
      var x2;
      if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {
        x2 = v2[k2_offset + 1];
      } else {
        x2 = v2[k2_offset - 1] + 1;
      }
      var y2 = x2 - k2;
      while (x2 < text1_length && y2 < text2_length &&
             text1.charAt(text1_length - x2 - 1) ==
             text2.charAt(text2_length - y2 - 1)) {
        x2++;
        y2++;
      }
      v2[k2_offset] = x2;
      if (x2 > text1_length) {
        // Ran off the left of the graph.
        k2end += 2;
      } else if (y2 > text2_length) {
        // Ran off the top of the graph.
        k2start += 2;
      } else if (!front) {
        var k1_offset = v_offset + delta - k2;
        if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {
          var x1 = v1[k1_offset];
          var y1 = v_offset + x1 - k1_offset;
          // Mirror x2 onto top-left coordinate system.
          x2 = text1_length - x2;
          if (x1 >= x2) {
            // Overlap detected.
            return diff_bisectSplit_(text1, text2, x1, y1);
          }
        }
      }
    }
  }
  // Diff took too long and hit the deadline or
  // number of diffs equals number of characters, no commonality at all.
  return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];
};


/**
 * Given the location of the 'middle snake', split the diff in two parts
 * and recurse.
 * @param {string} text1 Old string to be diffed.
 * @param {string} text2 New string to be diffed.
 * @param {number} x Index of split point in text1.
 * @param {number} y Index of split point in text2.
 * @return {Array} Array of diff tuples.
 */
function diff_bisectSplit_(text1, text2, x, y) {
  var text1a = text1.substring(0, x);
  var text2a = text2.substring(0, y);
  var text1b = text1.substring(x);
  var text2b = text2.substring(y);

  // Compute both diffs serially.
  var diffs = diff_main(text1a, text2a);
  var diffsb = diff_main(text1b, text2b);

  return diffs.concat(diffsb);
};


/**
 * Determine the common prefix of two strings.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {number} The number of characters common to the start of each
 *     string.
 */
function diff_commonPrefix(text1, text2) {
  // Quick check for common null cases.
  if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {
    return 0;
  }
  // Binary search.
  // Performance analysis: http://neil.fraser.name/news/2007/10/09/
  var pointermin = 0;
  var pointermax = Math.min(text1.length, text2.length);
  var pointermid = pointermax;
  var pointerstart = 0;
  while (pointermin < pointermid) {
    if (text1.substring(pointerstart, pointermid) ==
        text2.substring(pointerstart, pointermid)) {
      pointermin = pointermid;
      pointerstart = pointermin;
    } else {
      pointermax = pointermid;
    }
    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
  }
  return pointermid;
};


/**
 * Determine the common suffix of two strings.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {number} The number of characters common to the end of each string.
 */
function diff_commonSuffix(text1, text2) {
  // Quick check for common null cases.
  if (!text1 || !text2 ||
      text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {
    return 0;
  }
  // Binary search.
  // Performance analysis: http://neil.fraser.name/news/2007/10/09/
  var pointermin = 0;
  var pointermax = Math.min(text1.length, text2.length);
  var pointermid = pointermax;
  var pointerend = 0;
  while (pointermin < pointermid) {
    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==
        text2.substring(text2.length - pointermid, text2.length - pointerend)) {
      pointermin = pointermid;
      pointerend = pointermin;
    } else {
      pointermax = pointermid;
    }
    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);
  }
  return pointermid;
};


/**
 * Do the two texts share a substring which is at least half the length of the
 * longer text?
 * This speedup can produce non-minimal diffs.
 * @param {string} text1 First string.
 * @param {string} text2 Second string.
 * @return {Array.<string>} Five element Array, containing the prefix of
 *     text1, the suffix of text1, the prefix of text2, the suffix of
 *     text2 and the common middle.  Or null if there was no match.
 */
function diff_halfMatch_(text1, text2) {
  var longtext = text1.length > text2.length ? text1 : text2;
  var shorttext = text1.length > text2.length ? text2 : text1;
  if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {
    return null;  // Pointless.
  }

  /**
   * Does a substring of shorttext exist within longtext such that the substring
   * is at least half the length of longtext?
   * Closure, but does not reference any external variables.
   * @param {string} longtext Longer string.
   * @param {string} shorttext Shorter string.
   * @param {number} i Start index of quarter length substring within longtext.
   * @return {Array.<string>} Five element Array, containing the prefix of
   *     longtext, the suffix of longtext, the prefix of shorttext, the suffix
   *     of shorttext and the common middle.  Or null if there was no match.
   * @private
   */
  function diff_halfMatchI_(longtext, shorttext, i) {
    // Start with a 1/4 length substring at position i as a seed.
    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));
    var j = -1;
    var best_common = '';
    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;
    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {
      var prefixLength = diff_commonPrefix(longtext.substring(i),
                                           shorttext.substring(j));
      var suffixLength = diff_commonSuffix(longtext.substring(0, i),
                                           shorttext.substring(0, j));
      if (best_common.length < suffixLength + prefixLength) {
        best_common = shorttext.substring(j - suffixLength, j) +
            shorttext.substring(j, j + prefixLength);
        best_longtext_a = longtext.substring(0, i - suffixLength);
        best_longtext_b = longtext.substring(i + prefixLength);
        best_shorttext_a = shorttext.substring(0, j - suffixLength);
        best_shorttext_b = shorttext.substring(j + prefixLength);
      }
    }
    if (best_common.length * 2 >= longtext.length) {
      return [best_longtext_a, best_longtext_b,
              best_shorttext_a, best_shorttext_b, best_common];
    } else {
      return null;
    }
  }

  // First check if the second quarter is the seed for a half-match.
  var hm1 = diff_halfMatchI_(longtext, shorttext,
                             Math.ceil(longtext.length / 4));
  // Check again based on the third quarter.
  var hm2 = diff_halfMatchI_(longtext, shorttext,
                             Math.ceil(longtext.length / 2));
  var hm;
  if (!hm1 && !hm2) {
    return null;
  } else if (!hm2) {
    hm = hm1;
  } else if (!hm1) {
    hm = hm2;
  } else {
    // Both matched.  Select the longest.
    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;
  }

  // A half-match was found, sort out the return data.
  var text1_a, text1_b, text2_a, text2_b;
  if (text1.length > text2.length) {
    text1_a = hm[0];
    text1_b = hm[1];
    text2_a = hm[2];
    text2_b = hm[3];
  } else {
    text2_a = hm[0];
    text2_b = hm[1];
    text1_a = hm[2];
    text1_b = hm[3];
  }
  var mid_common = hm[4];
  return [text1_a, text1_b, text2_a, text2_b, mid_common];
};


/**
 * Reorder and merge like edit sections.  Merge equalities.
 * Any edit section can move as long as it doesn't cross an equality.
 * @param {Array} diffs Array of diff tuples.
 */
function diff_cleanupMerge(diffs) {
  diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.
  var pointer = 0;
  var count_delete = 0;
  var count_insert = 0;
  var text_delete = '';
  var text_insert = '';
  var commonlength;
  while (pointer < diffs.length) {
    switch (diffs[pointer][0]) {
      case DIFF_INSERT:
        count_insert++;
        text_insert += diffs[pointer][1];
        pointer++;
        break;
      case DIFF_DELETE:
        count_delete++;
        text_delete += diffs[pointer][1];
        pointer++;
        break;
      case DIFF_EQUAL:
        // Upon reaching an equality, check for prior redundancies.
        if (count_delete + count_insert > 1) {
          if (count_delete !== 0 && count_insert !== 0) {
            // Factor out any common prefixies.
            commonlength = diff_commonPrefix(text_insert, text_delete);
            if (commonlength !== 0) {
              if ((pointer - count_delete - count_insert) > 0 &&
                  diffs[pointer - count_delete - count_insert - 1][0] ==
                  DIFF_EQUAL) {
                diffs[pointer - count_delete - count_insert - 1][1] +=
                    text_insert.substring(0, commonlength);
              } else {
                diffs.splice(0, 0, [DIFF_EQUAL,
                                    text_insert.substring(0, commonlength)]);
                pointer++;
              }
              text_insert = text_insert.substring(commonlength);
              text_delete = text_delete.substring(commonlength);
            }
            // Factor out any common suffixies.
            commonlength = diff_commonSuffix(text_insert, text_delete);
            if (commonlength !== 0) {
              diffs[pointer][1] = text_insert.substring(text_insert.length -
                  commonlength) + diffs[pointer][1];
              text_insert = text_insert.substring(0, text_insert.length -
                  commonlength);
              text_delete = text_delete.substring(0, text_delete.length -
                  commonlength);
            }
          }
          // Delete the offending records and add the merged ones.
          if (count_delete === 0) {
            diffs.splice(pointer - count_insert,
                count_delete + count_insert, [DIFF_INSERT, text_insert]);
          } else if (count_insert === 0) {
            diffs.splice(pointer - count_delete,
                count_delete + count_insert, [DIFF_DELETE, text_delete]);
          } else {
            diffs.splice(pointer - count_delete - count_insert,
                count_delete + count_insert, [DIFF_DELETE, text_delete],
                [DIFF_INSERT, text_insert]);
          }
          pointer = pointer - count_delete - count_insert +
                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;
        } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {
          // Merge this equality with the previous one.
          diffs[pointer - 1][1] += diffs[pointer][1];
          diffs.splice(pointer, 1);
        } else {
          pointer++;
        }
        count_insert = 0;
        count_delete = 0;
        text_delete = '';
        text_insert = '';
        break;
    }
  }
  if (diffs[diffs.length - 1][1] === '') {
    diffs.pop();  // Remove the dummy entry at the end.
  }

  // Second pass: look for single edits surrounded on both sides by equalities
  // which can be shifted sideways to eliminate an equality.
  // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC
  var changes = false;
  pointer = 1;
  // Intentionally ignore the first and last element (don't need checking).
  while (pointer < diffs.length - 1) {
    if (diffs[pointer - 1][0] == DIFF_EQUAL &&
        diffs[pointer + 1][0] == DIFF_EQUAL) {
      // This is a single edit surrounded by equalities.
      if (diffs[pointer][1].substring(diffs[pointer][1].length -
          diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {
        // Shift the edit over the previous equality.
        diffs[pointer][1] = diffs[pointer - 1][1] +
            diffs[pointer][1].substring(0, diffs[pointer][1].length -
                                        diffs[pointer - 1][1].length);
        diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];
        diffs.splice(pointer - 1, 1);
        changes = true;
      } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==
          diffs[pointer + 1][1]) {
        // Shift the edit over the next equality.
        diffs[pointer - 1][1] += diffs[pointer + 1][1];
        diffs[pointer][1] =
            diffs[pointer][1].substring(diffs[pointer + 1][1].length) +
            diffs[pointer + 1][1];
        diffs.splice(pointer + 1, 1);
        changes = true;
      }
    }
    pointer++;
  }
  // If shifts were made, the diff needs reordering and another shift sweep.
  if (changes) {
    diff_cleanupMerge(diffs);
  }
};


var diff = diff_main;
diff.INSERT = DIFF_INSERT;
diff.DELETE = DIFF_DELETE;
diff.EQUAL = DIFF_EQUAL;

module.exports = diff;

/*
 * Modify a diff such that the cursor position points to the start of a change:
 * E.g.
 *   cursor_normalize_diff([[DIFF_EQUAL, 'abc']], 1)
 *     => [1, [[DIFF_EQUAL, 'a'], [DIFF_EQUAL, 'bc']]]
 *   cursor_normalize_diff([[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xyz']], 2)
 *     => [2, [[DIFF_INSERT, 'new'], [DIFF_DELETE, 'xy'], [DIFF_DELETE, 'z']]]
 *
 * @param {Array} diffs Array of diff tuples
 * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
 * @return {Array} A tuple [cursor location in the modified diff, modified diff]
 */
function cursor_normalize_diff (diffs, cursor_pos) {
  if (cursor_pos === 0) {
    return [DIFF_EQUAL, diffs];
  }
  for (var current_pos = 0, i = 0; i < diffs.length; i++) {
    var d = diffs[i];
    if (d[0] === DIFF_DELETE || d[0] === DIFF_EQUAL) {
      var next_pos = current_pos + d[1].length;
      if (cursor_pos === next_pos) {
        return [i + 1, diffs];
      } else if (cursor_pos < next_pos) {
        // copy to prevent side effects
        diffs = diffs.slice();
        // split d into two diff changes
        var split_pos = cursor_pos - current_pos;
        var d_left = [d[0], d[1].slice(0, split_pos)];
        var d_right = [d[0], d[1].slice(split_pos)];
        diffs.splice(i, 1, d_left, d_right);
        return [i + 1, diffs];
      } else {
        current_pos = next_pos;
      }
    }
  }
  throw new Error('cursor_pos is out of bounds!')
}

/*
 * Modify a diff such that the edit position is "shifted" to the proposed edit location (cursor_position).
 *
 * Case 1)
 *   Check if a naive shift is possible:
 *     [0, X], [ 1, Y] -> [ 1, Y], [0, X]    (if X + Y === Y + X)
 *     [0, X], [-1, Y] -> [-1, Y], [0, X]    (if X + Y === Y + X) - holds same result
 * Case 2)
 *   Check if the following shifts are possible:
 *     [0, 'pre'], [ 1, 'prefix'] -> [ 1, 'pre'], [0, 'pre'], [ 1, 'fix']
 *     [0, 'pre'], [-1, 'prefix'] -> [-1, 'pre'], [0, 'pre'], [-1, 'fix']
 *         ^            ^
 *         d          d_next
 *
 * @param {Array} diffs Array of diff tuples
 * @param {Int} cursor_pos Suggested edit position. Must not be out of bounds!
 * @return {Array} Array of diff tuples
 */
function fix_cursor (diffs, cursor_pos) {
  var norm = cursor_normalize_diff(diffs, cursor_pos);
  var ndiffs = norm[1];
  var cursor_pointer = norm[0];
  var d = ndiffs[cursor_pointer];
  var d_next = ndiffs[cursor_pointer + 1];

  if (d == null) {
    // Text was deleted from end of original string,
    // cursor is now out of bounds in new string
    return diffs;
  } else if (d[0] !== DIFF_EQUAL) {
    // A modification happened at the cursor location.
    // This is the expected outcome, so we can return the original diff.
    return diffs;
  } else {
    if (d_next != null && d[1] + d_next[1] === d_next[1] + d[1]) {
      // Case 1)
      // It is possible to perform a naive shift
      ndiffs.splice(cursor_pointer, 2, d_next, d)
      return merge_tuples(ndiffs, cursor_pointer, 2)
    } else if (d_next != null && d_next[1].indexOf(d[1]) === 0) {
      // Case 2)
      // d[1] is a prefix of d_next[1]
      // We can assume that d_next[0] !== 0, since d[0] === 0
      // Shift edit locations..
      ndiffs.splice(cursor_pointer, 2, [d_next[0], d[1]], [0, d[1]]);
      var suffix = d_next[1].slice(d[1].length);
      if (suffix.length > 0) {
        ndiffs.splice(cursor_pointer + 2, 0, [d_next[0], suffix]);
      }
      return merge_tuples(ndiffs, cursor_pointer, 3)
    } else {
      // Not possible to perform any modification
      return diffs;
    }
  }
}

/*
 * Check diff did not split surrogate pairs.
 * Ex. [0, '\\uD83D'], [-1, '\\uDC36'], [1, '\\uDC2F'] -> [-1, '\\uD83D\\uDC36'], [1, '\\uD83D\\uDC2F']
 *     '\\uD83D\\uDC36' === '\u{1F436}', '\\uD83D\\uDC2F' === '\u{1F42F}'
 *
 * @param {Array} diffs Array of diff tuples
 * @return {Array} Array of diff tuples
 */
function fix_emoji (diffs) {
  var compact = false;
  var starts_with_pair_end = function(str) {
    return str.charCodeAt(0) >= 0xDC00 && str.charCodeAt(0) <= 0xDFFF;
  }
  var ends_with_pair_start = function(str) {
    return str.charCodeAt(str.length-1) >= 0xD800 && str.charCodeAt(str.length-1) <= 0xDBFF;
  }
  for (var i = 2; i < diffs.length; i += 1) {
    if (diffs[i-2][0] === DIFF_EQUAL && ends_with_pair_start(diffs[i-2][1]) &&
        diffs[i-1][0] === DIFF_DELETE && starts_with_pair_end(diffs[i-1][1]) &&
        diffs[i][0] === DIFF_INSERT && starts_with_pair_end(diffs[i][1])) {
      compact = true;

      diffs[i-1][1] = diffs[i-2][1].slice(-1) + diffs[i-1][1];
      diffs[i][1] = diffs[i-2][1].slice(-1) + diffs[i][1];

      diffs[i-2][1] = diffs[i-2][1].slice(0, -1);
    }
  }
  if (!compact) {
    return diffs;
  }
  var fixed_diffs = [];
  for (var i = 0; i < diffs.length; i += 1) {
    if (diffs[i][1].length > 0) {
      fixed_diffs.push(diffs[i]);
    }
  }
  return fixed_diffs;
}

/*
 * Try to merge tuples with their neigbors in a given range.
 * E.g. [0, 'a'], [0, 'b'] -> [0, 'ab']
 *
 * @param {Array} diffs Array of diff tuples.
 * @param {Int} start Position of the first element to merge (diffs[start] is also merged with diffs[start - 1]).
 * @param {Int} length Number of consecutive elements to check.
 * @return {Array} Array of merged diff tuples.
 */
function merge_tuples (diffs, start, length) {
  // Check from (start-1) to (start+length).
  for (var i = start + length - 1; i >= 0 && i >= start - 1; i--) {
    if (i + 1 < diffs.length) {
      var left_d = diffs[i];
      var right_d = diffs[i+1];
      if (left_d[0] === right_d[1]) {
        diffs.splice(i, 2, [left_d[0], left_d[1] + right_d[1]]);
      }
    }
  }
  return diffs;
}


/***/ }),
/* 52 */
/***/ (function(module, exports) {

exports = module.exports = typeof Object.keys === 'function'
  ? Object.keys : shim;

exports.shim = shim;
function shim (obj) {
  var keys = [];
  for (var key in obj) keys.push(key);
  return keys;
}


/***/ }),
/* 53 */
/***/ (function(module, exports) {

var supportsArgumentsClass = (function(){
  return Object.prototype.toString.call(arguments)
})() == '[object Arguments]';

exports = module.exports = supportsArgumentsClass ? supported : unsupported;

exports.supported = supported;
function supported(object) {
  return Object.prototype.toString.call(object) == '[object Arguments]';
};

exports.unsupported = unsupported;
function unsupported(object){
  return object &&
    typeof object == 'object' &&
    typeof object.length == 'number' &&
    Object.prototype.hasOwnProperty.call(object, 'callee') &&
    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||
    false;
};


/***/ }),
/* 54 */
/***/ (function(module, exports) {

'use strict';

var has = Object.prototype.hasOwnProperty
  , prefix = '~';

/**
 * Constructor to create a storage for our \`EE\` objects.
 * An \`Events\` instance is a plain object whose properties are event names.
 *
 * @constructor
 * @api private
 */
function Events() {}

//
// We try to not inherit from \`Object.prototype\`. In some engines creating an
// instance in this way is faster than calling \`Object.create(null)\` directly.
// If \`Object.create(null)\` is not supported we prefix the event names with a
// character to make sure that the built-in object properties are not
// overridden or used as an attack vector.
//
if (Object.create) {
  Events.prototype = Object.create(null);

  //
  // This hack is needed because the \`__proto__\` property is still inherited in
  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.
  //
  if (!new Events().__proto__) prefix = false;
}

/**
 * Representation of a single event listener.
 *
 * @param {Function} fn The listener function.
 * @param {Mixed} context The context to invoke the listener with.
 * @param {Boolean} [once=false] Specify if the listener is a one-time listener.
 * @constructor
 * @api private
 */
function EE(fn, context, once) {
  this.fn = fn;
  this.context = context;
  this.once = once || false;
}

/**
 * Minimal \`EventEmitter\` interface that is molded against the Node.js
 * \`EventEmitter\` interface.
 *
 * @constructor
 * @api public
 */
function EventEmitter() {
  this._events = new Events();
  this._eventsCount = 0;
}

/**
 * Return an array listing the events for which the emitter has registered
 * listeners.
 *
 * @returns {Array}
 * @api public
 */
EventEmitter.prototype.eventNames = function eventNames() {
  var names = []
    , events
    , name;

  if (this._eventsCount === 0) return names;

  for (name in (events = this._events)) {
    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);
  }

  if (Object.getOwnPropertySymbols) {
    return names.concat(Object.getOwnPropertySymbols(events));
  }

  return names;
};

/**
 * Return the listeners registered for a given event.
 *
 * @param {String|Symbol} event The event name.
 * @param {Boolean} exists Only check if there are listeners.
 * @returns {Array|Boolean}
 * @api public
 */
EventEmitter.prototype.listeners = function listeners(event, exists) {
  var evt = prefix ? prefix + event : event
    , available = this._events[evt];

  if (exists) return !!available;
  if (!available) return [];
  if (available.fn) return [available.fn];

  for (var i = 0, l = available.length, ee = new Array(l); i < l; i++) {
    ee[i] = available[i].fn;
  }

  return ee;
};

/**
 * Calls each of the listeners registered for a given event.
 *
 * @param {String|Symbol} event The event name.
 * @returns {Boolean} \`true\` if the event had listeners, else \`false\`.
 * @api public
 */
EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return false;

  var listeners = this._events[evt]
    , len = arguments.length
    , args
    , i;

  if (listeners.fn) {
    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);

    switch (len) {
      case 1: return listeners.fn.call(listeners.context), true;
      case 2: return listeners.fn.call(listeners.context, a1), true;
      case 3: return listeners.fn.call(listeners.context, a1, a2), true;
      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;
      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;
      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;
    }

    for (i = 1, args = new Array(len -1); i < len; i++) {
      args[i - 1] = arguments[i];
    }

    listeners.fn.apply(listeners.context, args);
  } else {
    var length = listeners.length
      , j;

    for (i = 0; i < length; i++) {
      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);

      switch (len) {
        case 1: listeners[i].fn.call(listeners[i].context); break;
        case 2: listeners[i].fn.call(listeners[i].context, a1); break;
        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;
        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;
        default:
          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {
            args[j - 1] = arguments[j];
          }

          listeners[i].fn.apply(listeners[i].context, args);
      }
    }
  }

  return true;
};

/**
 * Add a listener for a given event.
 *
 * @param {String|Symbol} event The event name.
 * @param {Function} fn The listener function.
 * @param {Mixed} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} \`this\`.
 * @api public
 */
EventEmitter.prototype.on = function on(event, fn, context) {
  var listener = new EE(fn, context || this)
    , evt = prefix ? prefix + event : event;

  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;
  else if (!this._events[evt].fn) this._events[evt].push(listener);
  else this._events[evt] = [this._events[evt], listener];

  return this;
};

/**
 * Add a one-time listener for a given event.
 *
 * @param {String|Symbol} event The event name.
 * @param {Function} fn The listener function.
 * @param {Mixed} [context=this] The context to invoke the listener with.
 * @returns {EventEmitter} \`this\`.
 * @api public
 */
EventEmitter.prototype.once = function once(event, fn, context) {
  var listener = new EE(fn, context || this, true)
    , evt = prefix ? prefix + event : event;

  if (!this._events[evt]) this._events[evt] = listener, this._eventsCount++;
  else if (!this._events[evt].fn) this._events[evt].push(listener);
  else this._events[evt] = [this._events[evt], listener];

  return this;
};

/**
 * Remove the listeners of a given event.
 *
 * @param {String|Symbol} event The event name.
 * @param {Function} fn Only remove the listeners that match this function.
 * @param {Mixed} context Only remove the listeners that have this context.
 * @param {Boolean} once Only remove one-time listeners.
 * @returns {EventEmitter} \`this\`.
 * @api public
 */
EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {
  var evt = prefix ? prefix + event : event;

  if (!this._events[evt]) return this;
  if (!fn) {
    if (--this._eventsCount === 0) this._events = new Events();
    else delete this._events[evt];
    return this;
  }

  var listeners = this._events[evt];

  if (listeners.fn) {
    if (
         listeners.fn === fn
      && (!once || listeners.once)
      && (!context || listeners.context === context)
    ) {
      if (--this._eventsCount === 0) this._events = new Events();
      else delete this._events[evt];
    }
  } else {
    for (var i = 0, events = [], length = listeners.length; i < length; i++) {
      if (
           listeners[i].fn !== fn
        || (once && !listeners[i].once)
        || (context && listeners[i].context !== context)
      ) {
        events.push(listeners[i]);
      }
    }

    //
    // Reset the array, or remove it completely if we have no more listeners.
    //
    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;
    else if (--this._eventsCount === 0) this._events = new Events();
    else delete this._events[evt];
  }

  return this;
};

/**
 * Remove all listeners, or those of the specified event.
 *
 * @param {String|Symbol} [event] The event name.
 * @returns {EventEmitter} \`this\`.
 * @api public
 */
EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {
  var evt;

  if (event) {
    evt = prefix ? prefix + event : event;
    if (this._events[evt]) {
      if (--this._eventsCount === 0) this._events = new Events();
      else delete this._events[evt];
    }
  } else {
    this._events = new Events();
    this._eventsCount = 0;
  }

  return this;
};

//
// Alias methods names because people roll like that.
//
EventEmitter.prototype.off = EventEmitter.prototype.removeListener;
EventEmitter.prototype.addListener = EventEmitter.prototype.on;

//
// This function doesn't apply anymore.
//
EventEmitter.prototype.setMaxListeners = function setMaxListeners() {
  return this;
};

//
// Expose the prefix.
//
EventEmitter.prefixed = prefix;

//
// Allow \`EventEmitter\` to be imported as module namespace.
//
EventEmitter.EventEmitter = EventEmitter;

//
// Expose the module.
//
if ('undefined' !== typeof module) {
  module.exports = EventEmitter;
}


/***/ }),
/* 55 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.matchText = exports.matchSpacing = exports.matchNewline = exports.matchBlot = exports.matchAttributor = exports.default = undefined;

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extend2 = __webpack_require__(3);

var _extend3 = _interopRequireDefault(_extend2);

var _quillDelta = __webpack_require__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __webpack_require__(5);

var _quill2 = _interopRequireDefault(_quill);

var _logger = __webpack_require__(10);

var _logger2 = _interopRequireDefault(_logger);

var _module = __webpack_require__(9);

var _module2 = _interopRequireDefault(_module);

var _align = __webpack_require__(36);

var _background = __webpack_require__(37);

var _code = __webpack_require__(13);

var _code2 = _interopRequireDefault(_code);

var _color = __webpack_require__(26);

var _direction = __webpack_require__(38);

var _font = __webpack_require__(39);

var _size = __webpack_require__(40);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = (0, _logger2.default)('quill:clipboard');

var DOM_KEY = '__ql-matcher';

var CLIPBOARD_CONFIG = [[Node.TEXT_NODE, matchText], [Node.TEXT_NODE, matchNewline], ['br', matchBreak], [Node.ELEMENT_NODE, matchNewline], [Node.ELEMENT_NODE, matchBlot], [Node.ELEMENT_NODE, matchSpacing], [Node.ELEMENT_NODE, matchAttributor], [Node.ELEMENT_NODE, matchStyles], ['li', matchIndent], ['b', matchAlias.bind(matchAlias, 'bold')], ['i', matchAlias.bind(matchAlias, 'italic')], ['style', matchIgnore]];

var ATTRIBUTE_ATTRIBUTORS = [_align.AlignAttribute, _direction.DirectionAttribute].reduce(function (memo, attr) {
  memo[attr.keyName] = attr;
  return memo;
}, {});

var STYLE_ATTRIBUTORS = [_align.AlignStyle, _background.BackgroundStyle, _color.ColorStyle, _direction.DirectionStyle, _font.FontStyle, _size.SizeStyle].reduce(function (memo, attr) {
  memo[attr.keyName] = attr;
  return memo;
}, {});

var Clipboard = function (_Module) {
  _inherits(Clipboard, _Module);

  function Clipboard(quill, options) {
    _classCallCheck(this, Clipboard);

    var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this, quill, options));

    _this.quill.root.addEventListener('paste', _this.onPaste.bind(_this));
    _this.container = _this.quill.addContainer('ql-clipboard');
    _this.container.setAttribute('contenteditable', true);
    _this.container.setAttribute('tabindex', -1);
    _this.matchers = [];
    CLIPBOARD_CONFIG.concat(_this.options.matchers).forEach(function (_ref) {
      var _ref2 = _slicedToArray(_ref, 2),
          selector = _ref2[0],
          matcher = _ref2[1];

      if (!options.matchVisual && matcher === matchSpacing) return;
      _this.addMatcher(selector, matcher);
    });
    return _this;
  }

  _createClass(Clipboard, [{
    key: 'addMatcher',
    value: function addMatcher(selector, matcher) {
      this.matchers.push([selector, matcher]);
    }
  }, {
    key: 'convert',
    value: function convert(html) {
      if (typeof html === 'string') {
        this.container.innerHTML = html.replace(/\\>\\r?\\n +\\</g, '><'); // Remove spaces between tags
        return this.convert();
      }
      var formats = this.quill.getFormat(this.quill.selection.savedRange.index);
      if (formats[_code2.default.blotName]) {
        var text = this.container.innerText;
        this.container.innerHTML = '';
        return new _quillDelta2.default().insert(text, _defineProperty({}, _code2.default.blotName, formats[_code2.default.blotName]));
      }

      var _prepareMatching = this.prepareMatching(),
          _prepareMatching2 = _slicedToArray(_prepareMatching, 2),
          elementMatchers = _prepareMatching2[0],
          textMatchers = _prepareMatching2[1];

      var delta = traverse(this.container, elementMatchers, textMatchers);
      // Remove trailing newline
      if (deltaEndsWith(delta, '\\n') && delta.ops[delta.ops.length - 1].attributes == null) {
        delta = delta.compose(new _quillDelta2.default().retain(delta.length() - 1).delete(1));
      }
      debug.log('convert', this.container.innerHTML, delta);
      this.container.innerHTML = '';
      return delta;
    }
  }, {
    key: 'dangerouslyPasteHTML',
    value: function dangerouslyPasteHTML(index, html) {
      var source = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _quill2.default.sources.API;

      if (typeof index === 'string') {
        this.quill.setContents(this.convert(index), html);
        this.quill.setSelection(0, _quill2.default.sources.SILENT);
      } else {
        var paste = this.convert(html);
        this.quill.updateContents(new _quillDelta2.default().retain(index).concat(paste), source);
        this.quill.setSelection(index + paste.length(), _quill2.default.sources.SILENT);
      }
    }
  }, {
    key: 'onPaste',
    value: function onPaste(e) {
      var _this2 = this;

      if (e.defaultPrevented || !this.quill.isEnabled()) return;
      var range = this.quill.getSelection();
      var delta = new _quillDelta2.default().retain(range.index);
      var scrollTop = this.quill.scrollingContainer.scrollTop;
      this.container.focus();
      this.quill.selection.update(_quill2.default.sources.SILENT);
      setTimeout(function () {
        delta = delta.concat(_this2.convert()).delete(range.length);
        _this2.quill.updateContents(delta, _quill2.default.sources.USER);
        // range.length contributes to delta.length()
        _this2.quill.setSelection(delta.length() - range.length, _quill2.default.sources.SILENT);
        _this2.quill.scrollingContainer.scrollTop = scrollTop;
        _this2.quill.focus();
      }, 1);
    }
  }, {
    key: 'prepareMatching',
    value: function prepareMatching() {
      var _this3 = this;

      var elementMatchers = [],
          textMatchers = [];
      this.matchers.forEach(function (pair) {
        var _pair = _slicedToArray(pair, 2),
            selector = _pair[0],
            matcher = _pair[1];

        switch (selector) {
          case Node.TEXT_NODE:
            textMatchers.push(matcher);
            break;
          case Node.ELEMENT_NODE:
            elementMatchers.push(matcher);
            break;
          default:
            [].forEach.call(_this3.container.querySelectorAll(selector), function (node) {
              // TODO use weakmap
              node[DOM_KEY] = node[DOM_KEY] || [];
              node[DOM_KEY].push(matcher);
            });
            break;
        }
      });
      return [elementMatchers, textMatchers];
    }
  }]);

  return Clipboard;
}(_module2.default);

Clipboard.DEFAULTS = {
  matchers: [],
  matchVisual: true
};

function applyFormat(delta, format, value) {
  if ((typeof format === 'undefined' ? 'undefined' : _typeof(format)) === 'object') {
    return Object.keys(format).reduce(function (delta, key) {
      return applyFormat(delta, key, format[key]);
    }, delta);
  } else {
    return delta.reduce(function (delta, op) {
      if (op.attributes && op.attributes[format]) {
        return delta.push(op);
      } else {
        return delta.insert(op.insert, (0, _extend3.default)({}, _defineProperty({}, format, value), op.attributes));
      }
    }, new _quillDelta2.default());
  }
}

function computeStyle(node) {
  if (node.nodeType !== Node.ELEMENT_NODE) return {};
  var DOM_KEY = '__ql-computed-style';
  return node[DOM_KEY] || (node[DOM_KEY] = window.getComputedStyle(node));
}

function deltaEndsWith(delta, text) {
  var endText = "";
  for (var i = delta.ops.length - 1; i >= 0 && endText.length < text.length; --i) {
    var op = delta.ops[i];
    if (typeof op.insert !== 'string') break;
    endText = op.insert + endText;
  }
  return endText.slice(-1 * text.length) === text;
}

function isLine(node) {
  if (node.childNodes.length === 0) return false; // Exclude embed blocks
  var style = computeStyle(node);
  return ['block', 'list-item'].indexOf(style.display) > -1;
}

function traverse(node, elementMatchers, textMatchers) {
  // Post-order
  if (node.nodeType === node.TEXT_NODE) {
    return textMatchers.reduce(function (delta, matcher) {
      return matcher(node, delta);
    }, new _quillDelta2.default());
  } else if (node.nodeType === node.ELEMENT_NODE) {
    return [].reduce.call(node.childNodes || [], function (delta, childNode) {
      var childrenDelta = traverse(childNode, elementMatchers, textMatchers);
      if (childNode.nodeType === node.ELEMENT_NODE) {
        childrenDelta = elementMatchers.reduce(function (childrenDelta, matcher) {
          return matcher(childNode, childrenDelta);
        }, childrenDelta);
        childrenDelta = (childNode[DOM_KEY] || []).reduce(function (childrenDelta, matcher) {
          return matcher(childNode, childrenDelta);
        }, childrenDelta);
      }
      return delta.concat(childrenDelta);
    }, new _quillDelta2.default());
  } else {
    return new _quillDelta2.default();
  }
}

function matchAlias(format, node, delta) {
  return applyFormat(delta, format, true);
}

function matchAttributor(node, delta) {
  var attributes = _parchment2.default.Attributor.Attribute.keys(node);
  var classes = _parchment2.default.Attributor.Class.keys(node);
  var styles = _parchment2.default.Attributor.Style.keys(node);
  var formats = {};
  attributes.concat(classes).concat(styles).forEach(function (name) {
    var attr = _parchment2.default.query(name, _parchment2.default.Scope.ATTRIBUTE);
    if (attr != null) {
      formats[attr.attrName] = attr.value(node);
      if (formats[attr.attrName]) return;
    }
    attr = ATTRIBUTE_ATTRIBUTORS[name];
    if (attr != null && (attr.attrName === name || attr.keyName === name)) {
      formats[attr.attrName] = attr.value(node) || undefined;
    }
    attr = STYLE_ATTRIBUTORS[name];
    if (attr != null && (attr.attrName === name || attr.keyName === name)) {
      attr = STYLE_ATTRIBUTORS[name];
      formats[attr.attrName] = attr.value(node) || undefined;
    }
  });
  if (Object.keys(formats).length > 0) {
    delta = applyFormat(delta, formats);
  }
  return delta;
}

function matchBlot(node, delta) {
  var match = _parchment2.default.query(node);
  if (match == null) return delta;
  if (match.prototype instanceof _parchment2.default.Embed) {
    var embed = {};
    var value = match.value(node);
    if (value != null) {
      embed[match.blotName] = value;
      delta = new _quillDelta2.default().insert(embed, match.formats(node));
    }
  } else if (typeof match.formats === 'function') {
    delta = applyFormat(delta, match.blotName, match.formats(node));
  }
  return delta;
}

function matchBreak(node, delta) {
  if (!deltaEndsWith(delta, '\\n')) {
    delta.insert('\\n');
  }
  return delta;
}

function matchIgnore() {
  return new _quillDelta2.default();
}

function matchIndent(node, delta) {
  var match = _parchment2.default.query(node);
  if (match == null || match.blotName !== 'list-item' || !deltaEndsWith(delta, '\\n')) {
    return delta;
  }
  var indent = -1,
      parent = node.parentNode;
  while (!parent.classList.contains('ql-clipboard')) {
    if ((_parchment2.default.query(parent) || {}).blotName === 'list') {
      indent += 1;
    }
    parent = parent.parentNode;
  }
  if (indent <= 0) return delta;
  return delta.compose(new _quillDelta2.default().retain(delta.length() - 1).retain(1, { indent: indent }));
}

function matchNewline(node, delta) {
  if (!deltaEndsWith(delta, '\\n')) {
    if (isLine(node) || delta.length() > 0 && node.nextSibling && isLine(node.nextSibling)) {
      delta.insert('\\n');
    }
  }
  return delta;
}

function matchSpacing(node, delta) {
  if (isLine(node) && node.nextElementSibling != null && !deltaEndsWith(delta, '\\n\\n')) {
    var nodeHeight = node.offsetHeight + parseFloat(computeStyle(node).marginTop) + parseFloat(computeStyle(node).marginBottom);
    if (node.nextElementSibling.offsetTop > node.offsetTop + nodeHeight * 1.5) {
      delta.insert('\\n');
    }
  }
  return delta;
}

function matchStyles(node, delta) {
  var formats = {};
  var style = node.style || {};
  if (style.fontStyle && computeStyle(node).fontStyle === 'italic') {
    formats.italic = true;
  }
  if (style.fontWeight && (computeStyle(node).fontWeight.startsWith('bold') || parseInt(computeStyle(node).fontWeight) >= 700)) {
    formats.bold = true;
  }
  if (Object.keys(formats).length > 0) {
    delta = applyFormat(delta, formats);
  }
  if (parseFloat(style.textIndent || 0) > 0) {
    // Could be 0.5in
    delta = new _quillDelta2.default().insert('\\t').concat(delta);
  }
  return delta;
}

function matchText(node, delta) {
  var text = node.data;
  // Word represents empty line with <o:p>&nbsp;</o:p>
  if (node.parentNode.tagName === 'O:P') {
    return delta.insert(text.trim());
  }
  if (text.trim().length === 0 && node.parentNode.classList.contains('ql-clipboard')) {
    return delta;
  }
  if (!computeStyle(node.parentNode).whiteSpace.startsWith('pre')) {
    // eslint-disable-next-line func-style
    var replacer = function replacer(collapse, match) {
      match = match.replace(/[^\\u00a0]/g, ''); // \\u00a0 is nbsp;
      return match.length < 1 && collapse ? ' ' : match;
    };
    text = text.replace(/\\r\\n/g, ' ').replace(/\\n/g, ' ');
    text = text.replace(/\\s\\s+/g, replacer.bind(replacer, true)); // collapse whitespace
    if (node.previousSibling == null && isLine(node.parentNode) || node.previousSibling != null && isLine(node.previousSibling)) {
      text = text.replace(/^\\s+/, replacer.bind(replacer, false));
    }
    if (node.nextSibling == null && isLine(node.parentNode) || node.nextSibling != null && isLine(node.nextSibling)) {
      text = text.replace(/\\s+$/, replacer.bind(replacer, false));
    }
  }
  return delta.insert(text);
}

exports.default = Clipboard;
exports.matchAttributor = matchAttributor;
exports.matchBlot = matchBlot;
exports.matchNewline = matchNewline;
exports.matchSpacing = matchSpacing;
exports.matchText = matchText;

/***/ }),
/* 56 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _inline = __webpack_require__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Bold = function (_Inline) {
  _inherits(Bold, _Inline);

  function Bold() {
    _classCallCheck(this, Bold);

    return _possibleConstructorReturn(this, (Bold.__proto__ || Object.getPrototypeOf(Bold)).apply(this, arguments));
  }

  _createClass(Bold, [{
    key: 'optimize',
    value: function optimize(context) {
      _get(Bold.prototype.__proto__ || Object.getPrototypeOf(Bold.prototype), 'optimize', this).call(this, context);
      if (this.domNode.tagName !== this.statics.tagName[0]) {
        this.replaceWith(this.statics.blotName);
      }
    }
  }], [{
    key: 'create',
    value: function create() {
      return _get(Bold.__proto__ || Object.getPrototypeOf(Bold), 'create', this).call(this);
    }
  }, {
    key: 'formats',
    value: function formats() {
      return true;
    }
  }]);

  return Bold;
}(_inline2.default);

Bold.blotName = 'bold';
Bold.tagName = ['STRONG', 'B'];

exports.default = Bold;

/***/ }),
/* 57 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.addControls = exports.default = undefined;

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _quillDelta = __webpack_require__(2);

var _quillDelta2 = _interopRequireDefault(_quillDelta);

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __webpack_require__(5);

var _quill2 = _interopRequireDefault(_quill);

var _logger = __webpack_require__(10);

var _logger2 = _interopRequireDefault(_logger);

var _module = __webpack_require__(9);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var debug = (0, _logger2.default)('quill:toolbar');

var Toolbar = function (_Module) {
  _inherits(Toolbar, _Module);

  function Toolbar(quill, options) {
    _classCallCheck(this, Toolbar);

    var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, quill, options));

    if (Array.isArray(_this.options.container)) {
      var container = document.createElement('div');
      addControls(container, _this.options.container);
      quill.container.parentNode.insertBefore(container, quill.container);
      _this.container = container;
    } else if (typeof _this.options.container === 'string') {
      _this.container = document.querySelector(_this.options.container);
    } else {
      _this.container = _this.options.container;
    }
    if (!(_this.container instanceof HTMLElement)) {
      var _ret;

      return _ret = debug.error('Container required for toolbar', _this.options), _possibleConstructorReturn(_this, _ret);
    }
    _this.container.classList.add('ql-toolbar');
    _this.controls = [];
    _this.handlers = {};
    Object.keys(_this.options.handlers).forEach(function (format) {
      _this.addHandler(format, _this.options.handlers[format]);
    });
    [].forEach.call(_this.container.querySelectorAll('button, select'), function (input) {
      _this.attach(input);
    });
    _this.quill.on(_quill2.default.events.EDITOR_CHANGE, function (type, range) {
      if (type === _quill2.default.events.SELECTION_CHANGE) {
        _this.update(range);
      }
    });
    _this.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function () {
      var _this$quill$selection = _this.quill.selection.getRange(),
          _this$quill$selection2 = _slicedToArray(_this$quill$selection, 1),
          range = _this$quill$selection2[0]; // quill.getSelection triggers update


      _this.update(range);
    });
    return _this;
  }

  _createClass(Toolbar, [{
    key: 'addHandler',
    value: function addHandler(format, handler) {
      this.handlers[format] = handler;
    }
  }, {
    key: 'attach',
    value: function attach(input) {
      var _this2 = this;

      var format = [].find.call(input.classList, function (className) {
        return className.indexOf('ql-') === 0;
      });
      if (!format) return;
      format = format.slice('ql-'.length);
      if (input.tagName === 'BUTTON') {
        input.setAttribute('type', 'button');
      }
      if (this.handlers[format] == null) {
        if (this.quill.scroll.whitelist != null && this.quill.scroll.whitelist[format] == null) {
          debug.warn('ignoring attaching to disabled format', format, input);
          return;
        }
        if (_parchment2.default.query(format) == null) {
          debug.warn('ignoring attaching to nonexistent format', format, input);
          return;
        }
      }
      var eventName = input.tagName === 'SELECT' ? 'change' : 'click';
      input.addEventListener(eventName, function (e) {
        var value = void 0;
        if (input.tagName === 'SELECT') {
          if (input.selectedIndex < 0) return;
          var selected = input.options[input.selectedIndex];
          if (selected.hasAttribute('selected')) {
            value = false;
          } else {
            value = selected.value || false;
          }
        } else {
          if (input.classList.contains('ql-active')) {
            value = false;
          } else {
            value = input.value || !input.hasAttribute('value');
          }
          e.preventDefault();
        }
        _this2.quill.focus();

        var _quill$selection$getR = _this2.quill.selection.getRange(),
            _quill$selection$getR2 = _slicedToArray(_quill$selection$getR, 1),
            range = _quill$selection$getR2[0];

        if (_this2.handlers[format] != null) {
          _this2.handlers[format].call(_this2, value);
        } else if (_parchment2.default.query(format).prototype instanceof _parchment2.default.Embed) {
          value = prompt('Enter ' + format);
          if (!value) return;
          _this2.quill.updateContents(new _quillDelta2.default().retain(range.index).delete(range.length).insert(_defineProperty({}, format, value)), _quill2.default.sources.USER);
        } else {
          _this2.quill.format(format, value, _quill2.default.sources.USER);
        }
        _this2.update(range);
      });
      // TODO use weakmap
      this.controls.push([format, input]);
    }
  }, {
    key: 'update',
    value: function update(range) {
      var formats = range == null ? {} : this.quill.getFormat(range);
      this.controls.forEach(function (pair) {
        var _pair = _slicedToArray(pair, 2),
            format = _pair[0],
            input = _pair[1];

        if (input.tagName === 'SELECT') {
          var option = void 0;
          if (range == null) {
            option = null;
          } else if (formats[format] == null) {
            option = input.querySelector('option[selected]');
          } else if (!Array.isArray(formats[format])) {
            var value = formats[format];
            if (typeof value === 'string') {
              value = value.replace(/\\"/g, '\\\\"');
            }
            option = input.querySelector('option[value="' + value + '"]');
          }
          if (option == null) {
            input.value = ''; // TODO make configurable?
            input.selectedIndex = -1;
          } else {
            option.selected = true;
          }
        } else {
          if (range == null) {
            input.classList.remove('ql-active');
          } else if (input.hasAttribute('value')) {
            // both being null should match (default values)
            // '1' should match with 1 (headers)
            var isActive = formats[format] === input.getAttribute('value') || formats[format] != null && formats[format].toString() === input.getAttribute('value') || formats[format] == null && !input.getAttribute('value');
            input.classList.toggle('ql-active', isActive);
          } else {
            input.classList.toggle('ql-active', formats[format] != null);
          }
        }
      });
    }
  }]);

  return Toolbar;
}(_module2.default);

Toolbar.DEFAULTS = {};

function addButton(container, format, value) {
  var input = document.createElement('button');
  input.setAttribute('type', 'button');
  input.classList.add('ql-' + format);
  if (value != null) {
    input.value = value;
  }
  container.appendChild(input);
}

function addControls(container, groups) {
  if (!Array.isArray(groups[0])) {
    groups = [groups];
  }
  groups.forEach(function (controls) {
    var group = document.createElement('span');
    group.classList.add('ql-formats');
    controls.forEach(function (control) {
      if (typeof control === 'string') {
        addButton(group, control);
      } else {
        var format = Object.keys(control)[0];
        var value = control[format];
        if (Array.isArray(value)) {
          addSelect(group, format, value);
        } else {
          addButton(group, format, value);
        }
      }
    });
    container.appendChild(group);
  });
}

function addSelect(container, format, values) {
  var input = document.createElement('select');
  input.classList.add('ql-' + format);
  values.forEach(function (value) {
    var option = document.createElement('option');
    if (value !== false) {
      option.setAttribute('value', value);
    } else {
      option.setAttribute('selected', 'selected');
    }
    input.appendChild(option);
  });
  container.appendChild(input);
}

Toolbar.DEFAULTS = {
  container: null,
  handlers: {
    clean: function clean() {
      var _this3 = this;

      var range = this.quill.getSelection();
      if (range == null) return;
      if (range.length == 0) {
        var formats = this.quill.getFormat();
        Object.keys(formats).forEach(function (name) {
          // Clean functionality in existing apps only clean inline formats
          if (_parchment2.default.query(name, _parchment2.default.Scope.INLINE) != null) {
            _this3.quill.format(name, false);
          }
        });
      } else {
        this.quill.removeFormat(range, _quill2.default.sources.USER);
      }
    },
    direction: function direction(value) {
      var align = this.quill.getFormat()['align'];
      if (value === 'rtl' && align == null) {
        this.quill.format('align', 'right', _quill2.default.sources.USER);
      } else if (!value && align === 'right') {
        this.quill.format('align', false, _quill2.default.sources.USER);
      }
      this.quill.format('direction', value, _quill2.default.sources.USER);
    },
    indent: function indent(value) {
      var range = this.quill.getSelection();
      var formats = this.quill.getFormat(range);
      var indent = parseInt(formats.indent || 0);
      if (value === '+1' || value === '-1') {
        var modifier = value === '+1' ? 1 : -1;
        if (formats.direction === 'rtl') modifier *= -1;
        this.quill.format('indent', indent + modifier, _quill2.default.sources.USER);
      }
    },
    link: function link(value) {
      if (value === true) {
        value = prompt('Enter link URL:');
      }
      this.quill.format('link', value, _quill2.default.sources.USER);
    },
    list: function list(value) {
      var range = this.quill.getSelection();
      var formats = this.quill.getFormat(range);
      if (value === 'check') {
        if (formats['list'] === 'checked' || formats['list'] === 'unchecked') {
          this.quill.format('list', false, _quill2.default.sources.USER);
        } else {
          this.quill.format('list', 'unchecked', _quill2.default.sources.USER);
        }
      } else {
        this.quill.format('list', value, _quill2.default.sources.USER);
      }
    }
  }
};

exports.default = Toolbar;
exports.addControls = addControls;

/***/ }),
/* 58 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <polyline class=\\"ql-even ql-stroke\\" points=\\"5 7 3 9 5 11\\"></polyline> <polyline class=\\"ql-even ql-stroke\\" points=\\"13 7 15 9 13 11\\"></polyline> <line class=ql-stroke x1=10 x2=8 y1=5 y2=13></line> </svg>";

/***/ }),
/* 59 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _picker = __webpack_require__(28);

var _picker2 = _interopRequireDefault(_picker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ColorPicker = function (_Picker) {
  _inherits(ColorPicker, _Picker);

  function ColorPicker(select, label) {
    _classCallCheck(this, ColorPicker);

    var _this = _possibleConstructorReturn(this, (ColorPicker.__proto__ || Object.getPrototypeOf(ColorPicker)).call(this, select));

    _this.label.innerHTML = label;
    _this.container.classList.add('ql-color-picker');
    [].slice.call(_this.container.querySelectorAll('.ql-picker-item'), 0, 7).forEach(function (item) {
      item.classList.add('ql-primary');
    });
    return _this;
  }

  _createClass(ColorPicker, [{
    key: 'buildItem',
    value: function buildItem(option) {
      var item = _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'buildItem', this).call(this, option);
      item.style.backgroundColor = option.getAttribute('value') || '';
      return item;
    }
  }, {
    key: 'selectItem',
    value: function selectItem(item, trigger) {
      _get(ColorPicker.prototype.__proto__ || Object.getPrototypeOf(ColorPicker.prototype), 'selectItem', this).call(this, item, trigger);
      var colorLabel = this.label.querySelector('.ql-color-label');
      var value = item ? item.getAttribute('data-value') || '' : '';
      if (colorLabel) {
        if (colorLabel.tagName === 'line') {
          colorLabel.style.stroke = value;
        } else {
          colorLabel.style.fill = value;
        }
      }
    }
  }]);

  return ColorPicker;
}(_picker2.default);

exports.default = ColorPicker;

/***/ }),
/* 60 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _picker = __webpack_require__(28);

var _picker2 = _interopRequireDefault(_picker);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IconPicker = function (_Picker) {
  _inherits(IconPicker, _Picker);

  function IconPicker(select, icons) {
    _classCallCheck(this, IconPicker);

    var _this = _possibleConstructorReturn(this, (IconPicker.__proto__ || Object.getPrototypeOf(IconPicker)).call(this, select));

    _this.container.classList.add('ql-icon-picker');
    [].forEach.call(_this.container.querySelectorAll('.ql-picker-item'), function (item) {
      item.innerHTML = icons[item.getAttribute('data-value') || ''];
    });
    _this.defaultItem = _this.container.querySelector('.ql-selected');
    _this.selectItem(_this.defaultItem);
    return _this;
  }

  _createClass(IconPicker, [{
    key: 'selectItem',
    value: function selectItem(item, trigger) {
      _get(IconPicker.prototype.__proto__ || Object.getPrototypeOf(IconPicker.prototype), 'selectItem', this).call(this, item, trigger);
      item = item || this.defaultItem;
      this.label.innerHTML = item.innerHTML;
    }
  }]);

  return IconPicker;
}(_picker2.default);

exports.default = IconPicker;

/***/ }),
/* 61 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Tooltip = function () {
  function Tooltip(quill, boundsContainer) {
    var _this = this;

    _classCallCheck(this, Tooltip);

    this.quill = quill;
    this.boundsContainer = boundsContainer || document.body;
    this.root = quill.addContainer('ql-tooltip');
    this.root.innerHTML = this.constructor.TEMPLATE;
    if (this.quill.root === this.quill.scrollingContainer) {
      this.quill.root.addEventListener('scroll', function () {
        _this.root.style.marginTop = -1 * _this.quill.root.scrollTop + 'px';
      });
    }
    this.hide();
  }

  _createClass(Tooltip, [{
    key: 'hide',
    value: function hide() {
      this.root.classList.add('ql-hidden');
    }
  }, {
    key: 'position',
    value: function position(reference) {
      var left = reference.left + reference.width / 2 - this.root.offsetWidth / 2;
      // root.scrollTop should be 0 if scrollContainer !== root
      var top = reference.bottom + this.quill.root.scrollTop;
      this.root.style.left = left + 'px';
      this.root.style.top = top + 'px';
      this.root.classList.remove('ql-flip');
      var containerBounds = this.boundsContainer.getBoundingClientRect();
      var rootBounds = this.root.getBoundingClientRect();
      var shift = 0;
      if (rootBounds.right > containerBounds.right) {
        shift = containerBounds.right - rootBounds.right;
        this.root.style.left = left + shift + 'px';
      }
      if (rootBounds.left < containerBounds.left) {
        shift = containerBounds.left - rootBounds.left;
        this.root.style.left = left + shift + 'px';
      }
      if (rootBounds.bottom > containerBounds.bottom) {
        var height = rootBounds.bottom - rootBounds.top;
        var verticalShift = reference.bottom - reference.top + height;
        this.root.style.top = top - verticalShift + 'px';
        this.root.classList.add('ql-flip');
      }
      return shift;
    }
  }, {
    key: 'show',
    value: function show() {
      this.root.classList.remove('ql-editing');
      this.root.classList.remove('ql-hidden');
    }
  }]);

  return Tooltip;
}();

exports.default = Tooltip;

/***/ }),
/* 62 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extend = __webpack_require__(3);

var _extend2 = _interopRequireDefault(_extend);

var _emitter = __webpack_require__(8);

var _emitter2 = _interopRequireDefault(_emitter);

var _base = __webpack_require__(43);

var _base2 = _interopRequireDefault(_base);

var _link = __webpack_require__(27);

var _link2 = _interopRequireDefault(_link);

var _selection = __webpack_require__(15);

var _icons = __webpack_require__(41);

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TOOLBAR_CONFIG = [[{ header: ['1', '2', '3', false] }], ['bold', 'italic', 'underline', 'link'], [{ list: 'ordered' }, { list: 'bullet' }], ['clean']];

var SnowTheme = function (_BaseTheme) {
  _inherits(SnowTheme, _BaseTheme);

  function SnowTheme(quill, options) {
    _classCallCheck(this, SnowTheme);

    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
      options.modules.toolbar.container = TOOLBAR_CONFIG;
    }

    var _this = _possibleConstructorReturn(this, (SnowTheme.__proto__ || Object.getPrototypeOf(SnowTheme)).call(this, quill, options));

    _this.quill.container.classList.add('ql-snow');
    return _this;
  }

  _createClass(SnowTheme, [{
    key: 'extendToolbar',
    value: function extendToolbar(toolbar) {
      toolbar.container.classList.add('ql-snow');
      this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2.default);
      this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2.default);
      this.tooltip = new SnowTooltip(this.quill, this.options.bounds);
      if (toolbar.container.querySelector('.ql-link')) {
        this.quill.keyboard.addBinding({ key: 'K', shortKey: true }, function (range, context) {
          toolbar.handlers['link'].call(toolbar, !context.format.link);
        });
      }
    }
  }]);

  return SnowTheme;
}(_base2.default);

SnowTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
  modules: {
    toolbar: {
      handlers: {
        link: function link(value) {
          if (value) {
            var range = this.quill.getSelection();
            if (range == null || range.length == 0) return;
            var preview = this.quill.getText(range);
            if (/^\\S+@\\S+\\.\\S+$/.test(preview) && preview.indexOf('mailto:') !== 0) {
              preview = 'mailto:' + preview;
            }
            var tooltip = this.quill.theme.tooltip;
            tooltip.edit('link', preview);
          } else {
            this.quill.format('link', false);
          }
        }
      }
    }
  }
});

var SnowTooltip = function (_BaseTooltip) {
  _inherits(SnowTooltip, _BaseTooltip);

  function SnowTooltip(quill, bounds) {
    _classCallCheck(this, SnowTooltip);

    var _this2 = _possibleConstructorReturn(this, (SnowTooltip.__proto__ || Object.getPrototypeOf(SnowTooltip)).call(this, quill, bounds));

    _this2.preview = _this2.root.querySelector('a.ql-preview');
    return _this2;
  }

  _createClass(SnowTooltip, [{
    key: 'listen',
    value: function listen() {
      var _this3 = this;

      _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'listen', this).call(this);
      this.root.querySelector('a.ql-action').addEventListener('click', function (event) {
        if (_this3.root.classList.contains('ql-editing')) {
          _this3.save();
        } else {
          _this3.edit('link', _this3.preview.textContent);
        }
        event.preventDefault();
      });
      this.root.querySelector('a.ql-remove').addEventListener('click', function (event) {
        if (_this3.linkRange != null) {
          var range = _this3.linkRange;
          _this3.restoreFocus();
          _this3.quill.formatText(range, 'link', false, _emitter2.default.sources.USER);
          delete _this3.linkRange;
        }
        event.preventDefault();
        _this3.hide();
      });
      this.quill.on(_emitter2.default.events.SELECTION_CHANGE, function (range, oldRange, source) {
        if (range == null) return;
        if (range.length === 0 && source === _emitter2.default.sources.USER) {
          var _quill$scroll$descend = _this3.quill.scroll.descendant(_link2.default, range.index),
              _quill$scroll$descend2 = _slicedToArray(_quill$scroll$descend, 2),
              link = _quill$scroll$descend2[0],
              offset = _quill$scroll$descend2[1];

          if (link != null) {
            _this3.linkRange = new _selection.Range(range.index - offset, link.length());
            var preview = _link2.default.formats(link.domNode);
            _this3.preview.textContent = preview;
            _this3.preview.setAttribute('href', preview);
            _this3.show();
            _this3.position(_this3.quill.getBounds(_this3.linkRange));
            return;
          }
        } else {
          delete _this3.linkRange;
        }
        _this3.hide();
      });
    }
  }, {
    key: 'show',
    value: function show() {
      _get(SnowTooltip.prototype.__proto__ || Object.getPrototypeOf(SnowTooltip.prototype), 'show', this).call(this);
      this.root.removeAttribute('data-mode');
    }
  }]);

  return SnowTooltip;
}(_base.BaseTooltip);

SnowTooltip.TEMPLATE = ['<a class="ql-preview" rel="noopener noreferrer" target="_blank" href="about:blank"></a>', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-action"></a>', '<a class="ql-remove"></a>'].join('');

exports.default = SnowTheme;

/***/ }),
/* 63 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _core = __webpack_require__(29);

var _core2 = _interopRequireDefault(_core);

var _align = __webpack_require__(36);

var _direction = __webpack_require__(38);

var _indent = __webpack_require__(64);

var _blockquote = __webpack_require__(65);

var _blockquote2 = _interopRequireDefault(_blockquote);

var _header = __webpack_require__(66);

var _header2 = _interopRequireDefault(_header);

var _list = __webpack_require__(67);

var _list2 = _interopRequireDefault(_list);

var _background = __webpack_require__(37);

var _color = __webpack_require__(26);

var _font = __webpack_require__(39);

var _size = __webpack_require__(40);

var _bold = __webpack_require__(56);

var _bold2 = _interopRequireDefault(_bold);

var _italic = __webpack_require__(68);

var _italic2 = _interopRequireDefault(_italic);

var _link = __webpack_require__(27);

var _link2 = _interopRequireDefault(_link);

var _script = __webpack_require__(69);

var _script2 = _interopRequireDefault(_script);

var _strike = __webpack_require__(70);

var _strike2 = _interopRequireDefault(_strike);

var _underline = __webpack_require__(71);

var _underline2 = _interopRequireDefault(_underline);

var _image = __webpack_require__(72);

var _image2 = _interopRequireDefault(_image);

var _video = __webpack_require__(73);

var _video2 = _interopRequireDefault(_video);

var _code = __webpack_require__(13);

var _code2 = _interopRequireDefault(_code);

var _formula = __webpack_require__(74);

var _formula2 = _interopRequireDefault(_formula);

var _syntax = __webpack_require__(75);

var _syntax2 = _interopRequireDefault(_syntax);

var _toolbar = __webpack_require__(57);

var _toolbar2 = _interopRequireDefault(_toolbar);

var _icons = __webpack_require__(41);

var _icons2 = _interopRequireDefault(_icons);

var _picker = __webpack_require__(28);

var _picker2 = _interopRequireDefault(_picker);

var _colorPicker = __webpack_require__(59);

var _colorPicker2 = _interopRequireDefault(_colorPicker);

var _iconPicker = __webpack_require__(60);

var _iconPicker2 = _interopRequireDefault(_iconPicker);

var _tooltip = __webpack_require__(61);

var _tooltip2 = _interopRequireDefault(_tooltip);

var _bubble = __webpack_require__(108);

var _bubble2 = _interopRequireDefault(_bubble);

var _snow = __webpack_require__(62);

var _snow2 = _interopRequireDefault(_snow);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_core2.default.register({
  'attributors/attribute/direction': _direction.DirectionAttribute,

  'attributors/class/align': _align.AlignClass,
  'attributors/class/background': _background.BackgroundClass,
  'attributors/class/color': _color.ColorClass,
  'attributors/class/direction': _direction.DirectionClass,
  'attributors/class/font': _font.FontClass,
  'attributors/class/size': _size.SizeClass,

  'attributors/style/align': _align.AlignStyle,
  'attributors/style/background': _background.BackgroundStyle,
  'attributors/style/color': _color.ColorStyle,
  'attributors/style/direction': _direction.DirectionStyle,
  'attributors/style/font': _font.FontStyle,
  'attributors/style/size': _size.SizeStyle
}, true);

_core2.default.register({
  'formats/align': _align.AlignClass,
  'formats/direction': _direction.DirectionClass,
  'formats/indent': _indent.IndentClass,

  'formats/background': _background.BackgroundStyle,
  'formats/color': _color.ColorStyle,
  'formats/font': _font.FontClass,
  'formats/size': _size.SizeClass,

  'formats/blockquote': _blockquote2.default,
  'formats/code-block': _code2.default,
  'formats/header': _header2.default,
  'formats/list': _list2.default,

  'formats/bold': _bold2.default,
  'formats/code': _code.Code,
  'formats/italic': _italic2.default,
  'formats/link': _link2.default,
  'formats/script': _script2.default,
  'formats/strike': _strike2.default,
  'formats/underline': _underline2.default,

  'formats/image': _image2.default,
  'formats/video': _video2.default,

  'formats/list/item': _list.ListItem,

  'modules/formula': _formula2.default,
  'modules/syntax': _syntax2.default,
  'modules/toolbar': _toolbar2.default,

  'themes/bubble': _bubble2.default,
  'themes/snow': _snow2.default,

  'ui/icons': _icons2.default,
  'ui/picker': _picker2.default,
  'ui/icon-picker': _iconPicker2.default,
  'ui/color-picker': _colorPicker2.default,
  'ui/tooltip': _tooltip2.default
}, true);

exports.default = _core2.default;

/***/ }),
/* 64 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.IndentClass = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var IdentAttributor = function (_Parchment$Attributor) {
  _inherits(IdentAttributor, _Parchment$Attributor);

  function IdentAttributor() {
    _classCallCheck(this, IdentAttributor);

    return _possibleConstructorReturn(this, (IdentAttributor.__proto__ || Object.getPrototypeOf(IdentAttributor)).apply(this, arguments));
  }

  _createClass(IdentAttributor, [{
    key: 'add',
    value: function add(node, value) {
      if (value === '+1' || value === '-1') {
        var indent = this.value(node) || 0;
        value = value === '+1' ? indent + 1 : indent - 1;
      }
      if (value === 0) {
        this.remove(node);
        return true;
      } else {
        return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'add', this).call(this, node, value);
      }
    }
  }, {
    key: 'canAdd',
    value: function canAdd(node, value) {
      return _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, value) || _get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'canAdd', this).call(this, node, parseInt(value));
    }
  }, {
    key: 'value',
    value: function value(node) {
      return parseInt(_get(IdentAttributor.prototype.__proto__ || Object.getPrototypeOf(IdentAttributor.prototype), 'value', this).call(this, node)) || undefined; // Don't return NaN
    }
  }]);

  return IdentAttributor;
}(_parchment2.default.Attributor.Class);

var IndentClass = new IdentAttributor('indent', 'ql-indent', {
  scope: _parchment2.default.Scope.BLOCK,
  whitelist: [1, 2, 3, 4, 5, 6, 7, 8]
});

exports.IndentClass = IndentClass;

/***/ }),
/* 65 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _block = __webpack_require__(4);

var _block2 = _interopRequireDefault(_block);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Blockquote = function (_Block) {
  _inherits(Blockquote, _Block);

  function Blockquote() {
    _classCallCheck(this, Blockquote);

    return _possibleConstructorReturn(this, (Blockquote.__proto__ || Object.getPrototypeOf(Blockquote)).apply(this, arguments));
  }

  return Blockquote;
}(_block2.default);

Blockquote.blotName = 'blockquote';
Blockquote.tagName = 'blockquote';

exports.default = Blockquote;

/***/ }),
/* 66 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _block = __webpack_require__(4);

var _block2 = _interopRequireDefault(_block);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Header = function (_Block) {
  _inherits(Header, _Block);

  function Header() {
    _classCallCheck(this, Header);

    return _possibleConstructorReturn(this, (Header.__proto__ || Object.getPrototypeOf(Header)).apply(this, arguments));
  }

  _createClass(Header, null, [{
    key: 'formats',
    value: function formats(domNode) {
      return this.tagName.indexOf(domNode.tagName) + 1;
    }
  }]);

  return Header;
}(_block2.default);

Header.blotName = 'header';
Header.tagName = ['H1', 'H2', 'H3', 'H4', 'H5', 'H6'];

exports.default = Header;

/***/ }),
/* 67 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ListItem = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _block = __webpack_require__(4);

var _block2 = _interopRequireDefault(_block);

var _container = __webpack_require__(25);

var _container2 = _interopRequireDefault(_container);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ListItem = function (_Block) {
  _inherits(ListItem, _Block);

  function ListItem() {
    _classCallCheck(this, ListItem);

    return _possibleConstructorReturn(this, (ListItem.__proto__ || Object.getPrototypeOf(ListItem)).apply(this, arguments));
  }

  _createClass(ListItem, [{
    key: 'format',
    value: function format(name, value) {
      if (name === List.blotName && !value) {
        this.replaceWith(_parchment2.default.create(this.statics.scope));
      } else {
        _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'format', this).call(this, name, value);
      }
    }
  }, {
    key: 'remove',
    value: function remove() {
      if (this.prev == null && this.next == null) {
        this.parent.remove();
      } else {
        _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'remove', this).call(this);
      }
    }
  }, {
    key: 'replaceWith',
    value: function replaceWith(name, value) {
      this.parent.isolate(this.offset(this.parent), this.length());
      if (name === this.parent.statics.blotName) {
        this.parent.replaceWith(name, value);
        return this;
      } else {
        this.parent.unwrap();
        return _get(ListItem.prototype.__proto__ || Object.getPrototypeOf(ListItem.prototype), 'replaceWith', this).call(this, name, value);
      }
    }
  }], [{
    key: 'formats',
    value: function formats(domNode) {
      return domNode.tagName === this.tagName ? undefined : _get(ListItem.__proto__ || Object.getPrototypeOf(ListItem), 'formats', this).call(this, domNode);
    }
  }]);

  return ListItem;
}(_block2.default);

ListItem.blotName = 'list-item';
ListItem.tagName = 'LI';

var List = function (_Container) {
  _inherits(List, _Container);

  _createClass(List, null, [{
    key: 'create',
    value: function create(value) {
      var tagName = value === 'ordered' ? 'OL' : 'UL';
      var node = _get(List.__proto__ || Object.getPrototypeOf(List), 'create', this).call(this, tagName);
      if (value === 'checked' || value === 'unchecked') {
        node.setAttribute('data-checked', value === 'checked');
      }
      return node;
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      if (domNode.tagName === 'OL') return 'ordered';
      if (domNode.tagName === 'UL') {
        if (domNode.hasAttribute('data-checked')) {
          return domNode.getAttribute('data-checked') === 'true' ? 'checked' : 'unchecked';
        } else {
          return 'bullet';
        }
      }
      return undefined;
    }
  }]);

  function List(domNode) {
    _classCallCheck(this, List);

    var _this2 = _possibleConstructorReturn(this, (List.__proto__ || Object.getPrototypeOf(List)).call(this, domNode));

    var listEventHandler = function listEventHandler(e) {
      if (e.target.parentNode !== domNode) return;
      var format = _this2.statics.formats(domNode);
      var blot = _parchment2.default.find(e.target);
      if (format === 'checked') {
        blot.format('list', 'unchecked');
      } else if (format === 'unchecked') {
        blot.format('list', 'checked');
      }
    };

    domNode.addEventListener('touchstart', listEventHandler);
    domNode.addEventListener('mousedown', listEventHandler);
    return _this2;
  }

  _createClass(List, [{
    key: 'format',
    value: function format(name, value) {
      if (this.children.length > 0) {
        this.children.tail.format(name, value);
      }
    }
  }, {
    key: 'formats',
    value: function formats() {
      // We don't inherit from FormatBlot
      return _defineProperty({}, this.statics.blotName, this.statics.formats(this.domNode));
    }
  }, {
    key: 'insertBefore',
    value: function insertBefore(blot, ref) {
      if (blot instanceof ListItem) {
        _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'insertBefore', this).call(this, blot, ref);
      } else {
        var index = ref == null ? this.length() : ref.offset(this);
        var after = this.split(index);
        after.parent.insertBefore(blot, after);
      }
    }
  }, {
    key: 'optimize',
    value: function optimize(context) {
      _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'optimize', this).call(this, context);
      var next = this.next;
      if (next != null && next.prev === this && next.statics.blotName === this.statics.blotName && next.domNode.tagName === this.domNode.tagName && next.domNode.getAttribute('data-checked') === this.domNode.getAttribute('data-checked')) {
        next.moveChildren(this);
        next.remove();
      }
    }
  }, {
    key: 'replace',
    value: function replace(target) {
      if (target.statics.blotName !== this.statics.blotName) {
        var item = _parchment2.default.create(this.statics.defaultChild);
        target.moveChildren(item);
        this.appendChild(item);
      }
      _get(List.prototype.__proto__ || Object.getPrototypeOf(List.prototype), 'replace', this).call(this, target);
    }
  }]);

  return List;
}(_container2.default);

List.blotName = 'list';
List.scope = _parchment2.default.Scope.BLOCK_BLOT;
List.tagName = ['OL', 'UL'];
List.defaultChild = 'list-item';
List.allowedChildren = [ListItem];

exports.ListItem = ListItem;
exports.default = List;

/***/ }),
/* 68 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _bold = __webpack_require__(56);

var _bold2 = _interopRequireDefault(_bold);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Italic = function (_Bold) {
  _inherits(Italic, _Bold);

  function Italic() {
    _classCallCheck(this, Italic);

    return _possibleConstructorReturn(this, (Italic.__proto__ || Object.getPrototypeOf(Italic)).apply(this, arguments));
  }

  return Italic;
}(_bold2.default);

Italic.blotName = 'italic';
Italic.tagName = ['EM', 'I'];

exports.default = Italic;

/***/ }),
/* 69 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _inline = __webpack_require__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Script = function (_Inline) {
  _inherits(Script, _Inline);

  function Script() {
    _classCallCheck(this, Script);

    return _possibleConstructorReturn(this, (Script.__proto__ || Object.getPrototypeOf(Script)).apply(this, arguments));
  }

  _createClass(Script, null, [{
    key: 'create',
    value: function create(value) {
      if (value === 'super') {
        return document.createElement('sup');
      } else if (value === 'sub') {
        return document.createElement('sub');
      } else {
        return _get(Script.__proto__ || Object.getPrototypeOf(Script), 'create', this).call(this, value);
      }
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      if (domNode.tagName === 'SUB') return 'sub';
      if (domNode.tagName === 'SUP') return 'super';
      return undefined;
    }
  }]);

  return Script;
}(_inline2.default);

Script.blotName = 'script';
Script.tagName = ['SUB', 'SUP'];

exports.default = Script;

/***/ }),
/* 70 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _inline = __webpack_require__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Strike = function (_Inline) {
  _inherits(Strike, _Inline);

  function Strike() {
    _classCallCheck(this, Strike);

    return _possibleConstructorReturn(this, (Strike.__proto__ || Object.getPrototypeOf(Strike)).apply(this, arguments));
  }

  return Strike;
}(_inline2.default);

Strike.blotName = 'strike';
Strike.tagName = 'S';

exports.default = Strike;

/***/ }),
/* 71 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _inline = __webpack_require__(6);

var _inline2 = _interopRequireDefault(_inline);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Underline = function (_Inline) {
  _inherits(Underline, _Inline);

  function Underline() {
    _classCallCheck(this, Underline);

    return _possibleConstructorReturn(this, (Underline.__proto__ || Object.getPrototypeOf(Underline)).apply(this, arguments));
  }

  return Underline;
}(_inline2.default);

Underline.blotName = 'underline';
Underline.tagName = 'U';

exports.default = Underline;

/***/ }),
/* 72 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _link = __webpack_require__(27);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ATTRIBUTES = ['alt', 'height', 'width'];

var Image = function (_Parchment$Embed) {
  _inherits(Image, _Parchment$Embed);

  function Image() {
    _classCallCheck(this, Image);

    return _possibleConstructorReturn(this, (Image.__proto__ || Object.getPrototypeOf(Image)).apply(this, arguments));
  }

  _createClass(Image, [{
    key: 'format',
    value: function format(name, value) {
      if (ATTRIBUTES.indexOf(name) > -1) {
        if (value) {
          this.domNode.setAttribute(name, value);
        } else {
          this.domNode.removeAttribute(name);
        }
      } else {
        _get(Image.prototype.__proto__ || Object.getPrototypeOf(Image.prototype), 'format', this).call(this, name, value);
      }
    }
  }], [{
    key: 'create',
    value: function create(value) {
      var node = _get(Image.__proto__ || Object.getPrototypeOf(Image), 'create', this).call(this, value);
      if (typeof value === 'string') {
        node.setAttribute('src', this.sanitize(value));
      }
      return node;
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      return ATTRIBUTES.reduce(function (formats, attribute) {
        if (domNode.hasAttribute(attribute)) {
          formats[attribute] = domNode.getAttribute(attribute);
        }
        return formats;
      }, {});
    }
  }, {
    key: 'match',
    value: function match(url) {
      return (/\\.(jpe?g|gif|png)$/.test(url) || /^data:image\\/.+;base64/.test(url)
      );
    }
  }, {
    key: 'sanitize',
    value: function sanitize(url) {
      return (0, _link.sanitize)(url, ['http', 'https', 'data']) ? url : '//:0';
    }
  }, {
    key: 'value',
    value: function value(domNode) {
      return domNode.getAttribute('src');
    }
  }]);

  return Image;
}(_parchment2.default.Embed);

Image.blotName = 'image';
Image.tagName = 'IMG';

exports.default = Image;

/***/ }),
/* 73 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _block = __webpack_require__(4);

var _link = __webpack_require__(27);

var _link2 = _interopRequireDefault(_link);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ATTRIBUTES = ['height', 'width'];

var Video = function (_BlockEmbed) {
  _inherits(Video, _BlockEmbed);

  function Video() {
    _classCallCheck(this, Video);

    return _possibleConstructorReturn(this, (Video.__proto__ || Object.getPrototypeOf(Video)).apply(this, arguments));
  }

  _createClass(Video, [{
    key: 'format',
    value: function format(name, value) {
      if (ATTRIBUTES.indexOf(name) > -1) {
        if (value) {
          this.domNode.setAttribute(name, value);
        } else {
          this.domNode.removeAttribute(name);
        }
      } else {
        _get(Video.prototype.__proto__ || Object.getPrototypeOf(Video.prototype), 'format', this).call(this, name, value);
      }
    }
  }], [{
    key: 'create',
    value: function create(value) {
      var node = _get(Video.__proto__ || Object.getPrototypeOf(Video), 'create', this).call(this, value);
      node.setAttribute('frameborder', '0');
      node.setAttribute('allowfullscreen', true);
      node.setAttribute('src', this.sanitize(value));
      return node;
    }
  }, {
    key: 'formats',
    value: function formats(domNode) {
      return ATTRIBUTES.reduce(function (formats, attribute) {
        if (domNode.hasAttribute(attribute)) {
          formats[attribute] = domNode.getAttribute(attribute);
        }
        return formats;
      }, {});
    }
  }, {
    key: 'sanitize',
    value: function sanitize(url) {
      return _link2.default.sanitize(url);
    }
  }, {
    key: 'value',
    value: function value(domNode) {
      return domNode.getAttribute('src');
    }
  }]);

  return Video;
}(_block.BlockEmbed);

Video.blotName = 'video';
Video.className = 'ql-video';
Video.tagName = 'IFRAME';

exports.default = Video;

/***/ }),
/* 74 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.FormulaBlot = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _embed = __webpack_require__(35);

var _embed2 = _interopRequireDefault(_embed);

var _quill = __webpack_require__(5);

var _quill2 = _interopRequireDefault(_quill);

var _module = __webpack_require__(9);

var _module2 = _interopRequireDefault(_module);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FormulaBlot = function (_Embed) {
  _inherits(FormulaBlot, _Embed);

  function FormulaBlot() {
    _classCallCheck(this, FormulaBlot);

    return _possibleConstructorReturn(this, (FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot)).apply(this, arguments));
  }

  _createClass(FormulaBlot, null, [{
    key: 'create',
    value: function create(value) {
      var node = _get(FormulaBlot.__proto__ || Object.getPrototypeOf(FormulaBlot), 'create', this).call(this, value);
      if (typeof value === 'string') {
        window.katex.render(value, node, {
          throwOnError: false,
          errorColor: '#f00'
        });
        node.setAttribute('data-value', value);
      }
      return node;
    }
  }, {
    key: 'value',
    value: function value(domNode) {
      return domNode.getAttribute('data-value');
    }
  }]);

  return FormulaBlot;
}(_embed2.default);

FormulaBlot.blotName = 'formula';
FormulaBlot.className = 'ql-formula';
FormulaBlot.tagName = 'SPAN';

var Formula = function (_Module) {
  _inherits(Formula, _Module);

  _createClass(Formula, null, [{
    key: 'register',
    value: function register() {
      _quill2.default.register(FormulaBlot, true);
    }
  }]);

  function Formula() {
    _classCallCheck(this, Formula);

    var _this2 = _possibleConstructorReturn(this, (Formula.__proto__ || Object.getPrototypeOf(Formula)).call(this));

    if (window.katex == null) {
      throw new Error('Formula module requires KaTeX.');
    }
    return _this2;
  }

  return Formula;
}(_module2.default);

exports.FormulaBlot = FormulaBlot;
exports.default = Formula;

/***/ }),
/* 75 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CodeToken = exports.CodeBlock = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _parchment = __webpack_require__(0);

var _parchment2 = _interopRequireDefault(_parchment);

var _quill = __webpack_require__(5);

var _quill2 = _interopRequireDefault(_quill);

var _module = __webpack_require__(9);

var _module2 = _interopRequireDefault(_module);

var _code = __webpack_require__(13);

var _code2 = _interopRequireDefault(_code);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var SyntaxCodeBlock = function (_CodeBlock) {
  _inherits(SyntaxCodeBlock, _CodeBlock);

  function SyntaxCodeBlock() {
    _classCallCheck(this, SyntaxCodeBlock);

    return _possibleConstructorReturn(this, (SyntaxCodeBlock.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock)).apply(this, arguments));
  }

  _createClass(SyntaxCodeBlock, [{
    key: 'replaceWith',
    value: function replaceWith(block) {
      this.domNode.textContent = this.domNode.textContent;
      this.attach();
      _get(SyntaxCodeBlock.prototype.__proto__ || Object.getPrototypeOf(SyntaxCodeBlock.prototype), 'replaceWith', this).call(this, block);
    }
  }, {
    key: 'highlight',
    value: function highlight(_highlight) {
      var text = this.domNode.textContent;
      if (this.cachedText !== text) {
        if (text.trim().length > 0 || this.cachedText == null) {
          this.domNode.innerHTML = _highlight(text);
          this.domNode.normalize();
          this.attach();
        }
        this.cachedText = text;
      }
    }
  }]);

  return SyntaxCodeBlock;
}(_code2.default);

SyntaxCodeBlock.className = 'ql-syntax';

var CodeToken = new _parchment2.default.Attributor.Class('token', 'hljs', {
  scope: _parchment2.default.Scope.INLINE
});

var Syntax = function (_Module) {
  _inherits(Syntax, _Module);

  _createClass(Syntax, null, [{
    key: 'register',
    value: function register() {
      _quill2.default.register(CodeToken, true);
      _quill2.default.register(SyntaxCodeBlock, true);
    }
  }]);

  function Syntax(quill, options) {
    _classCallCheck(this, Syntax);

    var _this2 = _possibleConstructorReturn(this, (Syntax.__proto__ || Object.getPrototypeOf(Syntax)).call(this, quill, options));

    if (typeof _this2.options.highlight !== 'function') {
      throw new Error('Syntax module requires highlight.js. Please include the library on the page before Quill.');
    }
    var timer = null;
    _this2.quill.on(_quill2.default.events.SCROLL_OPTIMIZE, function () {
      clearTimeout(timer);
      timer = setTimeout(function () {
        _this2.highlight();
        timer = null;
      }, _this2.options.interval);
    });
    _this2.highlight();
    return _this2;
  }

  _createClass(Syntax, [{
    key: 'highlight',
    value: function highlight() {
      var _this3 = this;

      if (this.quill.selection.composing) return;
      this.quill.update(_quill2.default.sources.USER);
      var range = this.quill.getSelection();
      this.quill.scroll.descendants(SyntaxCodeBlock).forEach(function (code) {
        code.highlight(_this3.options.highlight);
      });
      this.quill.update(_quill2.default.sources.SILENT);
      if (range != null) {
        this.quill.setSelection(range, _quill2.default.sources.SILENT);
      }
    }
  }]);

  return Syntax;
}(_module2.default);

Syntax.DEFAULTS = {
  highlight: function () {
    if (window.hljs == null) return null;
    return function (text) {
      var result = window.hljs.highlightAuto(text);
      return result.value;
    };
  }(),
  interval: 1000
};

exports.CodeBlock = SyntaxCodeBlock;
exports.CodeToken = CodeToken;
exports.default = Syntax;

/***/ }),
/* 76 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=3 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=13 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=9 y1=4 y2=4></line> </svg>";

/***/ }),
/* 77 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=14 x2=4 y1=14 y2=14></line> <line class=ql-stroke x1=12 x2=6 y1=4 y2=4></line> </svg>";

/***/ }),
/* 78 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=5 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=9 y1=4 y2=4></line> </svg>";

/***/ }),
/* 79 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=15 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=15 x2=3 y1=14 y2=14></line> <line class=ql-stroke x1=15 x2=3 y1=4 y2=4></line> </svg>";

/***/ }),
/* 80 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <g class=\\"ql-fill ql-color-label\\"> <polygon points=\\"6 6.868 6 6 5 6 5 7 5.942 7 6 6.868\\"></polygon> <rect height=1 width=1 x=4 y=4></rect> <polygon points=\\"6.817 5 6 5 6 6 6.38 6 6.817 5\\"></polygon> <rect height=1 width=1 x=2 y=6></rect> <rect height=1 width=1 x=3 y=5></rect> <rect height=1 width=1 x=4 y=7></rect> <polygon points=\\"4 11.439 4 11 3 11 3 12 3.755 12 4 11.439\\"></polygon> <rect height=1 width=1 x=2 y=12></rect> <rect height=1 width=1 x=2 y=9></rect> <rect height=1 width=1 x=2 y=15></rect> <polygon points=\\"4.63 10 4 10 4 11 4.192 11 4.63 10\\"></polygon> <rect height=1 width=1 x=3 y=8></rect> <path d=M10.832,4.2L11,4.582V4H10.708A1.948,1.948,0,0,1,10.832,4.2Z></path> <path d=M7,4.582L7.168,4.2A1.929,1.929,0,0,1,7.292,4H7V4.582Z></path> <path d=M8,13H7.683l-0.351.8a1.933,1.933,0,0,1-.124.2H8V13Z></path> <rect height=1 width=1 x=12 y=2></rect> <rect height=1 width=1 x=11 y=3></rect> <path d=M9,3H8V3.282A1.985,1.985,0,0,1,9,3Z></path> <rect height=1 width=1 x=2 y=3></rect> <rect height=1 width=1 x=6 y=2></rect> <rect height=1 width=1 x=3 y=2></rect> <rect height=1 width=1 x=5 y=3></rect> <rect height=1 width=1 x=9 y=2></rect> <rect height=1 width=1 x=15 y=14></rect> <polygon points=\\"13.447 10.174 13.469 10.225 13.472 10.232 13.808 11 14 11 14 10 13.37 10 13.447 10.174\\"></polygon> <rect height=1 width=1 x=13 y=7></rect> <rect height=1 width=1 x=15 y=5></rect> <rect height=1 width=1 x=14 y=6></rect> <rect height=1 width=1 x=15 y=8></rect> <rect height=1 width=1 x=14 y=9></rect> <path d=M3.775,14H3v1H4V14.314A1.97,1.97,0,0,1,3.775,14Z></path> <rect height=1 width=1 x=14 y=3></rect> <polygon points=\\"12 6.868 12 6 11.62 6 12 6.868\\"></polygon> <rect height=1 width=1 x=15 y=2></rect> <rect height=1 width=1 x=12 y=5></rect> <rect height=1 width=1 x=13 y=4></rect> <polygon points=\\"12.933 9 13 9 13 8 12.495 8 12.933 9\\"></polygon> <rect height=1 width=1 x=9 y=14></rect> <rect height=1 width=1 x=8 y=15></rect> <path d=M6,14.926V15H7V14.316A1.993,1.993,0,0,1,6,14.926Z></path> <rect height=1 width=1 x=5 y=15></rect> <path d=M10.668,13.8L10.317,13H10v1h0.792A1.947,1.947,0,0,1,10.668,13.8Z></path> <rect height=1 width=1 x=11 y=15></rect> <path d=M14.332,12.2a1.99,1.99,0,0,1,.166.8H15V12H14.245Z></path> <rect height=1 width=1 x=14 y=15></rect> <rect height=1 width=1 x=15 y=11></rect> </g> <polyline class=ql-stroke points=\\"5.5 13 9 5 12.5 13\\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=11 y2=11></line> </svg>";

/***/ }),
/* 81 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <rect class=\\"ql-fill ql-stroke\\" height=3 width=3 x=4 y=5></rect> <rect class=\\"ql-fill ql-stroke\\" height=3 width=3 x=11 y=5></rect> <path class=\\"ql-even ql-fill ql-stroke\\" d=M7,8c0,4.031-3,5-3,5></path> <path class=\\"ql-even ql-fill ql-stroke\\" d=M14,8c0,4.031-3,5-3,5></path> </svg>";

/***/ }),
/* 82 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-stroke d=M5,4H9.5A2.5,2.5,0,0,1,12,6.5v0A2.5,2.5,0,0,1,9.5,9H5A0,0,0,0,1,5,9V4A0,0,0,0,1,5,4Z></path> <path class=ql-stroke d=M5,9h5.5A2.5,2.5,0,0,1,13,11.5v0A2.5,2.5,0,0,1,10.5,14H5a0,0,0,0,1,0,0V9A0,0,0,0,1,5,9Z></path> </svg>";

/***/ }),
/* 83 */
/***/ (function(module, exports) {

module.exports = "<svg class=\\"\\" viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=5 x2=13 y1=3 y2=3></line> <line class=ql-stroke x1=6 x2=9.35 y1=12 y2=3></line> <line class=ql-stroke x1=11 x2=15 y1=11 y2=15></line> <line class=ql-stroke x1=15 x2=11 y1=11 y2=15></line> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=7 x=2 y=14></rect> </svg>";

/***/ }),
/* 84 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=\\"ql-color-label ql-stroke ql-transparent\\" x1=3 x2=15 y1=15 y2=15></line> <polyline class=ql-stroke points=\\"5.5 11 9 3 12.5 11\\"></polyline> <line class=ql-stroke x1=11.63 x2=6.38 y1=9 y2=9></line> </svg>";

/***/ }),
/* 85 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <polygon class=\\"ql-stroke ql-fill\\" points=\\"3 11 5 9 3 7 3 11\\"></polygon> <line class=\\"ql-stroke ql-fill\\" x1=15 x2=11 y1=4 y2=4></line> <path class=ql-fill d=M11,3a3,3,0,0,0,0,6h1V3H11Z></path> <rect class=ql-fill height=11 width=1 x=11 y=4></rect> <rect class=ql-fill height=11 width=1 x=13 y=4></rect> </svg>";

/***/ }),
/* 86 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <polygon class=\\"ql-stroke ql-fill\\" points=\\"15 12 13 10 15 8 15 12\\"></polygon> <line class=\\"ql-stroke ql-fill\\" x1=9 x2=5 y1=4 y2=4></line> <path class=ql-fill d=M5,3A3,3,0,0,0,5,9H6V3H5Z></path> <rect class=ql-fill height=11 width=1 x=5 y=4></rect> <rect class=ql-fill height=11 width=1 x=7 y=4></rect> </svg>";

/***/ }),
/* 87 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-fill d=M14,16H4a1,1,0,0,1,0-2H14A1,1,0,0,1,14,16Z /> <path class=ql-fill d=M14,4H4A1,1,0,0,1,4,2H14A1,1,0,0,1,14,4Z /> <rect class=ql-fill x=3 y=6 width=12 height=6 rx=1 ry=1 /> </svg>";

/***/ }),
/* 88 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-fill d=M13,16H5a1,1,0,0,1,0-2h8A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H5A1,1,0,0,1,5,2h8A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=2 y=6 width=14 height=6 rx=1 ry=1 /> </svg>";

/***/ }),
/* 89 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-fill d=M15,8H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,8Z /> <path class=ql-fill d=M15,12H13a1,1,0,0,1,0-2h2A1,1,0,0,1,15,12Z /> <path class=ql-fill d=M15,16H5a1,1,0,0,1,0-2H15A1,1,0,0,1,15,16Z /> <path class=ql-fill d=M15,4H5A1,1,0,0,1,5,2H15A1,1,0,0,1,15,4Z /> <rect class=ql-fill x=2 y=6 width=8 height=6 rx=1 ry=1 /> </svg>";

/***/ }),
/* 90 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-fill d=M5,8H3A1,1,0,0,1,3,6H5A1,1,0,0,1,5,8Z /> <path class=ql-fill d=M5,12H3a1,1,0,0,1,0-2H5A1,1,0,0,1,5,12Z /> <path class=ql-fill d=M13,16H3a1,1,0,0,1,0-2H13A1,1,0,0,1,13,16Z /> <path class=ql-fill d=M13,4H3A1,1,0,0,1,3,2H13A1,1,0,0,1,13,4Z /> <rect class=ql-fill x=8 y=6 width=8 height=6 rx=1 ry=1 transform=\\"translate(24 18) rotate(-180)\\"/> </svg>";

/***/ }),
/* 91 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-fill d=M11.759,2.482a2.561,2.561,0,0,0-3.53.607A7.656,7.656,0,0,0,6.8,6.2C6.109,9.188,5.275,14.677,4.15,14.927a1.545,1.545,0,0,0-1.3-.933A0.922,0.922,0,0,0,2,15.036S1.954,16,4.119,16s3.091-2.691,3.7-5.553c0.177-.826.36-1.726,0.554-2.6L8.775,6.2c0.381-1.421.807-2.521,1.306-2.676a1.014,1.014,0,0,0,1.02.56A0.966,0.966,0,0,0,11.759,2.482Z></path> <rect class=ql-fill height=1.6 rx=0.8 ry=0.8 width=5 x=5.15 y=6.2></rect> <path class=ql-fill d=M13.663,12.027a1.662,1.662,0,0,1,.266-0.276q0.193,0.069.456,0.138a2.1,2.1,0,0,0,.535.069,1.075,1.075,0,0,0,.767-0.3,1.044,1.044,0,0,0,.314-0.8,0.84,0.84,0,0,0-.238-0.619,0.8,0.8,0,0,0-.594-0.239,1.154,1.154,0,0,0-.781.3,4.607,4.607,0,0,0-.781,1q-0.091.15-.218,0.346l-0.246.38c-0.068-.288-0.137-0.582-0.212-0.885-0.459-1.847-2.494-.984-2.941-0.8-0.482.2-.353,0.647-0.094,0.529a0.869,0.869,0,0,1,1.281.585c0.217,0.751.377,1.436,0.527,2.038a5.688,5.688,0,0,1-.362.467,2.69,2.69,0,0,1-.264.271q-0.221-.08-0.471-0.147a2.029,2.029,0,0,0-.522-0.066,1.079,1.079,0,0,0-.768.3A1.058,1.058,0,0,0,9,15.131a0.82,0.82,0,0,0,.832.852,1.134,1.134,0,0,0,.787-0.3,5.11,5.11,0,0,0,.776-0.993q0.141-.219.215-0.34c0.046-.076.122-0.194,0.223-0.346a2.786,2.786,0,0,0,.918,1.726,2.582,2.582,0,0,0,2.376-.185c0.317-.181.212-0.565,0-0.494A0.807,0.807,0,0,1,14.176,15a5.159,5.159,0,0,1-.913-2.446l0,0Q13.487,12.24,13.663,12.027Z></path> </svg>";

/***/ }),
/* 92 */
/***/ (function(module, exports) {

module.exports = "<svg viewBox=\\"0 0 18 18\\"> <path class=ql-fill d=M10,4V14a1,1,0,0,1-2,0V10H3v4a1,1,0,0,1-2,0V4A1,1,0,0,1,3,4V8H8V4a1,1,0,0,1,2,0Zm6.06787,9.209H14.98975V7.59863a.54085.54085,0,0,0-.605-.60547h-.62744a1.01119,1.01119,0,0,0-.748.29688L11.645,8.56641a.5435.5435,0,0,0-.022.8584l.28613.30762a.53861.53861,0,0,0,.84717.0332l.09912-.08789a1.2137,1.2137,0,0,0,.2417-.35254h.02246s-.01123.30859-.01123.60547V13.209H12.041a.54085.54085,0,0,0-.605.60547v.43945a.54085.54085,0,0,0,.605.60547h4.02686a.54085.54085,0,0,0,.605-.60547v-.43945A.54085.54085,0,0,0,16.06787,13.209Z /> </svg>";

/***/ }),
/* 93 */
/***/ (function(module, exports) {

module.exports = "<svg viewBox=\\"0 0 18 18\\"> <path class=ql-fill d=M16.73975,13.81445v.43945a.54085.54085,0,0,1-.605.60547H11.855a.58392.58392,0,0,1-.64893-.60547V14.0127c0-2.90527,3.39941-3.42187,3.39941-4.55469a.77675.77675,0,0,0-.84717-.78125,1.17684,1.17684,0,0,0-.83594.38477c-.2749.26367-.561.374-.85791.13184l-.4292-.34082c-.30811-.24219-.38525-.51758-.1543-.81445a2.97155,2.97155,0,0,1,2.45361-1.17676,2.45393,2.45393,0,0,1,2.68408,2.40918c0,2.45312-3.1792,2.92676-3.27832,3.93848h2.79443A.54085.54085,0,0,1,16.73975,13.81445ZM9,3A.99974.99974,0,0,0,8,4V8H3V4A1,1,0,0,0,1,4V14a1,1,0,0,0,2,0V10H8v4a1,1,0,0,0,2,0V4A.99974.99974,0,0,0,9,3Z /> </svg>";

/***/ }),
/* 94 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=7 x2=13 y1=4 y2=4></line> <line class=ql-stroke x1=5 x2=11 y1=14 y2=14></line> <line class=ql-stroke x1=8 x2=10 y1=14 y2=4></line> </svg>";

/***/ }),
/* 95 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <rect class=ql-stroke height=10 width=12 x=3 y=4></rect> <circle class=ql-fill cx=6 cy=7 r=1></circle> <polyline class=\\"ql-even ql-fill\\" points=\\"5 12 5 11 7 9 8 10 11 7 13 9 13 12 5 12\\"></polyline> </svg>";

/***/ }),
/* 96 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=\\"ql-fill ql-stroke\\" points=\\"3 7 3 11 5 9 3 7\\"></polyline> </svg>";

/***/ }),
/* 97 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=3 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\\"5 7 5 11 3 9 5 7\\"></polyline> </svg>";

/***/ }),
/* 98 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=7 x2=11 y1=7 y2=11></line> <path class=\\"ql-even ql-stroke\\" d=M8.9,4.577a3.476,3.476,0,0,1,.36,4.679A3.476,3.476,0,0,1,4.577,8.9C3.185,7.5,2.035,6.4,4.217,4.217S7.5,3.185,8.9,4.577Z></path> <path class=\\"ql-even ql-stroke\\" d=M13.423,9.1a3.476,3.476,0,0,0-4.679-.36,3.476,3.476,0,0,0,.36,4.679c1.392,1.392,2.5,2.542,4.679.36S14.815,10.5,13.423,9.1Z></path> </svg>";

/***/ }),
/* 99 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=7 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=7 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=7 x2=15 y1=14 y2=14></line> <line class=\\"ql-stroke ql-thin\\" x1=2.5 x2=4.5 y1=5.5 y2=5.5></line> <path class=ql-fill d=M3.5,6A0.5,0.5,0,0,1,3,5.5V3.085l-0.276.138A0.5,0.5,0,0,1,2.053,3c-0.124-.247-0.023-0.324.224-0.447l1-.5A0.5,0.5,0,0,1,4,2.5v3A0.5,0.5,0,0,1,3.5,6Z></path> <path class=\\"ql-stroke ql-thin\\" d=M4.5,10.5h-2c0-.234,1.85-1.076,1.85-2.234A0.959,0.959,0,0,0,2.5,8.156></path> <path class=\\"ql-stroke ql-thin\\" d=M2.5,14.846a0.959,0.959,0,0,0,1.85-.109A0.7,0.7,0,0,0,3.75,14a0.688,0.688,0,0,0,.6-0.736,0.959,0.959,0,0,0-1.85-.109></path> </svg>";

/***/ }),
/* 100 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=6 x2=15 y1=4 y2=4></line> <line class=ql-stroke x1=6 x2=15 y1=9 y2=9></line> <line class=ql-stroke x1=6 x2=15 y1=14 y2=14></line> <line class=ql-stroke x1=3 x2=3 y1=4 y2=4></line> <line class=ql-stroke x1=3 x2=3 y1=9 y2=9></line> <line class=ql-stroke x1=3 x2=3 y1=14 y2=14></line> </svg>";

/***/ }),
/* 101 */
/***/ (function(module, exports) {

module.exports = "<svg class=\\"\\" viewbox=\\"0 0 18 18\\"> <line class=ql-stroke x1=9 x2=15 y1=4 y2=4></line> <polyline class=ql-stroke points=\\"3 4 4 5 6 3\\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=14 y2=14></line> <polyline class=ql-stroke points=\\"3 14 4 15 6 13\\"></polyline> <line class=ql-stroke x1=9 x2=15 y1=9 y2=9></line> <polyline class=ql-stroke points=\\"3 9 4 10 6 8\\"></polyline> </svg>";

/***/ }),
/* 102 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-fill d=M15.5,15H13.861a3.858,3.858,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.921,1.921,0,0,0,12.021,11.7a0.50013,0.50013,0,1,0,.957.291h0a0.914,0.914,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.076-1.16971,1.86982-1.93971,2.43082A1.45639,1.45639,0,0,0,12,15.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,15Z /> <path class=ql-fill d=M9.65,5.241a1,1,0,0,0-1.409.108L6,7.964,3.759,5.349A1,1,0,0,0,2.192,6.59178Q2.21541,6.6213,2.241,6.649L4.684,9.5,2.241,12.35A1,1,0,0,0,3.71,13.70722q0.02557-.02768.049-0.05722L6,11.036,8.241,13.65a1,1,0,1,0,1.567-1.24277Q9.78459,12.3777,9.759,12.35L7.316,9.5,9.759,6.651A1,1,0,0,0,9.65,5.241Z /> </svg>";

/***/ }),
/* 103 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-fill d=M15.5,7H13.861a4.015,4.015,0,0,0,1.914-2.975,1.8,1.8,0,0,0-1.6-1.751A1.922,1.922,0,0,0,12.021,3.7a0.5,0.5,0,1,0,.957.291,0.917,0.917,0,0,1,1.053-.725,0.81,0.81,0,0,1,.744.762c0,1.077-1.164,1.925-1.934,2.486A1.423,1.423,0,0,0,12,7.5a0.5,0.5,0,0,0,.5.5h3A0.5,0.5,0,0,0,15.5,7Z /> <path class=ql-fill d=M9.651,5.241a1,1,0,0,0-1.41.108L6,7.964,3.759,5.349a1,1,0,1,0-1.519,1.3L4.683,9.5,2.241,12.35a1,1,0,1,0,1.519,1.3L6,11.036,8.241,13.65a1,1,0,0,0,1.519-1.3L7.317,9.5,9.759,6.651A1,1,0,0,0,9.651,5.241Z /> </svg>";

/***/ }),
/* 104 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <line class=\\"ql-stroke ql-thin\\" x1=15.5 x2=2.5 y1=8.5 y2=9.5></line> <path class=ql-fill d=M9.007,8C6.542,7.791,6,7.519,6,6.5,6,5.792,7.283,5,9,5c1.571,0,2.765.679,2.969,1.309a1,1,0,0,0,1.9-.617C13.356,4.106,11.354,3,9,3,6.2,3,4,4.538,4,6.5a3.2,3.2,0,0,0,.5,1.843Z></path> <path class=ql-fill d=M8.984,10C11.457,10.208,12,10.479,12,11.5c0,0.708-1.283,1.5-3,1.5-1.571,0-2.765-.679-2.969-1.309a1,1,0,1,0-1.9.617C4.644,13.894,6.646,15,9,15c2.8,0,5-1.538,5-3.5a3.2,3.2,0,0,0-.5-1.843Z></path> </svg>";

/***/ }),
/* 105 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <path class=ql-stroke d=M5,3V9a4.012,4.012,0,0,0,4,4H9a4.012,4.012,0,0,0,4-4V3></path> <rect class=ql-fill height=1 rx=0.5 ry=0.5 width=12 x=3 y=15></rect> </svg>";

/***/ }),
/* 106 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <rect class=ql-stroke height=12 width=12 x=3 y=3></rect> <rect class=ql-fill height=12 width=1 x=5 y=3></rect> <rect class=ql-fill height=12 width=1 x=12 y=3></rect> <rect class=ql-fill height=2 width=8 x=5 y=8></rect> <rect class=ql-fill height=1 width=3 x=3 y=5></rect> <rect class=ql-fill height=1 width=3 x=3 y=7></rect> <rect class=ql-fill height=1 width=3 x=3 y=10></rect> <rect class=ql-fill height=1 width=3 x=3 y=12></rect> <rect class=ql-fill height=1 width=3 x=12 y=5></rect> <rect class=ql-fill height=1 width=3 x=12 y=7></rect> <rect class=ql-fill height=1 width=3 x=12 y=10></rect> <rect class=ql-fill height=1 width=3 x=12 y=12></rect> </svg>";

/***/ }),
/* 107 */
/***/ (function(module, exports) {

module.exports = "<svg viewbox=\\"0 0 18 18\\"> <polygon class=ql-stroke points=\\"7 11 9 13 11 11 7 11\\"></polygon> <polygon class=ql-stroke points=\\"7 7 9 5 11 7 7 7\\"></polygon> </svg>";

/***/ }),
/* 108 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.BubbleTooltip = undefined;

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _extend = __webpack_require__(3);

var _extend2 = _interopRequireDefault(_extend);

var _emitter = __webpack_require__(8);

var _emitter2 = _interopRequireDefault(_emitter);

var _base = __webpack_require__(43);

var _base2 = _interopRequireDefault(_base);

var _selection = __webpack_require__(15);

var _icons = __webpack_require__(41);

var _icons2 = _interopRequireDefault(_icons);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var TOOLBAR_CONFIG = [['bold', 'italic', 'link'], [{ header: 1 }, { header: 2 }, 'blockquote']];

var BubbleTheme = function (_BaseTheme) {
  _inherits(BubbleTheme, _BaseTheme);

  function BubbleTheme(quill, options) {
    _classCallCheck(this, BubbleTheme);

    if (options.modules.toolbar != null && options.modules.toolbar.container == null) {
      options.modules.toolbar.container = TOOLBAR_CONFIG;
    }

    var _this = _possibleConstructorReturn(this, (BubbleTheme.__proto__ || Object.getPrototypeOf(BubbleTheme)).call(this, quill, options));

    _this.quill.container.classList.add('ql-bubble');
    return _this;
  }

  _createClass(BubbleTheme, [{
    key: 'extendToolbar',
    value: function extendToolbar(toolbar) {
      this.tooltip = new BubbleTooltip(this.quill, this.options.bounds);
      this.tooltip.root.appendChild(toolbar.container);
      this.buildButtons([].slice.call(toolbar.container.querySelectorAll('button')), _icons2.default);
      this.buildPickers([].slice.call(toolbar.container.querySelectorAll('select')), _icons2.default);
    }
  }]);

  return BubbleTheme;
}(_base2.default);

BubbleTheme.DEFAULTS = (0, _extend2.default)(true, {}, _base2.default.DEFAULTS, {
  modules: {
    toolbar: {
      handlers: {
        link: function link(value) {
          if (!value) {
            this.quill.format('link', false);
          } else {
            this.quill.theme.tooltip.edit();
          }
        }
      }
    }
  }
});

var BubbleTooltip = function (_BaseTooltip) {
  _inherits(BubbleTooltip, _BaseTooltip);

  function BubbleTooltip(quill, bounds) {
    _classCallCheck(this, BubbleTooltip);

    var _this2 = _possibleConstructorReturn(this, (BubbleTooltip.__proto__ || Object.getPrototypeOf(BubbleTooltip)).call(this, quill, bounds));

    _this2.quill.on(_emitter2.default.events.EDITOR_CHANGE, function (type, range, oldRange, source) {
      if (type !== _emitter2.default.events.SELECTION_CHANGE) return;
      if (range != null && range.length > 0 && source === _emitter2.default.sources.USER) {
        _this2.show();
        // Lock our width so we will expand beyond our offsetParent boundaries
        _this2.root.style.left = '0px';
        _this2.root.style.width = '';
        _this2.root.style.width = _this2.root.offsetWidth + 'px';
        var lines = _this2.quill.getLines(range.index, range.length);
        if (lines.length === 1) {
          _this2.position(_this2.quill.getBounds(range));
        } else {
          var lastLine = lines[lines.length - 1];
          var index = _this2.quill.getIndex(lastLine);
          var length = Math.min(lastLine.length() - 1, range.index + range.length - index);
          var _bounds = _this2.quill.getBounds(new _selection.Range(index, length));
          _this2.position(_bounds);
        }
      } else if (document.activeElement !== _this2.textbox && _this2.quill.hasFocus()) {
        _this2.hide();
      }
    });
    return _this2;
  }

  _createClass(BubbleTooltip, [{
    key: 'listen',
    value: function listen() {
      var _this3 = this;

      _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'listen', this).call(this);
      this.root.querySelector('.ql-close').addEventListener('click', function () {
        _this3.root.classList.remove('ql-editing');
      });
      this.quill.on(_emitter2.default.events.SCROLL_OPTIMIZE, function () {
        // Let selection be restored by toolbar handlers before repositioning
        setTimeout(function () {
          if (_this3.root.classList.contains('ql-hidden')) return;
          var range = _this3.quill.getSelection();
          if (range != null) {
            _this3.position(_this3.quill.getBounds(range));
          }
        }, 1);
      });
    }
  }, {
    key: 'cancel',
    value: function cancel() {
      this.show();
    }
  }, {
    key: 'position',
    value: function position(reference) {
      var shift = _get(BubbleTooltip.prototype.__proto__ || Object.getPrototypeOf(BubbleTooltip.prototype), 'position', this).call(this, reference);
      var arrow = this.root.querySelector('.ql-tooltip-arrow');
      arrow.style.marginLeft = '';
      if (shift === 0) return shift;
      arrow.style.marginLeft = -1 * shift - arrow.offsetWidth / 2 + 'px';
    }
  }]);

  return BubbleTooltip;
}(_base.BaseTooltip);

BubbleTooltip.TEMPLATE = ['<span class="ql-tooltip-arrow"></span>', '<div class="ql-tooltip-editor">', '<input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL">', '<a class="ql-close"></a>', '</div>'].join('');

exports.BubbleTooltip = BubbleTooltip;
exports.default = BubbleTheme;

/***/ }),
/* 109 */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(63);


/***/ })
/******/ ])["default"];
});`;
    }, 1255: function(t2) {
      t2.exports = `"use strict";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function _defineProperties(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}function _createClass(t,e,s){return e&&_defineProperties(t.prototype,e),s&&_defineProperties(t,s),t}function _typeof(t){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}
/*!
 * jQuery SmartWizard v5.1.1
 * The awesome jQuery step wizard plugin
 * http://www.techlaboratory.net/jquery-smartwizard
 *
 * Created by Dipu Raj
 * http://dipu.me
 *
 * @license Licensed under the terms of the MIT License
 * https://github.com/techlab/jquery-smartwizard/blob/master/LICENSE
 */
!function(s){"function"==typeof define&&define.amd?define(["jquery"],s):"object"===("undefined"==typeof module?"undefined":_typeof(module))&&module.exports?module.exports=function(t,e){return void 0===e&&(e="undefined"!=typeof window?require("jquery"):require("jquery")(t)),s(e),e}:s(jQuery)}(function(v){var i={selected:0,theme:"default",justified:!0,darkMode:!1,autoAdjustHeight:!0,cycleSteps:!1,backButtonSupport:!0,enableURLhash:!0,transition:{animation:"none",speed:"400",easing:""},toolbarSettings:{toolbarPosition:"bottom",toolbarButtonPosition:"right",showNextButton:!0,showPreviousButton:!0,toolbarExtraButtons:[]},anchorSettings:{anchorClickable:!0,enableAllAnchors:!1,markDoneStep:!0,markAllPreviousStepsAsDone:!0,removeDoneStepOnNavigateBack:!1,enableAnchorOnDoneStep:!0},keyboardSettings:{keyNavigation:!0,keyLeft:[37],keyRight:[39]},lang:{next:"Next",previous:"Previous"},disabledSteps:[],errorSteps:[],hiddenSteps:[]},s=function(){function s(t,e){_classCallCheck(this,s),this.options=v.extend(!0,{},i,e),this.main=v(t),this.nav=this._getFirstDescendant(".nav"),this.steps=this.nav.find(".nav-link"),this.container=this._getFirstDescendant(".tab-content"),this.pages=this.container.children(".tab-pane"),this._initOptions(),this._initLoad()}return _createClass(s,[{key:"_initLoad",value:function(){this.pages.hide(),this.steps.removeClass("done active"),this.current_index=null;var t=this._getStepIndex();this._setPreviousStepsDone(t),this._showStep(t)}},{key:"_initOptions",value:function(){this._setElements(),this._setToolbar(),this._setEvents()}},{key:"_getFirstDescendant",value:function(i){var n=this.main.children(i);return 0<n.length?n:(this.main.children().each(function(t,e){var s=v(e).children(i);if(0<s.length)return n=s,!1}),0<n.length?n:(this._showError("Element not found "+i),!1))}},{key:"_setElements",value:function(){this.main.addClass("sw"),this._setTheme(this.options.theme),this._setJustify(this.options.justified),this._setDarkMode(this.options.darkMode),!0===this.options.anchorSettings.enableAllAnchors&&!0===this.options.anchorSettings.anchorClickable||this.steps.addClass("inactive"),this._setCSSClass(this.options.disabledSteps,"disabled"),this._setCSSClass(this.options.errorSteps,"danger"),this._setCSSClass(this.options.hiddenSteps,"hidden")}},{key:"_setEvents",value:function(){var s=this;if(this.main.data("click-init"))return!0;this.main.data("click-init",!0),v(this.steps).on("click",function(t){if(t.preventDefault(),!1===s.options.anchorSettings.anchorClickable)return!0;var e=s.steps.index(t.currentTarget);return e===s.current_index||(!(!1!==s.options.anchorSettings.enableAnchorOnDoneStep||!s._isDone(e))||void(!1===s.options.anchorSettings.enableAllAnchors&&!s._isDone(e)||s._showStep(e)))}),this.main.find(".sw-btn-next").on("click",function(t){t.preventDefault(),s._showNext()}),this.main.find(".sw-btn-prev").on("click",function(t){t.preventDefault(),s._showPrevious()}),this.options.keyboardSettings.keyNavigation&&v(document).keyup(function(t){s._keyNav(t)}),this.options.backButtonSupport&&v(window).on("hashchange",function(t){var e=s._getURLHashIndex();!1!==e&&(t.preventDefault(),s._showStep(e))})}},{key:"_setToolbar",value:function(){if("none"===this.options.toolbarSettings.toolbarPosition)return!0;switch(this.options.toolbarSettings.toolbarPosition){case"top":this.container.before(this._createToolbar("top"));break;case"bottom":this.container.after(this._createToolbar("bottom"));break;case"both":this.container.before(this._createToolbar("top")),this.container.after(this._createToolbar("bottom"));break;default:this.container.after(this._createToolbar("bottom"))}}},{key:"_createToolbar",value:function(t){if(0<this.main.find(".toolbar-"+t).length)return null;var s=v("<div></div>").addClass("toolbar toolbar-"+t).attr("role","toolbar"),e=!1!==this.options.toolbarSettings.showNextButton?v("<button></button>").text(this.options.lang.next).addClass("btn sw-btn-next").attr("type","button"):null,i=!1!==this.options.toolbarSettings.showPreviousButton?v("<button></button>").text(this.options.lang.previous).addClass("btn sw-btn-prev").attr("type","button"):null;return s.append(i,e),this.options.toolbarSettings.toolbarExtraButtons&&0<this.options.toolbarSettings.toolbarExtraButtons.length&&v.each(this.options.toolbarSettings.toolbarExtraButtons,function(t,e){s.append(e.clone(!0))}),s.css("text-align",this.options.toolbarSettings.toolbarButtonPosition),s}},{key:"_showNext",value:function(){var t=this._getNextShowable(this.current_index);if(!1===t)return!1;this._showStep(t)}},{key:"_showPrevious",value:function(){var t=this._getPreviousShowable(this.current_index);if(!1===t)return!1;this._showStep(t)}},{key:"_showStep",value:function(t){return t!=this.current_index&&(!!this.steps.eq(t)&&(!!this._isShowable(t)&&void this._loadStep(t)))}},{key:"_getNextShowable",value:function(t){for(var e=!1,s=t+1;s<this.steps.length;s++)if(this._isShowable(s)){e=s;break}if(!1!==e&&this.steps.length<=e){if(!this.options.cycleSteps)return!1;e=0}return e}},{key:"_getPreviousShowable",value:function(t){for(var e=!1,s=t-1;0<=s;s--)if(this._isShowable(s)){e=s;break}if(!1!==e&&e<0){if(!this.options.cycleSteps)return!1;e=this.steps.length-1}return e}},{key:"_isShowable",value:function(t){var e=this.steps.eq(t);return!e.hasClass("disabled")&&!e.hasClass("hidden")}},{key:"_isDone",value:function(t){return!!this.steps.eq(t).hasClass("done")}},{key:"_setPreviousStepsDone",value:function(t){if(0<t&&this.options.anchorSettings.markDoneStep&&this.options.anchorSettings.markAllPreviousStepsAsDone)for(var e=t;0<=e;e--)this._setCSSClass(e,"done")}},{key:"_setCSSClass",value:function(t,e){var s=this;if(null===t)return!1;(v.isArray(t)?t:[t]).map(function(t){s.steps.eq(t).addClass(e)})}},{key:"_resetCSSClass",value:function(t,e){var s=this;(v.isArray(t)?t:[t]).map(function(t){s.steps.eq(t).removeClass(e)})}},{key:"_getStepDirection",value:function(t){return null==this.current_index?"":this.current_index<t?"forward":"backward"}},{key:"_getStepPosition",value:function(t){var e="middle";return 0===t?e="first":t===this.steps.length-1&&(e="last"),e}},{key:"_getStepAnchor",value:function(t){return null==t?null:this.steps.eq(t)}},{key:"_getStepPage",value:function(t){if(null==t)return null;var e=this._getStepAnchor(t);return 0<e.length?this.main.find(e.attr("href")):null}},{key:"_setStepContent",value:function(t,e){var s=this._getStepPage(t);s&&s.html(e)}},{key:"_loadStep",value:function(e){var s=this,t=this._getStepAnchor(this.current_index),i=this._getStepDirection(e);if(null!==this.current_index&&!1===this._triggerEvent("leaveStep",[t,this.current_index,e,i]))return!1;var n=this._getStepAnchor(e),o=this._triggerEvent("stepContent",[n,e,i]);o?"object"==_typeof(o)?o.then(function(t){s._setStepContent(e,t),s._transitStep(e)}).catch(function(t){console.error(t),s._setStepContent(e,t),s._transitStep(e)}):("string"==typeof o&&this._setStepContent(e,o),this._transitStep(e)):this._transitStep(e)}},{key:"_transitStep",value:function(t){var e=this,s=this._getStepAnchor(t);this._setURLHash(s.attr("href")),this._setAnchor(t);var i=this._getStepDirection(t),n=this._getStepPosition(t);this._doStepAnimation(t,function(){e._fixHeight(t),e._triggerEvent("showStep",[s,e.current_index,i,n])}),this.current_index=t,this._setButtons(t)}},{key:"_doStepAnimation",value:function(t,e){var s=this,i=this._getStepPage(this.current_index),n=this._getStepPage(t),o=this.options.transition.animation.toLowerCase();switch(this._stopAnimations(),o){case"slide-horizontal":case"slide-h":var a,r,h=this.container.width(),l=h,u=-2*h;t>this.current_index&&(l=-1*h,u=h),null==this.current_index&&this.container.height(n.outerHeight()),i&&(a=i.css("position"),r=i.css("left"),i.css("position","absolute").css("left",0).animate({left:l},this.options.transition.speed,this.options.transition.easing,function(){v(this).hide(),i.css("position",a).css("left",r)})),a=n.css("position"),r=n.css("left"),n.css("position","absolute").css("left",u).outerWidth(h).show().animate({left:0},this.options.transition.speed,this.options.transition.easing,function(){n.css("position",a).css("left",r),e()});break;case"slide-vertical":case"slide-v":var c,d,p=this.container.height(),f=p,_=-2*p;t>this.current_index&&(f=-1*p,_=p),i&&(c=i.css("position"),d=i.css("top"),i.css("position","absolute").css("top",0).animate({top:f},this.options.transition.speed,this.options.transition.easing,function(){v(this).hide(),i.css("position",c).css("top",d)})),c=n.css("position"),d=n.css("top"),n.css("position","absolute").css("top",_).show().animate({top:0},this.options.transition.speed,this.options.transition.easing,function(){n.css("position",c).css("top",d),e()});break;case"slide-swing":case"slide-s":i?i.slideUp("fast",this.options.transition.easing,function(){n.slideDown(s.options.transition.speed,s.options.transition.easing,function(){e()})}):n.slideDown(this.options.transition.speed,this.options.transition.easing,function(){e()});break;case"fade":i?i.fadeOut("fast",this.options.transition.easing,function(){n.fadeIn("fast",s.options.transition.easing,function(){e()})}):n.fadeIn(this.options.transition.speed,this.options.transition.easing,function(){e()});break;default:i&&i.hide(),n.show(),e()}}},{key:"_stopAnimations",value:function(){this.pages.finish(),this.container.finish()}},{key:"_setAnchor",value:function(t){this._resetCSSClass(this.current_index,"active"),!1!==this.options.anchorSettings.markDoneStep&&null!==this.current_index&&(this._setCSSClass(this.current_index,"done"),!1!==this.options.anchorSettings.removeDoneStepOnNavigateBack&&"backward"===this._getStepDirection(t)&&this._resetCSSClass(this.current_index,"done")),this._resetCSSClass(t,"done"),this._setCSSClass(t,"active")}},{key:"_setButtons",value:function(t){if(!this.options.cycleSteps)switch(this.main.find(".sw-btn-prev").removeClass("disabled"),this.main.find(".sw-btn-next").removeClass("disabled"),this._getStepPosition(t)){case"first":this.main.find(".sw-btn-prev").addClass("disabled");break;case"last":this.main.find(".sw-btn-next").addClass("disabled");break;default:!1===this._getNextShowable(t)&&this.main.find(".sw-btn-next").addClass("disabled"),!1===this._getPreviousShowable(t)&&this.main.find(".sw-btn-prev").addClass("disabled")}}},{key:"_getStepIndex",value:function(){var t=this._getURLHashIndex();return!1===t?this.options.selected:t}},{key:"_setTheme",value:function(t){this.main.removeClass(function(t,e){return(e.match(/(^|\\s)sw-theme-\\S+/g)||[]).join(" ")}).addClass("sw-theme-"+t)}},{key:"_setJustify",value:function(t){!0===t?this.main.addClass("sw-justified"):this.main.removeClass("sw-justified")}},{key:"_setDarkMode",value:function(t){!0===t?this.main.addClass("sw-dark"):this.main.removeClass("sw-dark")}},{key:"_keyNav",value:function(t){if(-1<v.inArray(t.which,this.options.keyboardSettings.keyLeft))this._showPrevious(),t.preventDefault();else{if(!(-1<v.inArray(t.which,this.options.keyboardSettings.keyRight)))return;this._showNext(),t.preventDefault()}}},{key:"_fixHeight",value:function(t){var e;this.options.autoAdjustHeight&&(e=this._getStepPage(t),this.container.finish().animate({height:e.outerHeight()},this.options.transition.speed))}},{key:"_triggerEvent",value:function(t,e){var s=v.Event(t);return this.main.trigger(s,e),!s.isDefaultPrevented()&&s.result}},{key:"_setURLHash",value:function(t){this.options.enableURLhash&&window.location.hash!==t&&history.pushState(null,null,t)}},{key:"_getURLHashIndex",value:function(){if(this.options.enableURLhash){var t=window.location.hash;if(0<t.length){var e=this.nav.find("a[href*='"+t+"']");if(0<e.length)return this.steps.index(e)}}return!1}},{key:"_loader",value:function(t){switch(t){case"show":this.main.addClass("sw-loading");break;case"hide":this.main.removeClass("sw-loading");break;default:this.main.toggleClass("sw-loading")}}},{key:"_showError",value:function(t){console.error(t)}},{key:"goToStep",value:function(t){this._showStep(t)}},{key:"next",value:function(){this._showNext()}},{key:"prev",value:function(){this._showPrevious()}},{key:"reset",value:function(){this._setURLHash("#"),this._initOptions(),this._initLoad()}},{key:"stepState",value:function(t,e){if(!t)return!1;switch(e){case"disable":this._setCSSClass(t,"disabled");break;case"enable":this._resetCSSClass(t,"disabled");break;case"hide":this._setCSSClass(t,"hidden");break;case"show":this._resetCSSClass(t,"hidden");break;case"error-on":this._setCSSClass(t,"danger");break;case"error-off":this._resetCSSClass(t,"danger")}}},{key:"setOptions",value:function(t){this.options=v.extend(!0,{},this.options,t),this._initOptions()}},{key:"getStepIndex",value:function(){return this.current_index}},{key:"loader",value:function(t){"show"===t?this.main.addClass("sw-loading"):this.main.removeClass("sw-loading")}}]),s}();v.fn.smartWizard=function(t){if(void 0===t||"object"===_typeof(t))return this.each(function(){v.data(this,"smartWizard")||v.data(this,"smartWizard",new s(this,t))});if("string"==typeof t&&"_"!==t[0]&&"init"!==t){var e=v.data(this[0],"smartWizard");return"destroy"===t&&v.data(this,"smartWizard",null),e instanceof s&&"function"==typeof e[t]?e[t].apply(e,Array.prototype.slice.call(arguments,1)):this}}});`;
    }, 9685: function(t2) {
      t2.exports = function(t3) {
        function e2(t4) {
          typeof console != "undefined" && (console.error || console.log)("[Script Loader]", t4);
        }
        try {
          typeof execScript != "undefined" && typeof attachEvent != "undefined" && typeof addEventListener == "undefined" ? execScript(t3) : typeof eval != "undefined" ? eval.call(null, t3) : e2("EvalError: No eval function available");
        } catch (t4) {
          e2(t4);
        }
      };
    }, 5597: function(t2, e2, n2) {
      n2(9685)(n2(6748));
    }, 4712: function(t2, e2, n2) {
      n2(9685)(n2(8792));
    }, 1701: function(t2, e2, n2) {
      n2(9685)(n2(2899));
    }, 3029: function(t2, e2, n2) {
      n2(9685)(n2(8908));
    }, 4387: function(t2, e2, n2) {
      n2(9685)(n2(1617));
    }, 4708: function(t2, e2, n2) {
      n2(9685)(n2(4392));
    }, 142: function(t2, e2, n2) {
      n2(9685)(n2(7158));
    }, 8314: function(t2, e2, n2) {
      n2(9685)(n2(8329));
    }, 4268: function(t2, e2, n2) {
      n2(9685)(n2(4668));
    }, 1553: function(t2, e2, n2) {
      n2(9685)(n2(4905));
    }, 278: function(t2, e2, n2) {
      n2(9685)(n2(8497));
    }, 2760: function(t2, e2, n2) {
      n2(9685)(n2(1255));
    }, 9298: function(t2, e2, n2) {
      var i, a, r, o = n2(8942);
      a = [n2(8942)], i = function(t3) {
        var e3 = function() {
          if (t3 && t3.fn && t3.fn.select2 && t3.fn.select2.amd)
            var e4 = t3.fn.select2.amd;
          var n4, i2, a2, r2, s, l, c, d, u, h, p, f, g, m, v;
          function b(t4, e5) {
            return g.call(t4, e5);
          }
          function y(t4, e5) {
            var n5, i3, a3, r3, o2, s2, l2, c2, d2, u2, h2, f2 = e5 && e5.split("/"), g2 = p.map, m2 = g2 && g2["*"] || {};
            if (t4) {
              for (o2 = (t4 = t4.split("/")).length - 1, p.nodeIdCompat && v.test(t4[o2]) && (t4[o2] = t4[o2].replace(v, "")), t4[0].charAt(0) === "." && f2 && (t4 = f2.slice(0, f2.length - 1).concat(t4)), d2 = 0; d2 < t4.length; d2++)
                if ((h2 = t4[d2]) === ".")
                  t4.splice(d2, 1), --d2;
                else if (h2 === "..") {
                  if (d2 === 0 || d2 === 1 && t4[2] === ".." || t4[d2 - 1] === "..")
                    continue;
                  0 < d2 && (t4.splice(d2 - 1, 2), d2 -= 2);
                }
              t4 = t4.join("/");
            }
            if ((f2 || m2) && g2) {
              for (d2 = (n5 = t4.split("/")).length; 0 < d2; --d2) {
                if (i3 = n5.slice(0, d2).join("/"), f2) {
                  for (u2 = f2.length; 0 < u2; --u2)
                    if (a3 = (a3 = g2[f2.slice(0, u2).join("/")]) && a3[i3]) {
                      r3 = a3, s2 = d2;
                      break;
                    }
                }
                if (r3)
                  break;
                !l2 && m2 && m2[i3] && (l2 = m2[i3], c2 = d2);
              }
              !r3 && l2 && (r3 = l2, s2 = c2), r3 && (n5.splice(0, s2, r3), t4 = n5.join("/"));
            }
            return t4;
          }
          function x(t4, e5) {
            return function() {
              var n5 = m.call(arguments, 0);
              return typeof n5[0] != "string" && n5.length === 1 && n5.push(null), l.apply(r2, n5.concat([t4, e5]));
            };
          }
          function _(t4) {
            return function(e5) {
              u[t4] = e5;
            };
          }
          function w(t4) {
            if (b(h, t4)) {
              var e5 = h[t4];
              delete h[t4], f[t4] = true, s.apply(r2, e5);
            }
            if (!b(u, t4) && !b(f, t4))
              throw new Error("No " + t4);
            return u[t4];
          }
          function S(t4) {
            var e5, n5 = t4 ? t4.indexOf("!") : -1;
            return -1 < n5 && (e5 = t4.substring(0, n5), t4 = t4.substring(n5 + 1, t4.length)), [e5, t4];
          }
          function C(t4) {
            return t4 ? S(t4) : [];
          }
          return e4 && e4.requirejs || (e4 ? i2 = e4 : e4 = {}, u = {}, h = {}, p = {}, f = {}, g = Object.prototype.hasOwnProperty, m = [].slice, v = /\.js$/, c = function(t4, e5) {
            var n5, i3, a3 = S(t4), r3 = a3[0], o2 = e5[1];
            return t4 = a3[1], r3 && (n5 = w(r3 = y(r3, o2))), r3 ? t4 = n5 && n5.normalize ? n5.normalize(t4, (i3 = o2, function(t5) {
              return y(t5, i3);
            })) : y(t4, o2) : (r3 = (a3 = S(t4 = y(t4, o2)))[0], t4 = a3[1], r3 && (n5 = w(r3))), { f: r3 ? r3 + "!" + t4 : t4, n: t4, pr: r3, p: n5 };
          }, d = { require: function(t4) {
            return x(t4);
          }, exports: function(t4) {
            var e5 = u[t4];
            return e5 !== void 0 ? e5 : u[t4] = {};
          }, module: function(t4) {
            return { id: t4, uri: "", exports: u[t4], config: (e5 = t4, function() {
              return p && p.config && p.config[e5] || {};
            }) };
            var e5;
          } }, s = function(t4, e5, n5, i3) {
            var a3, o2, s2, l2, p2, g2, m2, v2 = [], y2 = typeof n5;
            if (g2 = C(i3 = i3 || t4), y2 == "undefined" || y2 == "function") {
              for (e5 = !e5.length && n5.length ? ["require", "exports", "module"] : e5, p2 = 0; p2 < e5.length; p2 += 1)
                if ((o2 = (l2 = c(e5[p2], g2)).f) === "require")
                  v2[p2] = d.require(t4);
                else if (o2 === "exports")
                  v2[p2] = d.exports(t4), m2 = true;
                else if (o2 === "module")
                  a3 = v2[p2] = d.module(t4);
                else if (b(u, o2) || b(h, o2) || b(f, o2))
                  v2[p2] = w(o2);
                else {
                  if (!l2.p)
                    throw new Error(t4 + " missing " + o2);
                  l2.p.load(l2.n, x(i3, true), _(o2), {}), v2[p2] = u[o2];
                }
              s2 = n5 ? n5.apply(u[t4], v2) : void 0, t4 && (a3 && a3.exports !== r2 && a3.exports !== u[t4] ? u[t4] = a3.exports : s2 === r2 && m2 || (u[t4] = s2));
            } else
              t4 && (u[t4] = n5);
          }, n4 = i2 = l = function(t4, e5, n5, i3, a3) {
            if (typeof t4 == "string")
              return d[t4] ? d[t4](e5) : w(c(t4, C(e5)).f);
            if (!t4.splice) {
              if ((p = t4).deps && l(p.deps, p.callback), !e5)
                return;
              e5.splice ? (t4 = e5, e5 = n5, n5 = null) : t4 = r2;
            }
            return e5 = e5 || function() {
            }, typeof n5 == "function" && (n5 = i3, i3 = a3), i3 ? s(r2, t4, e5, n5) : setTimeout(function() {
              s(r2, t4, e5, n5);
            }, 4), l;
          }, l.config = function(t4) {
            return l(t4);
          }, n4._defined = u, (a2 = function(t4, e5, n5) {
            if (typeof t4 != "string")
              throw new Error("See almond README: incorrect module build, no module name");
            e5.splice || (n5 = e5, e5 = []), b(u, t4) || b(h, t4) || (h[t4] = [t4, e5, n5]);
          }).amd = { jQuery: true }, e4.requirejs = n4, e4.require = i2, e4.define = a2), e4.define("almond", function() {
          }), e4.define("jquery", [], function() {
            var e5 = t3 || o;
            return e5 == null && console && console.error && console.error("Select2: An instance of jQuery or a jQuery-compatible library was not found. Make sure that you are including jQuery before Select2 on your web page."), e5;
          }), e4.define("select2/utils", ["jquery"], function(t4) {
            var e5 = {};
            function n5(t5) {
              var e6 = t5.prototype, n6 = [];
              for (var i4 in e6)
                typeof e6[i4] == "function" && i4 !== "constructor" && n6.push(i4);
              return n6;
            }
            function i3() {
              this.listeners = {};
            }
            e5.Extend = function(t5, e6) {
              var n6 = {}.hasOwnProperty;
              function i4() {
                this.constructor = t5;
              }
              for (var a4 in e6)
                n6.call(e6, a4) && (t5[a4] = e6[a4]);
              return i4.prototype = e6.prototype, t5.prototype = new i4(), t5.__super__ = e6.prototype, t5;
            }, e5.Decorate = function(t5, e6) {
              var i4 = n5(e6), a4 = n5(t5);
              function r3() {
                var n6 = Array.prototype.unshift, i5 = e6.prototype.constructor.length, a5 = t5.prototype.constructor;
                0 < i5 && (n6.call(arguments, t5.prototype.constructor), a5 = e6.prototype.constructor), a5.apply(this, arguments);
              }
              e6.displayName = t5.displayName, r3.prototype = new function() {
                this.constructor = r3;
              }();
              for (var o2 = 0; o2 < a4.length; o2++) {
                var s2 = a4[o2];
                r3.prototype[s2] = t5.prototype[s2];
              }
              function l2(t6) {
                var n6 = function() {
                };
                t6 in r3.prototype && (n6 = r3.prototype[t6]);
                var i5 = e6.prototype[t6];
                return function() {
                  return Array.prototype.unshift.call(arguments, n6), i5.apply(this, arguments);
                };
              }
              for (var c2 = 0; c2 < i4.length; c2++) {
                var d2 = i4[c2];
                r3.prototype[d2] = l2(d2);
              }
              return r3;
            }, i3.prototype.on = function(t5, e6) {
              this.listeners = this.listeners || {}, t5 in this.listeners ? this.listeners[t5].push(e6) : this.listeners[t5] = [e6];
            }, i3.prototype.trigger = function(t5) {
              var e6 = Array.prototype.slice, n6 = e6.call(arguments, 1);
              this.listeners = this.listeners || {}, n6 == null && (n6 = []), n6.length === 0 && n6.push({}), (n6[0]._type = t5) in this.listeners && this.invoke(this.listeners[t5], e6.call(arguments, 1)), "*" in this.listeners && this.invoke(this.listeners["*"], arguments);
            }, i3.prototype.invoke = function(t5, e6) {
              for (var n6 = 0, i4 = t5.length; n6 < i4; n6++)
                t5[n6].apply(this, e6);
            }, e5.Observable = i3, e5.generateChars = function(t5) {
              for (var e6 = "", n6 = 0; n6 < t5; n6++)
                e6 += Math.floor(36 * Math.random()).toString(36);
              return e6;
            }, e5.bind = function(t5, e6) {
              return function() {
                t5.apply(e6, arguments);
              };
            }, e5._convertData = function(t5) {
              for (var e6 in t5) {
                var n6 = e6.split("-"), i4 = t5;
                if (n6.length !== 1) {
                  for (var a4 = 0; a4 < n6.length; a4++) {
                    var r3 = n6[a4];
                    (r3 = r3.substring(0, 1).toLowerCase() + r3.substring(1)) in i4 || (i4[r3] = {}), a4 == n6.length - 1 && (i4[r3] = t5[e6]), i4 = i4[r3];
                  }
                  delete t5[e6];
                }
              }
              return t5;
            }, e5.hasScroll = function(e6, n6) {
              var i4 = t4(n6), a4 = n6.style.overflowX, r3 = n6.style.overflowY;
              return (a4 !== r3 || r3 !== "hidden" && r3 !== "visible") && (a4 === "scroll" || r3 === "scroll" || i4.innerHeight() < n6.scrollHeight || i4.innerWidth() < n6.scrollWidth);
            }, e5.escapeMarkup = function(t5) {
              var e6 = { "\\": "&#92;", "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;", "/": "&#47;" };
              return typeof t5 != "string" ? t5 : String(t5).replace(/[&<>"'\/\\]/g, function(t6) {
                return e6[t6];
              });
            }, e5.appendMany = function(e6, n6) {
              if (t4.fn.jquery.substr(0, 3) === "1.7") {
                var i4 = t4();
                t4.map(n6, function(t5) {
                  i4 = i4.add(t5);
                }), n6 = i4;
              }
              e6.append(n6);
            }, e5.__cache = {};
            var a3 = 0;
            return e5.GetUniqueElementId = function(t5) {
              var e6 = t5.getAttribute("data-select2-id");
              return e6 == null && (t5.id ? (e6 = t5.id, t5.setAttribute("data-select2-id", e6)) : (t5.setAttribute("data-select2-id", ++a3), e6 = a3.toString())), e6;
            }, e5.StoreData = function(t5, n6, i4) {
              var a4 = e5.GetUniqueElementId(t5);
              e5.__cache[a4] || (e5.__cache[a4] = {}), e5.__cache[a4][n6] = i4;
            }, e5.GetData = function(n6, i4) {
              var a4 = e5.GetUniqueElementId(n6);
              return i4 ? e5.__cache[a4] && e5.__cache[a4][i4] != null ? e5.__cache[a4][i4] : t4(n6).data(i4) : e5.__cache[a4];
            }, e5.RemoveData = function(t5) {
              var n6 = e5.GetUniqueElementId(t5);
              e5.__cache[n6] != null && delete e5.__cache[n6], t5.removeAttribute("data-select2-id");
            }, e5;
          }), e4.define("select2/results", ["jquery", "./utils"], function(t4, e5) {
            function n5(t5, e6, i3) {
              this.$element = t5, this.data = i3, this.options = e6, n5.__super__.constructor.call(this);
            }
            return e5.Extend(n5, e5.Observable), n5.prototype.render = function() {
              var e6 = t4('<ul class="select2-results__options" role="listbox"></ul>');
              return this.options.get("multiple") && e6.attr("aria-multiselectable", "true"), this.$results = e6;
            }, n5.prototype.clear = function() {
              this.$results.empty();
            }, n5.prototype.displayMessage = function(e6) {
              var n6 = this.options.get("escapeMarkup");
              this.clear(), this.hideLoading();
              var i3 = t4('<li role="alert" aria-live="assertive" class="select2-results__option"></li>'), a3 = this.options.get("translations").get(e6.message);
              i3.append(n6(a3(e6.args))), i3[0].className += " select2-results__message", this.$results.append(i3);
            }, n5.prototype.hideMessages = function() {
              this.$results.find(".select2-results__message").remove();
            }, n5.prototype.append = function(t5) {
              this.hideLoading();
              var e6 = [];
              if (t5.results != null && t5.results.length !== 0) {
                t5.results = this.sort(t5.results);
                for (var n6 = 0; n6 < t5.results.length; n6++) {
                  var i3 = t5.results[n6], a3 = this.option(i3);
                  e6.push(a3);
                }
                this.$results.append(e6);
              } else
                this.$results.children().length === 0 && this.trigger("results:message", { message: "noResults" });
            }, n5.prototype.position = function(t5, e6) {
              e6.find(".select2-results").append(t5);
            }, n5.prototype.sort = function(t5) {
              return this.options.get("sorter")(t5);
            }, n5.prototype.highlightFirstItem = function() {
              var t5 = this.$results.find(".select2-results__option[aria-selected]"), e6 = t5.filter("[aria-selected=true]");
              0 < e6.length ? e6.first().trigger("mouseenter") : t5.first().trigger("mouseenter"), this.ensureHighlightVisible();
            }, n5.prototype.setClasses = function() {
              var n6 = this;
              this.data.current(function(i3) {
                var a3 = t4.map(i3, function(t5) {
                  return t5.id.toString();
                });
                n6.$results.find(".select2-results__option[aria-selected]").each(function() {
                  var n7 = t4(this), i4 = e5.GetData(this, "data"), r3 = "" + i4.id;
                  i4.element != null && i4.element.selected || i4.element == null && -1 < t4.inArray(r3, a3) ? n7.attr("aria-selected", "true") : n7.attr("aria-selected", "false");
                });
              });
            }, n5.prototype.showLoading = function(t5) {
              this.hideLoading();
              var e6 = { disabled: true, loading: true, text: this.options.get("translations").get("searching")(t5) }, n6 = this.option(e6);
              n6.className += " loading-results", this.$results.prepend(n6);
            }, n5.prototype.hideLoading = function() {
              this.$results.find(".loading-results").remove();
            }, n5.prototype.option = function(n6) {
              var i3 = document.createElement("li");
              i3.className = "select2-results__option";
              var a3 = { role: "option", "aria-selected": "false" }, r3 = window.Element.prototype.matches || window.Element.prototype.msMatchesSelector || window.Element.prototype.webkitMatchesSelector;
              for (var o2 in (n6.element != null && r3.call(n6.element, ":disabled") || n6.element == null && n6.disabled) && (delete a3["aria-selected"], a3["aria-disabled"] = "true"), n6.id == null && delete a3["aria-selected"], n6._resultId != null && (i3.id = n6._resultId), n6.title && (i3.title = n6.title), n6.children && (a3.role = "group", a3["aria-label"] = n6.text, delete a3["aria-selected"]), a3) {
                var s2 = a3[o2];
                i3.setAttribute(o2, s2);
              }
              if (n6.children) {
                var l2 = t4(i3), c2 = document.createElement("strong");
                c2.className = "select2-results__group", t4(c2), this.template(n6, c2);
                for (var d2 = [], u2 = 0; u2 < n6.children.length; u2++) {
                  var h2 = n6.children[u2], p2 = this.option(h2);
                  d2.push(p2);
                }
                var f2 = t4("<ul></ul>", { class: "select2-results__options select2-results__options--nested" });
                f2.append(d2), l2.append(c2), l2.append(f2);
              } else
                this.template(n6, i3);
              return e5.StoreData(i3, "data", n6), i3;
            }, n5.prototype.bind = function(n6, i3) {
              var a3 = this, r3 = n6.id + "-results";
              this.$results.attr("id", r3), n6.on("results:all", function(t5) {
                a3.clear(), a3.append(t5.data), n6.isOpen() && (a3.setClasses(), a3.highlightFirstItem());
              }), n6.on("results:append", function(t5) {
                a3.append(t5.data), n6.isOpen() && a3.setClasses();
              }), n6.on("query", function(t5) {
                a3.hideMessages(), a3.showLoading(t5);
              }), n6.on("select", function() {
                n6.isOpen() && (a3.setClasses(), a3.options.get("scrollAfterSelect") && a3.highlightFirstItem());
              }), n6.on("unselect", function() {
                n6.isOpen() && (a3.setClasses(), a3.options.get("scrollAfterSelect") && a3.highlightFirstItem());
              }), n6.on("open", function() {
                a3.$results.attr("aria-expanded", "true"), a3.$results.attr("aria-hidden", "false"), a3.setClasses(), a3.ensureHighlightVisible();
              }), n6.on("close", function() {
                a3.$results.attr("aria-expanded", "false"), a3.$results.attr("aria-hidden", "true"), a3.$results.removeAttr("aria-activedescendant");
              }), n6.on("results:toggle", function() {
                var t5 = a3.getHighlightedResults();
                t5.length !== 0 && t5.trigger("mouseup");
              }), n6.on("results:select", function() {
                var t5 = a3.getHighlightedResults();
                if (t5.length !== 0) {
                  var n7 = e5.GetData(t5[0], "data");
                  t5.attr("aria-selected") == "true" ? a3.trigger("close", {}) : a3.trigger("select", { data: n7 });
                }
              }), n6.on("results:previous", function() {
                var t5 = a3.getHighlightedResults(), e6 = a3.$results.find("[aria-selected]"), n7 = e6.index(t5);
                if (!(n7 <= 0)) {
                  var i4 = n7 - 1;
                  t5.length === 0 && (i4 = 0);
                  var r4 = e6.eq(i4);
                  r4.trigger("mouseenter");
                  var o2 = a3.$results.offset().top, s2 = r4.offset().top, l2 = a3.$results.scrollTop() + (s2 - o2);
                  i4 === 0 ? a3.$results.scrollTop(0) : s2 - o2 < 0 && a3.$results.scrollTop(l2);
                }
              }), n6.on("results:next", function() {
                var t5 = a3.getHighlightedResults(), e6 = a3.$results.find("[aria-selected]"), n7 = e6.index(t5) + 1;
                if (!(n7 >= e6.length)) {
                  var i4 = e6.eq(n7);
                  i4.trigger("mouseenter");
                  var r4 = a3.$results.offset().top + a3.$results.outerHeight(false), o2 = i4.offset().top + i4.outerHeight(false), s2 = a3.$results.scrollTop() + o2 - r4;
                  n7 === 0 ? a3.$results.scrollTop(0) : r4 < o2 && a3.$results.scrollTop(s2);
                }
              }), n6.on("results:focus", function(t5) {
                t5.element.addClass("select2-results__option--highlighted");
              }), n6.on("results:message", function(t5) {
                a3.displayMessage(t5);
              }), t4.fn.mousewheel && this.$results.on("mousewheel", function(t5) {
                var e6 = a3.$results.scrollTop(), n7 = a3.$results.get(0).scrollHeight - e6 + t5.deltaY, i4 = 0 < t5.deltaY && e6 - t5.deltaY <= 0, r4 = t5.deltaY < 0 && n7 <= a3.$results.height();
                i4 ? (a3.$results.scrollTop(0), t5.preventDefault(), t5.stopPropagation()) : r4 && (a3.$results.scrollTop(a3.$results.get(0).scrollHeight - a3.$results.height()), t5.preventDefault(), t5.stopPropagation());
              }), this.$results.on("mouseup", ".select2-results__option[aria-selected]", function(n7) {
                var i4 = t4(this), r4 = e5.GetData(this, "data");
                i4.attr("aria-selected") !== "true" ? a3.trigger("select", { originalEvent: n7, data: r4 }) : a3.options.get("multiple") ? a3.trigger("unselect", { originalEvent: n7, data: r4 }) : a3.trigger("close", {});
              }), this.$results.on("mouseenter", ".select2-results__option[aria-selected]", function(n7) {
                var i4 = e5.GetData(this, "data");
                a3.getHighlightedResults().removeClass("select2-results__option--highlighted"), a3.trigger("results:focus", { data: i4, element: t4(this) });
              });
            }, n5.prototype.getHighlightedResults = function() {
              return this.$results.find(".select2-results__option--highlighted");
            }, n5.prototype.destroy = function() {
              this.$results.remove();
            }, n5.prototype.ensureHighlightVisible = function() {
              var t5 = this.getHighlightedResults();
              if (t5.length !== 0) {
                var e6 = this.$results.find("[aria-selected]").index(t5), n6 = this.$results.offset().top, i3 = t5.offset().top, a3 = this.$results.scrollTop() + (i3 - n6), r3 = i3 - n6;
                a3 -= 2 * t5.outerHeight(false), e6 <= 2 ? this.$results.scrollTop(0) : (r3 > this.$results.outerHeight() || r3 < 0) && this.$results.scrollTop(a3);
              }
            }, n5.prototype.template = function(e6, n6) {
              var i3 = this.options.get("templateResult"), a3 = this.options.get("escapeMarkup"), r3 = i3(e6, n6);
              r3 == null ? n6.style.display = "none" : typeof r3 == "string" ? n6.innerHTML = a3(r3) : t4(n6).append(r3);
            }, n5;
          }), e4.define("select2/keys", [], function() {
            return { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, PAGE_UP: 33, PAGE_DOWN: 34, END: 35, HOME: 36, LEFT: 37, UP: 38, RIGHT: 39, DOWN: 40, DELETE: 46 };
          }), e4.define("select2/selection/base", ["jquery", "../utils", "../keys"], function(t4, e5, n5) {
            function i3(t5, e6) {
              this.$element = t5, this.options = e6, i3.__super__.constructor.call(this);
            }
            return e5.Extend(i3, e5.Observable), i3.prototype.render = function() {
              var n6 = t4('<span class="select2-selection" role="combobox"  aria-haspopup="true" aria-expanded="false"></span>');
              return this._tabindex = 0, e5.GetData(this.$element[0], "old-tabindex") != null ? this._tabindex = e5.GetData(this.$element[0], "old-tabindex") : this.$element.attr("tabindex") != null && (this._tabindex = this.$element.attr("tabindex")), n6.attr("title", this.$element.attr("title")), n6.attr("tabindex", this._tabindex), n6.attr("aria-disabled", "false"), this.$selection = n6;
            }, i3.prototype.bind = function(t5, e6) {
              var i4 = this, a3 = t5.id + "-results";
              this.container = t5, this.$selection.on("focus", function(t6) {
                i4.trigger("focus", t6);
              }), this.$selection.on("blur", function(t6) {
                i4._handleBlur(t6);
              }), this.$selection.on("keydown", function(t6) {
                i4.trigger("keypress", t6), t6.which === n5.SPACE && t6.preventDefault();
              }), t5.on("results:focus", function(t6) {
                i4.$selection.attr("aria-activedescendant", t6.data._resultId);
              }), t5.on("selection:update", function(t6) {
                i4.update(t6.data);
              }), t5.on("open", function() {
                i4.$selection.attr("aria-expanded", "true"), i4.$selection.attr("aria-owns", a3), i4._attachCloseHandler(t5);
              }), t5.on("close", function() {
                i4.$selection.attr("aria-expanded", "false"), i4.$selection.removeAttr("aria-activedescendant"), i4.$selection.removeAttr("aria-owns"), i4.$selection.trigger("focus"), i4._detachCloseHandler(t5);
              }), t5.on("enable", function() {
                i4.$selection.attr("tabindex", i4._tabindex), i4.$selection.attr("aria-disabled", "false");
              }), t5.on("disable", function() {
                i4.$selection.attr("tabindex", "-1"), i4.$selection.attr("aria-disabled", "true");
              });
            }, i3.prototype._handleBlur = function(e6) {
              var n6 = this;
              window.setTimeout(function() {
                document.activeElement == n6.$selection[0] || t4.contains(n6.$selection[0], document.activeElement) || n6.trigger("blur", e6);
              }, 1);
            }, i3.prototype._attachCloseHandler = function(n6) {
              t4(document.body).on("mousedown.select2." + n6.id, function(n7) {
                var i4 = t4(n7.target).closest(".select2");
                t4(".select2.select2-container--open").each(function() {
                  this != i4[0] && e5.GetData(this, "element").select2("close");
                });
              });
            }, i3.prototype._detachCloseHandler = function(e6) {
              t4(document.body).off("mousedown.select2." + e6.id);
            }, i3.prototype.position = function(t5, e6) {
              e6.find(".selection").append(t5);
            }, i3.prototype.destroy = function() {
              this._detachCloseHandler(this.container);
            }, i3.prototype.update = function(t5) {
              throw new Error("The `update` method must be defined in child classes.");
            }, i3.prototype.isEnabled = function() {
              return !this.isDisabled();
            }, i3.prototype.isDisabled = function() {
              return this.options.get("disabled");
            }, i3;
          }), e4.define("select2/selection/single", ["jquery", "./base", "../utils", "../keys"], function(t4, e5, n5, i3) {
            function a3() {
              a3.__super__.constructor.apply(this, arguments);
            }
            return n5.Extend(a3, e5), a3.prototype.render = function() {
              var t5 = a3.__super__.render.call(this);
              return t5.addClass("select2-selection--single"), t5.html('<span class="select2-selection__rendered"></span><span class="select2-selection__arrow" role="presentation"><b role="presentation"></b></span>'), t5;
            }, a3.prototype.bind = function(t5, e6) {
              var n6 = this;
              a3.__super__.bind.apply(this, arguments);
              var i4 = t5.id + "-container";
              this.$selection.find(".select2-selection__rendered").attr("id", i4).attr("role", "textbox").attr("aria-readonly", "true"), this.$selection.attr("aria-labelledby", i4), this.$selection.on("mousedown", function(t6) {
                t6.which === 1 && n6.trigger("toggle", { originalEvent: t6 });
              }), this.$selection.on("focus", function(t6) {
              }), this.$selection.on("blur", function(t6) {
              }), t5.on("focus", function(e7) {
                t5.isOpen() || n6.$selection.trigger("focus");
              });
            }, a3.prototype.clear = function() {
              var t5 = this.$selection.find(".select2-selection__rendered");
              t5.empty(), t5.removeAttr("title");
            }, a3.prototype.display = function(t5, e6) {
              var n6 = this.options.get("templateSelection");
              return this.options.get("escapeMarkup")(n6(t5, e6));
            }, a3.prototype.selectionContainer = function() {
              return t4("<span></span>");
            }, a3.prototype.update = function(t5) {
              if (t5.length !== 0) {
                var e6 = t5[0], n6 = this.$selection.find(".select2-selection__rendered"), i4 = this.display(e6, n6);
                n6.empty().append(i4);
                var a4 = e6.title || e6.text;
                a4 ? n6.attr("title", a4) : n6.removeAttr("title");
              } else
                this.clear();
            }, a3;
          }), e4.define("select2/selection/multiple", ["jquery", "./base", "../utils"], function(t4, e5, n5) {
            function i3(t5, e6) {
              i3.__super__.constructor.apply(this, arguments);
            }
            return n5.Extend(i3, e5), i3.prototype.render = function() {
              var t5 = i3.__super__.render.call(this);
              return t5.addClass("select2-selection--multiple"), t5.html('<ul class="select2-selection__rendered"></ul>'), t5;
            }, i3.prototype.bind = function(e6, a3) {
              var r3 = this;
              i3.__super__.bind.apply(this, arguments), this.$selection.on("click", function(t5) {
                r3.trigger("toggle", { originalEvent: t5 });
              }), this.$selection.on("click", ".select2-selection__choice__remove", function(e7) {
                if (!r3.isDisabled()) {
                  var i4 = t4(this).parent(), a4 = n5.GetData(i4[0], "data");
                  r3.trigger("unselect", { originalEvent: e7, data: a4 });
                }
              });
            }, i3.prototype.clear = function() {
              var t5 = this.$selection.find(".select2-selection__rendered");
              t5.empty(), t5.removeAttr("title");
            }, i3.prototype.display = function(t5, e6) {
              var n6 = this.options.get("templateSelection");
              return this.options.get("escapeMarkup")(n6(t5, e6));
            }, i3.prototype.selectionContainer = function() {
              return t4('<li class="select2-selection__choice"><span class="select2-selection__choice__remove" role="presentation">&times;</span></li>');
            }, i3.prototype.update = function(t5) {
              if (this.clear(), t5.length !== 0) {
                for (var e6 = [], i4 = 0; i4 < t5.length; i4++) {
                  var a3 = t5[i4], r3 = this.selectionContainer(), o2 = this.display(a3, r3);
                  r3.append(o2);
                  var s2 = a3.title || a3.text;
                  s2 && r3.attr("title", s2), n5.StoreData(r3[0], "data", a3), e6.push(r3);
                }
                var l2 = this.$selection.find(".select2-selection__rendered");
                n5.appendMany(l2, e6);
              }
            }, i3;
          }), e4.define("select2/selection/placeholder", ["../utils"], function(t4) {
            function e5(t5, e6, n5) {
              this.placeholder = this.normalizePlaceholder(n5.get("placeholder")), t5.call(this, e6, n5);
            }
            return e5.prototype.normalizePlaceholder = function(t5, e6) {
              return typeof e6 == "string" && (e6 = { id: "", text: e6 }), e6;
            }, e5.prototype.createPlaceholder = function(t5, e6) {
              var n5 = this.selectionContainer();
              return n5.html(this.display(e6)), n5.addClass("select2-selection__placeholder").removeClass("select2-selection__choice"), n5;
            }, e5.prototype.update = function(t5, e6) {
              var n5 = e6.length == 1 && e6[0].id != this.placeholder.id;
              if (1 < e6.length || n5)
                return t5.call(this, e6);
              this.clear();
              var i3 = this.createPlaceholder(this.placeholder);
              this.$selection.find(".select2-selection__rendered").append(i3);
            }, e5;
          }), e4.define("select2/selection/allowClear", ["jquery", "../keys", "../utils"], function(t4, e5, n5) {
            function i3() {
            }
            return i3.prototype.bind = function(t5, e6, n6) {
              var i4 = this;
              t5.call(this, e6, n6), this.placeholder == null && this.options.get("debug") && window.console && console.error && console.error("Select2: The `allowClear` option should be used in combination with the `placeholder` option."), this.$selection.on("mousedown", ".select2-selection__clear", function(t6) {
                i4._handleClear(t6);
              }), e6.on("keypress", function(t6) {
                i4._handleKeyboardClear(t6, e6);
              });
            }, i3.prototype._handleClear = function(t5, e6) {
              if (!this.isDisabled()) {
                var i4 = this.$selection.find(".select2-selection__clear");
                if (i4.length !== 0) {
                  e6.stopPropagation();
                  var a3 = n5.GetData(i4[0], "data"), r3 = this.$element.val();
                  this.$element.val(this.placeholder.id);
                  var o2 = { data: a3 };
                  if (this.trigger("clear", o2), o2.prevented)
                    this.$element.val(r3);
                  else {
                    for (var s2 = 0; s2 < a3.length; s2++)
                      if (o2 = { data: a3[s2] }, this.trigger("unselect", o2), o2.prevented)
                        return void this.$element.val(r3);
                    this.$element.trigger("input").trigger("change"), this.trigger("toggle", {});
                  }
                }
              }
            }, i3.prototype._handleKeyboardClear = function(t5, n6, i4) {
              i4.isOpen() || n6.which != e5.DELETE && n6.which != e5.BACKSPACE || this._handleClear(n6);
            }, i3.prototype.update = function(e6, i4) {
              if (e6.call(this, i4), !(0 < this.$selection.find(".select2-selection__placeholder").length || i4.length === 0)) {
                var a3 = this.options.get("translations").get("removeAllItems"), r3 = t4('<span class="select2-selection__clear" title="' + a3() + '">&times;</span>');
                n5.StoreData(r3[0], "data", i4), this.$selection.find(".select2-selection__rendered").prepend(r3);
              }
            }, i3;
          }), e4.define("select2/selection/search", ["jquery", "../utils", "../keys"], function(t4, e5, n5) {
            function i3(t5, e6, n6) {
              t5.call(this, e6, n6);
            }
            return i3.prototype.render = function(e6) {
              var n6 = t4('<li class="select2-search select2-search--inline"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="searchbox" aria-autocomplete="list" /></li>');
              this.$searchContainer = n6, this.$search = n6.find("input");
              var i4 = e6.call(this);
              return this._transferTabIndex(), i4;
            }, i3.prototype.bind = function(t5, i4, a3) {
              var r3 = this, o2 = i4.id + "-results";
              t5.call(this, i4, a3), i4.on("open", function() {
                r3.$search.attr("aria-controls", o2), r3.$search.trigger("focus");
              }), i4.on("close", function() {
                r3.$search.val(""), r3.$search.removeAttr("aria-controls"), r3.$search.removeAttr("aria-activedescendant"), r3.$search.trigger("focus");
              }), i4.on("enable", function() {
                r3.$search.prop("disabled", false), r3._transferTabIndex();
              }), i4.on("disable", function() {
                r3.$search.prop("disabled", true);
              }), i4.on("focus", function(t6) {
                r3.$search.trigger("focus");
              }), i4.on("results:focus", function(t6) {
                t6.data._resultId ? r3.$search.attr("aria-activedescendant", t6.data._resultId) : r3.$search.removeAttr("aria-activedescendant");
              }), this.$selection.on("focusin", ".select2-search--inline", function(t6) {
                r3.trigger("focus", t6);
              }), this.$selection.on("focusout", ".select2-search--inline", function(t6) {
                r3._handleBlur(t6);
              }), this.$selection.on("keydown", ".select2-search--inline", function(t6) {
                if (t6.stopPropagation(), r3.trigger("keypress", t6), r3._keyUpPrevented = t6.isDefaultPrevented(), t6.which === n5.BACKSPACE && r3.$search.val() === "") {
                  var i5 = r3.$searchContainer.prev(".select2-selection__choice");
                  if (0 < i5.length) {
                    var a4 = e5.GetData(i5[0], "data");
                    r3.searchRemoveChoice(a4), t6.preventDefault();
                  }
                }
              }), this.$selection.on("click", ".select2-search--inline", function(t6) {
                r3.$search.val() && t6.stopPropagation();
              });
              var s2 = document.documentMode, l2 = s2 && s2 <= 11;
              this.$selection.on("input.searchcheck", ".select2-search--inline", function(t6) {
                l2 ? r3.$selection.off("input.search input.searchcheck") : r3.$selection.off("keyup.search");
              }), this.$selection.on("keyup.search input.search", ".select2-search--inline", function(t6) {
                if (l2 && t6.type === "input")
                  r3.$selection.off("input.search input.searchcheck");
                else {
                  var e6 = t6.which;
                  e6 != n5.SHIFT && e6 != n5.CTRL && e6 != n5.ALT && e6 != n5.TAB && r3.handleSearch(t6);
                }
              });
            }, i3.prototype._transferTabIndex = function(t5) {
              this.$search.attr("tabindex", this.$selection.attr("tabindex")), this.$selection.attr("tabindex", "-1");
            }, i3.prototype.createPlaceholder = function(t5, e6) {
              this.$search.attr("placeholder", e6.text);
            }, i3.prototype.update = function(t5, e6) {
              var n6 = this.$search[0] == document.activeElement;
              this.$search.attr("placeholder", ""), t5.call(this, e6), this.$selection.find(".select2-selection__rendered").append(this.$searchContainer), this.resizeSearch(), n6 && this.$search.trigger("focus");
            }, i3.prototype.handleSearch = function() {
              if (this.resizeSearch(), !this._keyUpPrevented) {
                var t5 = this.$search.val();
                this.trigger("query", { term: t5 });
              }
              this._keyUpPrevented = false;
            }, i3.prototype.searchRemoveChoice = function(t5, e6) {
              this.trigger("unselect", { data: e6 }), this.$search.val(e6.text), this.handleSearch();
            }, i3.prototype.resizeSearch = function() {
              this.$search.css("width", "25px");
              var t5 = "";
              t5 = this.$search.attr("placeholder") !== "" ? this.$selection.find(".select2-selection__rendered").width() : 0.75 * (this.$search.val().length + 1) + "em", this.$search.css("width", t5);
            }, i3;
          }), e4.define("select2/selection/eventRelay", ["jquery"], function(t4) {
            function e5() {
            }
            return e5.prototype.bind = function(e6, n5, i3) {
              var a3 = this, r3 = ["open", "opening", "close", "closing", "select", "selecting", "unselect", "unselecting", "clear", "clearing"], o2 = ["opening", "closing", "selecting", "unselecting", "clearing"];
              e6.call(this, n5, i3), n5.on("*", function(e7, n6) {
                if (t4.inArray(e7, r3) !== -1) {
                  n6 = n6 || {};
                  var i4 = t4.Event("select2:" + e7, { params: n6 });
                  a3.$element.trigger(i4), t4.inArray(e7, o2) !== -1 && (n6.prevented = i4.isDefaultPrevented());
                }
              });
            }, e5;
          }), e4.define("select2/translation", ["jquery", "require"], function(t4, e5) {
            function n5(t5) {
              this.dict = t5 || {};
            }
            return n5.prototype.all = function() {
              return this.dict;
            }, n5.prototype.get = function(t5) {
              return this.dict[t5];
            }, n5.prototype.extend = function(e6) {
              this.dict = t4.extend({}, e6.all(), this.dict);
            }, n5._cache = {}, n5.loadPath = function(t5) {
              if (!(t5 in n5._cache)) {
                var i3 = e5(t5);
                n5._cache[t5] = i3;
              }
              return new n5(n5._cache[t5]);
            }, n5;
          }), e4.define("select2/diacritics", [], function() {
            return { "\u24B6": "A", "\uFF21": "A", "\xC0": "A", "\xC1": "A", "\xC2": "A", "\u1EA6": "A", "\u1EA4": "A", "\u1EAA": "A", "\u1EA8": "A", "\xC3": "A", "\u0100": "A", "\u0102": "A", "\u1EB0": "A", "\u1EAE": "A", "\u1EB4": "A", "\u1EB2": "A", "\u0226": "A", "\u01E0": "A", "\xC4": "A", "\u01DE": "A", "\u1EA2": "A", "\xC5": "A", "\u01FA": "A", "\u01CD": "A", "\u0200": "A", "\u0202": "A", "\u1EA0": "A", "\u1EAC": "A", "\u1EB6": "A", "\u1E00": "A", "\u0104": "A", "\u023A": "A", "\u2C6F": "A", "\uA732": "AA", "\xC6": "AE", "\u01FC": "AE", "\u01E2": "AE", "\uA734": "AO", "\uA736": "AU", "\uA738": "AV", "\uA73A": "AV", "\uA73C": "AY", "\u24B7": "B", "\uFF22": "B", "\u1E02": "B", "\u1E04": "B", "\u1E06": "B", "\u0243": "B", "\u0182": "B", "\u0181": "B", "\u24B8": "C", "\uFF23": "C", "\u0106": "C", "\u0108": "C", "\u010A": "C", "\u010C": "C", "\xC7": "C", "\u1E08": "C", "\u0187": "C", "\u023B": "C", "\uA73E": "C", "\u24B9": "D", "\uFF24": "D", "\u1E0A": "D", "\u010E": "D", "\u1E0C": "D", "\u1E10": "D", "\u1E12": "D", "\u1E0E": "D", "\u0110": "D", "\u018B": "D", "\u018A": "D", "\u0189": "D", "\uA779": "D", "\u01F1": "DZ", "\u01C4": "DZ", "\u01F2": "Dz", "\u01C5": "Dz", "\u24BA": "E", "\uFF25": "E", "\xC8": "E", "\xC9": "E", "\xCA": "E", "\u1EC0": "E", "\u1EBE": "E", "\u1EC4": "E", "\u1EC2": "E", "\u1EBC": "E", "\u0112": "E", "\u1E14": "E", "\u1E16": "E", "\u0114": "E", "\u0116": "E", "\xCB": "E", "\u1EBA": "E", "\u011A": "E", "\u0204": "E", "\u0206": "E", "\u1EB8": "E", "\u1EC6": "E", "\u0228": "E", "\u1E1C": "E", "\u0118": "E", "\u1E18": "E", "\u1E1A": "E", "\u0190": "E", "\u018E": "E", "\u24BB": "F", "\uFF26": "F", "\u1E1E": "F", "\u0191": "F", "\uA77B": "F", "\u24BC": "G", "\uFF27": "G", "\u01F4": "G", "\u011C": "G", "\u1E20": "G", "\u011E": "G", "\u0120": "G", "\u01E6": "G", "\u0122": "G", "\u01E4": "G", "\u0193": "G", "\uA7A0": "G", "\uA77D": "G", "\uA77E": "G", "\u24BD": "H", "\uFF28": "H", "\u0124": "H", "\u1E22": "H", "\u1E26": "H", "\u021E": "H", "\u1E24": "H", "\u1E28": "H", "\u1E2A": "H", "\u0126": "H", "\u2C67": "H", "\u2C75": "H", "\uA78D": "H", "\u24BE": "I", "\uFF29": "I", "\xCC": "I", "\xCD": "I", "\xCE": "I", "\u0128": "I", "\u012A": "I", "\u012C": "I", "\u0130": "I", "\xCF": "I", "\u1E2E": "I", "\u1EC8": "I", "\u01CF": "I", "\u0208": "I", "\u020A": "I", "\u1ECA": "I", "\u012E": "I", "\u1E2C": "I", "\u0197": "I", "\u24BF": "J", "\uFF2A": "J", "\u0134": "J", "\u0248": "J", "\u24C0": "K", "\uFF2B": "K", "\u1E30": "K", "\u01E8": "K", "\u1E32": "K", "\u0136": "K", "\u1E34": "K", "\u0198": "K", "\u2C69": "K", "\uA740": "K", "\uA742": "K", "\uA744": "K", "\uA7A2": "K", "\u24C1": "L", "\uFF2C": "L", "\u013F": "L", "\u0139": "L", "\u013D": "L", "\u1E36": "L", "\u1E38": "L", "\u013B": "L", "\u1E3C": "L", "\u1E3A": "L", "\u0141": "L", "\u023D": "L", "\u2C62": "L", "\u2C60": "L", "\uA748": "L", "\uA746": "L", "\uA780": "L", "\u01C7": "LJ", "\u01C8": "Lj", "\u24C2": "M", "\uFF2D": "M", "\u1E3E": "M", "\u1E40": "M", "\u1E42": "M", "\u2C6E": "M", "\u019C": "M", "\u24C3": "N", "\uFF2E": "N", "\u01F8": "N", "\u0143": "N", "\xD1": "N", "\u1E44": "N", "\u0147": "N", "\u1E46": "N", "\u0145": "N", "\u1E4A": "N", "\u1E48": "N", "\u0220": "N", "\u019D": "N", "\uA790": "N", "\uA7A4": "N", "\u01CA": "NJ", "\u01CB": "Nj", "\u24C4": "O", "\uFF2F": "O", "\xD2": "O", "\xD3": "O", "\xD4": "O", "\u1ED2": "O", "\u1ED0": "O", "\u1ED6": "O", "\u1ED4": "O", "\xD5": "O", "\u1E4C": "O", "\u022C": "O", "\u1E4E": "O", "\u014C": "O", "\u1E50": "O", "\u1E52": "O", "\u014E": "O", "\u022E": "O", "\u0230": "O", "\xD6": "O", "\u022A": "O", "\u1ECE": "O", "\u0150": "O", "\u01D1": "O", "\u020C": "O", "\u020E": "O", "\u01A0": "O", "\u1EDC": "O", "\u1EDA": "O", "\u1EE0": "O", "\u1EDE": "O", "\u1EE2": "O", "\u1ECC": "O", "\u1ED8": "O", "\u01EA": "O", "\u01EC": "O", "\xD8": "O", "\u01FE": "O", "\u0186": "O", "\u019F": "O", "\uA74A": "O", "\uA74C": "O", "\u0152": "OE", "\u01A2": "OI", "\uA74E": "OO", "\u0222": "OU", "\u24C5": "P", "\uFF30": "P", "\u1E54": "P", "\u1E56": "P", "\u01A4": "P", "\u2C63": "P", "\uA750": "P", "\uA752": "P", "\uA754": "P", "\u24C6": "Q", "\uFF31": "Q", "\uA756": "Q", "\uA758": "Q", "\u024A": "Q", "\u24C7": "R", "\uFF32": "R", "\u0154": "R", "\u1E58": "R", "\u0158": "R", "\u0210": "R", "\u0212": "R", "\u1E5A": "R", "\u1E5C": "R", "\u0156": "R", "\u1E5E": "R", "\u024C": "R", "\u2C64": "R", "\uA75A": "R", "\uA7A6": "R", "\uA782": "R", "\u24C8": "S", "\uFF33": "S", "\u1E9E": "S", "\u015A": "S", "\u1E64": "S", "\u015C": "S", "\u1E60": "S", "\u0160": "S", "\u1E66": "S", "\u1E62": "S", "\u1E68": "S", "\u0218": "S", "\u015E": "S", "\u2C7E": "S", "\uA7A8": "S", "\uA784": "S", "\u24C9": "T", "\uFF34": "T", "\u1E6A": "T", "\u0164": "T", "\u1E6C": "T", "\u021A": "T", "\u0162": "T", "\u1E70": "T", "\u1E6E": "T", "\u0166": "T", "\u01AC": "T", "\u01AE": "T", "\u023E": "T", "\uA786": "T", "\uA728": "TZ", "\u24CA": "U", "\uFF35": "U", "\xD9": "U", "\xDA": "U", "\xDB": "U", "\u0168": "U", "\u1E78": "U", "\u016A": "U", "\u1E7A": "U", "\u016C": "U", "\xDC": "U", "\u01DB": "U", "\u01D7": "U", "\u01D5": "U", "\u01D9": "U", "\u1EE6": "U", "\u016E": "U", "\u0170": "U", "\u01D3": "U", "\u0214": "U", "\u0216": "U", "\u01AF": "U", "\u1EEA": "U", "\u1EE8": "U", "\u1EEE": "U", "\u1EEC": "U", "\u1EF0": "U", "\u1EE4": "U", "\u1E72": "U", "\u0172": "U", "\u1E76": "U", "\u1E74": "U", "\u0244": "U", "\u24CB": "V", "\uFF36": "V", "\u1E7C": "V", "\u1E7E": "V", "\u01B2": "V", "\uA75E": "V", "\u0245": "V", "\uA760": "VY", "\u24CC": "W", "\uFF37": "W", "\u1E80": "W", "\u1E82": "W", "\u0174": "W", "\u1E86": "W", "\u1E84": "W", "\u1E88": "W", "\u2C72": "W", "\u24CD": "X", "\uFF38": "X", "\u1E8A": "X", "\u1E8C": "X", "\u24CE": "Y", "\uFF39": "Y", "\u1EF2": "Y", "\xDD": "Y", "\u0176": "Y", "\u1EF8": "Y", "\u0232": "Y", "\u1E8E": "Y", "\u0178": "Y", "\u1EF6": "Y", "\u1EF4": "Y", "\u01B3": "Y", "\u024E": "Y", "\u1EFE": "Y", "\u24CF": "Z", "\uFF3A": "Z", "\u0179": "Z", "\u1E90": "Z", "\u017B": "Z", "\u017D": "Z", "\u1E92": "Z", "\u1E94": "Z", "\u01B5": "Z", "\u0224": "Z", "\u2C7F": "Z", "\u2C6B": "Z", "\uA762": "Z", "\u24D0": "a", "\uFF41": "a", "\u1E9A": "a", "\xE0": "a", "\xE1": "a", "\xE2": "a", "\u1EA7": "a", "\u1EA5": "a", "\u1EAB": "a", "\u1EA9": "a", "\xE3": "a", "\u0101": "a", "\u0103": "a", "\u1EB1": "a", "\u1EAF": "a", "\u1EB5": "a", "\u1EB3": "a", "\u0227": "a", "\u01E1": "a", "\xE4": "a", "\u01DF": "a", "\u1EA3": "a", "\xE5": "a", "\u01FB": "a", "\u01CE": "a", "\u0201": "a", "\u0203": "a", "\u1EA1": "a", "\u1EAD": "a", "\u1EB7": "a", "\u1E01": "a", "\u0105": "a", "\u2C65": "a", "\u0250": "a", "\uA733": "aa", "\xE6": "ae", "\u01FD": "ae", "\u01E3": "ae", "\uA735": "ao", "\uA737": "au", "\uA739": "av", "\uA73B": "av", "\uA73D": "ay", "\u24D1": "b", "\uFF42": "b", "\u1E03": "b", "\u1E05": "b", "\u1E07": "b", "\u0180": "b", "\u0183": "b", "\u0253": "b", "\u24D2": "c", "\uFF43": "c", "\u0107": "c", "\u0109": "c", "\u010B": "c", "\u010D": "c", "\xE7": "c", "\u1E09": "c", "\u0188": "c", "\u023C": "c", "\uA73F": "c", "\u2184": "c", "\u24D3": "d", "\uFF44": "d", "\u1E0B": "d", "\u010F": "d", "\u1E0D": "d", "\u1E11": "d", "\u1E13": "d", "\u1E0F": "d", "\u0111": "d", "\u018C": "d", "\u0256": "d", "\u0257": "d", "\uA77A": "d", "\u01F3": "dz", "\u01C6": "dz", "\u24D4": "e", "\uFF45": "e", "\xE8": "e", "\xE9": "e", "\xEA": "e", "\u1EC1": "e", "\u1EBF": "e", "\u1EC5": "e", "\u1EC3": "e", "\u1EBD": "e", "\u0113": "e", "\u1E15": "e", "\u1E17": "e", "\u0115": "e", "\u0117": "e", "\xEB": "e", "\u1EBB": "e", "\u011B": "e", "\u0205": "e", "\u0207": "e", "\u1EB9": "e", "\u1EC7": "e", "\u0229": "e", "\u1E1D": "e", "\u0119": "e", "\u1E19": "e", "\u1E1B": "e", "\u0247": "e", "\u025B": "e", "\u01DD": "e", "\u24D5": "f", "\uFF46": "f", "\u1E1F": "f", "\u0192": "f", "\uA77C": "f", "\u24D6": "g", "\uFF47": "g", "\u01F5": "g", "\u011D": "g", "\u1E21": "g", "\u011F": "g", "\u0121": "g", "\u01E7": "g", "\u0123": "g", "\u01E5": "g", "\u0260": "g", "\uA7A1": "g", "\u1D79": "g", "\uA77F": "g", "\u24D7": "h", "\uFF48": "h", "\u0125": "h", "\u1E23": "h", "\u1E27": "h", "\u021F": "h", "\u1E25": "h", "\u1E29": "h", "\u1E2B": "h", "\u1E96": "h", "\u0127": "h", "\u2C68": "h", "\u2C76": "h", "\u0265": "h", "\u0195": "hv", "\u24D8": "i", "\uFF49": "i", "\xEC": "i", "\xED": "i", "\xEE": "i", "\u0129": "i", "\u012B": "i", "\u012D": "i", "\xEF": "i", "\u1E2F": "i", "\u1EC9": "i", "\u01D0": "i", "\u0209": "i", "\u020B": "i", "\u1ECB": "i", "\u012F": "i", "\u1E2D": "i", "\u0268": "i", "\u0131": "i", "\u24D9": "j", "\uFF4A": "j", "\u0135": "j", "\u01F0": "j", "\u0249": "j", "\u24DA": "k", "\uFF4B": "k", "\u1E31": "k", "\u01E9": "k", "\u1E33": "k", "\u0137": "k", "\u1E35": "k", "\u0199": "k", "\u2C6A": "k", "\uA741": "k", "\uA743": "k", "\uA745": "k", "\uA7A3": "k", "\u24DB": "l", "\uFF4C": "l", "\u0140": "l", "\u013A": "l", "\u013E": "l", "\u1E37": "l", "\u1E39": "l", "\u013C": "l", "\u1E3D": "l", "\u1E3B": "l", "\u017F": "l", "\u0142": "l", "\u019A": "l", "\u026B": "l", "\u2C61": "l", "\uA749": "l", "\uA781": "l", "\uA747": "l", "\u01C9": "lj", "\u24DC": "m", "\uFF4D": "m", "\u1E3F": "m", "\u1E41": "m", "\u1E43": "m", "\u0271": "m", "\u026F": "m", "\u24DD": "n", "\uFF4E": "n", "\u01F9": "n", "\u0144": "n", "\xF1": "n", "\u1E45": "n", "\u0148": "n", "\u1E47": "n", "\u0146": "n", "\u1E4B": "n", "\u1E49": "n", "\u019E": "n", "\u0272": "n", "\u0149": "n", "\uA791": "n", "\uA7A5": "n", "\u01CC": "nj", "\u24DE": "o", "\uFF4F": "o", "\xF2": "o", "\xF3": "o", "\xF4": "o", "\u1ED3": "o", "\u1ED1": "o", "\u1ED7": "o", "\u1ED5": "o", "\xF5": "o", "\u1E4D": "o", "\u022D": "o", "\u1E4F": "o", "\u014D": "o", "\u1E51": "o", "\u1E53": "o", "\u014F": "o", "\u022F": "o", "\u0231": "o", "\xF6": "o", "\u022B": "o", "\u1ECF": "o", "\u0151": "o", "\u01D2": "o", "\u020D": "o", "\u020F": "o", "\u01A1": "o", "\u1EDD": "o", "\u1EDB": "o", "\u1EE1": "o", "\u1EDF": "o", "\u1EE3": "o", "\u1ECD": "o", "\u1ED9": "o", "\u01EB": "o", "\u01ED": "o", "\xF8": "o", "\u01FF": "o", "\u0254": "o", "\uA74B": "o", "\uA74D": "o", "\u0275": "o", "\u0153": "oe", "\u01A3": "oi", "\u0223": "ou", "\uA74F": "oo", "\u24DF": "p", "\uFF50": "p", "\u1E55": "p", "\u1E57": "p", "\u01A5": "p", "\u1D7D": "p", "\uA751": "p", "\uA753": "p", "\uA755": "p", "\u24E0": "q", "\uFF51": "q", "\u024B": "q", "\uA757": "q", "\uA759": "q", "\u24E1": "r", "\uFF52": "r", "\u0155": "r", "\u1E59": "r", "\u0159": "r", "\u0211": "r", "\u0213": "r", "\u1E5B": "r", "\u1E5D": "r", "\u0157": "r", "\u1E5F": "r", "\u024D": "r", "\u027D": "r", "\uA75B": "r", "\uA7A7": "r", "\uA783": "r", "\u24E2": "s", "\uFF53": "s", "\xDF": "s", "\u015B": "s", "\u1E65": "s", "\u015D": "s", "\u1E61": "s", "\u0161": "s", "\u1E67": "s", "\u1E63": "s", "\u1E69": "s", "\u0219": "s", "\u015F": "s", "\u023F": "s", "\uA7A9": "s", "\uA785": "s", "\u1E9B": "s", "\u24E3": "t", "\uFF54": "t", "\u1E6B": "t", "\u1E97": "t", "\u0165": "t", "\u1E6D": "t", "\u021B": "t", "\u0163": "t", "\u1E71": "t", "\u1E6F": "t", "\u0167": "t", "\u01AD": "t", "\u0288": "t", "\u2C66": "t", "\uA787": "t", "\uA729": "tz", "\u24E4": "u", "\uFF55": "u", "\xF9": "u", "\xFA": "u", "\xFB": "u", "\u0169": "u", "\u1E79": "u", "\u016B": "u", "\u1E7B": "u", "\u016D": "u", "\xFC": "u", "\u01DC": "u", "\u01D8": "u", "\u01D6": "u", "\u01DA": "u", "\u1EE7": "u", "\u016F": "u", "\u0171": "u", "\u01D4": "u", "\u0215": "u", "\u0217": "u", "\u01B0": "u", "\u1EEB": "u", "\u1EE9": "u", "\u1EEF": "u", "\u1EED": "u", "\u1EF1": "u", "\u1EE5": "u", "\u1E73": "u", "\u0173": "u", "\u1E77": "u", "\u1E75": "u", "\u0289": "u", "\u24E5": "v", "\uFF56": "v", "\u1E7D": "v", "\u1E7F": "v", "\u028B": "v", "\uA75F": "v", "\u028C": "v", "\uA761": "vy", "\u24E6": "w", "\uFF57": "w", "\u1E81": "w", "\u1E83": "w", "\u0175": "w", "\u1E87": "w", "\u1E85": "w", "\u1E98": "w", "\u1E89": "w", "\u2C73": "w", "\u24E7": "x", "\uFF58": "x", "\u1E8B": "x", "\u1E8D": "x", "\u24E8": "y", "\uFF59": "y", "\u1EF3": "y", "\xFD": "y", "\u0177": "y", "\u1EF9": "y", "\u0233": "y", "\u1E8F": "y", "\xFF": "y", "\u1EF7": "y", "\u1E99": "y", "\u1EF5": "y", "\u01B4": "y", "\u024F": "y", "\u1EFF": "y", "\u24E9": "z", "\uFF5A": "z", "\u017A": "z", "\u1E91": "z", "\u017C": "z", "\u017E": "z", "\u1E93": "z", "\u1E95": "z", "\u01B6": "z", "\u0225": "z", "\u0240": "z", "\u2C6C": "z", "\uA763": "z", "\u0386": "\u0391", "\u0388": "\u0395", "\u0389": "\u0397", "\u038A": "\u0399", "\u03AA": "\u0399", "\u038C": "\u039F", "\u038E": "\u03A5", "\u03AB": "\u03A5", "\u038F": "\u03A9", "\u03AC": "\u03B1", "\u03AD": "\u03B5", "\u03AE": "\u03B7", "\u03AF": "\u03B9", "\u03CA": "\u03B9", "\u0390": "\u03B9", "\u03CC": "\u03BF", "\u03CD": "\u03C5", "\u03CB": "\u03C5", "\u03B0": "\u03C5", "\u03CE": "\u03C9", "\u03C2": "\u03C3", "\u2019": "'" };
          }), e4.define("select2/data/base", ["../utils"], function(t4) {
            function e5(t5, n5) {
              e5.__super__.constructor.call(this);
            }
            return t4.Extend(e5, t4.Observable), e5.prototype.current = function(t5) {
              throw new Error("The `current` method must be defined in child classes.");
            }, e5.prototype.query = function(t5, e6) {
              throw new Error("The `query` method must be defined in child classes.");
            }, e5.prototype.bind = function(t5, e6) {
            }, e5.prototype.destroy = function() {
            }, e5.prototype.generateResultId = function(e6, n5) {
              var i3 = e6.id + "-result-";
              return i3 += t4.generateChars(4), n5.id != null ? i3 += "-" + n5.id.toString() : i3 += "-" + t4.generateChars(4), i3;
            }, e5;
          }), e4.define("select2/data/select", ["./base", "../utils", "jquery"], function(t4, e5, n5) {
            function i3(t5, e6) {
              this.$element = t5, this.options = e6, i3.__super__.constructor.call(this);
            }
            return e5.Extend(i3, t4), i3.prototype.current = function(t5) {
              var e6 = [], i4 = this;
              this.$element.find(":selected").each(function() {
                var t6 = n5(this), a3 = i4.item(t6);
                e6.push(a3);
              }), t5(e6);
            }, i3.prototype.select = function(t5) {
              var e6 = this;
              if (t5.selected = true, n5(t5.element).is("option"))
                return t5.element.selected = true, void this.$element.trigger("input").trigger("change");
              if (this.$element.prop("multiple"))
                this.current(function(i5) {
                  var a3 = [];
                  (t5 = [t5]).push.apply(t5, i5);
                  for (var r3 = 0; r3 < t5.length; r3++) {
                    var o2 = t5[r3].id;
                    n5.inArray(o2, a3) === -1 && a3.push(o2);
                  }
                  e6.$element.val(a3), e6.$element.trigger("input").trigger("change");
                });
              else {
                var i4 = t5.id;
                this.$element.val(i4), this.$element.trigger("input").trigger("change");
              }
            }, i3.prototype.unselect = function(t5) {
              var e6 = this;
              if (this.$element.prop("multiple")) {
                if (t5.selected = false, n5(t5.element).is("option"))
                  return t5.element.selected = false, void this.$element.trigger("input").trigger("change");
                this.current(function(i4) {
                  for (var a3 = [], r3 = 0; r3 < i4.length; r3++) {
                    var o2 = i4[r3].id;
                    o2 !== t5.id && n5.inArray(o2, a3) === -1 && a3.push(o2);
                  }
                  e6.$element.val(a3), e6.$element.trigger("input").trigger("change");
                });
              }
            }, i3.prototype.bind = function(t5, e6) {
              var n6 = this;
              (this.container = t5).on("select", function(t6) {
                n6.select(t6.data);
              }), t5.on("unselect", function(t6) {
                n6.unselect(t6.data);
              });
            }, i3.prototype.destroy = function() {
              this.$element.find("*").each(function() {
                e5.RemoveData(this);
              });
            }, i3.prototype.query = function(t5, e6) {
              var i4 = [], a3 = this;
              this.$element.children().each(function() {
                var e7 = n5(this);
                if (e7.is("option") || e7.is("optgroup")) {
                  var r3 = a3.item(e7), o2 = a3.matches(t5, r3);
                  o2 !== null && i4.push(o2);
                }
              }), e6({ results: i4 });
            }, i3.prototype.addOptions = function(t5) {
              e5.appendMany(this.$element, t5);
            }, i3.prototype.option = function(t5) {
              var i4;
              t5.children ? (i4 = document.createElement("optgroup")).label = t5.text : (i4 = document.createElement("option")).textContent !== void 0 ? i4.textContent = t5.text : i4.innerText = t5.text, t5.id !== void 0 && (i4.value = t5.id), t5.disabled && (i4.disabled = true), t5.selected && (i4.selected = true), t5.title && (i4.title = t5.title);
              var a3 = n5(i4), r3 = this._normalizeItem(t5);
              return r3.element = i4, e5.StoreData(i4, "data", r3), a3;
            }, i3.prototype.item = function(t5) {
              var i4 = {};
              if ((i4 = e5.GetData(t5[0], "data")) != null)
                return i4;
              if (t5.is("option"))
                i4 = { id: t5.val(), text: t5.text(), disabled: t5.prop("disabled"), selected: t5.prop("selected"), title: t5.prop("title") };
              else if (t5.is("optgroup")) {
                i4 = { text: t5.prop("label"), children: [], title: t5.prop("title") };
                for (var a3 = t5.children("option"), r3 = [], o2 = 0; o2 < a3.length; o2++) {
                  var s2 = n5(a3[o2]), l2 = this.item(s2);
                  r3.push(l2);
                }
                i4.children = r3;
              }
              return (i4 = this._normalizeItem(i4)).element = t5[0], e5.StoreData(t5[0], "data", i4), i4;
            }, i3.prototype._normalizeItem = function(t5) {
              return t5 !== Object(t5) && (t5 = { id: t5, text: t5 }), (t5 = n5.extend({}, { text: "" }, t5)).id != null && (t5.id = t5.id.toString()), t5.text != null && (t5.text = t5.text.toString()), t5._resultId == null && t5.id && this.container != null && (t5._resultId = this.generateResultId(this.container, t5)), n5.extend({}, { selected: false, disabled: false }, t5);
            }, i3.prototype.matches = function(t5, e6) {
              return this.options.get("matcher")(t5, e6);
            }, i3;
          }), e4.define("select2/data/array", ["./select", "../utils", "jquery"], function(t4, e5, n5) {
            function i3(t5, e6) {
              this._dataToConvert = e6.get("data") || [], i3.__super__.constructor.call(this, t5, e6);
            }
            return e5.Extend(i3, t4), i3.prototype.bind = function(t5, e6) {
              i3.__super__.bind.call(this, t5, e6), this.addOptions(this.convertToOptions(this._dataToConvert));
            }, i3.prototype.select = function(t5) {
              var e6 = this.$element.find("option").filter(function(e7, n6) {
                return n6.value == t5.id.toString();
              });
              e6.length === 0 && (e6 = this.option(t5), this.addOptions(e6)), i3.__super__.select.call(this, t5);
            }, i3.prototype.convertToOptions = function(t5) {
              var i4 = this, a3 = this.$element.find("option"), r3 = a3.map(function() {
                return i4.item(n5(this)).id;
              }).get(), o2 = [];
              function s2(t6) {
                return function() {
                  return n5(this).val() == t6.id;
                };
              }
              for (var l2 = 0; l2 < t5.length; l2++) {
                var c2 = this._normalizeItem(t5[l2]);
                if (0 <= n5.inArray(c2.id, r3)) {
                  var d2 = a3.filter(s2(c2)), u2 = this.item(d2), h2 = n5.extend(true, {}, c2, u2), p2 = this.option(h2);
                  d2.replaceWith(p2);
                } else {
                  var f2 = this.option(c2);
                  if (c2.children) {
                    var g2 = this.convertToOptions(c2.children);
                    e5.appendMany(f2, g2);
                  }
                  o2.push(f2);
                }
              }
              return o2;
            }, i3;
          }), e4.define("select2/data/ajax", ["./array", "../utils", "jquery"], function(t4, e5, n5) {
            function i3(t5, e6) {
              this.ajaxOptions = this._applyDefaults(e6.get("ajax")), this.ajaxOptions.processResults != null && (this.processResults = this.ajaxOptions.processResults), i3.__super__.constructor.call(this, t5, e6);
            }
            return e5.Extend(i3, t4), i3.prototype._applyDefaults = function(t5) {
              var e6 = { data: function(t6) {
                return n5.extend({}, t6, { q: t6.term });
              }, transport: function(t6, e7, i4) {
                var a3 = n5.ajax(t6);
                return a3.then(e7), a3.fail(i4), a3;
              } };
              return n5.extend({}, e6, t5, true);
            }, i3.prototype.processResults = function(t5) {
              return t5;
            }, i3.prototype.query = function(t5, e6) {
              var i4 = this;
              this._request != null && (n5.isFunction(this._request.abort) && this._request.abort(), this._request = null);
              var a3 = n5.extend({ type: "GET" }, this.ajaxOptions);
              function r3() {
                var r4 = a3.transport(a3, function(a4) {
                  var r5 = i4.processResults(a4, t5);
                  i4.options.get("debug") && window.console && console.error && (r5 && r5.results && n5.isArray(r5.results) || console.error("Select2: The AJAX results did not return an array in the `results` key of the response.")), e6(r5);
                }, function() {
                  "status" in r4 && (r4.status === 0 || r4.status === "0") || i4.trigger("results:message", { message: "errorLoading" });
                });
                i4._request = r4;
              }
              typeof a3.url == "function" && (a3.url = a3.url.call(this.$element, t5)), typeof a3.data == "function" && (a3.data = a3.data.call(this.$element, t5)), this.ajaxOptions.delay && t5.term != null ? (this._queryTimeout && window.clearTimeout(this._queryTimeout), this._queryTimeout = window.setTimeout(r3, this.ajaxOptions.delay)) : r3();
            }, i3;
          }), e4.define("select2/data/tags", ["jquery"], function(t4) {
            function e5(e6, n5, i3) {
              var a3 = i3.get("tags"), r3 = i3.get("createTag");
              r3 !== void 0 && (this.createTag = r3);
              var o2 = i3.get("insertTag");
              if (o2 !== void 0 && (this.insertTag = o2), e6.call(this, n5, i3), t4.isArray(a3))
                for (var s2 = 0; s2 < a3.length; s2++) {
                  var l2 = a3[s2], c2 = this._normalizeItem(l2), d2 = this.option(c2);
                  this.$element.append(d2);
                }
            }
            return e5.prototype.query = function(t5, e6, n5) {
              var i3 = this;
              this._removeOldTags(), e6.term != null && e6.page == null ? t5.call(this, e6, function t6(a3, r3) {
                for (var o2 = a3.results, s2 = 0; s2 < o2.length; s2++) {
                  var l2 = o2[s2], c2 = l2.children != null && !t6({ results: l2.children }, true);
                  if ((l2.text || "").toUpperCase() === (e6.term || "").toUpperCase() || c2)
                    return !r3 && (a3.data = o2, void n5(a3));
                }
                if (r3)
                  return true;
                var d2 = i3.createTag(e6);
                if (d2 != null) {
                  var u2 = i3.option(d2);
                  u2.attr("data-select2-tag", true), i3.addOptions([u2]), i3.insertTag(o2, d2);
                }
                a3.results = o2, n5(a3);
              }) : t5.call(this, e6, n5);
            }, e5.prototype.createTag = function(e6, n5) {
              var i3 = t4.trim(n5.term);
              return i3 === "" ? null : { id: i3, text: i3 };
            }, e5.prototype.insertTag = function(t5, e6, n5) {
              e6.unshift(n5);
            }, e5.prototype._removeOldTags = function(e6) {
              this.$element.find("option[data-select2-tag]").each(function() {
                this.selected || t4(this).remove();
              });
            }, e5;
          }), e4.define("select2/data/tokenizer", ["jquery"], function(t4) {
            function e5(t5, e6, n5) {
              var i3 = n5.get("tokenizer");
              i3 !== void 0 && (this.tokenizer = i3), t5.call(this, e6, n5);
            }
            return e5.prototype.bind = function(t5, e6, n5) {
              t5.call(this, e6, n5), this.$search = e6.dropdown.$search || e6.selection.$search || n5.find(".select2-search__field");
            }, e5.prototype.query = function(e6, n5, i3) {
              var a3 = this;
              n5.term = n5.term || "";
              var r3 = this.tokenizer(n5, this.options, function(e7) {
                var n6, i4 = a3._normalizeItem(e7);
                if (!a3.$element.find("option").filter(function() {
                  return t4(this).val() === i4.id;
                }).length) {
                  var r4 = a3.option(i4);
                  r4.attr("data-select2-tag", true), a3._removeOldTags(), a3.addOptions([r4]);
                }
                n6 = i4, a3.trigger("select", { data: n6 });
              });
              r3.term !== n5.term && (this.$search.length && (this.$search.val(r3.term), this.$search.trigger("focus")), n5.term = r3.term), e6.call(this, n5, i3);
            }, e5.prototype.tokenizer = function(e6, n5, i3, a3) {
              for (var r3 = i3.get("tokenSeparators") || [], o2 = n5.term, s2 = 0, l2 = this.createTag || function(t5) {
                return { id: t5.term, text: t5.term };
              }; s2 < o2.length; ) {
                var c2 = o2[s2];
                if (t4.inArray(c2, r3) !== -1) {
                  var d2 = o2.substr(0, s2), u2 = l2(t4.extend({}, n5, { term: d2 }));
                  u2 != null ? (a3(u2), o2 = o2.substr(s2 + 1) || "", s2 = 0) : s2++;
                } else
                  s2++;
              }
              return { term: o2 };
            }, e5;
          }), e4.define("select2/data/minimumInputLength", [], function() {
            function t4(t5, e5, n5) {
              this.minimumInputLength = n5.get("minimumInputLength"), t5.call(this, e5, n5);
            }
            return t4.prototype.query = function(t5, e5, n5) {
              e5.term = e5.term || "", e5.term.length < this.minimumInputLength ? this.trigger("results:message", { message: "inputTooShort", args: { minimum: this.minimumInputLength, input: e5.term, params: e5 } }) : t5.call(this, e5, n5);
            }, t4;
          }), e4.define("select2/data/maximumInputLength", [], function() {
            function t4(t5, e5, n5) {
              this.maximumInputLength = n5.get("maximumInputLength"), t5.call(this, e5, n5);
            }
            return t4.prototype.query = function(t5, e5, n5) {
              e5.term = e5.term || "", 0 < this.maximumInputLength && e5.term.length > this.maximumInputLength ? this.trigger("results:message", { message: "inputTooLong", args: { maximum: this.maximumInputLength, input: e5.term, params: e5 } }) : t5.call(this, e5, n5);
            }, t4;
          }), e4.define("select2/data/maximumSelectionLength", [], function() {
            function t4(t5, e5, n5) {
              this.maximumSelectionLength = n5.get("maximumSelectionLength"), t5.call(this, e5, n5);
            }
            return t4.prototype.bind = function(t5, e5, n5) {
              var i3 = this;
              t5.call(this, e5, n5), e5.on("select", function() {
                i3._checkIfMaximumSelected();
              });
            }, t4.prototype.query = function(t5, e5, n5) {
              var i3 = this;
              this._checkIfMaximumSelected(function() {
                t5.call(i3, e5, n5);
              });
            }, t4.prototype._checkIfMaximumSelected = function(t5, e5) {
              var n5 = this;
              this.current(function(t6) {
                var i3 = t6 != null ? t6.length : 0;
                0 < n5.maximumSelectionLength && i3 >= n5.maximumSelectionLength ? n5.trigger("results:message", { message: "maximumSelected", args: { maximum: n5.maximumSelectionLength } }) : e5 && e5();
              });
            }, t4;
          }), e4.define("select2/dropdown", ["jquery", "./utils"], function(t4, e5) {
            function n5(t5, e6) {
              this.$element = t5, this.options = e6, n5.__super__.constructor.call(this);
            }
            return e5.Extend(n5, e5.Observable), n5.prototype.render = function() {
              var e6 = t4('<span class="select2-dropdown"><span class="select2-results"></span></span>');
              return e6.attr("dir", this.options.get("dir")), this.$dropdown = e6;
            }, n5.prototype.bind = function() {
            }, n5.prototype.position = function(t5, e6) {
            }, n5.prototype.destroy = function() {
              this.$dropdown.remove();
            }, n5;
          }), e4.define("select2/dropdown/search", ["jquery", "../utils"], function(t4, e5) {
            function n5() {
            }
            return n5.prototype.render = function(e6) {
              var n6 = e6.call(this), i3 = t4('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="searchbox" aria-autocomplete="list" /></span>');
              return this.$searchContainer = i3, this.$search = i3.find("input"), n6.prepend(i3), n6;
            }, n5.prototype.bind = function(e6, n6, i3) {
              var a3 = this, r3 = n6.id + "-results";
              e6.call(this, n6, i3), this.$search.on("keydown", function(t5) {
                a3.trigger("keypress", t5), a3._keyUpPrevented = t5.isDefaultPrevented();
              }), this.$search.on("input", function(e7) {
                t4(this).off("keyup");
              }), this.$search.on("keyup input", function(t5) {
                a3.handleSearch(t5);
              }), n6.on("open", function() {
                a3.$search.attr("tabindex", 0), a3.$search.attr("aria-controls", r3), a3.$search.trigger("focus"), window.setTimeout(function() {
                  a3.$search.trigger("focus");
                }, 0);
              }), n6.on("close", function() {
                a3.$search.attr("tabindex", -1), a3.$search.removeAttr("aria-controls"), a3.$search.removeAttr("aria-activedescendant"), a3.$search.val(""), a3.$search.trigger("blur");
              }), n6.on("focus", function() {
                n6.isOpen() || a3.$search.trigger("focus");
              }), n6.on("results:all", function(t5) {
                t5.query.term != null && t5.query.term !== "" || (a3.showSearch(t5) ? a3.$searchContainer.removeClass("select2-search--hide") : a3.$searchContainer.addClass("select2-search--hide"));
              }), n6.on("results:focus", function(t5) {
                t5.data._resultId ? a3.$search.attr("aria-activedescendant", t5.data._resultId) : a3.$search.removeAttr("aria-activedescendant");
              });
            }, n5.prototype.handleSearch = function(t5) {
              if (!this._keyUpPrevented) {
                var e6 = this.$search.val();
                this.trigger("query", { term: e6 });
              }
              this._keyUpPrevented = false;
            }, n5.prototype.showSearch = function(t5, e6) {
              return true;
            }, n5;
          }), e4.define("select2/dropdown/hidePlaceholder", [], function() {
            function t4(t5, e5, n5, i3) {
              this.placeholder = this.normalizePlaceholder(n5.get("placeholder")), t5.call(this, e5, n5, i3);
            }
            return t4.prototype.append = function(t5, e5) {
              e5.results = this.removePlaceholder(e5.results), t5.call(this, e5);
            }, t4.prototype.normalizePlaceholder = function(t5, e5) {
              return typeof e5 == "string" && (e5 = { id: "", text: e5 }), e5;
            }, t4.prototype.removePlaceholder = function(t5, e5) {
              for (var n5 = e5.slice(0), i3 = e5.length - 1; 0 <= i3; i3--) {
                var a3 = e5[i3];
                this.placeholder.id === a3.id && n5.splice(i3, 1);
              }
              return n5;
            }, t4;
          }), e4.define("select2/dropdown/infiniteScroll", ["jquery"], function(t4) {
            function e5(t5, e6, n5, i3) {
              this.lastParams = {}, t5.call(this, e6, n5, i3), this.$loadingMore = this.createLoadingMore(), this.loading = false;
            }
            return e5.prototype.append = function(t5, e6) {
              this.$loadingMore.remove(), this.loading = false, t5.call(this, e6), this.showLoadingMore(e6) && (this.$results.append(this.$loadingMore), this.loadMoreIfNeeded());
            }, e5.prototype.bind = function(t5, e6, n5) {
              var i3 = this;
              t5.call(this, e6, n5), e6.on("query", function(t6) {
                i3.lastParams = t6, i3.loading = true;
              }), e6.on("query:append", function(t6) {
                i3.lastParams = t6, i3.loading = true;
              }), this.$results.on("scroll", this.loadMoreIfNeeded.bind(this));
            }, e5.prototype.loadMoreIfNeeded = function() {
              var e6 = t4.contains(document.documentElement, this.$loadingMore[0]);
              if (!this.loading && e6) {
                var n5 = this.$results.offset().top + this.$results.outerHeight(false);
                this.$loadingMore.offset().top + this.$loadingMore.outerHeight(false) <= n5 + 50 && this.loadMore();
              }
            }, e5.prototype.loadMore = function() {
              this.loading = true;
              var e6 = t4.extend({}, { page: 1 }, this.lastParams);
              e6.page++, this.trigger("query:append", e6);
            }, e5.prototype.showLoadingMore = function(t5, e6) {
              return e6.pagination && e6.pagination.more;
            }, e5.prototype.createLoadingMore = function() {
              var e6 = t4('<li class="select2-results__option select2-results__option--load-more"role="option" aria-disabled="true"></li>'), n5 = this.options.get("translations").get("loadingMore");
              return e6.html(n5(this.lastParams)), e6;
            }, e5;
          }), e4.define("select2/dropdown/attachBody", ["jquery", "../utils"], function(t4, e5) {
            function n5(e6, n6, i3) {
              this.$dropdownParent = t4(i3.get("dropdownParent") || document.body), e6.call(this, n6, i3);
            }
            return n5.prototype.bind = function(t5, e6, n6) {
              var i3 = this;
              t5.call(this, e6, n6), e6.on("open", function() {
                i3._showDropdown(), i3._attachPositioningHandler(e6), i3._bindContainerResultHandlers(e6);
              }), e6.on("close", function() {
                i3._hideDropdown(), i3._detachPositioningHandler(e6);
              }), this.$dropdownContainer.on("mousedown", function(t6) {
                t6.stopPropagation();
              });
            }, n5.prototype.destroy = function(t5) {
              t5.call(this), this.$dropdownContainer.remove();
            }, n5.prototype.position = function(t5, e6, n6) {
              e6.attr("class", n6.attr("class")), e6.removeClass("select2"), e6.addClass("select2-container--open"), e6.css({ position: "absolute", top: -999999 }), this.$container = n6;
            }, n5.prototype.render = function(e6) {
              var n6 = t4("<span></span>"), i3 = e6.call(this);
              return n6.append(i3), this.$dropdownContainer = n6;
            }, n5.prototype._hideDropdown = function(t5) {
              this.$dropdownContainer.detach();
            }, n5.prototype._bindContainerResultHandlers = function(t5, e6) {
              if (!this._containerResultsHandlersBound) {
                var n6 = this;
                e6.on("results:all", function() {
                  n6._positionDropdown(), n6._resizeDropdown();
                }), e6.on("results:append", function() {
                  n6._positionDropdown(), n6._resizeDropdown();
                }), e6.on("results:message", function() {
                  n6._positionDropdown(), n6._resizeDropdown();
                }), e6.on("select", function() {
                  n6._positionDropdown(), n6._resizeDropdown();
                }), e6.on("unselect", function() {
                  n6._positionDropdown(), n6._resizeDropdown();
                }), this._containerResultsHandlersBound = true;
              }
            }, n5.prototype._attachPositioningHandler = function(n6, i3) {
              var a3 = this, r3 = "scroll.select2." + i3.id, o2 = "resize.select2." + i3.id, s2 = "orientationchange.select2." + i3.id, l2 = this.$container.parents().filter(e5.hasScroll);
              l2.each(function() {
                e5.StoreData(this, "select2-scroll-position", { x: t4(this).scrollLeft(), y: t4(this).scrollTop() });
              }), l2.on(r3, function(n7) {
                var i4 = e5.GetData(this, "select2-scroll-position");
                t4(this).scrollTop(i4.y);
              }), t4(window).on(r3 + " " + o2 + " " + s2, function(t5) {
                a3._positionDropdown(), a3._resizeDropdown();
              });
            }, n5.prototype._detachPositioningHandler = function(n6, i3) {
              var a3 = "scroll.select2." + i3.id, r3 = "resize.select2." + i3.id, o2 = "orientationchange.select2." + i3.id;
              this.$container.parents().filter(e5.hasScroll).off(a3), t4(window).off(a3 + " " + r3 + " " + o2);
            }, n5.prototype._positionDropdown = function() {
              var e6 = t4(window), n6 = this.$dropdown.hasClass("select2-dropdown--above"), i3 = this.$dropdown.hasClass("select2-dropdown--below"), a3 = null, r3 = this.$container.offset();
              r3.bottom = r3.top + this.$container.outerHeight(false);
              var o2 = { height: this.$container.outerHeight(false) };
              o2.top = r3.top, o2.bottom = r3.top + o2.height;
              var s2 = this.$dropdown.outerHeight(false), l2 = e6.scrollTop(), c2 = e6.scrollTop() + e6.height(), d2 = l2 < r3.top - s2, u2 = c2 > r3.bottom + s2, h2 = { left: r3.left, top: o2.bottom }, p2 = this.$dropdownParent;
              p2.css("position") === "static" && (p2 = p2.offsetParent());
              var f2 = { top: 0, left: 0 };
              (t4.contains(document.body, p2[0]) || p2[0].isConnected) && (f2 = p2.offset()), h2.top -= f2.top, h2.left -= f2.left, n6 || i3 || (a3 = "below"), u2 || !d2 || n6 ? !d2 && u2 && n6 && (a3 = "below") : a3 = "above", (a3 == "above" || n6 && a3 !== "below") && (h2.top = o2.top - f2.top - s2), a3 != null && (this.$dropdown.removeClass("select2-dropdown--below select2-dropdown--above").addClass("select2-dropdown--" + a3), this.$container.removeClass("select2-container--below select2-container--above").addClass("select2-container--" + a3)), this.$dropdownContainer.css(h2);
            }, n5.prototype._resizeDropdown = function() {
              var t5 = { width: this.$container.outerWidth(false) + "px" };
              this.options.get("dropdownAutoWidth") && (t5.minWidth = t5.width, t5.position = "relative", t5.width = "auto"), this.$dropdown.css(t5);
            }, n5.prototype._showDropdown = function(t5) {
              this.$dropdownContainer.appendTo(this.$dropdownParent), this._positionDropdown(), this._resizeDropdown();
            }, n5;
          }), e4.define("select2/dropdown/minimumResultsForSearch", [], function() {
            function t4(t5, e5, n5, i3) {
              this.minimumResultsForSearch = n5.get("minimumResultsForSearch"), this.minimumResultsForSearch < 0 && (this.minimumResultsForSearch = 1 / 0), t5.call(this, e5, n5, i3);
            }
            return t4.prototype.showSearch = function(t5, e5) {
              return !(function t6(e6) {
                for (var n5 = 0, i3 = 0; i3 < e6.length; i3++) {
                  var a3 = e6[i3];
                  a3.children ? n5 += t6(a3.children) : n5++;
                }
                return n5;
              }(e5.data.results) < this.minimumResultsForSearch) && t5.call(this, e5);
            }, t4;
          }), e4.define("select2/dropdown/selectOnClose", ["../utils"], function(t4) {
            function e5() {
            }
            return e5.prototype.bind = function(t5, e6, n5) {
              var i3 = this;
              t5.call(this, e6, n5), e6.on("close", function(t6) {
                i3._handleSelectOnClose(t6);
              });
            }, e5.prototype._handleSelectOnClose = function(e6, n5) {
              if (n5 && n5.originalSelect2Event != null) {
                var i3 = n5.originalSelect2Event;
                if (i3._type === "select" || i3._type === "unselect")
                  return;
              }
              var a3 = this.getHighlightedResults();
              if (!(a3.length < 1)) {
                var r3 = t4.GetData(a3[0], "data");
                r3.element != null && r3.element.selected || r3.element == null && r3.selected || this.trigger("select", { data: r3 });
              }
            }, e5;
          }), e4.define("select2/dropdown/closeOnSelect", [], function() {
            function t4() {
            }
            return t4.prototype.bind = function(t5, e5, n5) {
              var i3 = this;
              t5.call(this, e5, n5), e5.on("select", function(t6) {
                i3._selectTriggered(t6);
              }), e5.on("unselect", function(t6) {
                i3._selectTriggered(t6);
              });
            }, t4.prototype._selectTriggered = function(t5, e5) {
              var n5 = e5.originalEvent;
              n5 && (n5.ctrlKey || n5.metaKey) || this.trigger("close", { originalEvent: n5, originalSelect2Event: e5 });
            }, t4;
          }), e4.define("select2/i18n/en", [], function() {
            return { errorLoading: function() {
              return "The results could not be loaded.";
            }, inputTooLong: function(t4) {
              var e5 = t4.input.length - t4.maximum, n5 = "Please delete " + e5 + " character";
              return e5 != 1 && (n5 += "s"), n5;
            }, inputTooShort: function(t4) {
              return "Please enter " + (t4.minimum - t4.input.length) + " or more characters";
            }, loadingMore: function() {
              return "Loading more results\u2026";
            }, maximumSelected: function(t4) {
              var e5 = "You can only select " + t4.maximum + " item";
              return t4.maximum != 1 && (e5 += "s"), e5;
            }, noResults: function() {
              return "No results found";
            }, searching: function() {
              return "Searching\u2026";
            }, removeAllItems: function() {
              return "Remove all items";
            } };
          }), e4.define("select2/defaults", ["jquery", "require", "./results", "./selection/single", "./selection/multiple", "./selection/placeholder", "./selection/allowClear", "./selection/search", "./selection/eventRelay", "./utils", "./translation", "./diacritics", "./data/select", "./data/array", "./data/ajax", "./data/tags", "./data/tokenizer", "./data/minimumInputLength", "./data/maximumInputLength", "./data/maximumSelectionLength", "./dropdown", "./dropdown/search", "./dropdown/hidePlaceholder", "./dropdown/infiniteScroll", "./dropdown/attachBody", "./dropdown/minimumResultsForSearch", "./dropdown/selectOnClose", "./dropdown/closeOnSelect", "./i18n/en"], function(t4, e5, n5, i3, a3, r3, o2, s2, l2, c2, d2, u2, h2, p2, f2, g2, m2, v2, b2, y2, x2, _2, w2, S2, C2, k, D, T, E) {
            function A() {
              this.reset();
            }
            return A.prototype.apply = function(d3) {
              if ((d3 = t4.extend(true, {}, this.defaults, d3)).dataAdapter == null) {
                if (d3.ajax != null ? d3.dataAdapter = f2 : d3.data != null ? d3.dataAdapter = p2 : d3.dataAdapter = h2, 0 < d3.minimumInputLength && (d3.dataAdapter = c2.Decorate(d3.dataAdapter, v2)), 0 < d3.maximumInputLength && (d3.dataAdapter = c2.Decorate(d3.dataAdapter, b2)), 0 < d3.maximumSelectionLength && (d3.dataAdapter = c2.Decorate(d3.dataAdapter, y2)), d3.tags && (d3.dataAdapter = c2.Decorate(d3.dataAdapter, g2)), d3.tokenSeparators == null && d3.tokenizer == null || (d3.dataAdapter = c2.Decorate(d3.dataAdapter, m2)), d3.query != null) {
                  var u3 = e5(d3.amdBase + "compat/query");
                  d3.dataAdapter = c2.Decorate(d3.dataAdapter, u3);
                }
                if (d3.initSelection != null) {
                  var E2 = e5(d3.amdBase + "compat/initSelection");
                  d3.dataAdapter = c2.Decorate(d3.dataAdapter, E2);
                }
              }
              if (d3.resultsAdapter == null && (d3.resultsAdapter = n5, d3.ajax != null && (d3.resultsAdapter = c2.Decorate(d3.resultsAdapter, S2)), d3.placeholder != null && (d3.resultsAdapter = c2.Decorate(d3.resultsAdapter, w2)), d3.selectOnClose && (d3.resultsAdapter = c2.Decorate(d3.resultsAdapter, D))), d3.dropdownAdapter == null) {
                if (d3.multiple)
                  d3.dropdownAdapter = x2;
                else {
                  var A2 = c2.Decorate(x2, _2);
                  d3.dropdownAdapter = A2;
                }
                if (d3.minimumResultsForSearch !== 0 && (d3.dropdownAdapter = c2.Decorate(d3.dropdownAdapter, k)), d3.closeOnSelect && (d3.dropdownAdapter = c2.Decorate(d3.dropdownAdapter, T)), d3.dropdownCssClass != null || d3.dropdownCss != null || d3.adaptDropdownCssClass != null) {
                  var I = e5(d3.amdBase + "compat/dropdownCss");
                  d3.dropdownAdapter = c2.Decorate(d3.dropdownAdapter, I);
                }
                d3.dropdownAdapter = c2.Decorate(d3.dropdownAdapter, C2);
              }
              if (d3.selectionAdapter == null) {
                if (d3.multiple ? d3.selectionAdapter = a3 : d3.selectionAdapter = i3, d3.placeholder != null && (d3.selectionAdapter = c2.Decorate(d3.selectionAdapter, r3)), d3.allowClear && (d3.selectionAdapter = c2.Decorate(d3.selectionAdapter, o2)), d3.multiple && (d3.selectionAdapter = c2.Decorate(d3.selectionAdapter, s2)), d3.containerCssClass != null || d3.containerCss != null || d3.adaptContainerCssClass != null) {
                  var M = e5(d3.amdBase + "compat/containerCss");
                  d3.selectionAdapter = c2.Decorate(d3.selectionAdapter, M);
                }
                d3.selectionAdapter = c2.Decorate(d3.selectionAdapter, l2);
              }
              d3.language = this._resolveLanguage(d3.language), d3.language.push("en");
              for (var R = [], P = 0; P < d3.language.length; P++) {
                var O = d3.language[P];
                R.indexOf(O) === -1 && R.push(O);
              }
              return d3.language = R, d3.translations = this._processTranslations(d3.language, d3.debug), d3;
            }, A.prototype.reset = function() {
              function e6(t5) {
                return t5.replace(/[^\u0000-\u007E]/g, function(t6) {
                  return u2[t6] || t6;
                });
              }
              this.defaults = { amdBase: "./", amdLanguageBase: "./i18n/", closeOnSelect: true, debug: false, dropdownAutoWidth: false, escapeMarkup: c2.escapeMarkup, language: {}, matcher: function n6(i4, a4) {
                if (t4.trim(i4.term) === "")
                  return a4;
                if (a4.children && 0 < a4.children.length) {
                  for (var r4 = t4.extend(true, {}, a4), o3 = a4.children.length - 1; 0 <= o3; o3--)
                    n6(i4, a4.children[o3]) == null && r4.children.splice(o3, 1);
                  return 0 < r4.children.length ? r4 : n6(i4, r4);
                }
                var s3 = e6(a4.text).toUpperCase(), l3 = e6(i4.term).toUpperCase();
                return -1 < s3.indexOf(l3) ? a4 : null;
              }, minimumInputLength: 0, maximumInputLength: 0, maximumSelectionLength: 0, minimumResultsForSearch: 0, selectOnClose: false, scrollAfterSelect: false, sorter: function(t5) {
                return t5;
              }, templateResult: function(t5) {
                return t5.text;
              }, templateSelection: function(t5) {
                return t5.text;
              }, theme: "default", width: "resolve" };
            }, A.prototype.applyFromElement = function(t5, e6) {
              var n6 = t5.language, i4 = this.defaults.language, a4 = e6.prop("lang"), r4 = e6.closest("[lang]").prop("lang"), o3 = Array.prototype.concat.call(this._resolveLanguage(a4), this._resolveLanguage(n6), this._resolveLanguage(i4), this._resolveLanguage(r4));
              return t5.language = o3, t5;
            }, A.prototype._resolveLanguage = function(e6) {
              if (!e6)
                return [];
              if (t4.isEmptyObject(e6))
                return [];
              if (t4.isPlainObject(e6))
                return [e6];
              var n6;
              n6 = t4.isArray(e6) ? e6 : [e6];
              for (var i4 = [], a4 = 0; a4 < n6.length; a4++)
                if (i4.push(n6[a4]), typeof n6[a4] == "string" && 0 < n6[a4].indexOf("-")) {
                  var r4 = n6[a4].split("-")[0];
                  i4.push(r4);
                }
              return i4;
            }, A.prototype._processTranslations = function(e6, n6) {
              for (var i4 = new d2(), a4 = 0; a4 < e6.length; a4++) {
                var r4 = new d2(), o3 = e6[a4];
                if (typeof o3 == "string")
                  try {
                    r4 = d2.loadPath(o3);
                  } catch (e7) {
                    try {
                      o3 = this.defaults.amdLanguageBase + o3, r4 = d2.loadPath(o3);
                    } catch (e8) {
                      n6 && window.console && console.warn && console.warn('Select2: The language file for "' + o3 + '" could not be automatically loaded. A fallback will be used instead.');
                    }
                  }
                else
                  r4 = t4.isPlainObject(o3) ? new d2(o3) : o3;
                i4.extend(r4);
              }
              return i4;
            }, A.prototype.set = function(e6, n6) {
              var i4 = {};
              i4[t4.camelCase(e6)] = n6;
              var a4 = c2._convertData(i4);
              t4.extend(true, this.defaults, a4);
            }, new A();
          }), e4.define("select2/options", ["require", "jquery", "./defaults", "./utils"], function(t4, e5, n5, i3) {
            function a3(e6, a4) {
              if (this.options = e6, a4 != null && this.fromElement(a4), a4 != null && (this.options = n5.applyFromElement(this.options, a4)), this.options = n5.apply(this.options), a4 && a4.is("input")) {
                var r3 = t4(this.get("amdBase") + "compat/inputData");
                this.options.dataAdapter = i3.Decorate(this.options.dataAdapter, r3);
              }
            }
            return a3.prototype.fromElement = function(t5) {
              var n6 = ["select2"];
              this.options.multiple == null && (this.options.multiple = t5.prop("multiple")), this.options.disabled == null && (this.options.disabled = t5.prop("disabled")), this.options.dir == null && (t5.prop("dir") ? this.options.dir = t5.prop("dir") : t5.closest("[dir]").prop("dir") ? this.options.dir = t5.closest("[dir]").prop("dir") : this.options.dir = "ltr"), t5.prop("disabled", this.options.disabled), t5.prop("multiple", this.options.multiple), i3.GetData(t5[0], "select2Tags") && (this.options.debug && window.console && console.warn && console.warn('Select2: The `data-select2-tags` attribute has been changed to use the `data-data` and `data-tags="true"` attributes and will be removed in future versions of Select2.'), i3.StoreData(t5[0], "data", i3.GetData(t5[0], "select2Tags")), i3.StoreData(t5[0], "tags", true)), i3.GetData(t5[0], "ajaxUrl") && (this.options.debug && window.console && console.warn && console.warn("Select2: The `data-ajax-url` attribute has been changed to `data-ajax--url` and support for the old attribute will be removed in future versions of Select2."), t5.attr("ajax--url", i3.GetData(t5[0], "ajaxUrl")), i3.StoreData(t5[0], "ajax-Url", i3.GetData(t5[0], "ajaxUrl")));
              var a4 = {};
              function r3(t6, e6) {
                return e6.toUpperCase();
              }
              for (var o2 = 0; o2 < t5[0].attributes.length; o2++) {
                var s2 = t5[0].attributes[o2].name, l2 = "data-";
                if (s2.substr(0, l2.length) == l2) {
                  var c2 = s2.substring(l2.length), d2 = i3.GetData(t5[0], c2);
                  a4[c2.replace(/-([a-z])/g, r3)] = d2;
                }
              }
              e5.fn.jquery && e5.fn.jquery.substr(0, 2) == "1." && t5[0].dataset && (a4 = e5.extend(true, {}, t5[0].dataset, a4));
              var u2 = e5.extend(true, {}, i3.GetData(t5[0]), a4);
              for (var h2 in u2 = i3._convertData(u2))
                -1 < e5.inArray(h2, n6) || (e5.isPlainObject(this.options[h2]) ? e5.extend(this.options[h2], u2[h2]) : this.options[h2] = u2[h2]);
              return this;
            }, a3.prototype.get = function(t5) {
              return this.options[t5];
            }, a3.prototype.set = function(t5, e6) {
              this.options[t5] = e6;
            }, a3;
          }), e4.define("select2/core", ["jquery", "./options", "./utils", "./keys"], function(t4, e5, n5, i3) {
            var a3 = function(t5, i4) {
              n5.GetData(t5[0], "select2") != null && n5.GetData(t5[0], "select2").destroy(), this.$element = t5, this.id = this._generateId(t5), i4 = i4 || {}, this.options = new e5(i4, t5), a3.__super__.constructor.call(this);
              var r3 = t5.attr("tabindex") || 0;
              n5.StoreData(t5[0], "old-tabindex", r3), t5.attr("tabindex", "-1");
              var o2 = this.options.get("dataAdapter");
              this.dataAdapter = new o2(t5, this.options);
              var s2 = this.render();
              this._placeContainer(s2);
              var l2 = this.options.get("selectionAdapter");
              this.selection = new l2(t5, this.options), this.$selection = this.selection.render(), this.selection.position(this.$selection, s2);
              var c2 = this.options.get("dropdownAdapter");
              this.dropdown = new c2(t5, this.options), this.$dropdown = this.dropdown.render(), this.dropdown.position(this.$dropdown, s2);
              var d2 = this.options.get("resultsAdapter");
              this.results = new d2(t5, this.options, this.dataAdapter), this.$results = this.results.render(), this.results.position(this.$results, this.$dropdown);
              var u2 = this;
              this._bindAdapters(), this._registerDomEvents(), this._registerDataEvents(), this._registerSelectionEvents(), this._registerDropdownEvents(), this._registerResultsEvents(), this._registerEvents(), this.dataAdapter.current(function(t6) {
                u2.trigger("selection:update", { data: t6 });
              }), t5.addClass("select2-hidden-accessible"), t5.attr("aria-hidden", "true"), this._syncAttributes(), n5.StoreData(t5[0], "select2", this), t5.data("select2", this);
            };
            return n5.Extend(a3, n5.Observable), a3.prototype._generateId = function(t5) {
              return "select2-" + (t5.attr("id") != null ? t5.attr("id") : t5.attr("name") != null ? t5.attr("name") + "-" + n5.generateChars(2) : n5.generateChars(4)).replace(/(:|\.|\[|\]|,)/g, "");
            }, a3.prototype._placeContainer = function(t5) {
              t5.insertAfter(this.$element);
              var e6 = this._resolveWidth(this.$element, this.options.get("width"));
              e6 != null && t5.css("width", e6);
            }, a3.prototype._resolveWidth = function(t5, e6) {
              var n6 = /^width:(([-+]?([0-9]*\.)?[0-9]+)(px|em|ex|%|in|cm|mm|pt|pc))/i;
              if (e6 == "resolve") {
                var i4 = this._resolveWidth(t5, "style");
                return i4 != null ? i4 : this._resolveWidth(t5, "element");
              }
              if (e6 == "element") {
                var a4 = t5.outerWidth(false);
                return a4 <= 0 ? "auto" : a4 + "px";
              }
              if (e6 != "style")
                return e6 != "computedstyle" ? e6 : window.getComputedStyle(t5[0]).width;
              var r3 = t5.attr("style");
              if (typeof r3 != "string")
                return null;
              for (var o2 = r3.split(";"), s2 = 0, l2 = o2.length; s2 < l2; s2 += 1) {
                var c2 = o2[s2].replace(/\s/g, "").match(n6);
                if (c2 !== null && 1 <= c2.length)
                  return c2[1];
              }
              return null;
            }, a3.prototype._bindAdapters = function() {
              this.dataAdapter.bind(this, this.$container), this.selection.bind(this, this.$container), this.dropdown.bind(this, this.$container), this.results.bind(this, this.$container);
            }, a3.prototype._registerDomEvents = function() {
              var t5 = this;
              this.$element.on("change.select2", function() {
                t5.dataAdapter.current(function(e7) {
                  t5.trigger("selection:update", { data: e7 });
                });
              }), this.$element.on("focus.select2", function(e7) {
                t5.trigger("focus", e7);
              }), this._syncA = n5.bind(this._syncAttributes, this), this._syncS = n5.bind(this._syncSubtree, this), this.$element[0].attachEvent && this.$element[0].attachEvent("onpropertychange", this._syncA);
              var e6 = window.MutationObserver || window.WebKitMutationObserver || window.MozMutationObserver;
              e6 != null ? (this._observer = new e6(function(e7) {
                t5._syncA(), t5._syncS(null, e7);
              }), this._observer.observe(this.$element[0], { attributes: true, childList: true, subtree: false })) : this.$element[0].addEventListener && (this.$element[0].addEventListener("DOMAttrModified", t5._syncA, false), this.$element[0].addEventListener("DOMNodeInserted", t5._syncS, false), this.$element[0].addEventListener("DOMNodeRemoved", t5._syncS, false));
            }, a3.prototype._registerDataEvents = function() {
              var t5 = this;
              this.dataAdapter.on("*", function(e6, n6) {
                t5.trigger(e6, n6);
              });
            }, a3.prototype._registerSelectionEvents = function() {
              var e6 = this, n6 = ["toggle", "focus"];
              this.selection.on("toggle", function() {
                e6.toggleDropdown();
              }), this.selection.on("focus", function(t5) {
                e6.focus(t5);
              }), this.selection.on("*", function(i4, a4) {
                t4.inArray(i4, n6) === -1 && e6.trigger(i4, a4);
              });
            }, a3.prototype._registerDropdownEvents = function() {
              var t5 = this;
              this.dropdown.on("*", function(e6, n6) {
                t5.trigger(e6, n6);
              });
            }, a3.prototype._registerResultsEvents = function() {
              var t5 = this;
              this.results.on("*", function(e6, n6) {
                t5.trigger(e6, n6);
              });
            }, a3.prototype._registerEvents = function() {
              var t5 = this;
              this.on("open", function() {
                t5.$container.addClass("select2-container--open");
              }), this.on("close", function() {
                t5.$container.removeClass("select2-container--open");
              }), this.on("enable", function() {
                t5.$container.removeClass("select2-container--disabled");
              }), this.on("disable", function() {
                t5.$container.addClass("select2-container--disabled");
              }), this.on("blur", function() {
                t5.$container.removeClass("select2-container--focus");
              }), this.on("query", function(e6) {
                t5.isOpen() || t5.trigger("open", {}), this.dataAdapter.query(e6, function(n6) {
                  t5.trigger("results:all", { data: n6, query: e6 });
                });
              }), this.on("query:append", function(e6) {
                this.dataAdapter.query(e6, function(n6) {
                  t5.trigger("results:append", { data: n6, query: e6 });
                });
              }), this.on("keypress", function(e6) {
                var n6 = e6.which;
                t5.isOpen() ? n6 === i3.ESC || n6 === i3.TAB || n6 === i3.UP && e6.altKey ? (t5.close(e6), e6.preventDefault()) : n6 === i3.ENTER ? (t5.trigger("results:select", {}), e6.preventDefault()) : n6 === i3.SPACE && e6.ctrlKey ? (t5.trigger("results:toggle", {}), e6.preventDefault()) : n6 === i3.UP ? (t5.trigger("results:previous", {}), e6.preventDefault()) : n6 === i3.DOWN && (t5.trigger("results:next", {}), e6.preventDefault()) : (n6 === i3.ENTER || n6 === i3.SPACE || n6 === i3.DOWN && e6.altKey) && (t5.open(), e6.preventDefault());
              });
            }, a3.prototype._syncAttributes = function() {
              this.options.set("disabled", this.$element.prop("disabled")), this.isDisabled() ? (this.isOpen() && this.close(), this.trigger("disable", {})) : this.trigger("enable", {});
            }, a3.prototype._isChangeMutation = function(e6, n6) {
              var i4 = false, a4 = this;
              if (!e6 || !e6.target || e6.target.nodeName === "OPTION" || e6.target.nodeName === "OPTGROUP") {
                if (n6)
                  if (n6.addedNodes && 0 < n6.addedNodes.length)
                    for (var r3 = 0; r3 < n6.addedNodes.length; r3++)
                      n6.addedNodes[r3].selected && (i4 = true);
                  else
                    n6.removedNodes && 0 < n6.removedNodes.length ? i4 = true : t4.isArray(n6) && t4.each(n6, function(t5, e7) {
                      if (a4._isChangeMutation(t5, e7))
                        return !(i4 = true);
                    });
                else
                  i4 = true;
                return i4;
              }
            }, a3.prototype._syncSubtree = function(t5, e6) {
              var n6 = this._isChangeMutation(t5, e6), i4 = this;
              n6 && this.dataAdapter.current(function(t6) {
                i4.trigger("selection:update", { data: t6 });
              });
            }, a3.prototype.trigger = function(t5, e6) {
              var n6 = a3.__super__.trigger, i4 = { open: "opening", close: "closing", select: "selecting", unselect: "unselecting", clear: "clearing" };
              if (e6 === void 0 && (e6 = {}), t5 in i4) {
                var r3 = i4[t5], o2 = { prevented: false, name: t5, args: e6 };
                if (n6.call(this, r3, o2), o2.prevented)
                  return void (e6.prevented = true);
              }
              n6.call(this, t5, e6);
            }, a3.prototype.toggleDropdown = function() {
              this.isDisabled() || (this.isOpen() ? this.close() : this.open());
            }, a3.prototype.open = function() {
              this.isOpen() || this.isDisabled() || this.trigger("query", {});
            }, a3.prototype.close = function(t5) {
              this.isOpen() && this.trigger("close", { originalEvent: t5 });
            }, a3.prototype.isEnabled = function() {
              return !this.isDisabled();
            }, a3.prototype.isDisabled = function() {
              return this.options.get("disabled");
            }, a3.prototype.isOpen = function() {
              return this.$container.hasClass("select2-container--open");
            }, a3.prototype.hasFocus = function() {
              return this.$container.hasClass("select2-container--focus");
            }, a3.prototype.focus = function(t5) {
              this.hasFocus() || (this.$container.addClass("select2-container--focus"), this.trigger("focus", {}));
            }, a3.prototype.enable = function(t5) {
              this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("enable")` method has been deprecated and will be removed in later Select2 versions. Use $element.prop("disabled") instead.'), t5 != null && t5.length !== 0 || (t5 = [true]);
              var e6 = !t5[0];
              this.$element.prop("disabled", e6);
            }, a3.prototype.data = function() {
              this.options.get("debug") && 0 < arguments.length && window.console && console.warn && console.warn('Select2: Data can no longer be set using `select2("data")`. You should consider setting the value instead using `$element.val()`.');
              var t5 = [];
              return this.dataAdapter.current(function(e6) {
                t5 = e6;
              }), t5;
            }, a3.prototype.val = function(e6) {
              if (this.options.get("debug") && window.console && console.warn && console.warn('Select2: The `select2("val")` method has been deprecated and will be removed in later Select2 versions. Use $element.val() instead.'), e6 == null || e6.length === 0)
                return this.$element.val();
              var n6 = e6[0];
              t4.isArray(n6) && (n6 = t4.map(n6, function(t5) {
                return t5.toString();
              })), this.$element.val(n6).trigger("input").trigger("change");
            }, a3.prototype.destroy = function() {
              this.$container.remove(), this.$element[0].detachEvent && this.$element[0].detachEvent("onpropertychange", this._syncA), this._observer != null ? (this._observer.disconnect(), this._observer = null) : this.$element[0].removeEventListener && (this.$element[0].removeEventListener("DOMAttrModified", this._syncA, false), this.$element[0].removeEventListener("DOMNodeInserted", this._syncS, false), this.$element[0].removeEventListener("DOMNodeRemoved", this._syncS, false)), this._syncA = null, this._syncS = null, this.$element.off(".select2"), this.$element.attr("tabindex", n5.GetData(this.$element[0], "old-tabindex")), this.$element.removeClass("select2-hidden-accessible"), this.$element.attr("aria-hidden", "false"), n5.RemoveData(this.$element[0]), this.$element.removeData("select2"), this.dataAdapter.destroy(), this.selection.destroy(), this.dropdown.destroy(), this.results.destroy(), this.dataAdapter = null, this.selection = null, this.dropdown = null, this.results = null;
            }, a3.prototype.render = function() {
              var e6 = t4('<span class="select2 select2-container"><span class="selection"></span><span class="dropdown-wrapper" aria-hidden="true"></span></span>');
              return e6.attr("dir", this.options.get("dir")), this.$container = e6, this.$container.addClass("select2-container--" + this.options.get("theme")), n5.StoreData(e6[0], "element", this.$element), e6;
            }, a3;
          }), e4.define("jquery-mousewheel", ["jquery"], function(t4) {
            return t4;
          }), e4.define("jquery.select2", ["jquery", "jquery-mousewheel", "./select2/core", "./select2/defaults", "./select2/utils"], function(t4, e5, n5, i3, a3) {
            if (t4.fn.select2 == null) {
              var r3 = ["open", "close", "destroy"];
              t4.fn.select2 = function(e6) {
                if (typeof (e6 = e6 || {}) == "object")
                  return this.each(function() {
                    var i5 = t4.extend(true, {}, e6);
                    new n5(t4(this), i5);
                  }), this;
                if (typeof e6 != "string")
                  throw new Error("Invalid arguments for Select2: " + e6);
                var i4, o2 = Array.prototype.slice.call(arguments, 1);
                return this.each(function() {
                  var t5 = a3.GetData(this, "select2");
                  t5 == null && window.console && console.error && console.error("The select2('" + e6 + "') method was called on an element that is not using Select2."), i4 = t5[e6].apply(t5, o2);
                }), -1 < t4.inArray(e6, r3) ? this : i4;
              };
            }
            return t4.fn.select2.defaults == null && (t4.fn.select2.defaults = i3), n5;
          }), { define: e4.define, require: e4.require };
        }(), n3 = e3.require("jquery.select2");
        return t3.fn.select2.amd = e3, n3;
      }, (r = typeof i == "function" ? i.apply(e2, a) : i) === void 0 || (t2.exports = r);
    }, 5055: function(t2, e2, n2) {
      var i = n2(6282), a = n2(180);
      t2.exports = function(t3) {
        if (i(t3))
          return t3;
        throw TypeError(a(t3) + " is not a function");
      };
    }, 2004: function(t2, e2, n2) {
      var i = n2(6282);
      t2.exports = function(t3) {
        if (typeof t3 == "object" || i(t3))
          return t3;
        throw TypeError("Can't set " + String(t3) + " as a prototype");
      };
    }, 9256: function(t2, e2, n2) {
      var i = n2(8149), a = n2(1525), r = n2(9168), o = i("unscopables"), s = Array.prototype;
      s[o] == null && r.f(s, o, { configurable: true, value: a(null) }), t2.exports = function(t3) {
        s[o][t3] = true;
      };
    }, 3615: function(t2, e2, n2) {
      "use strict";
      var i = n2(7321).charAt;
      t2.exports = function(t3, e3, n3) {
        return e3 + (n3 ? i(t3, e3).length : 1);
      };
    }, 3046: function(t2) {
      t2.exports = function(t3, e2, n2) {
        if (t3 instanceof e2)
          return t3;
        throw TypeError("Incorrect " + (n2 ? n2 + " " : "") + "invocation");
      };
    }, 1474: function(t2, e2, n2) {
      var i = n2(5896);
      t2.exports = function(t3) {
        if (i(t3))
          return t3;
        throw TypeError(String(t3) + " is not an object");
      };
    }, 1269: function(t2, e2, n2) {
      "use strict";
      var i = n2(528).forEach, a = n2(1923)("forEach");
      t2.exports = a ? [].forEach : function(t3) {
        return i(this, t3, arguments.length > 1 ? arguments[1] : void 0);
      };
    }, 5675: function(t2, e2, n2) {
      var i = n2(3206), a = n2(3917), r = n2(9623), o = function(t3) {
        return function(e3, n3, o2) {
          var s, l = i(e3), c = a(l.length), d = r(o2, c);
          if (t3 && n3 != n3) {
            for (; c > d; )
              if ((s = l[d++]) != s)
                return true;
          } else
            for (; c > d; d++)
              if ((t3 || d in l) && l[d] === n3)
                return t3 || d || 0;
          return !t3 && -1;
        };
      };
      t2.exports = { includes: o(true), indexOf: o(false) };
    }, 528: function(t2, e2, n2) {
      var i = n2(1098), a = n2(7530), r = n2(9473), o = n2(3917), s = n2(2768), l = [].push, c = function(t3) {
        var e3 = t3 == 1, n3 = t3 == 2, c2 = t3 == 3, d = t3 == 4, u = t3 == 6, h = t3 == 7, p = t3 == 5 || u;
        return function(f, g, m, v) {
          for (var b, y, x = r(f), _ = a(x), w = i(g, m, 3), S = o(_.length), C = 0, k = v || s, D = e3 ? k(f, S) : n3 || h ? k(f, 0) : void 0; S > C; C++)
            if ((p || C in _) && (y = w(b = _[C], C, x), t3))
              if (e3)
                D[C] = y;
              else if (y)
                switch (t3) {
                  case 3:
                    return true;
                  case 5:
                    return b;
                  case 6:
                    return C;
                  case 2:
                    l.call(D, b);
                }
              else
                switch (t3) {
                  case 4:
                    return false;
                  case 7:
                    l.call(D, b);
                }
          return u ? -1 : c2 || d ? d : D;
        };
      };
      t2.exports = { forEach: c(0), map: c(1), filter: c(2), some: c(3), every: c(4), find: c(5), findIndex: c(6), filterReject: c(7) };
    }, 4820: function(t2, e2, n2) {
      var i = n2(6183), a = n2(8149), r = n2(4324), o = a("species");
      t2.exports = function(t3) {
        return r >= 51 || !i(function() {
          var e3 = [];
          return (e3.constructor = {})[o] = function() {
            return { foo: 1 };
          }, e3[t3](Boolean).foo !== 1;
        });
      };
    }, 1923: function(t2, e2, n2) {
      "use strict";
      var i = n2(6183);
      t2.exports = function(t3, e3) {
        var n3 = [][t3];
        return !!n3 && i(function() {
          n3.call(null, e3 || function() {
            throw 1;
          }, 1);
        });
      };
    }, 6589: function(t2, e2, n2) {
      var i = n2(5055), a = n2(9473), r = n2(7530), o = n2(3917), s = function(t3) {
        return function(e3, n3, s2, l) {
          i(n3);
          var c = a(e3), d = r(c), u = o(c.length), h = t3 ? u - 1 : 0, p = t3 ? -1 : 1;
          if (s2 < 2)
            for (; ; ) {
              if (h in d) {
                l = d[h], h += p;
                break;
              }
              if (h += p, t3 ? h < 0 : u <= h)
                throw TypeError("Reduce of empty array with no initial value");
            }
          for (; t3 ? h >= 0 : u > h; h += p)
            h in d && (l = n3(l, d[h], h, c));
          return l;
        };
      };
      t2.exports = { left: s(false), right: s(true) };
    }, 9882: function(t2, e2, n2) {
      var i = n2(7931), a = n2(2240), r = n2(5896), o = n2(8149)("species");
      t2.exports = function(t3) {
        var e3;
        return i(t3) && (e3 = t3.constructor, (a(e3) && (e3 === Array || i(e3.prototype)) || r(e3) && (e3 = e3[o]) === null) && (e3 = void 0)), e3 === void 0 ? Array : e3;
      };
    }, 2768: function(t2, e2, n2) {
      var i = n2(9882);
      t2.exports = function(t3, e3) {
        return new (i(t3))(e3 === 0 ? 0 : e3);
      };
    }, 1751: function(t2, e2, n2) {
      var i = n2(8149)("iterator"), a = false;
      try {
        var r = 0, o = { next: function() {
          return { done: !!r++ };
        }, return: function() {
          a = true;
        } };
        o[i] = function() {
          return this;
        }, Array.from(o, function() {
          throw 2;
        });
      } catch (t3) {
      }
      t2.exports = function(t3, e3) {
        if (!e3 && !a)
          return false;
        var n3 = false;
        try {
          var r2 = {};
          r2[i] = function() {
            return { next: function() {
              return { done: n3 = true };
            } };
          }, t3(r2);
        } catch (t4) {
        }
        return n3;
      };
    }, 1510: function(t2) {
      var e2 = {}.toString;
      t2.exports = function(t3) {
        return e2.call(t3).slice(8, -1);
      };
    }, 9225: function(t2, e2, n2) {
      var i = n2(4823), a = n2(6282), r = n2(1510), o = n2(8149)("toStringTag"), s = r(function() {
        return arguments;
      }()) == "Arguments";
      t2.exports = i ? r : function(t3) {
        var e3, n3, i2;
        return t3 === void 0 ? "Undefined" : t3 === null ? "Null" : typeof (n3 = function(t4, e4) {
          try {
            return t4[e4];
          } catch (t5) {
          }
        }(e3 = Object(t3), o)) == "string" ? n3 : s ? r(e3) : (i2 = r(e3)) == "Object" && a(e3.callee) ? "Arguments" : i2;
      };
    }, 7790: function(t2, e2, n2) {
      "use strict";
      var i = n2(9573), a = n2(6582).getWeakData, r = n2(1474), o = n2(5896), s = n2(3046), l = n2(1518), c = n2(528), d = n2(3520), u = n2(1030), h = u.set, p = u.getterFor, f = c.find, g = c.findIndex, m = 0, v = function(t3) {
        return t3.frozen || (t3.frozen = new b());
      }, b = function() {
        this.entries = [];
      }, y = function(t3, e3) {
        return f(t3.entries, function(t4) {
          return t4[0] === e3;
        });
      };
      b.prototype = { get: function(t3) {
        var e3 = y(this, t3);
        if (e3)
          return e3[1];
      }, has: function(t3) {
        return !!y(this, t3);
      }, set: function(t3, e3) {
        var n3 = y(this, t3);
        n3 ? n3[1] = e3 : this.entries.push([t3, e3]);
      }, delete: function(t3) {
        var e3 = g(this.entries, function(e4) {
          return e4[0] === t3;
        });
        return ~e3 && this.entries.splice(e3, 1), !!~e3;
      } }, t2.exports = { getConstructor: function(t3, e3, n3, c2) {
        var u2 = t3(function(t4, i2) {
          s(t4, u2, e3), h(t4, { type: e3, id: m++, frozen: void 0 }), i2 != null && l(i2, t4[c2], { that: t4, AS_ENTRIES: n3 });
        }), f2 = p(e3), g2 = function(t4, e4, n4) {
          var i2 = f2(t4), o2 = a(r(e4), true);
          return o2 === true ? v(i2).set(e4, n4) : o2[i2.id] = n4, t4;
        };
        return i(u2.prototype, { delete: function(t4) {
          var e4 = f2(this);
          if (!o(t4))
            return false;
          var n4 = a(t4);
          return n4 === true ? v(e4).delete(t4) : n4 && d(n4, e4.id) && delete n4[e4.id];
        }, has: function(t4) {
          var e4 = f2(this);
          if (!o(t4))
            return false;
          var n4 = a(t4);
          return n4 === true ? v(e4).has(t4) : n4 && d(n4, e4.id);
        } }), i(u2.prototype, n3 ? { get: function(t4) {
          var e4 = f2(this);
          if (o(t4)) {
            var n4 = a(t4);
            return n4 === true ? v(e4).get(t4) : n4 ? n4[e4.id] : void 0;
          }
        }, set: function(t4, e4) {
          return g2(this, t4, e4);
        } } : { add: function(t4) {
          return g2(this, t4, true);
        } }), u2;
      } };
    }, 6645: function(t2, e2, n2) {
      "use strict";
      var i = n2(4761), a = n2(8454), r = n2(1949), o = n2(3971), s = n2(6582), l = n2(1518), c = n2(3046), d = n2(6282), u = n2(5896), h = n2(6183), p = n2(1751), f = n2(820), g = n2(7770);
      t2.exports = function(t3, e3, n3) {
        var m = t3.indexOf("Map") !== -1, v = t3.indexOf("Weak") !== -1, b = m ? "set" : "add", y = a[t3], x = y && y.prototype, _ = y, w = {}, S = function(t4) {
          var e4 = x[t4];
          o(x, t4, t4 == "add" ? function(t5) {
            return e4.call(this, t5 === 0 ? 0 : t5), this;
          } : t4 == "delete" ? function(t5) {
            return !(v && !u(t5)) && e4.call(this, t5 === 0 ? 0 : t5);
          } : t4 == "get" ? function(t5) {
            return v && !u(t5) ? void 0 : e4.call(this, t5 === 0 ? 0 : t5);
          } : t4 == "has" ? function(t5) {
            return !(v && !u(t5)) && e4.call(this, t5 === 0 ? 0 : t5);
          } : function(t5, n4) {
            return e4.call(this, t5 === 0 ? 0 : t5, n4), this;
          });
        };
        if (r(t3, !d(y) || !(v || x.forEach && !h(function() {
          new y().entries().next();
        }))))
          _ = n3.getConstructor(e3, t3, m, b), s.enable();
        else if (r(t3, true)) {
          var C = new _(), k = C[b](v ? {} : -0, 1) != C, D = h(function() {
            C.has(1);
          }), T = p(function(t4) {
            new y(t4);
          }), E = !v && h(function() {
            for (var t4 = new y(), e4 = 5; e4--; )
              t4[b](e4, e4);
            return !t4.has(-0);
          });
          T || ((_ = e3(function(e4, n4) {
            c(e4, _, t3);
            var i2 = g(new y(), e4, _);
            return n4 != null && l(n4, i2[b], { that: i2, AS_ENTRIES: m }), i2;
          })).prototype = x, x.constructor = _), (D || E) && (S("delete"), S("has"), m && S("get")), (E || k) && S(b), v && x.clear && delete x.clear;
        }
        return w[t3] = _, i({ global: true, forced: _ != y }, w), f(_, t3), v || n3.setStrong(_, t3, m), _;
      };
    }, 882: function(t2, e2, n2) {
      var i = n2(3520), a = n2(1441), r = n2(5663), o = n2(9168);
      t2.exports = function(t3, e3) {
        for (var n3 = a(e3), s = o.f, l = r.f, c = 0; c < n3.length; c++) {
          var d = n3[c];
          i(t3, d) || s(t3, d, l(e3, d));
        }
      };
    }, 7401: function(t2, e2, n2) {
      var i = n2(6183);
      t2.exports = !i(function() {
        function t3() {
        }
        return t3.prototype.constructor = null, Object.getPrototypeOf(new t3()) !== t3.prototype;
      });
    }, 2538: function(t2, e2, n2) {
      "use strict";
      var i = n2(6524).IteratorPrototype, a = n2(1525), r = n2(9273), o = n2(820), s = n2(6126), l = function() {
        return this;
      };
      t2.exports = function(t3, e3, n3) {
        var c = e3 + " Iterator";
        return t3.prototype = a(i, { next: r(1, n3) }), o(t3, c, false, true), s[c] = l, t3;
      };
    }, 1501: function(t2, e2, n2) {
      var i = n2(723), a = n2(9168), r = n2(9273);
      t2.exports = i ? function(t3, e3, n3) {
        return a.f(t3, e3, r(1, n3));
      } : function(t3, e3, n3) {
        return t3[e3] = n3, t3;
      };
    }, 9273: function(t2) {
      t2.exports = function(t3, e2) {
        return { enumerable: !(1 & t3), configurable: !(2 & t3), writable: !(4 & t3), value: e2 };
      };
    }, 7583: function(t2, e2, n2) {
      "use strict";
      var i = n2(4761), a = n2(8977), r = n2(4530), o = n2(6282), s = n2(2538), l = n2(4204), c = n2(5900), d = n2(820), u = n2(1501), h = n2(3971), p = n2(8149), f = n2(6126), g = n2(6524), m = r.PROPER, v = r.CONFIGURABLE, b = g.IteratorPrototype, y = g.BUGGY_SAFARI_ITERATORS, x = p("iterator"), _ = "keys", w = "values", S = "entries", C = function() {
        return this;
      };
      t2.exports = function(t3, e3, n3, r2, p2, g2, k) {
        s(n3, e3, r2);
        var D, T, E, A = function(t4) {
          if (t4 === p2 && O)
            return O;
          if (!y && t4 in R)
            return R[t4];
          switch (t4) {
            case _:
            case w:
            case S:
              return function() {
                return new n3(this, t4);
              };
          }
          return function() {
            return new n3(this);
          };
        }, I = e3 + " Iterator", M = false, R = t3.prototype, P = R[x] || R["@@iterator"] || p2 && R[p2], O = !y && P || A(p2), j = e3 == "Array" && R.entries || P;
        if (j && (D = l(j.call(new t3()))) !== Object.prototype && D.next && (a || l(D) === b || (c ? c(D, b) : o(D[x]) || h(D, x, C)), d(D, I, true, true), a && (f[I] = C)), m && p2 == w && P && P.name !== w && (!a && v ? u(R, "name", w) : (M = true, O = function() {
          return P.call(this);
        })), p2)
          if (T = { values: A(w), keys: g2 ? O : A(_), entries: A(S) }, k)
            for (E in T)
              (y || M || !(E in R)) && h(R, E, T[E]);
          else
            i({ target: e3, proto: true, forced: y || M }, T);
        return a && !k || R[x] === O || h(R, x, O, { name: p2 }), f[e3] = O, T;
      };
    }, 723: function(t2, e2, n2) {
      var i = n2(6183);
      t2.exports = !i(function() {
        return Object.defineProperty({}, 1, { get: function() {
          return 7;
        } })[1] != 7;
      });
    }, 7282: function(t2, e2, n2) {
      var i = n2(8454), a = n2(5896), r = i.document, o = a(r) && a(r.createElement);
      t2.exports = function(t3) {
        return o ? r.createElement(t3) : {};
      };
    }, 6181: function(t2) {
      t2.exports = { CSSRuleList: 0, CSSStyleDeclaration: 0, CSSValueList: 0, ClientRectList: 0, DOMRectList: 0, DOMStringList: 0, DOMTokenList: 1, DataTransferItemList: 0, FileList: 0, HTMLAllCollection: 0, HTMLCollection: 0, HTMLFormElement: 0, HTMLSelectElement: 0, MediaList: 0, MimeTypeArray: 0, NamedNodeMap: 0, NodeList: 1, PaintRequestList: 0, Plugin: 0, PluginArray: 0, SVGLengthList: 0, SVGNumberList: 0, SVGPathSegList: 0, SVGPointList: 0, SVGStringList: 0, SVGTransformList: 0, SourceBufferList: 0, StyleSheetList: 0, TextTrackCueList: 0, TextTrackList: 0, TouchList: 0 };
    }, 2387: function(t2, e2, n2) {
      var i = n2(7282)("span").classList, a = i && i.constructor && i.constructor.prototype;
      t2.exports = a === Object.prototype ? void 0 : a;
    }, 7594: function(t2, e2, n2) {
      var i = n2(1510), a = n2(8454);
      t2.exports = i(a.process) == "process";
    }, 2543: function(t2, e2, n2) {
      var i = n2(4991);
      t2.exports = i("navigator", "userAgent") || "";
    }, 4324: function(t2, e2, n2) {
      var i, a, r = n2(8454), o = n2(2543), s = r.process, l = r.Deno, c = s && s.versions || l && l.version, d = c && c.v8;
      d ? a = (i = d.split("."))[0] < 4 ? 1 : i[0] + i[1] : o && (!(i = o.match(/Edge\/(\d+)/)) || i[1] >= 74) && (i = o.match(/Chrome\/(\d+)/)) && (a = i[1]), t2.exports = a && +a;
    }, 8409: function(t2) {
      t2.exports = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
    }, 4761: function(t2, e2, n2) {
      var i = n2(8454), a = n2(5663).f, r = n2(1501), o = n2(3971), s = n2(7852), l = n2(882), c = n2(1949);
      t2.exports = function(t3, e3) {
        var n3, d, u, h, p, f = t3.target, g = t3.global, m = t3.stat;
        if (n3 = g ? i : m ? i[f] || s(f, {}) : (i[f] || {}).prototype)
          for (d in e3) {
            if (h = e3[d], u = t3.noTargetGet ? (p = a(n3, d)) && p.value : n3[d], !c(g ? d : f + (m ? "." : "#") + d, t3.forced) && u !== void 0) {
              if (typeof h == typeof u)
                continue;
              l(h, u);
            }
            (t3.sham || u && u.sham) && r(h, "sham", true), o(n3, d, h, t3);
          }
      };
    }, 6183: function(t2) {
      t2.exports = function(t3) {
        try {
          return !!t3();
        } catch (t4) {
          return true;
        }
      };
    }, 9696: function(t2, e2, n2) {
      "use strict";
      n2(9989);
      var i = n2(3971), a = n2(5510), r = n2(6183), o = n2(8149), s = n2(1501), l = o("species"), c = RegExp.prototype;
      t2.exports = function(t3, e3, n3, d) {
        var u = o(t3), h = !r(function() {
          var e4 = {};
          return e4[u] = function() {
            return 7;
          }, ""[t3](e4) != 7;
        }), p = h && !r(function() {
          var e4 = false, n4 = /a/;
          return t3 === "split" && ((n4 = {}).constructor = {}, n4.constructor[l] = function() {
            return n4;
          }, n4.flags = "", n4[u] = /./[u]), n4.exec = function() {
            return e4 = true, null;
          }, n4[u](""), !e4;
        });
        if (!h || !p || n3) {
          var f = /./[u], g = e3(u, ""[t3], function(t4, e4, n4, i2, r2) {
            var o2 = e4.exec;
            return o2 === a || o2 === c.exec ? h && !r2 ? { done: true, value: f.call(e4, n4, i2) } : { done: true, value: t4.call(n4, e4, i2) } : { done: false };
          });
          i(String.prototype, t3, g[0]), i(c, u, g[1]);
        }
        d && s(c[u], "sham", true);
      };
    }, 3116: function(t2, e2, n2) {
      var i = n2(6183);
      t2.exports = !i(function() {
        return Object.isExtensible(Object.preventExtensions({}));
      });
    }, 1098: function(t2, e2, n2) {
      var i = n2(5055);
      t2.exports = function(t3, e3, n3) {
        if (i(t3), e3 === void 0)
          return t3;
        switch (n3) {
          case 0:
            return function() {
              return t3.call(e3);
            };
          case 1:
            return function(n4) {
              return t3.call(e3, n4);
            };
          case 2:
            return function(n4, i2) {
              return t3.call(e3, n4, i2);
            };
          case 3:
            return function(n4, i2, a) {
              return t3.call(e3, n4, i2, a);
            };
        }
        return function() {
          return t3.apply(e3, arguments);
        };
      };
    }, 4530: function(t2, e2, n2) {
      var i = n2(723), a = n2(3520), r = Function.prototype, o = i && Object.getOwnPropertyDescriptor, s = a(r, "name"), l = s && function() {
      }.name === "something", c = s && (!i || i && o(r, "name").configurable);
      t2.exports = { EXISTS: s, PROPER: l, CONFIGURABLE: c };
    }, 4991: function(t2, e2, n2) {
      var i = n2(8454), a = n2(6282), r = function(t3) {
        return a(t3) ? t3 : void 0;
      };
      t2.exports = function(t3, e3) {
        return arguments.length < 2 ? r(i[t3]) : i[t3] && i[t3][e3];
      };
    }, 650: function(t2, e2, n2) {
      var i = n2(9225), a = n2(9827), r = n2(6126), o = n2(8149)("iterator");
      t2.exports = function(t3) {
        if (t3 != null)
          return a(t3, o) || a(t3, "@@iterator") || r[i(t3)];
      };
    }, 7755: function(t2, e2, n2) {
      var i = n2(5055), a = n2(1474), r = n2(650);
      t2.exports = function(t3, e3) {
        var n3 = arguments.length < 2 ? r(t3) : e3;
        if (i(n3))
          return a(n3.call(t3));
        throw TypeError(String(t3) + " is not iterable");
      };
    }, 9827: function(t2, e2, n2) {
      var i = n2(5055);
      t2.exports = function(t3, e3) {
        var n3 = t3[e3];
        return n3 == null ? void 0 : i(n3);
      };
    }, 4742: function(t2, e2, n2) {
      var i = n2(9473), a = Math.floor, r = "".replace, o = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, s = /\$([$&'`]|\d{1,2})/g;
      t2.exports = function(t3, e3, n3, l, c, d) {
        var u = n3 + t3.length, h = l.length, p = s;
        return c !== void 0 && (c = i(c), p = o), r.call(d, p, function(i2, r2) {
          var o2;
          switch (r2.charAt(0)) {
            case "$":
              return "$";
            case "&":
              return t3;
            case "`":
              return e3.slice(0, n3);
            case "'":
              return e3.slice(u);
            case "<":
              o2 = c[r2.slice(1, -1)];
              break;
            default:
              var s2 = +r2;
              if (s2 === 0)
                return i2;
              if (s2 > h) {
                var d2 = a(s2 / 10);
                return d2 === 0 ? i2 : d2 <= h ? l[d2 - 1] === void 0 ? r2.charAt(1) : l[d2 - 1] + r2.charAt(1) : i2;
              }
              o2 = l[s2 - 1];
          }
          return o2 === void 0 ? "" : o2;
        });
      };
    }, 8454: function(t2, e2, n2) {
      var i = function(t3) {
        return t3 && t3.Math == Math && t3;
      };
      t2.exports = i(typeof globalThis == "object" && globalThis) || i(typeof window == "object" && window) || i(typeof self == "object" && self) || i(typeof n2.g == "object" && n2.g) || function() {
        return this;
      }() || Function("return this")();
    }, 3520: function(t2, e2, n2) {
      var i = n2(9473), a = {}.hasOwnProperty;
      t2.exports = Object.hasOwn || function(t3, e3) {
        return a.call(i(t3), e3);
      };
    }, 4377: function(t2) {
      t2.exports = {};
    }, 7461: function(t2, e2, n2) {
      var i = n2(4991);
      t2.exports = i("document", "documentElement");
    }, 4985: function(t2, e2, n2) {
      var i = n2(723), a = n2(6183), r = n2(7282);
      t2.exports = !i && !a(function() {
        return Object.defineProperty(r("div"), "a", { get: function() {
          return 7;
        } }).a != 7;
      });
    }, 7530: function(t2, e2, n2) {
      var i = n2(6183), a = n2(1510), r = "".split;
      t2.exports = i(function() {
        return !Object("z").propertyIsEnumerable(0);
      }) ? function(t3) {
        return a(t3) == "String" ? r.call(t3, "") : Object(t3);
      } : Object;
    }, 7770: function(t2, e2, n2) {
      var i = n2(6282), a = n2(5896), r = n2(5900);
      t2.exports = function(t3, e3, n3) {
        var o, s;
        return r && i(o = e3.constructor) && o !== n3 && a(s = o.prototype) && s !== n3.prototype && r(t3, s), t3;
      };
    }, 6901: function(t2, e2, n2) {
      var i = n2(6282), a = n2(2047), r = Function.toString;
      i(a.inspectSource) || (a.inspectSource = function(t3) {
        return r.call(t3);
      }), t2.exports = a.inspectSource;
    }, 6582: function(t2, e2, n2) {
      var i = n2(4761), a = n2(4377), r = n2(5896), o = n2(3520), s = n2(9168).f, l = n2(6785), c = n2(6675), d = n2(9059), u = n2(3116), h = false, p = d("meta"), f = 0, g = Object.isExtensible || function() {
        return true;
      }, m = function(t3) {
        s(t3, p, { value: { objectID: "O" + f++, weakData: {} } });
      }, v = t2.exports = { enable: function() {
        v.enable = function() {
        }, h = true;
        var t3 = l.f, e3 = [].splice, n3 = {};
        n3[p] = 1, t3(n3).length && (l.f = function(n4) {
          for (var i2 = t3(n4), a2 = 0, r2 = i2.length; a2 < r2; a2++)
            if (i2[a2] === p) {
              e3.call(i2, a2, 1);
              break;
            }
          return i2;
        }, i({ target: "Object", stat: true, forced: true }, { getOwnPropertyNames: c.f }));
      }, fastKey: function(t3, e3) {
        if (!r(t3))
          return typeof t3 == "symbol" ? t3 : (typeof t3 == "string" ? "S" : "P") + t3;
        if (!o(t3, p)) {
          if (!g(t3))
            return "F";
          if (!e3)
            return "E";
          m(t3);
        }
        return t3[p].objectID;
      }, getWeakData: function(t3, e3) {
        if (!o(t3, p)) {
          if (!g(t3))
            return true;
          if (!e3)
            return false;
          m(t3);
        }
        return t3[p].weakData;
      }, onFreeze: function(t3) {
        return u && h && g(t3) && !o(t3, p) && m(t3), t3;
      } };
      a[p] = true;
    }, 1030: function(t2, e2, n2) {
      var i, a, r, o = n2(4404), s = n2(8454), l = n2(5896), c = n2(1501), d = n2(3520), u = n2(2047), h = n2(8873), p = n2(4377), f = "Object already initialized", g = s.WeakMap;
      if (o || u.state) {
        var m = u.state || (u.state = new g()), v = m.get, b = m.has, y = m.set;
        i = function(t3, e3) {
          if (b.call(m, t3))
            throw new TypeError(f);
          return e3.facade = t3, y.call(m, t3, e3), e3;
        }, a = function(t3) {
          return v.call(m, t3) || {};
        }, r = function(t3) {
          return b.call(m, t3);
        };
      } else {
        var x = h("state");
        p[x] = true, i = function(t3, e3) {
          if (d(t3, x))
            throw new TypeError(f);
          return e3.facade = t3, c(t3, x, e3), e3;
        }, a = function(t3) {
          return d(t3, x) ? t3[x] : {};
        }, r = function(t3) {
          return d(t3, x);
        };
      }
      t2.exports = { set: i, get: a, has: r, enforce: function(t3) {
        return r(t3) ? a(t3) : i(t3, {});
      }, getterFor: function(t3) {
        return function(e3) {
          var n3;
          if (!l(e3) || (n3 = a(e3)).type !== t3)
            throw TypeError("Incompatible receiver, " + t3 + " required");
          return n3;
        };
      } };
    }, 5859: function(t2, e2, n2) {
      var i = n2(8149), a = n2(6126), r = i("iterator"), o = Array.prototype;
      t2.exports = function(t3) {
        return t3 !== void 0 && (a.Array === t3 || o[r] === t3);
      };
    }, 7931: function(t2, e2, n2) {
      var i = n2(1510);
      t2.exports = Array.isArray || function(t3) {
        return i(t3) == "Array";
      };
    }, 6282: function(t2) {
      t2.exports = function(t3) {
        return typeof t3 == "function";
      };
    }, 2240: function(t2, e2, n2) {
      var i = n2(6183), a = n2(6282), r = n2(9225), o = n2(4991), s = n2(6901), l = [], c = o("Reflect", "construct"), d = /^\s*(?:class|function)\b/, u = d.exec, h = !d.exec(function() {
      }), p = function(t3) {
        if (!a(t3))
          return false;
        try {
          return c(Object, l, t3), true;
        } catch (t4) {
          return false;
        }
      };
      t2.exports = !c || i(function() {
        var t3;
        return p(p.call) || !p(Object) || !p(function() {
          t3 = true;
        }) || t3;
      }) ? function(t3) {
        if (!a(t3))
          return false;
        switch (r(t3)) {
          case "AsyncFunction":
          case "GeneratorFunction":
          case "AsyncGeneratorFunction":
            return false;
        }
        return h || !!u.call(d, s(t3));
      } : p;
    }, 1949: function(t2, e2, n2) {
      var i = n2(6183), a = n2(6282), r = /#|\.prototype\./, o = function(t3, e3) {
        var n3 = l[s(t3)];
        return n3 == d || n3 != c && (a(e3) ? i(e3) : !!e3);
      }, s = o.normalize = function(t3) {
        return String(t3).replace(r, ".").toLowerCase();
      }, l = o.data = {}, c = o.NATIVE = "N", d = o.POLYFILL = "P";
      t2.exports = o;
    }, 5896: function(t2, e2, n2) {
      var i = n2(6282);
      t2.exports = function(t3) {
        return typeof t3 == "object" ? t3 !== null : i(t3);
      };
    }, 8977: function(t2) {
      t2.exports = false;
    }, 1527: function(t2, e2, n2) {
      var i = n2(6282), a = n2(4991), r = n2(4746);
      t2.exports = r ? function(t3) {
        return typeof t3 == "symbol";
      } : function(t3) {
        var e3 = a("Symbol");
        return i(e3) && Object(t3) instanceof e3;
      };
    }, 1518: function(t2, e2, n2) {
      var i = n2(1474), a = n2(5859), r = n2(3917), o = n2(1098), s = n2(7755), l = n2(650), c = n2(9193), d = function(t3, e3) {
        this.stopped = t3, this.result = e3;
      };
      t2.exports = function(t3, e3, n3) {
        var u, h, p, f, g, m, v, b = n3 && n3.that, y = !(!n3 || !n3.AS_ENTRIES), x = !(!n3 || !n3.IS_ITERATOR), _ = !(!n3 || !n3.INTERRUPTED), w = o(e3, b, 1 + y + _), S = function(t4) {
          return u && c(u, "normal", t4), new d(true, t4);
        }, C = function(t4) {
          return y ? (i(t4), _ ? w(t4[0], t4[1], S) : w(t4[0], t4[1])) : _ ? w(t4, S) : w(t4);
        };
        if (x)
          u = t3;
        else {
          if (!(h = l(t3)))
            throw TypeError(String(t3) + " is not iterable");
          if (a(h)) {
            for (p = 0, f = r(t3.length); f > p; p++)
              if ((g = C(t3[p])) && g instanceof d)
                return g;
            return new d(false);
          }
          u = s(t3, h);
        }
        for (m = u.next; !(v = m.call(u)).done; ) {
          try {
            g = C(v.value);
          } catch (t4) {
            c(u, "throw", t4);
          }
          if (typeof g == "object" && g && g instanceof d)
            return g;
        }
        return new d(false);
      };
    }, 9193: function(t2, e2, n2) {
      var i = n2(1474), a = n2(9827);
      t2.exports = function(t3, e3, n3) {
        var r, o;
        i(t3);
        try {
          if (!(r = a(t3, "return"))) {
            if (e3 === "throw")
              throw n3;
            return n3;
          }
          r = r.call(t3);
        } catch (t4) {
          o = true, r = t4;
        }
        if (e3 === "throw")
          throw n3;
        if (o)
          throw r;
        return i(r), n3;
      };
    }, 6524: function(t2, e2, n2) {
      "use strict";
      var i, a, r, o = n2(6183), s = n2(6282), l = n2(1525), c = n2(4204), d = n2(3971), u = n2(8149), h = n2(8977), p = u("iterator"), f = false;
      [].keys && ("next" in (r = [].keys()) ? (a = c(c(r))) !== Object.prototype && (i = a) : f = true), i == null || o(function() {
        var t3 = {};
        return i[p].call(t3) !== t3;
      }) ? i = {} : h && (i = l(i)), s(i[p]) || d(i, p, function() {
        return this;
      }), t2.exports = { IteratorPrototype: i, BUGGY_SAFARI_ITERATORS: f };
    }, 6126: function(t2) {
      t2.exports = {};
    }, 323: function(t2, e2, n2) {
      var i = n2(4324), a = n2(6183);
      t2.exports = !!Object.getOwnPropertySymbols && !a(function() {
        var t3 = Symbol();
        return !String(t3) || !(Object(t3) instanceof Symbol) || !Symbol.sham && i && i < 41;
      });
    }, 4404: function(t2, e2, n2) {
      var i = n2(8454), a = n2(6282), r = n2(6901), o = i.WeakMap;
      t2.exports = a(o) && /native code/.test(r(o));
    }, 8513: function(t2, e2, n2) {
      var i = n2(8454), a = n2(6183), r = n2(7655), o = n2(9749).trim, s = n2(8342), l = i.parseInt, c = i.Symbol, d = c && c.iterator, u = /^[+-]?0[Xx]/, h = l(s + "08") !== 8 || l(s + "0x16") !== 22 || d && !a(function() {
        l(Object(d));
      });
      t2.exports = h ? function(t3, e3) {
        var n3 = o(r(t3));
        return l(n3, e3 >>> 0 || (u.test(n3) ? 16 : 10));
      } : l;
    }, 4727: function(t2, e2, n2) {
      "use strict";
      var i = n2(723), a = n2(6183), r = n2(1340), o = n2(8074), s = n2(4043), l = n2(9473), c = n2(7530), d = Object.assign, u = Object.defineProperty;
      t2.exports = !d || a(function() {
        if (i && d({ b: 1 }, d(u({}, "a", { enumerable: true, get: function() {
          u(this, "b", { value: 3, enumerable: false });
        } }), { b: 2 })).b !== 1)
          return true;
        var t3 = {}, e3 = {}, n3 = Symbol(), a2 = "abcdefghijklmnopqrst";
        return t3[n3] = 7, a2.split("").forEach(function(t4) {
          e3[t4] = t4;
        }), d({}, t3)[n3] != 7 || r(d({}, e3)).join("") != a2;
      }) ? function(t3, e3) {
        for (var n3 = l(t3), a2 = arguments.length, d2 = 1, u2 = o.f, h = s.f; a2 > d2; )
          for (var p, f = c(arguments[d2++]), g = u2 ? r(f).concat(u2(f)) : r(f), m = g.length, v = 0; m > v; )
            p = g[v++], i && !h.call(f, p) || (n3[p] = f[p]);
        return n3;
      } : d;
    }, 1525: function(t2, e2, n2) {
      var i, a = n2(1474), r = n2(262), o = n2(8409), s = n2(4377), l = n2(7461), c = n2(7282), d = n2(8873), u = d("IE_PROTO"), h = function() {
      }, p = function(t3) {
        return "<script>" + t3 + "<\/script>";
      }, f = function(t3) {
        t3.write(p("")), t3.close();
        var e3 = t3.parentWindow.Object;
        return t3 = null, e3;
      }, g = function() {
        try {
          i = new ActiveXObject("htmlfile");
        } catch (t4) {
        }
        var t3, e3;
        g = typeof document != "undefined" ? document.domain && i ? f(i) : ((e3 = c("iframe")).style.display = "none", l.appendChild(e3), e3.src = String("javascript:"), (t3 = e3.contentWindow.document).open(), t3.write(p("document.F=Object")), t3.close(), t3.F) : f(i);
        for (var n3 = o.length; n3--; )
          delete g.prototype[o[n3]];
        return g();
      };
      s[u] = true, t2.exports = Object.create || function(t3, e3) {
        var n3;
        return t3 !== null ? (h.prototype = a(t3), n3 = new h(), h.prototype = null, n3[u] = t3) : n3 = g(), e3 === void 0 ? n3 : r(n3, e3);
      };
    }, 262: function(t2, e2, n2) {
      var i = n2(723), a = n2(9168), r = n2(1474), o = n2(1340);
      t2.exports = i ? Object.defineProperties : function(t3, e3) {
        r(t3);
        for (var n3, i2 = o(e3), s = i2.length, l = 0; s > l; )
          a.f(t3, n3 = i2[l++], e3[n3]);
        return t3;
      };
    }, 9168: function(t2, e2, n2) {
      var i = n2(723), a = n2(4985), r = n2(1474), o = n2(2988), s = Object.defineProperty;
      e2.f = i ? s : function(t3, e3, n3) {
        if (r(t3), e3 = o(e3), r(n3), a)
          try {
            return s(t3, e3, n3);
          } catch (t4) {
          }
        if ("get" in n3 || "set" in n3)
          throw TypeError("Accessors not supported");
        return "value" in n3 && (t3[e3] = n3.value), t3;
      };
    }, 5663: function(t2, e2, n2) {
      var i = n2(723), a = n2(4043), r = n2(9273), o = n2(3206), s = n2(2988), l = n2(3520), c = n2(4985), d = Object.getOwnPropertyDescriptor;
      e2.f = i ? d : function(t3, e3) {
        if (t3 = o(t3), e3 = s(e3), c)
          try {
            return d(t3, e3);
          } catch (t4) {
          }
        if (l(t3, e3))
          return r(!a.f.call(t3, e3), t3[e3]);
      };
    }, 6675: function(t2, e2, n2) {
      var i = n2(3206), a = n2(6785).f, r = {}.toString, o = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];
      t2.exports.f = function(t3) {
        return o && r.call(t3) == "[object Window]" ? function(t4) {
          try {
            return a(t4);
          } catch (t5) {
            return o.slice();
          }
        }(t3) : a(i(t3));
      };
    }, 6785: function(t2, e2, n2) {
      var i = n2(5113), a = n2(8409).concat("length", "prototype");
      e2.f = Object.getOwnPropertyNames || function(t3) {
        return i(t3, a);
      };
    }, 8074: function(t2, e2) {
      e2.f = Object.getOwnPropertySymbols;
    }, 4204: function(t2, e2, n2) {
      var i = n2(3520), a = n2(6282), r = n2(9473), o = n2(8873), s = n2(7401), l = o("IE_PROTO"), c = Object.prototype;
      t2.exports = s ? Object.getPrototypeOf : function(t3) {
        var e3 = r(t3);
        if (i(e3, l))
          return e3[l];
        var n3 = e3.constructor;
        return a(n3) && e3 instanceof n3 ? n3.prototype : e3 instanceof Object ? c : null;
      };
    }, 5113: function(t2, e2, n2) {
      var i = n2(3520), a = n2(3206), r = n2(5675).indexOf, o = n2(4377);
      t2.exports = function(t3, e3) {
        var n3, s = a(t3), l = 0, c = [];
        for (n3 in s)
          !i(o, n3) && i(s, n3) && c.push(n3);
        for (; e3.length > l; )
          i(s, n3 = e3[l++]) && (~r(c, n3) || c.push(n3));
        return c;
      };
    }, 1340: function(t2, e2, n2) {
      var i = n2(5113), a = n2(8409);
      t2.exports = Object.keys || function(t3) {
        return i(t3, a);
      };
    }, 4043: function(t2, e2) {
      "use strict";
      var n2 = {}.propertyIsEnumerable, i = Object.getOwnPropertyDescriptor, a = i && !n2.call({ 1: 2 }, 1);
      e2.f = a ? function(t3) {
        var e3 = i(this, t3);
        return !!e3 && e3.enumerable;
      } : n2;
    }, 5900: function(t2, e2, n2) {
      var i = n2(1474), a = n2(2004);
      t2.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
        var t3, e3 = false, n3 = {};
        try {
          (t3 = Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set).call(n3, []), e3 = n3 instanceof Array;
        } catch (t4) {
        }
        return function(n4, r) {
          return i(n4), a(r), e3 ? t3.call(n4, r) : n4.__proto__ = r, n4;
        };
      }() : void 0);
    }, 4117: function(t2, e2, n2) {
      "use strict";
      var i = n2(4823), a = n2(9225);
      t2.exports = i ? {}.toString : function() {
        return "[object " + a(this) + "]";
      };
    }, 6891: function(t2, e2, n2) {
      var i = n2(6282), a = n2(5896);
      t2.exports = function(t3, e3) {
        var n3, r;
        if (e3 === "string" && i(n3 = t3.toString) && !a(r = n3.call(t3)))
          return r;
        if (i(n3 = t3.valueOf) && !a(r = n3.call(t3)))
          return r;
        if (e3 !== "string" && i(n3 = t3.toString) && !a(r = n3.call(t3)))
          return r;
        throw TypeError("Can't convert object to primitive value");
      };
    }, 1441: function(t2, e2, n2) {
      var i = n2(4991), a = n2(6785), r = n2(8074), o = n2(1474);
      t2.exports = i("Reflect", "ownKeys") || function(t3) {
        var e3 = a.f(o(t3)), n3 = r.f;
        return n3 ? e3.concat(n3(t3)) : e3;
      };
    }, 9573: function(t2, e2, n2) {
      var i = n2(3971);
      t2.exports = function(t3, e3, n3) {
        for (var a in e3)
          i(t3, a, e3[a], n3);
        return t3;
      };
    }, 3971: function(t2, e2, n2) {
      var i = n2(8454), a = n2(6282), r = n2(3520), o = n2(1501), s = n2(7852), l = n2(6901), c = n2(1030), d = n2(4530).CONFIGURABLE, u = c.get, h = c.enforce, p = String(String).split("String");
      (t2.exports = function(t3, e3, n3, l2) {
        var c2, u2 = !!l2 && !!l2.unsafe, f = !!l2 && !!l2.enumerable, g = !!l2 && !!l2.noTargetGet, m = l2 && l2.name !== void 0 ? l2.name : e3;
        a(n3) && (String(m).slice(0, 7) === "Symbol(" && (m = "[" + String(m).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!r(n3, "name") || d && n3.name !== m) && o(n3, "name", m), (c2 = h(n3)).source || (c2.source = p.join(typeof m == "string" ? m : ""))), t3 !== i ? (u2 ? !g && t3[e3] && (f = true) : delete t3[e3], f ? t3[e3] = n3 : o(t3, e3, n3)) : f ? t3[e3] = n3 : s(e3, n3);
      })(Function.prototype, "toString", function() {
        return a(this) && u(this).source || l(this);
      });
    }, 8734: function(t2, e2, n2) {
      var i = n2(1474), a = n2(6282), r = n2(1510), o = n2(5510);
      t2.exports = function(t3, e3) {
        var n3 = t3.exec;
        if (a(n3)) {
          var s = n3.call(t3, e3);
          return s !== null && i(s), s;
        }
        if (r(t3) === "RegExp")
          return o.call(t3, e3);
        throw TypeError("RegExp#exec called on incompatible receiver");
      };
    }, 5510: function(t2, e2, n2) {
      "use strict";
      var i, a, r = n2(7655), o = n2(8383), s = n2(6558), l = n2(1748), c = n2(1525), d = n2(1030).get, u = n2(7672), h = n2(9729), p = RegExp.prototype.exec, f = l("native-string-replace", String.prototype.replace), g = p, m = (i = /a/, a = /b*/g, p.call(i, "a"), p.call(a, "a"), i.lastIndex !== 0 || a.lastIndex !== 0), v = s.UNSUPPORTED_Y || s.BROKEN_CARET, b = /()??/.exec("")[1] !== void 0;
      (m || b || v || u || h) && (g = function(t3) {
        var e3, n3, i2, a2, s2, l2, u2, h2 = this, y = d(h2), x = r(t3), _ = y.raw;
        if (_)
          return _.lastIndex = h2.lastIndex, e3 = g.call(_, x), h2.lastIndex = _.lastIndex, e3;
        var w = y.groups, S = v && h2.sticky, C = o.call(h2), k = h2.source, D = 0, T = x;
        if (S && ((C = C.replace("y", "")).indexOf("g") === -1 && (C += "g"), T = x.slice(h2.lastIndex), h2.lastIndex > 0 && (!h2.multiline || h2.multiline && x.charAt(h2.lastIndex - 1) !== "\n") && (k = "(?: " + k + ")", T = " " + T, D++), n3 = new RegExp("^(?:" + k + ")", C)), b && (n3 = new RegExp("^" + k + "$(?!\\s)", C)), m && (i2 = h2.lastIndex), a2 = p.call(S ? n3 : h2, T), S ? a2 ? (a2.input = a2.input.slice(D), a2[0] = a2[0].slice(D), a2.index = h2.lastIndex, h2.lastIndex += a2[0].length) : h2.lastIndex = 0 : m && a2 && (h2.lastIndex = h2.global ? a2.index + a2[0].length : i2), b && a2 && a2.length > 1 && f.call(a2[0], n3, function() {
          for (s2 = 1; s2 < arguments.length - 2; s2++)
            arguments[s2] === void 0 && (a2[s2] = void 0);
        }), a2 && w)
          for (a2.groups = l2 = c(null), s2 = 0; s2 < w.length; s2++)
            l2[(u2 = w[s2])[0]] = a2[u2[1]];
        return a2;
      }), t2.exports = g;
    }, 8383: function(t2, e2, n2) {
      "use strict";
      var i = n2(1474);
      t2.exports = function() {
        var t3 = i(this), e3 = "";
        return t3.global && (e3 += "g"), t3.ignoreCase && (e3 += "i"), t3.multiline && (e3 += "m"), t3.dotAll && (e3 += "s"), t3.unicode && (e3 += "u"), t3.sticky && (e3 += "y"), e3;
      };
    }, 6558: function(t2, e2, n2) {
      var i = n2(6183), a = n2(8454).RegExp;
      e2.UNSUPPORTED_Y = i(function() {
        var t3 = a("a", "y");
        return t3.lastIndex = 2, t3.exec("abcd") != null;
      }), e2.BROKEN_CARET = i(function() {
        var t3 = a("^r", "gy");
        return t3.lastIndex = 2, t3.exec("str") != null;
      });
    }, 7672: function(t2, e2, n2) {
      var i = n2(6183), a = n2(8454).RegExp;
      t2.exports = i(function() {
        var t3 = a(".", "s");
        return !(t3.dotAll && t3.exec("\n") && t3.flags === "s");
      });
    }, 9729: function(t2, e2, n2) {
      var i = n2(6183), a = n2(8454).RegExp;
      t2.exports = i(function() {
        var t3 = a("(?<a>b)", "g");
        return t3.exec("b").groups.a !== "b" || "b".replace(t3, "$<a>c") !== "bc";
      });
    }, 7431: function(t2) {
      t2.exports = function(t3) {
        if (t3 == null)
          throw TypeError("Can't call method on " + t3);
        return t3;
      };
    }, 7852: function(t2, e2, n2) {
      var i = n2(8454);
      t2.exports = function(t3, e3) {
        try {
          Object.defineProperty(i, t3, { value: e3, configurable: true, writable: true });
        } catch (n3) {
          i[t3] = e3;
        }
        return e3;
      };
    }, 820: function(t2, e2, n2) {
      var i = n2(9168).f, a = n2(3520), r = n2(8149)("toStringTag");
      t2.exports = function(t3, e3, n3) {
        t3 && !a(t3 = n3 ? t3 : t3.prototype, r) && i(t3, r, { configurable: true, value: e3 });
      };
    }, 8873: function(t2, e2, n2) {
      var i = n2(1748), a = n2(9059), r = i("keys");
      t2.exports = function(t3) {
        return r[t3] || (r[t3] = a(t3));
      };
    }, 2047: function(t2, e2, n2) {
      var i = n2(8454), a = n2(7852), r = "__core-js_shared__", o = i[r] || a(r, {});
      t2.exports = o;
    }, 1748: function(t2, e2, n2) {
      var i = n2(8977), a = n2(2047);
      (t2.exports = function(t3, e3) {
        return a[t3] || (a[t3] = e3 !== void 0 ? e3 : {});
      })("versions", []).push({ version: "3.18.1", mode: i ? "pure" : "global", copyright: "\xA9 2021 Denis Pushkarev (zloirock.ru)" });
    }, 7321: function(t2, e2, n2) {
      var i = n2(8874), a = n2(7655), r = n2(7431), o = function(t3) {
        return function(e3, n3) {
          var o2, s, l = a(r(e3)), c = i(n3), d = l.length;
          return c < 0 || c >= d ? t3 ? "" : void 0 : (o2 = l.charCodeAt(c)) < 55296 || o2 > 56319 || c + 1 === d || (s = l.charCodeAt(c + 1)) < 56320 || s > 57343 ? t3 ? l.charAt(c) : o2 : t3 ? l.slice(c, c + 2) : s - 56320 + (o2 - 55296 << 10) + 65536;
        };
      };
      t2.exports = { codeAt: o(false), charAt: o(true) };
    }, 9749: function(t2, e2, n2) {
      var i = n2(7431), a = n2(7655), r = "[" + n2(8342) + "]", o = RegExp("^" + r + r + "*"), s = RegExp(r + r + "*$"), l = function(t3) {
        return function(e3) {
          var n3 = a(i(e3));
          return 1 & t3 && (n3 = n3.replace(o, "")), 2 & t3 && (n3 = n3.replace(s, "")), n3;
        };
      };
      t2.exports = { start: l(1), end: l(2), trim: l(3) };
    }, 9623: function(t2, e2, n2) {
      var i = n2(8874), a = Math.max, r = Math.min;
      t2.exports = function(t3, e3) {
        var n3 = i(t3);
        return n3 < 0 ? a(n3 + e3, 0) : r(n3, e3);
      };
    }, 3206: function(t2, e2, n2) {
      var i = n2(7530), a = n2(7431);
      t2.exports = function(t3) {
        return i(a(t3));
      };
    }, 8874: function(t2) {
      var e2 = Math.ceil, n2 = Math.floor;
      t2.exports = function(t3) {
        return isNaN(t3 = +t3) ? 0 : (t3 > 0 ? n2 : e2)(t3);
      };
    }, 3917: function(t2, e2, n2) {
      var i = n2(8874), a = Math.min;
      t2.exports = function(t3) {
        return t3 > 0 ? a(i(t3), 9007199254740991) : 0;
      };
    }, 9473: function(t2, e2, n2) {
      var i = n2(7431);
      t2.exports = function(t3) {
        return Object(i(t3));
      };
    }, 3948: function(t2, e2, n2) {
      var i = n2(5896), a = n2(1527), r = n2(9827), o = n2(6891), s = n2(8149)("toPrimitive");
      t2.exports = function(t3, e3) {
        if (!i(t3) || a(t3))
          return t3;
        var n3, l = r(t3, s);
        if (l) {
          if (e3 === void 0 && (e3 = "default"), n3 = l.call(t3, e3), !i(n3) || a(n3))
            return n3;
          throw TypeError("Can't convert object to primitive value");
        }
        return e3 === void 0 && (e3 = "number"), o(t3, e3);
      };
    }, 2988: function(t2, e2, n2) {
      var i = n2(3948), a = n2(1527);
      t2.exports = function(t3) {
        var e3 = i(t3, "string");
        return a(e3) ? e3 : String(e3);
      };
    }, 4823: function(t2, e2, n2) {
      var i = {};
      i[n2(8149)("toStringTag")] = "z", t2.exports = String(i) === "[object z]";
    }, 7655: function(t2, e2, n2) {
      var i = n2(9225);
      t2.exports = function(t3) {
        if (i(t3) === "Symbol")
          throw TypeError("Cannot convert a Symbol value to a string");
        return String(t3);
      };
    }, 180: function(t2) {
      t2.exports = function(t3) {
        try {
          return String(t3);
        } catch (t4) {
          return "Object";
        }
      };
    }, 9059: function(t2) {
      var e2 = 0, n2 = Math.random();
      t2.exports = function(t3) {
        return "Symbol(" + String(t3 === void 0 ? "" : t3) + ")_" + (++e2 + n2).toString(36);
      };
    }, 4746: function(t2, e2, n2) {
      var i = n2(323);
      t2.exports = i && !Symbol.sham && typeof Symbol.iterator == "symbol";
    }, 8149: function(t2, e2, n2) {
      var i = n2(8454), a = n2(1748), r = n2(3520), o = n2(9059), s = n2(323), l = n2(4746), c = a("wks"), d = i.Symbol, u = l ? d : d && d.withoutSetter || o;
      t2.exports = function(t3) {
        return r(c, t3) && (s || typeof c[t3] == "string") || (s && r(d, t3) ? c[t3] = d[t3] : c[t3] = u("Symbol." + t3)), c[t3];
      };
    }, 8342: function(t2) {
      t2.exports = "	\n\v\f\r \xA0\u1680\u2000\u2001\u2002\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF";
    }, 8165: function(t2, e2, n2) {
      "use strict";
      var i = n2(4761), a = n2(528).filter;
      i({ target: "Array", proto: true, forced: !n2(4820)("filter") }, { filter: function(t3) {
        return a(this, t3, arguments.length > 1 ? arguments[1] : void 0);
      } });
    }, 9399: function(t2, e2, n2) {
      "use strict";
      var i = n2(4761), a = n2(1269);
      i({ target: "Array", proto: true, forced: [].forEach != a }, { forEach: a });
    }, 7543: function(t2, e2, n2) {
      "use strict";
      var i = n2(3206), a = n2(9256), r = n2(6126), o = n2(1030), s = n2(7583), l = "Array Iterator", c = o.set, d = o.getterFor(l);
      t2.exports = s(Array, "Array", function(t3, e3) {
        c(this, { type: l, target: i(t3), index: 0, kind: e3 });
      }, function() {
        var t3 = d(this), e3 = t3.target, n3 = t3.kind, i2 = t3.index++;
        return !e3 || i2 >= e3.length ? (t3.target = void 0, { value: void 0, done: true }) : n3 == "keys" ? { value: i2, done: false } : n3 == "values" ? { value: e3[i2], done: false } : { value: [i2, e3[i2]], done: false };
      }, "values"), r.Arguments = r.Array, a("keys"), a("values"), a("entries");
    }, 7985: function(t2, e2, n2) {
      "use strict";
      var i = n2(4761), a = n2(6589).left, r = n2(1923), o = n2(4324), s = n2(7594);
      i({ target: "Array", proto: true, forced: !r("reduce") || !s && o > 79 && o < 83 }, { reduce: function(t3) {
        return a(this, t3, arguments.length, arguments.length > 1 ? arguments[1] : void 0);
      } });
    }, 6618: function(t2, e2, n2) {
      var i = n2(723), a = n2(4530).EXISTS, r = n2(9168).f, o = Function.prototype, s = o.toString, l = /^\s*function ([^ (]*)/;
      i && !a && r(o, "name", { configurable: true, get: function() {
        try {
          return s.call(this).match(l)[1];
        } catch (t3) {
          return "";
        }
      } });
    }, 7692: function(t2, e2, n2) {
      var i = n2(4761), a = n2(4727);
      i({ target: "Object", stat: true, forced: Object.assign !== a }, { assign: a });
    }, 2352: function(t2, e2, n2) {
      var i = n2(4823), a = n2(3971), r = n2(4117);
      i || a(Object.prototype, "toString", r, { unsafe: true });
    }, 4249: function(t2, e2, n2) {
      var i = n2(4761), a = n2(8513);
      i({ global: true, forced: parseInt != a }, { parseInt: a });
    }, 9989: function(t2, e2, n2) {
      "use strict";
      var i = n2(4761), a = n2(5510);
      i({ target: "RegExp", proto: true, forced: /./.exec !== a }, { exec: a });
    }, 3344: function(t2, e2, n2) {
      "use strict";
      var i = n2(7321).charAt, a = n2(7655), r = n2(1030), o = n2(7583), s = "String Iterator", l = r.set, c = r.getterFor(s);
      o(String, "String", function(t3) {
        l(this, { type: s, string: a(t3), index: 0 });
      }, function() {
        var t3, e3 = c(this), n3 = e3.string, a2 = e3.index;
        return a2 >= n3.length ? { value: void 0, done: true } : (t3 = i(n3, a2), e3.index += t3.length, { value: t3, done: false });
      });
    }, 8307: function(t2, e2, n2) {
      "use strict";
      var i = n2(9696), a = n2(1474), r = n2(3917), o = n2(7655), s = n2(7431), l = n2(9827), c = n2(3615), d = n2(8734);
      i("match", function(t3, e3, n3) {
        return [function(e4) {
          var n4 = s(this), i2 = e4 == null ? void 0 : l(e4, t3);
          return i2 ? i2.call(e4, n4) : new RegExp(e4)[t3](o(n4));
        }, function(t4) {
          var i2 = a(this), s2 = o(t4), l2 = n3(e3, i2, s2);
          if (l2.done)
            return l2.value;
          if (!i2.global)
            return d(i2, s2);
          var u = i2.unicode;
          i2.lastIndex = 0;
          for (var h, p = [], f = 0; (h = d(i2, s2)) !== null; ) {
            var g = o(h[0]);
            p[f] = g, g === "" && (i2.lastIndex = c(s2, r(i2.lastIndex), u)), f++;
          }
          return f === 0 ? null : p;
        }];
      });
    }, 4390: function(t2, e2, n2) {
      "use strict";
      var i = n2(9696), a = n2(6183), r = n2(1474), o = n2(6282), s = n2(8874), l = n2(3917), c = n2(7655), d = n2(7431), u = n2(3615), h = n2(9827), p = n2(4742), f = n2(8734), g = n2(8149)("replace"), m = Math.max, v = Math.min, b = "a".replace(/./, "$0") === "$0", y = !!/./[g] && /./[g]("a", "$0") === "";
      i("replace", function(t3, e3, n3) {
        var i2 = y ? "$" : "$0";
        return [function(t4, n4) {
          var i3 = d(this), a2 = t4 == null ? void 0 : h(t4, g);
          return a2 ? a2.call(t4, i3, n4) : e3.call(c(i3), t4, n4);
        }, function(t4, a2) {
          var d2 = r(this), h2 = c(t4);
          if (typeof a2 == "string" && a2.indexOf(i2) === -1 && a2.indexOf("$<") === -1) {
            var g2 = n3(e3, d2, h2, a2);
            if (g2.done)
              return g2.value;
          }
          var b2 = o(a2);
          b2 || (a2 = c(a2));
          var y2 = d2.global;
          if (y2) {
            var x = d2.unicode;
            d2.lastIndex = 0;
          }
          for (var _ = []; ; ) {
            var w = f(d2, h2);
            if (w === null)
              break;
            if (_.push(w), !y2)
              break;
            c(w[0]) === "" && (d2.lastIndex = u(h2, l(d2.lastIndex), x));
          }
          for (var S, C = "", k = 0, D = 0; D < _.length; D++) {
            w = _[D];
            for (var T = c(w[0]), E = m(v(s(w.index), h2.length), 0), A = [], I = 1; I < w.length; I++)
              A.push((S = w[I]) === void 0 ? S : String(S));
            var M = w.groups;
            if (b2) {
              var R = [T].concat(A, E, h2);
              M !== void 0 && R.push(M);
              var P = c(a2.apply(void 0, R));
            } else
              P = p(T, h2, E, A, M, a2);
            E >= k && (C += h2.slice(k, E) + P, k = E + T.length);
          }
          return C + h2.slice(k);
        }];
      }, !!a(function() {
        var t3 = /./;
        return t3.exec = function() {
          var t4 = [];
          return t4.groups = { a: "7" }, t4;
        }, "".replace(t3, "$<a>") !== "7";
      }) || !b || y);
    }, 7323: function(t2, e2, n2) {
      "use strict";
      var i, a = n2(8454), r = n2(9573), o = n2(6582), s = n2(6645), l = n2(7790), c = n2(5896), d = n2(1030).enforce, u = n2(4404), h = !a.ActiveXObject && "ActiveXObject" in a, p = Object.isExtensible, f = function(t3) {
        return function() {
          return t3(this, arguments.length ? arguments[0] : void 0);
        };
      }, g = t2.exports = s("WeakMap", f, l);
      if (u && h) {
        i = l.getConstructor(f, "WeakMap", true), o.enable();
        var m = g.prototype, v = m.delete, b = m.has, y = m.get, x = m.set;
        r(m, { delete: function(t3) {
          if (c(t3) && !p(t3)) {
            var e3 = d(this);
            return e3.frozen || (e3.frozen = new i()), v.call(this, t3) || e3.frozen.delete(t3);
          }
          return v.call(this, t3);
        }, has: function(t3) {
          if (c(t3) && !p(t3)) {
            var e3 = d(this);
            return e3.frozen || (e3.frozen = new i()), b.call(this, t3) || e3.frozen.has(t3);
          }
          return b.call(this, t3);
        }, get: function(t3) {
          if (c(t3) && !p(t3)) {
            var e3 = d(this);
            return e3.frozen || (e3.frozen = new i()), b.call(this, t3) ? y.call(this, t3) : e3.frozen.get(t3);
          }
          return y.call(this, t3);
        }, set: function(t3, e3) {
          if (c(t3) && !p(t3)) {
            var n3 = d(this);
            n3.frozen || (n3.frozen = new i()), b.call(this, t3) ? x.call(this, t3, e3) : n3.frozen.set(t3, e3);
          } else
            x.call(this, t3, e3);
          return this;
        } });
      }
    }, 3542: function(t2, e2, n2) {
      var i = n2(8454), a = n2(6181), r = n2(2387), o = n2(1269), s = n2(1501), l = function(t3) {
        if (t3 && t3.forEach !== o)
          try {
            s(t3, "forEach", o);
          } catch (e3) {
            t3.forEach = o;
          }
      };
      for (var c in a)
        a[c] && l(i[c] && i[c].prototype);
      l(r);
    }, 4079: function(t2, e2, n2) {
      var i = n2(8454), a = n2(6181), r = n2(2387), o = n2(7543), s = n2(1501), l = n2(8149), c = l("iterator"), d = l("toStringTag"), u = o.values, h = function(t3, e3) {
        if (t3) {
          if (t3[c] !== u)
            try {
              s(t3, c, u);
            } catch (e4) {
              t3[c] = u;
            }
          if (t3[d] || s(t3, d, e3), a[e3]) {
            for (var n3 in o)
              if (t3[n3] !== o[n3])
                try {
                  s(t3, n3, o[n3]);
                } catch (e4) {
                  t3[n3] = o[n3];
                }
          }
        }
      };
      for (var p in a)
        h(i[p] && i[p].prototype, p);
      h(r, "DOMTokenList");
    }, 698: function(t2, e2, n2) {
      var i = n2(8942);
      if (i === void 0)
        throw new Error("Tempus Dominus Bootstrap4's requires jQuery. jQuery must be included before Tempus Dominus Bootstrap4's JavaScript.");
      if (function(t3) {
        var e3 = t3.fn.jquery.split(" ")[0].split(".");
        if (e3[0] < 2 && e3[1] < 9 || e3[0] === 1 && e3[1] === 9 && e3[2] < 1 || e3[0] >= 4)
          throw new Error("Tempus Dominus Bootstrap4's requires at least jQuery v3.0.0 but less than v4.0.0");
      }(i), typeof moment == "undefined")
        throw new Error("Tempus Dominus Bootstrap4's requires moment.js. Moment.js must be included before Tempus Dominus Bootstrap4's JavaScript.");
      var a = moment.version.split(".");
      if (a[0] <= 2 && a[1] < 17 || a[0] >= 3)
        throw new Error("Tempus Dominus Bootstrap4's requires at least moment.js v2.17.0 but less than v3.0.0");
      !function() {
        function t3(t4, e4) {
          for (var n3 = 0; n3 < e4.length; n3++) {
            var i2 = e4[n3];
            i2.enumerable = i2.enumerable || false, i2.configurable = true, "value" in i2 && (i2.writable = true), Object.defineProperty(t4, i2.key, i2);
          }
        }
        var e3 = function(e4, n3) {
          function i2(t4) {
            return e5 = new Date(t4), Object.prototype.toString.call(e5) === "[object Date]" && !isNaN(e5.getTime());
            var e5;
          }
          var a2 = function(t4) {
            return t4.replace(/(^\s+)|(\s+$)/g, "");
          }, r = "datetimepicker", o = "" + r, s = "." + o, l = ".data-api", c = { DATA_TOGGLE: '[data-toggle="' + o + '"]' }, d = { INPUT: r + "-input" }, u = { CHANGE: "change" + s, BLUR: "blur" + s, KEYUP: "keyup" + s, KEYDOWN: "keydown" + s, FOCUS: "focus" + s, CLICK_DATA_API: "click" + s + l, UPDATE: "update" + s, ERROR: "error" + s, HIDE: "hide" + s, SHOW: "show" + s }, h = [{ CLASS_NAME: "days", NAV_FUNCTION: "M", NAV_STEP: 1 }, { CLASS_NAME: "months", NAV_FUNCTION: "y", NAV_STEP: 1 }, { CLASS_NAME: "years", NAV_FUNCTION: "y", NAV_STEP: 10 }, { CLASS_NAME: "decades", NAV_FUNCTION: "y", NAV_STEP: 100 }], p = { up: 38, 38: "up", down: 40, 40: "down", left: 37, 37: "left", right: 39, 39: "right", tab: 9, 9: "tab", escape: 27, 27: "escape", enter: 13, 13: "enter", pageUp: 33, 33: "pageUp", pageDown: 34, 34: "pageDown", shift: 16, 16: "shift", control: 17, 17: "control", space: 32, 32: "space", t: 84, 84: "t", delete: 46, 46: "delete" }, f = ["times", "days", "months", "years", "decades"], g = {}, m = {}, v = { timeZone: -39, format: -38, dayViewHeaderFormat: -37, extraFormats: -36, stepping: -35, minDate: -34, maxDate: -33, useCurrent: -32, collapse: -31, locale: -30, defaultDate: -29, disabledDates: -28, enabledDates: -27, icons: -26, tooltips: -25, useStrict: -24, sideBySide: -23, daysOfWeekDisabled: -22, calendarWeeks: -21, viewMode: -20, toolbarPlacement: -19, buttons: -18, widgetPositioning: -17, widgetParent: -16, ignoreReadonly: -15, keepOpen: -14, focusOnShow: -13, inline: -12, keepInvalid: -11, keyBinds: -10, debug: -9, allowInputToggle: -8, disabledTimeIntervals: -7, disabledHours: -6, enabledHours: -5, viewDate: -4, allowMultidate: -3, multidateSeparator: -2, updateOnlyThroughDateOption: -1, date: 1 }, b = { time: "clock", date: "calendar", up: "arrow-up", down: "arrow-down", previous: "arrow-left", next: "arrow-right", today: "arrow-down-circle", clear: "trash-2", close: "x" };
          function y(t4, e5) {
            return v[t4] && v[e5] ? v[t4] < 0 && v[e5] < 0 ? Math.abs(v[e5]) - Math.abs(v[t4]) : v[t4] < 0 ? -1 : v[e5] < 0 ? 1 : v[t4] - v[e5] : v[t4] ? v[t4] : v[e5] ? v[e5] : 0;
          }
          var x = { timeZone: "", format: false, dayViewHeaderFormat: "MMMM YYYY", extraFormats: false, stepping: 1, minDate: false, maxDate: false, useCurrent: true, collapse: true, locale: n3.locale(), defaultDate: false, disabledDates: false, enabledDates: false, icons: { type: "class", time: "fa fa-clock-o", date: "fa fa-calendar", up: "fa fa-arrow-up", down: "fa fa-arrow-down", previous: "fa fa-chevron-left", next: "fa fa-chevron-right", today: "fa fa-calendar-check-o", clear: "fa fa-trash", close: "fa fa-times" }, tooltips: { today: "Go to today", clear: "Clear selection", close: "Close the picker", selectMonth: "Select Month", prevMonth: "Previous Month", nextMonth: "Next Month", selectYear: "Select Year", prevYear: "Previous Year", nextYear: "Next Year", selectDecade: "Select Decade", prevDecade: "Previous Decade", nextDecade: "Next Decade", prevCentury: "Previous Century", nextCentury: "Next Century", pickHour: "Pick Hour", incrementHour: "Increment Hour", decrementHour: "Decrement Hour", pickMinute: "Pick Minute", incrementMinute: "Increment Minute", decrementMinute: "Decrement Minute", pickSecond: "Pick Second", incrementSecond: "Increment Second", decrementSecond: "Decrement Second", togglePeriod: "Toggle Period", selectTime: "Select Time", selectDate: "Select Date" }, useStrict: false, sideBySide: false, daysOfWeekDisabled: false, calendarWeeks: false, viewMode: "days", toolbarPlacement: "default", buttons: { showToday: false, showClear: false, showClose: false }, widgetPositioning: { horizontal: "auto", vertical: "auto" }, widgetParent: null, readonly: false, ignoreReadonly: false, keepOpen: false, focusOnShow: true, inline: false, keepInvalid: false, keyBinds: { up: function() {
            if (!this.widget)
              return false;
            var t4 = this._dates[0] || this.getMoment();
            return this.widget.find(".datepicker").is(":visible") ? this.date(t4.clone().subtract(7, "d")) : this.date(t4.clone().add(this.stepping(), "m")), true;
          }, down: function() {
            if (!this.widget)
              return this.show(), false;
            var t4 = this._dates[0] || this.getMoment();
            return this.widget.find(".datepicker").is(":visible") ? this.date(t4.clone().add(7, "d")) : this.date(t4.clone().subtract(this.stepping(), "m")), true;
          }, "control up": function() {
            if (!this.widget)
              return false;
            var t4 = this._dates[0] || this.getMoment();
            return this.widget.find(".datepicker").is(":visible") ? this.date(t4.clone().subtract(1, "y")) : this.date(t4.clone().add(1, "h")), true;
          }, "control down": function() {
            if (!this.widget)
              return false;
            var t4 = this._dates[0] || this.getMoment();
            return this.widget.find(".datepicker").is(":visible") ? this.date(t4.clone().add(1, "y")) : this.date(t4.clone().subtract(1, "h")), true;
          }, left: function() {
            if (!this.widget)
              return false;
            var t4 = this._dates[0] || this.getMoment();
            return this.widget.find(".datepicker").is(":visible") && this.date(t4.clone().subtract(1, "d")), true;
          }, right: function() {
            if (!this.widget)
              return false;
            var t4 = this._dates[0] || this.getMoment();
            return this.widget.find(".datepicker").is(":visible") && this.date(t4.clone().add(1, "d")), true;
          }, pageUp: function() {
            if (!this.widget)
              return false;
            var t4 = this._dates[0] || this.getMoment();
            return this.widget.find(".datepicker").is(":visible") && this.date(t4.clone().subtract(1, "M")), true;
          }, pageDown: function() {
            if (!this.widget)
              return false;
            var t4 = this._dates[0] || this.getMoment();
            return this.widget.find(".datepicker").is(":visible") && this.date(t4.clone().add(1, "M")), true;
          }, enter: function() {
            return !!this.widget && (this.hide(), true);
          }, escape: function() {
            return !!this.widget && (this.hide(), true);
          }, "control space": function() {
            return !!this.widget && (this.widget.find(".timepicker").is(":visible") && this.widget.find('.btn[data-action="togglePeriod"]').click(), true);
          }, t: function() {
            return !!this.widget && (this.date(this.getMoment()), true);
          }, delete: function() {
            return !!this.widget && (this.clear(), true);
          } }, debug: false, allowInputToggle: false, disabledTimeIntervals: false, disabledHours: false, enabledHours: false, viewDate: false, allowMultidate: false, multidateSeparator: ", ", updateOnlyThroughDateOption: false, promptTimeOnDateChange: false, promptTimeOnDateChangeTransitionDelay: 200 }, _ = function() {
            function v2(t4, e5) {
              this._options = this._getOptions(e5), this._element = t4, this._dates = [], this._datesFormatted = [], this._viewDate = null, this.unset = true, this.component = false, this.widget = false, this.use24Hours = null, this.actualFormat = null, this.parseFormats = null, this.currentViewMode = null, this.MinViewModeNumber = 0, this.isInitFormatting = false, this.isInit = false, this.isDateUpdateThroughDateOptionFromClientCode = false, this.hasInitDate = false, this.initDate = void 0, this._notifyChangeEventContext = void 0, this._currentPromptTimeTimeout = null, this._int();
            }
            var _2, w, S, C = v2.prototype;
            return C._int = function() {
              this.isInit = true;
              var t4 = this._element.data("target-input");
              this._element.is("input") ? this.input = this._element : t4 !== void 0 && (this.input = t4 === "nearest" ? this._element.find("input") : e4(t4)), this._dates = [], this._dates[0] = this.getMoment(), this._viewDate = this.getMoment().clone(), e4.extend(true, this._options, this._dataToOptions()), this.hasInitDate = false, this.initDate = void 0, this.options(this._options), this.isInitFormatting = true, this._initFormatting(), this.isInitFormatting = false, this.input !== void 0 && this.input.is("input") && this.input.val().trim().length !== 0 ? this._setValue(this._parseInputDate(this.input.val().trim()), 0) : this._options.defaultDate && this.input !== void 0 && this.input.attr("placeholder") === void 0 && this._setValue(this._options.defaultDate, 0), this.hasInitDate && this.date(this.initDate), this._options.inline && this.show(), this.isInit = false;
            }, C._update = function() {
              this.widget && (this._fillDate(), this._fillTime());
            }, C._setValue = function(t4, e5) {
              var n4 = e5 === void 0, i3 = !t4 && n4, r2 = this.isDateUpdateThroughDateOptionFromClientCode, o2 = !this.isInit && this._options.updateOnlyThroughDateOption && !r2, s2 = "", l2 = false, c2 = this.unset ? null : this._dates[e5];
              if (!c2 && !this.unset && n4 && i3 && (c2 = this._dates[this._dates.length - 1]), !t4)
                return o2 ? void this._notifyEvent({ type: v2.Event.CHANGE, date: t4, oldDate: c2, isClear: i3, isInvalid: l2, isDateUpdateThroughDateOptionFromClientCode: r2, isInit: this.isInit }) : (!this._options.allowMultidate || this._dates.length === 1 || i3 ? (this.unset = true, this._dates = [], this._datesFormatted = []) : (s2 = "" + this._element.data("date") + this._options.multidateSeparator, s2 = c2 && s2.replace("" + c2.format(this.actualFormat) + this._options.multidateSeparator, "").replace("" + this._options.multidateSeparator + this._options.multidateSeparator, "").replace(new RegExp(this._options.multidateSeparator.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&") + "\\s*$"), "") || "", this._dates.splice(e5, 1), this._datesFormatted.splice(e5, 1)), s2 = a2(s2), this.input !== void 0 && (this.input.val(s2), this.input.trigger("input")), this._element.data("date", s2), this._notifyEvent({ type: v2.Event.CHANGE, date: false, oldDate: c2, isClear: i3, isInvalid: l2, isDateUpdateThroughDateOptionFromClientCode: r2, isInit: this.isInit }), void this._update());
              if (t4 = t4.clone().locale(this._options.locale), this._hasTimeZone() && t4.tz(this._options.timeZone), this._options.stepping !== 1 && t4.minutes(Math.round(t4.minutes() / this._options.stepping) * this._options.stepping).seconds(0), this._isValid(t4)) {
                if (o2)
                  return void this._notifyEvent({ type: v2.Event.CHANGE, date: t4.clone(), oldDate: c2, isClear: i3, isInvalid: l2, isDateUpdateThroughDateOptionFromClientCode: r2, isInit: this.isInit });
                if (this._dates[e5] = t4, this._datesFormatted[e5] = t4.format("YYYY-MM-DD"), this._viewDate = t4.clone(), this._options.allowMultidate && this._dates.length > 1) {
                  for (var d2 = 0; d2 < this._dates.length; d2++)
                    s2 += "" + this._dates[d2].format(this.actualFormat) + this._options.multidateSeparator;
                  s2 = s2.replace(new RegExp(this._options.multidateSeparator + "\\s*$"), "");
                } else
                  s2 = this._dates[e5].format(this.actualFormat);
                s2 = a2(s2), this.input !== void 0 && (this.input.val(s2), this.input.trigger("input")), this._element.data("date", s2), this.unset = false, this._update(), this._notifyEvent({ type: v2.Event.CHANGE, date: this._dates[e5].clone(), oldDate: c2, isClear: i3, isInvalid: l2, isDateUpdateThroughDateOptionFromClientCode: r2, isInit: this.isInit });
              } else
                l2 = true, this._options.keepInvalid ? this._notifyEvent({ type: v2.Event.CHANGE, date: t4, oldDate: c2, isClear: i3, isInvalid: l2, isDateUpdateThroughDateOptionFromClientCode: r2, isInit: this.isInit }) : this.input !== void 0 && (this.input.val("" + (this.unset ? "" : this._dates[e5].format(this.actualFormat))), this.input.trigger("input")), this._notifyEvent({ type: v2.Event.ERROR, date: t4, oldDate: c2 });
            }, C._change = function(t4) {
              var n4 = e4(t4.target).val().trim(), i3 = n4 ? this._parseInputDate(n4) : null;
              return this._setValue(i3, 0), t4.stopImmediatePropagation(), false;
            }, C._getOptions = function(t4) {
              return t4 = e4.extend(true, {}, x, t4 && t4.icons && t4.icons.type === "feather" ? { icons: b } : {}, t4);
            }, C._hasTimeZone = function() {
              return n3.tz !== void 0 && this._options.timeZone !== void 0 && this._options.timeZone !== null && this._options.timeZone !== "";
            }, C._isEnabled = function(t4) {
              if (typeof t4 != "string" || t4.length > 1)
                throw new TypeError("isEnabled expects a single character string parameter");
              switch (t4) {
                case "y":
                  return this.actualFormat.indexOf("Y") !== -1;
                case "M":
                  return this.actualFormat.indexOf("M") !== -1;
                case "d":
                  return this.actualFormat.toLowerCase().indexOf("d") !== -1;
                case "h":
                case "H":
                  return this.actualFormat.toLowerCase().indexOf("h") !== -1;
                case "m":
                  return this.actualFormat.indexOf("m") !== -1;
                case "s":
                  return this.actualFormat.indexOf("s") !== -1;
                case "a":
                case "A":
                  return this.actualFormat.toLowerCase().indexOf("a") !== -1;
                default:
                  return false;
              }
            }, C._hasTime = function() {
              return this._isEnabled("h") || this._isEnabled("m") || this._isEnabled("s");
            }, C._hasDate = function() {
              return this._isEnabled("y") || this._isEnabled("M") || this._isEnabled("d");
            }, C._dataToOptions = function() {
              var t4 = this._element.data(), n4 = {};
              return t4.dateOptions && t4.dateOptions instanceof Object && (n4 = e4.extend(true, n4, t4.dateOptions)), e4.each(this._options, function(e5) {
                var i3 = "date" + e5.charAt(0).toUpperCase() + e5.slice(1);
                t4[i3] !== void 0 ? n4[e5] = t4[i3] : delete n4[e5];
              }), n4;
            }, C._format = function() {
              return this._options.format || "YYYY-MM-DD HH:mm";
            }, C._areSameDates = function(t4, e5) {
              var i3 = this._format();
              return t4 && e5 && (t4.isSame(e5) || n3(t4.format(i3), i3).isSame(n3(e5.format(i3), i3)));
            }, C._notifyEvent = function(t4) {
              if (t4.type === v2.Event.CHANGE) {
                if (this._notifyChangeEventContext = this._notifyChangeEventContext || 0, this._notifyChangeEventContext++, t4.date && this._areSameDates(t4.date, t4.oldDate) || !t4.isClear && !t4.date && !t4.oldDate || this._notifyChangeEventContext > 1)
                  return void (this._notifyChangeEventContext = void 0);
                this._handlePromptTimeIfNeeded(t4);
              }
              this._element.trigger(t4), this._notifyChangeEventContext = void 0;
            }, C._handlePromptTimeIfNeeded = function(t4) {
              if (this._options.promptTimeOnDateChange) {
                if (!t4.oldDate && this._options.useCurrent)
                  return;
                if (t4.oldDate && t4.date && (t4.oldDate.format("YYYY-MM-DD") === t4.date.format("YYYY-MM-DD") || t4.oldDate.format("YYYY-MM-DD") !== t4.date.format("YYYY-MM-DD") && t4.oldDate.format("HH:mm:ss") !== t4.date.format("HH:mm:ss")))
                  return;
                var e5 = this;
                clearTimeout(this._currentPromptTimeTimeout), this._currentPromptTimeTimeout = setTimeout(function() {
                  e5.widget && e5.widget.find('[data-action="togglePicker"]').click();
                }, this._options.promptTimeOnDateChangeTransitionDelay);
              }
            }, C._viewUpdate = function(t4) {
              t4 === "y" && (t4 = "YYYY"), this._notifyEvent({ type: v2.Event.UPDATE, change: t4, viewDate: this._viewDate.clone() });
            }, C._showMode = function(t4) {
              this.widget && (t4 && (this.currentViewMode = Math.max(this.MinViewModeNumber, Math.min(3, this.currentViewMode + t4))), this.widget.find(".datepicker > div").hide().filter(".datepicker-" + h[this.currentViewMode].CLASS_NAME).show());
            }, C._isInDisabledDates = function(t4) {
              return this._options.disabledDates[t4.format("YYYY-MM-DD")] === true;
            }, C._isInEnabledDates = function(t4) {
              return this._options.enabledDates[t4.format("YYYY-MM-DD")] === true;
            }, C._isInDisabledHours = function(t4) {
              return this._options.disabledHours[t4.format("H")] === true;
            }, C._isInEnabledHours = function(t4) {
              return this._options.enabledHours[t4.format("H")] === true;
            }, C._isValid = function(t4, n4) {
              if (!t4 || !t4.isValid())
                return false;
              if (this._options.disabledDates && n4 === "d" && this._isInDisabledDates(t4))
                return false;
              if (this._options.enabledDates && n4 === "d" && !this._isInEnabledDates(t4))
                return false;
              if (this._options.minDate && t4.isBefore(this._options.minDate, n4))
                return false;
              if (this._options.maxDate && t4.isAfter(this._options.maxDate, n4))
                return false;
              if (this._options.daysOfWeekDisabled && n4 === "d" && this._options.daysOfWeekDisabled.indexOf(t4.day()) !== -1)
                return false;
              if (this._options.disabledHours && (n4 === "h" || n4 === "m" || n4 === "s") && this._isInDisabledHours(t4))
                return false;
              if (this._options.enabledHours && (n4 === "h" || n4 === "m" || n4 === "s") && !this._isInEnabledHours(t4))
                return false;
              if (this._options.disabledTimeIntervals && (n4 === "h" || n4 === "m" || n4 === "s")) {
                var i3 = false;
                if (e4.each(this._options.disabledTimeIntervals, function() {
                  if (t4.isBetween(this[0], this[1]))
                    return i3 = true, false;
                }), i3)
                  return false;
              }
              return true;
            }, C._parseInputDate = function(t4, e5) {
              var i3 = (e5 === void 0 ? {} : e5).isPickerShow, a3 = i3 !== void 0 && i3;
              return this._options.parseInputDate === void 0 || a3 ? n3.isMoment(t4) || (t4 = this.getMoment(t4)) : t4 = this._options.parseInputDate(t4), t4;
            }, C._keydown = function(t4) {
              var e5, n4, i3, a3, r2 = null, o2 = [], s2 = {}, l2 = t4.which;
              for (e5 in g[l2] = "p", g)
                g.hasOwnProperty(e5) && g[e5] === "p" && (o2.push(e5), parseInt(e5, 10) !== l2 && (s2[e5] = true));
              for (e5 in this._options.keyBinds)
                if (this._options.keyBinds.hasOwnProperty(e5) && typeof this._options.keyBinds[e5] == "function" && (i3 = e5.split(" ")).length === o2.length && p[l2] === i3[i3.length - 1]) {
                  for (a3 = true, n4 = i3.length - 2; n4 >= 0; n4--)
                    if (!(p[i3[n4]] in s2)) {
                      a3 = false;
                      break;
                    }
                  if (a3) {
                    r2 = this._options.keyBinds[e5];
                    break;
                  }
                }
              r2 && r2.call(this) && (t4.stopPropagation(), t4.preventDefault());
            }, C._keyup = function(t4) {
              g[t4.which] = "r", m[t4.which] && (m[t4.which] = false, t4.stopPropagation(), t4.preventDefault());
            }, C._indexGivenDates = function(t4) {
              var n4 = {}, i3 = this;
              return e4.each(t4, function() {
                var t5 = i3._parseInputDate(this);
                t5.isValid() && (n4[t5.format("YYYY-MM-DD")] = true);
              }), !!Object.keys(n4).length && n4;
            }, C._indexGivenHours = function(t4) {
              var n4 = {};
              return e4.each(t4, function() {
                n4[this] = true;
              }), !!Object.keys(n4).length && n4;
            }, C._initFormatting = function() {
              var t4 = this._options.format || "L LT", e5 = this;
              this.actualFormat = t4.replace(/(\[[^\[]*])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, function(t5) {
                return (e5.isInitFormatting && e5._options.date === null ? e5.getMoment() : e5._dates[0]).localeData().longDateFormat(t5) || t5;
              }), this.parseFormats = this._options.extraFormats ? this._options.extraFormats.slice() : [], this.parseFormats.indexOf(t4) < 0 && this.parseFormats.indexOf(this.actualFormat) < 0 && this.parseFormats.push(this.actualFormat), this.use24Hours = this.actualFormat.toLowerCase().indexOf("a") < 1 && this.actualFormat.replace(/\[.*?]/g, "").indexOf("h") < 1, this._isEnabled("y") && (this.MinViewModeNumber = 2), this._isEnabled("M") && (this.MinViewModeNumber = 1), this._isEnabled("d") && (this.MinViewModeNumber = 0), this.currentViewMode = Math.max(this.MinViewModeNumber, this.currentViewMode), this.unset || this._setValue(this._dates[0], 0);
            }, C._getLastPickedDate = function() {
              var t4 = this._dates[this._getLastPickedDateIndex()];
              return !t4 && this._options.allowMultidate && (t4 = n3(new Date())), t4;
            }, C._getLastPickedDateIndex = function() {
              return this._dates.length - 1;
            }, C.getMoment = function(t4) {
              var e5;
              return e5 = t4 == null ? n3().clone().locale(this._options.locale) : this._hasTimeZone() ? n3.tz(t4, this.parseFormats, this._options.locale, this._options.useStrict, this._options.timeZone) : n3(t4, this.parseFormats, this._options.locale, this._options.useStrict), this._hasTimeZone() && e5.tz(this._options.timeZone), e5;
            }, C.toggle = function() {
              return this.widget ? this.hide() : this.show();
            }, C.readonly = function(t4) {
              if (arguments.length === 0)
                return this._options.readonly;
              if (typeof t4 != "boolean")
                throw new TypeError("readonly() expects a boolean parameter");
              this._options.readonly = t4, this.input !== void 0 && this.input.prop("readonly", this._options.readonly), this.widget && (this.hide(), this.show());
            }, C.ignoreReadonly = function(t4) {
              if (arguments.length === 0)
                return this._options.ignoreReadonly;
              if (typeof t4 != "boolean")
                throw new TypeError("ignoreReadonly() expects a boolean parameter");
              this._options.ignoreReadonly = t4;
            }, C.options = function(t4) {
              if (arguments.length === 0)
                return e4.extend(true, {}, this._options);
              if (!(t4 instanceof Object))
                throw new TypeError("options() this.options parameter should be an object");
              e4.extend(true, this._options, t4);
              var n4 = this, i3 = Object.keys(this._options).sort(y);
              e4.each(i3, function(t5, e5) {
                var i4 = n4._options[e5];
                if (n4[e5] !== void 0) {
                  if (n4.isInit && e5 === "date")
                    return n4.hasInitDate = true, void (n4.initDate = i4);
                  n4[e5](i4);
                }
              });
            }, C.date = function(t4, e5) {
              if (e5 = e5 || 0, arguments.length === 0)
                return this.unset ? null : this._options.allowMultidate ? this._dates.join(this._options.multidateSeparator) : this._dates[e5].clone();
              if (!(t4 === null || typeof t4 == "string" || n3.isMoment(t4) || t4 instanceof Date))
                throw new TypeError("date() parameter must be one of [null, string, moment or Date]");
              typeof t4 == "string" && i2(t4) && (t4 = new Date(t4)), this._setValue(t4 === null ? null : this._parseInputDate(t4), e5);
            }, C.updateOnlyThroughDateOption = function(t4) {
              if (typeof t4 != "boolean")
                throw new TypeError("updateOnlyThroughDateOption() expects a boolean parameter");
              this._options.updateOnlyThroughDateOption = t4;
            }, C.format = function(t4) {
              if (arguments.length === 0)
                return this._options.format;
              if (typeof t4 != "string" && (typeof t4 != "boolean" || t4 !== false))
                throw new TypeError("format() expects a string or boolean:false parameter " + t4);
              this._options.format = t4, this.actualFormat && this._initFormatting();
            }, C.timeZone = function(t4) {
              if (arguments.length === 0)
                return this._options.timeZone;
              if (typeof t4 != "string")
                throw new TypeError("newZone() expects a string parameter");
              this._options.timeZone = t4;
            }, C.dayViewHeaderFormat = function(t4) {
              if (arguments.length === 0)
                return this._options.dayViewHeaderFormat;
              if (typeof t4 != "string")
                throw new TypeError("dayViewHeaderFormat() expects a string parameter");
              this._options.dayViewHeaderFormat = t4;
            }, C.extraFormats = function(t4) {
              if (arguments.length === 0)
                return this._options.extraFormats;
              if (t4 !== false && !(t4 instanceof Array))
                throw new TypeError("extraFormats() expects an array or false parameter");
              this._options.extraFormats = t4, this.parseFormats && this._initFormatting();
            }, C.disabledDates = function(t4) {
              if (arguments.length === 0)
                return this._options.disabledDates ? e4.extend({}, this._options.disabledDates) : this._options.disabledDates;
              if (!t4)
                return this._options.disabledDates = false, this._update(), true;
              if (!(t4 instanceof Array))
                throw new TypeError("disabledDates() expects an array parameter");
              this._options.disabledDates = this._indexGivenDates(t4), this._options.enabledDates = false, this._update();
            }, C.enabledDates = function(t4) {
              if (arguments.length === 0)
                return this._options.enabledDates ? e4.extend({}, this._options.enabledDates) : this._options.enabledDates;
              if (!t4)
                return this._options.enabledDates = false, this._update(), true;
              if (!(t4 instanceof Array))
                throw new TypeError("enabledDates() expects an array parameter");
              this._options.enabledDates = this._indexGivenDates(t4), this._options.disabledDates = false, this._update();
            }, C.daysOfWeekDisabled = function(t4) {
              if (arguments.length === 0)
                return this._options.daysOfWeekDisabled.splice(0);
              if (typeof t4 == "boolean" && !t4)
                return this._options.daysOfWeekDisabled = false, this._update(), true;
              if (!(t4 instanceof Array))
                throw new TypeError("daysOfWeekDisabled() expects an array parameter");
              if (this._options.daysOfWeekDisabled = t4.reduce(function(t5, e6) {
                return (e6 = parseInt(e6, 10)) > 6 || e6 < 0 || isNaN(e6) || t5.indexOf(e6) === -1 && t5.push(e6), t5;
              }, []).sort(), this._options.useCurrent && !this._options.keepInvalid)
                for (var e5 = 0; e5 < this._dates.length; e5++) {
                  for (var n4 = 0; !this._isValid(this._dates[e5], "d"); ) {
                    if (this._dates[e5].add(1, "d"), n4 === 31)
                      throw "Tried 31 times to find a valid date";
                    n4++;
                  }
                  this._setValue(this._dates[e5], e5);
                }
              this._update();
            }, C.maxDate = function(t4) {
              if (arguments.length === 0)
                return this._options.maxDate ? this._options.maxDate.clone() : this._options.maxDate;
              if (typeof t4 == "boolean" && t4 === false)
                return this._options.maxDate = false, this._update(), true;
              typeof t4 == "string" && (t4 !== "now" && t4 !== "moment" || (t4 = this.getMoment()));
              var e5 = this._parseInputDate(t4);
              if (!e5.isValid())
                throw new TypeError("maxDate() Could not parse date parameter: " + t4);
              if (this._options.minDate && e5.isBefore(this._options.minDate))
                throw new TypeError("maxDate() date parameter is before this.options.minDate: " + e5.format(this.actualFormat));
              this._options.maxDate = e5;
              for (var n4 = 0; n4 < this._dates.length; n4++)
                this._options.useCurrent && !this._options.keepInvalid && this._dates[n4].isAfter(t4) && this._setValue(this._options.maxDate, n4);
              this._viewDate.isAfter(e5) && (this._viewDate = e5.clone().subtract(this._options.stepping, "m")), this._update();
            }, C.minDate = function(t4) {
              if (arguments.length === 0)
                return this._options.minDate ? this._options.minDate.clone() : this._options.minDate;
              if (typeof t4 == "boolean" && t4 === false)
                return this._options.minDate = false, this._update(), true;
              typeof t4 == "string" && (t4 !== "now" && t4 !== "moment" || (t4 = this.getMoment()));
              var e5 = this._parseInputDate(t4);
              if (!e5.isValid())
                throw new TypeError("minDate() Could not parse date parameter: " + t4);
              if (this._options.maxDate && e5.isAfter(this._options.maxDate))
                throw new TypeError("minDate() date parameter is after this.options.maxDate: " + e5.format(this.actualFormat));
              this._options.minDate = e5;
              for (var n4 = 0; n4 < this._dates.length; n4++)
                this._options.useCurrent && !this._options.keepInvalid && this._dates[n4].isBefore(t4) && this._setValue(this._options.minDate, n4);
              this._viewDate.isBefore(e5) && (this._viewDate = e5.clone().add(this._options.stepping, "m")), this._update();
            }, C.defaultDate = function(t4) {
              if (arguments.length === 0)
                return this._options.defaultDate ? this._options.defaultDate.clone() : this._options.defaultDate;
              if (!t4)
                return this._options.defaultDate = false, true;
              typeof t4 == "string" && (t4 = t4 === "now" || t4 === "moment" ? this.getMoment() : this.getMoment(t4));
              var e5 = this._parseInputDate(t4);
              if (!e5.isValid())
                throw new TypeError("defaultDate() Could not parse date parameter: " + t4);
              if (!this._isValid(e5))
                throw new TypeError("defaultDate() date passed is invalid according to component setup validations");
              this._options.defaultDate = e5, (this._options.defaultDate && this._options.inline || this.input !== void 0 && this.input.val().trim() === "") && this._setValue(this._options.defaultDate, 0);
            }, C.locale = function(t4) {
              if (arguments.length === 0)
                return this._options.locale;
              if (!n3.localeData(t4))
                throw new TypeError("locale() locale " + t4 + " is not loaded from moment locales!");
              this._options.locale = t4;
              for (var e5 = 0; e5 < this._dates.length; e5++)
                this._dates[e5].locale(this._options.locale);
              this._viewDate.locale(this._options.locale), this.actualFormat && this._initFormatting(), this.widget && (this.hide(), this.show());
            }, C.stepping = function(t4) {
              if (arguments.length === 0)
                return this._options.stepping;
              t4 = parseInt(t4, 10), (isNaN(t4) || t4 < 1) && (t4 = 1), this._options.stepping = t4;
            }, C.useCurrent = function(t4) {
              var e5 = ["year", "month", "day", "hour", "minute"];
              if (arguments.length === 0)
                return this._options.useCurrent;
              if (typeof t4 != "boolean" && typeof t4 != "string")
                throw new TypeError("useCurrent() expects a boolean or string parameter");
              if (typeof t4 == "string" && e5.indexOf(t4.toLowerCase()) === -1)
                throw new TypeError("useCurrent() expects a string parameter of " + e5.join(", "));
              this._options.useCurrent = t4;
            }, C.collapse = function(t4) {
              if (arguments.length === 0)
                return this._options.collapse;
              if (typeof t4 != "boolean")
                throw new TypeError("collapse() expects a boolean parameter");
              if (this._options.collapse === t4)
                return true;
              this._options.collapse = t4, this.widget && (this.hide(), this.show());
            }, C.icons = function(t4) {
              if (arguments.length === 0)
                return e4.extend({}, this._options.icons);
              if (!(t4 instanceof Object))
                throw new TypeError("icons() expects parameter to be an Object");
              e4.extend(this._options.icons, t4), this.widget && (this.hide(), this.show());
            }, C.tooltips = function(t4) {
              if (arguments.length === 0)
                return e4.extend({}, this._options.tooltips);
              if (!(t4 instanceof Object))
                throw new TypeError("tooltips() expects parameter to be an Object");
              e4.extend(this._options.tooltips, t4), this.widget && (this.hide(), this.show());
            }, C.useStrict = function(t4) {
              if (arguments.length === 0)
                return this._options.useStrict;
              if (typeof t4 != "boolean")
                throw new TypeError("useStrict() expects a boolean parameter");
              this._options.useStrict = t4;
            }, C.sideBySide = function(t4) {
              if (arguments.length === 0)
                return this._options.sideBySide;
              if (typeof t4 != "boolean")
                throw new TypeError("sideBySide() expects a boolean parameter");
              this._options.sideBySide = t4, this.widget && (this.hide(), this.show());
            }, C.viewMode = function(t4) {
              if (arguments.length === 0)
                return this._options.viewMode;
              if (typeof t4 != "string")
                throw new TypeError("viewMode() expects a string parameter");
              if (v2.ViewModes.indexOf(t4) === -1)
                throw new TypeError("viewMode() parameter must be one of (" + v2.ViewModes.join(", ") + ") value");
              this._options.viewMode = t4, this.currentViewMode = Math.max(v2.ViewModes.indexOf(t4) - 1, this.MinViewModeNumber), this._showMode();
            }, C.calendarWeeks = function(t4) {
              if (arguments.length === 0)
                return this._options.calendarWeeks;
              if (typeof t4 != "boolean")
                throw new TypeError("calendarWeeks() expects parameter to be a boolean value");
              this._options.calendarWeeks = t4, this._update();
            }, C.buttons = function(t4) {
              if (arguments.length === 0)
                return e4.extend({}, this._options.buttons);
              if (!(t4 instanceof Object))
                throw new TypeError("buttons() expects parameter to be an Object");
              if (e4.extend(this._options.buttons, t4), typeof this._options.buttons.showToday != "boolean")
                throw new TypeError("buttons.showToday expects a boolean parameter");
              if (typeof this._options.buttons.showClear != "boolean")
                throw new TypeError("buttons.showClear expects a boolean parameter");
              if (typeof this._options.buttons.showClose != "boolean")
                throw new TypeError("buttons.showClose expects a boolean parameter");
              this.widget && (this.hide(), this.show());
            }, C.keepOpen = function(t4) {
              if (arguments.length === 0)
                return this._options.keepOpen;
              if (typeof t4 != "boolean")
                throw new TypeError("keepOpen() expects a boolean parameter");
              this._options.keepOpen = t4;
            }, C.focusOnShow = function(t4) {
              if (arguments.length === 0)
                return this._options.focusOnShow;
              if (typeof t4 != "boolean")
                throw new TypeError("focusOnShow() expects a boolean parameter");
              this._options.focusOnShow = t4;
            }, C.inline = function(t4) {
              if (arguments.length === 0)
                return this._options.inline;
              if (typeof t4 != "boolean")
                throw new TypeError("inline() expects a boolean parameter");
              this._options.inline = t4;
            }, C.clear = function() {
              this._setValue(null);
            }, C.keyBinds = function(t4) {
              if (arguments.length === 0)
                return this._options.keyBinds;
              this._options.keyBinds = t4;
            }, C.debug = function(t4) {
              if (typeof t4 != "boolean")
                throw new TypeError("debug() expects a boolean parameter");
              this._options.debug = t4;
            }, C.allowInputToggle = function(t4) {
              if (arguments.length === 0)
                return this._options.allowInputToggle;
              if (typeof t4 != "boolean")
                throw new TypeError("allowInputToggle() expects a boolean parameter");
              this._options.allowInputToggle = t4;
            }, C.keepInvalid = function(t4) {
              if (arguments.length === 0)
                return this._options.keepInvalid;
              if (typeof t4 != "boolean")
                throw new TypeError("keepInvalid() expects a boolean parameter");
              this._options.keepInvalid = t4;
            }, C.datepickerInput = function(t4) {
              if (arguments.length === 0)
                return this._options.datepickerInput;
              if (typeof t4 != "string")
                throw new TypeError("datepickerInput() expects a string parameter");
              this._options.datepickerInput = t4;
            }, C.parseInputDate = function(t4) {
              if (arguments.length === 0)
                return this._options.parseInputDate;
              if (typeof t4 != "function")
                throw new TypeError("parseInputDate() should be as function");
              this._options.parseInputDate = t4;
            }, C.disabledTimeIntervals = function(t4) {
              if (arguments.length === 0)
                return this._options.disabledTimeIntervals ? e4.extend({}, this._options.disabledTimeIntervals) : this._options.disabledTimeIntervals;
              if (!t4)
                return this._options.disabledTimeIntervals = false, this._update(), true;
              if (!(t4 instanceof Array))
                throw new TypeError("disabledTimeIntervals() expects an array parameter");
              this._options.disabledTimeIntervals = t4, this._update();
            }, C.disabledHours = function(t4) {
              if (arguments.length === 0)
                return this._options.disabledHours ? e4.extend({}, this._options.disabledHours) : this._options.disabledHours;
              if (!t4)
                return this._options.disabledHours = false, this._update(), true;
              if (!(t4 instanceof Array))
                throw new TypeError("disabledHours() expects an array parameter");
              if (this._options.disabledHours = this._indexGivenHours(t4), this._options.enabledHours = false, this._options.useCurrent && !this._options.keepInvalid)
                for (var n4 = 0; n4 < this._dates.length; n4++) {
                  for (var i3 = 0; !this._isValid(this._dates[n4], "h"); ) {
                    if (this._dates[n4].add(1, "h"), i3 === 24)
                      throw "Tried 24 times to find a valid date";
                    i3++;
                  }
                  this._setValue(this._dates[n4], n4);
                }
              this._update();
            }, C.enabledHours = function(t4) {
              if (arguments.length === 0)
                return this._options.enabledHours ? e4.extend({}, this._options.enabledHours) : this._options.enabledHours;
              if (!t4)
                return this._options.enabledHours = false, this._update(), true;
              if (!(t4 instanceof Array))
                throw new TypeError("enabledHours() expects an array parameter");
              if (this._options.enabledHours = this._indexGivenHours(t4), this._options.disabledHours = false, this._options.useCurrent && !this._options.keepInvalid)
                for (var n4 = 0; n4 < this._dates.length; n4++) {
                  for (var i3 = 0; !this._isValid(this._dates[n4], "h"); ) {
                    if (this._dates[n4].add(1, "h"), i3 === 24)
                      throw "Tried 24 times to find a valid date";
                    i3++;
                  }
                  this._setValue(this._dates[n4], n4);
                }
              this._update();
            }, C.viewDate = function(t4) {
              if (arguments.length === 0)
                return this._viewDate.clone();
              if (!t4)
                return this._viewDate = (this._dates[0] || this.getMoment()).clone(), true;
              if (!(typeof t4 == "string" || n3.isMoment(t4) || t4 instanceof Date))
                throw new TypeError("viewDate() parameter must be one of [string, moment or Date]");
              this._viewDate = this._parseInputDate(t4), this._update(), this._viewUpdate(h[this.currentViewMode] && h[this.currentViewMode].NAV_FUNCTION);
            }, C._fillDate = function() {
            }, C._useFeatherIcons = function() {
              return this._options.icons.type === "feather";
            }, C.allowMultidate = function(t4) {
              if (typeof t4 != "boolean")
                throw new TypeError("allowMultidate() expects a boolean parameter");
              this._options.allowMultidate = t4;
            }, C.multidateSeparator = function(t4) {
              if (arguments.length === 0)
                return this._options.multidateSeparator;
              if (typeof t4 != "string")
                throw new TypeError("multidateSeparator expects a string parameter");
              this._options.multidateSeparator = t4;
            }, _2 = v2, S = [{ key: "NAME", get: function() {
              return r;
            } }, { key: "DATA_KEY", get: function() {
              return o;
            } }, { key: "EVENT_KEY", get: function() {
              return s;
            } }, { key: "DATA_API_KEY", get: function() {
              return l;
            } }, { key: "DatePickerModes", get: function() {
              return h;
            } }, { key: "ViewModes", get: function() {
              return f;
            } }, { key: "Event", get: function() {
              return u;
            } }, { key: "Selector", get: function() {
              return c;
            } }, { key: "Default", get: function() {
              return x;
            }, set: function(t4) {
              x = t4;
            } }, { key: "ClassName", get: function() {
              return d;
            } }], (w = null) && t3(_2.prototype, w), S && t3(_2, S), v2;
          }();
          return _;
        }(i, moment);
        !function(t4) {
          var n3 = t4.fn[e3.NAME], i2 = ["top", "bottom", "auto"], a2 = ["left", "right", "auto"], r = ["default", "top", "bottom"], o = function(n4) {
            var i3, a3 = n4.data("target");
            return a3 || (a3 = n4.attr("href") || "", a3 = /^#[a-z]/i.test(a3) ? a3 : null), (i3 = t4(a3)).length === 0 ? n4 : (i3.data(e3.DATA_KEY) || t4.extend({}, i3.data(), t4(this).data()), i3);
          }, s = function(n4) {
            var o2, s2;
            function l(t5, e4) {
              var i3;
              return (i3 = n4.call(this, t5, e4) || this)._init(), i3;
            }
            s2 = n4, (o2 = l).prototype = Object.create(s2.prototype), o2.prototype.constructor = o2, o2.__proto__ = s2;
            var c = l.prototype;
            return c._init = function() {
              if (this._element.hasClass("input-group")) {
                var t5 = this._element.find(".datepickerbutton");
                t5.length === 0 ? this.component = this._element.find('[data-toggle="datetimepicker"]') : this.component = t5;
              }
            }, c._iconTag = function(e4) {
              return typeof feather != "undefined" && this._useFeatherIcons() && feather.icons[e4] ? t4("<span>").html(feather.icons[e4].toSvg()) : t4("<span>").addClass(e4);
            }, c._getDatePickerTemplate = function() {
              var e4 = t4("<thead>").append(t4("<tr>").append(t4("<th>").addClass("prev").attr("data-action", "previous").append(this._iconTag(this._options.icons.previous))).append(t4("<th>").addClass("picker-switch").attr("data-action", "pickerSwitch").attr("colspan", this._options.calendarWeeks ? "6" : "5")).append(t4("<th>").addClass("next").attr("data-action", "next").append(this._iconTag(this._options.icons.next)))), n5 = t4("<tbody>").append(t4("<tr>").append(t4("<td>").attr("colspan", this._options.calendarWeeks ? "8" : "7")));
              return [t4("<div>").addClass("datepicker-days").append(t4("<table>").addClass("table table-sm").append(e4).append(t4("<tbody>"))), t4("<div>").addClass("datepicker-months").append(t4("<table>").addClass("table-condensed").append(e4.clone()).append(n5.clone())), t4("<div>").addClass("datepicker-years").append(t4("<table>").addClass("table-condensed").append(e4.clone()).append(n5.clone())), t4("<div>").addClass("datepicker-decades").append(t4("<table>").addClass("table-condensed").append(e4.clone()).append(n5.clone()))];
            }, c._getTimePickerMainTemplate = function() {
              var e4 = t4("<tr>"), n5 = t4("<tr>"), i3 = t4("<tr>");
              return this._isEnabled("h") && (e4.append(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", title: this._options.tooltips.incrementHour }).addClass("btn").attr("data-action", "incrementHours").append(this._iconTag(this._options.icons.up)))), n5.append(t4("<td>").append(t4("<span>").addClass("timepicker-hour").attr({ "data-time-component": "hours", title: this._options.tooltips.pickHour }).attr("data-action", "showHours"))), i3.append(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", title: this._options.tooltips.decrementHour }).addClass("btn").attr("data-action", "decrementHours").append(this._iconTag(this._options.icons.down))))), this._isEnabled("m") && (this._isEnabled("h") && (e4.append(t4("<td>").addClass("separator")), n5.append(t4("<td>").addClass("separator").html(":")), i3.append(t4("<td>").addClass("separator"))), e4.append(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", title: this._options.tooltips.incrementMinute }).addClass("btn").attr("data-action", "incrementMinutes").append(this._iconTag(this._options.icons.up)))), n5.append(t4("<td>").append(t4("<span>").addClass("timepicker-minute").attr({ "data-time-component": "minutes", title: this._options.tooltips.pickMinute }).attr("data-action", "showMinutes"))), i3.append(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", title: this._options.tooltips.decrementMinute }).addClass("btn").attr("data-action", "decrementMinutes").append(this._iconTag(this._options.icons.down))))), this._isEnabled("s") && (this._isEnabled("m") && (e4.append(t4("<td>").addClass("separator")), n5.append(t4("<td>").addClass("separator").html(":")), i3.append(t4("<td>").addClass("separator"))), e4.append(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", title: this._options.tooltips.incrementSecond }).addClass("btn").attr("data-action", "incrementSeconds").append(this._iconTag(this._options.icons.up)))), n5.append(t4("<td>").append(t4("<span>").addClass("timepicker-second").attr({ "data-time-component": "seconds", title: this._options.tooltips.pickSecond }).attr("data-action", "showSeconds"))), i3.append(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", title: this._options.tooltips.decrementSecond }).addClass("btn").attr("data-action", "decrementSeconds").append(this._iconTag(this._options.icons.down))))), this.use24Hours || (e4.append(t4("<td>").addClass("separator")), n5.append(t4("<td>").append(t4("<button>").addClass("btn btn-primary").attr({ "data-action": "togglePeriod", tabindex: "-1", title: this._options.tooltips.togglePeriod }))), i3.append(t4("<td>").addClass("separator"))), t4("<div>").addClass("timepicker-picker").append(t4("<table>").addClass("table-condensed").append([e4, n5, i3]));
            }, c._getTimePickerTemplate = function() {
              var e4 = t4("<div>").addClass("timepicker-hours").append(t4("<table>").addClass("table-condensed")), n5 = t4("<div>").addClass("timepicker-minutes").append(t4("<table>").addClass("table-condensed")), i3 = t4("<div>").addClass("timepicker-seconds").append(t4("<table>").addClass("table-condensed")), a3 = [this._getTimePickerMainTemplate()];
              return this._isEnabled("h") && a3.push(e4), this._isEnabled("m") && a3.push(n5), this._isEnabled("s") && a3.push(i3), a3;
            }, c._getToolbar = function() {
              var e4, n5, i3 = [];
              (this._options.buttons.showToday && i3.push(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", "data-action": "today", title: this._options.tooltips.today }).append(this._iconTag(this._options.icons.today)))), !this._options.sideBySide && this._options.collapse && this._hasDate() && this._hasTime()) && (this._options.viewMode === "times" ? (e4 = this._options.tooltips.selectDate, n5 = this._options.icons.date) : (e4 = this._options.tooltips.selectTime, n5 = this._options.icons.time), i3.push(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", "data-action": "togglePicker", title: e4 }).append(this._iconTag(n5)))));
              return this._options.buttons.showClear && i3.push(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", "data-action": "clear", title: this._options.tooltips.clear }).append(this._iconTag(this._options.icons.clear)))), this._options.buttons.showClose && i3.push(t4("<td>").append(t4("<a>").attr({ href: "#", tabindex: "-1", "data-action": "close", title: this._options.tooltips.close }).append(this._iconTag(this._options.icons.close)))), i3.length === 0 ? "" : t4("<table>").addClass("table-condensed").append(t4("<tbody>").append(t4("<tr>").append(i3)));
            }, c._getTemplate = function() {
              var e4 = t4("<div>").addClass(("bootstrap-datetimepicker-widget dropdown-menu " + (this._options.calendarWeeks ? "tempusdominus-bootstrap-datetimepicker-widget-with-calendar-weeks" : "") + " " + (this._useFeatherIcons() ? "tempusdominus-bootstrap-datetimepicker-widget-with-feather-icons" : "") + " ").trim()), n5 = t4("<div>").addClass("datepicker").append(this._getDatePickerTemplate()), i3 = t4("<div>").addClass("timepicker").append(this._getTimePickerTemplate()), a3 = t4("<ul>").addClass("list-unstyled"), r2 = t4("<li>").addClass(("picker-switch" + (this._options.collapse ? " accordion-toggle" : "") + " " + (this._useFeatherIcons() ? "picker-switch-with-feathers-icons" : "")).trim()).append(this._getToolbar());
              return this._options.inline && e4.removeClass("dropdown-menu"), this.use24Hours && e4.addClass("usetwentyfour"), (this.input !== void 0 && this.input.prop("readonly") || this._options.readonly) && e4.addClass("bootstrap-datetimepicker-widget-readonly"), this._isEnabled("s") && !this.use24Hours && e4.addClass("wider"), this._options.sideBySide && this._hasDate() && this._hasTime() ? (e4.addClass("timepicker-sbs"), this._options.toolbarPlacement === "top" && e4.append(r2), e4.append(t4("<div>").addClass("row").append(n5.addClass("col-md-6")).append(i3.addClass("col-md-6"))), this._options.toolbarPlacement !== "bottom" && this._options.toolbarPlacement !== "default" || e4.append(r2), e4) : (this._options.toolbarPlacement === "top" && a3.append(r2), this._hasDate() && a3.append(t4("<li>").addClass(this._options.collapse && this._hasTime() ? "collapse" : "").addClass(this._options.collapse && this._hasTime() && this._options.viewMode === "times" ? "" : "show").append(n5)), this._options.toolbarPlacement === "default" && a3.append(r2), this._hasTime() && a3.append(t4("<li>").addClass(this._options.collapse && this._hasDate() ? "collapse" : "").addClass(this._options.collapse && this._hasDate() && this._options.viewMode === "times" ? "show" : "").append(i3)), this._options.toolbarPlacement === "bottom" && a3.append(r2), e4.append(a3));
            }, c._place = function(e4) {
              var n5, i3 = e4 && e4.data && e4.data.picker || this, a3 = i3._options.widgetPositioning.vertical, r2 = i3._options.widgetPositioning.horizontal, o3 = (i3.component && i3.component.length ? i3.component : i3._element).position(), s3 = (i3.component && i3.component.length ? i3.component : i3._element).offset();
              if (i3._options.widgetParent)
                n5 = i3._options.widgetParent.append(i3.widget);
              else if (i3._element.is("input"))
                n5 = i3._element.after(i3.widget).parent();
              else {
                if (i3._options.inline)
                  return void (n5 = i3._element.append(i3.widget));
                n5 = i3._element, i3._element.children().first().after(i3.widget);
              }
              if (a3 === "auto" && (a3 = s3.top + 1.5 * i3.widget.height() >= t4(window).height() + t4(window).scrollTop() && i3.widget.height() + i3._element.outerHeight() < s3.top ? "top" : "bottom"), r2 === "auto" && (r2 = n5.width() < s3.left + i3.widget.outerWidth() / 2 && s3.left + i3.widget.outerWidth() > t4(window).width() ? "right" : "left"), a3 === "top" ? i3.widget.addClass("top").removeClass("bottom") : i3.widget.addClass("bottom").removeClass("top"), r2 === "right" ? i3.widget.addClass("float-right") : i3.widget.removeClass("float-right"), n5.css("position") !== "relative" && (n5 = n5.parents().filter(function() {
                return t4(this).css("position") === "relative";
              }).first()), n5.length === 0)
                throw new Error("datetimepicker component should be placed within a relative positioned container");
              i3.widget.css({ top: a3 === "top" ? "auto" : o3.top + i3._element.outerHeight() + "px", bottom: a3 === "top" ? n5.outerHeight() - (n5 === i3._element ? 0 : o3.top) + "px" : "auto", left: r2 === "left" ? (n5 === i3._element ? 0 : o3.left) + "px" : "auto", right: r2 === "left" ? "auto" : n5.outerWidth() - i3._element.outerWidth() - (n5 === i3._element ? 0 : o3.left) + "px" });
            }, c._fillDow = function() {
              var e4 = t4("<tr>"), n5 = this._viewDate.clone().startOf("w").startOf("d");
              for (this._options.calendarWeeks === true && e4.append(t4("<th>").addClass("cw").text("#")); n5.isBefore(this._viewDate.clone().endOf("w")); )
                e4.append(t4("<th>").addClass("dow").text(n5.format("dd"))), n5.add(1, "d");
              this.widget.find(".datepicker-days thead").append(e4);
            }, c._fillMonths = function() {
              for (var e4 = [], n5 = this._viewDate.clone().startOf("y").startOf("d"); n5.isSame(this._viewDate, "y"); )
                e4.push(t4("<span>").attr("data-action", "selectMonth").addClass("month").text(n5.format("MMM"))), n5.add(1, "M");
              this.widget.find(".datepicker-months td").empty().append(e4);
            }, c._updateMonths = function() {
              var e4 = this.widget.find(".datepicker-months"), n5 = e4.find("th"), i3 = e4.find("tbody").find("span"), a3 = this, r2 = this._getLastPickedDate();
              n5.eq(0).find("span").attr("title", this._options.tooltips.prevYear), n5.eq(1).attr("title", this._options.tooltips.selectYear), n5.eq(2).find("span").attr("title", this._options.tooltips.nextYear), e4.find(".disabled").removeClass("disabled"), this._isValid(this._viewDate.clone().subtract(1, "y"), "y") || n5.eq(0).addClass("disabled"), n5.eq(1).text(this._viewDate.year()), this._isValid(this._viewDate.clone().add(1, "y"), "y") || n5.eq(2).addClass("disabled"), i3.removeClass("active"), r2 && r2.isSame(this._viewDate, "y") && !this.unset && i3.eq(r2.month()).addClass("active"), i3.each(function(e5) {
                a3._isValid(a3._viewDate.clone().month(e5), "M") || t4(this).addClass("disabled");
              });
            }, c._getStartEndYear = function(t5, e4) {
              var n5 = t5 / 10, i3 = Math.floor(e4 / t5) * t5;
              return [i3, i3 + 9 * n5, Math.floor(e4 / n5) * n5];
            }, c._updateYears = function() {
              var t5 = this.widget.find(".datepicker-years"), e4 = t5.find("th"), n5 = this._getStartEndYear(10, this._viewDate.year()), i3 = this._viewDate.clone().year(n5[0]), a3 = this._viewDate.clone().year(n5[1]), r2 = "";
              for (e4.eq(0).find("span").attr("title", this._options.tooltips.prevDecade), e4.eq(1).attr("title", this._options.tooltips.selectDecade), e4.eq(2).find("span").attr("title", this._options.tooltips.nextDecade), t5.find(".disabled").removeClass("disabled"), this._options.minDate && this._options.minDate.isAfter(i3, "y") && e4.eq(0).addClass("disabled"), e4.eq(1).text(i3.year() + "-" + a3.year()), this._options.maxDate && this._options.maxDate.isBefore(a3, "y") && e4.eq(2).addClass("disabled"), r2 += '<span data-action="selectYear" class="year old' + (this._isValid(i3, "y") ? "" : " disabled") + '">' + (i3.year() - 1) + "</span>"; !i3.isAfter(a3, "y"); )
                r2 += '<span data-action="selectYear" class="year' + (i3.isSame(this._getLastPickedDate(), "y") && !this.unset ? " active" : "") + (this._isValid(i3, "y") ? "" : " disabled") + '">' + i3.year() + "</span>", i3.add(1, "y");
              r2 += '<span data-action="selectYear" class="year old' + (this._isValid(i3, "y") ? "" : " disabled") + '">' + i3.year() + "</span>", t5.find("td").html(r2);
            }, c._updateDecades = function() {
              var t5, e4 = this.widget.find(".datepicker-decades"), n5 = e4.find("th"), i3 = this._getStartEndYear(100, this._viewDate.year()), a3 = this._viewDate.clone().year(i3[0]), r2 = this._viewDate.clone().year(i3[1]), o3 = this._getLastPickedDate(), s3 = false, l2 = false, c2 = "";
              for (n5.eq(0).find("span").attr("title", this._options.tooltips.prevCentury), n5.eq(2).find("span").attr("title", this._options.tooltips.nextCentury), e4.find(".disabled").removeClass("disabled"), (a3.year() === 0 || this._options.minDate && this._options.minDate.isAfter(a3, "y")) && n5.eq(0).addClass("disabled"), n5.eq(1).text(a3.year() + "-" + r2.year()), this._options.maxDate && this._options.maxDate.isBefore(r2, "y") && n5.eq(2).addClass("disabled"), a3.year() - 10 < 0 ? c2 += "<span>&nbsp;</span>" : c2 += '<span data-action="selectDecade" class="decade old" data-selection="' + (a3.year() + 6) + '">' + (a3.year() - 10) + "</span>"; !a3.isAfter(r2, "y"); )
                t5 = a3.year() + 11, s3 = this._options.minDate && this._options.minDate.isAfter(a3, "y") && this._options.minDate.year() <= t5, l2 = this._options.maxDate && this._options.maxDate.isAfter(a3, "y") && this._options.maxDate.year() <= t5, c2 += '<span data-action="selectDecade" class="decade' + (o3 && o3.isAfter(a3) && o3.year() <= t5 ? " active" : "") + (this._isValid(a3, "y") || s3 || l2 ? "" : " disabled") + '" data-selection="' + (a3.year() + 6) + '">' + a3.year() + "</span>", a3.add(10, "y");
              c2 += '<span data-action="selectDecade" class="decade old" data-selection="' + (a3.year() + 6) + '">' + a3.year() + "</span>", e4.find("td").html(c2);
            }, c._fillDate = function() {
              n4.prototype._fillDate.call(this);
              var e4, i3, a3, r2, o3 = this.widget.find(".datepicker-days"), s3 = o3.find("th"), l2 = [];
              if (this._hasDate()) {
                for (s3.eq(0).find("span").attr("title", this._options.tooltips.prevMonth), s3.eq(1).attr("title", this._options.tooltips.selectMonth), s3.eq(2).find("span").attr("title", this._options.tooltips.nextMonth), o3.find(".disabled").removeClass("disabled"), s3.eq(1).text(this._viewDate.format(this._options.dayViewHeaderFormat)), this._isValid(this._viewDate.clone().subtract(1, "M"), "M") || s3.eq(0).addClass("disabled"), this._isValid(this._viewDate.clone().add(1, "M"), "M") || s3.eq(2).addClass("disabled"), e4 = this._viewDate.clone().startOf("M").startOf("w").startOf("d"), r2 = 0; r2 < 42; r2++) {
                  if (e4.weekday() === 0 && (i3 = t4("<tr>"), this._options.calendarWeeks && i3.append('<td class="cw">' + e4.week() + "</td>"), l2.push(i3)), a3 = "", e4.isBefore(this._viewDate, "M") && (a3 += " old"), e4.isAfter(this._viewDate, "M") && (a3 += " new"), this._options.allowMultidate) {
                    var c2 = this._datesFormatted.indexOf(e4.format("YYYY-MM-DD"));
                    c2 !== -1 && e4.isSame(this._datesFormatted[c2], "d") && !this.unset && (a3 += " active");
                  } else
                    e4.isSame(this._getLastPickedDate(), "d") && !this.unset && (a3 += " active");
                  this._isValid(e4, "d") || (a3 += " disabled"), e4.isSame(this.getMoment(), "d") && (a3 += " today"), e4.day() !== 0 && e4.day() !== 6 || (a3 += " weekend"), i3.append('<td data-action="selectDay" data-day="' + e4.format("L") + '" class="day' + a3 + '">' + e4.date() + "</td>"), e4.add(1, "d");
                }
                t4("body").addClass("tempusdominus-bootstrap-datetimepicker-widget-day-click"), t4("body").append('<div class="tempusdominus-bootstrap-datetimepicker-widget-day-click-glass-panel"></div>'), o3.find("tbody").empty().append(l2), t4("body").find(".tempusdominus-bootstrap-datetimepicker-widget-day-click-glass-panel").remove(), t4("body").removeClass("tempusdominus-bootstrap-datetimepicker-widget-day-click"), this._updateMonths(), this._updateYears(), this._updateDecades();
              }
            }, c._fillHours = function() {
              var e4 = this.widget.find(".timepicker-hours table"), n5 = this._viewDate.clone().startOf("d"), i3 = [], a3 = t4("<tr>");
              for (this._viewDate.hour() > 11 && !this.use24Hours && n5.hour(12); n5.isSame(this._viewDate, "d") && (this.use24Hours || this._viewDate.hour() < 12 && n5.hour() < 12 || this._viewDate.hour() > 11); )
                n5.hour() % 4 == 0 && (a3 = t4("<tr>"), i3.push(a3)), a3.append('<td data-action="selectHour" class="hour' + (this._isValid(n5, "h") ? "" : " disabled") + '">' + n5.format(this.use24Hours ? "HH" : "hh") + "</td>"), n5.add(1, "h");
              e4.empty().append(i3);
            }, c._fillMinutes = function() {
              for (var e4 = this.widget.find(".timepicker-minutes table"), n5 = this._viewDate.clone().startOf("h"), i3 = [], a3 = this._options.stepping === 1 ? 5 : this._options.stepping, r2 = t4("<tr>"); this._viewDate.isSame(n5, "h"); )
                n5.minute() % (4 * a3) == 0 && (r2 = t4("<tr>"), i3.push(r2)), r2.append('<td data-action="selectMinute" class="minute' + (this._isValid(n5, "m") ? "" : " disabled") + '">' + n5.format("mm") + "</td>"), n5.add(a3, "m");
              e4.empty().append(i3);
            }, c._fillSeconds = function() {
              for (var e4 = this.widget.find(".timepicker-seconds table"), n5 = this._viewDate.clone().startOf("m"), i3 = [], a3 = t4("<tr>"); this._viewDate.isSame(n5, "m"); )
                n5.second() % 20 == 0 && (a3 = t4("<tr>"), i3.push(a3)), a3.append('<td data-action="selectSecond" class="second' + (this._isValid(n5, "s") ? "" : " disabled") + '">' + n5.format("ss") + "</td>"), n5.add(5, "s");
              e4.empty().append(i3);
            }, c._fillTime = function() {
              var t5, e4, n5 = this.widget.find(".timepicker span[data-time-component]"), i3 = this._getLastPickedDate();
              this.use24Hours || (t5 = this.widget.find(".timepicker [data-action=togglePeriod]"), e4 = i3 ? i3.clone().add(i3.hours() >= 12 ? -12 : 12, "h") : void 0, i3 && t5.text(i3.format("A")), this._isValid(e4, "h") ? t5.removeClass("disabled") : t5.addClass("disabled")), i3 && n5.filter("[data-time-component=hours]").text(i3.format(this.use24Hours ? "HH" : "hh")), i3 && n5.filter("[data-time-component=minutes]").text(i3.format("mm")), i3 && n5.filter("[data-time-component=seconds]").text(i3.format("ss")), this._fillHours(), this._fillMinutes(), this._fillSeconds();
            }, c._doAction = function(n5, i3) {
              var a3 = this._getLastPickedDate();
              if (t4(n5.currentTarget).is(".disabled"))
                return false;
              switch (i3 = i3 || t4(n5.currentTarget).data("action")) {
                case "next":
                  var r2 = e3.DatePickerModes[this.currentViewMode].NAV_FUNCTION;
                  this._viewDate.add(e3.DatePickerModes[this.currentViewMode].NAV_STEP, r2), this._fillDate(), this._viewUpdate(r2);
                  break;
                case "previous":
                  var o3 = e3.DatePickerModes[this.currentViewMode].NAV_FUNCTION;
                  this._viewDate.subtract(e3.DatePickerModes[this.currentViewMode].NAV_STEP, o3), this._fillDate(), this._viewUpdate(o3);
                  break;
                case "pickerSwitch":
                  this._showMode(1);
                  break;
                case "selectMonth":
                  var s3 = t4(n5.target).closest("tbody").find("span").index(t4(n5.target));
                  this._viewDate.month(s3), this.currentViewMode === this.MinViewModeNumber ? (this._setValue(a3.clone().year(this._viewDate.year()).month(this._viewDate.month()), this._getLastPickedDateIndex()), this._options.inline || this.hide()) : (this._showMode(-1), this._fillDate()), this._viewUpdate("M");
                  break;
                case "selectYear":
                  var l2 = parseInt(t4(n5.target).text(), 10) || 0;
                  this._viewDate.year(l2), this.currentViewMode === this.MinViewModeNumber ? (this._setValue(a3.clone().year(this._viewDate.year()), this._getLastPickedDateIndex()), this._options.inline || this.hide()) : (this._showMode(-1), this._fillDate()), this._viewUpdate("YYYY");
                  break;
                case "selectDecade":
                  var c2 = parseInt(t4(n5.target).data("selection"), 10) || 0;
                  this._viewDate.year(c2), this.currentViewMode === this.MinViewModeNumber ? (this._setValue(a3.clone().year(this._viewDate.year()), this._getLastPickedDateIndex()), this._options.inline || this.hide()) : (this._showMode(-1), this._fillDate()), this._viewUpdate("YYYY");
                  break;
                case "selectDay":
                  var d = this._viewDate.clone();
                  t4(n5.target).is(".old") && d.subtract(1, "M"), t4(n5.target).is(".new") && d.add(1, "M");
                  var u = d.date(parseInt(t4(n5.target).text(), 10)), h = 0;
                  this._options.allowMultidate ? (h = this._datesFormatted.indexOf(u.format("YYYY-MM-DD"))) !== -1 ? this._setValue(null, h) : this._setValue(u, this._getLastPickedDateIndex() + 1) : this._setValue(u, this._getLastPickedDateIndex()), this._hasTime() || this._options.keepOpen || this._options.inline || this._options.allowMultidate || this.hide();
                  break;
                case "incrementHours":
                  if (!a3)
                    break;
                  var p = a3.clone().add(1, "h");
                  this._isValid(p, "h") && (this._getLastPickedDateIndex() < 0 && this.date(p), this._setValue(p, this._getLastPickedDateIndex()));
                  break;
                case "incrementMinutes":
                  if (!a3)
                    break;
                  var f = a3.clone().add(this._options.stepping, "m");
                  this._isValid(f, "m") && (this._getLastPickedDateIndex() < 0 && this.date(f), this._setValue(f, this._getLastPickedDateIndex()));
                  break;
                case "incrementSeconds":
                  if (!a3)
                    break;
                  var g = a3.clone().add(1, "s");
                  this._isValid(g, "s") && (this._getLastPickedDateIndex() < 0 && this.date(g), this._setValue(g, this._getLastPickedDateIndex()));
                  break;
                case "decrementHours":
                  if (!a3)
                    break;
                  var m = a3.clone().subtract(1, "h");
                  this._isValid(m, "h") && (this._getLastPickedDateIndex() < 0 && this.date(m), this._setValue(m, this._getLastPickedDateIndex()));
                  break;
                case "decrementMinutes":
                  if (!a3)
                    break;
                  var v = a3.clone().subtract(this._options.stepping, "m");
                  this._isValid(v, "m") && (this._getLastPickedDateIndex() < 0 && this.date(v), this._setValue(v, this._getLastPickedDateIndex()));
                  break;
                case "decrementSeconds":
                  if (!a3)
                    break;
                  var b = a3.clone().subtract(1, "s");
                  this._isValid(b, "s") && (this._getLastPickedDateIndex() < 0 && this.date(b), this._setValue(b, this._getLastPickedDateIndex()));
                  break;
                case "togglePeriod":
                  this._setValue(a3.clone().add(a3.hours() >= 12 ? -12 : 12, "h"), this._getLastPickedDateIndex());
                  break;
                case "togglePicker":
                  var y, x, _ = t4(n5.target), w = _.closest("a"), S = _.closest("ul"), C = S.find(".show"), k = S.find(".collapse:not(.show)"), D = _.is("span") ? _ : _.find("span");
                  if (C && C.length) {
                    if ((y = C.data("collapse")) && y.transitioning)
                      return true;
                    C.collapse ? (C.collapse("hide"), k.collapse("show")) : (C.removeClass("show"), k.addClass("show")), this._useFeatherIcons() ? (w.toggleClass(this._options.icons.time + " " + this._options.icons.date), x = w.hasClass(this._options.icons.time) ? this._options.icons.date : this._options.icons.time, w.html(this._iconTag(x))) : D.toggleClass(this._options.icons.time + " " + this._options.icons.date), (this._useFeatherIcons() ? w.hasClass(this._options.icons.date) : D.hasClass(this._options.icons.date)) ? w.attr("title", this._options.tooltips.selectDate) : w.attr("title", this._options.tooltips.selectTime);
                  }
                  break;
                case "showPicker":
                  this.widget.find(".timepicker > div:not(.timepicker-picker)").hide(), this.widget.find(".timepicker .timepicker-picker").show();
                  break;
                case "showHours":
                  this.widget.find(".timepicker .timepicker-picker").hide(), this.widget.find(".timepicker .timepicker-hours").show();
                  break;
                case "showMinutes":
                  this.widget.find(".timepicker .timepicker-picker").hide(), this.widget.find(".timepicker .timepicker-minutes").show();
                  break;
                case "showSeconds":
                  this.widget.find(".timepicker .timepicker-picker").hide(), this.widget.find(".timepicker .timepicker-seconds").show();
                  break;
                case "selectHour":
                  var T = parseInt(t4(n5.target).text(), 10);
                  this.use24Hours || (a3.hours() >= 12 ? T !== 12 && (T += 12) : T === 12 && (T = 0)), this._setValue(a3.clone().hours(T), this._getLastPickedDateIndex()), this._isEnabled("a") || this._isEnabled("m") || this._options.keepOpen || this._options.inline ? this._doAction(n5, "showPicker") : this.hide();
                  break;
                case "selectMinute":
                  this._setValue(a3.clone().minutes(parseInt(t4(n5.target).text(), 10)), this._getLastPickedDateIndex()), this._isEnabled("a") || this._isEnabled("s") || this._options.keepOpen || this._options.inline ? this._doAction(n5, "showPicker") : this.hide();
                  break;
                case "selectSecond":
                  this._setValue(a3.clone().seconds(parseInt(t4(n5.target).text(), 10)), this._getLastPickedDateIndex()), this._isEnabled("a") || this._options.keepOpen || this._options.inline ? this._doAction(n5, "showPicker") : this.hide();
                  break;
                case "clear":
                  this.clear();
                  break;
                case "close":
                  this.hide();
                  break;
                case "today":
                  var E = this.getMoment();
                  this._isValid(E, "d") && this._setValue(E, this._getLastPickedDateIndex());
              }
              return false;
            }, c.hide = function() {
              var n5 = false;
              if (this.widget && (this.widget.find(".collapse").each(function() {
                var e4 = t4(this).data("collapse");
                return !e4 || !e4.transitioning || (n5 = true, false);
              }), !n5)) {
                this.component && this.component.hasClass("btn") && this.component.toggleClass("active"), this.widget.hide(), t4(window).off("resize", this._place), this.widget.off("click", "[data-action]"), this.widget.off("mousedown", false), this.widget.remove(), this.widget = false, this.input !== void 0 && this.input.val() !== void 0 && this.input.val().trim().length !== 0 && this._setValue(this._parseInputDate(this.input.val().trim(), { isPickerShow: false }), 0);
                var i3 = this._getLastPickedDate();
                this._notifyEvent({ type: e3.Event.HIDE, date: this.unset ? null : i3 ? i3.clone() : void 0 }), this.input !== void 0 && this.input.blur(), this._viewDate = i3 ? i3.clone() : this.getMoment();
              }
            }, c.show = function() {
              var n5, i3 = false;
              if (this.input !== void 0) {
                if (this.input.prop("disabled") || !this._options.ignoreReadonly && this.input.prop("readonly") || this.widget)
                  return;
                this.input.val() !== void 0 && this.input.val().trim().length !== 0 ? this._setValue(this._parseInputDate(this.input.val().trim(), { isPickerShow: true }), 0) : i3 = true;
              } else
                i3 = true;
              i3 && this.unset && this._options.useCurrent && (n5 = this.getMoment(), typeof this._options.useCurrent == "string" && (n5 = { year: function(t5) {
                return t5.month(0).date(1).hours(0).seconds(0).minutes(0);
              }, month: function(t5) {
                return t5.date(1).hours(0).seconds(0).minutes(0);
              }, day: function(t5) {
                return t5.hours(0).seconds(0).minutes(0);
              }, hour: function(t5) {
                return t5.seconds(0).minutes(0);
              }, minute: function(t5) {
                return t5.seconds(0);
              } }[this._options.useCurrent](n5)), this._setValue(n5, 0)), this.widget = this._getTemplate(), this._fillDow(), this._fillMonths(), this.widget.find(".timepicker-hours").hide(), this.widget.find(".timepicker-minutes").hide(), this.widget.find(".timepicker-seconds").hide(), this._update(), this._showMode(), t4(window).on("resize", { picker: this }, this._place), this.widget.on("click", "[data-action]", t4.proxy(this._doAction, this)), this.widget.on("mousedown", false), this.component && this.component.hasClass("btn") && this.component.toggleClass("active"), this._place(), this.widget.show(), this.input !== void 0 && this._options.focusOnShow && !this.input.is(":focus") && this.input.focus(), this._notifyEvent({ type: e3.Event.SHOW });
            }, c.destroy = function() {
              this.hide(), this._element.removeData(e3.DATA_KEY), this._element.removeData("date");
            }, c.disable = function() {
              this.hide(), this.component && this.component.hasClass("btn") && this.component.addClass("disabled"), this.input !== void 0 && this.input.prop("disabled", true);
            }, c.enable = function() {
              this.component && this.component.hasClass("btn") && this.component.removeClass("disabled"), this.input !== void 0 && this.input.prop("disabled", false);
            }, c.toolbarPlacement = function(t5) {
              if (arguments.length === 0)
                return this._options.toolbarPlacement;
              if (typeof t5 != "string")
                throw new TypeError("toolbarPlacement() expects a string parameter");
              if (r.indexOf(t5) === -1)
                throw new TypeError("toolbarPlacement() parameter must be one of (" + r.join(", ") + ") value");
              this._options.toolbarPlacement = t5, this.widget && (this.hide(), this.show());
            }, c.widgetPositioning = function(e4) {
              if (arguments.length === 0)
                return t4.extend({}, this._options.widgetPositioning);
              if ({}.toString.call(e4) !== "[object Object]")
                throw new TypeError("widgetPositioning() expects an object variable");
              if (e4.horizontal) {
                if (typeof e4.horizontal != "string")
                  throw new TypeError("widgetPositioning() horizontal variable must be a string");
                if (e4.horizontal = e4.horizontal.toLowerCase(), a2.indexOf(e4.horizontal) === -1)
                  throw new TypeError("widgetPositioning() expects horizontal parameter to be one of (" + a2.join(", ") + ")");
                this._options.widgetPositioning.horizontal = e4.horizontal;
              }
              if (e4.vertical) {
                if (typeof e4.vertical != "string")
                  throw new TypeError("widgetPositioning() vertical variable must be a string");
                if (e4.vertical = e4.vertical.toLowerCase(), i2.indexOf(e4.vertical) === -1)
                  throw new TypeError("widgetPositioning() expects vertical parameter to be one of (" + i2.join(", ") + ")");
                this._options.widgetPositioning.vertical = e4.vertical;
              }
              this._update();
            }, c.widgetParent = function(e4) {
              if (arguments.length === 0)
                return this._options.widgetParent;
              if (typeof e4 == "string" && (e4 = t4(e4)), e4 !== null && typeof e4 != "string" && !(e4 instanceof t4))
                throw new TypeError("widgetParent() expects a string or a jQuery object parameter");
              this._options.widgetParent = e4, this.widget && (this.hide(), this.show());
            }, c.setMultiDate = function(t5) {
              var e4 = this._options.format;
              this.clear();
              for (var n5 = 0; n5 < t5.length; n5++) {
                var i3 = moment(t5[n5], e4);
                this._setValue(i3, n5);
              }
            }, l._jQueryHandleThis = function(n5, i3, a3) {
              var r2 = t4(n5).data(e3.DATA_KEY);
              if (typeof i3 == "object" && t4.extend({}, e3.Default, i3), r2 || (r2 = new l(t4(n5), i3), t4(n5).data(e3.DATA_KEY, r2)), typeof i3 == "string") {
                if (r2[i3] === void 0)
                  throw new Error('No method named "' + i3 + '"');
                if (a3 === void 0)
                  return r2[i3]();
                i3 === "date" && (r2.isDateUpdateThroughDateOptionFromClientCode = true);
                var o3 = r2[i3](a3);
                return r2.isDateUpdateThroughDateOptionFromClientCode = false, o3;
              }
            }, l._jQueryInterface = function(t5, e4) {
              return this.length === 1 ? l._jQueryHandleThis(this[0], t5, e4) : this.each(function() {
                l._jQueryHandleThis(this, t5, e4);
              });
            }, l;
          }(e3);
          t4(document).on(e3.Event.CLICK_DATA_API, e3.Selector.DATA_TOGGLE, function() {
            var n4 = t4(this), i3 = o(n4), a3 = i3.data(e3.DATA_KEY);
            i3.length !== 0 && (a3._options.allowInputToggle && n4.is('input[data-toggle="datetimepicker"]') || s._jQueryInterface.call(i3, "toggle"));
          }).on(e3.Event.CHANGE, "." + e3.ClassName.INPUT, function(e4) {
            var n4 = o(t4(this));
            n4.length === 0 || e4.isInit || s._jQueryInterface.call(n4, "_change", e4);
          }).on(e3.Event.BLUR, "." + e3.ClassName.INPUT, function(n4) {
            var i3 = o(t4(this)), a3 = i3.data(e3.DATA_KEY);
            i3.length !== 0 && (a3._options.debug || window.debug || s._jQueryInterface.call(i3, "hide", n4));
          }).on(e3.Event.KEYDOWN, "." + e3.ClassName.INPUT, function(e4) {
            var n4 = o(t4(this));
            n4.length !== 0 && s._jQueryInterface.call(n4, "_keydown", e4);
          }).on(e3.Event.KEYUP, "." + e3.ClassName.INPUT, function(e4) {
            var n4 = o(t4(this));
            n4.length !== 0 && s._jQueryInterface.call(n4, "_keyup", e4);
          }).on(e3.Event.FOCUS, "." + e3.ClassName.INPUT, function(n4) {
            var i3 = o(t4(this)), a3 = i3.data(e3.DATA_KEY);
            i3.length !== 0 && a3._options.allowInputToggle && s._jQueryInterface.call(i3, "show", n4);
          }), t4.fn[e3.NAME] = s._jQueryInterface, t4.fn[e3.NAME].Constructor = s, t4.fn[e3.NAME].noConflict = function() {
            return t4.fn[e3.NAME] = n3, s._jQueryInterface;
          };
        }(i);
      }();
    }, 6115: function(t2) {
      var e2;
      e2 = typeof setImmediate == "function" ? function(t3) {
        setImmediate(t3);
      } : function(t3) {
        setTimeout(t3, 0);
      }, t2.exports = e2;
    } }, e = {};
    function n(i) {
      var a = e[i];
      if (a !== void 0)
        return a.exports;
      var r = e[i] = { id: i, loaded: false, exports: {} };
      return t[i].call(r.exports, r, r.exports, n), r.loaded = true, r.exports;
    }
    n.n = function(t2) {
      var e2 = t2 && t2.__esModule ? function() {
        return t2.default;
      } : function() {
        return t2;
      };
      return n.d(e2, { a: e2 }), e2;
    }, n.d = function(t2, e2) {
      for (var i in e2)
        n.o(e2, i) && !n.o(t2, i) && Object.defineProperty(t2, i, { enumerable: true, get: e2[i] });
    }, n.g = function() {
      if (typeof globalThis == "object")
        return globalThis;
      try {
        return this || new Function("return this")();
      } catch (t2) {
        if (typeof window == "object")
          return window;
      }
    }(), n.o = function(t2, e2) {
      return Object.prototype.hasOwnProperty.call(t2, e2);
    }, n.r = function(t2) {
      typeof Symbol != "undefined" && Symbol.toStringTag && Object.defineProperty(t2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(t2, "__esModule", { value: true });
    }, n.nmd = function(t2) {
      return t2.paths = [], t2.children || (t2.children = []), t2;
    }, function() {
      "use strict";
      var t2 = {};
      n.r(t2), n.d(t2, { afterMain: function() {
        return w;
      }, afterRead: function() {
        return y;
      }, afterWrite: function() {
        return k;
      }, applyStyles: function() {
        return R;
      }, arrow: function() {
        return K;
      }, auto: function() {
        return s;
      }, basePlacements: function() {
        return l;
      }, beforeMain: function() {
        return x;
      }, beforeRead: function() {
        return v;
      }, beforeWrite: function() {
        return S;
      }, bottom: function() {
        return a;
      }, clippingParents: function() {
        return u;
      }, computeStyles: function() {
        return et;
      }, createPopper: function() {
        return Mt;
      }, createPopperBase: function() {
        return It;
      }, createPopperLite: function() {
        return Rt;
      }, detectOverflow: function() {
        return vt;
      }, end: function() {
        return d;
      }, eventListeners: function() {
        return it;
      }, flip: function() {
        return bt;
      }, hide: function() {
        return _t;
      }, left: function() {
        return o;
      }, main: function() {
        return _;
      }, modifierPhases: function() {
        return D;
      }, offset: function() {
        return wt;
      }, placements: function() {
        return m;
      }, popper: function() {
        return p;
      }, popperGenerator: function() {
        return At;
      }, popperOffsets: function() {
        return St;
      }, preventOverflow: function() {
        return Ct;
      }, read: function() {
        return b;
      }, reference: function() {
        return f;
      }, right: function() {
        return r;
      }, start: function() {
        return c;
      }, top: function() {
        return i;
      }, variationPlacements: function() {
        return g;
      }, viewport: function() {
        return h;
      }, write: function() {
        return C;
      } });
      var e2 = {};
      n.r(e2), n.d(e2, { Alert: function() {
        return ye;
      }, Button: function() {
        return _e;
      }, Carousel: function() {
        return Le;
      }, Collapse: function() {
        return Ue;
      }, Dropdown: function() {
        return fn;
      }, Modal: function() {
        return Wn;
      }, Offcanvas: function() {
        return Zn;
      }, Popover: function() {
        return wi;
      }, ScrollSpy: function() {
        return Ri;
      }, Tab: function() {
        return Fi;
      }, Toast: function() {
        return Vi;
      }, Tooltip: function() {
        return bi;
      } });
      n(110), n(9371);
      var i = "top", a = "bottom", r = "right", o = "left", s = "auto", l = [i, a, r, o], c = "start", d = "end", u = "clippingParents", h = "viewport", p = "popper", f = "reference", g = l.reduce(function(t3, e3) {
        return t3.concat([e3 + "-" + c, e3 + "-" + d]);
      }, []), m = [].concat(l, [s]).reduce(function(t3, e3) {
        return t3.concat([e3, e3 + "-" + c, e3 + "-" + d]);
      }, []), v = "beforeRead", b = "read", y = "afterRead", x = "beforeMain", _ = "main", w = "afterMain", S = "beforeWrite", C = "write", k = "afterWrite", D = [v, b, y, x, _, w, S, C, k];
      function T(t3) {
        return t3 ? (t3.nodeName || "").toLowerCase() : null;
      }
      function E(t3) {
        if (t3 == null)
          return window;
        if (t3.toString() !== "[object Window]") {
          var e3 = t3.ownerDocument;
          return e3 && e3.defaultView || window;
        }
        return t3;
      }
      function A(t3) {
        return t3 instanceof E(t3).Element || t3 instanceof Element;
      }
      function I(t3) {
        return t3 instanceof E(t3).HTMLElement || t3 instanceof HTMLElement;
      }
      function M(t3) {
        return typeof ShadowRoot != "undefined" && (t3 instanceof E(t3).ShadowRoot || t3 instanceof ShadowRoot);
      }
      var R = { name: "applyStyles", enabled: true, phase: "write", fn: function(t3) {
        var e3 = t3.state;
        Object.keys(e3.elements).forEach(function(t4) {
          var n2 = e3.styles[t4] || {}, i2 = e3.attributes[t4] || {}, a2 = e3.elements[t4];
          I(a2) && T(a2) && (Object.assign(a2.style, n2), Object.keys(i2).forEach(function(t5) {
            var e4 = i2[t5];
            e4 === false ? a2.removeAttribute(t5) : a2.setAttribute(t5, e4 === true ? "" : e4);
          }));
        });
      }, effect: function(t3) {
        var e3 = t3.state, n2 = { popper: { position: e3.options.strategy, left: "0", top: "0", margin: "0" }, arrow: { position: "absolute" }, reference: {} };
        return Object.assign(e3.elements.popper.style, n2.popper), e3.styles = n2, e3.elements.arrow && Object.assign(e3.elements.arrow.style, n2.arrow), function() {
          Object.keys(e3.elements).forEach(function(t4) {
            var i2 = e3.elements[t4], a2 = e3.attributes[t4] || {}, r2 = Object.keys(e3.styles.hasOwnProperty(t4) ? e3.styles[t4] : n2[t4]).reduce(function(t5, e4) {
              return t5[e4] = "", t5;
            }, {});
            I(i2) && T(i2) && (Object.assign(i2.style, r2), Object.keys(a2).forEach(function(t5) {
              i2.removeAttribute(t5);
            }));
          });
        };
      }, requires: ["computeStyles"] };
      function P(t3) {
        return t3.split("-")[0];
      }
      var O = Math.round;
      function j(t3, e3) {
        e3 === void 0 && (e3 = false);
        var n2 = t3.getBoundingClientRect(), i2 = 1, a2 = 1;
        if (I(t3) && e3) {
          var r2 = t3.offsetHeight, o2 = t3.offsetWidth;
          o2 > 0 && (i2 = n2.width / o2 || 1), r2 > 0 && (a2 = n2.height / r2 || 1);
        }
        return { width: O(n2.width / i2), height: O(n2.height / a2), top: O(n2.top / a2), right: O(n2.right / i2), bottom: O(n2.bottom / a2), left: O(n2.left / i2), x: O(n2.left / i2), y: O(n2.top / a2) };
      }
      function N(t3) {
        var e3 = j(t3), n2 = t3.offsetWidth, i2 = t3.offsetHeight;
        return Math.abs(e3.width - n2) <= 1 && (n2 = e3.width), Math.abs(e3.height - i2) <= 1 && (i2 = e3.height), { x: t3.offsetLeft, y: t3.offsetTop, width: n2, height: i2 };
      }
      function L(t3, e3) {
        var n2 = e3.getRootNode && e3.getRootNode();
        if (t3.contains(e3))
          return true;
        if (n2 && M(n2)) {
          var i2 = e3;
          do {
            if (i2 && t3.isSameNode(i2))
              return true;
            i2 = i2.parentNode || i2.host;
          } while (i2);
        }
        return false;
      }
      function F(t3) {
        return E(t3).getComputedStyle(t3);
      }
      function H(t3) {
        return ["table", "td", "th"].indexOf(T(t3)) >= 0;
      }
      function B(t3) {
        return ((A(t3) ? t3.ownerDocument : t3.document) || window.document).documentElement;
      }
      function q(t3) {
        return T(t3) === "html" ? t3 : t3.assignedSlot || t3.parentNode || (M(t3) ? t3.host : null) || B(t3);
      }
      function z(t3) {
        return I(t3) && F(t3).position !== "fixed" ? t3.offsetParent : null;
      }
      function W(t3) {
        for (var e3 = E(t3), n2 = z(t3); n2 && H(n2) && F(n2).position === "static"; )
          n2 = z(n2);
        return n2 && (T(n2) === "html" || T(n2) === "body" && F(n2).position === "static") ? e3 : n2 || function(t4) {
          var e4 = navigator.userAgent.toLowerCase().indexOf("firefox") !== -1;
          if (navigator.userAgent.indexOf("Trident") !== -1 && I(t4) && F(t4).position === "fixed")
            return null;
          for (var n3 = q(t4); I(n3) && ["html", "body"].indexOf(T(n3)) < 0; ) {
            var i2 = F(n3);
            if (i2.transform !== "none" || i2.perspective !== "none" || i2.contain === "paint" || ["transform", "perspective"].indexOf(i2.willChange) !== -1 || e4 && i2.willChange === "filter" || e4 && i2.filter && i2.filter !== "none")
              return n3;
            n3 = n3.parentNode;
          }
          return null;
        }(t3) || e3;
      }
      function $(t3) {
        return ["top", "bottom"].indexOf(t3) >= 0 ? "x" : "y";
      }
      var V = Math.max, Y = Math.min, U = Math.round;
      function G(t3, e3, n2) {
        return V(t3, Y(e3, n2));
      }
      function X(t3) {
        return Object.assign({}, { top: 0, right: 0, bottom: 0, left: 0 }, t3);
      }
      function Z(t3, e3) {
        return e3.reduce(function(e4, n2) {
          return e4[n2] = t3, e4;
        }, {});
      }
      var K = { name: "arrow", enabled: true, phase: "main", fn: function(t3) {
        var e3, n2 = t3.state, s2 = t3.name, c2 = t3.options, d2 = n2.elements.arrow, u2 = n2.modifiersData.popperOffsets, h2 = P(n2.placement), p2 = $(h2), f2 = [o, r].indexOf(h2) >= 0 ? "height" : "width";
        if (d2 && u2) {
          var g2 = function(t4, e4) {
            return X(typeof (t4 = typeof t4 == "function" ? t4(Object.assign({}, e4.rects, { placement: e4.placement })) : t4) != "number" ? t4 : Z(t4, l));
          }(c2.padding, n2), m2 = N(d2), v2 = p2 === "y" ? i : o, b2 = p2 === "y" ? a : r, y2 = n2.rects.reference[f2] + n2.rects.reference[p2] - u2[p2] - n2.rects.popper[f2], x2 = u2[p2] - n2.rects.reference[p2], _2 = W(d2), w2 = _2 ? p2 === "y" ? _2.clientHeight || 0 : _2.clientWidth || 0 : 0, S2 = y2 / 2 - x2 / 2, C2 = g2[v2], k2 = w2 - m2[f2] - g2[b2], D2 = w2 / 2 - m2[f2] / 2 + S2, T2 = G(C2, D2, k2), E2 = p2;
          n2.modifiersData[s2] = ((e3 = {})[E2] = T2, e3.centerOffset = T2 - D2, e3);
        }
      }, effect: function(t3) {
        var e3 = t3.state, n2 = t3.options.element, i2 = n2 === void 0 ? "[data-popper-arrow]" : n2;
        i2 != null && (typeof i2 != "string" || (i2 = e3.elements.popper.querySelector(i2))) && L(e3.elements.popper, i2) && (e3.elements.arrow = i2);
      }, requires: ["popperOffsets"], requiresIfExists: ["preventOverflow"] };
      function Q(t3) {
        return t3.split("-")[1];
      }
      var J = { top: "auto", right: "auto", bottom: "auto", left: "auto" };
      function tt(t3) {
        var e3, n2 = t3.popper, s2 = t3.popperRect, l2 = t3.placement, c2 = t3.variation, u2 = t3.offsets, h2 = t3.position, p2 = t3.gpuAcceleration, f2 = t3.adaptive, g2 = t3.roundOffsets, m2 = g2 === true ? function(t4) {
          var e4 = t4.x, n3 = t4.y, i2 = window.devicePixelRatio || 1;
          return { x: U(U(e4 * i2) / i2) || 0, y: U(U(n3 * i2) / i2) || 0 };
        }(u2) : typeof g2 == "function" ? g2(u2) : u2, v2 = m2.x, b2 = v2 === void 0 ? 0 : v2, y2 = m2.y, x2 = y2 === void 0 ? 0 : y2, _2 = u2.hasOwnProperty("x"), w2 = u2.hasOwnProperty("y"), S2 = o, C2 = i, k2 = window;
        if (f2) {
          var D2 = W(n2), T2 = "clientHeight", A2 = "clientWidth";
          D2 === E(n2) && F(D2 = B(n2)).position !== "static" && h2 === "absolute" && (T2 = "scrollHeight", A2 = "scrollWidth"), D2 = D2, l2 !== i && (l2 !== o && l2 !== r || c2 !== d) || (C2 = a, x2 -= D2[T2] - s2.height, x2 *= p2 ? 1 : -1), l2 !== o && (l2 !== i && l2 !== a || c2 !== d) || (S2 = r, b2 -= D2[A2] - s2.width, b2 *= p2 ? 1 : -1);
        }
        var I2, M2 = Object.assign({ position: h2 }, f2 && J);
        return p2 ? Object.assign({}, M2, ((I2 = {})[C2] = w2 ? "0" : "", I2[S2] = _2 ? "0" : "", I2.transform = (k2.devicePixelRatio || 1) <= 1 ? "translate(" + b2 + "px, " + x2 + "px)" : "translate3d(" + b2 + "px, " + x2 + "px, 0)", I2)) : Object.assign({}, M2, ((e3 = {})[C2] = w2 ? x2 + "px" : "", e3[S2] = _2 ? b2 + "px" : "", e3.transform = "", e3));
      }
      var et = { name: "computeStyles", enabled: true, phase: "beforeWrite", fn: function(t3) {
        var e3 = t3.state, n2 = t3.options, i2 = n2.gpuAcceleration, a2 = i2 === void 0 || i2, r2 = n2.adaptive, o2 = r2 === void 0 || r2, s2 = n2.roundOffsets, l2 = s2 === void 0 || s2, c2 = { placement: P(e3.placement), variation: Q(e3.placement), popper: e3.elements.popper, popperRect: e3.rects.popper, gpuAcceleration: a2 };
        e3.modifiersData.popperOffsets != null && (e3.styles.popper = Object.assign({}, e3.styles.popper, tt(Object.assign({}, c2, { offsets: e3.modifiersData.popperOffsets, position: e3.options.strategy, adaptive: o2, roundOffsets: l2 })))), e3.modifiersData.arrow != null && (e3.styles.arrow = Object.assign({}, e3.styles.arrow, tt(Object.assign({}, c2, { offsets: e3.modifiersData.arrow, position: "absolute", adaptive: false, roundOffsets: l2 })))), e3.attributes.popper = Object.assign({}, e3.attributes.popper, { "data-popper-placement": e3.placement });
      }, data: {} }, nt = { passive: true };
      var it = { name: "eventListeners", enabled: true, phase: "write", fn: function() {
      }, effect: function(t3) {
        var e3 = t3.state, n2 = t3.instance, i2 = t3.options, a2 = i2.scroll, r2 = a2 === void 0 || a2, o2 = i2.resize, s2 = o2 === void 0 || o2, l2 = E(e3.elements.popper), c2 = [].concat(e3.scrollParents.reference, e3.scrollParents.popper);
        return r2 && c2.forEach(function(t4) {
          t4.addEventListener("scroll", n2.update, nt);
        }), s2 && l2.addEventListener("resize", n2.update, nt), function() {
          r2 && c2.forEach(function(t4) {
            t4.removeEventListener("scroll", n2.update, nt);
          }), s2 && l2.removeEventListener("resize", n2.update, nt);
        };
      }, data: {} }, at = { left: "right", right: "left", bottom: "top", top: "bottom" };
      function rt(t3) {
        return t3.replace(/left|right|bottom|top/g, function(t4) {
          return at[t4];
        });
      }
      var ot = { start: "end", end: "start" };
      function st(t3) {
        return t3.replace(/start|end/g, function(t4) {
          return ot[t4];
        });
      }
      function lt(t3) {
        var e3 = E(t3);
        return { scrollLeft: e3.pageXOffset, scrollTop: e3.pageYOffset };
      }
      function ct(t3) {
        return j(B(t3)).left + lt(t3).scrollLeft;
      }
      function dt(t3) {
        var e3 = F(t3), n2 = e3.overflow, i2 = e3.overflowX, a2 = e3.overflowY;
        return /auto|scroll|overlay|hidden/.test(n2 + a2 + i2);
      }
      function ut(t3) {
        return ["html", "body", "#document"].indexOf(T(t3)) >= 0 ? t3.ownerDocument.body : I(t3) && dt(t3) ? t3 : ut(q(t3));
      }
      function ht(t3, e3) {
        var n2;
        e3 === void 0 && (e3 = []);
        var i2 = ut(t3), a2 = i2 === ((n2 = t3.ownerDocument) == null ? void 0 : n2.body), r2 = E(i2), o2 = a2 ? [r2].concat(r2.visualViewport || [], dt(i2) ? i2 : []) : i2, s2 = e3.concat(o2);
        return a2 ? s2 : s2.concat(ht(q(o2)));
      }
      function pt(t3) {
        return Object.assign({}, t3, { left: t3.x, top: t3.y, right: t3.x + t3.width, bottom: t3.y + t3.height });
      }
      function ft(t3, e3) {
        return e3 === h ? pt(function(t4) {
          var e4 = E(t4), n2 = B(t4), i2 = e4.visualViewport, a2 = n2.clientWidth, r2 = n2.clientHeight, o2 = 0, s2 = 0;
          return i2 && (a2 = i2.width, r2 = i2.height, /^((?!chrome|android).)*safari/i.test(navigator.userAgent) || (o2 = i2.offsetLeft, s2 = i2.offsetTop)), { width: a2, height: r2, x: o2 + ct(t4), y: s2 };
        }(t3)) : I(e3) ? function(t4) {
          var e4 = j(t4);
          return e4.top = e4.top + t4.clientTop, e4.left = e4.left + t4.clientLeft, e4.bottom = e4.top + t4.clientHeight, e4.right = e4.left + t4.clientWidth, e4.width = t4.clientWidth, e4.height = t4.clientHeight, e4.x = e4.left, e4.y = e4.top, e4;
        }(e3) : pt(function(t4) {
          var e4, n2 = B(t4), i2 = lt(t4), a2 = (e4 = t4.ownerDocument) == null ? void 0 : e4.body, r2 = V(n2.scrollWidth, n2.clientWidth, a2 ? a2.scrollWidth : 0, a2 ? a2.clientWidth : 0), o2 = V(n2.scrollHeight, n2.clientHeight, a2 ? a2.scrollHeight : 0, a2 ? a2.clientHeight : 0), s2 = -i2.scrollLeft + ct(t4), l2 = -i2.scrollTop;
          return F(a2 || n2).direction === "rtl" && (s2 += V(n2.clientWidth, a2 ? a2.clientWidth : 0) - r2), { width: r2, height: o2, x: s2, y: l2 };
        }(B(t3)));
      }
      function gt(t3, e3, n2) {
        var i2 = e3 === "clippingParents" ? function(t4) {
          var e4 = ht(q(t4)), n3 = ["absolute", "fixed"].indexOf(F(t4).position) >= 0 && I(t4) ? W(t4) : t4;
          return A(n3) ? e4.filter(function(t5) {
            return A(t5) && L(t5, n3) && T(t5) !== "body";
          }) : [];
        }(t3) : [].concat(e3), a2 = [].concat(i2, [n2]), r2 = a2[0], o2 = a2.reduce(function(e4, n3) {
          var i3 = ft(t3, n3);
          return e4.top = V(i3.top, e4.top), e4.right = Y(i3.right, e4.right), e4.bottom = Y(i3.bottom, e4.bottom), e4.left = V(i3.left, e4.left), e4;
        }, ft(t3, r2));
        return o2.width = o2.right - o2.left, o2.height = o2.bottom - o2.top, o2.x = o2.left, o2.y = o2.top, o2;
      }
      function mt(t3) {
        var e3, n2 = t3.reference, s2 = t3.element, l2 = t3.placement, u2 = l2 ? P(l2) : null, h2 = l2 ? Q(l2) : null, p2 = n2.x + n2.width / 2 - s2.width / 2, f2 = n2.y + n2.height / 2 - s2.height / 2;
        switch (u2) {
          case i:
            e3 = { x: p2, y: n2.y - s2.height };
            break;
          case a:
            e3 = { x: p2, y: n2.y + n2.height };
            break;
          case r:
            e3 = { x: n2.x + n2.width, y: f2 };
            break;
          case o:
            e3 = { x: n2.x - s2.width, y: f2 };
            break;
          default:
            e3 = { x: n2.x, y: n2.y };
        }
        var g2 = u2 ? $(u2) : null;
        if (g2 != null) {
          var m2 = g2 === "y" ? "height" : "width";
          switch (h2) {
            case c:
              e3[g2] = e3[g2] - (n2[m2] / 2 - s2[m2] / 2);
              break;
            case d:
              e3[g2] = e3[g2] + (n2[m2] / 2 - s2[m2] / 2);
          }
        }
        return e3;
      }
      function vt(t3, e3) {
        e3 === void 0 && (e3 = {});
        var n2 = e3, o2 = n2.placement, s2 = o2 === void 0 ? t3.placement : o2, c2 = n2.boundary, d2 = c2 === void 0 ? u : c2, g2 = n2.rootBoundary, m2 = g2 === void 0 ? h : g2, v2 = n2.elementContext, b2 = v2 === void 0 ? p : v2, y2 = n2.altBoundary, x2 = y2 !== void 0 && y2, _2 = n2.padding, w2 = _2 === void 0 ? 0 : _2, S2 = X(typeof w2 != "number" ? w2 : Z(w2, l)), C2 = b2 === p ? f : p, k2 = t3.rects.popper, D2 = t3.elements[x2 ? C2 : b2], T2 = gt(A(D2) ? D2 : D2.contextElement || B(t3.elements.popper), d2, m2), E2 = j(t3.elements.reference), I2 = mt({ reference: E2, element: k2, strategy: "absolute", placement: s2 }), M2 = pt(Object.assign({}, k2, I2)), R2 = b2 === p ? M2 : E2, P2 = { top: T2.top - R2.top + S2.top, bottom: R2.bottom - T2.bottom + S2.bottom, left: T2.left - R2.left + S2.left, right: R2.right - T2.right + S2.right }, O2 = t3.modifiersData.offset;
        if (b2 === p && O2) {
          var N2 = O2[s2];
          Object.keys(P2).forEach(function(t4) {
            var e4 = [r, a].indexOf(t4) >= 0 ? 1 : -1, n3 = [i, a].indexOf(t4) >= 0 ? "y" : "x";
            P2[t4] += N2[n3] * e4;
          });
        }
        return P2;
      }
      var bt = { name: "flip", enabled: true, phase: "main", fn: function(t3) {
        var e3 = t3.state, n2 = t3.options, d2 = t3.name;
        if (!e3.modifiersData[d2]._skip) {
          for (var u2 = n2.mainAxis, h2 = u2 === void 0 || u2, p2 = n2.altAxis, f2 = p2 === void 0 || p2, v2 = n2.fallbackPlacements, b2 = n2.padding, y2 = n2.boundary, x2 = n2.rootBoundary, _2 = n2.altBoundary, w2 = n2.flipVariations, S2 = w2 === void 0 || w2, C2 = n2.allowedAutoPlacements, k2 = e3.options.placement, D2 = P(k2), T2 = v2 || (D2 === k2 || !S2 ? [rt(k2)] : function(t4) {
            if (P(t4) === s)
              return [];
            var e4 = rt(t4);
            return [st(t4), e4, st(e4)];
          }(k2)), E2 = [k2].concat(T2).reduce(function(t4, n3) {
            return t4.concat(P(n3) === s ? function(t5, e4) {
              e4 === void 0 && (e4 = {});
              var n4 = e4, i2 = n4.placement, a2 = n4.boundary, r2 = n4.rootBoundary, o2 = n4.padding, s2 = n4.flipVariations, c2 = n4.allowedAutoPlacements, d3 = c2 === void 0 ? m : c2, u3 = Q(i2), h3 = u3 ? s2 ? g : g.filter(function(t6) {
                return Q(t6) === u3;
              }) : l, p3 = h3.filter(function(t6) {
                return d3.indexOf(t6) >= 0;
              });
              p3.length === 0 && (p3 = h3);
              var f3 = p3.reduce(function(e5, n5) {
                return e5[n5] = vt(t5, { placement: n5, boundary: a2, rootBoundary: r2, padding: o2 })[P(n5)], e5;
              }, {});
              return Object.keys(f3).sort(function(t6, e5) {
                return f3[t6] - f3[e5];
              });
            }(e3, { placement: n3, boundary: y2, rootBoundary: x2, padding: b2, flipVariations: S2, allowedAutoPlacements: C2 }) : n3);
          }, []), A2 = e3.rects.reference, I2 = e3.rects.popper, M2 = /* @__PURE__ */ new Map(), R2 = true, O2 = E2[0], j2 = 0; j2 < E2.length; j2++) {
            var N2 = E2[j2], L2 = P(N2), F2 = Q(N2) === c, H2 = [i, a].indexOf(L2) >= 0, B2 = H2 ? "width" : "height", q2 = vt(e3, { placement: N2, boundary: y2, rootBoundary: x2, altBoundary: _2, padding: b2 }), z2 = H2 ? F2 ? r : o : F2 ? a : i;
            A2[B2] > I2[B2] && (z2 = rt(z2));
            var W2 = rt(z2), $2 = [];
            if (h2 && $2.push(q2[L2] <= 0), f2 && $2.push(q2[z2] <= 0, q2[W2] <= 0), $2.every(function(t4) {
              return t4;
            })) {
              O2 = N2, R2 = false;
              break;
            }
            M2.set(N2, $2);
          }
          if (R2)
            for (var V2 = function(t4) {
              var e4 = E2.find(function(e5) {
                var n3 = M2.get(e5);
                if (n3)
                  return n3.slice(0, t4).every(function(t5) {
                    return t5;
                  });
              });
              if (e4)
                return O2 = e4, "break";
            }, Y2 = S2 ? 3 : 1; Y2 > 0; Y2--) {
              if (V2(Y2) === "break")
                break;
            }
          e3.placement !== O2 && (e3.modifiersData[d2]._skip = true, e3.placement = O2, e3.reset = true);
        }
      }, requiresIfExists: ["offset"], data: { _skip: false } };
      function yt(t3, e3, n2) {
        return n2 === void 0 && (n2 = { x: 0, y: 0 }), { top: t3.top - e3.height - n2.y, right: t3.right - e3.width + n2.x, bottom: t3.bottom - e3.height + n2.y, left: t3.left - e3.width - n2.x };
      }
      function xt(t3) {
        return [i, r, a, o].some(function(e3) {
          return t3[e3] >= 0;
        });
      }
      var _t = { name: "hide", enabled: true, phase: "main", requiresIfExists: ["preventOverflow"], fn: function(t3) {
        var e3 = t3.state, n2 = t3.name, i2 = e3.rects.reference, a2 = e3.rects.popper, r2 = e3.modifiersData.preventOverflow, o2 = vt(e3, { elementContext: "reference" }), s2 = vt(e3, { altBoundary: true }), l2 = yt(o2, i2), c2 = yt(s2, a2, r2), d2 = xt(l2), u2 = xt(c2);
        e3.modifiersData[n2] = { referenceClippingOffsets: l2, popperEscapeOffsets: c2, isReferenceHidden: d2, hasPopperEscaped: u2 }, e3.attributes.popper = Object.assign({}, e3.attributes.popper, { "data-popper-reference-hidden": d2, "data-popper-escaped": u2 });
      } };
      var wt = { name: "offset", enabled: true, phase: "main", requires: ["popperOffsets"], fn: function(t3) {
        var e3 = t3.state, n2 = t3.options, a2 = t3.name, s2 = n2.offset, l2 = s2 === void 0 ? [0, 0] : s2, c2 = m.reduce(function(t4, n3) {
          return t4[n3] = function(t5, e4, n4) {
            var a3 = P(t5), s3 = [o, i].indexOf(a3) >= 0 ? -1 : 1, l3 = typeof n4 == "function" ? n4(Object.assign({}, e4, { placement: t5 })) : n4, c3 = l3[0], d3 = l3[1];
            return c3 = c3 || 0, d3 = (d3 || 0) * s3, [o, r].indexOf(a3) >= 0 ? { x: d3, y: c3 } : { x: c3, y: d3 };
          }(n3, e3.rects, l2), t4;
        }, {}), d2 = c2[e3.placement], u2 = d2.x, h2 = d2.y;
        e3.modifiersData.popperOffsets != null && (e3.modifiersData.popperOffsets.x += u2, e3.modifiersData.popperOffsets.y += h2), e3.modifiersData[a2] = c2;
      } };
      var St = { name: "popperOffsets", enabled: true, phase: "read", fn: function(t3) {
        var e3 = t3.state, n2 = t3.name;
        e3.modifiersData[n2] = mt({ reference: e3.rects.reference, element: e3.rects.popper, strategy: "absolute", placement: e3.placement });
      }, data: {} };
      var Ct = { name: "preventOverflow", enabled: true, phase: "main", fn: function(t3) {
        var e3 = t3.state, n2 = t3.options, s2 = t3.name, l2 = n2.mainAxis, d2 = l2 === void 0 || l2, u2 = n2.altAxis, h2 = u2 !== void 0 && u2, p2 = n2.boundary, f2 = n2.rootBoundary, g2 = n2.altBoundary, m2 = n2.padding, v2 = n2.tether, b2 = v2 === void 0 || v2, y2 = n2.tetherOffset, x2 = y2 === void 0 ? 0 : y2, _2 = vt(e3, { boundary: p2, rootBoundary: f2, padding: m2, altBoundary: g2 }), w2 = P(e3.placement), S2 = Q(e3.placement), C2 = !S2, k2 = $(w2), D2 = k2 === "x" ? "y" : "x", T2 = e3.modifiersData.popperOffsets, E2 = e3.rects.reference, A2 = e3.rects.popper, I2 = typeof x2 == "function" ? x2(Object.assign({}, e3.rects, { placement: e3.placement })) : x2, M2 = { x: 0, y: 0 };
        if (T2) {
          if (d2 || h2) {
            var R2 = k2 === "y" ? i : o, O2 = k2 === "y" ? a : r, j2 = k2 === "y" ? "height" : "width", L2 = T2[k2], F2 = T2[k2] + _2[R2], H2 = T2[k2] - _2[O2], B2 = b2 ? -A2[j2] / 2 : 0, q2 = S2 === c ? E2[j2] : A2[j2], z2 = S2 === c ? -A2[j2] : -E2[j2], U2 = e3.elements.arrow, X2 = b2 && U2 ? N(U2) : { width: 0, height: 0 }, Z2 = e3.modifiersData["arrow#persistent"] ? e3.modifiersData["arrow#persistent"].padding : { top: 0, right: 0, bottom: 0, left: 0 }, K2 = Z2[R2], J2 = Z2[O2], tt2 = G(0, E2[j2], X2[j2]), et2 = C2 ? E2[j2] / 2 - B2 - tt2 - K2 - I2 : q2 - tt2 - K2 - I2, nt2 = C2 ? -E2[j2] / 2 + B2 + tt2 + J2 + I2 : z2 + tt2 + J2 + I2, it2 = e3.elements.arrow && W(e3.elements.arrow), at2 = it2 ? k2 === "y" ? it2.clientTop || 0 : it2.clientLeft || 0 : 0, rt2 = e3.modifiersData.offset ? e3.modifiersData.offset[e3.placement][k2] : 0, ot2 = T2[k2] + et2 - rt2 - at2, st2 = T2[k2] + nt2 - rt2;
            if (d2) {
              var lt2 = G(b2 ? Y(F2, ot2) : F2, L2, b2 ? V(H2, st2) : H2);
              T2[k2] = lt2, M2[k2] = lt2 - L2;
            }
            if (h2) {
              var ct2 = k2 === "x" ? i : o, dt2 = k2 === "x" ? a : r, ut2 = T2[D2], ht2 = ut2 + _2[ct2], pt2 = ut2 - _2[dt2], ft2 = G(b2 ? Y(ht2, ot2) : ht2, ut2, b2 ? V(pt2, st2) : pt2);
              T2[D2] = ft2, M2[D2] = ft2 - ut2;
            }
          }
          e3.modifiersData[s2] = M2;
        }
      }, requiresIfExists: ["offset"] };
      function kt(t3, e3, n2) {
        n2 === void 0 && (n2 = false);
        var i2, a2, r2 = I(e3), o2 = I(e3) && function(t4) {
          var e4 = t4.getBoundingClientRect(), n3 = e4.width / t4.offsetWidth || 1, i3 = e4.height / t4.offsetHeight || 1;
          return n3 !== 1 || i3 !== 1;
        }(e3), s2 = B(e3), l2 = j(t3, o2), c2 = { scrollLeft: 0, scrollTop: 0 }, d2 = { x: 0, y: 0 };
        return (r2 || !r2 && !n2) && ((T(e3) !== "body" || dt(s2)) && (c2 = (i2 = e3) !== E(i2) && I(i2) ? { scrollLeft: (a2 = i2).scrollLeft, scrollTop: a2.scrollTop } : lt(i2)), I(e3) ? ((d2 = j(e3, true)).x += e3.clientLeft, d2.y += e3.clientTop) : s2 && (d2.x = ct(s2))), { x: l2.left + c2.scrollLeft - d2.x, y: l2.top + c2.scrollTop - d2.y, width: l2.width, height: l2.height };
      }
      function Dt(t3) {
        var e3 = /* @__PURE__ */ new Map(), n2 = /* @__PURE__ */ new Set(), i2 = [];
        function a2(t4) {
          n2.add(t4.name), [].concat(t4.requires || [], t4.requiresIfExists || []).forEach(function(t5) {
            if (!n2.has(t5)) {
              var i3 = e3.get(t5);
              i3 && a2(i3);
            }
          }), i2.push(t4);
        }
        return t3.forEach(function(t4) {
          e3.set(t4.name, t4);
        }), t3.forEach(function(t4) {
          n2.has(t4.name) || a2(t4);
        }), i2;
      }
      var Tt = { placement: "bottom", modifiers: [], strategy: "absolute" };
      function Et() {
        for (var t3 = arguments.length, e3 = new Array(t3), n2 = 0; n2 < t3; n2++)
          e3[n2] = arguments[n2];
        return !e3.some(function(t4) {
          return !(t4 && typeof t4.getBoundingClientRect == "function");
        });
      }
      function At(t3) {
        t3 === void 0 && (t3 = {});
        var e3 = t3, n2 = e3.defaultModifiers, i2 = n2 === void 0 ? [] : n2, a2 = e3.defaultOptions, r2 = a2 === void 0 ? Tt : a2;
        return function(t4, e4, n3) {
          n3 === void 0 && (n3 = r2);
          var a3, o2, s2 = { placement: "bottom", orderedModifiers: [], options: Object.assign({}, Tt, r2), modifiersData: {}, elements: { reference: t4, popper: e4 }, attributes: {}, styles: {} }, l2 = [], c2 = false, d2 = { state: s2, setOptions: function(n4) {
            var a4 = typeof n4 == "function" ? n4(s2.options) : n4;
            u2(), s2.options = Object.assign({}, r2, s2.options, a4), s2.scrollParents = { reference: A(t4) ? ht(t4) : t4.contextElement ? ht(t4.contextElement) : [], popper: ht(e4) };
            var o3 = function(t5) {
              var e5 = Dt(t5);
              return D.reduce(function(t6, n5) {
                return t6.concat(e5.filter(function(t7) {
                  return t7.phase === n5;
                }));
              }, []);
            }(function(t5) {
              var e5 = t5.reduce(function(t6, e6) {
                var n5 = t6[e6.name];
                return t6[e6.name] = n5 ? Object.assign({}, n5, e6, { options: Object.assign({}, n5.options, e6.options), data: Object.assign({}, n5.data, e6.data) }) : e6, t6;
              }, {});
              return Object.keys(e5).map(function(t6) {
                return e5[t6];
              });
            }([].concat(i2, s2.options.modifiers)));
            return s2.orderedModifiers = o3.filter(function(t5) {
              return t5.enabled;
            }), s2.orderedModifiers.forEach(function(t5) {
              var e5 = t5.name, n5 = t5.options, i3 = n5 === void 0 ? {} : n5, a5 = t5.effect;
              if (typeof a5 == "function") {
                var r3 = a5({ state: s2, name: e5, instance: d2, options: i3 }), o4 = function() {
                };
                l2.push(r3 || o4);
              }
            }), d2.update();
          }, forceUpdate: function() {
            if (!c2) {
              var t5 = s2.elements, e5 = t5.reference, n4 = t5.popper;
              if (Et(e5, n4)) {
                s2.rects = { reference: kt(e5, W(n4), s2.options.strategy === "fixed"), popper: N(n4) }, s2.reset = false, s2.placement = s2.options.placement, s2.orderedModifiers.forEach(function(t6) {
                  return s2.modifiersData[t6.name] = Object.assign({}, t6.data);
                });
                for (var i3 = 0; i3 < s2.orderedModifiers.length; i3++)
                  if (s2.reset !== true) {
                    var a4 = s2.orderedModifiers[i3], r3 = a4.fn, o3 = a4.options, l3 = o3 === void 0 ? {} : o3, u3 = a4.name;
                    typeof r3 == "function" && (s2 = r3({ state: s2, options: l3, name: u3, instance: d2 }) || s2);
                  } else
                    s2.reset = false, i3 = -1;
              }
            }
          }, update: (a3 = function() {
            return new Promise(function(t5) {
              d2.forceUpdate(), t5(s2);
            });
          }, function() {
            return o2 || (o2 = new Promise(function(t5) {
              Promise.resolve().then(function() {
                o2 = void 0, t5(a3());
              });
            })), o2;
          }), destroy: function() {
            u2(), c2 = true;
          } };
          if (!Et(t4, e4))
            return d2;
          function u2() {
            l2.forEach(function(t5) {
              return t5();
            }), l2 = [];
          }
          return d2.setOptions(n3).then(function(t5) {
            !c2 && n3.onFirstUpdate && n3.onFirstUpdate(t5);
          }), d2;
        };
      }
      var It = At(), Mt = At({ defaultModifiers: [it, St, et, R, wt, bt, Ct, K, _t] }), Rt = At({ defaultModifiers: [it, St, et, R] });
      const Pt = "transitionend", Ot = (t3) => {
        let e3 = t3.getAttribute("data-bs-target");
        if (!e3 || e3 === "#") {
          let n2 = t3.getAttribute("href");
          if (!n2 || !n2.includes("#") && !n2.startsWith("."))
            return null;
          n2.includes("#") && !n2.startsWith("#") && (n2 = `#${n2.split("#")[1]}`), e3 = n2 && n2 !== "#" ? n2.trim() : null;
        }
        return e3;
      }, jt = (t3) => {
        const e3 = Ot(t3);
        return e3 && document.querySelector(e3) ? e3 : null;
      }, Nt = (t3) => {
        const e3 = Ot(t3);
        return e3 ? document.querySelector(e3) : null;
      }, Lt = (t3) => {
        t3.dispatchEvent(new Event(Pt));
      }, Ft = (t3) => !(!t3 || typeof t3 != "object") && (t3.jquery !== void 0 && (t3 = t3[0]), t3.nodeType !== void 0), Ht = (t3) => Ft(t3) ? t3.jquery ? t3[0] : t3 : typeof t3 == "string" && t3.length > 0 ? document.querySelector(t3) : null, Bt = (t3, e3, n2) => {
        Object.keys(n2).forEach((i2) => {
          const a2 = n2[i2], r2 = e3[i2], o2 = r2 && Ft(r2) ? "element" : (s2 = r2) == null ? `${s2}` : {}.toString.call(s2).match(/\s([a-z]+)/i)[1].toLowerCase();
          var s2;
          if (!new RegExp(a2).test(o2))
            throw new TypeError(`${t3.toUpperCase()}: Option "${i2}" provided type "${o2}" but expected type "${a2}".`);
        });
      }, qt = (t3) => !(!Ft(t3) || t3.getClientRects().length === 0) && getComputedStyle(t3).getPropertyValue("visibility") === "visible", zt = (t3) => !t3 || t3.nodeType !== Node.ELEMENT_NODE || (!!t3.classList.contains("disabled") || (t3.disabled !== void 0 ? t3.disabled : t3.hasAttribute("disabled") && t3.getAttribute("disabled") !== "false")), Wt = (t3) => {
        if (!document.documentElement.attachShadow)
          return null;
        if (typeof t3.getRootNode == "function") {
          const e3 = t3.getRootNode();
          return e3 instanceof ShadowRoot ? e3 : null;
        }
        return t3 instanceof ShadowRoot ? t3 : t3.parentNode ? Wt(t3.parentNode) : null;
      }, $t = () => {
      }, Vt = (t3) => {
        t3.offsetHeight;
      }, Yt = () => {
        const { jQuery: t3 } = window;
        return t3 && !document.body.hasAttribute("data-bs-no-jquery") ? t3 : null;
      }, Ut = [], Gt = () => document.documentElement.dir === "rtl", Xt = (t3) => {
        var e3;
        e3 = () => {
          const e4 = Yt();
          if (e4) {
            const n2 = t3.NAME, i2 = e4.fn[n2];
            e4.fn[n2] = t3.jQueryInterface, e4.fn[n2].Constructor = t3, e4.fn[n2].noConflict = () => (e4.fn[n2] = i2, t3.jQueryInterface);
          }
        }, document.readyState === "loading" ? (Ut.length || document.addEventListener("DOMContentLoaded", () => {
          Ut.forEach((t4) => t4());
        }), Ut.push(e3)) : e3();
      }, Zt = (t3) => {
        typeof t3 == "function" && t3();
      }, Kt = (t3, e3, n2 = true) => {
        if (!n2)
          return void Zt(t3);
        const i2 = ((t4) => {
          if (!t4)
            return 0;
          let { transitionDuration: e4, transitionDelay: n3 } = window.getComputedStyle(t4);
          const i3 = Number.parseFloat(e4), a3 = Number.parseFloat(n3);
          return i3 || a3 ? (e4 = e4.split(",")[0], n3 = n3.split(",")[0], 1e3 * (Number.parseFloat(e4) + Number.parseFloat(n3))) : 0;
        })(e3) + 5;
        let a2 = false;
        const r2 = ({ target: n3 }) => {
          n3 === e3 && (a2 = true, e3.removeEventListener(Pt, r2), Zt(t3));
        };
        e3.addEventListener(Pt, r2), setTimeout(() => {
          a2 || Lt(e3);
        }, i2);
      }, Qt = (t3, e3, n2, i2) => {
        let a2 = t3.indexOf(e3);
        if (a2 === -1)
          return t3[!n2 && i2 ? t3.length - 1 : 0];
        const r2 = t3.length;
        return a2 += n2 ? 1 : -1, i2 && (a2 = (a2 + r2) % r2), t3[Math.max(0, Math.min(a2, r2 - 1))];
      }, Jt = /[^.]*(?=\..*)\.|.*/, te = /\..*/, ee = /::\d+$/, ne = {};
      let ie = 1;
      const ae = { mouseenter: "mouseover", mouseleave: "mouseout" }, re = /^(mouseenter|mouseleave)/i, oe = /* @__PURE__ */ new Set(["click", "dblclick", "mouseup", "mousedown", "contextmenu", "mousewheel", "DOMMouseScroll", "mouseover", "mouseout", "mousemove", "selectstart", "selectend", "keydown", "keypress", "keyup", "orientationchange", "touchstart", "touchmove", "touchend", "touchcancel", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointercancel", "gesturestart", "gesturechange", "gestureend", "focus", "blur", "change", "reset", "select", "submit", "focusin", "focusout", "load", "unload", "beforeunload", "resize", "move", "DOMContentLoaded", "readystatechange", "error", "abort", "scroll"]);
      function se(t3, e3) {
        return e3 && `${e3}::${ie++}` || t3.uidEvent || ie++;
      }
      function le(t3) {
        const e3 = se(t3);
        return t3.uidEvent = e3, ne[e3] = ne[e3] || {}, ne[e3];
      }
      function ce(t3, e3, n2 = null) {
        const i2 = Object.keys(t3);
        for (let a2 = 0, r2 = i2.length; a2 < r2; a2++) {
          const r3 = t3[i2[a2]];
          if (r3.originalHandler === e3 && r3.delegationSelector === n2)
            return r3;
        }
        return null;
      }
      function de(t3, e3, n2) {
        const i2 = typeof e3 == "string", a2 = i2 ? n2 : e3;
        let r2 = pe(t3);
        return oe.has(r2) || (r2 = t3), [i2, a2, r2];
      }
      function ue(t3, e3, n2, i2, a2) {
        if (typeof e3 != "string" || !t3)
          return;
        if (n2 || (n2 = i2, i2 = null), re.test(e3)) {
          const t4 = (t5) => function(e4) {
            if (!e4.relatedTarget || e4.relatedTarget !== e4.delegateTarget && !e4.delegateTarget.contains(e4.relatedTarget))
              return t5.call(this, e4);
          };
          i2 ? i2 = t4(i2) : n2 = t4(n2);
        }
        const [r2, o2, s2] = de(e3, n2, i2), l2 = le(t3), c2 = l2[s2] || (l2[s2] = {}), d2 = ce(c2, o2, r2 ? n2 : null);
        if (d2)
          return void (d2.oneOff = d2.oneOff && a2);
        const u2 = se(o2, e3.replace(Jt, "")), h2 = r2 ? function(t4, e4, n3) {
          return function i3(a3) {
            const r3 = t4.querySelectorAll(e4);
            for (let { target: o3 } = a3; o3 && o3 !== this; o3 = o3.parentNode)
              for (let s3 = r3.length; s3--; )
                if (r3[s3] === o3)
                  return a3.delegateTarget = o3, i3.oneOff && fe.off(t4, a3.type, e4, n3), n3.apply(o3, [a3]);
            return null;
          };
        }(t3, n2, i2) : function(t4, e4) {
          return function n3(i3) {
            return i3.delegateTarget = t4, n3.oneOff && fe.off(t4, i3.type, e4), e4.apply(t4, [i3]);
          };
        }(t3, n2);
        h2.delegationSelector = r2 ? n2 : null, h2.originalHandler = o2, h2.oneOff = a2, h2.uidEvent = u2, c2[u2] = h2, t3.addEventListener(s2, h2, r2);
      }
      function he(t3, e3, n2, i2, a2) {
        const r2 = ce(e3[n2], i2, a2);
        r2 && (t3.removeEventListener(n2, r2, Boolean(a2)), delete e3[n2][r2.uidEvent]);
      }
      function pe(t3) {
        return t3 = t3.replace(te, ""), ae[t3] || t3;
      }
      const fe = { on(t3, e3, n2, i2) {
        ue(t3, e3, n2, i2, false);
      }, one(t3, e3, n2, i2) {
        ue(t3, e3, n2, i2, true);
      }, off(t3, e3, n2, i2) {
        if (typeof e3 != "string" || !t3)
          return;
        const [a2, r2, o2] = de(e3, n2, i2), s2 = o2 !== e3, l2 = le(t3), c2 = e3.startsWith(".");
        if (r2 !== void 0) {
          if (!l2 || !l2[o2])
            return;
          return void he(t3, l2, o2, r2, a2 ? n2 : null);
        }
        c2 && Object.keys(l2).forEach((n3) => {
          !function(t4, e4, n4, i3) {
            const a3 = e4[n4] || {};
            Object.keys(a3).forEach((r3) => {
              if (r3.includes(i3)) {
                const i4 = a3[r3];
                he(t4, e4, n4, i4.originalHandler, i4.delegationSelector);
              }
            });
          }(t3, l2, n3, e3.slice(1));
        });
        const d2 = l2[o2] || {};
        Object.keys(d2).forEach((n3) => {
          const i3 = n3.replace(ee, "");
          if (!s2 || e3.includes(i3)) {
            const e4 = d2[n3];
            he(t3, l2, o2, e4.originalHandler, e4.delegationSelector);
          }
        });
      }, trigger(t3, e3, n2) {
        if (typeof e3 != "string" || !t3)
          return null;
        const i2 = Yt(), a2 = pe(e3), r2 = e3 !== a2, o2 = oe.has(a2);
        let s2, l2 = true, c2 = true, d2 = false, u2 = null;
        return r2 && i2 && (s2 = i2.Event(e3, n2), i2(t3).trigger(s2), l2 = !s2.isPropagationStopped(), c2 = !s2.isImmediatePropagationStopped(), d2 = s2.isDefaultPrevented()), o2 ? (u2 = document.createEvent("HTMLEvents"), u2.initEvent(a2, l2, true)) : u2 = new CustomEvent(e3, { bubbles: l2, cancelable: true }), n2 !== void 0 && Object.keys(n2).forEach((t4) => {
          Object.defineProperty(u2, t4, { get: () => n2[t4] });
        }), d2 && u2.preventDefault(), c2 && t3.dispatchEvent(u2), u2.defaultPrevented && s2 !== void 0 && s2.preventDefault(), u2;
      } }, ge = /* @__PURE__ */ new Map();
      var me = { set(t3, e3, n2) {
        ge.has(t3) || ge.set(t3, /* @__PURE__ */ new Map());
        const i2 = ge.get(t3);
        i2.has(e3) || i2.size === 0 ? i2.set(e3, n2) : console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(i2.keys())[0]}.`);
      }, get: (t3, e3) => ge.has(t3) && ge.get(t3).get(e3) || null, remove(t3, e3) {
        if (!ge.has(t3))
          return;
        const n2 = ge.get(t3);
        n2.delete(e3), n2.size === 0 && ge.delete(t3);
      } };
      class ve {
        constructor(t3) {
          (t3 = Ht(t3)) && (this._element = t3, me.set(this._element, this.constructor.DATA_KEY, this));
        }
        dispose() {
          me.remove(this._element, this.constructor.DATA_KEY), fe.off(this._element, this.constructor.EVENT_KEY), Object.getOwnPropertyNames(this).forEach((t3) => {
            this[t3] = null;
          });
        }
        _queueCallback(t3, e3, n2 = true) {
          Kt(t3, e3, n2);
        }
        static getInstance(t3) {
          return me.get(Ht(t3), this.DATA_KEY);
        }
        static getOrCreateInstance(t3, e3 = {}) {
          return this.getInstance(t3) || new this(t3, typeof e3 == "object" ? e3 : null);
        }
        static get VERSION() {
          return "5.1.1";
        }
        static get NAME() {
          throw new Error('You have to implement the static method "NAME", for each component!');
        }
        static get DATA_KEY() {
          return `bs.${this.NAME}`;
        }
        static get EVENT_KEY() {
          return `.${this.DATA_KEY}`;
        }
      }
      const be = (t3, e3 = "hide") => {
        const n2 = `click.dismiss${t3.EVENT_KEY}`, i2 = t3.NAME;
        fe.on(document, n2, `[data-bs-dismiss="${i2}"]`, function(n3) {
          if (["A", "AREA"].includes(this.tagName) && n3.preventDefault(), zt(this))
            return;
          const a2 = Nt(this) || this.closest(`.${i2}`);
          t3.getOrCreateInstance(a2)[e3]();
        });
      };
      class ye extends ve {
        static get NAME() {
          return "alert";
        }
        close() {
          if (fe.trigger(this._element, "close.bs.alert").defaultPrevented)
            return;
          this._element.classList.remove("show");
          const t3 = this._element.classList.contains("fade");
          this._queueCallback(() => this._destroyElement(), this._element, t3);
        }
        _destroyElement() {
          this._element.remove(), fe.trigger(this._element, "closed.bs.alert"), this.dispose();
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = ye.getOrCreateInstance(this);
            if (typeof t3 == "string") {
              if (e3[t3] === void 0 || t3.startsWith("_") || t3 === "constructor")
                throw new TypeError(`No method named "${t3}"`);
              e3[t3](this);
            }
          });
        }
      }
      be(ye, "close"), Xt(ye);
      const xe = '[data-bs-toggle="button"]';
      class _e extends ve {
        static get NAME() {
          return "button";
        }
        toggle() {
          this._element.setAttribute("aria-pressed", this._element.classList.toggle("active"));
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = _e.getOrCreateInstance(this);
            t3 === "toggle" && e3[t3]();
          });
        }
      }
      function we(t3) {
        return t3 === "true" || t3 !== "false" && (t3 === Number(t3).toString() ? Number(t3) : t3 === "" || t3 === "null" ? null : t3);
      }
      function Se(t3) {
        return t3.replace(/[A-Z]/g, (t4) => `-${t4.toLowerCase()}`);
      }
      fe.on(document, "click.bs.button.data-api", xe, (t3) => {
        t3.preventDefault();
        const e3 = t3.target.closest(xe);
        _e.getOrCreateInstance(e3).toggle();
      }), Xt(_e);
      const Ce = { setDataAttribute(t3, e3, n2) {
        t3.setAttribute(`data-bs-${Se(e3)}`, n2);
      }, removeDataAttribute(t3, e3) {
        t3.removeAttribute(`data-bs-${Se(e3)}`);
      }, getDataAttributes(t3) {
        if (!t3)
          return {};
        const e3 = {};
        return Object.keys(t3.dataset).filter((t4) => t4.startsWith("bs")).forEach((n2) => {
          let i2 = n2.replace(/^bs/, "");
          i2 = i2.charAt(0).toLowerCase() + i2.slice(1, i2.length), e3[i2] = we(t3.dataset[n2]);
        }), e3;
      }, getDataAttribute: (t3, e3) => we(t3.getAttribute(`data-bs-${Se(e3)}`)), offset(t3) {
        const e3 = t3.getBoundingClientRect();
        return { top: e3.top + window.pageYOffset, left: e3.left + window.pageXOffset };
      }, position: (t3) => ({ top: t3.offsetTop, left: t3.offsetLeft }) }, ke = { find: (t3, e3 = document.documentElement) => [].concat(...Element.prototype.querySelectorAll.call(e3, t3)), findOne: (t3, e3 = document.documentElement) => Element.prototype.querySelector.call(e3, t3), children: (t3, e3) => [].concat(...t3.children).filter((t4) => t4.matches(e3)), parents(t3, e3) {
        const n2 = [];
        let i2 = t3.parentNode;
        for (; i2 && i2.nodeType === Node.ELEMENT_NODE && i2.nodeType !== 3; )
          i2.matches(e3) && n2.push(i2), i2 = i2.parentNode;
        return n2;
      }, prev(t3, e3) {
        let n2 = t3.previousElementSibling;
        for (; n2; ) {
          if (n2.matches(e3))
            return [n2];
          n2 = n2.previousElementSibling;
        }
        return [];
      }, next(t3, e3) {
        let n2 = t3.nextElementSibling;
        for (; n2; ) {
          if (n2.matches(e3))
            return [n2];
          n2 = n2.nextElementSibling;
        }
        return [];
      }, focusableChildren(t3) {
        const e3 = ["a", "button", "input", "textarea", "select", "details", "[tabindex]", '[contenteditable="true"]'].map((t4) => `${t4}:not([tabindex^="-"])`).join(", ");
        return this.find(e3, t3).filter((t4) => !zt(t4) && qt(t4));
      } }, De = "carousel", Te = { interval: 5e3, keyboard: true, slide: false, pause: "hover", wrap: true, touch: true }, Ee = { interval: "(number|boolean)", keyboard: "boolean", slide: "(boolean|string)", pause: "(string|boolean)", wrap: "boolean", touch: "boolean" }, Ae = "next", Ie = "prev", Me = "left", Re = "right", Pe = { ArrowLeft: Re, ArrowRight: Me }, Oe = "slid.bs.carousel", je = "active", Ne = ".active.carousel-item";
      class Le extends ve {
        constructor(t3, e3) {
          super(t3), this._items = null, this._interval = null, this._activeElement = null, this._isPaused = false, this._isSliding = false, this.touchTimeout = null, this.touchStartX = 0, this.touchDeltaX = 0, this._config = this._getConfig(e3), this._indicatorsElement = ke.findOne(".carousel-indicators", this._element), this._touchSupported = "ontouchstart" in document.documentElement || navigator.maxTouchPoints > 0, this._pointerEvent = Boolean(window.PointerEvent), this._addEventListeners();
        }
        static get Default() {
          return Te;
        }
        static get NAME() {
          return De;
        }
        next() {
          this._slide(Ae);
        }
        nextWhenVisible() {
          !document.hidden && qt(this._element) && this.next();
        }
        prev() {
          this._slide(Ie);
        }
        pause(t3) {
          t3 || (this._isPaused = true), ke.findOne(".carousel-item-next, .carousel-item-prev", this._element) && (Lt(this._element), this.cycle(true)), clearInterval(this._interval), this._interval = null;
        }
        cycle(t3) {
          t3 || (this._isPaused = false), this._interval && (clearInterval(this._interval), this._interval = null), this._config && this._config.interval && !this._isPaused && (this._updateInterval(), this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval));
        }
        to(t3) {
          this._activeElement = ke.findOne(Ne, this._element);
          const e3 = this._getItemIndex(this._activeElement);
          if (t3 > this._items.length - 1 || t3 < 0)
            return;
          if (this._isSliding)
            return void fe.one(this._element, Oe, () => this.to(t3));
          if (e3 === t3)
            return this.pause(), void this.cycle();
          const n2 = t3 > e3 ? Ae : Ie;
          this._slide(n2, this._items[t3]);
        }
        _getConfig(t3) {
          return t3 = { ...Te, ...Ce.getDataAttributes(this._element), ...typeof t3 == "object" ? t3 : {} }, Bt(De, t3, Ee), t3;
        }
        _handleSwipe() {
          const t3 = Math.abs(this.touchDeltaX);
          if (t3 <= 40)
            return;
          const e3 = t3 / this.touchDeltaX;
          this.touchDeltaX = 0, e3 && this._slide(e3 > 0 ? Re : Me);
        }
        _addEventListeners() {
          this._config.keyboard && fe.on(this._element, "keydown.bs.carousel", (t3) => this._keydown(t3)), this._config.pause === "hover" && (fe.on(this._element, "mouseenter.bs.carousel", (t3) => this.pause(t3)), fe.on(this._element, "mouseleave.bs.carousel", (t3) => this.cycle(t3))), this._config.touch && this._touchSupported && this._addTouchEventListeners();
        }
        _addTouchEventListeners() {
          const t3 = (t4) => this._pointerEvent && (t4.pointerType === "pen" || t4.pointerType === "touch"), e3 = (e4) => {
            t3(e4) ? this.touchStartX = e4.clientX : this._pointerEvent || (this.touchStartX = e4.touches[0].clientX);
          }, n2 = (t4) => {
            this.touchDeltaX = t4.touches && t4.touches.length > 1 ? 0 : t4.touches[0].clientX - this.touchStartX;
          }, i2 = (e4) => {
            t3(e4) && (this.touchDeltaX = e4.clientX - this.touchStartX), this._handleSwipe(), this._config.pause === "hover" && (this.pause(), this.touchTimeout && clearTimeout(this.touchTimeout), this.touchTimeout = setTimeout((t4) => this.cycle(t4), 500 + this._config.interval));
          };
          ke.find(".carousel-item img", this._element).forEach((t4) => {
            fe.on(t4, "dragstart.bs.carousel", (t5) => t5.preventDefault());
          }), this._pointerEvent ? (fe.on(this._element, "pointerdown.bs.carousel", (t4) => e3(t4)), fe.on(this._element, "pointerup.bs.carousel", (t4) => i2(t4)), this._element.classList.add("pointer-event")) : (fe.on(this._element, "touchstart.bs.carousel", (t4) => e3(t4)), fe.on(this._element, "touchmove.bs.carousel", (t4) => n2(t4)), fe.on(this._element, "touchend.bs.carousel", (t4) => i2(t4)));
        }
        _keydown(t3) {
          if (/input|textarea/i.test(t3.target.tagName))
            return;
          const e3 = Pe[t3.key];
          e3 && (t3.preventDefault(), this._slide(e3));
        }
        _getItemIndex(t3) {
          return this._items = t3 && t3.parentNode ? ke.find(".carousel-item", t3.parentNode) : [], this._items.indexOf(t3);
        }
        _getItemByOrder(t3, e3) {
          const n2 = t3 === Ae;
          return Qt(this._items, e3, n2, this._config.wrap);
        }
        _triggerSlideEvent(t3, e3) {
          const n2 = this._getItemIndex(t3), i2 = this._getItemIndex(ke.findOne(Ne, this._element));
          return fe.trigger(this._element, "slide.bs.carousel", { relatedTarget: t3, direction: e3, from: i2, to: n2 });
        }
        _setActiveIndicatorElement(t3) {
          if (this._indicatorsElement) {
            const e3 = ke.findOne(".active", this._indicatorsElement);
            e3.classList.remove(je), e3.removeAttribute("aria-current");
            const n2 = ke.find("[data-bs-target]", this._indicatorsElement);
            for (let e4 = 0; e4 < n2.length; e4++)
              if (Number.parseInt(n2[e4].getAttribute("data-bs-slide-to"), 10) === this._getItemIndex(t3)) {
                n2[e4].classList.add(je), n2[e4].setAttribute("aria-current", "true");
                break;
              }
          }
        }
        _updateInterval() {
          const t3 = this._activeElement || ke.findOne(Ne, this._element);
          if (!t3)
            return;
          const e3 = Number.parseInt(t3.getAttribute("data-bs-interval"), 10);
          e3 ? (this._config.defaultInterval = this._config.defaultInterval || this._config.interval, this._config.interval = e3) : this._config.interval = this._config.defaultInterval || this._config.interval;
        }
        _slide(t3, e3) {
          const n2 = this._directionToOrder(t3), i2 = ke.findOne(Ne, this._element), a2 = this._getItemIndex(i2), r2 = e3 || this._getItemByOrder(n2, i2), o2 = this._getItemIndex(r2), s2 = Boolean(this._interval), l2 = n2 === Ae, c2 = l2 ? "carousel-item-start" : "carousel-item-end", d2 = l2 ? "carousel-item-next" : "carousel-item-prev", u2 = this._orderToDirection(n2);
          if (r2 && r2.classList.contains(je))
            return void (this._isSliding = false);
          if (this._isSliding)
            return;
          if (this._triggerSlideEvent(r2, u2).defaultPrevented)
            return;
          if (!i2 || !r2)
            return;
          this._isSliding = true, s2 && this.pause(), this._setActiveIndicatorElement(r2), this._activeElement = r2;
          const h2 = () => {
            fe.trigger(this._element, Oe, { relatedTarget: r2, direction: u2, from: a2, to: o2 });
          };
          if (this._element.classList.contains("slide")) {
            r2.classList.add(d2), Vt(r2), i2.classList.add(c2), r2.classList.add(c2);
            const t4 = () => {
              r2.classList.remove(c2, d2), r2.classList.add(je), i2.classList.remove(je, d2, c2), this._isSliding = false, setTimeout(h2, 0);
            };
            this._queueCallback(t4, i2, true);
          } else
            i2.classList.remove(je), r2.classList.add(je), this._isSliding = false, h2();
          s2 && this.cycle();
        }
        _directionToOrder(t3) {
          return [Re, Me].includes(t3) ? Gt() ? t3 === Me ? Ie : Ae : t3 === Me ? Ae : Ie : t3;
        }
        _orderToDirection(t3) {
          return [Ae, Ie].includes(t3) ? Gt() ? t3 === Ie ? Me : Re : t3 === Ie ? Re : Me : t3;
        }
        static carouselInterface(t3, e3) {
          const n2 = Le.getOrCreateInstance(t3, e3);
          let { _config: i2 } = n2;
          typeof e3 == "object" && (i2 = { ...i2, ...e3 });
          const a2 = typeof e3 == "string" ? e3 : i2.slide;
          if (typeof e3 == "number")
            n2.to(e3);
          else if (typeof a2 == "string") {
            if (n2[a2] === void 0)
              throw new TypeError(`No method named "${a2}"`);
            n2[a2]();
          } else
            i2.interval && i2.ride && (n2.pause(), n2.cycle());
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            Le.carouselInterface(this, t3);
          });
        }
        static dataApiClickHandler(t3) {
          const e3 = Nt(this);
          if (!e3 || !e3.classList.contains("carousel"))
            return;
          const n2 = { ...Ce.getDataAttributes(e3), ...Ce.getDataAttributes(this) }, i2 = this.getAttribute("data-bs-slide-to");
          i2 && (n2.interval = false), Le.carouselInterface(e3, n2), i2 && Le.getInstance(e3).to(i2), t3.preventDefault();
        }
      }
      fe.on(document, "click.bs.carousel.data-api", "[data-bs-slide], [data-bs-slide-to]", Le.dataApiClickHandler), fe.on(window, "load.bs.carousel.data-api", () => {
        const t3 = ke.find('[data-bs-ride="carousel"]');
        for (let e3 = 0, n2 = t3.length; e3 < n2; e3++)
          Le.carouselInterface(t3[e3], Le.getInstance(t3[e3]));
      }), Xt(Le);
      const Fe = "collapse", He = "bs.collapse", Be = { toggle: true, parent: null }, qe = { toggle: "boolean", parent: "(null|element)" }, ze = "show", We = "collapse", $e = "collapsing", Ve = "collapsed", Ye = '[data-bs-toggle="collapse"]';
      class Ue extends ve {
        constructor(t3, e3) {
          super(t3), this._isTransitioning = false, this._config = this._getConfig(e3), this._triggerArray = [];
          const n2 = ke.find(Ye);
          for (let t4 = 0, e4 = n2.length; t4 < e4; t4++) {
            const e5 = n2[t4], i2 = jt(e5), a2 = ke.find(i2).filter((t5) => t5 === this._element);
            i2 !== null && a2.length && (this._selector = i2, this._triggerArray.push(e5));
          }
          this._initializeChildren(), this._config.parent || this._addAriaAndCollapsedClass(this._triggerArray, this._isShown()), this._config.toggle && this.toggle();
        }
        static get Default() {
          return Be;
        }
        static get NAME() {
          return Fe;
        }
        toggle() {
          this._isShown() ? this.hide() : this.show();
        }
        show() {
          if (this._isTransitioning || this._isShown())
            return;
          let t3, e3 = [];
          if (this._config.parent) {
            const t4 = ke.find(".collapse .collapse", this._config.parent);
            e3 = ke.find(".collapse.show, .collapse.collapsing", this._config.parent).filter((e4) => !t4.includes(e4));
          }
          const n2 = ke.findOne(this._selector);
          if (e3.length) {
            const i3 = e3.find((t4) => n2 !== t4);
            if (t3 = i3 ? Ue.getInstance(i3) : null, t3 && t3._isTransitioning)
              return;
          }
          if (fe.trigger(this._element, "show.bs.collapse").defaultPrevented)
            return;
          e3.forEach((e4) => {
            n2 !== e4 && Ue.getOrCreateInstance(e4, { toggle: false }).hide(), t3 || me.set(e4, He, null);
          });
          const i2 = this._getDimension();
          this._element.classList.remove(We), this._element.classList.add($e), this._element.style[i2] = 0, this._addAriaAndCollapsedClass(this._triggerArray, true), this._isTransitioning = true;
          const a2 = `scroll${i2[0].toUpperCase() + i2.slice(1)}`;
          this._queueCallback(() => {
            this._isTransitioning = false, this._element.classList.remove($e), this._element.classList.add(We, ze), this._element.style[i2] = "", fe.trigger(this._element, "shown.bs.collapse");
          }, this._element, true), this._element.style[i2] = `${this._element[a2]}px`;
        }
        hide() {
          if (this._isTransitioning || !this._isShown())
            return;
          if (fe.trigger(this._element, "hide.bs.collapse").defaultPrevented)
            return;
          const t3 = this._getDimension();
          this._element.style[t3] = `${this._element.getBoundingClientRect()[t3]}px`, Vt(this._element), this._element.classList.add($e), this._element.classList.remove(We, ze);
          const e3 = this._triggerArray.length;
          for (let t4 = 0; t4 < e3; t4++) {
            const e4 = this._triggerArray[t4], n2 = Nt(e4);
            n2 && !this._isShown(n2) && this._addAriaAndCollapsedClass([e4], false);
          }
          this._isTransitioning = true;
          this._element.style[t3] = "", this._queueCallback(() => {
            this._isTransitioning = false, this._element.classList.remove($e), this._element.classList.add(We), fe.trigger(this._element, "hidden.bs.collapse");
          }, this._element, true);
        }
        _isShown(t3 = this._element) {
          return t3.classList.contains(ze);
        }
        _getConfig(t3) {
          return (t3 = { ...Be, ...Ce.getDataAttributes(this._element), ...t3 }).toggle = Boolean(t3.toggle), t3.parent = Ht(t3.parent), Bt(Fe, t3, qe), t3;
        }
        _getDimension() {
          return this._element.classList.contains("collapse-horizontal") ? "width" : "height";
        }
        _initializeChildren() {
          if (!this._config.parent)
            return;
          const t3 = ke.find(".collapse .collapse", this._config.parent);
          ke.find(Ye, this._config.parent).filter((e3) => !t3.includes(e3)).forEach((t4) => {
            const e3 = Nt(t4);
            e3 && this._addAriaAndCollapsedClass([t4], this._isShown(e3));
          });
        }
        _addAriaAndCollapsedClass(t3, e3) {
          t3.length && t3.forEach((t4) => {
            e3 ? t4.classList.remove(Ve) : t4.classList.add(Ve), t4.setAttribute("aria-expanded", e3);
          });
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = {};
            typeof t3 == "string" && /show|hide/.test(t3) && (e3.toggle = false);
            const n2 = Ue.getOrCreateInstance(this, e3);
            if (typeof t3 == "string") {
              if (n2[t3] === void 0)
                throw new TypeError(`No method named "${t3}"`);
              n2[t3]();
            }
          });
        }
      }
      fe.on(document, "click.bs.collapse.data-api", Ye, function(t3) {
        (t3.target.tagName === "A" || t3.delegateTarget && t3.delegateTarget.tagName === "A") && t3.preventDefault();
        const e3 = jt(this);
        ke.find(e3).forEach((t4) => {
          Ue.getOrCreateInstance(t4, { toggle: false }).toggle();
        });
      }), Xt(Ue);
      const Ge = "dropdown", Xe = "Escape", Ze = "Space", Ke = "ArrowUp", Qe = "ArrowDown", Je = new RegExp("ArrowUp|ArrowDown|Escape"), tn = "click.bs.dropdown.data-api", en = "keydown.bs.dropdown.data-api", nn = "show", an = '[data-bs-toggle="dropdown"]', rn = ".dropdown-menu", on = Gt() ? "top-end" : "top-start", sn = Gt() ? "top-start" : "top-end", ln = Gt() ? "bottom-end" : "bottom-start", cn = Gt() ? "bottom-start" : "bottom-end", dn = Gt() ? "left-start" : "right-start", un = Gt() ? "right-start" : "left-start", hn = { offset: [0, 2], boundary: "clippingParents", reference: "toggle", display: "dynamic", popperConfig: null, autoClose: true }, pn = { offset: "(array|string|function)", boundary: "(string|element)", reference: "(string|element|object)", display: "string", popperConfig: "(null|object|function)", autoClose: "(boolean|string)" };
      class fn extends ve {
        constructor(t3, e3) {
          super(t3), this._popper = null, this._config = this._getConfig(e3), this._menu = this._getMenuElement(), this._inNavbar = this._detectNavbar();
        }
        static get Default() {
          return hn;
        }
        static get DefaultType() {
          return pn;
        }
        static get NAME() {
          return Ge;
        }
        toggle() {
          return this._isShown() ? this.hide() : this.show();
        }
        show() {
          if (zt(this._element) || this._isShown(this._menu))
            return;
          const t3 = { relatedTarget: this._element };
          if (fe.trigger(this._element, "show.bs.dropdown", t3).defaultPrevented)
            return;
          const e3 = fn.getParentFromElement(this._element);
          this._inNavbar ? Ce.setDataAttribute(this._menu, "popper", "none") : this._createPopper(e3), "ontouchstart" in document.documentElement && !e3.closest(".navbar-nav") && [].concat(...document.body.children).forEach((t4) => fe.on(t4, "mouseover", $t)), this._element.focus(), this._element.setAttribute("aria-expanded", true), this._menu.classList.add(nn), this._element.classList.add(nn), fe.trigger(this._element, "shown.bs.dropdown", t3);
        }
        hide() {
          if (zt(this._element) || !this._isShown(this._menu))
            return;
          const t3 = { relatedTarget: this._element };
          this._completeHide(t3);
        }
        dispose() {
          this._popper && this._popper.destroy(), super.dispose();
        }
        update() {
          this._inNavbar = this._detectNavbar(), this._popper && this._popper.update();
        }
        _completeHide(t3) {
          fe.trigger(this._element, "hide.bs.dropdown", t3).defaultPrevented || ("ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t4) => fe.off(t4, "mouseover", $t)), this._popper && this._popper.destroy(), this._menu.classList.remove(nn), this._element.classList.remove(nn), this._element.setAttribute("aria-expanded", "false"), Ce.removeDataAttribute(this._menu, "popper"), fe.trigger(this._element, "hidden.bs.dropdown", t3));
        }
        _getConfig(t3) {
          if (t3 = { ...this.constructor.Default, ...Ce.getDataAttributes(this._element), ...t3 }, Bt(Ge, t3, this.constructor.DefaultType), typeof t3.reference == "object" && !Ft(t3.reference) && typeof t3.reference.getBoundingClientRect != "function")
            throw new TypeError(`${Ge.toUpperCase()}: Option "reference" provided type "object" without a required "getBoundingClientRect" method.`);
          return t3;
        }
        _createPopper(e3) {
          if (t2 === void 0)
            throw new TypeError("Bootstrap's dropdowns require Popper (https://popper.js.org)");
          let n2 = this._element;
          this._config.reference === "parent" ? n2 = e3 : Ft(this._config.reference) ? n2 = Ht(this._config.reference) : typeof this._config.reference == "object" && (n2 = this._config.reference);
          const i2 = this._getPopperConfig(), a2 = i2.modifiers.find((t3) => t3.name === "applyStyles" && t3.enabled === false);
          this._popper = Mt(n2, this._menu, i2), a2 && Ce.setDataAttribute(this._menu, "popper", "static");
        }
        _isShown(t3 = this._element) {
          return t3.classList.contains(nn);
        }
        _getMenuElement() {
          return ke.next(this._element, rn)[0];
        }
        _getPlacement() {
          const t3 = this._element.parentNode;
          if (t3.classList.contains("dropend"))
            return dn;
          if (t3.classList.contains("dropstart"))
            return un;
          const e3 = getComputedStyle(this._menu).getPropertyValue("--bs-position").trim() === "end";
          return t3.classList.contains("dropup") ? e3 ? sn : on : e3 ? cn : ln;
        }
        _detectNavbar() {
          return this._element.closest(".navbar") !== null;
        }
        _getOffset() {
          const { offset: t3 } = this._config;
          return typeof t3 == "string" ? t3.split(",").map((t4) => Number.parseInt(t4, 10)) : typeof t3 == "function" ? (e3) => t3(e3, this._element) : t3;
        }
        _getPopperConfig() {
          const t3 = { placement: this._getPlacement(), modifiers: [{ name: "preventOverflow", options: { boundary: this._config.boundary } }, { name: "offset", options: { offset: this._getOffset() } }] };
          return this._config.display === "static" && (t3.modifiers = [{ name: "applyStyles", enabled: false }]), { ...t3, ...typeof this._config.popperConfig == "function" ? this._config.popperConfig(t3) : this._config.popperConfig };
        }
        _selectMenuItem({ key: t3, target: e3 }) {
          const n2 = ke.find(".dropdown-menu .dropdown-item:not(.disabled):not(:disabled)", this._menu).filter(qt);
          n2.length && Qt(n2, e3, t3 === Qe, !n2.includes(e3)).focus();
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = fn.getOrCreateInstance(this, t3);
            if (typeof t3 == "string") {
              if (e3[t3] === void 0)
                throw new TypeError(`No method named "${t3}"`);
              e3[t3]();
            }
          });
        }
        static clearMenus(t3) {
          if (t3 && (t3.button === 2 || t3.type === "keyup" && t3.key !== "Tab"))
            return;
          const e3 = ke.find(an);
          for (let n2 = 0, i2 = e3.length; n2 < i2; n2++) {
            const i3 = fn.getInstance(e3[n2]);
            if (!i3 || i3._config.autoClose === false)
              continue;
            if (!i3._isShown())
              continue;
            const a2 = { relatedTarget: i3._element };
            if (t3) {
              const e4 = t3.composedPath(), n3 = e4.includes(i3._menu);
              if (e4.includes(i3._element) || i3._config.autoClose === "inside" && !n3 || i3._config.autoClose === "outside" && n3)
                continue;
              if (i3._menu.contains(t3.target) && (t3.type === "keyup" && t3.key === "Tab" || /input|select|option|textarea|form/i.test(t3.target.tagName)))
                continue;
              t3.type === "click" && (a2.clickEvent = t3);
            }
            i3._completeHide(a2);
          }
        }
        static getParentFromElement(t3) {
          return Nt(t3) || t3.parentNode;
        }
        static dataApiKeydownHandler(t3) {
          if (/input|textarea/i.test(t3.target.tagName) ? t3.key === Ze || t3.key !== Xe && (t3.key !== Qe && t3.key !== Ke || t3.target.closest(rn)) : !Je.test(t3.key))
            return;
          const e3 = this.classList.contains(nn);
          if (!e3 && t3.key === Xe)
            return;
          if (t3.preventDefault(), t3.stopPropagation(), zt(this))
            return;
          const n2 = this.matches(an) ? this : ke.prev(this, an)[0], i2 = fn.getOrCreateInstance(n2);
          if (t3.key !== Xe)
            return t3.key === Ke || t3.key === Qe ? (e3 || i2.show(), void i2._selectMenuItem(t3)) : void (e3 && t3.key !== Ze || fn.clearMenus());
          i2.hide();
        }
      }
      fe.on(document, en, an, fn.dataApiKeydownHandler), fe.on(document, en, rn, fn.dataApiKeydownHandler), fe.on(document, tn, fn.clearMenus), fe.on(document, "keyup.bs.dropdown.data-api", fn.clearMenus), fe.on(document, tn, an, function(t3) {
        t3.preventDefault(), fn.getOrCreateInstance(this).toggle();
      }), Xt(fn);
      const gn = ".fixed-top, .fixed-bottom, .is-fixed, .sticky-top", mn = ".sticky-top";
      class vn {
        constructor() {
          this._element = document.body;
        }
        getWidth() {
          const t3 = document.documentElement.clientWidth;
          return Math.abs(window.innerWidth - t3);
        }
        hide() {
          const t3 = this.getWidth();
          this._disableOverFlow(), this._setElementAttributes(this._element, "paddingRight", (e3) => e3 + t3), this._setElementAttributes(gn, "paddingRight", (e3) => e3 + t3), this._setElementAttributes(mn, "marginRight", (e3) => e3 - t3);
        }
        _disableOverFlow() {
          this._saveInitialAttribute(this._element, "overflow"), this._element.style.overflow = "hidden";
        }
        _setElementAttributes(t3, e3, n2) {
          const i2 = this.getWidth();
          this._applyManipulationCallback(t3, (t4) => {
            if (t4 !== this._element && window.innerWidth > t4.clientWidth + i2)
              return;
            this._saveInitialAttribute(t4, e3);
            const a2 = window.getComputedStyle(t4)[e3];
            t4.style[e3] = `${n2(Number.parseFloat(a2))}px`;
          });
        }
        reset() {
          this._resetElementAttributes(this._element, "overflow"), this._resetElementAttributes(this._element, "paddingRight"), this._resetElementAttributes(gn, "paddingRight"), this._resetElementAttributes(mn, "marginRight");
        }
        _saveInitialAttribute(t3, e3) {
          const n2 = t3.style[e3];
          n2 && Ce.setDataAttribute(t3, e3, n2);
        }
        _resetElementAttributes(t3, e3) {
          this._applyManipulationCallback(t3, (t4) => {
            const n2 = Ce.getDataAttribute(t4, e3);
            n2 === void 0 ? t4.style.removeProperty(e3) : (Ce.removeDataAttribute(t4, e3), t4.style[e3] = n2);
          });
        }
        _applyManipulationCallback(t3, e3) {
          Ft(t3) ? e3(t3) : ke.find(t3, this._element).forEach(e3);
        }
        isOverflowing() {
          return this.getWidth() > 0;
        }
      }
      const bn = { className: "modal-backdrop", isVisible: true, isAnimated: false, rootElement: "body", clickCallback: null }, yn = { className: "string", isVisible: "boolean", isAnimated: "boolean", rootElement: "(element|string)", clickCallback: "(function|null)" }, xn = "backdrop", _n = "show", wn = "mousedown.bs.backdrop";
      class Sn {
        constructor(t3) {
          this._config = this._getConfig(t3), this._isAppended = false, this._element = null;
        }
        show(t3) {
          this._config.isVisible ? (this._append(), this._config.isAnimated && Vt(this._getElement()), this._getElement().classList.add(_n), this._emulateAnimation(() => {
            Zt(t3);
          })) : Zt(t3);
        }
        hide(t3) {
          this._config.isVisible ? (this._getElement().classList.remove(_n), this._emulateAnimation(() => {
            this.dispose(), Zt(t3);
          })) : Zt(t3);
        }
        _getElement() {
          if (!this._element) {
            const t3 = document.createElement("div");
            t3.className = this._config.className, this._config.isAnimated && t3.classList.add("fade"), this._element = t3;
          }
          return this._element;
        }
        _getConfig(t3) {
          return (t3 = { ...bn, ...typeof t3 == "object" ? t3 : {} }).rootElement = Ht(t3.rootElement), Bt(xn, t3, yn), t3;
        }
        _append() {
          this._isAppended || (this._config.rootElement.append(this._getElement()), fe.on(this._getElement(), wn, () => {
            Zt(this._config.clickCallback);
          }), this._isAppended = true);
        }
        dispose() {
          this._isAppended && (fe.off(this._element, wn), this._element.remove(), this._isAppended = false);
        }
        _emulateAnimation(t3) {
          Kt(t3, this._getElement(), this._config.isAnimated);
        }
      }
      const Cn = { trapElement: null, autofocus: true }, kn = { trapElement: "element", autofocus: "boolean" }, Dn = ".bs.focustrap", Tn = "backward";
      class En {
        constructor(t3) {
          this._config = this._getConfig(t3), this._isActive = false, this._lastTabNavDirection = null;
        }
        activate() {
          const { trapElement: t3, autofocus: e3 } = this._config;
          this._isActive || (e3 && t3.focus(), fe.off(document, Dn), fe.on(document, "focusin.bs.focustrap", (t4) => this._handleFocusin(t4)), fe.on(document, "keydown.tab.bs.focustrap", (t4) => this._handleKeydown(t4)), this._isActive = true);
        }
        deactivate() {
          this._isActive && (this._isActive = false, fe.off(document, Dn));
        }
        _handleFocusin(t3) {
          const { target: e3 } = t3, { trapElement: n2 } = this._config;
          if (e3 === document || e3 === n2 || n2.contains(e3))
            return;
          const i2 = ke.focusableChildren(n2);
          i2.length === 0 ? n2.focus() : this._lastTabNavDirection === Tn ? i2[i2.length - 1].focus() : i2[0].focus();
        }
        _handleKeydown(t3) {
          t3.key === "Tab" && (this._lastTabNavDirection = t3.shiftKey ? Tn : "forward");
        }
        _getConfig(t3) {
          return t3 = { ...Cn, ...typeof t3 == "object" ? t3 : {} }, Bt("focustrap", t3, kn), t3;
        }
      }
      const An = "modal", In = ".bs.modal", Mn = "Escape", Rn = { backdrop: true, keyboard: true, focus: true }, Pn = { backdrop: "(boolean|string)", keyboard: "boolean", focus: "boolean" }, On = "hidden.bs.modal", jn = "show.bs.modal", Nn = "resize.bs.modal", Ln = "click.dismiss.bs.modal", Fn = "keydown.dismiss.bs.modal", Hn = "mousedown.dismiss.bs.modal", Bn = "modal-open", qn = "show", zn = "modal-static";
      class Wn extends ve {
        constructor(t3, e3) {
          super(t3), this._config = this._getConfig(e3), this._dialog = ke.findOne(".modal-dialog", this._element), this._backdrop = this._initializeBackDrop(), this._focustrap = this._initializeFocusTrap(), this._isShown = false, this._ignoreBackdropClick = false, this._isTransitioning = false, this._scrollBar = new vn();
        }
        static get Default() {
          return Rn;
        }
        static get NAME() {
          return An;
        }
        toggle(t3) {
          return this._isShown ? this.hide() : this.show(t3);
        }
        show(t3) {
          if (this._isShown || this._isTransitioning)
            return;
          fe.trigger(this._element, jn, { relatedTarget: t3 }).defaultPrevented || (this._isShown = true, this._isAnimated() && (this._isTransitioning = true), this._scrollBar.hide(), document.body.classList.add(Bn), this._adjustDialog(), this._setEscapeEvent(), this._setResizeEvent(), fe.on(this._dialog, Hn, () => {
            fe.one(this._element, "mouseup.dismiss.bs.modal", (t4) => {
              t4.target === this._element && (this._ignoreBackdropClick = true);
            });
          }), this._showBackdrop(() => this._showElement(t3)));
        }
        hide() {
          if (!this._isShown || this._isTransitioning)
            return;
          if (fe.trigger(this._element, "hide.bs.modal").defaultPrevented)
            return;
          this._isShown = false;
          const t3 = this._isAnimated();
          t3 && (this._isTransitioning = true), this._setEscapeEvent(), this._setResizeEvent(), this._focustrap.deactivate(), this._element.classList.remove(qn), fe.off(this._element, Ln), fe.off(this._dialog, Hn), this._queueCallback(() => this._hideModal(), this._element, t3);
        }
        dispose() {
          [window, this._dialog].forEach((t3) => fe.off(t3, In)), this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose();
        }
        handleUpdate() {
          this._adjustDialog();
        }
        _initializeBackDrop() {
          return new Sn({ isVisible: Boolean(this._config.backdrop), isAnimated: this._isAnimated() });
        }
        _initializeFocusTrap() {
          return new En({ trapElement: this._element });
        }
        _getConfig(t3) {
          return t3 = { ...Rn, ...Ce.getDataAttributes(this._element), ...typeof t3 == "object" ? t3 : {} }, Bt(An, t3, Pn), t3;
        }
        _showElement(t3) {
          const e3 = this._isAnimated(), n2 = ke.findOne(".modal-body", this._dialog);
          this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE || document.body.append(this._element), this._element.style.display = "block", this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", true), this._element.setAttribute("role", "dialog"), this._element.scrollTop = 0, n2 && (n2.scrollTop = 0), e3 && Vt(this._element), this._element.classList.add(qn);
          this._queueCallback(() => {
            this._config.focus && this._focustrap.activate(), this._isTransitioning = false, fe.trigger(this._element, "shown.bs.modal", { relatedTarget: t3 });
          }, this._dialog, e3);
        }
        _setEscapeEvent() {
          this._isShown ? fe.on(this._element, Fn, (t3) => {
            this._config.keyboard && t3.key === Mn ? (t3.preventDefault(), this.hide()) : this._config.keyboard || t3.key !== Mn || this._triggerBackdropTransition();
          }) : fe.off(this._element, Fn);
        }
        _setResizeEvent() {
          this._isShown ? fe.on(window, Nn, () => this._adjustDialog()) : fe.off(window, Nn);
        }
        _hideModal() {
          this._element.style.display = "none", this._element.setAttribute("aria-hidden", true), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._isTransitioning = false, this._backdrop.hide(() => {
            document.body.classList.remove(Bn), this._resetAdjustments(), this._scrollBar.reset(), fe.trigger(this._element, On);
          });
        }
        _showBackdrop(t3) {
          fe.on(this._element, Ln, (t4) => {
            this._ignoreBackdropClick ? this._ignoreBackdropClick = false : t4.target === t4.currentTarget && (this._config.backdrop === true ? this.hide() : this._config.backdrop === "static" && this._triggerBackdropTransition());
          }), this._backdrop.show(t3);
        }
        _isAnimated() {
          return this._element.classList.contains("fade");
        }
        _triggerBackdropTransition() {
          if (fe.trigger(this._element, "hidePrevented.bs.modal").defaultPrevented)
            return;
          const { classList: t3, scrollHeight: e3, style: n2 } = this._element, i2 = e3 > document.documentElement.clientHeight;
          !i2 && n2.overflowY === "hidden" || t3.contains(zn) || (i2 || (n2.overflowY = "hidden"), t3.add(zn), this._queueCallback(() => {
            t3.remove(zn), i2 || this._queueCallback(() => {
              n2.overflowY = "";
            }, this._dialog);
          }, this._dialog), this._element.focus());
        }
        _adjustDialog() {
          const t3 = this._element.scrollHeight > document.documentElement.clientHeight, e3 = this._scrollBar.getWidth(), n2 = e3 > 0;
          (!n2 && t3 && !Gt() || n2 && !t3 && Gt()) && (this._element.style.paddingLeft = `${e3}px`), (n2 && !t3 && !Gt() || !n2 && t3 && Gt()) && (this._element.style.paddingRight = `${e3}px`);
        }
        _resetAdjustments() {
          this._element.style.paddingLeft = "", this._element.style.paddingRight = "";
        }
        static jQueryInterface(t3, e3) {
          return this.each(function() {
            const n2 = Wn.getOrCreateInstance(this, t3);
            if (typeof t3 == "string") {
              if (n2[t3] === void 0)
                throw new TypeError(`No method named "${t3}"`);
              n2[t3](e3);
            }
          });
        }
      }
      fe.on(document, "click.bs.modal.data-api", '[data-bs-toggle="modal"]', function(t3) {
        const e3 = Nt(this);
        ["A", "AREA"].includes(this.tagName) && t3.preventDefault(), fe.one(e3, jn, (t4) => {
          t4.defaultPrevented || fe.one(e3, On, () => {
            qt(this) && this.focus();
          });
        });
        const n2 = ke.findOne(".modal.show");
        n2 && Wn.getInstance(n2).hide();
        Wn.getOrCreateInstance(e3).toggle(this);
      }), be(Wn), Xt(Wn);
      const $n = "offcanvas", Vn = { backdrop: true, keyboard: true, scroll: false }, Yn = { backdrop: "boolean", keyboard: "boolean", scroll: "boolean" }, Un = "show", Gn = ".offcanvas.show", Xn = "hidden.bs.offcanvas";
      class Zn extends ve {
        constructor(t3, e3) {
          super(t3), this._config = this._getConfig(e3), this._isShown = false, this._backdrop = this._initializeBackDrop(), this._focustrap = this._initializeFocusTrap(), this._addEventListeners();
        }
        static get NAME() {
          return $n;
        }
        static get Default() {
          return Vn;
        }
        toggle(t3) {
          return this._isShown ? this.hide() : this.show(t3);
        }
        show(t3) {
          if (this._isShown)
            return;
          if (fe.trigger(this._element, "show.bs.offcanvas", { relatedTarget: t3 }).defaultPrevented)
            return;
          this._isShown = true, this._element.style.visibility = "visible", this._backdrop.show(), this._config.scroll || new vn().hide(), this._element.removeAttribute("aria-hidden"), this._element.setAttribute("aria-modal", true), this._element.setAttribute("role", "dialog"), this._element.classList.add(Un);
          this._queueCallback(() => {
            this._config.scroll || this._focustrap.activate(), fe.trigger(this._element, "shown.bs.offcanvas", { relatedTarget: t3 });
          }, this._element, true);
        }
        hide() {
          if (!this._isShown)
            return;
          if (fe.trigger(this._element, "hide.bs.offcanvas").defaultPrevented)
            return;
          this._focustrap.deactivate(), this._element.blur(), this._isShown = false, this._element.classList.remove(Un), this._backdrop.hide();
          this._queueCallback(() => {
            this._element.setAttribute("aria-hidden", true), this._element.removeAttribute("aria-modal"), this._element.removeAttribute("role"), this._element.style.visibility = "hidden", this._config.scroll || new vn().reset(), fe.trigger(this._element, Xn);
          }, this._element, true);
        }
        dispose() {
          this._backdrop.dispose(), this._focustrap.deactivate(), super.dispose();
        }
        _getConfig(t3) {
          return t3 = { ...Vn, ...Ce.getDataAttributes(this._element), ...typeof t3 == "object" ? t3 : {} }, Bt($n, t3, Yn), t3;
        }
        _initializeBackDrop() {
          return new Sn({ className: "offcanvas-backdrop", isVisible: this._config.backdrop, isAnimated: true, rootElement: this._element.parentNode, clickCallback: () => this.hide() });
        }
        _initializeFocusTrap() {
          return new En({ trapElement: this._element });
        }
        _addEventListeners() {
          fe.on(this._element, "keydown.dismiss.bs.offcanvas", (t3) => {
            this._config.keyboard && t3.key === "Escape" && this.hide();
          });
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = Zn.getOrCreateInstance(this, t3);
            if (typeof t3 == "string") {
              if (e3[t3] === void 0 || t3.startsWith("_") || t3 === "constructor")
                throw new TypeError(`No method named "${t3}"`);
              e3[t3](this);
            }
          });
        }
      }
      fe.on(document, "click.bs.offcanvas.data-api", '[data-bs-toggle="offcanvas"]', function(t3) {
        const e3 = Nt(this);
        if (["A", "AREA"].includes(this.tagName) && t3.preventDefault(), zt(this))
          return;
        fe.one(e3, Xn, () => {
          qt(this) && this.focus();
        });
        const n2 = ke.findOne(Gn);
        n2 && n2 !== e3 && Zn.getInstance(n2).hide();
        Zn.getOrCreateInstance(e3).toggle(this);
      }), fe.on(window, "load.bs.offcanvas.data-api", () => ke.find(Gn).forEach((t3) => Zn.getOrCreateInstance(t3).show())), be(Zn), Xt(Zn);
      const Kn = /* @__PURE__ */ new Set(["background", "cite", "href", "itemtype", "longdesc", "poster", "src", "xlink:href"]), Qn = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/i, Jn = /^data:(?:image\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\/(?:mpeg|mp4|ogg|webm)|audio\/(?:mp3|oga|ogg|opus));base64,[\d+/a-z]+=*$/i, ti = (t3, e3) => {
        const n2 = t3.nodeName.toLowerCase();
        if (e3.includes(n2))
          return !Kn.has(n2) || Boolean(Qn.test(t3.nodeValue) || Jn.test(t3.nodeValue));
        const i2 = e3.filter((t4) => t4 instanceof RegExp);
        for (let t4 = 0, e4 = i2.length; t4 < e4; t4++)
          if (i2[t4].test(n2))
            return true;
        return false;
      }, ei = { "*": ["class", "dir", "id", "lang", "role", /^aria-[\w-]*$/i], a: ["target", "href", "title", "rel"], area: [], b: [], br: [], col: [], code: [], div: [], em: [], hr: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], i: [], img: ["src", "srcset", "alt", "title", "width", "height"], li: [], ol: [], p: [], pre: [], s: [], small: [], span: [], sub: [], sup: [], strong: [], u: [], ul: [] };
      function ni(t3, e3, n2) {
        if (!t3.length)
          return t3;
        if (n2 && typeof n2 == "function")
          return n2(t3);
        const i2 = new window.DOMParser().parseFromString(t3, "text/html"), a2 = Object.keys(e3), r2 = [].concat(...i2.body.querySelectorAll("*"));
        for (let t4 = 0, n3 = r2.length; t4 < n3; t4++) {
          const n4 = r2[t4], i3 = n4.nodeName.toLowerCase();
          if (!a2.includes(i3)) {
            n4.remove();
            continue;
          }
          const o2 = [].concat(...n4.attributes), s2 = [].concat(e3["*"] || [], e3[i3] || []);
          o2.forEach((t5) => {
            ti(t5, s2) || n4.removeAttribute(t5.nodeName);
          });
        }
        return i2.body.innerHTML;
      }
      const ii = "tooltip", ai = /* @__PURE__ */ new Set(["sanitize", "allowList", "sanitizeFn"]), ri = { animation: "boolean", template: "string", title: "(string|element|function)", trigger: "string", delay: "(number|object)", html: "boolean", selector: "(string|boolean)", placement: "(string|function)", offset: "(array|string|function)", container: "(string|element|boolean)", fallbackPlacements: "array", boundary: "(string|element)", customClass: "(string|function)", sanitize: "boolean", sanitizeFn: "(null|function)", allowList: "object", popperConfig: "(null|object|function)" }, oi = { AUTO: "auto", TOP: "top", RIGHT: Gt() ? "left" : "right", BOTTOM: "bottom", LEFT: Gt() ? "right" : "left" }, si = { animation: true, template: '<div class="tooltip" role="tooltip"><div class="tooltip-arrow"></div><div class="tooltip-inner"></div></div>', trigger: "hover focus", title: "", delay: 0, html: false, selector: false, placement: "top", offset: [0, 0], container: false, fallbackPlacements: ["top", "right", "bottom", "left"], boundary: "clippingParents", customClass: "", sanitize: true, sanitizeFn: null, allowList: ei, popperConfig: null }, li = { HIDE: "hide.bs.tooltip", HIDDEN: "hidden.bs.tooltip", SHOW: "show.bs.tooltip", SHOWN: "shown.bs.tooltip", INSERTED: "inserted.bs.tooltip", CLICK: "click.bs.tooltip", FOCUSIN: "focusin.bs.tooltip", FOCUSOUT: "focusout.bs.tooltip", MOUSEENTER: "mouseenter.bs.tooltip", MOUSELEAVE: "mouseleave.bs.tooltip" }, ci = "fade", di = "show", ui = "show", hi = "out", pi = ".tooltip-inner", fi = ".modal", gi = "hide.bs.modal", mi = "hover", vi = "focus";
      class bi extends ve {
        constructor(e3, n2) {
          if (t2 === void 0)
            throw new TypeError("Bootstrap's tooltips require Popper (https://popper.js.org)");
          super(e3), this._isEnabled = true, this._timeout = 0, this._hoverState = "", this._activeTrigger = {}, this._popper = null, this._config = this._getConfig(n2), this.tip = null, this._setListeners();
        }
        static get Default() {
          return si;
        }
        static get NAME() {
          return ii;
        }
        static get Event() {
          return li;
        }
        static get DefaultType() {
          return ri;
        }
        enable() {
          this._isEnabled = true;
        }
        disable() {
          this._isEnabled = false;
        }
        toggleEnabled() {
          this._isEnabled = !this._isEnabled;
        }
        toggle(t3) {
          if (this._isEnabled)
            if (t3) {
              const e3 = this._initializeOnDelegatedTarget(t3);
              e3._activeTrigger.click = !e3._activeTrigger.click, e3._isWithActiveTrigger() ? e3._enter(null, e3) : e3._leave(null, e3);
            } else {
              if (this.getTipElement().classList.contains(di))
                return void this._leave(null, this);
              this._enter(null, this);
            }
        }
        dispose() {
          clearTimeout(this._timeout), fe.off(this._element.closest(fi), gi, this._hideModalHandler), this.tip && this.tip.remove(), this._disposePopper(), super.dispose();
        }
        show() {
          if (this._element.style.display === "none")
            throw new Error("Please use show on visible elements");
          if (!this.isWithContent() || !this._isEnabled)
            return;
          const t3 = fe.trigger(this._element, this.constructor.Event.SHOW), e3 = Wt(this._element), n2 = e3 === null ? this._element.ownerDocument.documentElement.contains(this._element) : e3.contains(this._element);
          if (t3.defaultPrevented || !n2)
            return;
          this.constructor.NAME === "tooltip" && this.tip && this.getTitle() !== this.tip.querySelector(pi).innerHTML && (this._disposePopper(), this.tip.remove(), this.tip = null);
          const i2 = this.getTipElement(), a2 = ((t4) => {
            do {
              t4 += Math.floor(1e6 * Math.random());
            } while (document.getElementById(t4));
            return t4;
          })(this.constructor.NAME);
          i2.setAttribute("id", a2), this._element.setAttribute("aria-describedby", a2), this._config.animation && i2.classList.add(ci);
          const r2 = typeof this._config.placement == "function" ? this._config.placement.call(this, i2, this._element) : this._config.placement, o2 = this._getAttachment(r2);
          this._addAttachmentClass(o2);
          const { container: s2 } = this._config;
          me.set(i2, this.constructor.DATA_KEY, this), this._element.ownerDocument.documentElement.contains(this.tip) || (s2.append(i2), fe.trigger(this._element, this.constructor.Event.INSERTED)), this._popper ? this._popper.update() : this._popper = Mt(this._element, i2, this._getPopperConfig(o2)), i2.classList.add(di);
          const l2 = this._resolvePossibleFunction(this._config.customClass);
          l2 && i2.classList.add(...l2.split(" ")), "ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t4) => {
            fe.on(t4, "mouseover", $t);
          });
          const c2 = this.tip.classList.contains(ci);
          this._queueCallback(() => {
            const t4 = this._hoverState;
            this._hoverState = null, fe.trigger(this._element, this.constructor.Event.SHOWN), t4 === hi && this._leave(null, this);
          }, this.tip, c2);
        }
        hide() {
          if (!this._popper)
            return;
          const t3 = this.getTipElement();
          if (fe.trigger(this._element, this.constructor.Event.HIDE).defaultPrevented)
            return;
          t3.classList.remove(di), "ontouchstart" in document.documentElement && [].concat(...document.body.children).forEach((t4) => fe.off(t4, "mouseover", $t)), this._activeTrigger.click = false, this._activeTrigger.focus = false, this._activeTrigger.hover = false;
          const e3 = this.tip.classList.contains(ci);
          this._queueCallback(() => {
            this._isWithActiveTrigger() || (this._hoverState !== ui && t3.remove(), this._cleanTipClass(), this._element.removeAttribute("aria-describedby"), fe.trigger(this._element, this.constructor.Event.HIDDEN), this._disposePopper());
          }, this.tip, e3), this._hoverState = "";
        }
        update() {
          this._popper !== null && this._popper.update();
        }
        isWithContent() {
          return Boolean(this.getTitle());
        }
        getTipElement() {
          if (this.tip)
            return this.tip;
          const t3 = document.createElement("div");
          t3.innerHTML = this._config.template;
          const e3 = t3.children[0];
          return this.setContent(e3), e3.classList.remove(ci, di), this.tip = e3, this.tip;
        }
        setContent(t3) {
          this._sanitizeAndSetContent(t3, this.getTitle(), pi);
        }
        _sanitizeAndSetContent(t3, e3, n2) {
          const i2 = ke.findOne(n2, t3);
          e3 || !i2 ? this.setElementContent(i2, e3) : i2.remove();
        }
        setElementContent(t3, e3) {
          if (t3 !== null)
            return Ft(e3) ? (e3 = Ht(e3), void (this._config.html ? e3.parentNode !== t3 && (t3.innerHTML = "", t3.append(e3)) : t3.textContent = e3.textContent)) : void (this._config.html ? (this._config.sanitize && (e3 = ni(e3, this._config.allowList, this._config.sanitizeFn)), t3.innerHTML = e3) : t3.textContent = e3);
        }
        getTitle() {
          const t3 = this._element.getAttribute("data-bs-original-title") || this._config.title;
          return this._resolvePossibleFunction(t3);
        }
        updateAttachment(t3) {
          return t3 === "right" ? "end" : t3 === "left" ? "start" : t3;
        }
        _initializeOnDelegatedTarget(t3, e3) {
          return e3 || this.constructor.getOrCreateInstance(t3.delegateTarget, this._getDelegateConfig());
        }
        _getOffset() {
          const { offset: t3 } = this._config;
          return typeof t3 == "string" ? t3.split(",").map((t4) => Number.parseInt(t4, 10)) : typeof t3 == "function" ? (e3) => t3(e3, this._element) : t3;
        }
        _resolvePossibleFunction(t3) {
          return typeof t3 == "function" ? t3.call(this._element) : t3;
        }
        _getPopperConfig(t3) {
          const e3 = { placement: t3, modifiers: [{ name: "flip", options: { fallbackPlacements: this._config.fallbackPlacements } }, { name: "offset", options: { offset: this._getOffset() } }, { name: "preventOverflow", options: { boundary: this._config.boundary } }, { name: "arrow", options: { element: `.${this.constructor.NAME}-arrow` } }, { name: "onChange", enabled: true, phase: "afterWrite", fn: (t4) => this._handlePopperPlacementChange(t4) }], onFirstUpdate: (t4) => {
            t4.options.placement !== t4.placement && this._handlePopperPlacementChange(t4);
          } };
          return { ...e3, ...typeof this._config.popperConfig == "function" ? this._config.popperConfig(e3) : this._config.popperConfig };
        }
        _addAttachmentClass(t3) {
          this.getTipElement().classList.add(`${this._getBasicClassPrefix()}-${this.updateAttachment(t3)}`);
        }
        _getAttachment(t3) {
          return oi[t3.toUpperCase()];
        }
        _setListeners() {
          this._config.trigger.split(" ").forEach((t3) => {
            if (t3 === "click")
              fe.on(this._element, this.constructor.Event.CLICK, this._config.selector, (t4) => this.toggle(t4));
            else if (t3 !== "manual") {
              const e3 = t3 === mi ? this.constructor.Event.MOUSEENTER : this.constructor.Event.FOCUSIN, n2 = t3 === mi ? this.constructor.Event.MOUSELEAVE : this.constructor.Event.FOCUSOUT;
              fe.on(this._element, e3, this._config.selector, (t4) => this._enter(t4)), fe.on(this._element, n2, this._config.selector, (t4) => this._leave(t4));
            }
          }), this._hideModalHandler = () => {
            this._element && this.hide();
          }, fe.on(this._element.closest(fi), gi, this._hideModalHandler), this._config.selector ? this._config = { ...this._config, trigger: "manual", selector: "" } : this._fixTitle();
        }
        _fixTitle() {
          const t3 = this._element.getAttribute("title"), e3 = typeof this._element.getAttribute("data-bs-original-title");
          (t3 || e3 !== "string") && (this._element.setAttribute("data-bs-original-title", t3 || ""), !t3 || this._element.getAttribute("aria-label") || this._element.textContent || this._element.setAttribute("aria-label", t3), this._element.setAttribute("title", ""));
        }
        _enter(t3, e3) {
          e3 = this._initializeOnDelegatedTarget(t3, e3), t3 && (e3._activeTrigger[t3.type === "focusin" ? vi : mi] = true), e3.getTipElement().classList.contains(di) || e3._hoverState === ui ? e3._hoverState = ui : (clearTimeout(e3._timeout), e3._hoverState = ui, e3._config.delay && e3._config.delay.show ? e3._timeout = setTimeout(() => {
            e3._hoverState === ui && e3.show();
          }, e3._config.delay.show) : e3.show());
        }
        _leave(t3, e3) {
          e3 = this._initializeOnDelegatedTarget(t3, e3), t3 && (e3._activeTrigger[t3.type === "focusout" ? vi : mi] = e3._element.contains(t3.relatedTarget)), e3._isWithActiveTrigger() || (clearTimeout(e3._timeout), e3._hoverState = hi, e3._config.delay && e3._config.delay.hide ? e3._timeout = setTimeout(() => {
            e3._hoverState === hi && e3.hide();
          }, e3._config.delay.hide) : e3.hide());
        }
        _isWithActiveTrigger() {
          for (const t3 in this._activeTrigger)
            if (this._activeTrigger[t3])
              return true;
          return false;
        }
        _getConfig(t3) {
          const e3 = Ce.getDataAttributes(this._element);
          return Object.keys(e3).forEach((t4) => {
            ai.has(t4) && delete e3[t4];
          }), (t3 = { ...this.constructor.Default, ...e3, ...typeof t3 == "object" && t3 ? t3 : {} }).container = t3.container === false ? document.body : Ht(t3.container), typeof t3.delay == "number" && (t3.delay = { show: t3.delay, hide: t3.delay }), typeof t3.title == "number" && (t3.title = t3.title.toString()), typeof t3.content == "number" && (t3.content = t3.content.toString()), Bt(ii, t3, this.constructor.DefaultType), t3.sanitize && (t3.template = ni(t3.template, t3.allowList, t3.sanitizeFn)), t3;
        }
        _getDelegateConfig() {
          const t3 = {};
          for (const e3 in this._config)
            this.constructor.Default[e3] !== this._config[e3] && (t3[e3] = this._config[e3]);
          return t3;
        }
        _cleanTipClass() {
          const t3 = this.getTipElement(), e3 = new RegExp(`(^|\\s)${this._getBasicClassPrefix()}\\S+`, "g"), n2 = t3.getAttribute("class").match(e3);
          n2 !== null && n2.length > 0 && n2.map((t4) => t4.trim()).forEach((e4) => t3.classList.remove(e4));
        }
        _getBasicClassPrefix() {
          return "bs-tooltip";
        }
        _handlePopperPlacementChange(t3) {
          const { state: e3 } = t3;
          e3 && (this.tip = e3.elements.popper, this._cleanTipClass(), this._addAttachmentClass(this._getAttachment(e3.placement)));
        }
        _disposePopper() {
          this._popper && (this._popper.destroy(), this._popper = null);
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = bi.getOrCreateInstance(this, t3);
            if (typeof t3 == "string") {
              if (e3[t3] === void 0)
                throw new TypeError(`No method named "${t3}"`);
              e3[t3]();
            }
          });
        }
      }
      Xt(bi);
      const yi = { ...bi.Default, placement: "right", offset: [0, 8], trigger: "click", content: "", template: '<div class="popover" role="tooltip"><div class="popover-arrow"></div><h3 class="popover-header"></h3><div class="popover-body"></div></div>' }, xi = { ...bi.DefaultType, content: "(string|element|function)" }, _i = { HIDE: "hide.bs.popover", HIDDEN: "hidden.bs.popover", SHOW: "show.bs.popover", SHOWN: "shown.bs.popover", INSERTED: "inserted.bs.popover", CLICK: "click.bs.popover", FOCUSIN: "focusin.bs.popover", FOCUSOUT: "focusout.bs.popover", MOUSEENTER: "mouseenter.bs.popover", MOUSELEAVE: "mouseleave.bs.popover" };
      class wi extends bi {
        static get Default() {
          return yi;
        }
        static get NAME() {
          return "popover";
        }
        static get Event() {
          return _i;
        }
        static get DefaultType() {
          return xi;
        }
        isWithContent() {
          return this.getTitle() || this._getContent();
        }
        setContent(t3) {
          this._sanitizeAndSetContent(t3, this.getTitle(), ".popover-header"), this._sanitizeAndSetContent(t3, this._getContent(), ".popover-body");
        }
        _getContent() {
          return this._resolvePossibleFunction(this._config.content);
        }
        _getBasicClassPrefix() {
          return "bs-popover";
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = wi.getOrCreateInstance(this, t3);
            if (typeof t3 == "string") {
              if (e3[t3] === void 0)
                throw new TypeError(`No method named "${t3}"`);
              e3[t3]();
            }
          });
        }
      }
      Xt(wi);
      const Si = "scrollspy", Ci = ".bs.scrollspy", ki = { offset: 10, method: "auto", target: "" }, Di = { offset: "number", method: "string", target: "(string|element)" }, Ti = "dropdown-item", Ei = "active", Ai = ".nav-link", Ii = ".nav-link, .list-group-item, .dropdown-item", Mi = "position";
      class Ri extends ve {
        constructor(t3, e3) {
          super(t3), this._scrollElement = this._element.tagName === "BODY" ? window : this._element, this._config = this._getConfig(e3), this._offsets = [], this._targets = [], this._activeTarget = null, this._scrollHeight = 0, fe.on(this._scrollElement, "scroll.bs.scrollspy", () => this._process()), this.refresh(), this._process();
        }
        static get Default() {
          return ki;
        }
        static get NAME() {
          return Si;
        }
        refresh() {
          const t3 = this._scrollElement === this._scrollElement.window ? "offset" : Mi, e3 = this._config.method === "auto" ? t3 : this._config.method, n2 = e3 === Mi ? this._getScrollTop() : 0;
          this._offsets = [], this._targets = [], this._scrollHeight = this._getScrollHeight();
          ke.find(Ii, this._config.target).map((t4) => {
            const i2 = jt(t4), a2 = i2 ? ke.findOne(i2) : null;
            if (a2) {
              const t5 = a2.getBoundingClientRect();
              if (t5.width || t5.height)
                return [Ce[e3](a2).top + n2, i2];
            }
            return null;
          }).filter((t4) => t4).sort((t4, e4) => t4[0] - e4[0]).forEach((t4) => {
            this._offsets.push(t4[0]), this._targets.push(t4[1]);
          });
        }
        dispose() {
          fe.off(this._scrollElement, Ci), super.dispose();
        }
        _getConfig(t3) {
          return (t3 = { ...ki, ...Ce.getDataAttributes(this._element), ...typeof t3 == "object" && t3 ? t3 : {} }).target = Ht(t3.target) || document.documentElement, Bt(Si, t3, Di), t3;
        }
        _getScrollTop() {
          return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;
        }
        _getScrollHeight() {
          return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);
        }
        _getOffsetHeight() {
          return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;
        }
        _process() {
          const t3 = this._getScrollTop() + this._config.offset, e3 = this._getScrollHeight(), n2 = this._config.offset + e3 - this._getOffsetHeight();
          if (this._scrollHeight !== e3 && this.refresh(), t3 >= n2) {
            const t4 = this._targets[this._targets.length - 1];
            this._activeTarget !== t4 && this._activate(t4);
          } else {
            if (this._activeTarget && t3 < this._offsets[0] && this._offsets[0] > 0)
              return this._activeTarget = null, void this._clear();
            for (let e4 = this._offsets.length; e4--; ) {
              this._activeTarget !== this._targets[e4] && t3 >= this._offsets[e4] && (this._offsets[e4 + 1] === void 0 || t3 < this._offsets[e4 + 1]) && this._activate(this._targets[e4]);
            }
          }
        }
        _activate(t3) {
          this._activeTarget = t3, this._clear();
          const e3 = Ii.split(",").map((e4) => `${e4}[data-bs-target="${t3}"],${e4}[href="${t3}"]`), n2 = ke.findOne(e3.join(","), this._config.target);
          n2.classList.add(Ei), n2.classList.contains(Ti) ? ke.findOne(".dropdown-toggle", n2.closest(".dropdown")).classList.add(Ei) : ke.parents(n2, ".nav, .list-group").forEach((t4) => {
            ke.prev(t4, ".nav-link, .list-group-item").forEach((t5) => t5.classList.add(Ei)), ke.prev(t4, ".nav-item").forEach((t5) => {
              ke.children(t5, Ai).forEach((t6) => t6.classList.add(Ei));
            });
          }), fe.trigger(this._scrollElement, "activate.bs.scrollspy", { relatedTarget: t3 });
        }
        _clear() {
          ke.find(Ii, this._config.target).filter((t3) => t3.classList.contains(Ei)).forEach((t3) => t3.classList.remove(Ei));
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = Ri.getOrCreateInstance(this, t3);
            if (typeof t3 == "string") {
              if (e3[t3] === void 0)
                throw new TypeError(`No method named "${t3}"`);
              e3[t3]();
            }
          });
        }
      }
      fe.on(window, "load.bs.scrollspy.data-api", () => {
        ke.find('[data-bs-spy="scroll"]').forEach((t3) => new Ri(t3));
      }), Xt(Ri);
      const Pi = "active", Oi = "fade", ji = "show", Ni = ".active", Li = ":scope > li > .active";
      class Fi extends ve {
        static get NAME() {
          return "tab";
        }
        show() {
          if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && this._element.classList.contains(Pi))
            return;
          let t3;
          const e3 = Nt(this._element), n2 = this._element.closest(".nav, .list-group");
          if (n2) {
            const e4 = n2.nodeName === "UL" || n2.nodeName === "OL" ? Li : Ni;
            t3 = ke.find(e4, n2), t3 = t3[t3.length - 1];
          }
          const i2 = t3 ? fe.trigger(t3, "hide.bs.tab", { relatedTarget: this._element }) : null;
          if (fe.trigger(this._element, "show.bs.tab", { relatedTarget: t3 }).defaultPrevented || i2 !== null && i2.defaultPrevented)
            return;
          this._activate(this._element, n2);
          const a2 = () => {
            fe.trigger(t3, "hidden.bs.tab", { relatedTarget: this._element }), fe.trigger(this._element, "shown.bs.tab", { relatedTarget: t3 });
          };
          e3 ? this._activate(e3, e3.parentNode, a2) : a2();
        }
        _activate(t3, e3, n2) {
          const i2 = (!e3 || e3.nodeName !== "UL" && e3.nodeName !== "OL" ? ke.children(e3, Ni) : ke.find(Li, e3))[0], a2 = n2 && i2 && i2.classList.contains(Oi), r2 = () => this._transitionComplete(t3, i2, n2);
          i2 && a2 ? (i2.classList.remove(ji), this._queueCallback(r2, t3, true)) : r2();
        }
        _transitionComplete(t3, e3, n2) {
          if (e3) {
            e3.classList.remove(Pi);
            const t4 = ke.findOne(":scope > .dropdown-menu .active", e3.parentNode);
            t4 && t4.classList.remove(Pi), e3.getAttribute("role") === "tab" && e3.setAttribute("aria-selected", false);
          }
          t3.classList.add(Pi), t3.getAttribute("role") === "tab" && t3.setAttribute("aria-selected", true), Vt(t3), t3.classList.contains(Oi) && t3.classList.add(ji);
          let i2 = t3.parentNode;
          if (i2 && i2.nodeName === "LI" && (i2 = i2.parentNode), i2 && i2.classList.contains("dropdown-menu")) {
            const e4 = t3.closest(".dropdown");
            e4 && ke.find(".dropdown-toggle", e4).forEach((t4) => t4.classList.add(Pi)), t3.setAttribute("aria-expanded", true);
          }
          n2 && n2();
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = Fi.getOrCreateInstance(this);
            if (typeof t3 == "string") {
              if (e3[t3] === void 0)
                throw new TypeError(`No method named "${t3}"`);
              e3[t3]();
            }
          });
        }
      }
      fe.on(document, "click.bs.tab.data-api", '[data-bs-toggle="tab"], [data-bs-toggle="pill"], [data-bs-toggle="list"]', function(t3) {
        if (["A", "AREA"].includes(this.tagName) && t3.preventDefault(), zt(this))
          return;
        Fi.getOrCreateInstance(this).show();
      }), Xt(Fi);
      const Hi = "toast", Bi = "hide", qi = "show", zi = "showing", Wi = { animation: "boolean", autohide: "boolean", delay: "number" }, $i = { animation: true, autohide: true, delay: 5e3 };
      class Vi extends ve {
        constructor(t3, e3) {
          super(t3), this._config = this._getConfig(e3), this._timeout = null, this._hasMouseInteraction = false, this._hasKeyboardInteraction = false, this._setListeners();
        }
        static get DefaultType() {
          return Wi;
        }
        static get Default() {
          return $i;
        }
        static get NAME() {
          return Hi;
        }
        show() {
          if (fe.trigger(this._element, "show.bs.toast").defaultPrevented)
            return;
          this._clearTimeout(), this._config.animation && this._element.classList.add("fade");
          this._element.classList.remove(Bi), Vt(this._element), this._element.classList.add(qi), this._element.classList.add(zi), this._queueCallback(() => {
            this._element.classList.remove(zi), fe.trigger(this._element, "shown.bs.toast"), this._maybeScheduleHide();
          }, this._element, this._config.animation);
        }
        hide() {
          if (!this._element.classList.contains(qi))
            return;
          if (fe.trigger(this._element, "hide.bs.toast").defaultPrevented)
            return;
          this._element.classList.add(zi), this._queueCallback(() => {
            this._element.classList.add(Bi), this._element.classList.remove(zi), this._element.classList.remove(qi), fe.trigger(this._element, "hidden.bs.toast");
          }, this._element, this._config.animation);
        }
        dispose() {
          this._clearTimeout(), this._element.classList.contains(qi) && this._element.classList.remove(qi), super.dispose();
        }
        _getConfig(t3) {
          return t3 = { ...$i, ...Ce.getDataAttributes(this._element), ...typeof t3 == "object" && t3 ? t3 : {} }, Bt(Hi, t3, this.constructor.DefaultType), t3;
        }
        _maybeScheduleHide() {
          this._config.autohide && (this._hasMouseInteraction || this._hasKeyboardInteraction || (this._timeout = setTimeout(() => {
            this.hide();
          }, this._config.delay)));
        }
        _onInteraction(t3, e3) {
          switch (t3.type) {
            case "mouseover":
            case "mouseout":
              this._hasMouseInteraction = e3;
              break;
            case "focusin":
            case "focusout":
              this._hasKeyboardInteraction = e3;
          }
          if (e3)
            return void this._clearTimeout();
          const n2 = t3.relatedTarget;
          this._element === n2 || this._element.contains(n2) || this._maybeScheduleHide();
        }
        _setListeners() {
          fe.on(this._element, "mouseover.bs.toast", (t3) => this._onInteraction(t3, true)), fe.on(this._element, "mouseout.bs.toast", (t3) => this._onInteraction(t3, false)), fe.on(this._element, "focusin.bs.toast", (t3) => this._onInteraction(t3, true)), fe.on(this._element, "focusout.bs.toast", (t3) => this._onInteraction(t3, false));
        }
        _clearTimeout() {
          clearTimeout(this._timeout), this._timeout = null;
        }
        static jQueryInterface(t3) {
          return this.each(function() {
            const e3 = Vi.getOrCreateInstance(this, t3);
            if (typeof t3 == "string") {
              if (e3[t3] === void 0)
                throw new TypeError(`No method named "${t3}"`);
              e3[t3](this);
            }
          });
        }
      }
      be(Vi), Xt(Vi), [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]')).map(function(t3) {
        return new wi(t3);
      }), [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map(function(t3) {
        return new bi(t3);
      }), window.bootstrap = e2;
      n(1876), n(7476), n(5767), n(8837), n(4882), n(8351);
      function Yi(t3, e3) {
        var n2 = Object.keys(t3);
        if (Object.getOwnPropertySymbols) {
          var i2 = Object.getOwnPropertySymbols(t3);
          e3 && (i2 = i2.filter(function(e4) {
            return Object.getOwnPropertyDescriptor(t3, e4).enumerable;
          })), n2.push.apply(n2, i2);
        }
        return n2;
      }
      function Ui(t3) {
        for (var e3 = 1; e3 < arguments.length; e3++) {
          var n2 = arguments[e3] != null ? arguments[e3] : {};
          e3 % 2 ? Yi(Object(n2), true).forEach(function(e4) {
            Gi(t3, e4, n2[e4]);
          }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(t3, Object.getOwnPropertyDescriptors(n2)) : Yi(Object(n2)).forEach(function(e4) {
            Object.defineProperty(t3, e4, Object.getOwnPropertyDescriptor(n2, e4));
          });
        }
        return t3;
      }
      function Gi(t3, e3, n2) {
        return e3 in t3 ? Object.defineProperty(t3, e3, { value: n2, enumerable: true, configurable: true, writable: true }) : t3[e3] = n2, t3;
      }
      var Xi = { primary: "#3B82EC", "primary-dark": "#1659c7", "primary-light": "#84aef2", secondary: "#495057", success: "#4BBF73", info: "#1F9BCF", warning: "#f0ad4e", danger: "#d9534f", white: "#fff", "gray-100": "#f4f7f9", "gray-200": "#e2e8ee", "gray-300": "#dee6ed", "gray-400": "#ced4da", "gray-500": "#adb5bd", "gray-600": "#6c757d", "gray-700": "#495057", "gray-800": "#020202", "gray-900": "#212529", black: "#000" }, Zi = Ui(Ui({}, Xi), {}, { "primary-dark": "#84aef2", "primary-light": "#1659c7", white: "#293042", "gray-100": "#3e4555", "gray-200": "#545968", "gray-300": "#696e7b", "gray-400": "#7f838e", "gray-500": "#9498a1", "gray-600": "#a9acb3", "gray-700": "#bfc1c6", "gray-800": "#d4d6d9", "gray-900": "#eaeaec", black: "#fff" });
      document.querySelectorAll("link[href]").forEach(function(t3) {
        t3.href.split("/").pop() === "dark.css" ? window.theme = Zi : window.theme = Xi;
      });
      var Ki = n(7137), Qi = n.n(Ki);
      window.dragula = Qi();
      n(9357);
      var Ji = n(8508), ta = n.n(Ji);
      document.addEventListener("DOMContentLoaded", function() {
        ta().replace();
      }), window.feather = ta();
      var ea = n(381), na = n.n(ea);
      window.moment = na();
      n(9399), n(3542);
      var ia, aa = n(1807), ra = n.n(aa), oa = (n(8165), n(7543), n(7692), n(2352), n(4249), n(3344), n(7323), n(4079), n(3096)), sa = n.n(oa), la = n(1296), ca = n.n(la), da = n(773), ua = n.n(da), ha = [], pa = "ResizeObserver loop completed with undelivered notifications.";
      !function(t3) {
        t3.BORDER_BOX = "border-box", t3.CONTENT_BOX = "content-box", t3.DEVICE_PIXEL_CONTENT_BOX = "device-pixel-content-box";
      }(ia || (ia = {}));
      var fa, ga = function(t3) {
        return Object.freeze(t3);
      }, ma = function(t3, e3) {
        this.inlineSize = t3, this.blockSize = e3, ga(this);
      }, va = function() {
        function t3(t4, e3, n2, i2) {
          return this.x = t4, this.y = e3, this.width = n2, this.height = i2, this.top = this.y, this.left = this.x, this.bottom = this.top + this.height, this.right = this.left + this.width, ga(this);
        }
        return t3.prototype.toJSON = function() {
          var t4 = this;
          return { x: t4.x, y: t4.y, top: t4.top, right: t4.right, bottom: t4.bottom, left: t4.left, width: t4.width, height: t4.height };
        }, t3.fromRect = function(e3) {
          return new t3(e3.x, e3.y, e3.width, e3.height);
        }, t3;
      }(), ba = function(t3) {
        return t3 instanceof SVGElement && "getBBox" in t3;
      }, ya = function(t3) {
        if (ba(t3)) {
          var e3 = t3.getBBox(), n2 = e3.width, i2 = e3.height;
          return !n2 && !i2;
        }
        var a2 = t3, r2 = a2.offsetWidth, o2 = a2.offsetHeight;
        return !(r2 || o2 || t3.getClientRects().length);
      }, xa = function(t3) {
        var e3, n2;
        if (t3 instanceof Element)
          return true;
        var i2 = (n2 = (e3 = t3) === null || e3 === void 0 ? void 0 : e3.ownerDocument) === null || n2 === void 0 ? void 0 : n2.defaultView;
        return !!(i2 && t3 instanceof i2.Element);
      }, _a = typeof window != "undefined" ? window : {}, wa = /* @__PURE__ */ new WeakMap(), Sa = /auto|scroll/, Ca = /^tb|vertical/, ka = /msie|trident/i.test(_a.navigator && _a.navigator.userAgent), Da = function(t3) {
        return parseFloat(t3 || "0");
      }, Ta = function(t3, e3, n2) {
        return t3 === void 0 && (t3 = 0), e3 === void 0 && (e3 = 0), n2 === void 0 && (n2 = false), new ma((n2 ? e3 : t3) || 0, (n2 ? t3 : e3) || 0);
      }, Ea = ga({ devicePixelContentBoxSize: Ta(), borderBoxSize: Ta(), contentBoxSize: Ta(), contentRect: new va(0, 0, 0, 0) }), Aa = function(t3, e3) {
        if (e3 === void 0 && (e3 = false), wa.has(t3) && !e3)
          return wa.get(t3);
        if (ya(t3))
          return wa.set(t3, Ea), Ea;
        var n2 = getComputedStyle(t3), i2 = ba(t3) && t3.ownerSVGElement && t3.getBBox(), a2 = !ka && n2.boxSizing === "border-box", r2 = Ca.test(n2.writingMode || ""), o2 = !i2 && Sa.test(n2.overflowY || ""), s2 = !i2 && Sa.test(n2.overflowX || ""), l2 = i2 ? 0 : Da(n2.paddingTop), c2 = i2 ? 0 : Da(n2.paddingRight), d2 = i2 ? 0 : Da(n2.paddingBottom), u2 = i2 ? 0 : Da(n2.paddingLeft), h2 = i2 ? 0 : Da(n2.borderTopWidth), p2 = i2 ? 0 : Da(n2.borderRightWidth), f2 = i2 ? 0 : Da(n2.borderBottomWidth), g2 = u2 + c2, m2 = l2 + d2, v2 = (i2 ? 0 : Da(n2.borderLeftWidth)) + p2, b2 = h2 + f2, y2 = s2 ? t3.offsetHeight - b2 - t3.clientHeight : 0, x2 = o2 ? t3.offsetWidth - v2 - t3.clientWidth : 0, _2 = a2 ? g2 + v2 : 0, w2 = a2 ? m2 + b2 : 0, S2 = i2 ? i2.width : Da(n2.width) - _2 - x2, C2 = i2 ? i2.height : Da(n2.height) - w2 - y2, k2 = S2 + g2 + x2 + v2, D2 = C2 + m2 + y2 + b2, T2 = ga({ devicePixelContentBoxSize: Ta(Math.round(S2 * devicePixelRatio), Math.round(C2 * devicePixelRatio), r2), borderBoxSize: Ta(k2, D2, r2), contentBoxSize: Ta(S2, C2, r2), contentRect: new va(u2, l2, S2, C2) });
        return wa.set(t3, T2), T2;
      }, Ia = function(t3, e3, n2) {
        var i2 = Aa(t3, n2), a2 = i2.borderBoxSize, r2 = i2.contentBoxSize, o2 = i2.devicePixelContentBoxSize;
        switch (e3) {
          case ia.DEVICE_PIXEL_CONTENT_BOX:
            return o2;
          case ia.BORDER_BOX:
            return a2;
          default:
            return r2;
        }
      }, Ma = function(t3) {
        var e3 = Aa(t3);
        this.target = t3, this.contentRect = e3.contentRect, this.borderBoxSize = ga([e3.borderBoxSize]), this.contentBoxSize = ga([e3.contentBoxSize]), this.devicePixelContentBoxSize = ga([e3.devicePixelContentBoxSize]);
      }, Ra = function(t3) {
        if (ya(t3))
          return 1 / 0;
        for (var e3 = 0, n2 = t3.parentNode; n2; )
          e3 += 1, n2 = n2.parentNode;
        return e3;
      }, Pa = function() {
        var t3 = 1 / 0, e3 = [];
        ha.forEach(function(n3) {
          if (n3.activeTargets.length !== 0) {
            var i3 = [];
            n3.activeTargets.forEach(function(e4) {
              var n4 = new Ma(e4.target), a2 = Ra(e4.target);
              i3.push(n4), e4.lastReportedSize = Ia(e4.target, e4.observedBox), a2 < t3 && (t3 = a2);
            }), e3.push(function() {
              n3.callback.call(n3.observer, i3, n3.observer);
            }), n3.activeTargets.splice(0, n3.activeTargets.length);
          }
        });
        for (var n2 = 0, i2 = e3; n2 < i2.length; n2++) {
          (0, i2[n2])();
        }
        return t3;
      }, Oa = function(t3) {
        ha.forEach(function(e3) {
          e3.activeTargets.splice(0, e3.activeTargets.length), e3.skippedTargets.splice(0, e3.skippedTargets.length), e3.observationTargets.forEach(function(n2) {
            n2.isActive() && (Ra(n2.target) > t3 ? e3.activeTargets.push(n2) : e3.skippedTargets.push(n2));
          });
        });
      }, ja = function() {
        var t3, e3 = 0;
        for (Oa(e3); ha.some(function(t4) {
          return t4.activeTargets.length > 0;
        }); )
          e3 = Pa(), Oa(e3);
        return ha.some(function(t4) {
          return t4.skippedTargets.length > 0;
        }) && (typeof ErrorEvent == "function" ? t3 = new ErrorEvent("error", { message: pa }) : ((t3 = document.createEvent("Event")).initEvent("error", false, false), t3.message = pa), window.dispatchEvent(t3)), e3 > 0;
      }, Na = [], La = function(t3) {
        if (!fa) {
          var e3 = 0, n2 = document.createTextNode("");
          new MutationObserver(function() {
            return Na.splice(0).forEach(function(t4) {
              return t4();
            });
          }).observe(n2, { characterData: true }), fa = function() {
            n2.textContent = "" + (e3 ? e3-- : e3++);
          };
        }
        Na.push(t3), fa();
      }, Fa = 0, Ha = { attributes: true, characterData: true, childList: true, subtree: true }, Ba = ["resize", "load", "transitionend", "animationend", "animationstart", "animationiteration", "keyup", "keydown", "mouseup", "mousedown", "mouseover", "mouseout", "blur", "focus"], qa = function(t3) {
        return t3 === void 0 && (t3 = 0), Date.now() + t3;
      }, za = false, Wa = new (function() {
        function t3() {
          var t4 = this;
          this.stopped = true, this.listener = function() {
            return t4.schedule();
          };
        }
        return t3.prototype.run = function(t4) {
          var e3 = this;
          if (t4 === void 0 && (t4 = 250), !za) {
            za = true;
            var n2, i2 = qa(t4);
            n2 = function() {
              var n3 = false;
              try {
                n3 = ja();
              } finally {
                if (za = false, t4 = i2 - qa(), !Fa)
                  return;
                n3 ? e3.run(1e3) : t4 > 0 ? e3.run(t4) : e3.start();
              }
            }, La(function() {
              requestAnimationFrame(n2);
            });
          }
        }, t3.prototype.schedule = function() {
          this.stop(), this.run();
        }, t3.prototype.observe = function() {
          var t4 = this, e3 = function() {
            return t4.observer && t4.observer.observe(document.body, Ha);
          };
          document.body ? e3() : _a.addEventListener("DOMContentLoaded", e3);
        }, t3.prototype.start = function() {
          var t4 = this;
          this.stopped && (this.stopped = false, this.observer = new MutationObserver(this.listener), this.observe(), Ba.forEach(function(e3) {
            return _a.addEventListener(e3, t4.listener, true);
          }));
        }, t3.prototype.stop = function() {
          var t4 = this;
          this.stopped || (this.observer && this.observer.disconnect(), Ba.forEach(function(e3) {
            return _a.removeEventListener(e3, t4.listener, true);
          }), this.stopped = true);
        }, t3;
      }())(), $a = function(t3) {
        !Fa && t3 > 0 && Wa.start(), !(Fa += t3) && Wa.stop();
      }, Va = function() {
        function t3(t4, e3) {
          this.target = t4, this.observedBox = e3 || ia.CONTENT_BOX, this.lastReportedSize = { inlineSize: 0, blockSize: 0 };
        }
        return t3.prototype.isActive = function() {
          var t4, e3 = Ia(this.target, this.observedBox, true);
          return t4 = this.target, ba(t4) || function(t5) {
            switch (t5.tagName) {
              case "INPUT":
                if (t5.type !== "image")
                  break;
              case "VIDEO":
              case "AUDIO":
              case "EMBED":
              case "OBJECT":
              case "CANVAS":
              case "IFRAME":
              case "IMG":
                return true;
            }
            return false;
          }(t4) || getComputedStyle(t4).display !== "inline" || (this.lastReportedSize = e3), this.lastReportedSize.inlineSize !== e3.inlineSize || this.lastReportedSize.blockSize !== e3.blockSize;
        }, t3;
      }(), Ya = function(t3, e3) {
        this.activeTargets = [], this.skippedTargets = [], this.observationTargets = [], this.observer = t3, this.callback = e3;
      }, Ua = /* @__PURE__ */ new WeakMap(), Ga = function(t3, e3) {
        for (var n2 = 0; n2 < t3.length; n2 += 1)
          if (t3[n2].target === e3)
            return n2;
        return -1;
      }, Xa = function() {
        function t3() {
        }
        return t3.connect = function(t4, e3) {
          var n2 = new Ya(t4, e3);
          Ua.set(t4, n2);
        }, t3.observe = function(t4, e3, n2) {
          var i2 = Ua.get(t4), a2 = i2.observationTargets.length === 0;
          Ga(i2.observationTargets, e3) < 0 && (a2 && ha.push(i2), i2.observationTargets.push(new Va(e3, n2 && n2.box)), $a(1), Wa.schedule());
        }, t3.unobserve = function(t4, e3) {
          var n2 = Ua.get(t4), i2 = Ga(n2.observationTargets, e3), a2 = n2.observationTargets.length === 1;
          i2 >= 0 && (a2 && ha.splice(ha.indexOf(n2), 1), n2.observationTargets.splice(i2, 1), $a(-1));
        }, t3.disconnect = function(t4) {
          var e3 = this, n2 = Ua.get(t4);
          n2.observationTargets.slice().forEach(function(n3) {
            return e3.unobserve(t4, n3.target);
          }), n2.activeTargets.splice(0, n2.activeTargets.length);
        }, t3;
      }(), Za = function() {
        function t3(t4) {
          if (arguments.length === 0)
            throw new TypeError("Failed to construct 'ResizeObserver': 1 argument required, but only 0 present.");
          if (typeof t4 != "function")
            throw new TypeError("Failed to construct 'ResizeObserver': The callback provided as parameter 1 is not a function.");
          Xa.connect(this, t4);
        }
        return t3.prototype.observe = function(t4, e3) {
          if (arguments.length === 0)
            throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': 1 argument required, but only 0 present.");
          if (!xa(t4))
            throw new TypeError("Failed to execute 'observe' on 'ResizeObserver': parameter 1 is not of type 'Element");
          Xa.observe(this, t4, e3);
        }, t3.prototype.unobserve = function(t4) {
          if (arguments.length === 0)
            throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': 1 argument required, but only 0 present.");
          if (!xa(t4))
            throw new TypeError("Failed to execute 'unobserve' on 'ResizeObserver': parameter 1 is not of type 'Element");
          Xa.unobserve(this, t4);
        }, t3.prototype.disconnect = function() {
          Xa.disconnect(this);
        }, t3.toString = function() {
          return "function ResizeObserver () { [polyfill code] }";
        }, t3;
      }(), Ka = (n(7985), n(6618), n(9989), n(8307), n(4390), function(t3) {
        return Array.prototype.reduce.call(t3, function(t4, e3) {
          var n2 = e3.name.match(/data-simplebar-(.+)/);
          if (n2) {
            var i2 = n2[1].replace(/\W+(.)/g, function(t5, e4) {
              return e4.toUpperCase();
            });
            switch (e3.value) {
              case "true":
              case void 0:
                t4[i2] = true;
                break;
              case "false":
                t4[i2] = false;
                break;
              default:
                t4[i2] = e3.value;
            }
          }
          return t4;
        }, {});
      });
      function Qa(t3) {
        return t3 && t3.ownerDocument && t3.ownerDocument.defaultView ? t3.ownerDocument.defaultView : window;
      }
      function Ja(t3) {
        return t3 && t3.ownerDocument ? t3.ownerDocument : document;
      }
      var tr = null, er = null;
      function nr(t3) {
        if (tr === null) {
          var e3 = Ja(t3);
          if (e3 === void 0)
            return tr = 0;
          var n2 = e3.body, i2 = e3.createElement("div");
          i2.classList.add("simplebar-hide-scrollbar"), n2.appendChild(i2);
          var a2 = i2.getBoundingClientRect().right;
          n2.removeChild(i2), tr = a2;
        }
        return tr;
      }
      ra() && window.addEventListener("resize", function() {
        er !== window.devicePixelRatio && (er = window.devicePixelRatio, tr = null);
      });
      var ir = function() {
        function t3(e4, n2) {
          var i2 = this;
          this.onScroll = function() {
            var t4 = Qa(i2.el);
            i2.scrollXTicking || (t4.requestAnimationFrame(i2.scrollX), i2.scrollXTicking = true), i2.scrollYTicking || (t4.requestAnimationFrame(i2.scrollY), i2.scrollYTicking = true);
          }, this.scrollX = function() {
            i2.axis.x.isOverflowing && (i2.showScrollbar("x"), i2.positionScrollbar("x")), i2.scrollXTicking = false;
          }, this.scrollY = function() {
            i2.axis.y.isOverflowing && (i2.showScrollbar("y"), i2.positionScrollbar("y")), i2.scrollYTicking = false;
          }, this.onMouseEnter = function() {
            i2.showScrollbar("x"), i2.showScrollbar("y");
          }, this.onMouseMove = function(t4) {
            i2.mouseX = t4.clientX, i2.mouseY = t4.clientY, (i2.axis.x.isOverflowing || i2.axis.x.forceVisible) && i2.onMouseMoveForAxis("x"), (i2.axis.y.isOverflowing || i2.axis.y.forceVisible) && i2.onMouseMoveForAxis("y");
          }, this.onMouseLeave = function() {
            i2.onMouseMove.cancel(), (i2.axis.x.isOverflowing || i2.axis.x.forceVisible) && i2.onMouseLeaveForAxis("x"), (i2.axis.y.isOverflowing || i2.axis.y.forceVisible) && i2.onMouseLeaveForAxis("y"), i2.mouseX = -1, i2.mouseY = -1;
          }, this.onWindowResize = function() {
            i2.scrollbarWidth = i2.getScrollbarWidth(), i2.hideNativeScrollbar();
          }, this.hideScrollbars = function() {
            i2.axis.x.track.rect = i2.axis.x.track.el.getBoundingClientRect(), i2.axis.y.track.rect = i2.axis.y.track.el.getBoundingClientRect(), i2.isWithinBounds(i2.axis.y.track.rect) || (i2.axis.y.scrollbar.el.classList.remove(i2.classNames.visible), i2.axis.y.isVisible = false), i2.isWithinBounds(i2.axis.x.track.rect) || (i2.axis.x.scrollbar.el.classList.remove(i2.classNames.visible), i2.axis.x.isVisible = false);
          }, this.onPointerEvent = function(t4) {
            var e5, n3;
            i2.axis.x.track.rect = i2.axis.x.track.el.getBoundingClientRect(), i2.axis.y.track.rect = i2.axis.y.track.el.getBoundingClientRect(), (i2.axis.x.isOverflowing || i2.axis.x.forceVisible) && (e5 = i2.isWithinBounds(i2.axis.x.track.rect)), (i2.axis.y.isOverflowing || i2.axis.y.forceVisible) && (n3 = i2.isWithinBounds(i2.axis.y.track.rect)), (e5 || n3) && (t4.preventDefault(), t4.stopPropagation(), t4.type === "mousedown" && (e5 && (i2.axis.x.scrollbar.rect = i2.axis.x.scrollbar.el.getBoundingClientRect(), i2.isWithinBounds(i2.axis.x.scrollbar.rect) ? i2.onDragStart(t4, "x") : i2.onTrackClick(t4, "x")), n3 && (i2.axis.y.scrollbar.rect = i2.axis.y.scrollbar.el.getBoundingClientRect(), i2.isWithinBounds(i2.axis.y.scrollbar.rect) ? i2.onDragStart(t4, "y") : i2.onTrackClick(t4, "y"))));
          }, this.drag = function(e5) {
            var n3 = i2.axis[i2.draggedAxis].track, a2 = n3.rect[i2.axis[i2.draggedAxis].sizeAttr], r2 = i2.axis[i2.draggedAxis].scrollbar, o2 = i2.contentWrapperEl[i2.axis[i2.draggedAxis].scrollSizeAttr], s2 = parseInt(i2.elStyles[i2.axis[i2.draggedAxis].sizeAttr], 10);
            e5.preventDefault(), e5.stopPropagation();
            var l2 = ((i2.draggedAxis === "y" ? e5.pageY : e5.pageX) - n3.rect[i2.axis[i2.draggedAxis].offsetAttr] - i2.axis[i2.draggedAxis].dragOffset) / (a2 - r2.size) * (o2 - s2);
            i2.draggedAxis === "x" && (l2 = i2.isRtl && t3.getRtlHelpers().isRtlScrollbarInverted ? l2 - (a2 + r2.size) : l2, l2 = i2.isRtl && t3.getRtlHelpers().isRtlScrollingInverted ? -l2 : l2), i2.contentWrapperEl[i2.axis[i2.draggedAxis].scrollOffsetAttr] = l2;
          }, this.onEndDrag = function(t4) {
            var e5 = Ja(i2.el), n3 = Qa(i2.el);
            t4.preventDefault(), t4.stopPropagation(), i2.el.classList.remove(i2.classNames.dragging), e5.removeEventListener("mousemove", i2.drag, true), e5.removeEventListener("mouseup", i2.onEndDrag, true), i2.removePreventClickId = n3.setTimeout(function() {
              e5.removeEventListener("click", i2.preventClick, true), e5.removeEventListener("dblclick", i2.preventClick, true), i2.removePreventClickId = null;
            });
          }, this.preventClick = function(t4) {
            t4.preventDefault(), t4.stopPropagation();
          }, this.el = e4, this.minScrollbarWidth = 20, this.options = Object.assign({}, t3.defaultOptions, {}, n2), this.classNames = Object.assign({}, t3.defaultOptions.classNames, {}, this.options.classNames), this.axis = { x: { scrollOffsetAttr: "scrollLeft", sizeAttr: "width", scrollSizeAttr: "scrollWidth", offsetSizeAttr: "offsetWidth", offsetAttr: "left", overflowAttr: "overflowX", dragOffset: 0, isOverflowing: true, isVisible: false, forceVisible: false, track: {}, scrollbar: {} }, y: { scrollOffsetAttr: "scrollTop", sizeAttr: "height", scrollSizeAttr: "scrollHeight", offsetSizeAttr: "offsetHeight", offsetAttr: "top", overflowAttr: "overflowY", dragOffset: 0, isOverflowing: true, isVisible: false, forceVisible: false, track: {}, scrollbar: {} } }, this.removePreventClickId = null, t3.instances.has(this.el) || (this.recalculate = sa()(this.recalculate.bind(this), 64), this.onMouseMove = sa()(this.onMouseMove.bind(this), 64), this.hideScrollbars = ca()(this.hideScrollbars.bind(this), this.options.timeout), this.onWindowResize = ca()(this.onWindowResize.bind(this), 64, { leading: true }), t3.getRtlHelpers = ua()(t3.getRtlHelpers), this.init());
        }
        t3.getRtlHelpers = function() {
          var e4 = document.createElement("div");
          e4.innerHTML = '<div class="hs-dummy-scrollbar-size"><div style="height: 200%; width: 200%; margin: 10px 0;"></div></div>';
          var n2 = e4.firstElementChild;
          document.body.appendChild(n2);
          var i2 = n2.firstElementChild;
          n2.scrollLeft = 0;
          var a2 = t3.getOffset(n2), r2 = t3.getOffset(i2);
          n2.scrollLeft = 999;
          var o2 = t3.getOffset(i2);
          return { isRtlScrollingInverted: a2.left !== r2.left && r2.left - o2.left != 0, isRtlScrollbarInverted: a2.left !== r2.left };
        }, t3.getOffset = function(t4) {
          var e4 = t4.getBoundingClientRect(), n2 = Ja(t4), i2 = Qa(t4);
          return { top: e4.top + (i2.pageYOffset || n2.documentElement.scrollTop), left: e4.left + (i2.pageXOffset || n2.documentElement.scrollLeft) };
        };
        var e3 = t3.prototype;
        return e3.init = function() {
          t3.instances.set(this.el, this), ra() && (this.initDOM(), this.setAccessibilityAttributes(), this.scrollbarWidth = this.getScrollbarWidth(), this.recalculate(), this.initListeners());
        }, e3.initDOM = function() {
          var t4 = this;
          if (Array.prototype.filter.call(this.el.children, function(e5) {
            return e5.classList.contains(t4.classNames.wrapper);
          }).length)
            this.wrapperEl = this.el.querySelector("." + this.classNames.wrapper), this.contentWrapperEl = this.options.scrollableNode || this.el.querySelector("." + this.classNames.contentWrapper), this.contentEl = this.options.contentNode || this.el.querySelector("." + this.classNames.contentEl), this.offsetEl = this.el.querySelector("." + this.classNames.offset), this.maskEl = this.el.querySelector("." + this.classNames.mask), this.placeholderEl = this.findChild(this.wrapperEl, "." + this.classNames.placeholder), this.heightAutoObserverWrapperEl = this.el.querySelector("." + this.classNames.heightAutoObserverWrapperEl), this.heightAutoObserverEl = this.el.querySelector("." + this.classNames.heightAutoObserverEl), this.axis.x.track.el = this.findChild(this.el, "." + this.classNames.track + "." + this.classNames.horizontal), this.axis.y.track.el = this.findChild(this.el, "." + this.classNames.track + "." + this.classNames.vertical);
          else {
            for (this.wrapperEl = document.createElement("div"), this.contentWrapperEl = document.createElement("div"), this.offsetEl = document.createElement("div"), this.maskEl = document.createElement("div"), this.contentEl = document.createElement("div"), this.placeholderEl = document.createElement("div"), this.heightAutoObserverWrapperEl = document.createElement("div"), this.heightAutoObserverEl = document.createElement("div"), this.wrapperEl.classList.add(this.classNames.wrapper), this.contentWrapperEl.classList.add(this.classNames.contentWrapper), this.offsetEl.classList.add(this.classNames.offset), this.maskEl.classList.add(this.classNames.mask), this.contentEl.classList.add(this.classNames.contentEl), this.placeholderEl.classList.add(this.classNames.placeholder), this.heightAutoObserverWrapperEl.classList.add(this.classNames.heightAutoObserverWrapperEl), this.heightAutoObserverEl.classList.add(this.classNames.heightAutoObserverEl); this.el.firstChild; )
              this.contentEl.appendChild(this.el.firstChild);
            this.contentWrapperEl.appendChild(this.contentEl), this.offsetEl.appendChild(this.contentWrapperEl), this.maskEl.appendChild(this.offsetEl), this.heightAutoObserverWrapperEl.appendChild(this.heightAutoObserverEl), this.wrapperEl.appendChild(this.heightAutoObserverWrapperEl), this.wrapperEl.appendChild(this.maskEl), this.wrapperEl.appendChild(this.placeholderEl), this.el.appendChild(this.wrapperEl);
          }
          if (!this.axis.x.track.el || !this.axis.y.track.el) {
            var e4 = document.createElement("div"), n2 = document.createElement("div");
            e4.classList.add(this.classNames.track), n2.classList.add(this.classNames.scrollbar), e4.appendChild(n2), this.axis.x.track.el = e4.cloneNode(true), this.axis.x.track.el.classList.add(this.classNames.horizontal), this.axis.y.track.el = e4.cloneNode(true), this.axis.y.track.el.classList.add(this.classNames.vertical), this.el.appendChild(this.axis.x.track.el), this.el.appendChild(this.axis.y.track.el);
          }
          this.axis.x.scrollbar.el = this.axis.x.track.el.querySelector("." + this.classNames.scrollbar), this.axis.y.scrollbar.el = this.axis.y.track.el.querySelector("." + this.classNames.scrollbar), this.options.autoHide || (this.axis.x.scrollbar.el.classList.add(this.classNames.visible), this.axis.y.scrollbar.el.classList.add(this.classNames.visible)), this.el.setAttribute("data-simplebar", "init");
        }, e3.setAccessibilityAttributes = function() {
          var t4 = this.options.ariaLabel || "scrollable content";
          this.contentWrapperEl.setAttribute("tabindex", "0"), this.contentWrapperEl.setAttribute("role", "region"), this.contentWrapperEl.setAttribute("aria-label", t4);
        }, e3.initListeners = function() {
          var t4 = this, e4 = Qa(this.el);
          this.options.autoHide && this.el.addEventListener("mouseenter", this.onMouseEnter), ["mousedown", "click", "dblclick"].forEach(function(e5) {
            t4.el.addEventListener(e5, t4.onPointerEvent, true);
          }), ["touchstart", "touchend", "touchmove"].forEach(function(e5) {
            t4.el.addEventListener(e5, t4.onPointerEvent, { capture: true, passive: true });
          }), this.el.addEventListener("mousemove", this.onMouseMove), this.el.addEventListener("mouseleave", this.onMouseLeave), this.contentWrapperEl.addEventListener("scroll", this.onScroll), e4.addEventListener("resize", this.onWindowResize);
          var n2 = false, i2 = e4.ResizeObserver || Za;
          this.resizeObserver = new i2(function() {
            n2 && t4.recalculate();
          }), this.resizeObserver.observe(this.el), this.resizeObserver.observe(this.contentEl), e4.requestAnimationFrame(function() {
            n2 = true;
          }), this.mutationObserver = new e4.MutationObserver(this.recalculate), this.mutationObserver.observe(this.contentEl, { childList: true, subtree: true, characterData: true });
        }, e3.recalculate = function() {
          var t4 = Qa(this.el);
          this.elStyles = t4.getComputedStyle(this.el), this.isRtl = this.elStyles.direction === "rtl";
          var e4 = this.heightAutoObserverEl.offsetHeight <= 1, n2 = this.heightAutoObserverEl.offsetWidth <= 1, i2 = this.contentEl.offsetWidth, a2 = this.contentWrapperEl.offsetWidth, r2 = this.elStyles.overflowX, o2 = this.elStyles.overflowY;
          this.contentEl.style.padding = this.elStyles.paddingTop + " " + this.elStyles.paddingRight + " " + this.elStyles.paddingBottom + " " + this.elStyles.paddingLeft, this.wrapperEl.style.margin = "-" + this.elStyles.paddingTop + " -" + this.elStyles.paddingRight + " -" + this.elStyles.paddingBottom + " -" + this.elStyles.paddingLeft;
          var s2 = this.contentEl.scrollHeight, l2 = this.contentEl.scrollWidth;
          this.contentWrapperEl.style.height = e4 ? "auto" : "100%", this.placeholderEl.style.width = n2 ? i2 + "px" : "auto", this.placeholderEl.style.height = s2 + "px";
          var c2 = this.contentWrapperEl.offsetHeight;
          this.axis.x.isOverflowing = l2 > i2, this.axis.y.isOverflowing = s2 > c2, this.axis.x.isOverflowing = r2 !== "hidden" && this.axis.x.isOverflowing, this.axis.y.isOverflowing = o2 !== "hidden" && this.axis.y.isOverflowing, this.axis.x.forceVisible = this.options.forceVisible === "x" || this.options.forceVisible === true, this.axis.y.forceVisible = this.options.forceVisible === "y" || this.options.forceVisible === true, this.hideNativeScrollbar();
          var d2 = this.axis.x.isOverflowing ? this.scrollbarWidth : 0, u2 = this.axis.y.isOverflowing ? this.scrollbarWidth : 0;
          this.axis.x.isOverflowing = this.axis.x.isOverflowing && l2 > a2 - u2, this.axis.y.isOverflowing = this.axis.y.isOverflowing && s2 > c2 - d2, this.axis.x.scrollbar.size = this.getScrollbarSize("x"), this.axis.y.scrollbar.size = this.getScrollbarSize("y"), this.axis.x.scrollbar.el.style.width = this.axis.x.scrollbar.size + "px", this.axis.y.scrollbar.el.style.height = this.axis.y.scrollbar.size + "px", this.positionScrollbar("x"), this.positionScrollbar("y"), this.toggleTrackVisibility("x"), this.toggleTrackVisibility("y");
        }, e3.getScrollbarSize = function(t4) {
          if (t4 === void 0 && (t4 = "y"), !this.axis[t4].isOverflowing)
            return 0;
          var e4, n2 = this.contentEl[this.axis[t4].scrollSizeAttr], i2 = this.axis[t4].track.el[this.axis[t4].offsetSizeAttr], a2 = i2 / n2;
          return e4 = Math.max(~~(a2 * i2), this.options.scrollbarMinSize), this.options.scrollbarMaxSize && (e4 = Math.min(e4, this.options.scrollbarMaxSize)), e4;
        }, e3.positionScrollbar = function(e4) {
          if (e4 === void 0 && (e4 = "y"), this.axis[e4].isOverflowing) {
            var n2 = this.contentWrapperEl[this.axis[e4].scrollSizeAttr], i2 = this.axis[e4].track.el[this.axis[e4].offsetSizeAttr], a2 = parseInt(this.elStyles[this.axis[e4].sizeAttr], 10), r2 = this.axis[e4].scrollbar, o2 = this.contentWrapperEl[this.axis[e4].scrollOffsetAttr], s2 = (o2 = e4 === "x" && this.isRtl && t3.getRtlHelpers().isRtlScrollingInverted ? -o2 : o2) / (n2 - a2), l2 = ~~((i2 - r2.size) * s2);
            l2 = e4 === "x" && this.isRtl && t3.getRtlHelpers().isRtlScrollbarInverted ? l2 + (i2 - r2.size) : l2, r2.el.style.transform = e4 === "x" ? "translate3d(" + l2 + "px, 0, 0)" : "translate3d(0, " + l2 + "px, 0)";
          }
        }, e3.toggleTrackVisibility = function(t4) {
          t4 === void 0 && (t4 = "y");
          var e4 = this.axis[t4].track.el, n2 = this.axis[t4].scrollbar.el;
          this.axis[t4].isOverflowing || this.axis[t4].forceVisible ? (e4.style.visibility = "visible", this.contentWrapperEl.style[this.axis[t4].overflowAttr] = "scroll") : (e4.style.visibility = "hidden", this.contentWrapperEl.style[this.axis[t4].overflowAttr] = "hidden"), this.axis[t4].isOverflowing ? n2.style.display = "block" : n2.style.display = "none";
        }, e3.hideNativeScrollbar = function() {
          this.offsetEl.style[this.isRtl ? "left" : "right"] = this.axis.y.isOverflowing || this.axis.y.forceVisible ? "-" + this.scrollbarWidth + "px" : 0, this.offsetEl.style.bottom = this.axis.x.isOverflowing || this.axis.x.forceVisible ? "-" + this.scrollbarWidth + "px" : 0;
        }, e3.onMouseMoveForAxis = function(t4) {
          t4 === void 0 && (t4 = "y"), this.axis[t4].track.rect = this.axis[t4].track.el.getBoundingClientRect(), this.axis[t4].scrollbar.rect = this.axis[t4].scrollbar.el.getBoundingClientRect(), this.isWithinBounds(this.axis[t4].scrollbar.rect) ? this.axis[t4].scrollbar.el.classList.add(this.classNames.hover) : this.axis[t4].scrollbar.el.classList.remove(this.classNames.hover), this.isWithinBounds(this.axis[t4].track.rect) ? (this.showScrollbar(t4), this.axis[t4].track.el.classList.add(this.classNames.hover)) : this.axis[t4].track.el.classList.remove(this.classNames.hover);
        }, e3.onMouseLeaveForAxis = function(t4) {
          t4 === void 0 && (t4 = "y"), this.axis[t4].track.el.classList.remove(this.classNames.hover), this.axis[t4].scrollbar.el.classList.remove(this.classNames.hover);
        }, e3.showScrollbar = function(t4) {
          t4 === void 0 && (t4 = "y");
          var e4 = this.axis[t4].scrollbar.el;
          this.axis[t4].isVisible || (e4.classList.add(this.classNames.visible), this.axis[t4].isVisible = true), this.options.autoHide && this.hideScrollbars();
        }, e3.onDragStart = function(t4, e4) {
          e4 === void 0 && (e4 = "y");
          var n2 = Ja(this.el), i2 = Qa(this.el), a2 = this.axis[e4].scrollbar, r2 = e4 === "y" ? t4.pageY : t4.pageX;
          this.axis[e4].dragOffset = r2 - a2.rect[this.axis[e4].offsetAttr], this.draggedAxis = e4, this.el.classList.add(this.classNames.dragging), n2.addEventListener("mousemove", this.drag, true), n2.addEventListener("mouseup", this.onEndDrag, true), this.removePreventClickId === null ? (n2.addEventListener("click", this.preventClick, true), n2.addEventListener("dblclick", this.preventClick, true)) : (i2.clearTimeout(this.removePreventClickId), this.removePreventClickId = null);
        }, e3.onTrackClick = function(t4, e4) {
          var n2 = this;
          if (e4 === void 0 && (e4 = "y"), this.options.clickOnTrack) {
            var i2 = Qa(this.el);
            this.axis[e4].scrollbar.rect = this.axis[e4].scrollbar.el.getBoundingClientRect();
            var a2 = this.axis[e4].scrollbar.rect[this.axis[e4].offsetAttr], r2 = parseInt(this.elStyles[this.axis[e4].sizeAttr], 10), o2 = this.contentWrapperEl[this.axis[e4].scrollOffsetAttr], s2 = (e4 === "y" ? this.mouseY - a2 : this.mouseX - a2) < 0 ? -1 : 1, l2 = s2 === -1 ? o2 - r2 : o2 + r2;
            !function t5() {
              var a3, r3;
              s2 === -1 ? o2 > l2 && (o2 -= n2.options.clickOnTrackSpeed, n2.contentWrapperEl.scrollTo(((a3 = {})[n2.axis[e4].offsetAttr] = o2, a3)), i2.requestAnimationFrame(t5)) : o2 < l2 && (o2 += n2.options.clickOnTrackSpeed, n2.contentWrapperEl.scrollTo(((r3 = {})[n2.axis[e4].offsetAttr] = o2, r3)), i2.requestAnimationFrame(t5));
            }();
          }
        }, e3.getContentElement = function() {
          return this.contentEl;
        }, e3.getScrollElement = function() {
          return this.contentWrapperEl;
        }, e3.getScrollbarWidth = function() {
          try {
            return getComputedStyle(this.contentWrapperEl, "::-webkit-scrollbar").display === "none" || "scrollbarWidth" in document.documentElement.style || "-ms-overflow-style" in document.documentElement.style ? 0 : nr(this.el);
          } catch (t4) {
            return nr(this.el);
          }
        }, e3.removeListeners = function() {
          var t4 = this, e4 = Qa(this.el);
          this.options.autoHide && this.el.removeEventListener("mouseenter", this.onMouseEnter), ["mousedown", "click", "dblclick"].forEach(function(e5) {
            t4.el.removeEventListener(e5, t4.onPointerEvent, true);
          }), ["touchstart", "touchend", "touchmove"].forEach(function(e5) {
            t4.el.removeEventListener(e5, t4.onPointerEvent, { capture: true, passive: true });
          }), this.el.removeEventListener("mousemove", this.onMouseMove), this.el.removeEventListener("mouseleave", this.onMouseLeave), this.contentWrapperEl && this.contentWrapperEl.removeEventListener("scroll", this.onScroll), e4.removeEventListener("resize", this.onWindowResize), this.mutationObserver && this.mutationObserver.disconnect(), this.resizeObserver && this.resizeObserver.disconnect(), this.recalculate.cancel(), this.onMouseMove.cancel(), this.hideScrollbars.cancel(), this.onWindowResize.cancel();
        }, e3.unMount = function() {
          this.removeListeners(), t3.instances.delete(this.el);
        }, e3.isWithinBounds = function(t4) {
          return this.mouseX >= t4.left && this.mouseX <= t4.left + t4.width && this.mouseY >= t4.top && this.mouseY <= t4.top + t4.height;
        }, e3.findChild = function(t4, e4) {
          var n2 = t4.matches || t4.webkitMatchesSelector || t4.mozMatchesSelector || t4.msMatchesSelector;
          return Array.prototype.filter.call(t4.children, function(t5) {
            return n2.call(t5, e4);
          })[0];
        }, t3;
      }();
      ir.defaultOptions = { autoHide: true, forceVisible: false, clickOnTrack: true, clickOnTrackSpeed: 40, classNames: { contentEl: "simplebar-content", contentWrapper: "simplebar-content-wrapper", offset: "simplebar-offset", mask: "simplebar-mask", wrapper: "simplebar-wrapper", placeholder: "simplebar-placeholder", scrollbar: "simplebar-scrollbar", track: "simplebar-track", heightAutoObserverWrapperEl: "simplebar-height-auto-observer-wrapper", heightAutoObserverEl: "simplebar-height-auto-observer", visible: "simplebar-visible", horizontal: "simplebar-horizontal", vertical: "simplebar-vertical", hover: "simplebar-hover", dragging: "simplebar-dragging" }, scrollbarMinSize: 25, scrollbarMaxSize: 0, timeout: 1e3 }, ir.instances = /* @__PURE__ */ new WeakMap(), ir.initDOMLoadedElements = function() {
        document.removeEventListener("DOMContentLoaded", this.initDOMLoadedElements), window.removeEventListener("load", this.initDOMLoadedElements), Array.prototype.forEach.call(document.querySelectorAll("[data-simplebar]"), function(t3) {
          t3.getAttribute("data-simplebar") === "init" || ir.instances.has(t3) || new ir(t3, Ka(t3.attributes));
        });
      }, ir.removeObserver = function() {
        this.globalObserver.disconnect();
      }, ir.initHtmlApi = function() {
        this.initDOMLoadedElements = this.initDOMLoadedElements.bind(this), typeof MutationObserver != "undefined" && (this.globalObserver = new MutationObserver(ir.handleMutations), this.globalObserver.observe(document, { childList: true, subtree: true })), document.readyState === "complete" || document.readyState !== "loading" && !document.documentElement.doScroll ? window.setTimeout(this.initDOMLoadedElements) : (document.addEventListener("DOMContentLoaded", this.initDOMLoadedElements), window.addEventListener("load", this.initDOMLoadedElements));
      }, ir.handleMutations = function(t3) {
        t3.forEach(function(t4) {
          Array.prototype.forEach.call(t4.addedNodes, function(t5) {
            t5.nodeType === 1 && (t5.hasAttribute("data-simplebar") ? !ir.instances.has(t5) && document.documentElement.contains(t5) && new ir(t5, Ka(t5.attributes)) : Array.prototype.forEach.call(t5.querySelectorAll("[data-simplebar]"), function(t6) {
              t6.getAttribute("data-simplebar") !== "init" && !ir.instances.has(t6) && document.documentElement.contains(t6) && new ir(t6, Ka(t6.attributes));
            }));
          }), Array.prototype.forEach.call(t4.removedNodes, function(t5) {
            t5.nodeType === 1 && (t5.getAttribute("data-simplebar") === "init" ? ir.instances.has(t5) && !document.documentElement.contains(t5) && ir.instances.get(t5).unMount() : Array.prototype.forEach.call(t5.querySelectorAll('[data-simplebar="init"]'), function(t6) {
              ir.instances.has(t6) && !document.documentElement.contains(t6) && ir.instances.get(t6).unMount();
            }));
          });
        });
      }, ir.getOptions = Ka, ra() && ir.initHtmlApi();
      var ar = ir;
      document.addEventListener("DOMContentLoaded", function() {
        if (document.getElementsByClassName("js-simplebar")[0]) {
          new ar(document.getElementsByClassName("js-simplebar")[0]);
          var t3 = document.getElementsByClassName("sidebar")[0];
          document.getElementsByClassName("sidebar-toggle")[0].addEventListener("click", function() {
            t3.classList.toggle("collapsed"), t3.addEventListener("transitionend", function() {
              window.dispatchEvent(new Event("resize"));
            });
          });
        }
      });
      var rr, or = function() {
        return or = Object.assign || function(t3) {
          for (var e3, n2 = 1, i2 = arguments.length; n2 < i2; n2++)
            for (var a2 in e3 = arguments[n2])
              Object.prototype.hasOwnProperty.call(e3, a2) && (t3[a2] = e3[a2]);
          return t3;
        }, or.apply(this, arguments);
      }, sr = function() {
        function t3(t4) {
          this.options = t4, this.listeners = {};
        }
        return t3.prototype.on = function(t4, e3) {
          var n2 = this.listeners[t4] || [];
          this.listeners[t4] = n2.concat([e3]);
        }, t3.prototype.triggerEvent = function(t4, e3) {
          var n2 = this;
          (this.listeners[t4] || []).forEach(function(t5) {
            return t5({ target: n2, event: e3 });
          });
        }, t3;
      }();
      !function(t3) {
        t3[t3.Add = 0] = "Add", t3[t3.Remove = 1] = "Remove";
      }(rr || (rr = {}));
      var lr, cr = function() {
        function t3() {
          this.notifications = [];
        }
        return t3.prototype.push = function(t4) {
          this.notifications.push(t4), this.updateFn(t4, rr.Add, this.notifications);
        }, t3.prototype.splice = function(t4, e3) {
          var n2 = this.notifications.splice(t4, e3)[0];
          return this.updateFn(n2, rr.Remove, this.notifications), n2;
        }, t3.prototype.indexOf = function(t4) {
          return this.notifications.indexOf(t4);
        }, t3.prototype.onUpdate = function(t4) {
          this.updateFn = t4;
        }, t3;
      }();
      !function(t3) {
        t3.Dismiss = "dismiss", t3.Click = "click";
      }(lr || (lr = {}));
      var dr = { types: [{ type: "success", className: "notyf__toast--success", backgroundColor: "#3dc763", icon: { className: "notyf__icon--success", tagName: "i" } }, { type: "error", className: "notyf__toast--error", backgroundColor: "#ed3d3d", icon: { className: "notyf__icon--error", tagName: "i" } }], duration: 2e3, ripple: true, position: { x: "right", y: "bottom" }, dismissible: false }, ur = function() {
        function t3() {
          this.notifications = [], this.events = {}, this.X_POSITION_FLEX_MAP = { left: "flex-start", center: "center", right: "flex-end" }, this.Y_POSITION_FLEX_MAP = { top: "flex-start", center: "center", bottom: "flex-end" };
          var t4 = document.createDocumentFragment(), e3 = this._createHTMLElement({ tagName: "div", className: "notyf" });
          t4.appendChild(e3), document.body.appendChild(t4), this.container = e3, this.animationEndEventName = this._getAnimationEndEventName(), this._createA11yContainer();
        }
        return t3.prototype.on = function(t4, e3) {
          var n2;
          this.events = or(or({}, this.events), ((n2 = {})[t4] = e3, n2));
        }, t3.prototype.update = function(t4, e3) {
          e3 === rr.Add ? this.addNotification(t4) : e3 === rr.Remove && this.removeNotification(t4);
        }, t3.prototype.removeNotification = function(t4) {
          var e3, n2, i2 = this, a2 = this._popRenderedNotification(t4);
          a2 && ((e3 = a2.node).classList.add("notyf__toast--disappear"), e3.addEventListener(this.animationEndEventName, n2 = function(t5) {
            t5.target === e3 && (e3.removeEventListener(i2.animationEndEventName, n2), i2.container.removeChild(e3));
          }));
        }, t3.prototype.addNotification = function(t4) {
          var e3 = this._renderNotification(t4);
          this.notifications.push({ notification: t4, node: e3 }), this._announce(t4.options.message || "Notification");
        }, t3.prototype._renderNotification = function(t4) {
          var e3, n2 = this._buildNotificationCard(t4), i2 = t4.options.className;
          return i2 && (e3 = n2.classList).add.apply(e3, i2.split(" ")), this.container.appendChild(n2), n2;
        }, t3.prototype._popRenderedNotification = function(t4) {
          for (var e3 = -1, n2 = 0; n2 < this.notifications.length && e3 < 0; n2++)
            this.notifications[n2].notification === t4 && (e3 = n2);
          if (e3 !== -1)
            return this.notifications.splice(e3, 1)[0];
        }, t3.prototype.getXPosition = function(t4) {
          var e3;
          return ((e3 = t4 == null ? void 0 : t4.position) === null || e3 === void 0 ? void 0 : e3.x) || "right";
        }, t3.prototype.getYPosition = function(t4) {
          var e3;
          return ((e3 = t4 == null ? void 0 : t4.position) === null || e3 === void 0 ? void 0 : e3.y) || "bottom";
        }, t3.prototype.adjustContainerAlignment = function(t4) {
          var e3 = this.X_POSITION_FLEX_MAP[this.getXPosition(t4)], n2 = this.Y_POSITION_FLEX_MAP[this.getYPosition(t4)], i2 = this.container.style;
          i2.setProperty("justify-content", n2), i2.setProperty("align-items", e3);
        }, t3.prototype._buildNotificationCard = function(t4) {
          var e3 = this, n2 = t4.options, i2 = n2.icon;
          this.adjustContainerAlignment(n2);
          var a2 = this._createHTMLElement({ tagName: "div", className: "notyf__toast" }), r2 = this._createHTMLElement({ tagName: "div", className: "notyf__ripple" }), o2 = this._createHTMLElement({ tagName: "div", className: "notyf__wrapper" }), s2 = this._createHTMLElement({ tagName: "div", className: "notyf__message" });
          s2.innerHTML = n2.message || "";
          var l2 = n2.background || n2.backgroundColor;
          if (i2) {
            var c2 = this._createHTMLElement({ tagName: "div", className: "notyf__icon" });
            if ((typeof i2 == "string" || i2 instanceof String) && (c2.innerHTML = new String(i2).valueOf()), typeof i2 == "object") {
              var d2 = i2.tagName, u2 = d2 === void 0 ? "i" : d2, h2 = i2.className, p2 = i2.text, f2 = i2.color, g2 = f2 === void 0 ? l2 : f2, m2 = this._createHTMLElement({ tagName: u2, className: h2, text: p2 });
              g2 && (m2.style.color = g2), c2.appendChild(m2);
            }
            o2.appendChild(c2);
          }
          if (o2.appendChild(s2), a2.appendChild(o2), l2 && (n2.ripple ? (r2.style.background = l2, a2.appendChild(r2)) : a2.style.background = l2), n2.dismissible) {
            var v2 = this._createHTMLElement({ tagName: "div", className: "notyf__dismiss" }), b2 = this._createHTMLElement({ tagName: "button", className: "notyf__dismiss-btn" });
            v2.appendChild(b2), o2.appendChild(v2), a2.classList.add("notyf__toast--dismissible"), b2.addEventListener("click", function(n3) {
              var i3, a3;
              (a3 = (i3 = e3.events)[lr.Dismiss]) === null || a3 === void 0 || a3.call(i3, { target: t4, event: n3 }), n3.stopPropagation();
            });
          }
          a2.addEventListener("click", function(n3) {
            var i3, a3;
            return (a3 = (i3 = e3.events)[lr.Click]) === null || a3 === void 0 ? void 0 : a3.call(i3, { target: t4, event: n3 });
          });
          var y2 = this.getYPosition(n2) === "top" ? "upper" : "lower";
          return a2.classList.add("notyf__toast--" + y2), a2;
        }, t3.prototype._createHTMLElement = function(t4) {
          var e3 = t4.tagName, n2 = t4.className, i2 = t4.text, a2 = document.createElement(e3);
          return n2 && (a2.className = n2), a2.textContent = i2 || null, a2;
        }, t3.prototype._createA11yContainer = function() {
          var t4 = this._createHTMLElement({ tagName: "div", className: "notyf-announcer" });
          t4.setAttribute("aria-atomic", "true"), t4.setAttribute("aria-live", "polite"), t4.style.border = "0", t4.style.clip = "rect(0 0 0 0)", t4.style.height = "1px", t4.style.margin = "-1px", t4.style.overflow = "hidden", t4.style.padding = "0", t4.style.position = "absolute", t4.style.width = "1px", t4.style.outline = "0", document.body.appendChild(t4), this.a11yContainer = t4;
        }, t3.prototype._announce = function(t4) {
          var e3 = this;
          this.a11yContainer.textContent = "", setTimeout(function() {
            e3.a11yContainer.textContent = t4;
          }, 100);
        }, t3.prototype._getAnimationEndEventName = function() {
          var t4, e3 = document.createElement("_fake"), n2 = { MozTransition: "animationend", OTransition: "oAnimationEnd", WebkitTransition: "webkitAnimationEnd", transition: "animationend" };
          for (t4 in n2)
            if (e3.style[t4] !== void 0)
              return n2[t4];
          return "animationend";
        }, t3;
      }(), hr = function() {
        function t3(t4) {
          var e3 = this;
          this.dismiss = this._removeNotification, this.notifications = new cr(), this.view = new ur();
          var n2 = this.registerTypes(t4);
          this.options = or(or({}, dr), t4), this.options.types = n2, this.notifications.onUpdate(function(t5, n3) {
            return e3.view.update(t5, n3);
          }), this.view.on(lr.Dismiss, function(t5) {
            var n3 = t5.target, i2 = t5.event;
            e3._removeNotification(n3), n3.triggerEvent(lr.Dismiss, i2);
          }), this.view.on(lr.Click, function(t5) {
            var e4 = t5.target, n3 = t5.event;
            return e4.triggerEvent(lr.Click, n3);
          });
        }
        return t3.prototype.error = function(t4) {
          var e3 = this.normalizeOptions("error", t4);
          return this.open(e3);
        }, t3.prototype.success = function(t4) {
          var e3 = this.normalizeOptions("success", t4);
          return this.open(e3);
        }, t3.prototype.open = function(t4) {
          var e3 = this.options.types.find(function(e4) {
            return e4.type === t4.type;
          }) || {}, n2 = or(or({}, e3), t4);
          this.assignProps(["ripple", "position", "dismissible"], n2);
          var i2 = new sr(n2);
          return this._pushNotification(i2), i2;
        }, t3.prototype.dismissAll = function() {
          for (; this.notifications.splice(0, 1); )
            ;
        }, t3.prototype.assignProps = function(t4, e3) {
          var n2 = this;
          t4.forEach(function(t5) {
            e3[t5] = e3[t5] == null ? n2.options[t5] : e3[t5];
          });
        }, t3.prototype._pushNotification = function(t4) {
          var e3 = this;
          this.notifications.push(t4);
          var n2 = t4.options.duration !== void 0 ? t4.options.duration : this.options.duration;
          n2 && setTimeout(function() {
            return e3._removeNotification(t4);
          }, n2);
        }, t3.prototype._removeNotification = function(t4) {
          var e3 = this.notifications.indexOf(t4);
          e3 !== -1 && this.notifications.splice(e3, 1);
        }, t3.prototype.normalizeOptions = function(t4, e3) {
          var n2 = { type: t4 };
          return typeof e3 == "string" ? n2.message = e3 : typeof e3 == "object" && (n2 = or(or({}, n2), e3)), n2;
        }, t3.prototype.registerTypes = function(t4) {
          var e3 = (t4 && t4.types || []).slice();
          return dr.types.map(function(t5) {
            var n2 = -1;
            e3.forEach(function(e4, i3) {
              e4.type === t5.type && (n2 = i3);
            });
            var i2 = n2 !== -1 ? e3.splice(n2, 1)[0] : {};
            return or(or({}, t5), i2);
          }).concat(e3);
        }, t3;
      }();
      window.notyf = new hr({ duration: 5e3, position: { x: "center", y: "center" }, dismissible: true, types: [{ type: "default", backgroundColor: "#3B7DDD", icon: { className: "notyf__icon--success", tagName: "i" } }, { type: "success", backgroundColor: "#28a745", icon: { className: "notyf__icon--success", tagName: "i" } }, { type: "warning", backgroundColor: "#ffc107", icon: { className: "notyf__icon--error", tagName: "i" } }, { type: "danger", backgroundColor: "#dc3545", icon: { className: "notyf__icon--error", tagName: "i" } }] });
      n(5002);
      var pr = n(7757), fr = n.n(pr);
      fr().defaults.global.defaultFontColor = window.theme["gray-600"], fr().defaults.global.defaultFontFamily = "'Poppins', 'Helvetica Neue', 'Helvetica', 'Arial', sans-serif", fr().elements.Rectangle.prototype.draw = function() {
        var t3, e3, n2, i2, a2, r2, o2, s2 = this._chart.ctx, l2 = this._view, c2 = l2.borderWidth;
        if (l2.horizontal ? (t3 = l2.base, e3 = l2.x, n2 = l2.y - l2.height / 2, i2 = l2.y + l2.height / 2, a2 = e3 > t3 ? 1 : -1, r2 = 1, o2 = l2.borderSkipped || "left") : (t3 = l2.x - l2.width / 2, e3 = l2.x + l2.width / 2, n2 = l2.y, a2 = 1, r2 = (i2 = l2.base) > n2 ? 1 : -1, o2 = l2.borderSkipped || "bottom"), c2) {
          var d2 = Math.min(Math.abs(t3 - e3), Math.abs(n2 - i2)), u2 = (c2 = c2 > d2 ? d2 : c2) / 2, h2 = t3 + (o2 !== "left" ? u2 * a2 : 0), p2 = e3 + (o2 !== "right" ? -u2 * a2 : 0), f2 = n2 + (o2 !== "top" ? u2 * r2 : 0), g2 = i2 + (o2 !== "bottom" ? -u2 * r2 : 0);
          h2 !== p2 && (n2 = f2, i2 = g2), f2 !== g2 && (t3 = h2, e3 = p2);
        }
        s2.beginPath(), s2.fillStyle = l2.backgroundColor, s2.strokeStyle = l2.borderColor, s2.lineWidth = c2;
        var m2 = [[t3, i2], [t3, n2], [e3, n2], [e3, i2]], v2 = ["bottom", "left", "top", "right"].indexOf(o2, 0);
        function b2(t4) {
          return m2[(v2 + t4) % 4];
        }
        v2 === -1 && (v2 = 0);
        var y2 = b2(0);
        s2.moveTo(y2[0], y2[1]);
        for (var x2 = 1; x2 < 4; x2++) {
          y2 = b2(x2);
          var _2 = m2[2][0] - m2[1][0], w2 = m2[0][1] - m2[1][1], S2 = m2[1][0], C2 = m2[1][1], k2 = 10;
          k2 > w2 / 2 && (k2 = w2 / 2), k2 > _2 / 2 && (k2 = _2 / 2);
          for (var D2 = 0, T2 = 0, E2 = this._chart.data.datasets.length; T2 < E2; T2++)
            this._chart.getDatasetMeta(T2).hidden || (D2 = T2);
          this._datasetIndex === D2 ? (s2.moveTo(S2 + k2, C2), s2.lineTo(S2 + _2 - k2, C2), s2.quadraticCurveTo(S2 + _2, C2, S2 + _2, C2 + k2), s2.lineTo(S2 + _2, C2 + w2), s2.lineTo(S2, C2 + w2), s2.lineTo(S2, C2 + k2), s2.quadraticCurveTo(S2, C2, S2 + k2, C2)) : (s2.moveTo(S2, C2), s2.lineTo(S2 + _2, C2), s2.lineTo(S2 + _2, C2 + w2), s2.lineTo(S2, C2 + w2), s2.lineTo(S2, C2));
        }
        s2.fill(), c2 && s2.stroke();
      }, window.Chart = fr();
      var gr = n(5927), mr = n.n(gr);
      window.ApexCharts = mr(), document.addEventListener("DOMContentLoaded", function() {
        window.Apex = { colors: [window.theme.primary, window.theme.success, window.theme.warning, window.theme.danger, window.theme.info], chart: { foreColor: window.theme["gray-600"] } }, setTimeout(function() {
          window.dispatchEvent(new Event("resize"));
        }, 250);
      });
      n(486), n(698);
      var vr = n(8942);
      vr.fn.datetimepicker.Constructor.Default = vr.extend({}, vr.fn.datetimepicker.Constructor.Default, { icons: { time: "far fa-clock", date: "far fa-calendar", up: "fas fa-arrow-up", down: "fas fa-arrow-down", previous: "fas fa-chevron-left", next: "fas fa-chevron-right", today: "far fa-calendar-check-o", clear: "fas fa-trash", close: "fas fa-times" } });
      n(1553), n(6145), n(278), n(9298);
      n(8942).fn.select2.defaults.set("theme", "bootstrap4");
      n(3587), n(9165), n(2760), n(1163), n(8439), n(7427), n(4268), n(5597), n(4387), n(1701), n(3029), n(4712), n(142), n(8314), n(4708);
    }();
  }();
})();
/*! For license information please see app.js.LICENSE.txt */
//# sourceMappingURL=appxxx.js.map
